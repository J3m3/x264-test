; ModuleID = 'x264_src/common/mc.c'
source_filename = "x264_src/common/mc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x264_weight_t = type { [8 x i16], [8 x i16], i32, i32, i32, ptr, [8 x i8] }

@weight_none = dso_local local_unnamed_addr constant [3 x %struct.x264_weight_t] [%struct.x264_weight_t { [8 x i16] zeroinitializer, [8 x i16] zeroinitializer, i32 0, i32 0, i32 0, ptr null, [8 x i8] undef }, %struct.x264_weight_t zeroinitializer, %struct.x264_weight_t zeroinitializer], align 16, !dbg !0
@x264_mc_weight_wtab = internal global [6 x ptr] [ptr @mc_weight_w2, ptr @mc_weight_w4, ptr @mc_weight_w8, ptr @mc_weight_w12, ptr @mc_weight_w16, ptr @mc_weight_w20], align 16, !dbg !38
@hpel_ref0 = internal unnamed_addr constant [16 x i8] c"\00\01\01\01\00\01\01\01\02\03\03\03\00\01\01\01", align 16, !dbg !26
@hpel_ref1 = internal unnamed_addr constant [16 x i8] c"\00\00\00\00\02\02\03\02\02\02\03\02\02\02\03\02", align 16, !dbg !36

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @x264_plane_copy_c(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst, ptr nocapture noundef readonly %src, i32 noundef %i_src, i32 noundef %w, i32 noundef %h) #0 !dbg !82 {
entry:
    #dbg_value(ptr %dst, !86, !DIExpression(), !92)
    #dbg_value(i32 %i_dst, !87, !DIExpression(), !92)
    #dbg_value(ptr %src, !88, !DIExpression(), !92)
    #dbg_value(i32 %i_src, !89, !DIExpression(), !92)
    #dbg_value(i32 %w, !90, !DIExpression(), !92)
    #dbg_value(i32 %h, !91, !DIExpression(), !92)
    #dbg_value(i32 %h, !91, !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value), !92)
  %tobool.not5 = icmp eq i32 %h, 0, !dbg !93
  br i1 %tobool.not5, label %while.end, label %while.body.lr.ph, !dbg !93

while.body.lr.ph:                                 ; preds = %entry
  %conv = sext i32 %w to i64
  %idx.ext = sext i32 %i_dst to i64
  %idx.ext1 = sext i32 %i_src to i64
  %xtraiter = and i32 %h, 3, !dbg !93
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0, !dbg !93
  br i1 %lcmp.mod.not, label %while.body.prol.loopexit, label %while.body.prol, !dbg !93

while.body.prol:                                  ; preds = %while.body.lr.ph, %while.body.prol
  %h.addr.08.prol = phi i32 [ %dec.prol, %while.body.prol ], [ %h, %while.body.lr.ph ]
  %dst.addr.07.prol = phi ptr [ %add.ptr.prol, %while.body.prol ], [ %dst, %while.body.lr.ph ]
  %src.addr.06.prol = phi ptr [ %add.ptr2.prol, %while.body.prol ], [ %src, %while.body.lr.ph ]
  %prol.iter = phi i32 [ %prol.iter.next, %while.body.prol ], [ 0, %while.body.lr.ph ]
    #dbg_value(i32 %h.addr.08.prol, !91, !DIExpression(), !92)
    #dbg_value(ptr %dst.addr.07.prol, !86, !DIExpression(), !92)
    #dbg_value(ptr %src.addr.06.prol, !88, !DIExpression(), !92)
  %dec.prol = add nsw i32 %h.addr.08.prol, -1, !dbg !94
    #dbg_value(i32 %dec.prol, !91, !DIExpression(), !92)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst.addr.07.prol, ptr align 1 %src.addr.06.prol, i64 %conv, i1 false), !dbg !95
  %add.ptr.prol = getelementptr inbounds i8, ptr %dst.addr.07.prol, i64 %idx.ext, !dbg !97
    #dbg_value(ptr %add.ptr.prol, !86, !DIExpression(), !92)
  %add.ptr2.prol = getelementptr inbounds i8, ptr %src.addr.06.prol, i64 %idx.ext1, !dbg !98
    #dbg_value(ptr %add.ptr2.prol, !88, !DIExpression(), !92)
    #dbg_value(i32 %dec.prol, !91, !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value), !92)
  %prol.iter.next = add i32 %prol.iter, 1, !dbg !93
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter, !dbg !93
  br i1 %prol.iter.cmp.not, label %while.body.prol.loopexit, label %while.body.prol, !dbg !93, !llvm.loop !99

while.body.prol.loopexit:                         ; preds = %while.body.prol, %while.body.lr.ph
  %h.addr.08.unr = phi i32 [ %h, %while.body.lr.ph ], [ %dec.prol, %while.body.prol ]
  %dst.addr.07.unr = phi ptr [ %dst, %while.body.lr.ph ], [ %add.ptr.prol, %while.body.prol ]
  %src.addr.06.unr = phi ptr [ %src, %while.body.lr.ph ], [ %add.ptr2.prol, %while.body.prol ]
  %0 = icmp ult i32 %h, 4, !dbg !93
  br i1 %0, label %while.end, label %while.body, !dbg !93

while.body:                                       ; preds = %while.body.prol.loopexit, %while.body
  %h.addr.08 = phi i32 [ %dec.3, %while.body ], [ %h.addr.08.unr, %while.body.prol.loopexit ]
  %dst.addr.07 = phi ptr [ %add.ptr.3, %while.body ], [ %dst.addr.07.unr, %while.body.prol.loopexit ]
  %src.addr.06 = phi ptr [ %add.ptr2.3, %while.body ], [ %src.addr.06.unr, %while.body.prol.loopexit ]
    #dbg_value(i32 %h.addr.08, !91, !DIExpression(), !92)
    #dbg_value(ptr %dst.addr.07, !86, !DIExpression(), !92)
    #dbg_value(ptr %src.addr.06, !88, !DIExpression(), !92)
    #dbg_value(i32 %h.addr.08, !91, !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value), !92)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst.addr.07, ptr align 1 %src.addr.06, i64 %conv, i1 false), !dbg !95
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.07, i64 %idx.ext, !dbg !97
    #dbg_value(ptr %add.ptr, !86, !DIExpression(), !92)
  %add.ptr2 = getelementptr inbounds i8, ptr %src.addr.06, i64 %idx.ext1, !dbg !98
    #dbg_value(ptr %add.ptr2, !88, !DIExpression(), !92)
    #dbg_value(i32 %h.addr.08, !91, !DIExpression(DW_OP_constu, 2, DW_OP_minus, DW_OP_stack_value), !92)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 1 %add.ptr2, i64 %conv, i1 false), !dbg !95
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !97
    #dbg_value(ptr %add.ptr.1, !86, !DIExpression(), !92)
  %add.ptr2.1 = getelementptr inbounds i8, ptr %add.ptr2, i64 %idx.ext1, !dbg !98
    #dbg_value(ptr %add.ptr2.1, !88, !DIExpression(), !92)
    #dbg_value(i32 %h.addr.08, !91, !DIExpression(DW_OP_constu, 3, DW_OP_minus, DW_OP_stack_value), !92)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr.1, ptr align 1 %add.ptr2.1, i64 %conv, i1 false), !dbg !95
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !97
    #dbg_value(ptr %add.ptr.2, !86, !DIExpression(), !92)
  %add.ptr2.2 = getelementptr inbounds i8, ptr %add.ptr2.1, i64 %idx.ext1, !dbg !98
    #dbg_value(ptr %add.ptr2.2, !88, !DIExpression(), !92)
  %dec.3 = add nsw i32 %h.addr.08, -4, !dbg !94
    #dbg_value(i32 %dec.3, !91, !DIExpression(), !92)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr.2, ptr align 1 %add.ptr2.2, i64 %conv, i1 false), !dbg !95
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !97
    #dbg_value(ptr %add.ptr.3, !86, !DIExpression(), !92)
  %add.ptr2.3 = getelementptr inbounds i8, ptr %add.ptr2.2, i64 %idx.ext1, !dbg !98
    #dbg_value(ptr %add.ptr2.3, !88, !DIExpression(), !92)
    #dbg_value(i32 %dec.3, !91, !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value), !92)
  %tobool.not.3 = icmp eq i32 %dec.3, 0, !dbg !93
  br i1 %tobool.not.3, label %while.end, label %while.body, !dbg !93, !llvm.loop !101

while.end:                                        ; preds = %while.body.prol.loopexit, %while.body, %entry
  ret void, !dbg !103
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind uwtable
define dso_local void @x264_frame_init_lowres(ptr nocapture noundef readonly %h, ptr noundef %frame) local_unnamed_addr #2 !dbg !104 {
entry:
    #dbg_value(ptr %h, !1376, !DIExpression(), !1394)
    #dbg_value(ptr %frame, !1377, !DIExpression(), !1394)
  %plane = getelementptr inbounds i8, ptr %frame, i64 152, !dbg !1395
  %0 = load ptr, ptr %plane, align 8, !dbg !1396
    #dbg_value(ptr %0, !1378, !DIExpression(), !1394)
  %i_stride1 = getelementptr inbounds i8, ptr %frame, i64 104, !dbg !1397
  %1 = load i32, ptr %i_stride1, align 8, !dbg !1398
    #dbg_value(i32 %1, !1379, !DIExpression(), !1394)
  %i_lines = getelementptr inbounds i8, ptr %frame, i64 128, !dbg !1399
  %2 = load i32, ptr %i_lines, align 16, !dbg !1400
    #dbg_value(i32 %2, !1380, !DIExpression(), !1394)
  %i_width4 = getelementptr inbounds i8, ptr %frame, i64 116, !dbg !1401
  %3 = load i32, ptr %i_width4, align 4, !dbg !1402
    #dbg_value(i32 %3, !1381, !DIExpression(), !1394)
    #dbg_value(i32 0, !1382, !DIExpression(), !1403)
  %cmp120 = icmp sgt i32 %2, 0, !dbg !1404
  br i1 %cmp120, label %for.body.lver.check, label %for.cond.cleanup, !dbg !1406

for.body.lver.check:                              ; preds = %entry
  %4 = sext i32 %1 to i64, !dbg !1406
  %5 = sext i32 %3 to i64, !dbg !1406
  %wide.trip.count = zext nneg i32 %2 to i64, !dbg !1404
  %6 = sext i32 %3 to i64
  %invariant.gep = getelementptr i8, ptr %0, i64 %6, !dbg !1406
  %invariant.gep155 = getelementptr i8, ptr %invariant.gep, i64 -1, !dbg !1406
  %invariant.gep157 = getelementptr i8, ptr %0, i64 %5, !dbg !1406
  %ident.check.not = icmp eq i32 %1, 1, !dbg !1406
  br i1 %ident.check.not, label %for.body.ph, label %for.body.lver.orig.preheader, !dbg !1406

for.body.lver.orig.preheader:                     ; preds = %for.body.lver.check
  %xtraiter = and i64 %wide.trip.count, 3, !dbg !1406
  %7 = icmp ult i32 %2, 4, !dbg !1406
  br i1 %7, label %for.cond.cleanup.loopexit165.unr-lcssa, label %for.body.lver.orig.preheader.new, !dbg !1406

for.body.lver.orig.preheader.new:                 ; preds = %for.body.lver.orig.preheader
  %unroll_iter = and i64 %wide.trip.count, 2147483644, !dbg !1406
  br label %for.body.lver.orig, !dbg !1406

for.body.lver.orig:                               ; preds = %for.body.lver.orig, %for.body.lver.orig.preheader.new
  %indvars.iv.lver.orig = phi i64 [ 0, %for.body.lver.orig.preheader.new ], [ %indvars.iv.next.lver.orig.3, %for.body.lver.orig ]
  %niter = phi i64 [ 0, %for.body.lver.orig.preheader.new ], [ %niter.next.3, %for.body.lver.orig ]
    #dbg_value(i64 %indvars.iv.lver.orig, !1382, !DIExpression(), !1403)
  %8 = mul nsw i64 %indvars.iv.lver.orig, %4, !dbg !1407
  %gep156.lver.orig = getelementptr i8, ptr %invariant.gep155, i64 %8, !dbg !1408
  %9 = load i8, ptr %gep156.lver.orig, align 1, !dbg !1408
  %gep.lver.orig = getelementptr i8, ptr %invariant.gep157, i64 %8, !dbg !1409
  store i8 %9, ptr %gep.lver.orig, align 1, !dbg !1410
  %indvars.iv.next.lver.orig = or disjoint i64 %indvars.iv.lver.orig, 1, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.lver.orig, !1382, !DIExpression(), !1403)
  %10 = mul nsw i64 %indvars.iv.next.lver.orig, %4, !dbg !1407
  %gep156.lver.orig.1 = getelementptr i8, ptr %invariant.gep155, i64 %10, !dbg !1408
  %11 = load i8, ptr %gep156.lver.orig.1, align 1, !dbg !1408
  %gep.lver.orig.1 = getelementptr i8, ptr %invariant.gep157, i64 %10, !dbg !1409
  store i8 %11, ptr %gep.lver.orig.1, align 1, !dbg !1410
  %indvars.iv.next.lver.orig.1 = or disjoint i64 %indvars.iv.lver.orig, 2, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.lver.orig.1, !1382, !DIExpression(), !1403)
  %12 = mul nsw i64 %indvars.iv.next.lver.orig.1, %4, !dbg !1407
  %gep156.lver.orig.2 = getelementptr i8, ptr %invariant.gep155, i64 %12, !dbg !1408
  %13 = load i8, ptr %gep156.lver.orig.2, align 1, !dbg !1408
  %gep.lver.orig.2 = getelementptr i8, ptr %invariant.gep157, i64 %12, !dbg !1409
  store i8 %13, ptr %gep.lver.orig.2, align 1, !dbg !1410
  %indvars.iv.next.lver.orig.2 = or disjoint i64 %indvars.iv.lver.orig, 3, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.lver.orig.2, !1382, !DIExpression(), !1403)
  %14 = mul nsw i64 %indvars.iv.next.lver.orig.2, %4, !dbg !1407
  %gep156.lver.orig.3 = getelementptr i8, ptr %invariant.gep155, i64 %14, !dbg !1408
  %15 = load i8, ptr %gep156.lver.orig.3, align 1, !dbg !1408
  %gep.lver.orig.3 = getelementptr i8, ptr %invariant.gep157, i64 %14, !dbg !1409
  store i8 %15, ptr %gep.lver.orig.3, align 1, !dbg !1410
  %indvars.iv.next.lver.orig.3 = add nuw nsw i64 %indvars.iv.lver.orig, 4, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.lver.orig.3, !1382, !DIExpression(), !1403)
  %niter.next.3 = add i64 %niter, 4, !dbg !1406
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1406
  br i1 %niter.ncmp.3, label %for.cond.cleanup.loopexit165.unr-lcssa, label %for.body.lver.orig, !dbg !1406, !llvm.loop !1412

for.body.ph:                                      ; preds = %for.body.lver.check
  %load_initial = load i8, ptr %invariant.gep155, align 1
  %xtraiter166 = and i64 %wide.trip.count, 3, !dbg !1406
  %16 = icmp ult i32 %2, 4, !dbg !1406
  br i1 %16, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.ph.new, !dbg !1406

for.body.ph.new:                                  ; preds = %for.body.ph
  %unroll_iter169 = and i64 %wide.trip.count, 2147483644, !dbg !1406
  br label %for.body, !dbg !1406

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod168.not = icmp eq i64 %xtraiter166, 0, !dbg !1406
  br i1 %lcmp.mod168.not, label %for.cond.cleanup, label %for.body.epil, !dbg !1406

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter167 = phi i64 [ %epil.iter167.next, %for.body.epil ], [ 0, %for.cond.cleanup.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1382, !DIExpression(), !1403)
  %17 = mul nuw nsw i64 %indvars.iv.epil, %4, !dbg !1407
  %gep.epil = getelementptr i8, ptr %invariant.gep157, i64 %17, !dbg !1409
  store i8 %load_initial, ptr %gep.epil, align 1, !dbg !1410
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.epil, !1382, !DIExpression(), !1403)
  %epil.iter167.next = add i64 %epil.iter167, 1, !dbg !1406
  %epil.iter167.cmp.not = icmp eq i64 %epil.iter167.next, %xtraiter166, !dbg !1406
  br i1 %epil.iter167.cmp.not, label %for.cond.cleanup, label %for.body.epil, !dbg !1406, !llvm.loop !1414

for.cond.cleanup.loopexit165.unr-lcssa:           ; preds = %for.body.lver.orig, %for.body.lver.orig.preheader
  %indvars.iv.lver.orig.unr = phi i64 [ 0, %for.body.lver.orig.preheader ], [ %indvars.iv.next.lver.orig.3, %for.body.lver.orig ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1406
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.lver.orig.epil, !dbg !1406

for.body.lver.orig.epil:                          ; preds = %for.cond.cleanup.loopexit165.unr-lcssa, %for.body.lver.orig.epil
  %indvars.iv.lver.orig.epil = phi i64 [ %indvars.iv.next.lver.orig.epil, %for.body.lver.orig.epil ], [ %indvars.iv.lver.orig.unr, %for.cond.cleanup.loopexit165.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.lver.orig.epil ], [ 0, %for.cond.cleanup.loopexit165.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.lver.orig.epil, !1382, !DIExpression(), !1403)
  %18 = mul nsw i64 %indvars.iv.lver.orig.epil, %4, !dbg !1407
  %gep156.lver.orig.epil = getelementptr i8, ptr %invariant.gep155, i64 %18, !dbg !1408
  %19 = load i8, ptr %gep156.lver.orig.epil, align 1, !dbg !1408
  %gep.lver.orig.epil = getelementptr i8, ptr %invariant.gep157, i64 %18, !dbg !1409
  store i8 %19, ptr %gep.lver.orig.epil, align 1, !dbg !1410
  %indvars.iv.next.lver.orig.epil = add nuw nsw i64 %indvars.iv.lver.orig.epil, 1, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.lver.orig.epil, !1382, !DIExpression(), !1403)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1406
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1406
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup, label %for.body.lver.orig.epil, !dbg !1406, !llvm.loop !1415

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit165.unr-lcssa, %for.body.lver.orig.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil, %entry
  %mul11 = mul nsw i32 %2, %1, !dbg !1416
  %idx.ext = sext i32 %mul11 to i64, !dbg !1417
  %add.ptr = getelementptr inbounds i8, ptr %0, i64 %idx.ext, !dbg !1417
  %sub12 = add nsw i32 %2, -1, !dbg !1418
  %mul13 = mul nsw i32 %sub12, %1, !dbg !1419
  %idx.ext14 = sext i32 %mul13 to i64, !dbg !1420
  %add.ptr15 = getelementptr inbounds i8, ptr %0, i64 %idx.ext14, !dbg !1420
  %add16 = add nsw i32 %3, 1, !dbg !1421
  %conv = sext i32 %add16 to i64, !dbg !1422
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr, ptr align 1 %add.ptr15, i64 %conv, i1 false), !dbg !1423
  %frame_init_lowres_core = getelementptr inbounds i8, ptr %h, i64 32864, !dbg !1424
  %20 = load ptr, ptr %frame_init_lowres_core, align 8, !dbg !1424
  %lowres = getelementptr inbounds i8, ptr %frame, i64 208, !dbg !1425
  %21 = load ptr, ptr %lowres, align 16, !dbg !1426
  %arrayidx19 = getelementptr inbounds i8, ptr %frame, i64 216, !dbg !1427
  %22 = load ptr, ptr %arrayidx19, align 8, !dbg !1427
  %arrayidx21 = getelementptr inbounds i8, ptr %frame, i64 224, !dbg !1428
  %23 = load ptr, ptr %arrayidx21, align 16, !dbg !1428
  %arrayidx23 = getelementptr inbounds i8, ptr %frame, i64 232, !dbg !1429
  %24 = load ptr, ptr %arrayidx23, align 8, !dbg !1429
  %i_stride_lowres = getelementptr inbounds i8, ptr %frame, i64 140, !dbg !1430
  %25 = load i32, ptr %i_stride_lowres, align 4, !dbg !1430
  %i_width_lowres = getelementptr inbounds i8, ptr %frame, i64 144, !dbg !1431
  %26 = load i32, ptr %i_width_lowres, align 16, !dbg !1431
  %i_lines_lowres = getelementptr inbounds i8, ptr %frame, i64 148, !dbg !1432
  %27 = load i32, ptr %i_lines_lowres, align 4, !dbg !1432
  tail call void %20(ptr noundef %0, ptr noundef %21, ptr noundef %22, ptr noundef %23, ptr noundef %24, i32 noundef %1, i32 noundef %25, i32 noundef %26, i32 noundef %27) #13, !dbg !1433
  tail call void @x264_frame_expand_border_lowres(ptr noundef %frame) #13, !dbg !1434
  %i_cost_est = getelementptr inbounds i8, ptr %frame, i64 6868, !dbg !1435
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1296) %i_cost_est, i8 -1, i64 1296, i1 false), !dbg !1436
    #dbg_value(i32 0, !1384, !DIExpression(), !1437)
  %i_bframe = getelementptr inbounds i8, ptr %h, i64 100
  %28 = load i32, ptr %i_bframe, align 4, !dbg !1438
  %cmp27126 = icmp sgt i32 %28, -2, !dbg !1439
  br i1 %cmp27126, label %for.cond31.preheader.preheader, label %for.cond.cleanup57, !dbg !1440

for.cond31.preheader.preheader:                   ; preds = %for.cond.cleanup
  %i_row_satds = getelementptr inbounds i8, ptr %frame, i64 9536
  br label %for.cond31.preheader, !dbg !1440

for.body:                                         ; preds = %for.body, %for.body.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter170 = phi i64 [ 0, %for.body.ph.new ], [ %niter170.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1382, !DIExpression(), !1403)
  %29 = mul nuw nsw i64 %indvars.iv, %4, !dbg !1407
  %gep = getelementptr i8, ptr %invariant.gep157, i64 %29, !dbg !1409
  store i8 %load_initial, ptr %gep, align 1, !dbg !1410
  %indvars.iv.next = or disjoint i64 %indvars.iv, 1, !dbg !1411
    #dbg_value(i64 %indvars.iv.next, !1382, !DIExpression(), !1403)
  %30 = mul nuw nsw i64 %indvars.iv.next, %4, !dbg !1407
  %gep.1 = getelementptr i8, ptr %invariant.gep157, i64 %30, !dbg !1409
  store i8 %load_initial, ptr %gep.1, align 1, !dbg !1410
  %indvars.iv.next.1 = or disjoint i64 %indvars.iv, 2, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.1, !1382, !DIExpression(), !1403)
  %31 = mul nuw nsw i64 %indvars.iv.next.1, %4, !dbg !1407
  %gep.2 = getelementptr i8, ptr %invariant.gep157, i64 %31, !dbg !1409
  store i8 %load_initial, ptr %gep.2, align 1, !dbg !1410
  %indvars.iv.next.2 = or disjoint i64 %indvars.iv, 3, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.2, !1382, !DIExpression(), !1403)
  %32 = mul nuw nsw i64 %indvars.iv.next.2, %4, !dbg !1407
  %gep.3 = getelementptr i8, ptr %invariant.gep157, i64 %32, !dbg !1409
  store i8 %load_initial, ptr %gep.3, align 1, !dbg !1410
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1411
    #dbg_value(i64 %indvars.iv.next.3, !1382, !DIExpression(), !1403)
  %niter170.next.3 = add i64 %niter170, 4, !dbg !1406
  %niter170.ncmp.3 = icmp eq i64 %niter170.next.3, %unroll_iter169, !dbg !1406
  br i1 %niter170.ncmp.3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !dbg !1406, !llvm.loop !1412

for.cond31.preheader:                             ; preds = %for.cond31.preheader.preheader, %for.cond.cleanup37
  %33 = phi i32 [ %28, %for.cond31.preheader.preheader ], [ %35, %for.cond.cleanup37 ]
  %indvars.iv142 = phi i64 [ 0, %for.cond31.preheader.preheader ], [ %indvars.iv.next143, %for.cond.cleanup37 ]
    #dbg_value(i64 %indvars.iv142, !1384, !DIExpression(), !1437)
    #dbg_value(i32 0, !1386, !DIExpression(), !1441)
  %cmp35123 = icmp sgt i32 %33, -2, !dbg !1442
  br i1 %cmp35123, label %for.body38, label %for.cond31.preheader.for.cond.cleanup37_crit_edge, !dbg !1444

for.cond31.preheader.for.cond.cleanup37_crit_edge: ; preds = %for.cond31.preheader
  %.pre = sext i32 %33 to i64, !dbg !1439
  br label %for.cond.cleanup37, !dbg !1444

for.cond51.preheader:                             ; preds = %for.cond.cleanup37
    #dbg_value(i32 0, !1389, !DIExpression(), !1445)
  %lowres_mvs = getelementptr inbounds i8, ptr %frame, i64 3576
  %34 = icmp slt i32 %35, 0, !dbg !1446
  br i1 %34, label %for.cond.cleanup57, label %for.body66

for.cond.cleanup37:                               ; preds = %for.body38, %for.cond31.preheader.for.cond.cleanup37_crit_edge
  %.pre-phi = phi i64 [ %.pre, %for.cond31.preheader.for.cond.cleanup37_crit_edge ], [ %38, %for.body38 ], !dbg !1439
  %35 = phi i32 [ %33, %for.cond31.preheader.for.cond.cleanup37_crit_edge ], [ %37, %for.body38 ], !dbg !1438
  %indvars.iv.next143 = add nuw nsw i64 %indvars.iv142, 1, !dbg !1448
    #dbg_value(i64 %indvars.iv.next143, !1384, !DIExpression(), !1437)
  %cmp27.not = icmp sgt i64 %indvars.iv142, %.pre-phi, !dbg !1439
  br i1 %cmp27.not, label %for.cond51.preheader, label %for.cond31.preheader, !dbg !1440, !llvm.loop !1449

for.body38:                                       ; preds = %for.cond31.preheader, %for.body38
  %indvars.iv139 = phi i64 [ %indvars.iv.next140, %for.body38 ], [ 0, %for.cond31.preheader ]
    #dbg_value(i64 %indvars.iv139, !1386, !DIExpression(), !1441)
  %arrayidx42 = getelementptr inbounds [18 x [18 x ptr]], ptr %i_row_satds, i64 0, i64 %indvars.iv142, i64 %indvars.iv139, !dbg !1452
  %36 = load ptr, ptr %arrayidx42, align 8, !dbg !1452
  store i32 -1, ptr %36, align 4, !dbg !1453
  %indvars.iv.next140 = add nuw nsw i64 %indvars.iv139, 1, !dbg !1454
    #dbg_value(i64 %indvars.iv.next140, !1386, !DIExpression(), !1441)
  %37 = load i32, ptr %i_bframe, align 4, !dbg !1455
  %38 = sext i32 %37 to i64, !dbg !1442
  %cmp35.not = icmp sgt i64 %indvars.iv139, %38, !dbg !1442
  br i1 %cmp35.not, label %for.cond.cleanup37, label %for.body38, !dbg !1444, !llvm.loop !1456

for.cond.cleanup57:                               ; preds = %for.body66.1, %for.cond.cleanup65, %for.cond.cleanup, %for.cond51.preheader
  ret void, !dbg !1458

for.cond.cleanup65:                               ; preds = %for.body66
    #dbg_value(i64 0, !1389, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1445)
  %tobool.not = icmp eq i32 %43, 0, !dbg !1459
    #dbg_value(i64 1, !1389, !DIExpression(), !1445)
    #dbg_value(i32 0, !1391, !DIExpression(), !1460)
  %cmp63.not128.1 = icmp slt i32 %43, 0
  %or.cond = or i1 %tobool.not, %cmp63.not128.1, !dbg !1461
  br i1 %or.cond, label %for.cond.cleanup57, label %for.body66.1, !dbg !1461, !llvm.loop !1462

for.body66.1:                                     ; preds = %for.cond.cleanup65, %for.body66.1
  %indvars.iv145.1 = phi i64 [ %indvars.iv.next146.1, %for.body66.1 ], [ 0, %for.cond.cleanup65 ]
    #dbg_value(i64 %indvars.iv145.1, !1391, !DIExpression(), !1460)
  %arrayidx70.1 = getelementptr inbounds [2 x [17 x ptr]], ptr %lowres_mvs, i64 0, i64 1, i64 %indvars.iv145.1, !dbg !1464
  %39 = load ptr, ptr %arrayidx70.1, align 8, !dbg !1464
  store i16 32767, ptr %39, align 2, !dbg !1465
  %indvars.iv.next146.1 = add nuw nsw i64 %indvars.iv145.1, 1, !dbg !1466
    #dbg_value(i64 %indvars.iv.next146.1, !1391, !DIExpression(), !1460)
  %40 = load i32, ptr %i_bframe, align 4, !dbg !1467
  %41 = sext i32 %40 to i64, !dbg !1446
  %cmp63.not.not.1 = icmp slt i64 %indvars.iv145.1, %41, !dbg !1446
  br i1 %cmp63.not.not.1, label %for.body66.1, label %for.cond.cleanup57, !dbg !1468, !llvm.loop !1469

for.body66:                                       ; preds = %for.cond51.preheader, %for.body66
  %indvars.iv145 = phi i64 [ %indvars.iv.next146, %for.body66 ], [ 0, %for.cond51.preheader ]
    #dbg_value(i64 %indvars.iv145, !1391, !DIExpression(), !1460)
  %arrayidx70 = getelementptr inbounds [2 x [17 x ptr]], ptr %lowres_mvs, i64 0, i64 0, i64 %indvars.iv145, !dbg !1464
  %42 = load ptr, ptr %arrayidx70, align 8, !dbg !1464
  store i16 32767, ptr %42, align 2, !dbg !1465
  %indvars.iv.next146 = add nuw nsw i64 %indvars.iv145, 1, !dbg !1466
    #dbg_value(i64 %indvars.iv.next146, !1391, !DIExpression(), !1460)
  %43 = load i32, ptr %i_bframe, align 4, !dbg !1467
  %44 = sext i32 %43 to i64, !dbg !1446
  %cmp63.not.not = icmp slt i64 %indvars.iv145, %44, !dbg !1446
  br i1 %cmp63.not.not, label %for.body66, label %for.cond.cleanup65, !dbg !1468, !llvm.loop !1469
}

declare !dbg !1471 void @x264_frame_expand_border_lowres(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @x264_mc_init(i32 noundef %cpu, ptr nocapture noundef writeonly %pf) local_unnamed_addr #5 !dbg !1474 {
entry:
    #dbg_value(i32 %cpu, !1479, !DIExpression(), !1481)
    #dbg_value(ptr %pf, !1480, !DIExpression(), !1481)
  store ptr @mc_luma, ptr %pf, align 8, !dbg !1482
  %get_ref = getelementptr inbounds i8, ptr %pf, i64 8, !dbg !1483
  store ptr @get_ref, ptr %get_ref, align 8, !dbg !1484
  %mc_chroma = getelementptr inbounds i8, ptr %pf, i64 16, !dbg !1485
  store ptr @mc_chroma, ptr %mc_chroma, align 8, !dbg !1486
  %avg = getelementptr inbounds i8, ptr %pf, i64 24, !dbg !1487
  store ptr @pixel_avg_16x16, ptr %avg, align 8, !dbg !1488
  %arrayidx2 = getelementptr inbounds i8, ptr %pf, i64 32, !dbg !1489
  store ptr @pixel_avg_16x8, ptr %arrayidx2, align 8, !dbg !1490
  %arrayidx4 = getelementptr inbounds i8, ptr %pf, i64 40, !dbg !1491
  store ptr @pixel_avg_8x16, ptr %arrayidx4, align 8, !dbg !1492
  %arrayidx6 = getelementptr inbounds i8, ptr %pf, i64 48, !dbg !1493
  store ptr @pixel_avg_8x8, ptr %arrayidx6, align 8, !dbg !1494
  %arrayidx8 = getelementptr inbounds i8, ptr %pf, i64 56, !dbg !1495
  store ptr @pixel_avg_8x4, ptr %arrayidx8, align 8, !dbg !1496
  %arrayidx10 = getelementptr inbounds i8, ptr %pf, i64 64, !dbg !1497
  store ptr @pixel_avg_4x8, ptr %arrayidx10, align 8, !dbg !1498
  %arrayidx12 = getelementptr inbounds i8, ptr %pf, i64 72, !dbg !1499
  store ptr @pixel_avg_4x4, ptr %arrayidx12, align 8, !dbg !1500
  %arrayidx14 = getelementptr inbounds i8, ptr %pf, i64 80, !dbg !1501
  store ptr @pixel_avg_4x2, ptr %arrayidx14, align 8, !dbg !1502
  %arrayidx16 = getelementptr inbounds i8, ptr %pf, i64 88, !dbg !1503
  store ptr @pixel_avg_2x4, ptr %arrayidx16, align 8, !dbg !1504
  %arrayidx18 = getelementptr inbounds i8, ptr %pf, i64 96, !dbg !1505
  store ptr @pixel_avg_2x2, ptr %arrayidx18, align 8, !dbg !1506
  %weight = getelementptr inbounds i8, ptr %pf, i64 256, !dbg !1507
  store ptr @x264_mc_weight_wtab, ptr %weight, align 8, !dbg !1508
  %offsetadd = getelementptr inbounds i8, ptr %pf, i64 264, !dbg !1509
  store ptr @x264_mc_weight_wtab, ptr %offsetadd, align 8, !dbg !1510
  %offsetsub = getelementptr inbounds i8, ptr %pf, i64 272, !dbg !1511
  store ptr @x264_mc_weight_wtab, ptr %offsetsub, align 8, !dbg !1512
  %weight_cache = getelementptr inbounds i8, ptr %pf, i64 280, !dbg !1513
  store ptr @x264_weight_cache, ptr %weight_cache, align 8, !dbg !1514
  %copy_16x16_unaligned = getelementptr inbounds i8, ptr %pf, i64 160, !dbg !1515
  store ptr @mc_copy_w16, ptr %copy_16x16_unaligned, align 8, !dbg !1516
  %copy = getelementptr inbounds i8, ptr %pf, i64 104, !dbg !1517
  store ptr @mc_copy_w16, ptr %copy, align 8, !dbg !1518
  %arrayidx21 = getelementptr inbounds i8, ptr %pf, i64 128, !dbg !1519
  store ptr @mc_copy_w8, ptr %arrayidx21, align 8, !dbg !1520
  %arrayidx23 = getelementptr inbounds i8, ptr %pf, i64 152, !dbg !1521
  store ptr @mc_copy_w4, ptr %arrayidx23, align 8, !dbg !1522
  %plane_copy = getelementptr inbounds i8, ptr %pf, i64 168, !dbg !1523
  store ptr @x264_plane_copy_c, ptr %plane_copy, align 8, !dbg !1524
  %hpel_filter = getelementptr inbounds i8, ptr %pf, i64 176, !dbg !1525
  store ptr @hpel_filter, ptr %hpel_filter, align 8, !dbg !1526
  %prefetch_fenc = getelementptr inbounds i8, ptr %pf, i64 184, !dbg !1527
  store ptr @prefetch_fenc_null, ptr %prefetch_fenc, align 8, !dbg !1528
  %prefetch_ref = getelementptr inbounds i8, ptr %pf, i64 192, !dbg !1529
  store ptr @prefetch_ref_null, ptr %prefetch_ref, align 8, !dbg !1530
  %memcpy_aligned = getelementptr inbounds i8, ptr %pf, i64 200, !dbg !1531
  store ptr @memcpy, ptr %memcpy_aligned, align 8, !dbg !1532
  %memzero_aligned = getelementptr inbounds i8, ptr %pf, i64 208, !dbg !1533
  store ptr @memzero_aligned, ptr %memzero_aligned, align 8, !dbg !1534
  %frame_init_lowres_core = getelementptr inbounds i8, ptr %pf, i64 248, !dbg !1535
  store ptr @frame_init_lowres_core, ptr %frame_init_lowres_core, align 8, !dbg !1536
  %integral_init4h = getelementptr inbounds i8, ptr %pf, i64 216, !dbg !1537
  store ptr @integral_init4h, ptr %integral_init4h, align 8, !dbg !1538
  %integral_init8h = getelementptr inbounds i8, ptr %pf, i64 224, !dbg !1539
  store ptr @integral_init8h, ptr %integral_init8h, align 8, !dbg !1540
  %integral_init4v = getelementptr inbounds i8, ptr %pf, i64 232, !dbg !1541
  store ptr @integral_init4v, ptr %integral_init4v, align 8, !dbg !1542
  %integral_init8v = getelementptr inbounds i8, ptr %pf, i64 240, !dbg !1543
  store ptr @integral_init8v, ptr %integral_init8v, align 8, !dbg !1544
  %mbtree_propagate_cost = getelementptr inbounds i8, ptr %pf, i64 288, !dbg !1545
  store ptr @mbtree_propagate_cost, ptr %mbtree_propagate_cost, align 8, !dbg !1546
  ret void, !dbg !1547
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_luma(ptr nocapture noundef %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, i32 noundef %mvx, i32 noundef %mvy, i32 noundef %i_width, i32 noundef %i_height, ptr nocapture noundef readonly %weight) #0 !dbg !1548 {
entry:
    #dbg_value(ptr %dst, !1550, !DIExpression(), !1565)
    #dbg_value(i32 %i_dst_stride, !1551, !DIExpression(), !1565)
    #dbg_value(ptr %src, !1552, !DIExpression(), !1565)
    #dbg_value(i32 %i_src_stride, !1553, !DIExpression(), !1565)
    #dbg_value(i32 %mvx, !1554, !DIExpression(), !1565)
    #dbg_value(i32 %mvy, !1555, !DIExpression(), !1565)
    #dbg_value(i32 %i_width, !1556, !DIExpression(), !1565)
    #dbg_value(i32 %i_height, !1557, !DIExpression(), !1565)
    #dbg_value(ptr %weight, !1558, !DIExpression(), !1565)
  %and = and i32 %mvy, 3, !dbg !1566
  %shl = shl nuw nsw i32 %and, 2, !dbg !1567
  %and1 = and i32 %mvx, 3, !dbg !1568
  %add = or disjoint i32 %shl, %and1, !dbg !1569
    #dbg_value(i32 %add, !1559, !DIExpression(), !1565)
  %shr = ashr i32 %mvy, 2, !dbg !1570
  %mul = mul i32 %shr, %i_src_stride, !dbg !1571
  %shr2 = ashr i32 %mvx, 2, !dbg !1572
  %add3 = add i32 %mul, %shr2, !dbg !1573
    #dbg_value(i32 %add3, !1560, !DIExpression(), !1565)
  %idxprom = zext nneg i32 %add to i64, !dbg !1574
  %arrayidx = getelementptr inbounds [16 x i8], ptr @hpel_ref0, i64 0, i64 %idxprom, !dbg !1574
  %0 = load i8, ptr %arrayidx, align 1, !dbg !1574
  %idxprom4 = zext i8 %0 to i64, !dbg !1575
  %arrayidx5 = getelementptr inbounds ptr, ptr %src, i64 %idxprom4, !dbg !1575
  %1 = load ptr, ptr %arrayidx5, align 8, !dbg !1575
  %idx.ext = sext i32 %add3 to i64, !dbg !1576
  %add.ptr = getelementptr i8, ptr %1, i64 %idx.ext, !dbg !1576
  %cmp = icmp eq i32 %and, 3, !dbg !1577
  %mul7 = select i1 %cmp, i32 %i_src_stride, i32 0, !dbg !1578
  %idx.ext8 = sext i32 %mul7 to i64, !dbg !1579
  %add.ptr9 = getelementptr i8, ptr %add.ptr, i64 %idx.ext8, !dbg !1579
    #dbg_value(ptr %add.ptr9, !1561, !DIExpression(), !1565)
  %and10 = and i32 %add, 5, !dbg !1580
  %tobool.not = icmp eq i32 %and10, 0, !dbg !1580
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1581

if.then:                                          ; preds = %entry
  %arrayidx12 = getelementptr inbounds [16 x i8], ptr @hpel_ref1, i64 0, i64 %idxprom, !dbg !1582
  %2 = load i8, ptr %arrayidx12, align 1, !dbg !1582
  %idxprom13 = zext i8 %2 to i64, !dbg !1583
  %arrayidx14 = getelementptr inbounds ptr, ptr %src, i64 %idxprom13, !dbg !1583
  %3 = load ptr, ptr %arrayidx14, align 8, !dbg !1583
  %add.ptr16 = getelementptr i8, ptr %3, i64 %idx.ext, !dbg !1584
  %cmp18 = icmp eq i32 %and1, 3, !dbg !1585
  %idx.ext20 = zext i1 %cmp18 to i64, !dbg !1586
  %add.ptr21 = getelementptr i8, ptr %add.ptr16, i64 %idx.ext20, !dbg !1586
    #dbg_value(ptr %add.ptr21, !1562, !DIExpression(), !1587)
    #dbg_value(ptr %dst, !1588, !DIExpression(), !1606)
    #dbg_value(i32 %i_dst_stride, !1593, !DIExpression(), !1606)
    #dbg_value(ptr %add.ptr9, !1594, !DIExpression(), !1606)
    #dbg_value(i32 %i_src_stride, !1595, !DIExpression(), !1606)
    #dbg_value(ptr %add.ptr21, !1596, !DIExpression(), !1606)
    #dbg_value(i32 %i_src_stride, !1597, !DIExpression(), !1606)
    #dbg_value(i32 %i_width, !1598, !DIExpression(), !1606)
    #dbg_value(i32 %i_height, !1599, !DIExpression(), !1606)
    #dbg_value(i32 0, !1600, !DIExpression(), !1608)
  %cmp29.i = icmp sgt i32 %i_height, 0, !dbg !1609
  br i1 %cmp29.i, label %for.cond1.preheader.lr.ph.i, label %pixel_avg.exit, !dbg !1610

for.cond1.preheader.lr.ph.i:                      ; preds = %if.then
  %cmp227.i = icmp sgt i32 %i_width, 0
  %idx.ext.i = sext i32 %i_dst_stride to i64
  %idx.ext12.i = sext i32 %i_src_stride to i64
  br i1 %cmp227.i, label %for.cond1.preheader.us.preheader.i, label %pixel_avg.exit

for.cond1.preheader.us.preheader.i:               ; preds = %for.cond1.preheader.lr.ph.i
  %wide.trip.count.i = zext nneg i32 %i_width to i64
  %4 = add nsw i32 %i_height, -1, !dbg !1610
  %5 = zext i32 %4 to i64, !dbg !1610
  %6 = mul nsw i64 %idx.ext.i, %5, !dbg !1610
  %7 = getelementptr i8, ptr %dst, i64 %6, !dbg !1610
  %scevgep = getelementptr i8, ptr %7, i64 %wide.trip.count.i, !dbg !1610
  %8 = mul nsw i64 %idx.ext12.i, %5, !dbg !1610
  %9 = getelementptr i8, ptr %1, i64 %8, !dbg !1610
  %10 = getelementptr i8, ptr %9, i64 %idx.ext8, !dbg !1610
  %11 = getelementptr i8, ptr %10, i64 %idx.ext, !dbg !1610
  %scevgep161 = getelementptr i8, ptr %11, i64 %wide.trip.count.i, !dbg !1610
  %12 = getelementptr i8, ptr %3, i64 %8, !dbg !1610
  %13 = getelementptr i8, ptr %12, i64 %idx.ext, !dbg !1610
  %14 = getelementptr i8, ptr %13, i64 %idx.ext20, !dbg !1610
  %scevgep162 = getelementptr i8, ptr %14, i64 %wide.trip.count.i, !dbg !1610
  %min.iters.check = icmp ult i32 %i_width, 8
  %bound0 = icmp ugt ptr %scevgep161, %dst
  %bound1 = icmp ult ptr %add.ptr9, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %15 = or i32 %i_dst_stride, %i_src_stride
  %16 = icmp slt i32 %15, 0
  %17 = or i1 %found.conflict, %16
  %bound0164 = icmp ugt ptr %scevgep162, %dst
  %bound1165 = icmp ult ptr %add.ptr21, %scevgep
  %found.conflict166 = and i1 %bound0164, %bound1165
  %18 = or i32 %i_dst_stride, %i_src_stride
  %19 = icmp slt i32 %18, 0
  %20 = or i1 %found.conflict166, %19
  %conflict.rdx = or i1 %17, %20
  %min.iters.check169 = icmp ult i32 %i_width, 64
  %n.vec = and i64 %wide.trip.count.i, 2147483584
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  %n.vec.remaining = and i64 %wide.trip.count.i, 56
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  %n.vec178 = and i64 %wide.trip.count.i, 2147483640
  %cmp.n183 = icmp eq i64 %n.vec178, %wide.trip.count.i
  %xtraiter = and i64 %wide.trip.count.i, 1
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  %21 = add nsw i64 %wide.trip.count.i, -1
  br label %iter.check, !dbg !1610

iter.check:                                       ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us.i, %for.cond1.preheader.us.preheader.i
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ 0, %for.cond1.preheader.us.preheader.i ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %dst, %for.cond1.preheader.us.preheader.i ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %add.ptr9, %for.cond1.preheader.us.preheader.i ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %add.ptr21, %for.cond1.preheader.us.preheader.i ]
    #dbg_value(i32 %y.033.us.i, !1600, !DIExpression(), !1608)
    #dbg_value(ptr %dst.addr.032.us.i, !1588, !DIExpression(), !1606)
    #dbg_value(ptr %src1.addr.031.us.i, !1594, !DIExpression(), !1606)
    #dbg_value(ptr %src2.addr.030.us.i, !1596, !DIExpression(), !1606)
    #dbg_value(i32 0, !1602, !DIExpression(), !1611)
  %brmerge = select i1 %min.iters.check, i1 true, i1 %conflict.rdx, !dbg !1612
  br i1 %brmerge, label %for.body4.us.i.preheader, label %vector.main.loop.iter.check, !dbg !1612

vector.main.loop.iter.check:                      ; preds = %iter.check
  br i1 %min.iters.check169, label %vec.epilog.ph, label %vector.body, !dbg !1612

vector.body:                                      ; preds = %vector.main.loop.iter.check, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.main.loop.iter.check ], !dbg !1613
  %22 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %index, !dbg !1615
  %23 = getelementptr inbounds i8, ptr %22, i64 16, !dbg !1615
  %24 = getelementptr inbounds i8, ptr %22, i64 32, !dbg !1615
  %25 = getelementptr inbounds i8, ptr %22, i64 48, !dbg !1615
  %wide.load = load <16 x i8>, ptr %22, align 1, !dbg !1615, !alias.scope !1616
  %wide.load170 = load <16 x i8>, ptr %23, align 1, !dbg !1615, !alias.scope !1616
  %wide.load171 = load <16 x i8>, ptr %24, align 1, !dbg !1615, !alias.scope !1616
  %wide.load172 = load <16 x i8>, ptr %25, align 1, !dbg !1615, !alias.scope !1616
  %26 = zext <16 x i8> %wide.load to <16 x i16>, !dbg !1615
  %27 = zext <16 x i8> %wide.load170 to <16 x i16>, !dbg !1615
  %28 = zext <16 x i8> %wide.load171 to <16 x i16>, !dbg !1615
  %29 = zext <16 x i8> %wide.load172 to <16 x i16>, !dbg !1615
  %30 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %index, !dbg !1619
  %31 = getelementptr inbounds i8, ptr %30, i64 16, !dbg !1619
  %32 = getelementptr inbounds i8, ptr %30, i64 32, !dbg !1619
  %33 = getelementptr inbounds i8, ptr %30, i64 48, !dbg !1619
  %wide.load173 = load <16 x i8>, ptr %30, align 1, !dbg !1619, !alias.scope !1620
  %wide.load174 = load <16 x i8>, ptr %31, align 1, !dbg !1619, !alias.scope !1620
  %wide.load175 = load <16 x i8>, ptr %32, align 1, !dbg !1619, !alias.scope !1620
  %wide.load176 = load <16 x i8>, ptr %33, align 1, !dbg !1619, !alias.scope !1620
  %34 = zext <16 x i8> %wide.load173 to <16 x i16>, !dbg !1619
  %35 = zext <16 x i8> %wide.load174 to <16 x i16>, !dbg !1619
  %36 = zext <16 x i8> %wide.load175 to <16 x i16>, !dbg !1619
  %37 = zext <16 x i8> %wide.load176 to <16 x i16>, !dbg !1619
  %38 = add nuw nsw <16 x i16> %26, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1622
  %39 = add nuw nsw <16 x i16> %27, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1622
  %40 = add nuw nsw <16 x i16> %28, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1622
  %41 = add nuw nsw <16 x i16> %29, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1622
  %42 = add nuw nsw <16 x i16> %38, %34, !dbg !1623
  %43 = add nuw nsw <16 x i16> %39, %35, !dbg !1623
  %44 = add nuw nsw <16 x i16> %40, %36, !dbg !1623
  %45 = add nuw nsw <16 x i16> %41, %37, !dbg !1623
  %46 = lshr <16 x i16> %42, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1624
  %47 = lshr <16 x i16> %43, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1624
  %48 = lshr <16 x i16> %44, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1624
  %49 = lshr <16 x i16> %45, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1624
  %50 = trunc <16 x i16> %46 to <16 x i8>, !dbg !1625
  %51 = trunc <16 x i16> %47 to <16 x i8>, !dbg !1625
  %52 = trunc <16 x i16> %48 to <16 x i8>, !dbg !1625
  %53 = trunc <16 x i16> %49 to <16 x i8>, !dbg !1625
  %54 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %index, !dbg !1626
  %55 = getelementptr inbounds i8, ptr %54, i64 16, !dbg !1627
  %56 = getelementptr inbounds i8, ptr %54, i64 32, !dbg !1627
  %57 = getelementptr inbounds i8, ptr %54, i64 48, !dbg !1627
  store <16 x i8> %50, ptr %54, align 1, !dbg !1627, !alias.scope !1628, !noalias !1630
  store <16 x i8> %51, ptr %55, align 1, !dbg !1627, !alias.scope !1628, !noalias !1630
  store <16 x i8> %52, ptr %56, align 1, !dbg !1627, !alias.scope !1628, !noalias !1630
  store <16 x i8> %53, ptr %57, align 1, !dbg !1627, !alias.scope !1628, !noalias !1630
  %index.next = add nuw i64 %index, 64, !dbg !1613
  %58 = icmp eq i64 %index.next, %n.vec, !dbg !1613
  br i1 %58, label %middle.block, label %vector.body, !dbg !1613, !llvm.loop !1631

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %vec.epilog.iter.check, !dbg !1612

vec.epilog.iter.check:                            ; preds = %middle.block
  br i1 %min.epilog.iters.check, label %for.body4.us.i.preheader, label %vec.epilog.ph, !dbg !1612

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  br label %vec.epilog.vector.body, !dbg !1612

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index179 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next182, %vec.epilog.vector.body ], !dbg !1613
  %59 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %index179, !dbg !1615
  %wide.load180 = load <8 x i8>, ptr %59, align 1, !dbg !1615, !alias.scope !1635
  %60 = zext <8 x i8> %wide.load180 to <8 x i16>, !dbg !1615
  %61 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %index179, !dbg !1619
  %wide.load181 = load <8 x i8>, ptr %61, align 1, !dbg !1619, !alias.scope !1638
  %62 = zext <8 x i8> %wide.load181 to <8 x i16>, !dbg !1619
  %63 = add nuw nsw <8 x i16> %60, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1622
  %64 = add nuw nsw <8 x i16> %63, %62, !dbg !1623
  %65 = lshr <8 x i16> %64, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1624
  %66 = trunc <8 x i16> %65 to <8 x i8>, !dbg !1625
  %67 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %index179, !dbg !1626
  store <8 x i8> %66, ptr %67, align 1, !dbg !1627, !alias.scope !1640, !noalias !1642
  %index.next182 = add nuw i64 %index179, 8, !dbg !1613
  %68 = icmp eq i64 %index.next182, %n.vec178, !dbg !1613
  br i1 %68, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !dbg !1613, !llvm.loop !1643

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  br i1 %cmp.n183, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i.preheader, !dbg !1612

for.body4.us.i.preheader:                         ; preds = %iter.check, %vec.epilog.middle.block, %vec.epilog.iter.check
  %indvars.iv.i.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec178, %vec.epilog.middle.block ]
  br i1 %lcmp.mod.not, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !dbg !1612

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.preheader
    #dbg_value(i64 poison, !1602, !DIExpression(), !1611)
  %arrayidx.us.i.prol = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.i.ph, !dbg !1615
  %69 = load i8, ptr %arrayidx.us.i.prol, align 1, !dbg !1615
  %conv.us.i.prol = zext i8 %69 to i16, !dbg !1615
  %arrayidx6.us.i.prol = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.i.ph, !dbg !1619
  %70 = load i8, ptr %arrayidx6.us.i.prol, align 1, !dbg !1619
  %conv7.us.i.prol = zext i8 %70 to i16, !dbg !1619
  %add.us.i.prol = add nuw nsw i16 %conv.us.i.prol, 1, !dbg !1622
  %add8.us.i.prol = add nuw nsw i16 %add.us.i.prol, %conv7.us.i.prol, !dbg !1623
  %shr.us.i.prol = lshr i16 %add8.us.i.prol, 1, !dbg !1624
  %conv9.us.i.prol = trunc nuw i16 %shr.us.i.prol to i8, !dbg !1625
  %arrayidx11.us.i.prol = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.i.ph, !dbg !1626
  store i8 %conv9.us.i.prol, ptr %arrayidx11.us.i.prol, align 1, !dbg !1627
  %indvars.iv.next.i.prol = or disjoint i64 %indvars.iv.i.ph, 1, !dbg !1613
    #dbg_value(i64 %indvars.iv.next.i.prol, !1602, !DIExpression(), !1611)
  br label %for.body4.us.i.prol.loopexit, !dbg !1612

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %71 = icmp eq i64 %indvars.iv.i.ph, %21, !dbg !1612
  br i1 %71, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i, !dbg !1612

for.body4.us.i:                                   ; preds = %for.body4.us.i.prol.loopexit, %for.body4.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.1, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i, !1602, !DIExpression(), !1611)
  %arrayidx.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.i, !dbg !1615
  %72 = load i8, ptr %arrayidx.us.i, align 1, !dbg !1615
  %conv.us.i = zext i8 %72 to i16, !dbg !1615
  %arrayidx6.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.i, !dbg !1619
  %73 = load i8, ptr %arrayidx6.us.i, align 1, !dbg !1619
  %conv7.us.i = zext i8 %73 to i16, !dbg !1619
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !1622
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !1623
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !1624
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !1625
  %arrayidx11.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.i, !dbg !1626
  store i8 %conv9.us.i, ptr %arrayidx11.us.i, align 1, !dbg !1627
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !1613
    #dbg_value(i64 %indvars.iv.next.i, !1602, !DIExpression(), !1611)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.next.i, !dbg !1615
  %74 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !1615
  %conv.us.i.1 = zext i8 %74 to i16, !dbg !1615
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.next.i, !dbg !1619
  %75 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !1619
  %conv7.us.i.1 = zext i8 %75 to i16, !dbg !1619
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !1622
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !1623
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !1624
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !1625
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.next.i, !dbg !1626
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !1627
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2, !dbg !1613
    #dbg_value(i64 %indvars.iv.next.i.1, !1602, !DIExpression(), !1611)
  %exitcond.not.i.1 = icmp eq i64 %indvars.iv.next.i.1, %wide.trip.count.i, !dbg !1644
  br i1 %exitcond.not.i.1, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i, !dbg !1612, !llvm.loop !1645

for.cond1.for.cond.cleanup3_crit_edge.us.i:       ; preds = %for.body4.us.i.prol.loopexit, %for.body4.us.i, %vec.epilog.middle.block, %middle.block
  %add.ptr.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext.i, !dbg !1646
    #dbg_value(ptr %add.ptr.us.i, !1588, !DIExpression(), !1606)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext12.i, !dbg !1647
    #dbg_value(ptr %add.ptr13.us.i, !1594, !DIExpression(), !1606)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !1648
    #dbg_value(ptr %add.ptr15.us.i, !1596, !DIExpression(), !1606)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !1649
    #dbg_value(i32 %inc17.us.i, !1600, !DIExpression(), !1608)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, %i_height, !dbg !1609
  br i1 %exitcond36.not.i, label %pixel_avg.exit, label %iter.check, !dbg !1610, !llvm.loop !1650

pixel_avg.exit:                                   ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us.i, %if.then, %for.cond1.preheader.lr.ph.i
  %weightfn = getelementptr inbounds i8, ptr %weight, i64 48, !dbg !1652
  %76 = load ptr, ptr %weightfn, align 16, !dbg !1652
  %tobool22.not = icmp eq ptr %76, null, !dbg !1654
  br i1 %tobool22.not, label %if.end29, label %if.then23, !dbg !1655

if.then23:                                        ; preds = %pixel_avg.exit
    #dbg_value(ptr %dst, !1656, !DIExpression(), !1680)
    #dbg_value(i32 %i_dst_stride, !1661, !DIExpression(), !1680)
    #dbg_value(ptr %dst, !1662, !DIExpression(), !1680)
    #dbg_value(i32 %i_dst_stride, !1663, !DIExpression(), !1680)
    #dbg_value(ptr %weight, !1664, !DIExpression(), !1680)
    #dbg_value(i32 %i_width, !1665, !DIExpression(), !1680)
    #dbg_value(i32 %i_height, !1666, !DIExpression(), !1680)
  %i_denom.i = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !1682
  %77 = load i32, ptr %i_denom.i, align 16, !dbg !1682
  %cmp.i = icmp sgt i32 %77, 0, !dbg !1683
  br i1 %cmp.i, label %for.cond.preheader.i, label %for.cond17.preheader.i, !dbg !1684

for.cond17.preheader.i:                           ; preds = %if.then23
    #dbg_value(i32 0, !1674, !DIExpression(), !1685)
  br i1 %cmp29.i, label %for.cond23.preheader.lr.ph.i, label %if.end29, !dbg !1686

for.cond23.preheader.lr.ph.i:                     ; preds = %for.cond17.preheader.i
  %cmp2477.i = icmp sgt i32 %i_width, 0
  %i_scale31.i = getelementptr i8, ptr %weight, i64 36
  %i_offset33.i = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43.i = sext i32 %i_dst_stride to i64
  br i1 %cmp2477.i, label %for.cond23.preheader.us.preheader.i, label %if.end29

for.cond23.preheader.us.preheader.i:              ; preds = %for.cond23.preheader.lr.ph.i
  %wide.trip.count.i62 = zext nneg i32 %i_width to i64
  %78 = add nsw i32 %i_height, -1, !dbg !1686
  %79 = zext i32 %78 to i64, !dbg !1686
  %80 = mul nsw i64 %idx.ext43.i, %79, !dbg !1686
  %81 = getelementptr i8, ptr %dst, i64 %80, !dbg !1686
  %scevgep185 = getelementptr i8, ptr %81, i64 %wide.trip.count.i62, !dbg !1686
  %scevgep186 = getelementptr i8, ptr %weight, i64 44, !dbg !1686
  %min.iters.check192 = icmp ult i32 %i_width, 16
  %bound0187 = icmp ugt ptr %scevgep186, %dst
  %bound1188 = icmp ult ptr %i_scale31.i, %scevgep185
  %found.conflict189 = and i1 %bound0187, %bound1188
  %stride.check190 = icmp slt i32 %i_dst_stride, 0
  %82 = or i1 %found.conflict189, %stride.check190
  %n.vec195 = and i64 %wide.trip.count.i62, 2147483632
  %cmp.n218 = icmp eq i64 %n.vec195, %wide.trip.count.i62
  %xtraiter361 = and i64 %wide.trip.count.i62, 1
  %lcmp.mod362.not = icmp eq i64 %xtraiter361, 0
  %83 = add nsw i64 %wide.trip.count.i62, -1
  br label %for.cond23.preheader.us.i, !dbg !1686

for.cond23.preheader.us.i:                        ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i, %for.cond23.preheader.us.preheader.i
  %y16.082.us.i = phi i32 [ %inc42.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i ], [ 0, %for.cond23.preheader.us.preheader.i ]
  %dst.addr.181.us.i = phi ptr [ %add.ptr44.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i ], [ %dst, %for.cond23.preheader.us.preheader.i ]
    #dbg_value(i32 %y16.082.us.i, !1674, !DIExpression(), !1685)
    #dbg_value(ptr %dst.addr.181.us.i, !1656, !DIExpression(), !1680)
    #dbg_value(ptr %dst.addr.181.us.i, !1662, !DIExpression(), !1680)
    #dbg_value(i32 0, !1677, !DIExpression(), !1687)
  %brmerge367 = select i1 %min.iters.check192, i1 true, i1 %82, !dbg !1688
  br i1 %brmerge367, label %for.body27.us.i.preheader, label %vector.ph193, !dbg !1688

vector.ph193:                                     ; preds = %for.cond23.preheader.us.i
  %84 = load i32, ptr %i_scale31.i, align 4, !alias.scope !1689
  %broadcast.splatinsert207 = insertelement <4 x i32> poison, i32 %84, i64 0
  %broadcast.splat208 = shufflevector <4 x i32> %broadcast.splatinsert207, <4 x i32> poison, <4 x i32> zeroinitializer
  %85 = load i32, ptr %i_offset33.i, align 8, !alias.scope !1689
  %broadcast.splatinsert215 = insertelement <4 x i32> poison, i32 %85, i64 0
  %broadcast.splat216 = shufflevector <4 x i32> %broadcast.splatinsert215, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body197, !dbg !1688

vector.body197:                                   ; preds = %vector.body197, %vector.ph193
  %index198 = phi i64 [ 0, %vector.ph193 ], [ %index.next217, %vector.body197 ], !dbg !1692
  %86 = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %index198, !dbg !1694
  %87 = getelementptr inbounds i8, ptr %86, i64 4, !dbg !1694
  %88 = getelementptr inbounds i8, ptr %86, i64 8, !dbg !1694
  %89 = getelementptr inbounds i8, ptr %86, i64 12, !dbg !1694
  %wide.load199 = load <4 x i8>, ptr %86, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  %wide.load200 = load <4 x i8>, ptr %87, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  %wide.load201 = load <4 x i8>, ptr %88, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  %wide.load202 = load <4 x i8>, ptr %89, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  %90 = zext <4 x i8> %wide.load199 to <4 x i32>, !dbg !1694
  %91 = zext <4 x i8> %wide.load200 to <4 x i32>, !dbg !1694
  %92 = zext <4 x i8> %wide.load201 to <4 x i32>, !dbg !1694
  %93 = zext <4 x i8> %wide.load202 to <4 x i32>, !dbg !1694
  %94 = mul nsw <4 x i32> %broadcast.splat208, %90, !dbg !1688
  %95 = mul nsw <4 x i32> %broadcast.splat208, %91, !dbg !1688
  %96 = mul nsw <4 x i32> %broadcast.splat208, %92, !dbg !1688
  %97 = mul nsw <4 x i32> %broadcast.splat208, %93, !dbg !1688
  %98 = add nsw <4 x i32> %94, %broadcast.splat216, !dbg !1688
  %99 = add nsw <4 x i32> %95, %broadcast.splat216, !dbg !1688
  %100 = add nsw <4 x i32> %96, %broadcast.splat216, !dbg !1688
  %101 = add nsw <4 x i32> %97, %broadcast.splat216, !dbg !1688
  %102 = icmp ult <4 x i32> %98, <i32 256, i32 256, i32 256, i32 256>, !dbg !1697
  %103 = icmp ult <4 x i32> %99, <i32 256, i32 256, i32 256, i32 256>, !dbg !1697
  %104 = icmp ult <4 x i32> %100, <i32 256, i32 256, i32 256, i32 256>, !dbg !1697
  %105 = icmp ult <4 x i32> %101, <i32 256, i32 256, i32 256, i32 256>, !dbg !1697
  %106 = icmp sgt <4 x i32> %98, zeroinitializer, !dbg !1704
  %107 = icmp sgt <4 x i32> %99, zeroinitializer, !dbg !1704
  %108 = icmp sgt <4 x i32> %100, zeroinitializer, !dbg !1704
  %109 = icmp sgt <4 x i32> %101, zeroinitializer, !dbg !1704
  %110 = sext <4 x i1> %106 to <4 x i32>, !dbg !1704
  %111 = sext <4 x i1> %107 to <4 x i32>, !dbg !1704
  %112 = sext <4 x i1> %108 to <4 x i32>, !dbg !1704
  %113 = sext <4 x i1> %109 to <4 x i32>, !dbg !1704
  %114 = select <4 x i1> %102, <4 x i32> %98, <4 x i32> %110, !dbg !1704
  %115 = select <4 x i1> %103, <4 x i32> %99, <4 x i32> %111, !dbg !1704
  %116 = select <4 x i1> %104, <4 x i32> %100, <4 x i32> %112, !dbg !1704
  %117 = select <4 x i1> %105, <4 x i32> %101, <4 x i32> %113, !dbg !1704
  %118 = trunc <4 x i32> %114 to <4 x i8>, !dbg !1704
  %119 = trunc <4 x i32> %115 to <4 x i8>, !dbg !1704
  %120 = trunc <4 x i32> %116 to <4 x i8>, !dbg !1704
  %121 = trunc <4 x i32> %117 to <4 x i8>, !dbg !1704
  store <4 x i8> %118, ptr %86, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  store <4 x i8> %119, ptr %87, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  store <4 x i8> %120, ptr %88, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  store <4 x i8> %121, ptr %89, align 1, !dbg !1694, !alias.scope !1695, !noalias !1689
  %index.next217 = add nuw i64 %index198, 16, !dbg !1692
  %122 = icmp eq i64 %index.next217, %n.vec195, !dbg !1692
  br i1 %122, label %middle.block191, label %vector.body197, !dbg !1692, !llvm.loop !1705

middle.block191:                                  ; preds = %vector.body197
  br i1 %cmp.n218, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i.preheader, !dbg !1688

for.body27.us.i.preheader:                        ; preds = %for.cond23.preheader.us.i, %middle.block191
  %indvars.iv.i63.ph = phi i64 [ 0, %for.cond23.preheader.us.i ], [ %n.vec195, %middle.block191 ]
  br i1 %lcmp.mod362.not, label %for.body27.us.i.prol.loopexit, label %for.body27.us.i.prol, !dbg !1688

for.body27.us.i.prol:                             ; preds = %for.body27.us.i.preheader
    #dbg_value(i64 poison, !1677, !DIExpression(), !1687)
  %arrayidx29.us.i.prol = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.i63.ph, !dbg !1694
  %123 = load i8, ptr %arrayidx29.us.i.prol, align 1, !dbg !1694
  %conv30.us.i.prol = zext i8 %123 to i32, !dbg !1694
  %124 = load i32, ptr %i_scale31.i, align 4, !dbg !1694
  %mul32.us.i.prol = mul nsw i32 %124, %conv30.us.i.prol, !dbg !1694
  %125 = load i32, ptr %i_offset33.i, align 8, !dbg !1694
  %add34.us.i.prol = add nsw i32 %mul32.us.i.prol, %125, !dbg !1694
    #dbg_value(i32 %add34.us.i.prol, !1702, !DIExpression(), !1707)
  %tobool.not.i72.us.i.prol = icmp ult i32 %add34.us.i.prol, 256, !dbg !1697
  %126 = icmp sgt i32 %add34.us.i.prol, 0, !dbg !1704
  %shr.i73.us.i.prol = sext i1 %126 to i32, !dbg !1704
  %cond.i74.us.i.prol = select i1 %tobool.not.i72.us.i.prol, i32 %add34.us.i.prol, i32 %shr.i73.us.i.prol, !dbg !1704
  %conv.i75.us.i.prol = trunc i32 %cond.i74.us.i.prol to i8, !dbg !1704
  store i8 %conv.i75.us.i.prol, ptr %arrayidx29.us.i.prol, align 1, !dbg !1694
  %indvars.iv.next.i64.prol = or disjoint i64 %indvars.iv.i63.ph, 1, !dbg !1692
    #dbg_value(i64 %indvars.iv.next.i64.prol, !1677, !DIExpression(), !1687)
  br label %for.body27.us.i.prol.loopexit, !dbg !1688

for.body27.us.i.prol.loopexit:                    ; preds = %for.body27.us.i.prol, %for.body27.us.i.preheader
  %indvars.iv.i63.unr = phi i64 [ %indvars.iv.i63.ph, %for.body27.us.i.preheader ], [ %indvars.iv.next.i64.prol, %for.body27.us.i.prol ]
  %127 = icmp eq i64 %indvars.iv.i63.ph, %83, !dbg !1688
  br i1 %127, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i, !dbg !1688

for.body27.us.i:                                  ; preds = %for.body27.us.i.prol.loopexit, %for.body27.us.i
  %indvars.iv.i63 = phi i64 [ %indvars.iv.next.i64.1, %for.body27.us.i ], [ %indvars.iv.i63.unr, %for.body27.us.i.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i63, !1677, !DIExpression(), !1687)
  %arrayidx29.us.i = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.i63, !dbg !1694
  %128 = load i8, ptr %arrayidx29.us.i, align 1, !dbg !1694
  %conv30.us.i = zext i8 %128 to i32, !dbg !1694
  %129 = load i32, ptr %i_scale31.i, align 4, !dbg !1694
  %mul32.us.i = mul nsw i32 %129, %conv30.us.i, !dbg !1694
  %130 = load i32, ptr %i_offset33.i, align 8, !dbg !1694
  %add34.us.i = add nsw i32 %mul32.us.i, %130, !dbg !1694
    #dbg_value(i32 %add34.us.i, !1702, !DIExpression(), !1707)
  %tobool.not.i72.us.i = icmp ult i32 %add34.us.i, 256, !dbg !1697
  %131 = icmp sgt i32 %add34.us.i, 0, !dbg !1704
  %shr.i73.us.i = sext i1 %131 to i32, !dbg !1704
  %cond.i74.us.i = select i1 %tobool.not.i72.us.i, i32 %add34.us.i, i32 %shr.i73.us.i, !dbg !1704
  %conv.i75.us.i = trunc i32 %cond.i74.us.i to i8, !dbg !1704
  store i8 %conv.i75.us.i, ptr %arrayidx29.us.i, align 1, !dbg !1694
  %indvars.iv.next.i64 = add nuw nsw i64 %indvars.iv.i63, 1, !dbg !1692
    #dbg_value(i64 %indvars.iv.next.i64, !1677, !DIExpression(), !1687)
  %arrayidx29.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.next.i64, !dbg !1694
  %132 = load i8, ptr %arrayidx29.us.i.1, align 1, !dbg !1694
  %conv30.us.i.1 = zext i8 %132 to i32, !dbg !1694
  %133 = load i32, ptr %i_scale31.i, align 4, !dbg !1694
  %mul32.us.i.1 = mul nsw i32 %133, %conv30.us.i.1, !dbg !1694
  %134 = load i32, ptr %i_offset33.i, align 8, !dbg !1694
  %add34.us.i.1 = add nsw i32 %mul32.us.i.1, %134, !dbg !1694
    #dbg_value(i32 %add34.us.i.1, !1702, !DIExpression(), !1707)
  %tobool.not.i72.us.i.1 = icmp ult i32 %add34.us.i.1, 256, !dbg !1697
  %135 = icmp sgt i32 %add34.us.i.1, 0, !dbg !1704
  %shr.i73.us.i.1 = sext i1 %135 to i32, !dbg !1704
  %cond.i74.us.i.1 = select i1 %tobool.not.i72.us.i.1, i32 %add34.us.i.1, i32 %shr.i73.us.i.1, !dbg !1704
  %conv.i75.us.i.1 = trunc i32 %cond.i74.us.i.1 to i8, !dbg !1704
  store i8 %conv.i75.us.i.1, ptr %arrayidx29.us.i.1, align 1, !dbg !1694
  %indvars.iv.next.i64.1 = add nuw nsw i64 %indvars.iv.i63, 2, !dbg !1692
    #dbg_value(i64 %indvars.iv.next.i64.1, !1677, !DIExpression(), !1687)
  %exitcond.not.i65.1 = icmp eq i64 %indvars.iv.next.i64.1, %wide.trip.count.i62, !dbg !1708
  br i1 %exitcond.not.i65.1, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i, !dbg !1688, !llvm.loop !1709

for.cond23.for.cond.cleanup26_crit_edge.us.i:     ; preds = %for.body27.us.i.prol.loopexit, %for.body27.us.i, %middle.block191
  %inc42.us.i = add nuw nsw i32 %y16.082.us.i, 1, !dbg !1710
    #dbg_value(i32 %inc42.us.i, !1674, !DIExpression(), !1685)
  %add.ptr44.us.i = getelementptr i8, ptr %dst.addr.181.us.i, i64 %idx.ext43.i, !dbg !1711
    #dbg_value(ptr %add.ptr44.us.i, !1656, !DIExpression(), !1680)
    #dbg_value(ptr %add.ptr44.us.i, !1662, !DIExpression(), !1680)
  %exitcond93.not.i = icmp eq i32 %inc42.us.i, %i_height, !dbg !1712
  br i1 %exitcond93.not.i, label %if.end29, label %for.cond23.preheader.us.i, !dbg !1686, !llvm.loop !1713

for.cond.preheader.i:                             ; preds = %if.then23
    #dbg_value(i32 0, !1667, !DIExpression(), !1715)
  br i1 %cmp29.i, label %for.cond2.preheader.lr.ph.i, label %if.end29, !dbg !1716

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.preheader.i
  %cmp383.i = icmp sgt i32 %i_width, 0
  %i_scale.i = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset.i = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext.i66 = sext i32 %i_dst_stride to i64
  br i1 %cmp383.i, label %for.cond2.preheader.us.preheader.i, label %if.end29

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %wide.trip.count97.i = zext nneg i32 %i_width to i64
  %136 = add nsw i32 %i_height, -1, !dbg !1716
  %137 = zext i32 %136 to i64, !dbg !1716
  %138 = mul nsw i64 %idx.ext.i66, %137, !dbg !1716
  %139 = getelementptr i8, ptr %dst, i64 %138, !dbg !1716
  %scevgep220 = getelementptr i8, ptr %139, i64 %wide.trip.count97.i, !dbg !1716
  %scevgep221 = getelementptr i8, ptr %weight, i64 44, !dbg !1716
  %min.iters.check228 = icmp ult i32 %i_width, 16
  %bound0222 = icmp ugt ptr %scevgep221, %dst
  %bound1223 = icmp ult ptr %i_denom.i, %scevgep220
  %found.conflict224 = and i1 %bound0222, %bound1223
  %stride.check225 = icmp slt i32 %i_dst_stride, 0
  %140 = or i1 %found.conflict224, %stride.check225
  %n.vec231 = and i64 %wide.trip.count97.i, 2147483632
  %cmp.n262 = icmp eq i64 %n.vec231, %wide.trip.count97.i
  br label %for.cond2.preheader.us.i, !dbg !1716

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.cond.cleanup4_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %y.088.us.i = phi i32 [ %inc12.us.i, %for.cond2.for.cond.cleanup4_crit_edge.us.i ], [ 0, %for.cond2.preheader.us.preheader.i ]
  %dst.addr.087.us.i = phi ptr [ %add.ptr.us.i72, %for.cond2.for.cond.cleanup4_crit_edge.us.i ], [ %dst, %for.cond2.preheader.us.preheader.i ]
    #dbg_value(i32 %y.088.us.i, !1667, !DIExpression(), !1715)
    #dbg_value(ptr %dst.addr.087.us.i, !1656, !DIExpression(), !1680)
    #dbg_value(ptr %dst.addr.087.us.i, !1662, !DIExpression(), !1680)
    #dbg_value(i32 0, !1671, !DIExpression(), !1717)
  %brmerge368 = select i1 %min.iters.check228, i1 true, i1 %140, !dbg !1718
  br i1 %brmerge368, label %for.body5.us.i.preheader, label %vector.ph229, !dbg !1718

vector.ph229:                                     ; preds = %for.cond2.preheader.us.i
  %141 = load i32, ptr %i_scale.i, align 4, !alias.scope !1719
  %broadcast.splatinsert243 = insertelement <4 x i32> poison, i32 %141, i64 0
  %broadcast.splat244 = shufflevector <4 x i32> %broadcast.splatinsert243, <4 x i32> poison, <4 x i32> zeroinitializer
  %142 = load i32, ptr %i_denom.i, align 16, !alias.scope !1719
  %broadcast.splatinsert251 = insertelement <4 x i32> poison, i32 %142, i64 0
  %broadcast.splat252 = shufflevector <4 x i32> %broadcast.splatinsert251, <4 x i32> poison, <4 x i32> zeroinitializer
  %143 = add nsw <4 x i32> %broadcast.splat252, <i32 -1, i32 -1, i32 -1, i32 -1>
  %144 = add nsw <4 x i32> %broadcast.splat252, <i32 -1, i32 -1, i32 -1, i32 -1>
  %145 = add nsw <4 x i32> %broadcast.splat252, <i32 -1, i32 -1, i32 -1, i32 -1>
  %146 = add nsw <4 x i32> %broadcast.splat252, <i32 -1, i32 -1, i32 -1, i32 -1>
  %147 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %143
  %148 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %144
  %149 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %145
  %150 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %146
  %151 = load i32, ptr %i_offset.i, align 8, !alias.scope !1719
  %broadcast.splatinsert259 = insertelement <4 x i32> poison, i32 %151, i64 0
  %broadcast.splat260 = shufflevector <4 x i32> %broadcast.splatinsert259, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body233, !dbg !1718

vector.body233:                                   ; preds = %vector.body233, %vector.ph229
  %index234 = phi i64 [ 0, %vector.ph229 ], [ %index.next261, %vector.body233 ], !dbg !1722
  %152 = getelementptr inbounds i8, ptr %dst.addr.087.us.i, i64 %index234, !dbg !1724
  %153 = getelementptr inbounds i8, ptr %152, i64 4, !dbg !1724
  %154 = getelementptr inbounds i8, ptr %152, i64 8, !dbg !1724
  %155 = getelementptr inbounds i8, ptr %152, i64 12, !dbg !1724
  %wide.load235 = load <4 x i8>, ptr %152, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  %wide.load236 = load <4 x i8>, ptr %153, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  %wide.load237 = load <4 x i8>, ptr %154, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  %wide.load238 = load <4 x i8>, ptr %155, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  %156 = zext <4 x i8> %wide.load235 to <4 x i32>, !dbg !1724
  %157 = zext <4 x i8> %wide.load236 to <4 x i32>, !dbg !1724
  %158 = zext <4 x i8> %wide.load237 to <4 x i32>, !dbg !1724
  %159 = zext <4 x i8> %wide.load238 to <4 x i32>, !dbg !1724
  %160 = mul nsw <4 x i32> %broadcast.splat244, %156, !dbg !1718
  %161 = mul nsw <4 x i32> %broadcast.splat244, %157, !dbg !1718
  %162 = mul nsw <4 x i32> %broadcast.splat244, %158, !dbg !1718
  %163 = mul nsw <4 x i32> %broadcast.splat244, %159, !dbg !1718
  %164 = add nsw <4 x i32> %147, %160, !dbg !1724
  %165 = add nsw <4 x i32> %148, %161, !dbg !1724
  %166 = add nsw <4 x i32> %149, %162, !dbg !1724
  %167 = add nsw <4 x i32> %150, %163, !dbg !1724
  %168 = ashr <4 x i32> %164, %broadcast.splat252, !dbg !1724
  %169 = ashr <4 x i32> %165, %broadcast.splat252, !dbg !1724
  %170 = ashr <4 x i32> %166, %broadcast.splat252, !dbg !1724
  %171 = ashr <4 x i32> %167, %broadcast.splat252, !dbg !1724
  %172 = add nsw <4 x i32> %168, %broadcast.splat260, !dbg !1718
  %173 = add nsw <4 x i32> %169, %broadcast.splat260, !dbg !1718
  %174 = add nsw <4 x i32> %170, %broadcast.splat260, !dbg !1718
  %175 = add nsw <4 x i32> %171, %broadcast.splat260, !dbg !1718
  %176 = icmp ult <4 x i32> %172, <i32 256, i32 256, i32 256, i32 256>, !dbg !1727
  %177 = icmp ult <4 x i32> %173, <i32 256, i32 256, i32 256, i32 256>, !dbg !1727
  %178 = icmp ult <4 x i32> %174, <i32 256, i32 256, i32 256, i32 256>, !dbg !1727
  %179 = icmp ult <4 x i32> %175, <i32 256, i32 256, i32 256, i32 256>, !dbg !1727
  %180 = icmp sgt <4 x i32> %172, zeroinitializer, !dbg !1729
  %181 = icmp sgt <4 x i32> %173, zeroinitializer, !dbg !1729
  %182 = icmp sgt <4 x i32> %174, zeroinitializer, !dbg !1729
  %183 = icmp sgt <4 x i32> %175, zeroinitializer, !dbg !1729
  %184 = sext <4 x i1> %180 to <4 x i32>, !dbg !1729
  %185 = sext <4 x i1> %181 to <4 x i32>, !dbg !1729
  %186 = sext <4 x i1> %182 to <4 x i32>, !dbg !1729
  %187 = sext <4 x i1> %183 to <4 x i32>, !dbg !1729
  %188 = select <4 x i1> %176, <4 x i32> %172, <4 x i32> %184, !dbg !1729
  %189 = select <4 x i1> %177, <4 x i32> %173, <4 x i32> %185, !dbg !1729
  %190 = select <4 x i1> %178, <4 x i32> %174, <4 x i32> %186, !dbg !1729
  %191 = select <4 x i1> %179, <4 x i32> %175, <4 x i32> %187, !dbg !1729
  %192 = trunc <4 x i32> %188 to <4 x i8>, !dbg !1729
  %193 = trunc <4 x i32> %189 to <4 x i8>, !dbg !1729
  %194 = trunc <4 x i32> %190 to <4 x i8>, !dbg !1729
  %195 = trunc <4 x i32> %191 to <4 x i8>, !dbg !1729
  store <4 x i8> %192, ptr %152, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  store <4 x i8> %193, ptr %153, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  store <4 x i8> %194, ptr %154, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  store <4 x i8> %195, ptr %155, align 1, !dbg !1724, !alias.scope !1725, !noalias !1719
  %index.next261 = add nuw i64 %index234, 16, !dbg !1722
  %196 = icmp eq i64 %index.next261, %n.vec231, !dbg !1722
  br i1 %196, label %middle.block226, label %vector.body233, !dbg !1722, !llvm.loop !1730

middle.block226:                                  ; preds = %vector.body233
  br i1 %cmp.n262, label %for.cond2.for.cond.cleanup4_crit_edge.us.i, label %for.body5.us.i.preheader, !dbg !1718

for.body5.us.i.preheader:                         ; preds = %for.cond2.preheader.us.i, %middle.block226
  %indvars.iv94.i.ph = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %n.vec231, %middle.block226 ]
  br label %for.body5.us.i, !dbg !1718

for.body5.us.i:                                   ; preds = %for.body5.us.i.preheader, %for.body5.us.i
  %indvars.iv94.i = phi i64 [ %indvars.iv.next95.i, %for.body5.us.i ], [ %indvars.iv94.i.ph, %for.body5.us.i.preheader ]
    #dbg_value(i64 %indvars.iv94.i, !1671, !DIExpression(), !1717)
  %arrayidx.us.i67 = getelementptr inbounds i8, ptr %dst.addr.087.us.i, i64 %indvars.iv94.i, !dbg !1724
  %197 = load i8, ptr %arrayidx.us.i67, align 1, !dbg !1724
  %conv.us.i68 = zext i8 %197 to i32, !dbg !1724
  %198 = load i32, ptr %i_scale.i, align 4, !dbg !1724
  %mul.us.i = mul nsw i32 %198, %conv.us.i68, !dbg !1724
  %199 = load i32, ptr %i_denom.i, align 16, !dbg !1724
  %sub.us.i = add nsw i32 %199, -1, !dbg !1724
  %shl.us.i = shl nuw i32 1, %sub.us.i, !dbg !1724
  %add.us.i69 = add nsw i32 %shl.us.i, %mul.us.i, !dbg !1724
  %shr.us.i70 = ashr i32 %add.us.i69, %199, !dbg !1724
  %200 = load i32, ptr %i_offset.i, align 8, !dbg !1724
  %add8.us.i71 = add nsw i32 %shr.us.i70, %200, !dbg !1724
    #dbg_value(i32 %add8.us.i71, !1702, !DIExpression(), !1732)
  %tobool.not.i.us.i = icmp ult i32 %add8.us.i71, 256, !dbg !1727
  %201 = icmp sgt i32 %add8.us.i71, 0, !dbg !1729
  %shr.i.us.i = sext i1 %201 to i32, !dbg !1729
  %cond.i.us.i = select i1 %tobool.not.i.us.i, i32 %add8.us.i71, i32 %shr.i.us.i, !dbg !1729
  %conv.i.us.i = trunc i32 %cond.i.us.i to i8, !dbg !1729
  store i8 %conv.i.us.i, ptr %arrayidx.us.i67, align 1, !dbg !1724
  %indvars.iv.next95.i = add nuw nsw i64 %indvars.iv94.i, 1, !dbg !1722
    #dbg_value(i64 %indvars.iv.next95.i, !1671, !DIExpression(), !1717)
  %exitcond98.not.i = icmp eq i64 %indvars.iv.next95.i, %wide.trip.count97.i, !dbg !1733
  br i1 %exitcond98.not.i, label %for.cond2.for.cond.cleanup4_crit_edge.us.i, label %for.body5.us.i, !dbg !1718, !llvm.loop !1734

for.cond2.for.cond.cleanup4_crit_edge.us.i:       ; preds = %for.body5.us.i, %middle.block226
  %inc12.us.i = add nuw nsw i32 %y.088.us.i, 1, !dbg !1735
    #dbg_value(i32 %inc12.us.i, !1667, !DIExpression(), !1715)
  %add.ptr.us.i72 = getelementptr i8, ptr %dst.addr.087.us.i, i64 %idx.ext.i66, !dbg !1736
    #dbg_value(ptr %add.ptr.us.i72, !1656, !DIExpression(), !1680)
    #dbg_value(ptr %add.ptr.us.i72, !1662, !DIExpression(), !1680)
  %exitcond99.not.i = icmp eq i32 %inc12.us.i, %i_height, !dbg !1737
  br i1 %exitcond99.not.i, label %if.end29, label %for.cond2.preheader.us.i, !dbg !1716, !llvm.loop !1738

if.else:                                          ; preds = %entry
  %weightfn24 = getelementptr inbounds i8, ptr %weight, i64 48, !dbg !1740
  %202 = load ptr, ptr %weightfn24, align 16, !dbg !1740
  %tobool25.not = icmp eq ptr %202, null, !dbg !1742
  br i1 %tobool25.not, label %if.else27, label %if.then26, !dbg !1743

if.then26:                                        ; preds = %if.else
    #dbg_value(ptr %dst, !1656, !DIExpression(), !1744)
    #dbg_value(i32 %i_dst_stride, !1661, !DIExpression(), !1744)
    #dbg_value(ptr %add.ptr9, !1662, !DIExpression(), !1744)
    #dbg_value(i32 %i_src_stride, !1663, !DIExpression(), !1744)
    #dbg_value(ptr %weight, !1664, !DIExpression(), !1744)
    #dbg_value(i32 %i_width, !1665, !DIExpression(), !1744)
    #dbg_value(i32 %i_height, !1666, !DIExpression(), !1744)
  %i_denom.i73 = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !1746
  %203 = load i32, ptr %i_denom.i73, align 16, !dbg !1746
  %cmp.i74 = icmp sgt i32 %203, 0, !dbg !1747
  %cmp185.i75 = icmp sgt i32 %i_height, 0, !dbg !1748
  br i1 %cmp.i74, label %for.cond.preheader.i107, label %for.cond17.preheader.i76, !dbg !1749

for.cond17.preheader.i76:                         ; preds = %if.then26
    #dbg_value(i32 0, !1674, !DIExpression(), !1750)
  br i1 %cmp185.i75, label %for.cond23.preheader.lr.ph.i77, label %if.end29, !dbg !1751

for.cond23.preheader.lr.ph.i77:                   ; preds = %for.cond17.preheader.i76
  %cmp2477.i78 = icmp sgt i32 %i_width, 0
  %i_scale31.i79 = getelementptr i8, ptr %weight, i64 36
  %i_offset33.i80 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43.i81 = sext i32 %i_dst_stride to i64
  %idx.ext45.i82 = sext i32 %i_src_stride to i64
  br i1 %cmp2477.i78, label %for.cond23.preheader.us.preheader.i83, label %if.end29

for.cond23.preheader.us.preheader.i83:            ; preds = %for.cond23.preheader.lr.ph.i77
  %wide.trip.count.i84 = zext nneg i32 %i_width to i64
  %204 = add nsw i32 %i_height, -1, !dbg !1751
  %205 = zext i32 %204 to i64, !dbg !1751
  %206 = mul nsw i64 %idx.ext43.i81, %205, !dbg !1751
  %207 = getelementptr i8, ptr %dst, i64 %206, !dbg !1751
  %scevgep264 = getelementptr i8, ptr %207, i64 %wide.trip.count.i84, !dbg !1751
  %208 = mul nsw i64 %idx.ext45.i82, %205, !dbg !1751
  %209 = getelementptr i8, ptr %1, i64 %208, !dbg !1751
  %210 = getelementptr i8, ptr %209, i64 %idx.ext8, !dbg !1751
  %211 = getelementptr i8, ptr %210, i64 %idx.ext, !dbg !1751
  %scevgep265 = getelementptr i8, ptr %211, i64 %wide.trip.count.i84, !dbg !1751
  %scevgep266 = getelementptr i8, ptr %weight, i64 44, !dbg !1751
  %min.iters.check279 = icmp ult i32 %i_width, 16
  %bound0267 = icmp ugt ptr %scevgep265, %dst
  %bound1268 = icmp ult ptr %add.ptr9, %scevgep264
  %found.conflict269 = and i1 %bound0267, %bound1268
  %212 = or i32 %i_dst_stride, %i_src_stride
  %213 = icmp slt i32 %212, 0
  %214 = or i1 %found.conflict269, %213
  %bound0272 = icmp ugt ptr %scevgep266, %dst
  %bound1273 = icmp ult ptr %i_scale31.i79, %scevgep264
  %found.conflict274 = and i1 %bound0272, %bound1273
  %stride.check275 = icmp slt i32 %i_dst_stride, 0
  %215 = or i1 %found.conflict274, %stride.check275
  %conflict.rdx276 = or i1 %214, %215
  %n.vec282 = and i64 %wide.trip.count.i84, 2147483632
  %cmp.n305 = icmp eq i64 %n.vec282, %wide.trip.count.i84
  %xtraiter363 = and i64 %wide.trip.count.i84, 1
  %lcmp.mod364.not = icmp eq i64 %xtraiter363, 0
  %216 = add nsw i64 %wide.trip.count.i84, -1
  br label %for.cond23.preheader.us.i85, !dbg !1751

for.cond23.preheader.us.i85:                      ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i102, %for.cond23.preheader.us.preheader.i83
  %y16.082.us.i86 = phi i32 [ %inc42.us.i103, %for.cond23.for.cond.cleanup26_crit_edge.us.i102 ], [ 0, %for.cond23.preheader.us.preheader.i83 ]
  %dst.addr.181.us.i87 = phi ptr [ %add.ptr44.us.i104, %for.cond23.for.cond.cleanup26_crit_edge.us.i102 ], [ %dst, %for.cond23.preheader.us.preheader.i83 ]
  %src.addr.180.us.i88 = phi ptr [ %add.ptr46.us.i105, %for.cond23.for.cond.cleanup26_crit_edge.us.i102 ], [ %add.ptr9, %for.cond23.preheader.us.preheader.i83 ]
    #dbg_value(i32 %y16.082.us.i86, !1674, !DIExpression(), !1750)
    #dbg_value(ptr %dst.addr.181.us.i87, !1656, !DIExpression(), !1744)
    #dbg_value(ptr %src.addr.180.us.i88, !1662, !DIExpression(), !1744)
    #dbg_value(i32 0, !1677, !DIExpression(), !1752)
  %brmerge369 = select i1 %min.iters.check279, i1 true, i1 %conflict.rdx276, !dbg !1753
  br i1 %brmerge369, label %for.body27.us.i89.preheader, label %vector.ph280, !dbg !1753

vector.ph280:                                     ; preds = %for.cond23.preheader.us.i85
  %217 = load i32, ptr %i_scale31.i79, align 4, !alias.scope !1754
  %broadcast.splatinsert294 = insertelement <4 x i32> poison, i32 %217, i64 0
  %broadcast.splat295 = shufflevector <4 x i32> %broadcast.splatinsert294, <4 x i32> poison, <4 x i32> zeroinitializer
  %218 = load i32, ptr %i_offset33.i80, align 8, !alias.scope !1754
  %broadcast.splatinsert302 = insertelement <4 x i32> poison, i32 %218, i64 0
  %broadcast.splat303 = shufflevector <4 x i32> %broadcast.splatinsert302, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body284, !dbg !1753

vector.body284:                                   ; preds = %vector.body284, %vector.ph280
  %index285 = phi i64 [ 0, %vector.ph280 ], [ %index.next304, %vector.body284 ], !dbg !1757
  %219 = getelementptr inbounds i8, ptr %src.addr.180.us.i88, i64 %index285, !dbg !1758
  %220 = getelementptr inbounds i8, ptr %219, i64 4, !dbg !1758
  %221 = getelementptr inbounds i8, ptr %219, i64 8, !dbg !1758
  %222 = getelementptr inbounds i8, ptr %219, i64 12, !dbg !1758
  %wide.load286 = load <4 x i8>, ptr %219, align 1, !dbg !1758, !alias.scope !1759
  %wide.load287 = load <4 x i8>, ptr %220, align 1, !dbg !1758, !alias.scope !1759
  %wide.load288 = load <4 x i8>, ptr %221, align 1, !dbg !1758, !alias.scope !1759
  %wide.load289 = load <4 x i8>, ptr %222, align 1, !dbg !1758, !alias.scope !1759
  %223 = zext <4 x i8> %wide.load286 to <4 x i32>, !dbg !1758
  %224 = zext <4 x i8> %wide.load287 to <4 x i32>, !dbg !1758
  %225 = zext <4 x i8> %wide.load288 to <4 x i32>, !dbg !1758
  %226 = zext <4 x i8> %wide.load289 to <4 x i32>, !dbg !1758
  %227 = mul nsw <4 x i32> %broadcast.splat295, %223, !dbg !1753
  %228 = mul nsw <4 x i32> %broadcast.splat295, %224, !dbg !1753
  %229 = mul nsw <4 x i32> %broadcast.splat295, %225, !dbg !1753
  %230 = mul nsw <4 x i32> %broadcast.splat295, %226, !dbg !1753
  %231 = add nsw <4 x i32> %227, %broadcast.splat303, !dbg !1753
  %232 = add nsw <4 x i32> %228, %broadcast.splat303, !dbg !1753
  %233 = add nsw <4 x i32> %229, %broadcast.splat303, !dbg !1753
  %234 = add nsw <4 x i32> %230, %broadcast.splat303, !dbg !1753
  %235 = icmp ult <4 x i32> %231, <i32 256, i32 256, i32 256, i32 256>, !dbg !1761
  %236 = icmp ult <4 x i32> %232, <i32 256, i32 256, i32 256, i32 256>, !dbg !1761
  %237 = icmp ult <4 x i32> %233, <i32 256, i32 256, i32 256, i32 256>, !dbg !1761
  %238 = icmp ult <4 x i32> %234, <i32 256, i32 256, i32 256, i32 256>, !dbg !1761
  %239 = icmp sgt <4 x i32> %231, zeroinitializer, !dbg !1763
  %240 = icmp sgt <4 x i32> %232, zeroinitializer, !dbg !1763
  %241 = icmp sgt <4 x i32> %233, zeroinitializer, !dbg !1763
  %242 = icmp sgt <4 x i32> %234, zeroinitializer, !dbg !1763
  %243 = sext <4 x i1> %239 to <4 x i32>, !dbg !1763
  %244 = sext <4 x i1> %240 to <4 x i32>, !dbg !1763
  %245 = sext <4 x i1> %241 to <4 x i32>, !dbg !1763
  %246 = sext <4 x i1> %242 to <4 x i32>, !dbg !1763
  %247 = select <4 x i1> %235, <4 x i32> %231, <4 x i32> %243, !dbg !1763
  %248 = select <4 x i1> %236, <4 x i32> %232, <4 x i32> %244, !dbg !1763
  %249 = select <4 x i1> %237, <4 x i32> %233, <4 x i32> %245, !dbg !1763
  %250 = select <4 x i1> %238, <4 x i32> %234, <4 x i32> %246, !dbg !1763
  %251 = trunc <4 x i32> %247 to <4 x i8>, !dbg !1763
  %252 = trunc <4 x i32> %248 to <4 x i8>, !dbg !1763
  %253 = trunc <4 x i32> %249 to <4 x i8>, !dbg !1763
  %254 = trunc <4 x i32> %250 to <4 x i8>, !dbg !1763
  %255 = getelementptr inbounds i8, ptr %dst.addr.181.us.i87, i64 %index285, !dbg !1758
  %256 = getelementptr inbounds i8, ptr %255, i64 4, !dbg !1758
  %257 = getelementptr inbounds i8, ptr %255, i64 8, !dbg !1758
  %258 = getelementptr inbounds i8, ptr %255, i64 12, !dbg !1758
  store <4 x i8> %251, ptr %255, align 1, !dbg !1758, !alias.scope !1764, !noalias !1766
  store <4 x i8> %252, ptr %256, align 1, !dbg !1758, !alias.scope !1764, !noalias !1766
  store <4 x i8> %253, ptr %257, align 1, !dbg !1758, !alias.scope !1764, !noalias !1766
  store <4 x i8> %254, ptr %258, align 1, !dbg !1758, !alias.scope !1764, !noalias !1766
  %index.next304 = add nuw i64 %index285, 16, !dbg !1757
  %259 = icmp eq i64 %index.next304, %n.vec282, !dbg !1757
  br i1 %259, label %middle.block277, label %vector.body284, !dbg !1757, !llvm.loop !1767

middle.block277:                                  ; preds = %vector.body284
  br i1 %cmp.n305, label %for.cond23.for.cond.cleanup26_crit_edge.us.i102, label %for.body27.us.i89.preheader, !dbg !1753

for.body27.us.i89.preheader:                      ; preds = %for.cond23.preheader.us.i85, %middle.block277
  %indvars.iv.i90.ph = phi i64 [ 0, %for.cond23.preheader.us.i85 ], [ %n.vec282, %middle.block277 ]
  br i1 %lcmp.mod364.not, label %for.body27.us.i89.prol.loopexit, label %for.body27.us.i89.prol, !dbg !1753

for.body27.us.i89.prol:                           ; preds = %for.body27.us.i89.preheader
    #dbg_value(i64 poison, !1677, !DIExpression(), !1752)
  %arrayidx29.us.i91.prol = getelementptr inbounds i8, ptr %src.addr.180.us.i88, i64 %indvars.iv.i90.ph, !dbg !1758
  %260 = load i8, ptr %arrayidx29.us.i91.prol, align 1, !dbg !1758
  %conv30.us.i92.prol = zext i8 %260 to i32, !dbg !1758
  %261 = load i32, ptr %i_scale31.i79, align 4, !dbg !1758
  %mul32.us.i93.prol = mul nsw i32 %261, %conv30.us.i92.prol, !dbg !1758
  %262 = load i32, ptr %i_offset33.i80, align 8, !dbg !1758
  %add34.us.i94.prol = add nsw i32 %mul32.us.i93.prol, %262, !dbg !1758
    #dbg_value(i32 %add34.us.i94.prol, !1702, !DIExpression(), !1769)
  %tobool.not.i72.us.i95.prol = icmp ult i32 %add34.us.i94.prol, 256, !dbg !1761
  %263 = icmp sgt i32 %add34.us.i94.prol, 0, !dbg !1763
  %shr.i73.us.i96.prol = sext i1 %263 to i32, !dbg !1763
  %cond.i74.us.i97.prol = select i1 %tobool.not.i72.us.i95.prol, i32 %add34.us.i94.prol, i32 %shr.i73.us.i96.prol, !dbg !1763
  %conv.i75.us.i98.prol = trunc i32 %cond.i74.us.i97.prol to i8, !dbg !1763
  %arrayidx37.us.i99.prol = getelementptr inbounds i8, ptr %dst.addr.181.us.i87, i64 %indvars.iv.i90.ph, !dbg !1758
  store i8 %conv.i75.us.i98.prol, ptr %arrayidx37.us.i99.prol, align 1, !dbg !1758
  %indvars.iv.next.i100.prol = or disjoint i64 %indvars.iv.i90.ph, 1, !dbg !1757
    #dbg_value(i64 %indvars.iv.next.i100.prol, !1677, !DIExpression(), !1752)
  br label %for.body27.us.i89.prol.loopexit, !dbg !1753

for.body27.us.i89.prol.loopexit:                  ; preds = %for.body27.us.i89.prol, %for.body27.us.i89.preheader
  %indvars.iv.i90.unr = phi i64 [ %indvars.iv.i90.ph, %for.body27.us.i89.preheader ], [ %indvars.iv.next.i100.prol, %for.body27.us.i89.prol ]
  %264 = icmp eq i64 %indvars.iv.i90.ph, %216, !dbg !1753
  br i1 %264, label %for.cond23.for.cond.cleanup26_crit_edge.us.i102, label %for.body27.us.i89, !dbg !1753

for.body27.us.i89:                                ; preds = %for.body27.us.i89.prol.loopexit, %for.body27.us.i89
  %indvars.iv.i90 = phi i64 [ %indvars.iv.next.i100.1, %for.body27.us.i89 ], [ %indvars.iv.i90.unr, %for.body27.us.i89.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i90, !1677, !DIExpression(), !1752)
  %arrayidx29.us.i91 = getelementptr inbounds i8, ptr %src.addr.180.us.i88, i64 %indvars.iv.i90, !dbg !1758
  %265 = load i8, ptr %arrayidx29.us.i91, align 1, !dbg !1758
  %conv30.us.i92 = zext i8 %265 to i32, !dbg !1758
  %266 = load i32, ptr %i_scale31.i79, align 4, !dbg !1758
  %mul32.us.i93 = mul nsw i32 %266, %conv30.us.i92, !dbg !1758
  %267 = load i32, ptr %i_offset33.i80, align 8, !dbg !1758
  %add34.us.i94 = add nsw i32 %mul32.us.i93, %267, !dbg !1758
    #dbg_value(i32 %add34.us.i94, !1702, !DIExpression(), !1769)
  %tobool.not.i72.us.i95 = icmp ult i32 %add34.us.i94, 256, !dbg !1761
  %268 = icmp sgt i32 %add34.us.i94, 0, !dbg !1763
  %shr.i73.us.i96 = sext i1 %268 to i32, !dbg !1763
  %cond.i74.us.i97 = select i1 %tobool.not.i72.us.i95, i32 %add34.us.i94, i32 %shr.i73.us.i96, !dbg !1763
  %conv.i75.us.i98 = trunc i32 %cond.i74.us.i97 to i8, !dbg !1763
  %arrayidx37.us.i99 = getelementptr inbounds i8, ptr %dst.addr.181.us.i87, i64 %indvars.iv.i90, !dbg !1758
  store i8 %conv.i75.us.i98, ptr %arrayidx37.us.i99, align 1, !dbg !1758
  %indvars.iv.next.i100 = add nuw nsw i64 %indvars.iv.i90, 1, !dbg !1757
    #dbg_value(i64 %indvars.iv.next.i100, !1677, !DIExpression(), !1752)
  %arrayidx29.us.i91.1 = getelementptr inbounds i8, ptr %src.addr.180.us.i88, i64 %indvars.iv.next.i100, !dbg !1758
  %269 = load i8, ptr %arrayidx29.us.i91.1, align 1, !dbg !1758
  %conv30.us.i92.1 = zext i8 %269 to i32, !dbg !1758
  %270 = load i32, ptr %i_scale31.i79, align 4, !dbg !1758
  %mul32.us.i93.1 = mul nsw i32 %270, %conv30.us.i92.1, !dbg !1758
  %271 = load i32, ptr %i_offset33.i80, align 8, !dbg !1758
  %add34.us.i94.1 = add nsw i32 %mul32.us.i93.1, %271, !dbg !1758
    #dbg_value(i32 %add34.us.i94.1, !1702, !DIExpression(), !1769)
  %tobool.not.i72.us.i95.1 = icmp ult i32 %add34.us.i94.1, 256, !dbg !1761
  %272 = icmp sgt i32 %add34.us.i94.1, 0, !dbg !1763
  %shr.i73.us.i96.1 = sext i1 %272 to i32, !dbg !1763
  %cond.i74.us.i97.1 = select i1 %tobool.not.i72.us.i95.1, i32 %add34.us.i94.1, i32 %shr.i73.us.i96.1, !dbg !1763
  %conv.i75.us.i98.1 = trunc i32 %cond.i74.us.i97.1 to i8, !dbg !1763
  %arrayidx37.us.i99.1 = getelementptr inbounds i8, ptr %dst.addr.181.us.i87, i64 %indvars.iv.next.i100, !dbg !1758
  store i8 %conv.i75.us.i98.1, ptr %arrayidx37.us.i99.1, align 1, !dbg !1758
  %indvars.iv.next.i100.1 = add nuw nsw i64 %indvars.iv.i90, 2, !dbg !1757
    #dbg_value(i64 %indvars.iv.next.i100.1, !1677, !DIExpression(), !1752)
  %exitcond.not.i101.1 = icmp eq i64 %indvars.iv.next.i100.1, %wide.trip.count.i84, !dbg !1770
  br i1 %exitcond.not.i101.1, label %for.cond23.for.cond.cleanup26_crit_edge.us.i102, label %for.body27.us.i89, !dbg !1753, !llvm.loop !1771

for.cond23.for.cond.cleanup26_crit_edge.us.i102:  ; preds = %for.body27.us.i89.prol.loopexit, %for.body27.us.i89, %middle.block277
  %inc42.us.i103 = add nuw nsw i32 %y16.082.us.i86, 1, !dbg !1772
    #dbg_value(i32 %inc42.us.i103, !1674, !DIExpression(), !1750)
  %add.ptr44.us.i104 = getelementptr inbounds i8, ptr %dst.addr.181.us.i87, i64 %idx.ext43.i81, !dbg !1773
    #dbg_value(ptr %add.ptr44.us.i104, !1656, !DIExpression(), !1744)
  %add.ptr46.us.i105 = getelementptr inbounds i8, ptr %src.addr.180.us.i88, i64 %idx.ext45.i82, !dbg !1774
    #dbg_value(ptr %add.ptr46.us.i105, !1662, !DIExpression(), !1744)
  %exitcond93.not.i106 = icmp eq i32 %inc42.us.i103, %i_height, !dbg !1775
  br i1 %exitcond93.not.i106, label %if.end29, label %for.cond23.preheader.us.i85, !dbg !1751, !llvm.loop !1776

for.cond.preheader.i107:                          ; preds = %if.then26
    #dbg_value(i32 0, !1667, !DIExpression(), !1778)
  br i1 %cmp185.i75, label %for.cond2.preheader.lr.ph.i108, label %if.end29, !dbg !1779

for.cond2.preheader.lr.ph.i108:                   ; preds = %for.cond.preheader.i107
  %cmp383.i109 = icmp sgt i32 %i_width, 0
  %i_scale.i110 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset.i111 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext.i112 = sext i32 %i_dst_stride to i64
  %idx.ext13.i113 = sext i32 %i_src_stride to i64
  br i1 %cmp383.i109, label %for.cond2.preheader.us.preheader.i114, label %if.end29

for.cond2.preheader.us.preheader.i114:            ; preds = %for.cond2.preheader.lr.ph.i108
  %wide.trip.count97.i115 = zext nneg i32 %i_width to i64
  %273 = add nsw i32 %i_height, -1, !dbg !1779
  %274 = zext i32 %273 to i64, !dbg !1779
  %275 = mul nsw i64 %idx.ext.i112, %274, !dbg !1779
  %276 = getelementptr i8, ptr %dst, i64 %275, !dbg !1779
  %scevgep307 = getelementptr i8, ptr %276, i64 %wide.trip.count97.i115, !dbg !1779
  %277 = mul nsw i64 %idx.ext13.i113, %274, !dbg !1779
  %278 = getelementptr i8, ptr %1, i64 %277, !dbg !1779
  %279 = getelementptr i8, ptr %278, i64 %idx.ext8, !dbg !1779
  %280 = getelementptr i8, ptr %279, i64 %idx.ext, !dbg !1779
  %scevgep308 = getelementptr i8, ptr %280, i64 %wide.trip.count97.i115, !dbg !1779
  %scevgep309 = getelementptr i8, ptr %weight, i64 44, !dbg !1779
  %min.iters.check322 = icmp ult i32 %i_width, 16
  %bound0310 = icmp ugt ptr %scevgep308, %dst
  %bound1311 = icmp ult ptr %add.ptr9, %scevgep307
  %found.conflict312 = and i1 %bound0310, %bound1311
  %281 = or i32 %i_dst_stride, %i_src_stride
  %282 = icmp slt i32 %281, 0
  %283 = or i1 %found.conflict312, %282
  %bound0315 = icmp ugt ptr %scevgep309, %dst
  %bound1316 = icmp ult ptr %i_denom.i73, %scevgep307
  %found.conflict317 = and i1 %bound0315, %bound1316
  %stride.check318 = icmp slt i32 %i_dst_stride, 0
  %284 = or i1 %found.conflict317, %stride.check318
  %conflict.rdx319 = or i1 %283, %284
  %n.vec325 = and i64 %wide.trip.count97.i115, 2147483632
  %cmp.n356 = icmp eq i64 %n.vec325, %wide.trip.count97.i115
  br label %for.cond2.preheader.us.i116, !dbg !1779

for.cond2.preheader.us.i116:                      ; preds = %for.cond2.for.cond.cleanup4_crit_edge.us.i137, %for.cond2.preheader.us.preheader.i114
  %y.088.us.i117 = phi i32 [ %inc12.us.i138, %for.cond2.for.cond.cleanup4_crit_edge.us.i137 ], [ 0, %for.cond2.preheader.us.preheader.i114 ]
  %dst.addr.087.us.i118 = phi ptr [ %add.ptr.us.i139, %for.cond2.for.cond.cleanup4_crit_edge.us.i137 ], [ %dst, %for.cond2.preheader.us.preheader.i114 ]
  %src.addr.086.us.i119 = phi ptr [ %add.ptr14.us.i140, %for.cond2.for.cond.cleanup4_crit_edge.us.i137 ], [ %add.ptr9, %for.cond2.preheader.us.preheader.i114 ]
    #dbg_value(i32 %y.088.us.i117, !1667, !DIExpression(), !1778)
    #dbg_value(ptr %dst.addr.087.us.i118, !1656, !DIExpression(), !1744)
    #dbg_value(ptr %src.addr.086.us.i119, !1662, !DIExpression(), !1744)
    #dbg_value(i32 0, !1671, !DIExpression(), !1780)
  %brmerge370 = select i1 %min.iters.check322, i1 true, i1 %conflict.rdx319, !dbg !1781
  br i1 %brmerge370, label %for.body5.us.i120.preheader, label %vector.ph323, !dbg !1781

vector.ph323:                                     ; preds = %for.cond2.preheader.us.i116
  %285 = load i32, ptr %i_scale.i110, align 4, !alias.scope !1782
  %broadcast.splatinsert337 = insertelement <4 x i32> poison, i32 %285, i64 0
  %broadcast.splat338 = shufflevector <4 x i32> %broadcast.splatinsert337, <4 x i32> poison, <4 x i32> zeroinitializer
  %286 = load i32, ptr %i_denom.i73, align 16, !alias.scope !1782
  %broadcast.splatinsert345 = insertelement <4 x i32> poison, i32 %286, i64 0
  %broadcast.splat346 = shufflevector <4 x i32> %broadcast.splatinsert345, <4 x i32> poison, <4 x i32> zeroinitializer
  %287 = add nsw <4 x i32> %broadcast.splat346, <i32 -1, i32 -1, i32 -1, i32 -1>
  %288 = add nsw <4 x i32> %broadcast.splat346, <i32 -1, i32 -1, i32 -1, i32 -1>
  %289 = add nsw <4 x i32> %broadcast.splat346, <i32 -1, i32 -1, i32 -1, i32 -1>
  %290 = add nsw <4 x i32> %broadcast.splat346, <i32 -1, i32 -1, i32 -1, i32 -1>
  %291 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %287
  %292 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %288
  %293 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %289
  %294 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %290
  %295 = load i32, ptr %i_offset.i111, align 8, !alias.scope !1782
  %broadcast.splatinsert353 = insertelement <4 x i32> poison, i32 %295, i64 0
  %broadcast.splat354 = shufflevector <4 x i32> %broadcast.splatinsert353, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body327, !dbg !1781

vector.body327:                                   ; preds = %vector.body327, %vector.ph323
  %index328 = phi i64 [ 0, %vector.ph323 ], [ %index.next355, %vector.body327 ], !dbg !1785
  %296 = getelementptr inbounds i8, ptr %src.addr.086.us.i119, i64 %index328, !dbg !1786
  %297 = getelementptr inbounds i8, ptr %296, i64 4, !dbg !1786
  %298 = getelementptr inbounds i8, ptr %296, i64 8, !dbg !1786
  %299 = getelementptr inbounds i8, ptr %296, i64 12, !dbg !1786
  %wide.load329 = load <4 x i8>, ptr %296, align 1, !dbg !1786, !alias.scope !1787
  %wide.load330 = load <4 x i8>, ptr %297, align 1, !dbg !1786, !alias.scope !1787
  %wide.load331 = load <4 x i8>, ptr %298, align 1, !dbg !1786, !alias.scope !1787
  %wide.load332 = load <4 x i8>, ptr %299, align 1, !dbg !1786, !alias.scope !1787
  %300 = zext <4 x i8> %wide.load329 to <4 x i32>, !dbg !1786
  %301 = zext <4 x i8> %wide.load330 to <4 x i32>, !dbg !1786
  %302 = zext <4 x i8> %wide.load331 to <4 x i32>, !dbg !1786
  %303 = zext <4 x i8> %wide.load332 to <4 x i32>, !dbg !1786
  %304 = mul nsw <4 x i32> %broadcast.splat338, %300, !dbg !1781
  %305 = mul nsw <4 x i32> %broadcast.splat338, %301, !dbg !1781
  %306 = mul nsw <4 x i32> %broadcast.splat338, %302, !dbg !1781
  %307 = mul nsw <4 x i32> %broadcast.splat338, %303, !dbg !1781
  %308 = add nsw <4 x i32> %291, %304, !dbg !1786
  %309 = add nsw <4 x i32> %292, %305, !dbg !1786
  %310 = add nsw <4 x i32> %293, %306, !dbg !1786
  %311 = add nsw <4 x i32> %294, %307, !dbg !1786
  %312 = ashr <4 x i32> %308, %broadcast.splat346, !dbg !1786
  %313 = ashr <4 x i32> %309, %broadcast.splat346, !dbg !1786
  %314 = ashr <4 x i32> %310, %broadcast.splat346, !dbg !1786
  %315 = ashr <4 x i32> %311, %broadcast.splat346, !dbg !1786
  %316 = add nsw <4 x i32> %312, %broadcast.splat354, !dbg !1781
  %317 = add nsw <4 x i32> %313, %broadcast.splat354, !dbg !1781
  %318 = add nsw <4 x i32> %314, %broadcast.splat354, !dbg !1781
  %319 = add nsw <4 x i32> %315, %broadcast.splat354, !dbg !1781
  %320 = icmp ult <4 x i32> %316, <i32 256, i32 256, i32 256, i32 256>, !dbg !1789
  %321 = icmp ult <4 x i32> %317, <i32 256, i32 256, i32 256, i32 256>, !dbg !1789
  %322 = icmp ult <4 x i32> %318, <i32 256, i32 256, i32 256, i32 256>, !dbg !1789
  %323 = icmp ult <4 x i32> %319, <i32 256, i32 256, i32 256, i32 256>, !dbg !1789
  %324 = icmp sgt <4 x i32> %316, zeroinitializer, !dbg !1791
  %325 = icmp sgt <4 x i32> %317, zeroinitializer, !dbg !1791
  %326 = icmp sgt <4 x i32> %318, zeroinitializer, !dbg !1791
  %327 = icmp sgt <4 x i32> %319, zeroinitializer, !dbg !1791
  %328 = sext <4 x i1> %324 to <4 x i32>, !dbg !1791
  %329 = sext <4 x i1> %325 to <4 x i32>, !dbg !1791
  %330 = sext <4 x i1> %326 to <4 x i32>, !dbg !1791
  %331 = sext <4 x i1> %327 to <4 x i32>, !dbg !1791
  %332 = select <4 x i1> %320, <4 x i32> %316, <4 x i32> %328, !dbg !1791
  %333 = select <4 x i1> %321, <4 x i32> %317, <4 x i32> %329, !dbg !1791
  %334 = select <4 x i1> %322, <4 x i32> %318, <4 x i32> %330, !dbg !1791
  %335 = select <4 x i1> %323, <4 x i32> %319, <4 x i32> %331, !dbg !1791
  %336 = trunc <4 x i32> %332 to <4 x i8>, !dbg !1791
  %337 = trunc <4 x i32> %333 to <4 x i8>, !dbg !1791
  %338 = trunc <4 x i32> %334 to <4 x i8>, !dbg !1791
  %339 = trunc <4 x i32> %335 to <4 x i8>, !dbg !1791
  %340 = getelementptr inbounds i8, ptr %dst.addr.087.us.i118, i64 %index328, !dbg !1786
  %341 = getelementptr inbounds i8, ptr %340, i64 4, !dbg !1786
  %342 = getelementptr inbounds i8, ptr %340, i64 8, !dbg !1786
  %343 = getelementptr inbounds i8, ptr %340, i64 12, !dbg !1786
  store <4 x i8> %336, ptr %340, align 1, !dbg !1786, !alias.scope !1792, !noalias !1794
  store <4 x i8> %337, ptr %341, align 1, !dbg !1786, !alias.scope !1792, !noalias !1794
  store <4 x i8> %338, ptr %342, align 1, !dbg !1786, !alias.scope !1792, !noalias !1794
  store <4 x i8> %339, ptr %343, align 1, !dbg !1786, !alias.scope !1792, !noalias !1794
  %index.next355 = add nuw i64 %index328, 16, !dbg !1785
  %344 = icmp eq i64 %index.next355, %n.vec325, !dbg !1785
  br i1 %344, label %middle.block320, label %vector.body327, !dbg !1785, !llvm.loop !1795

middle.block320:                                  ; preds = %vector.body327
  br i1 %cmp.n356, label %for.cond2.for.cond.cleanup4_crit_edge.us.i137, label %for.body5.us.i120.preheader, !dbg !1781

for.body5.us.i120.preheader:                      ; preds = %for.cond2.preheader.us.i116, %middle.block320
  %indvars.iv94.i121.ph = phi i64 [ 0, %for.cond2.preheader.us.i116 ], [ %n.vec325, %middle.block320 ]
  br label %for.body5.us.i120, !dbg !1781

for.body5.us.i120:                                ; preds = %for.body5.us.i120.preheader, %for.body5.us.i120
  %indvars.iv94.i121 = phi i64 [ %indvars.iv.next95.i135, %for.body5.us.i120 ], [ %indvars.iv94.i121.ph, %for.body5.us.i120.preheader ]
    #dbg_value(i64 %indvars.iv94.i121, !1671, !DIExpression(), !1780)
  %arrayidx.us.i122 = getelementptr inbounds i8, ptr %src.addr.086.us.i119, i64 %indvars.iv94.i121, !dbg !1786
  %345 = load i8, ptr %arrayidx.us.i122, align 1, !dbg !1786
  %conv.us.i123 = zext i8 %345 to i32, !dbg !1786
  %346 = load i32, ptr %i_scale.i110, align 4, !dbg !1786
  %mul.us.i124 = mul nsw i32 %346, %conv.us.i123, !dbg !1786
  %347 = load i32, ptr %i_denom.i73, align 16, !dbg !1786
  %sub.us.i125 = add nsw i32 %347, -1, !dbg !1786
  %shl.us.i126 = shl nuw i32 1, %sub.us.i125, !dbg !1786
  %add.us.i127 = add nsw i32 %shl.us.i126, %mul.us.i124, !dbg !1786
  %shr.us.i128 = ashr i32 %add.us.i127, %347, !dbg !1786
  %348 = load i32, ptr %i_offset.i111, align 8, !dbg !1786
  %add8.us.i129 = add nsw i32 %shr.us.i128, %348, !dbg !1786
    #dbg_value(i32 %add8.us.i129, !1702, !DIExpression(), !1797)
  %tobool.not.i.us.i130 = icmp ult i32 %add8.us.i129, 256, !dbg !1789
  %349 = icmp sgt i32 %add8.us.i129, 0, !dbg !1791
  %shr.i.us.i131 = sext i1 %349 to i32, !dbg !1791
  %cond.i.us.i132 = select i1 %tobool.not.i.us.i130, i32 %add8.us.i129, i32 %shr.i.us.i131, !dbg !1791
  %conv.i.us.i133 = trunc i32 %cond.i.us.i132 to i8, !dbg !1791
  %arrayidx10.us.i134 = getelementptr inbounds i8, ptr %dst.addr.087.us.i118, i64 %indvars.iv94.i121, !dbg !1786
  store i8 %conv.i.us.i133, ptr %arrayidx10.us.i134, align 1, !dbg !1786
  %indvars.iv.next95.i135 = add nuw nsw i64 %indvars.iv94.i121, 1, !dbg !1785
    #dbg_value(i64 %indvars.iv.next95.i135, !1671, !DIExpression(), !1780)
  %exitcond98.not.i136 = icmp eq i64 %indvars.iv.next95.i135, %wide.trip.count97.i115, !dbg !1798
  br i1 %exitcond98.not.i136, label %for.cond2.for.cond.cleanup4_crit_edge.us.i137, label %for.body5.us.i120, !dbg !1781, !llvm.loop !1799

for.cond2.for.cond.cleanup4_crit_edge.us.i137:    ; preds = %for.body5.us.i120, %middle.block320
  %inc12.us.i138 = add nuw nsw i32 %y.088.us.i117, 1, !dbg !1800
    #dbg_value(i32 %inc12.us.i138, !1667, !DIExpression(), !1778)
  %add.ptr.us.i139 = getelementptr inbounds i8, ptr %dst.addr.087.us.i118, i64 %idx.ext.i112, !dbg !1801
    #dbg_value(ptr %add.ptr.us.i139, !1656, !DIExpression(), !1744)
  %add.ptr14.us.i140 = getelementptr inbounds i8, ptr %src.addr.086.us.i119, i64 %idx.ext13.i113, !dbg !1802
    #dbg_value(ptr %add.ptr14.us.i140, !1662, !DIExpression(), !1744)
  %exitcond99.not.i141 = icmp eq i32 %inc12.us.i138, %i_height, !dbg !1803
  br i1 %exitcond99.not.i141, label %if.end29, label %for.cond2.preheader.us.i116, !dbg !1779, !llvm.loop !1804

if.else27:                                        ; preds = %if.else
    #dbg_value(ptr %add.ptr9, !1806, !DIExpression(), !1816)
    #dbg_value(i32 %i_src_stride, !1809, !DIExpression(), !1816)
    #dbg_value(ptr %dst, !1810, !DIExpression(), !1816)
    #dbg_value(i32 %i_dst_stride, !1811, !DIExpression(), !1816)
    #dbg_value(i32 %i_width, !1812, !DIExpression(), !1816)
    #dbg_value(i32 %i_height, !1813, !DIExpression(), !1816)
    #dbg_value(i32 0, !1814, !DIExpression(), !1818)
  %cmp6.i = icmp sgt i32 %i_height, 0, !dbg !1819
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %if.end29, !dbg !1821

for.body.lr.ph.i:                                 ; preds = %if.else27
  %conv.i = sext i32 %i_width to i64
  %idx.ext.i143 = sext i32 %i_src_stride to i64
  %idx.ext1.i = sext i32 %i_dst_stride to i64
  %xtraiter365 = and i32 %i_height, 3, !dbg !1821
  %350 = icmp ult i32 %i_height, 4, !dbg !1821
  br i1 %350, label %if.end29.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !1821

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i32 %i_height, 2147483644, !dbg !1821
  br label %for.body.i, !dbg !1821

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %src.addr.08.i = phi ptr [ %add.ptr9, %for.body.lr.ph.i.new ], [ %add.ptr.i.3, %for.body.i ]
  %dst.addr.07.i = phi ptr [ %dst, %for.body.lr.ph.i.new ], [ %add.ptr2.i.3, %for.body.i ]
  %niter = phi i32 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !1818)
    #dbg_value(ptr %src.addr.08.i, !1806, !DIExpression(), !1816)
    #dbg_value(ptr %dst.addr.07.i, !1810, !DIExpression(), !1816)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst.addr.07.i, ptr align 1 %src.addr.08.i, i64 %conv.i, i1 false), !dbg !1822
  %add.ptr.i = getelementptr inbounds i8, ptr %src.addr.08.i, i64 %idx.ext.i143, !dbg !1824
    #dbg_value(ptr %add.ptr.i, !1806, !DIExpression(), !1816)
  %add.ptr2.i = getelementptr inbounds i8, ptr %dst.addr.07.i, i64 %idx.ext1.i, !dbg !1825
    #dbg_value(ptr %add.ptr2.i, !1810, !DIExpression(), !1816)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1818)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr2.i, ptr align 1 %add.ptr.i, i64 %conv.i, i1 false), !dbg !1822
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 %idx.ext.i143, !dbg !1824
    #dbg_value(ptr %add.ptr.i.1, !1806, !DIExpression(), !1816)
  %add.ptr2.i.1 = getelementptr inbounds i8, ptr %add.ptr2.i, i64 %idx.ext1.i, !dbg !1825
    #dbg_value(ptr %add.ptr2.i.1, !1810, !DIExpression(), !1816)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1818)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr2.i.1, ptr align 1 %add.ptr.i.1, i64 %conv.i, i1 false), !dbg !1822
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 %idx.ext.i143, !dbg !1824
    #dbg_value(ptr %add.ptr.i.2, !1806, !DIExpression(), !1816)
  %add.ptr2.i.2 = getelementptr inbounds i8, ptr %add.ptr2.i.1, i64 %idx.ext1.i, !dbg !1825
    #dbg_value(ptr %add.ptr2.i.2, !1810, !DIExpression(), !1816)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1818)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %add.ptr2.i.2, ptr align 1 %add.ptr.i.2, i64 %conv.i, i1 false), !dbg !1822
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 %idx.ext.i143, !dbg !1824
    #dbg_value(ptr %add.ptr.i.3, !1806, !DIExpression(), !1816)
  %add.ptr2.i.3 = getelementptr inbounds i8, ptr %add.ptr2.i.2, i64 %idx.ext1.i, !dbg !1825
    #dbg_value(ptr %add.ptr2.i.3, !1810, !DIExpression(), !1816)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !1818)
  %niter.next.3 = add i32 %niter, 4, !dbg !1821
  %niter.ncmp.3 = icmp eq i32 %niter.next.3, %unroll_iter, !dbg !1821
  br i1 %niter.ncmp.3, label %if.end29.loopexit.unr-lcssa, label %for.body.i, !dbg !1821, !llvm.loop !1826

if.end29.loopexit.unr-lcssa:                      ; preds = %for.body.i, %for.body.lr.ph.i
  %src.addr.08.i.unr = phi ptr [ %add.ptr9, %for.body.lr.ph.i ], [ %add.ptr.i.3, %for.body.i ]
  %dst.addr.07.i.unr = phi ptr [ %dst, %for.body.lr.ph.i ], [ %add.ptr2.i.3, %for.body.i ]
  %lcmp.mod366.not = icmp eq i32 %xtraiter365, 0, !dbg !1821
  br i1 %lcmp.mod366.not, label %if.end29, label %for.body.i.epil, !dbg !1821

for.body.i.epil:                                  ; preds = %if.end29.loopexit.unr-lcssa, %for.body.i.epil
  %src.addr.08.i.epil = phi ptr [ %add.ptr.i.epil, %for.body.i.epil ], [ %src.addr.08.i.unr, %if.end29.loopexit.unr-lcssa ]
  %dst.addr.07.i.epil = phi ptr [ %add.ptr2.i.epil, %for.body.i.epil ], [ %dst.addr.07.i.unr, %if.end29.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.next, %for.body.i.epil ], [ 0, %if.end29.loopexit.unr-lcssa ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !1818)
    #dbg_value(ptr %src.addr.08.i.epil, !1806, !DIExpression(), !1816)
    #dbg_value(ptr %dst.addr.07.i.epil, !1810, !DIExpression(), !1816)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst.addr.07.i.epil, ptr align 1 %src.addr.08.i.epil, i64 %conv.i, i1 false), !dbg !1822
  %add.ptr.i.epil = getelementptr inbounds i8, ptr %src.addr.08.i.epil, i64 %idx.ext.i143, !dbg !1824
    #dbg_value(ptr %add.ptr.i.epil, !1806, !DIExpression(), !1816)
  %add.ptr2.i.epil = getelementptr inbounds i8, ptr %dst.addr.07.i.epil, i64 %idx.ext1.i, !dbg !1825
    #dbg_value(ptr %add.ptr2.i.epil, !1810, !DIExpression(), !1816)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1818)
  %epil.iter.next = add i32 %epil.iter, 1, !dbg !1821
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.next, %xtraiter365, !dbg !1821
  br i1 %epil.iter.cmp.not, label %if.end29, label %for.body.i.epil, !dbg !1821, !llvm.loop !1828

if.end29:                                         ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i, %for.cond2.for.cond.cleanup4_crit_edge.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i102, %for.cond2.for.cond.cleanup4_crit_edge.us.i137, %if.end29.loopexit.unr-lcssa, %for.body.i.epil, %if.else27, %for.cond2.preheader.lr.ph.i108, %for.cond.preheader.i107, %for.cond23.preheader.lr.ph.i77, %for.cond17.preheader.i76, %for.cond2.preheader.lr.ph.i, %for.cond.preheader.i, %for.cond23.preheader.lr.ph.i, %for.cond17.preheader.i, %pixel_avg.exit
  ret void, !dbg !1829
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal ptr @get_ref(ptr noundef %dst, ptr nocapture noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, i32 noundef %mvx, i32 noundef %mvy, i32 noundef %i_width, i32 noundef %i_height, ptr nocapture noundef readonly %weight) #0 !dbg !1830 {
entry:
    #dbg_value(ptr %dst, !1832, !DIExpression(), !1847)
    #dbg_value(ptr %i_dst_stride, !1833, !DIExpression(), !1847)
    #dbg_value(ptr %src, !1834, !DIExpression(), !1847)
    #dbg_value(i32 %i_src_stride, !1835, !DIExpression(), !1847)
    #dbg_value(i32 %mvx, !1836, !DIExpression(), !1847)
    #dbg_value(i32 %mvy, !1837, !DIExpression(), !1847)
    #dbg_value(i32 %i_width, !1838, !DIExpression(), !1847)
    #dbg_value(i32 %i_height, !1839, !DIExpression(), !1847)
    #dbg_value(ptr %weight, !1840, !DIExpression(), !1847)
  %and = and i32 %mvy, 3, !dbg !1848
  %shl = shl nuw nsw i32 %and, 2, !dbg !1849
  %and1 = and i32 %mvx, 3, !dbg !1850
  %add = or disjoint i32 %shl, %and1, !dbg !1851
    #dbg_value(i32 %add, !1841, !DIExpression(), !1847)
  %shr = ashr i32 %mvy, 2, !dbg !1852
  %mul = mul i32 %shr, %i_src_stride, !dbg !1853
  %shr2 = ashr i32 %mvx, 2, !dbg !1854
  %add3 = add i32 %mul, %shr2, !dbg !1855
    #dbg_value(i32 %add3, !1842, !DIExpression(), !1847)
  %idxprom = zext nneg i32 %add to i64, !dbg !1856
  %arrayidx = getelementptr inbounds [16 x i8], ptr @hpel_ref0, i64 0, i64 %idxprom, !dbg !1856
  %0 = load i8, ptr %arrayidx, align 1, !dbg !1856
  %idxprom4 = zext i8 %0 to i64, !dbg !1857
  %arrayidx5 = getelementptr inbounds ptr, ptr %src, i64 %idxprom4, !dbg !1857
  %1 = load ptr, ptr %arrayidx5, align 8, !dbg !1857
  %idx.ext = sext i32 %add3 to i64, !dbg !1858
  %add.ptr = getelementptr i8, ptr %1, i64 %idx.ext, !dbg !1858
  %cmp = icmp eq i32 %and, 3, !dbg !1859
  %mul7 = select i1 %cmp, i32 %i_src_stride, i32 0, !dbg !1860
  %idx.ext8 = sext i32 %mul7 to i64, !dbg !1861
  %add.ptr9 = getelementptr i8, ptr %add.ptr, i64 %idx.ext8, !dbg !1861
    #dbg_value(ptr %add.ptr9, !1843, !DIExpression(), !1847)
  %and10 = and i32 %add, 5, !dbg !1862
  %tobool.not = icmp eq i32 %and10, 0, !dbg !1862
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1863

if.then:                                          ; preds = %entry
  %arrayidx12 = getelementptr inbounds [16 x i8], ptr @hpel_ref1, i64 0, i64 %idxprom, !dbg !1864
  %2 = load i8, ptr %arrayidx12, align 1, !dbg !1864
  %idxprom13 = zext i8 %2 to i64, !dbg !1865
  %arrayidx14 = getelementptr inbounds ptr, ptr %src, i64 %idxprom13, !dbg !1865
  %3 = load ptr, ptr %arrayidx14, align 8, !dbg !1865
  %add.ptr16 = getelementptr i8, ptr %3, i64 %idx.ext, !dbg !1866
  %cmp18 = icmp eq i32 %and1, 3, !dbg !1867
  %idx.ext20 = zext i1 %cmp18 to i64, !dbg !1868
  %add.ptr21 = getelementptr i8, ptr %add.ptr16, i64 %idx.ext20, !dbg !1868
    #dbg_value(ptr %add.ptr21, !1844, !DIExpression(), !1869)
    #dbg_value(ptr %dst, !1588, !DIExpression(), !1870)
    #dbg_value(i32 poison, !1593, !DIExpression(), !1870)
    #dbg_value(ptr %add.ptr9, !1594, !DIExpression(), !1870)
    #dbg_value(i32 %i_src_stride, !1595, !DIExpression(), !1870)
    #dbg_value(ptr %add.ptr21, !1596, !DIExpression(), !1870)
    #dbg_value(i32 %i_src_stride, !1597, !DIExpression(), !1870)
    #dbg_value(i32 %i_width, !1598, !DIExpression(), !1870)
    #dbg_value(i32 %i_height, !1599, !DIExpression(), !1870)
    #dbg_value(i32 0, !1600, !DIExpression(), !1872)
  %cmp29.i = icmp sgt i32 %i_height, 0, !dbg !1873
  br i1 %cmp29.i, label %for.cond1.preheader.lr.ph.i, label %pixel_avg.exit, !dbg !1874

for.cond1.preheader.lr.ph.i:                      ; preds = %if.then
  %4 = load i32, ptr %i_dst_stride, align 4, !dbg !1875
    #dbg_value(i32 %4, !1593, !DIExpression(), !1870)
  %cmp227.i = icmp sgt i32 %i_width, 0
  %idx.ext.i = sext i32 %4 to i64
  %idx.ext12.i = sext i32 %i_src_stride to i64
  br i1 %cmp227.i, label %for.cond1.preheader.us.preheader.i, label %pixel_avg.exit

for.cond1.preheader.us.preheader.i:               ; preds = %for.cond1.preheader.lr.ph.i
  %wide.trip.count.i = zext nneg i32 %i_width to i64
  %5 = add nsw i32 %i_height, -1, !dbg !1874
  %6 = zext i32 %5 to i64, !dbg !1874
  %7 = mul nsw i64 %idx.ext.i, %6, !dbg !1874
  %8 = getelementptr i8, ptr %dst, i64 %7, !dbg !1874
  %scevgep = getelementptr i8, ptr %8, i64 %wide.trip.count.i, !dbg !1874
  %9 = mul nsw i64 %idx.ext12.i, %6, !dbg !1874
  %10 = getelementptr i8, ptr %1, i64 %9, !dbg !1874
  %11 = getelementptr i8, ptr %10, i64 %idx.ext8, !dbg !1874
  %12 = getelementptr i8, ptr %11, i64 %idx.ext, !dbg !1874
  %scevgep154 = getelementptr i8, ptr %12, i64 %wide.trip.count.i, !dbg !1874
  %13 = getelementptr i8, ptr %3, i64 %9, !dbg !1874
  %14 = getelementptr i8, ptr %13, i64 %idx.ext, !dbg !1874
  %15 = getelementptr i8, ptr %14, i64 %idx.ext20, !dbg !1874
  %scevgep155 = getelementptr i8, ptr %15, i64 %wide.trip.count.i, !dbg !1874
  %min.iters.check = icmp ult i32 %i_width, 8
  %bound0 = icmp ugt ptr %scevgep154, %dst
  %bound1 = icmp ult ptr %add.ptr9, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %16 = or i32 %4, %i_src_stride
  %17 = icmp slt i32 %16, 0
  %18 = or i1 %found.conflict, %17
  %bound0157 = icmp ugt ptr %scevgep155, %dst
  %bound1158 = icmp ult ptr %add.ptr21, %scevgep
  %found.conflict159 = and i1 %bound0157, %bound1158
  %19 = or i32 %4, %i_src_stride
  %20 = icmp slt i32 %19, 0
  %21 = or i1 %found.conflict159, %20
  %conflict.rdx = or i1 %18, %21
  %min.iters.check162 = icmp ult i32 %i_width, 64
  %n.vec = and i64 %wide.trip.count.i, 2147483584
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  %n.vec.remaining = and i64 %wide.trip.count.i, 56
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  %n.vec171 = and i64 %wide.trip.count.i, 2147483640
  %cmp.n176 = icmp eq i64 %n.vec171, %wide.trip.count.i
  %xtraiter = and i64 %wide.trip.count.i, 1
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  %22 = add nsw i64 %wide.trip.count.i, -1
  br label %iter.check, !dbg !1874

iter.check:                                       ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us.i, %for.cond1.preheader.us.preheader.i
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ 0, %for.cond1.preheader.us.preheader.i ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %dst, %for.cond1.preheader.us.preheader.i ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %add.ptr9, %for.cond1.preheader.us.preheader.i ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.for.cond.cleanup3_crit_edge.us.i ], [ %add.ptr21, %for.cond1.preheader.us.preheader.i ]
    #dbg_value(i32 %y.033.us.i, !1600, !DIExpression(), !1872)
    #dbg_value(ptr %dst.addr.032.us.i, !1588, !DIExpression(), !1870)
    #dbg_value(ptr %src1.addr.031.us.i, !1594, !DIExpression(), !1870)
    #dbg_value(ptr %src2.addr.030.us.i, !1596, !DIExpression(), !1870)
    #dbg_value(i32 0, !1602, !DIExpression(), !1876)
  %brmerge = select i1 %min.iters.check, i1 true, i1 %conflict.rdx, !dbg !1877
  br i1 %brmerge, label %for.body4.us.i.preheader, label %vector.main.loop.iter.check, !dbg !1877

vector.main.loop.iter.check:                      ; preds = %iter.check
  br i1 %min.iters.check162, label %vec.epilog.ph, label %vector.body, !dbg !1877

vector.body:                                      ; preds = %vector.main.loop.iter.check, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.main.loop.iter.check ], !dbg !1878
  %23 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %index, !dbg !1879
  %24 = getelementptr inbounds i8, ptr %23, i64 16, !dbg !1879
  %25 = getelementptr inbounds i8, ptr %23, i64 32, !dbg !1879
  %26 = getelementptr inbounds i8, ptr %23, i64 48, !dbg !1879
  %wide.load = load <16 x i8>, ptr %23, align 1, !dbg !1879, !alias.scope !1880
  %wide.load163 = load <16 x i8>, ptr %24, align 1, !dbg !1879, !alias.scope !1880
  %wide.load164 = load <16 x i8>, ptr %25, align 1, !dbg !1879, !alias.scope !1880
  %wide.load165 = load <16 x i8>, ptr %26, align 1, !dbg !1879, !alias.scope !1880
  %27 = zext <16 x i8> %wide.load to <16 x i16>, !dbg !1879
  %28 = zext <16 x i8> %wide.load163 to <16 x i16>, !dbg !1879
  %29 = zext <16 x i8> %wide.load164 to <16 x i16>, !dbg !1879
  %30 = zext <16 x i8> %wide.load165 to <16 x i16>, !dbg !1879
  %31 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %index, !dbg !1883
  %32 = getelementptr inbounds i8, ptr %31, i64 16, !dbg !1883
  %33 = getelementptr inbounds i8, ptr %31, i64 32, !dbg !1883
  %34 = getelementptr inbounds i8, ptr %31, i64 48, !dbg !1883
  %wide.load166 = load <16 x i8>, ptr %31, align 1, !dbg !1883, !alias.scope !1884
  %wide.load167 = load <16 x i8>, ptr %32, align 1, !dbg !1883, !alias.scope !1884
  %wide.load168 = load <16 x i8>, ptr %33, align 1, !dbg !1883, !alias.scope !1884
  %wide.load169 = load <16 x i8>, ptr %34, align 1, !dbg !1883, !alias.scope !1884
  %35 = zext <16 x i8> %wide.load166 to <16 x i16>, !dbg !1883
  %36 = zext <16 x i8> %wide.load167 to <16 x i16>, !dbg !1883
  %37 = zext <16 x i8> %wide.load168 to <16 x i16>, !dbg !1883
  %38 = zext <16 x i8> %wide.load169 to <16 x i16>, !dbg !1883
  %39 = add nuw nsw <16 x i16> %27, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1886
  %40 = add nuw nsw <16 x i16> %28, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1886
  %41 = add nuw nsw <16 x i16> %29, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1886
  %42 = add nuw nsw <16 x i16> %30, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1886
  %43 = add nuw nsw <16 x i16> %39, %35, !dbg !1887
  %44 = add nuw nsw <16 x i16> %40, %36, !dbg !1887
  %45 = add nuw nsw <16 x i16> %41, %37, !dbg !1887
  %46 = add nuw nsw <16 x i16> %42, %38, !dbg !1887
  %47 = lshr <16 x i16> %43, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1888
  %48 = lshr <16 x i16> %44, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1888
  %49 = lshr <16 x i16> %45, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1888
  %50 = lshr <16 x i16> %46, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1888
  %51 = trunc <16 x i16> %47 to <16 x i8>, !dbg !1889
  %52 = trunc <16 x i16> %48 to <16 x i8>, !dbg !1889
  %53 = trunc <16 x i16> %49 to <16 x i8>, !dbg !1889
  %54 = trunc <16 x i16> %50 to <16 x i8>, !dbg !1889
  %55 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %index, !dbg !1890
  %56 = getelementptr inbounds i8, ptr %55, i64 16, !dbg !1891
  %57 = getelementptr inbounds i8, ptr %55, i64 32, !dbg !1891
  %58 = getelementptr inbounds i8, ptr %55, i64 48, !dbg !1891
  store <16 x i8> %51, ptr %55, align 1, !dbg !1891, !alias.scope !1892, !noalias !1894
  store <16 x i8> %52, ptr %56, align 1, !dbg !1891, !alias.scope !1892, !noalias !1894
  store <16 x i8> %53, ptr %57, align 1, !dbg !1891, !alias.scope !1892, !noalias !1894
  store <16 x i8> %54, ptr %58, align 1, !dbg !1891, !alias.scope !1892, !noalias !1894
  %index.next = add nuw i64 %index, 64, !dbg !1878
  %59 = icmp eq i64 %index.next, %n.vec, !dbg !1878
  br i1 %59, label %middle.block, label %vector.body, !dbg !1878, !llvm.loop !1895

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %vec.epilog.iter.check, !dbg !1877

vec.epilog.iter.check:                            ; preds = %middle.block
  br i1 %min.epilog.iters.check, label %for.body4.us.i.preheader, label %vec.epilog.ph, !dbg !1877

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  br label %vec.epilog.vector.body, !dbg !1877

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index172 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next175, %vec.epilog.vector.body ], !dbg !1878
  %60 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %index172, !dbg !1879
  %wide.load173 = load <8 x i8>, ptr %60, align 1, !dbg !1879, !alias.scope !1897
  %61 = zext <8 x i8> %wide.load173 to <8 x i16>, !dbg !1879
  %62 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %index172, !dbg !1883
  %wide.load174 = load <8 x i8>, ptr %62, align 1, !dbg !1883, !alias.scope !1900
  %63 = zext <8 x i8> %wide.load174 to <8 x i16>, !dbg !1883
  %64 = add nuw nsw <8 x i16> %61, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1886
  %65 = add nuw nsw <8 x i16> %64, %63, !dbg !1887
  %66 = lshr <8 x i16> %65, <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, !dbg !1888
  %67 = trunc <8 x i16> %66 to <8 x i8>, !dbg !1889
  %68 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %index172, !dbg !1890
  store <8 x i8> %67, ptr %68, align 1, !dbg !1891, !alias.scope !1902, !noalias !1904
  %index.next175 = add nuw i64 %index172, 8, !dbg !1878
  %69 = icmp eq i64 %index.next175, %n.vec171, !dbg !1878
  br i1 %69, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !dbg !1878, !llvm.loop !1905

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  br i1 %cmp.n176, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i.preheader, !dbg !1877

for.body4.us.i.preheader:                         ; preds = %iter.check, %vec.epilog.middle.block, %vec.epilog.iter.check
  %indvars.iv.i.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec171, %vec.epilog.middle.block ]
  br i1 %lcmp.mod.not, label %for.body4.us.i.prol.loopexit, label %for.body4.us.i.prol, !dbg !1877

for.body4.us.i.prol:                              ; preds = %for.body4.us.i.preheader
    #dbg_value(i64 poison, !1602, !DIExpression(), !1876)
  %arrayidx.us.i.prol = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.i.ph, !dbg !1879
  %70 = load i8, ptr %arrayidx.us.i.prol, align 1, !dbg !1879
  %conv.us.i.prol = zext i8 %70 to i16, !dbg !1879
  %arrayidx6.us.i.prol = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.i.ph, !dbg !1883
  %71 = load i8, ptr %arrayidx6.us.i.prol, align 1, !dbg !1883
  %conv7.us.i.prol = zext i8 %71 to i16, !dbg !1883
  %add.us.i.prol = add nuw nsw i16 %conv.us.i.prol, 1, !dbg !1886
  %add8.us.i.prol = add nuw nsw i16 %add.us.i.prol, %conv7.us.i.prol, !dbg !1887
  %shr.us.i.prol = lshr i16 %add8.us.i.prol, 1, !dbg !1888
  %conv9.us.i.prol = trunc nuw i16 %shr.us.i.prol to i8, !dbg !1889
  %arrayidx11.us.i.prol = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.i.ph, !dbg !1890
  store i8 %conv9.us.i.prol, ptr %arrayidx11.us.i.prol, align 1, !dbg !1891
  %indvars.iv.next.i.prol = or disjoint i64 %indvars.iv.i.ph, 1, !dbg !1878
    #dbg_value(i64 %indvars.iv.next.i.prol, !1602, !DIExpression(), !1876)
  br label %for.body4.us.i.prol.loopexit, !dbg !1877

for.body4.us.i.prol.loopexit:                     ; preds = %for.body4.us.i.prol, %for.body4.us.i.preheader
  %indvars.iv.i.unr = phi i64 [ %indvars.iv.i.ph, %for.body4.us.i.preheader ], [ %indvars.iv.next.i.prol, %for.body4.us.i.prol ]
  %72 = icmp eq i64 %indvars.iv.i.ph, %22, !dbg !1877
  br i1 %72, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i, !dbg !1877

for.body4.us.i:                                   ; preds = %for.body4.us.i.prol.loopexit, %for.body4.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.1, %for.body4.us.i ], [ %indvars.iv.i.unr, %for.body4.us.i.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i, !1602, !DIExpression(), !1876)
  %arrayidx.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.i, !dbg !1879
  %73 = load i8, ptr %arrayidx.us.i, align 1, !dbg !1879
  %conv.us.i = zext i8 %73 to i16, !dbg !1879
  %arrayidx6.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.i, !dbg !1883
  %74 = load i8, ptr %arrayidx6.us.i, align 1, !dbg !1883
  %conv7.us.i = zext i8 %74 to i16, !dbg !1883
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !1886
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !1887
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !1888
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !1889
  %arrayidx11.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.i, !dbg !1890
  store i8 %conv9.us.i, ptr %arrayidx11.us.i, align 1, !dbg !1891
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !1878
    #dbg_value(i64 %indvars.iv.next.i, !1602, !DIExpression(), !1876)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %indvars.iv.next.i, !dbg !1879
  %75 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !1879
  %conv.us.i.1 = zext i8 %75 to i16, !dbg !1879
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %indvars.iv.next.i, !dbg !1883
  %76 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !1883
  %conv7.us.i.1 = zext i8 %76 to i16, !dbg !1883
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !1886
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !1887
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !1888
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !1889
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %indvars.iv.next.i, !dbg !1890
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !1891
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2, !dbg !1878
    #dbg_value(i64 %indvars.iv.next.i.1, !1602, !DIExpression(), !1876)
  %exitcond.not.i.1 = icmp eq i64 %indvars.iv.next.i.1, %wide.trip.count.i, !dbg !1906
  br i1 %exitcond.not.i.1, label %for.cond1.for.cond.cleanup3_crit_edge.us.i, label %for.body4.us.i, !dbg !1877, !llvm.loop !1907

for.cond1.for.cond.cleanup3_crit_edge.us.i:       ; preds = %for.body4.us.i.prol.loopexit, %for.body4.us.i, %vec.epilog.middle.block, %middle.block
  %add.ptr.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext.i, !dbg !1908
    #dbg_value(ptr %add.ptr.us.i, !1588, !DIExpression(), !1870)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext12.i, !dbg !1909
    #dbg_value(ptr %add.ptr13.us.i, !1594, !DIExpression(), !1870)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !1910
    #dbg_value(ptr %add.ptr15.us.i, !1596, !DIExpression(), !1870)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !1911
    #dbg_value(i32 %inc17.us.i, !1600, !DIExpression(), !1872)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, %i_height, !dbg !1873
  br i1 %exitcond36.not.i, label %pixel_avg.exit, label %iter.check, !dbg !1874, !llvm.loop !1912

pixel_avg.exit:                                   ; preds = %for.cond1.for.cond.cleanup3_crit_edge.us.i, %if.then, %for.cond1.preheader.lr.ph.i
  %weightfn = getelementptr inbounds i8, ptr %weight, i64 48, !dbg !1914
  %77 = load ptr, ptr %weightfn, align 16, !dbg !1914
  %tobool22.not = icmp eq ptr %77, null, !dbg !1916
  br i1 %tobool22.not, label %cleanup, label %if.then23, !dbg !1917

if.then23:                                        ; preds = %pixel_avg.exit
  %78 = load i32, ptr %i_dst_stride, align 4, !dbg !1918
    #dbg_value(ptr %dst, !1656, !DIExpression(), !1919)
    #dbg_value(i32 %78, !1661, !DIExpression(), !1919)
    #dbg_value(ptr %dst, !1662, !DIExpression(), !1919)
    #dbg_value(i32 %78, !1663, !DIExpression(), !1919)
    #dbg_value(ptr %weight, !1664, !DIExpression(), !1919)
    #dbg_value(i32 %i_width, !1665, !DIExpression(), !1919)
    #dbg_value(i32 %i_height, !1666, !DIExpression(), !1919)
  %i_denom.i = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !1921
  %79 = load i32, ptr %i_denom.i, align 16, !dbg !1921
  %cmp.i = icmp sgt i32 %79, 0, !dbg !1922
  br i1 %cmp.i, label %for.cond.preheader.i, label %for.cond17.preheader.i, !dbg !1923

for.cond17.preheader.i:                           ; preds = %if.then23
    #dbg_value(i32 0, !1674, !DIExpression(), !1924)
  br i1 %cmp29.i, label %for.cond23.preheader.lr.ph.i, label %cleanup, !dbg !1925

for.cond23.preheader.lr.ph.i:                     ; preds = %for.cond17.preheader.i
  %cmp2477.i = icmp sgt i32 %i_width, 0
  %i_scale31.i = getelementptr i8, ptr %weight, i64 36
  %i_offset33.i = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43.i = sext i32 %78 to i64
  br i1 %cmp2477.i, label %for.cond23.preheader.us.preheader.i, label %cleanup

for.cond23.preheader.us.preheader.i:              ; preds = %for.cond23.preheader.lr.ph.i
  %wide.trip.count.i61 = zext nneg i32 %i_width to i64
  %80 = add nsw i32 %i_height, -1, !dbg !1925
  %81 = zext i32 %80 to i64, !dbg !1925
  %82 = mul nsw i64 %idx.ext43.i, %81, !dbg !1925
  %83 = getelementptr i8, ptr %dst, i64 %82, !dbg !1925
  %scevgep178 = getelementptr i8, ptr %83, i64 %wide.trip.count.i61, !dbg !1925
  %scevgep179 = getelementptr i8, ptr %weight, i64 44, !dbg !1925
  %min.iters.check185 = icmp ult i32 %i_width, 16
  %bound0180 = icmp ugt ptr %scevgep179, %dst
  %bound1181 = icmp ult ptr %i_scale31.i, %scevgep178
  %found.conflict182 = and i1 %bound0180, %bound1181
  %stride.check183 = icmp slt i32 %78, 0
  %84 = or i1 %found.conflict182, %stride.check183
  %n.vec188 = and i64 %wide.trip.count.i61, 2147483632
  %cmp.n211 = icmp eq i64 %n.vec188, %wide.trip.count.i61
  %xtraiter353 = and i64 %wide.trip.count.i61, 1
  %lcmp.mod354.not = icmp eq i64 %xtraiter353, 0
  %85 = add nsw i64 %wide.trip.count.i61, -1
  br label %for.cond23.preheader.us.i, !dbg !1925

for.cond23.preheader.us.i:                        ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i, %for.cond23.preheader.us.preheader.i
  %y16.082.us.i = phi i32 [ %inc42.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i ], [ 0, %for.cond23.preheader.us.preheader.i ]
  %dst.addr.181.us.i = phi ptr [ %add.ptr44.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i ], [ %dst, %for.cond23.preheader.us.preheader.i ]
    #dbg_value(i32 %y16.082.us.i, !1674, !DIExpression(), !1924)
    #dbg_value(ptr %dst.addr.181.us.i, !1656, !DIExpression(), !1919)
    #dbg_value(ptr %dst.addr.181.us.i, !1662, !DIExpression(), !1919)
    #dbg_value(i32 0, !1677, !DIExpression(), !1926)
  %brmerge357 = select i1 %min.iters.check185, i1 true, i1 %84, !dbg !1927
  br i1 %brmerge357, label %for.body27.us.i.preheader, label %vector.ph186, !dbg !1927

vector.ph186:                                     ; preds = %for.cond23.preheader.us.i
  %86 = load i32, ptr %i_scale31.i, align 4, !alias.scope !1928
  %broadcast.splatinsert200 = insertelement <4 x i32> poison, i32 %86, i64 0
  %broadcast.splat201 = shufflevector <4 x i32> %broadcast.splatinsert200, <4 x i32> poison, <4 x i32> zeroinitializer
  %87 = load i32, ptr %i_offset33.i, align 8, !alias.scope !1928
  %broadcast.splatinsert208 = insertelement <4 x i32> poison, i32 %87, i64 0
  %broadcast.splat209 = shufflevector <4 x i32> %broadcast.splatinsert208, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body190, !dbg !1927

vector.body190:                                   ; preds = %vector.body190, %vector.ph186
  %index191 = phi i64 [ 0, %vector.ph186 ], [ %index.next210, %vector.body190 ], !dbg !1931
  %88 = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %index191, !dbg !1932
  %89 = getelementptr inbounds i8, ptr %88, i64 4, !dbg !1932
  %90 = getelementptr inbounds i8, ptr %88, i64 8, !dbg !1932
  %91 = getelementptr inbounds i8, ptr %88, i64 12, !dbg !1932
  %wide.load192 = load <4 x i8>, ptr %88, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  %wide.load193 = load <4 x i8>, ptr %89, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  %wide.load194 = load <4 x i8>, ptr %90, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  %wide.load195 = load <4 x i8>, ptr %91, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  %92 = zext <4 x i8> %wide.load192 to <4 x i32>, !dbg !1932
  %93 = zext <4 x i8> %wide.load193 to <4 x i32>, !dbg !1932
  %94 = zext <4 x i8> %wide.load194 to <4 x i32>, !dbg !1932
  %95 = zext <4 x i8> %wide.load195 to <4 x i32>, !dbg !1932
  %96 = mul nsw <4 x i32> %broadcast.splat201, %92, !dbg !1927
  %97 = mul nsw <4 x i32> %broadcast.splat201, %93, !dbg !1927
  %98 = mul nsw <4 x i32> %broadcast.splat201, %94, !dbg !1927
  %99 = mul nsw <4 x i32> %broadcast.splat201, %95, !dbg !1927
  %100 = add nsw <4 x i32> %96, %broadcast.splat209, !dbg !1927
  %101 = add nsw <4 x i32> %97, %broadcast.splat209, !dbg !1927
  %102 = add nsw <4 x i32> %98, %broadcast.splat209, !dbg !1927
  %103 = add nsw <4 x i32> %99, %broadcast.splat209, !dbg !1927
  %104 = icmp ult <4 x i32> %100, <i32 256, i32 256, i32 256, i32 256>, !dbg !1935
  %105 = icmp ult <4 x i32> %101, <i32 256, i32 256, i32 256, i32 256>, !dbg !1935
  %106 = icmp ult <4 x i32> %102, <i32 256, i32 256, i32 256, i32 256>, !dbg !1935
  %107 = icmp ult <4 x i32> %103, <i32 256, i32 256, i32 256, i32 256>, !dbg !1935
  %108 = icmp sgt <4 x i32> %100, zeroinitializer, !dbg !1937
  %109 = icmp sgt <4 x i32> %101, zeroinitializer, !dbg !1937
  %110 = icmp sgt <4 x i32> %102, zeroinitializer, !dbg !1937
  %111 = icmp sgt <4 x i32> %103, zeroinitializer, !dbg !1937
  %112 = sext <4 x i1> %108 to <4 x i32>, !dbg !1937
  %113 = sext <4 x i1> %109 to <4 x i32>, !dbg !1937
  %114 = sext <4 x i1> %110 to <4 x i32>, !dbg !1937
  %115 = sext <4 x i1> %111 to <4 x i32>, !dbg !1937
  %116 = select <4 x i1> %104, <4 x i32> %100, <4 x i32> %112, !dbg !1937
  %117 = select <4 x i1> %105, <4 x i32> %101, <4 x i32> %113, !dbg !1937
  %118 = select <4 x i1> %106, <4 x i32> %102, <4 x i32> %114, !dbg !1937
  %119 = select <4 x i1> %107, <4 x i32> %103, <4 x i32> %115, !dbg !1937
  %120 = trunc <4 x i32> %116 to <4 x i8>, !dbg !1937
  %121 = trunc <4 x i32> %117 to <4 x i8>, !dbg !1937
  %122 = trunc <4 x i32> %118 to <4 x i8>, !dbg !1937
  %123 = trunc <4 x i32> %119 to <4 x i8>, !dbg !1937
  store <4 x i8> %120, ptr %88, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  store <4 x i8> %121, ptr %89, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  store <4 x i8> %122, ptr %90, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  store <4 x i8> %123, ptr %91, align 1, !dbg !1932, !alias.scope !1933, !noalias !1928
  %index.next210 = add nuw i64 %index191, 16, !dbg !1931
  %124 = icmp eq i64 %index.next210, %n.vec188, !dbg !1931
  br i1 %124, label %middle.block184, label %vector.body190, !dbg !1931, !llvm.loop !1938

middle.block184:                                  ; preds = %vector.body190
  br i1 %cmp.n211, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i.preheader, !dbg !1927

for.body27.us.i.preheader:                        ; preds = %for.cond23.preheader.us.i, %middle.block184
  %indvars.iv.i62.ph = phi i64 [ 0, %for.cond23.preheader.us.i ], [ %n.vec188, %middle.block184 ]
  br i1 %lcmp.mod354.not, label %for.body27.us.i.prol.loopexit, label %for.body27.us.i.prol, !dbg !1927

for.body27.us.i.prol:                             ; preds = %for.body27.us.i.preheader
    #dbg_value(i64 poison, !1677, !DIExpression(), !1926)
  %arrayidx29.us.i.prol = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.i62.ph, !dbg !1932
  %125 = load i8, ptr %arrayidx29.us.i.prol, align 1, !dbg !1932
  %conv30.us.i.prol = zext i8 %125 to i32, !dbg !1932
  %126 = load i32, ptr %i_scale31.i, align 4, !dbg !1932
  %mul32.us.i.prol = mul nsw i32 %126, %conv30.us.i.prol, !dbg !1932
  %127 = load i32, ptr %i_offset33.i, align 8, !dbg !1932
  %add34.us.i.prol = add nsw i32 %mul32.us.i.prol, %127, !dbg !1932
    #dbg_value(i32 %add34.us.i.prol, !1702, !DIExpression(), !1940)
  %tobool.not.i72.us.i.prol = icmp ult i32 %add34.us.i.prol, 256, !dbg !1935
  %128 = icmp sgt i32 %add34.us.i.prol, 0, !dbg !1937
  %shr.i73.us.i.prol = sext i1 %128 to i32, !dbg !1937
  %cond.i74.us.i.prol = select i1 %tobool.not.i72.us.i.prol, i32 %add34.us.i.prol, i32 %shr.i73.us.i.prol, !dbg !1937
  %conv.i75.us.i.prol = trunc i32 %cond.i74.us.i.prol to i8, !dbg !1937
  store i8 %conv.i75.us.i.prol, ptr %arrayidx29.us.i.prol, align 1, !dbg !1932
  %indvars.iv.next.i63.prol = or disjoint i64 %indvars.iv.i62.ph, 1, !dbg !1931
    #dbg_value(i64 %indvars.iv.next.i63.prol, !1677, !DIExpression(), !1926)
  br label %for.body27.us.i.prol.loopexit, !dbg !1927

for.body27.us.i.prol.loopexit:                    ; preds = %for.body27.us.i.prol, %for.body27.us.i.preheader
  %indvars.iv.i62.unr = phi i64 [ %indvars.iv.i62.ph, %for.body27.us.i.preheader ], [ %indvars.iv.next.i63.prol, %for.body27.us.i.prol ]
  %129 = icmp eq i64 %indvars.iv.i62.ph, %85, !dbg !1927
  br i1 %129, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i, !dbg !1927

for.body27.us.i:                                  ; preds = %for.body27.us.i.prol.loopexit, %for.body27.us.i
  %indvars.iv.i62 = phi i64 [ %indvars.iv.next.i63.1, %for.body27.us.i ], [ %indvars.iv.i62.unr, %for.body27.us.i.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i62, !1677, !DIExpression(), !1926)
  %arrayidx29.us.i = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.i62, !dbg !1932
  %130 = load i8, ptr %arrayidx29.us.i, align 1, !dbg !1932
  %conv30.us.i = zext i8 %130 to i32, !dbg !1932
  %131 = load i32, ptr %i_scale31.i, align 4, !dbg !1932
  %mul32.us.i = mul nsw i32 %131, %conv30.us.i, !dbg !1932
  %132 = load i32, ptr %i_offset33.i, align 8, !dbg !1932
  %add34.us.i = add nsw i32 %mul32.us.i, %132, !dbg !1932
    #dbg_value(i32 %add34.us.i, !1702, !DIExpression(), !1940)
  %tobool.not.i72.us.i = icmp ult i32 %add34.us.i, 256, !dbg !1935
  %133 = icmp sgt i32 %add34.us.i, 0, !dbg !1937
  %shr.i73.us.i = sext i1 %133 to i32, !dbg !1937
  %cond.i74.us.i = select i1 %tobool.not.i72.us.i, i32 %add34.us.i, i32 %shr.i73.us.i, !dbg !1937
  %conv.i75.us.i = trunc i32 %cond.i74.us.i to i8, !dbg !1937
  store i8 %conv.i75.us.i, ptr %arrayidx29.us.i, align 1, !dbg !1932
  %indvars.iv.next.i63 = add nuw nsw i64 %indvars.iv.i62, 1, !dbg !1931
    #dbg_value(i64 %indvars.iv.next.i63, !1677, !DIExpression(), !1926)
  %arrayidx29.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.181.us.i, i64 %indvars.iv.next.i63, !dbg !1932
  %134 = load i8, ptr %arrayidx29.us.i.1, align 1, !dbg !1932
  %conv30.us.i.1 = zext i8 %134 to i32, !dbg !1932
  %135 = load i32, ptr %i_scale31.i, align 4, !dbg !1932
  %mul32.us.i.1 = mul nsw i32 %135, %conv30.us.i.1, !dbg !1932
  %136 = load i32, ptr %i_offset33.i, align 8, !dbg !1932
  %add34.us.i.1 = add nsw i32 %mul32.us.i.1, %136, !dbg !1932
    #dbg_value(i32 %add34.us.i.1, !1702, !DIExpression(), !1940)
  %tobool.not.i72.us.i.1 = icmp ult i32 %add34.us.i.1, 256, !dbg !1935
  %137 = icmp sgt i32 %add34.us.i.1, 0, !dbg !1937
  %shr.i73.us.i.1 = sext i1 %137 to i32, !dbg !1937
  %cond.i74.us.i.1 = select i1 %tobool.not.i72.us.i.1, i32 %add34.us.i.1, i32 %shr.i73.us.i.1, !dbg !1937
  %conv.i75.us.i.1 = trunc i32 %cond.i74.us.i.1 to i8, !dbg !1937
  store i8 %conv.i75.us.i.1, ptr %arrayidx29.us.i.1, align 1, !dbg !1932
  %indvars.iv.next.i63.1 = add nuw nsw i64 %indvars.iv.i62, 2, !dbg !1931
    #dbg_value(i64 %indvars.iv.next.i63.1, !1677, !DIExpression(), !1926)
  %exitcond.not.i64.1 = icmp eq i64 %indvars.iv.next.i63.1, %wide.trip.count.i61, !dbg !1941
  br i1 %exitcond.not.i64.1, label %for.cond23.for.cond.cleanup26_crit_edge.us.i, label %for.body27.us.i, !dbg !1927, !llvm.loop !1942

for.cond23.for.cond.cleanup26_crit_edge.us.i:     ; preds = %for.body27.us.i.prol.loopexit, %for.body27.us.i, %middle.block184
  %inc42.us.i = add nuw nsw i32 %y16.082.us.i, 1, !dbg !1943
    #dbg_value(i32 %inc42.us.i, !1674, !DIExpression(), !1924)
  %add.ptr44.us.i = getelementptr i8, ptr %dst.addr.181.us.i, i64 %idx.ext43.i, !dbg !1944
    #dbg_value(ptr %add.ptr44.us.i, !1656, !DIExpression(), !1919)
    #dbg_value(ptr %add.ptr44.us.i, !1662, !DIExpression(), !1919)
  %exitcond93.not.i = icmp eq i32 %inc42.us.i, %i_height, !dbg !1945
  br i1 %exitcond93.not.i, label %cleanup, label %for.cond23.preheader.us.i, !dbg !1925, !llvm.loop !1946

for.cond.preheader.i:                             ; preds = %if.then23
    #dbg_value(i32 0, !1667, !DIExpression(), !1948)
  br i1 %cmp29.i, label %for.cond2.preheader.lr.ph.i, label %cleanup, !dbg !1949

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.preheader.i
  %cmp383.i = icmp sgt i32 %i_width, 0
  %i_scale.i = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset.i = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext.i65 = sext i32 %78 to i64
  br i1 %cmp383.i, label %for.cond2.preheader.us.preheader.i, label %cleanup

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %wide.trip.count97.i = zext nneg i32 %i_width to i64
  %138 = add nsw i32 %i_height, -1, !dbg !1949
  %139 = zext i32 %138 to i64, !dbg !1949
  %140 = mul nsw i64 %idx.ext.i65, %139, !dbg !1949
  %141 = getelementptr i8, ptr %dst, i64 %140, !dbg !1949
  %scevgep213 = getelementptr i8, ptr %141, i64 %wide.trip.count97.i, !dbg !1949
  %scevgep214 = getelementptr i8, ptr %weight, i64 44, !dbg !1949
  %min.iters.check221 = icmp ult i32 %i_width, 16
  %bound0215 = icmp ugt ptr %scevgep214, %dst
  %bound1216 = icmp ult ptr %i_denom.i, %scevgep213
  %found.conflict217 = and i1 %bound0215, %bound1216
  %stride.check218 = icmp slt i32 %78, 0
  %142 = or i1 %found.conflict217, %stride.check218
  %n.vec224 = and i64 %wide.trip.count97.i, 2147483632
  %cmp.n255 = icmp eq i64 %n.vec224, %wide.trip.count97.i
  br label %for.cond2.preheader.us.i, !dbg !1949

for.cond2.preheader.us.i:                         ; preds = %for.cond2.for.cond.cleanup4_crit_edge.us.i, %for.cond2.preheader.us.preheader.i
  %y.088.us.i = phi i32 [ %inc12.us.i, %for.cond2.for.cond.cleanup4_crit_edge.us.i ], [ 0, %for.cond2.preheader.us.preheader.i ]
  %dst.addr.087.us.i = phi ptr [ %add.ptr.us.i71, %for.cond2.for.cond.cleanup4_crit_edge.us.i ], [ %dst, %for.cond2.preheader.us.preheader.i ]
    #dbg_value(i32 %y.088.us.i, !1667, !DIExpression(), !1948)
    #dbg_value(ptr %dst.addr.087.us.i, !1656, !DIExpression(), !1919)
    #dbg_value(ptr %dst.addr.087.us.i, !1662, !DIExpression(), !1919)
    #dbg_value(i32 0, !1671, !DIExpression(), !1950)
  %brmerge358 = select i1 %min.iters.check221, i1 true, i1 %142, !dbg !1951
  br i1 %brmerge358, label %for.body5.us.i.preheader, label %vector.ph222, !dbg !1951

vector.ph222:                                     ; preds = %for.cond2.preheader.us.i
  %143 = load i32, ptr %i_scale.i, align 4, !alias.scope !1952
  %broadcast.splatinsert236 = insertelement <4 x i32> poison, i32 %143, i64 0
  %broadcast.splat237 = shufflevector <4 x i32> %broadcast.splatinsert236, <4 x i32> poison, <4 x i32> zeroinitializer
  %144 = load i32, ptr %i_denom.i, align 16, !alias.scope !1952
  %broadcast.splatinsert244 = insertelement <4 x i32> poison, i32 %144, i64 0
  %broadcast.splat245 = shufflevector <4 x i32> %broadcast.splatinsert244, <4 x i32> poison, <4 x i32> zeroinitializer
  %145 = add nsw <4 x i32> %broadcast.splat245, <i32 -1, i32 -1, i32 -1, i32 -1>
  %146 = add nsw <4 x i32> %broadcast.splat245, <i32 -1, i32 -1, i32 -1, i32 -1>
  %147 = add nsw <4 x i32> %broadcast.splat245, <i32 -1, i32 -1, i32 -1, i32 -1>
  %148 = add nsw <4 x i32> %broadcast.splat245, <i32 -1, i32 -1, i32 -1, i32 -1>
  %149 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %145
  %150 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %146
  %151 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %147
  %152 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %148
  %153 = load i32, ptr %i_offset.i, align 8, !alias.scope !1952
  %broadcast.splatinsert252 = insertelement <4 x i32> poison, i32 %153, i64 0
  %broadcast.splat253 = shufflevector <4 x i32> %broadcast.splatinsert252, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body226, !dbg !1951

vector.body226:                                   ; preds = %vector.body226, %vector.ph222
  %index227 = phi i64 [ 0, %vector.ph222 ], [ %index.next254, %vector.body226 ], !dbg !1955
  %154 = getelementptr inbounds i8, ptr %dst.addr.087.us.i, i64 %index227, !dbg !1956
  %155 = getelementptr inbounds i8, ptr %154, i64 4, !dbg !1956
  %156 = getelementptr inbounds i8, ptr %154, i64 8, !dbg !1956
  %157 = getelementptr inbounds i8, ptr %154, i64 12, !dbg !1956
  %wide.load228 = load <4 x i8>, ptr %154, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  %wide.load229 = load <4 x i8>, ptr %155, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  %wide.load230 = load <4 x i8>, ptr %156, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  %wide.load231 = load <4 x i8>, ptr %157, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  %158 = zext <4 x i8> %wide.load228 to <4 x i32>, !dbg !1956
  %159 = zext <4 x i8> %wide.load229 to <4 x i32>, !dbg !1956
  %160 = zext <4 x i8> %wide.load230 to <4 x i32>, !dbg !1956
  %161 = zext <4 x i8> %wide.load231 to <4 x i32>, !dbg !1956
  %162 = mul nsw <4 x i32> %broadcast.splat237, %158, !dbg !1951
  %163 = mul nsw <4 x i32> %broadcast.splat237, %159, !dbg !1951
  %164 = mul nsw <4 x i32> %broadcast.splat237, %160, !dbg !1951
  %165 = mul nsw <4 x i32> %broadcast.splat237, %161, !dbg !1951
  %166 = add nsw <4 x i32> %149, %162, !dbg !1956
  %167 = add nsw <4 x i32> %150, %163, !dbg !1956
  %168 = add nsw <4 x i32> %151, %164, !dbg !1956
  %169 = add nsw <4 x i32> %152, %165, !dbg !1956
  %170 = ashr <4 x i32> %166, %broadcast.splat245, !dbg !1956
  %171 = ashr <4 x i32> %167, %broadcast.splat245, !dbg !1956
  %172 = ashr <4 x i32> %168, %broadcast.splat245, !dbg !1956
  %173 = ashr <4 x i32> %169, %broadcast.splat245, !dbg !1956
  %174 = add nsw <4 x i32> %170, %broadcast.splat253, !dbg !1951
  %175 = add nsw <4 x i32> %171, %broadcast.splat253, !dbg !1951
  %176 = add nsw <4 x i32> %172, %broadcast.splat253, !dbg !1951
  %177 = add nsw <4 x i32> %173, %broadcast.splat253, !dbg !1951
  %178 = icmp ult <4 x i32> %174, <i32 256, i32 256, i32 256, i32 256>, !dbg !1959
  %179 = icmp ult <4 x i32> %175, <i32 256, i32 256, i32 256, i32 256>, !dbg !1959
  %180 = icmp ult <4 x i32> %176, <i32 256, i32 256, i32 256, i32 256>, !dbg !1959
  %181 = icmp ult <4 x i32> %177, <i32 256, i32 256, i32 256, i32 256>, !dbg !1959
  %182 = icmp sgt <4 x i32> %174, zeroinitializer, !dbg !1961
  %183 = icmp sgt <4 x i32> %175, zeroinitializer, !dbg !1961
  %184 = icmp sgt <4 x i32> %176, zeroinitializer, !dbg !1961
  %185 = icmp sgt <4 x i32> %177, zeroinitializer, !dbg !1961
  %186 = sext <4 x i1> %182 to <4 x i32>, !dbg !1961
  %187 = sext <4 x i1> %183 to <4 x i32>, !dbg !1961
  %188 = sext <4 x i1> %184 to <4 x i32>, !dbg !1961
  %189 = sext <4 x i1> %185 to <4 x i32>, !dbg !1961
  %190 = select <4 x i1> %178, <4 x i32> %174, <4 x i32> %186, !dbg !1961
  %191 = select <4 x i1> %179, <4 x i32> %175, <4 x i32> %187, !dbg !1961
  %192 = select <4 x i1> %180, <4 x i32> %176, <4 x i32> %188, !dbg !1961
  %193 = select <4 x i1> %181, <4 x i32> %177, <4 x i32> %189, !dbg !1961
  %194 = trunc <4 x i32> %190 to <4 x i8>, !dbg !1961
  %195 = trunc <4 x i32> %191 to <4 x i8>, !dbg !1961
  %196 = trunc <4 x i32> %192 to <4 x i8>, !dbg !1961
  %197 = trunc <4 x i32> %193 to <4 x i8>, !dbg !1961
  store <4 x i8> %194, ptr %154, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  store <4 x i8> %195, ptr %155, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  store <4 x i8> %196, ptr %156, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  store <4 x i8> %197, ptr %157, align 1, !dbg !1956, !alias.scope !1957, !noalias !1952
  %index.next254 = add nuw i64 %index227, 16, !dbg !1955
  %198 = icmp eq i64 %index.next254, %n.vec224, !dbg !1955
  br i1 %198, label %middle.block219, label %vector.body226, !dbg !1955, !llvm.loop !1962

middle.block219:                                  ; preds = %vector.body226
  br i1 %cmp.n255, label %for.cond2.for.cond.cleanup4_crit_edge.us.i, label %for.body5.us.i.preheader, !dbg !1951

for.body5.us.i.preheader:                         ; preds = %for.cond2.preheader.us.i, %middle.block219
  %indvars.iv94.i.ph = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %n.vec224, %middle.block219 ]
  br label %for.body5.us.i, !dbg !1951

for.body5.us.i:                                   ; preds = %for.body5.us.i.preheader, %for.body5.us.i
  %indvars.iv94.i = phi i64 [ %indvars.iv.next95.i, %for.body5.us.i ], [ %indvars.iv94.i.ph, %for.body5.us.i.preheader ]
    #dbg_value(i64 %indvars.iv94.i, !1671, !DIExpression(), !1950)
  %arrayidx.us.i66 = getelementptr inbounds i8, ptr %dst.addr.087.us.i, i64 %indvars.iv94.i, !dbg !1956
  %199 = load i8, ptr %arrayidx.us.i66, align 1, !dbg !1956
  %conv.us.i67 = zext i8 %199 to i32, !dbg !1956
  %200 = load i32, ptr %i_scale.i, align 4, !dbg !1956
  %mul.us.i = mul nsw i32 %200, %conv.us.i67, !dbg !1956
  %201 = load i32, ptr %i_denom.i, align 16, !dbg !1956
  %sub.us.i = add nsw i32 %201, -1, !dbg !1956
  %shl.us.i = shl nuw i32 1, %sub.us.i, !dbg !1956
  %add.us.i68 = add nsw i32 %shl.us.i, %mul.us.i, !dbg !1956
  %shr.us.i69 = ashr i32 %add.us.i68, %201, !dbg !1956
  %202 = load i32, ptr %i_offset.i, align 8, !dbg !1956
  %add8.us.i70 = add nsw i32 %shr.us.i69, %202, !dbg !1956
    #dbg_value(i32 %add8.us.i70, !1702, !DIExpression(), !1964)
  %tobool.not.i.us.i = icmp ult i32 %add8.us.i70, 256, !dbg !1959
  %203 = icmp sgt i32 %add8.us.i70, 0, !dbg !1961
  %shr.i.us.i = sext i1 %203 to i32, !dbg !1961
  %cond.i.us.i = select i1 %tobool.not.i.us.i, i32 %add8.us.i70, i32 %shr.i.us.i, !dbg !1961
  %conv.i.us.i = trunc i32 %cond.i.us.i to i8, !dbg !1961
  store i8 %conv.i.us.i, ptr %arrayidx.us.i66, align 1, !dbg !1956
  %indvars.iv.next95.i = add nuw nsw i64 %indvars.iv94.i, 1, !dbg !1955
    #dbg_value(i64 %indvars.iv.next95.i, !1671, !DIExpression(), !1950)
  %exitcond98.not.i = icmp eq i64 %indvars.iv.next95.i, %wide.trip.count97.i, !dbg !1965
  br i1 %exitcond98.not.i, label %for.cond2.for.cond.cleanup4_crit_edge.us.i, label %for.body5.us.i, !dbg !1951, !llvm.loop !1966

for.cond2.for.cond.cleanup4_crit_edge.us.i:       ; preds = %for.body5.us.i, %middle.block219
  %inc12.us.i = add nuw nsw i32 %y.088.us.i, 1, !dbg !1967
    #dbg_value(i32 %inc12.us.i, !1667, !DIExpression(), !1948)
  %add.ptr.us.i71 = getelementptr i8, ptr %dst.addr.087.us.i, i64 %idx.ext.i65, !dbg !1968
    #dbg_value(ptr %add.ptr.us.i71, !1656, !DIExpression(), !1919)
    #dbg_value(ptr %add.ptr.us.i71, !1662, !DIExpression(), !1919)
  %exitcond99.not.i = icmp eq i32 %inc12.us.i, %i_height, !dbg !1969
  br i1 %exitcond99.not.i, label %cleanup, label %for.cond2.preheader.us.i, !dbg !1949, !llvm.loop !1970

if.else:                                          ; preds = %entry
  %weightfn24 = getelementptr inbounds i8, ptr %weight, i64 48, !dbg !1972
  %204 = load ptr, ptr %weightfn24, align 16, !dbg !1972
  %tobool25.not = icmp eq ptr %204, null, !dbg !1974
  br i1 %tobool25.not, label %if.else27, label %if.then26, !dbg !1975

if.then26:                                        ; preds = %if.else
  %205 = load i32, ptr %i_dst_stride, align 4, !dbg !1976
    #dbg_value(ptr %dst, !1656, !DIExpression(), !1978)
    #dbg_value(i32 %205, !1661, !DIExpression(), !1978)
    #dbg_value(ptr %add.ptr9, !1662, !DIExpression(), !1978)
    #dbg_value(i32 %i_src_stride, !1663, !DIExpression(), !1978)
    #dbg_value(ptr %weight, !1664, !DIExpression(), !1978)
    #dbg_value(i32 %i_width, !1665, !DIExpression(), !1978)
    #dbg_value(i32 %i_height, !1666, !DIExpression(), !1978)
  %i_denom.i72 = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !1980
  %206 = load i32, ptr %i_denom.i72, align 16, !dbg !1980
  %cmp.i73 = icmp sgt i32 %206, 0, !dbg !1981
  %cmp185.i74 = icmp sgt i32 %i_height, 0, !dbg !1982
  br i1 %cmp.i73, label %for.cond.preheader.i106, label %for.cond17.preheader.i75, !dbg !1983

for.cond17.preheader.i75:                         ; preds = %if.then26
    #dbg_value(i32 0, !1674, !DIExpression(), !1984)
  br i1 %cmp185.i74, label %for.cond23.preheader.lr.ph.i76, label %cleanup, !dbg !1985

for.cond23.preheader.lr.ph.i76:                   ; preds = %for.cond17.preheader.i75
  %cmp2477.i77 = icmp sgt i32 %i_width, 0
  %i_scale31.i78 = getelementptr i8, ptr %weight, i64 36
  %i_offset33.i79 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43.i80 = sext i32 %205 to i64
  %idx.ext45.i81 = sext i32 %i_src_stride to i64
  br i1 %cmp2477.i77, label %for.cond23.preheader.us.preheader.i82, label %cleanup

for.cond23.preheader.us.preheader.i82:            ; preds = %for.cond23.preheader.lr.ph.i76
  %wide.trip.count.i83 = zext nneg i32 %i_width to i64
  %207 = add nsw i32 %i_height, -1, !dbg !1985
  %208 = zext i32 %207 to i64, !dbg !1985
  %209 = mul nsw i64 %idx.ext43.i80, %208, !dbg !1985
  %210 = getelementptr i8, ptr %dst, i64 %209, !dbg !1985
  %scevgep257 = getelementptr i8, ptr %210, i64 %wide.trip.count.i83, !dbg !1985
  %211 = mul nsw i64 %idx.ext45.i81, %208, !dbg !1985
  %212 = getelementptr i8, ptr %1, i64 %211, !dbg !1985
  %213 = getelementptr i8, ptr %212, i64 %idx.ext8, !dbg !1985
  %214 = getelementptr i8, ptr %213, i64 %idx.ext, !dbg !1985
  %scevgep258 = getelementptr i8, ptr %214, i64 %wide.trip.count.i83, !dbg !1985
  %scevgep259 = getelementptr i8, ptr %weight, i64 44, !dbg !1985
  %min.iters.check272 = icmp ult i32 %i_width, 16
  %bound0260 = icmp ugt ptr %scevgep258, %dst
  %bound1261 = icmp ult ptr %add.ptr9, %scevgep257
  %found.conflict262 = and i1 %bound0260, %bound1261
  %215 = or i32 %205, %i_src_stride
  %216 = icmp slt i32 %215, 0
  %217 = or i1 %found.conflict262, %216
  %bound0265 = icmp ugt ptr %scevgep259, %dst
  %bound1266 = icmp ult ptr %i_scale31.i78, %scevgep257
  %found.conflict267 = and i1 %bound0265, %bound1266
  %stride.check268 = icmp slt i32 %205, 0
  %218 = or i1 %found.conflict267, %stride.check268
  %conflict.rdx269 = or i1 %217, %218
  %n.vec275 = and i64 %wide.trip.count.i83, 2147483632
  %cmp.n298 = icmp eq i64 %n.vec275, %wide.trip.count.i83
  %xtraiter355 = and i64 %wide.trip.count.i83, 1
  %lcmp.mod356.not = icmp eq i64 %xtraiter355, 0
  %219 = add nsw i64 %wide.trip.count.i83, -1
  br label %for.cond23.preheader.us.i84, !dbg !1985

for.cond23.preheader.us.i84:                      ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i101, %for.cond23.preheader.us.preheader.i82
  %y16.082.us.i85 = phi i32 [ %inc42.us.i102, %for.cond23.for.cond.cleanup26_crit_edge.us.i101 ], [ 0, %for.cond23.preheader.us.preheader.i82 ]
  %dst.addr.181.us.i86 = phi ptr [ %add.ptr44.us.i103, %for.cond23.for.cond.cleanup26_crit_edge.us.i101 ], [ %dst, %for.cond23.preheader.us.preheader.i82 ]
  %src.addr.180.us.i87 = phi ptr [ %add.ptr46.us.i104, %for.cond23.for.cond.cleanup26_crit_edge.us.i101 ], [ %add.ptr9, %for.cond23.preheader.us.preheader.i82 ]
    #dbg_value(i32 %y16.082.us.i85, !1674, !DIExpression(), !1984)
    #dbg_value(ptr %dst.addr.181.us.i86, !1656, !DIExpression(), !1978)
    #dbg_value(ptr %src.addr.180.us.i87, !1662, !DIExpression(), !1978)
    #dbg_value(i32 0, !1677, !DIExpression(), !1986)
  %brmerge359 = select i1 %min.iters.check272, i1 true, i1 %conflict.rdx269, !dbg !1987
  br i1 %brmerge359, label %for.body27.us.i88.preheader, label %vector.ph273, !dbg !1987

vector.ph273:                                     ; preds = %for.cond23.preheader.us.i84
  %220 = load i32, ptr %i_scale31.i78, align 4, !alias.scope !1988
  %broadcast.splatinsert287 = insertelement <4 x i32> poison, i32 %220, i64 0
  %broadcast.splat288 = shufflevector <4 x i32> %broadcast.splatinsert287, <4 x i32> poison, <4 x i32> zeroinitializer
  %221 = load i32, ptr %i_offset33.i79, align 8, !alias.scope !1988
  %broadcast.splatinsert295 = insertelement <4 x i32> poison, i32 %221, i64 0
  %broadcast.splat296 = shufflevector <4 x i32> %broadcast.splatinsert295, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body277, !dbg !1987

vector.body277:                                   ; preds = %vector.body277, %vector.ph273
  %index278 = phi i64 [ 0, %vector.ph273 ], [ %index.next297, %vector.body277 ], !dbg !1991
  %222 = getelementptr inbounds i8, ptr %src.addr.180.us.i87, i64 %index278, !dbg !1992
  %223 = getelementptr inbounds i8, ptr %222, i64 4, !dbg !1992
  %224 = getelementptr inbounds i8, ptr %222, i64 8, !dbg !1992
  %225 = getelementptr inbounds i8, ptr %222, i64 12, !dbg !1992
  %wide.load279 = load <4 x i8>, ptr %222, align 1, !dbg !1992, !alias.scope !1993
  %wide.load280 = load <4 x i8>, ptr %223, align 1, !dbg !1992, !alias.scope !1993
  %wide.load281 = load <4 x i8>, ptr %224, align 1, !dbg !1992, !alias.scope !1993
  %wide.load282 = load <4 x i8>, ptr %225, align 1, !dbg !1992, !alias.scope !1993
  %226 = zext <4 x i8> %wide.load279 to <4 x i32>, !dbg !1992
  %227 = zext <4 x i8> %wide.load280 to <4 x i32>, !dbg !1992
  %228 = zext <4 x i8> %wide.load281 to <4 x i32>, !dbg !1992
  %229 = zext <4 x i8> %wide.load282 to <4 x i32>, !dbg !1992
  %230 = mul nsw <4 x i32> %broadcast.splat288, %226, !dbg !1987
  %231 = mul nsw <4 x i32> %broadcast.splat288, %227, !dbg !1987
  %232 = mul nsw <4 x i32> %broadcast.splat288, %228, !dbg !1987
  %233 = mul nsw <4 x i32> %broadcast.splat288, %229, !dbg !1987
  %234 = add nsw <4 x i32> %230, %broadcast.splat296, !dbg !1987
  %235 = add nsw <4 x i32> %231, %broadcast.splat296, !dbg !1987
  %236 = add nsw <4 x i32> %232, %broadcast.splat296, !dbg !1987
  %237 = add nsw <4 x i32> %233, %broadcast.splat296, !dbg !1987
  %238 = icmp ult <4 x i32> %234, <i32 256, i32 256, i32 256, i32 256>, !dbg !1995
  %239 = icmp ult <4 x i32> %235, <i32 256, i32 256, i32 256, i32 256>, !dbg !1995
  %240 = icmp ult <4 x i32> %236, <i32 256, i32 256, i32 256, i32 256>, !dbg !1995
  %241 = icmp ult <4 x i32> %237, <i32 256, i32 256, i32 256, i32 256>, !dbg !1995
  %242 = icmp sgt <4 x i32> %234, zeroinitializer, !dbg !1997
  %243 = icmp sgt <4 x i32> %235, zeroinitializer, !dbg !1997
  %244 = icmp sgt <4 x i32> %236, zeroinitializer, !dbg !1997
  %245 = icmp sgt <4 x i32> %237, zeroinitializer, !dbg !1997
  %246 = sext <4 x i1> %242 to <4 x i32>, !dbg !1997
  %247 = sext <4 x i1> %243 to <4 x i32>, !dbg !1997
  %248 = sext <4 x i1> %244 to <4 x i32>, !dbg !1997
  %249 = sext <4 x i1> %245 to <4 x i32>, !dbg !1997
  %250 = select <4 x i1> %238, <4 x i32> %234, <4 x i32> %246, !dbg !1997
  %251 = select <4 x i1> %239, <4 x i32> %235, <4 x i32> %247, !dbg !1997
  %252 = select <4 x i1> %240, <4 x i32> %236, <4 x i32> %248, !dbg !1997
  %253 = select <4 x i1> %241, <4 x i32> %237, <4 x i32> %249, !dbg !1997
  %254 = trunc <4 x i32> %250 to <4 x i8>, !dbg !1997
  %255 = trunc <4 x i32> %251 to <4 x i8>, !dbg !1997
  %256 = trunc <4 x i32> %252 to <4 x i8>, !dbg !1997
  %257 = trunc <4 x i32> %253 to <4 x i8>, !dbg !1997
  %258 = getelementptr inbounds i8, ptr %dst.addr.181.us.i86, i64 %index278, !dbg !1992
  %259 = getelementptr inbounds i8, ptr %258, i64 4, !dbg !1992
  %260 = getelementptr inbounds i8, ptr %258, i64 8, !dbg !1992
  %261 = getelementptr inbounds i8, ptr %258, i64 12, !dbg !1992
  store <4 x i8> %254, ptr %258, align 1, !dbg !1992, !alias.scope !1998, !noalias !2000
  store <4 x i8> %255, ptr %259, align 1, !dbg !1992, !alias.scope !1998, !noalias !2000
  store <4 x i8> %256, ptr %260, align 1, !dbg !1992, !alias.scope !1998, !noalias !2000
  store <4 x i8> %257, ptr %261, align 1, !dbg !1992, !alias.scope !1998, !noalias !2000
  %index.next297 = add nuw i64 %index278, 16, !dbg !1991
  %262 = icmp eq i64 %index.next297, %n.vec275, !dbg !1991
  br i1 %262, label %middle.block270, label %vector.body277, !dbg !1991, !llvm.loop !2001

middle.block270:                                  ; preds = %vector.body277
  br i1 %cmp.n298, label %for.cond23.for.cond.cleanup26_crit_edge.us.i101, label %for.body27.us.i88.preheader, !dbg !1987

for.body27.us.i88.preheader:                      ; preds = %for.cond23.preheader.us.i84, %middle.block270
  %indvars.iv.i89.ph = phi i64 [ 0, %for.cond23.preheader.us.i84 ], [ %n.vec275, %middle.block270 ]
  br i1 %lcmp.mod356.not, label %for.body27.us.i88.prol.loopexit, label %for.body27.us.i88.prol, !dbg !1987

for.body27.us.i88.prol:                           ; preds = %for.body27.us.i88.preheader
    #dbg_value(i64 poison, !1677, !DIExpression(), !1986)
  %arrayidx29.us.i90.prol = getelementptr inbounds i8, ptr %src.addr.180.us.i87, i64 %indvars.iv.i89.ph, !dbg !1992
  %263 = load i8, ptr %arrayidx29.us.i90.prol, align 1, !dbg !1992
  %conv30.us.i91.prol = zext i8 %263 to i32, !dbg !1992
  %264 = load i32, ptr %i_scale31.i78, align 4, !dbg !1992
  %mul32.us.i92.prol = mul nsw i32 %264, %conv30.us.i91.prol, !dbg !1992
  %265 = load i32, ptr %i_offset33.i79, align 8, !dbg !1992
  %add34.us.i93.prol = add nsw i32 %mul32.us.i92.prol, %265, !dbg !1992
    #dbg_value(i32 %add34.us.i93.prol, !1702, !DIExpression(), !2003)
  %tobool.not.i72.us.i94.prol = icmp ult i32 %add34.us.i93.prol, 256, !dbg !1995
  %266 = icmp sgt i32 %add34.us.i93.prol, 0, !dbg !1997
  %shr.i73.us.i95.prol = sext i1 %266 to i32, !dbg !1997
  %cond.i74.us.i96.prol = select i1 %tobool.not.i72.us.i94.prol, i32 %add34.us.i93.prol, i32 %shr.i73.us.i95.prol, !dbg !1997
  %conv.i75.us.i97.prol = trunc i32 %cond.i74.us.i96.prol to i8, !dbg !1997
  %arrayidx37.us.i98.prol = getelementptr inbounds i8, ptr %dst.addr.181.us.i86, i64 %indvars.iv.i89.ph, !dbg !1992
  store i8 %conv.i75.us.i97.prol, ptr %arrayidx37.us.i98.prol, align 1, !dbg !1992
  %indvars.iv.next.i99.prol = or disjoint i64 %indvars.iv.i89.ph, 1, !dbg !1991
    #dbg_value(i64 %indvars.iv.next.i99.prol, !1677, !DIExpression(), !1986)
  br label %for.body27.us.i88.prol.loopexit, !dbg !1987

for.body27.us.i88.prol.loopexit:                  ; preds = %for.body27.us.i88.prol, %for.body27.us.i88.preheader
  %indvars.iv.i89.unr = phi i64 [ %indvars.iv.i89.ph, %for.body27.us.i88.preheader ], [ %indvars.iv.next.i99.prol, %for.body27.us.i88.prol ]
  %267 = icmp eq i64 %indvars.iv.i89.ph, %219, !dbg !1987
  br i1 %267, label %for.cond23.for.cond.cleanup26_crit_edge.us.i101, label %for.body27.us.i88, !dbg !1987

for.body27.us.i88:                                ; preds = %for.body27.us.i88.prol.loopexit, %for.body27.us.i88
  %indvars.iv.i89 = phi i64 [ %indvars.iv.next.i99.1, %for.body27.us.i88 ], [ %indvars.iv.i89.unr, %for.body27.us.i88.prol.loopexit ]
    #dbg_value(i64 %indvars.iv.i89, !1677, !DIExpression(), !1986)
  %arrayidx29.us.i90 = getelementptr inbounds i8, ptr %src.addr.180.us.i87, i64 %indvars.iv.i89, !dbg !1992
  %268 = load i8, ptr %arrayidx29.us.i90, align 1, !dbg !1992
  %conv30.us.i91 = zext i8 %268 to i32, !dbg !1992
  %269 = load i32, ptr %i_scale31.i78, align 4, !dbg !1992
  %mul32.us.i92 = mul nsw i32 %269, %conv30.us.i91, !dbg !1992
  %270 = load i32, ptr %i_offset33.i79, align 8, !dbg !1992
  %add34.us.i93 = add nsw i32 %mul32.us.i92, %270, !dbg !1992
    #dbg_value(i32 %add34.us.i93, !1702, !DIExpression(), !2003)
  %tobool.not.i72.us.i94 = icmp ult i32 %add34.us.i93, 256, !dbg !1995
  %271 = icmp sgt i32 %add34.us.i93, 0, !dbg !1997
  %shr.i73.us.i95 = sext i1 %271 to i32, !dbg !1997
  %cond.i74.us.i96 = select i1 %tobool.not.i72.us.i94, i32 %add34.us.i93, i32 %shr.i73.us.i95, !dbg !1997
  %conv.i75.us.i97 = trunc i32 %cond.i74.us.i96 to i8, !dbg !1997
  %arrayidx37.us.i98 = getelementptr inbounds i8, ptr %dst.addr.181.us.i86, i64 %indvars.iv.i89, !dbg !1992
  store i8 %conv.i75.us.i97, ptr %arrayidx37.us.i98, align 1, !dbg !1992
  %indvars.iv.next.i99 = add nuw nsw i64 %indvars.iv.i89, 1, !dbg !1991
    #dbg_value(i64 %indvars.iv.next.i99, !1677, !DIExpression(), !1986)
  %arrayidx29.us.i90.1 = getelementptr inbounds i8, ptr %src.addr.180.us.i87, i64 %indvars.iv.next.i99, !dbg !1992
  %272 = load i8, ptr %arrayidx29.us.i90.1, align 1, !dbg !1992
  %conv30.us.i91.1 = zext i8 %272 to i32, !dbg !1992
  %273 = load i32, ptr %i_scale31.i78, align 4, !dbg !1992
  %mul32.us.i92.1 = mul nsw i32 %273, %conv30.us.i91.1, !dbg !1992
  %274 = load i32, ptr %i_offset33.i79, align 8, !dbg !1992
  %add34.us.i93.1 = add nsw i32 %mul32.us.i92.1, %274, !dbg !1992
    #dbg_value(i32 %add34.us.i93.1, !1702, !DIExpression(), !2003)
  %tobool.not.i72.us.i94.1 = icmp ult i32 %add34.us.i93.1, 256, !dbg !1995
  %275 = icmp sgt i32 %add34.us.i93.1, 0, !dbg !1997
  %shr.i73.us.i95.1 = sext i1 %275 to i32, !dbg !1997
  %cond.i74.us.i96.1 = select i1 %tobool.not.i72.us.i94.1, i32 %add34.us.i93.1, i32 %shr.i73.us.i95.1, !dbg !1997
  %conv.i75.us.i97.1 = trunc i32 %cond.i74.us.i96.1 to i8, !dbg !1997
  %arrayidx37.us.i98.1 = getelementptr inbounds i8, ptr %dst.addr.181.us.i86, i64 %indvars.iv.next.i99, !dbg !1992
  store i8 %conv.i75.us.i97.1, ptr %arrayidx37.us.i98.1, align 1, !dbg !1992
  %indvars.iv.next.i99.1 = add nuw nsw i64 %indvars.iv.i89, 2, !dbg !1991
    #dbg_value(i64 %indvars.iv.next.i99.1, !1677, !DIExpression(), !1986)
  %exitcond.not.i100.1 = icmp eq i64 %indvars.iv.next.i99.1, %wide.trip.count.i83, !dbg !2004
  br i1 %exitcond.not.i100.1, label %for.cond23.for.cond.cleanup26_crit_edge.us.i101, label %for.body27.us.i88, !dbg !1987, !llvm.loop !2005

for.cond23.for.cond.cleanup26_crit_edge.us.i101:  ; preds = %for.body27.us.i88.prol.loopexit, %for.body27.us.i88, %middle.block270
  %inc42.us.i102 = add nuw nsw i32 %y16.082.us.i85, 1, !dbg !2006
    #dbg_value(i32 %inc42.us.i102, !1674, !DIExpression(), !1984)
  %add.ptr44.us.i103 = getelementptr inbounds i8, ptr %dst.addr.181.us.i86, i64 %idx.ext43.i80, !dbg !2007
    #dbg_value(ptr %add.ptr44.us.i103, !1656, !DIExpression(), !1978)
  %add.ptr46.us.i104 = getelementptr inbounds i8, ptr %src.addr.180.us.i87, i64 %idx.ext45.i81, !dbg !2008
    #dbg_value(ptr %add.ptr46.us.i104, !1662, !DIExpression(), !1978)
  %exitcond93.not.i105 = icmp eq i32 %inc42.us.i102, %i_height, !dbg !2009
  br i1 %exitcond93.not.i105, label %cleanup, label %for.cond23.preheader.us.i84, !dbg !1985, !llvm.loop !2010

for.cond.preheader.i106:                          ; preds = %if.then26
    #dbg_value(i32 0, !1667, !DIExpression(), !2012)
  br i1 %cmp185.i74, label %for.cond2.preheader.lr.ph.i107, label %cleanup, !dbg !2013

for.cond2.preheader.lr.ph.i107:                   ; preds = %for.cond.preheader.i106
  %cmp383.i108 = icmp sgt i32 %i_width, 0
  %i_scale.i109 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset.i110 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext.i111 = sext i32 %205 to i64
  %idx.ext13.i112 = sext i32 %i_src_stride to i64
  br i1 %cmp383.i108, label %for.cond2.preheader.us.preheader.i113, label %cleanup

for.cond2.preheader.us.preheader.i113:            ; preds = %for.cond2.preheader.lr.ph.i107
  %wide.trip.count97.i114 = zext nneg i32 %i_width to i64
  %276 = add nsw i32 %i_height, -1, !dbg !2013
  %277 = zext i32 %276 to i64, !dbg !2013
  %278 = mul nsw i64 %idx.ext.i111, %277, !dbg !2013
  %279 = getelementptr i8, ptr %dst, i64 %278, !dbg !2013
  %scevgep300 = getelementptr i8, ptr %279, i64 %wide.trip.count97.i114, !dbg !2013
  %280 = mul nsw i64 %idx.ext13.i112, %277, !dbg !2013
  %281 = getelementptr i8, ptr %1, i64 %280, !dbg !2013
  %282 = getelementptr i8, ptr %281, i64 %idx.ext8, !dbg !2013
  %283 = getelementptr i8, ptr %282, i64 %idx.ext, !dbg !2013
  %scevgep301 = getelementptr i8, ptr %283, i64 %wide.trip.count97.i114, !dbg !2013
  %scevgep302 = getelementptr i8, ptr %weight, i64 44, !dbg !2013
  %min.iters.check315 = icmp ult i32 %i_width, 16
  %bound0303 = icmp ugt ptr %scevgep301, %dst
  %bound1304 = icmp ult ptr %add.ptr9, %scevgep300
  %found.conflict305 = and i1 %bound0303, %bound1304
  %284 = or i32 %205, %i_src_stride
  %285 = icmp slt i32 %284, 0
  %286 = or i1 %found.conflict305, %285
  %bound0308 = icmp ugt ptr %scevgep302, %dst
  %bound1309 = icmp ult ptr %i_denom.i72, %scevgep300
  %found.conflict310 = and i1 %bound0308, %bound1309
  %stride.check311 = icmp slt i32 %205, 0
  %287 = or i1 %found.conflict310, %stride.check311
  %conflict.rdx312 = or i1 %286, %287
  %n.vec318 = and i64 %wide.trip.count97.i114, 2147483632
  %cmp.n349 = icmp eq i64 %n.vec318, %wide.trip.count97.i114
  br label %for.cond2.preheader.us.i115, !dbg !2013

for.cond2.preheader.us.i115:                      ; preds = %for.cond2.for.cond.cleanup4_crit_edge.us.i136, %for.cond2.preheader.us.preheader.i113
  %y.088.us.i116 = phi i32 [ %inc12.us.i137, %for.cond2.for.cond.cleanup4_crit_edge.us.i136 ], [ 0, %for.cond2.preheader.us.preheader.i113 ]
  %dst.addr.087.us.i117 = phi ptr [ %add.ptr.us.i138, %for.cond2.for.cond.cleanup4_crit_edge.us.i136 ], [ %dst, %for.cond2.preheader.us.preheader.i113 ]
  %src.addr.086.us.i118 = phi ptr [ %add.ptr14.us.i139, %for.cond2.for.cond.cleanup4_crit_edge.us.i136 ], [ %add.ptr9, %for.cond2.preheader.us.preheader.i113 ]
    #dbg_value(i32 %y.088.us.i116, !1667, !DIExpression(), !2012)
    #dbg_value(ptr %dst.addr.087.us.i117, !1656, !DIExpression(), !1978)
    #dbg_value(ptr %src.addr.086.us.i118, !1662, !DIExpression(), !1978)
    #dbg_value(i32 0, !1671, !DIExpression(), !2014)
  %brmerge360 = select i1 %min.iters.check315, i1 true, i1 %conflict.rdx312, !dbg !2015
  br i1 %brmerge360, label %for.body5.us.i119.preheader, label %vector.ph316, !dbg !2015

vector.ph316:                                     ; preds = %for.cond2.preheader.us.i115
  %288 = load i32, ptr %i_scale.i109, align 4, !alias.scope !2016
  %broadcast.splatinsert330 = insertelement <4 x i32> poison, i32 %288, i64 0
  %broadcast.splat331 = shufflevector <4 x i32> %broadcast.splatinsert330, <4 x i32> poison, <4 x i32> zeroinitializer
  %289 = load i32, ptr %i_denom.i72, align 16, !alias.scope !2016
  %broadcast.splatinsert338 = insertelement <4 x i32> poison, i32 %289, i64 0
  %broadcast.splat339 = shufflevector <4 x i32> %broadcast.splatinsert338, <4 x i32> poison, <4 x i32> zeroinitializer
  %290 = add nsw <4 x i32> %broadcast.splat339, <i32 -1, i32 -1, i32 -1, i32 -1>
  %291 = add nsw <4 x i32> %broadcast.splat339, <i32 -1, i32 -1, i32 -1, i32 -1>
  %292 = add nsw <4 x i32> %broadcast.splat339, <i32 -1, i32 -1, i32 -1, i32 -1>
  %293 = add nsw <4 x i32> %broadcast.splat339, <i32 -1, i32 -1, i32 -1, i32 -1>
  %294 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %290
  %295 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %291
  %296 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %292
  %297 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %293
  %298 = load i32, ptr %i_offset.i110, align 8, !alias.scope !2016
  %broadcast.splatinsert346 = insertelement <4 x i32> poison, i32 %298, i64 0
  %broadcast.splat347 = shufflevector <4 x i32> %broadcast.splatinsert346, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body320, !dbg !2015

vector.body320:                                   ; preds = %vector.body320, %vector.ph316
  %index321 = phi i64 [ 0, %vector.ph316 ], [ %index.next348, %vector.body320 ], !dbg !2019
  %299 = getelementptr inbounds i8, ptr %src.addr.086.us.i118, i64 %index321, !dbg !2020
  %300 = getelementptr inbounds i8, ptr %299, i64 4, !dbg !2020
  %301 = getelementptr inbounds i8, ptr %299, i64 8, !dbg !2020
  %302 = getelementptr inbounds i8, ptr %299, i64 12, !dbg !2020
  %wide.load322 = load <4 x i8>, ptr %299, align 1, !dbg !2020, !alias.scope !2021
  %wide.load323 = load <4 x i8>, ptr %300, align 1, !dbg !2020, !alias.scope !2021
  %wide.load324 = load <4 x i8>, ptr %301, align 1, !dbg !2020, !alias.scope !2021
  %wide.load325 = load <4 x i8>, ptr %302, align 1, !dbg !2020, !alias.scope !2021
  %303 = zext <4 x i8> %wide.load322 to <4 x i32>, !dbg !2020
  %304 = zext <4 x i8> %wide.load323 to <4 x i32>, !dbg !2020
  %305 = zext <4 x i8> %wide.load324 to <4 x i32>, !dbg !2020
  %306 = zext <4 x i8> %wide.load325 to <4 x i32>, !dbg !2020
  %307 = mul nsw <4 x i32> %broadcast.splat331, %303, !dbg !2015
  %308 = mul nsw <4 x i32> %broadcast.splat331, %304, !dbg !2015
  %309 = mul nsw <4 x i32> %broadcast.splat331, %305, !dbg !2015
  %310 = mul nsw <4 x i32> %broadcast.splat331, %306, !dbg !2015
  %311 = add nsw <4 x i32> %294, %307, !dbg !2020
  %312 = add nsw <4 x i32> %295, %308, !dbg !2020
  %313 = add nsw <4 x i32> %296, %309, !dbg !2020
  %314 = add nsw <4 x i32> %297, %310, !dbg !2020
  %315 = ashr <4 x i32> %311, %broadcast.splat339, !dbg !2020
  %316 = ashr <4 x i32> %312, %broadcast.splat339, !dbg !2020
  %317 = ashr <4 x i32> %313, %broadcast.splat339, !dbg !2020
  %318 = ashr <4 x i32> %314, %broadcast.splat339, !dbg !2020
  %319 = add nsw <4 x i32> %315, %broadcast.splat347, !dbg !2015
  %320 = add nsw <4 x i32> %316, %broadcast.splat347, !dbg !2015
  %321 = add nsw <4 x i32> %317, %broadcast.splat347, !dbg !2015
  %322 = add nsw <4 x i32> %318, %broadcast.splat347, !dbg !2015
  %323 = icmp ult <4 x i32> %319, <i32 256, i32 256, i32 256, i32 256>, !dbg !2023
  %324 = icmp ult <4 x i32> %320, <i32 256, i32 256, i32 256, i32 256>, !dbg !2023
  %325 = icmp ult <4 x i32> %321, <i32 256, i32 256, i32 256, i32 256>, !dbg !2023
  %326 = icmp ult <4 x i32> %322, <i32 256, i32 256, i32 256, i32 256>, !dbg !2023
  %327 = icmp sgt <4 x i32> %319, zeroinitializer, !dbg !2025
  %328 = icmp sgt <4 x i32> %320, zeroinitializer, !dbg !2025
  %329 = icmp sgt <4 x i32> %321, zeroinitializer, !dbg !2025
  %330 = icmp sgt <4 x i32> %322, zeroinitializer, !dbg !2025
  %331 = sext <4 x i1> %327 to <4 x i32>, !dbg !2025
  %332 = sext <4 x i1> %328 to <4 x i32>, !dbg !2025
  %333 = sext <4 x i1> %329 to <4 x i32>, !dbg !2025
  %334 = sext <4 x i1> %330 to <4 x i32>, !dbg !2025
  %335 = select <4 x i1> %323, <4 x i32> %319, <4 x i32> %331, !dbg !2025
  %336 = select <4 x i1> %324, <4 x i32> %320, <4 x i32> %332, !dbg !2025
  %337 = select <4 x i1> %325, <4 x i32> %321, <4 x i32> %333, !dbg !2025
  %338 = select <4 x i1> %326, <4 x i32> %322, <4 x i32> %334, !dbg !2025
  %339 = trunc <4 x i32> %335 to <4 x i8>, !dbg !2025
  %340 = trunc <4 x i32> %336 to <4 x i8>, !dbg !2025
  %341 = trunc <4 x i32> %337 to <4 x i8>, !dbg !2025
  %342 = trunc <4 x i32> %338 to <4 x i8>, !dbg !2025
  %343 = getelementptr inbounds i8, ptr %dst.addr.087.us.i117, i64 %index321, !dbg !2020
  %344 = getelementptr inbounds i8, ptr %343, i64 4, !dbg !2020
  %345 = getelementptr inbounds i8, ptr %343, i64 8, !dbg !2020
  %346 = getelementptr inbounds i8, ptr %343, i64 12, !dbg !2020
  store <4 x i8> %339, ptr %343, align 1, !dbg !2020, !alias.scope !2026, !noalias !2028
  store <4 x i8> %340, ptr %344, align 1, !dbg !2020, !alias.scope !2026, !noalias !2028
  store <4 x i8> %341, ptr %345, align 1, !dbg !2020, !alias.scope !2026, !noalias !2028
  store <4 x i8> %342, ptr %346, align 1, !dbg !2020, !alias.scope !2026, !noalias !2028
  %index.next348 = add nuw i64 %index321, 16, !dbg !2019
  %347 = icmp eq i64 %index.next348, %n.vec318, !dbg !2019
  br i1 %347, label %middle.block313, label %vector.body320, !dbg !2019, !llvm.loop !2029

middle.block313:                                  ; preds = %vector.body320
  br i1 %cmp.n349, label %for.cond2.for.cond.cleanup4_crit_edge.us.i136, label %for.body5.us.i119.preheader, !dbg !2015

for.body5.us.i119.preheader:                      ; preds = %for.cond2.preheader.us.i115, %middle.block313
  %indvars.iv94.i120.ph = phi i64 [ 0, %for.cond2.preheader.us.i115 ], [ %n.vec318, %middle.block313 ]
  br label %for.body5.us.i119, !dbg !2015

for.body5.us.i119:                                ; preds = %for.body5.us.i119.preheader, %for.body5.us.i119
  %indvars.iv94.i120 = phi i64 [ %indvars.iv.next95.i134, %for.body5.us.i119 ], [ %indvars.iv94.i120.ph, %for.body5.us.i119.preheader ]
    #dbg_value(i64 %indvars.iv94.i120, !1671, !DIExpression(), !2014)
  %arrayidx.us.i121 = getelementptr inbounds i8, ptr %src.addr.086.us.i118, i64 %indvars.iv94.i120, !dbg !2020
  %348 = load i8, ptr %arrayidx.us.i121, align 1, !dbg !2020
  %conv.us.i122 = zext i8 %348 to i32, !dbg !2020
  %349 = load i32, ptr %i_scale.i109, align 4, !dbg !2020
  %mul.us.i123 = mul nsw i32 %349, %conv.us.i122, !dbg !2020
  %350 = load i32, ptr %i_denom.i72, align 16, !dbg !2020
  %sub.us.i124 = add nsw i32 %350, -1, !dbg !2020
  %shl.us.i125 = shl nuw i32 1, %sub.us.i124, !dbg !2020
  %add.us.i126 = add nsw i32 %shl.us.i125, %mul.us.i123, !dbg !2020
  %shr.us.i127 = ashr i32 %add.us.i126, %350, !dbg !2020
  %351 = load i32, ptr %i_offset.i110, align 8, !dbg !2020
  %add8.us.i128 = add nsw i32 %shr.us.i127, %351, !dbg !2020
    #dbg_value(i32 %add8.us.i128, !1702, !DIExpression(), !2031)
  %tobool.not.i.us.i129 = icmp ult i32 %add8.us.i128, 256, !dbg !2023
  %352 = icmp sgt i32 %add8.us.i128, 0, !dbg !2025
  %shr.i.us.i130 = sext i1 %352 to i32, !dbg !2025
  %cond.i.us.i131 = select i1 %tobool.not.i.us.i129, i32 %add8.us.i128, i32 %shr.i.us.i130, !dbg !2025
  %conv.i.us.i132 = trunc i32 %cond.i.us.i131 to i8, !dbg !2025
  %arrayidx10.us.i133 = getelementptr inbounds i8, ptr %dst.addr.087.us.i117, i64 %indvars.iv94.i120, !dbg !2020
  store i8 %conv.i.us.i132, ptr %arrayidx10.us.i133, align 1, !dbg !2020
  %indvars.iv.next95.i134 = add nuw nsw i64 %indvars.iv94.i120, 1, !dbg !2019
    #dbg_value(i64 %indvars.iv.next95.i134, !1671, !DIExpression(), !2014)
  %exitcond98.not.i135 = icmp eq i64 %indvars.iv.next95.i134, %wide.trip.count97.i114, !dbg !2032
  br i1 %exitcond98.not.i135, label %for.cond2.for.cond.cleanup4_crit_edge.us.i136, label %for.body5.us.i119, !dbg !2015, !llvm.loop !2033

for.cond2.for.cond.cleanup4_crit_edge.us.i136:    ; preds = %for.body5.us.i119, %middle.block313
  %inc12.us.i137 = add nuw nsw i32 %y.088.us.i116, 1, !dbg !2034
    #dbg_value(i32 %inc12.us.i137, !1667, !DIExpression(), !2012)
  %add.ptr.us.i138 = getelementptr inbounds i8, ptr %dst.addr.087.us.i117, i64 %idx.ext.i111, !dbg !2035
    #dbg_value(ptr %add.ptr.us.i138, !1656, !DIExpression(), !1978)
  %add.ptr14.us.i139 = getelementptr inbounds i8, ptr %src.addr.086.us.i118, i64 %idx.ext13.i112, !dbg !2036
    #dbg_value(ptr %add.ptr14.us.i139, !1662, !DIExpression(), !1978)
  %exitcond99.not.i140 = icmp eq i32 %inc12.us.i137, %i_height, !dbg !2037
  br i1 %exitcond99.not.i140, label %cleanup, label %for.cond2.preheader.us.i115, !dbg !2013, !llvm.loop !2038

if.else27:                                        ; preds = %if.else
  store i32 %i_src_stride, ptr %i_dst_stride, align 4, !dbg !2040
  br label %cleanup, !dbg !2042

cleanup:                                          ; preds = %for.cond23.for.cond.cleanup26_crit_edge.us.i, %for.cond2.for.cond.cleanup4_crit_edge.us.i, %for.cond23.for.cond.cleanup26_crit_edge.us.i101, %for.cond2.for.cond.cleanup4_crit_edge.us.i136, %for.cond2.preheader.lr.ph.i107, %for.cond.preheader.i106, %for.cond23.preheader.lr.ph.i76, %for.cond17.preheader.i75, %for.cond2.preheader.lr.ph.i, %for.cond.preheader.i, %for.cond23.preheader.lr.ph.i, %for.cond17.preheader.i, %pixel_avg.exit, %if.else27
  %retval.0 = phi ptr [ %add.ptr9, %if.else27 ], [ %dst, %pixel_avg.exit ], [ %dst, %for.cond17.preheader.i ], [ %dst, %for.cond23.preheader.lr.ph.i ], [ %dst, %for.cond.preheader.i ], [ %dst, %for.cond2.preheader.lr.ph.i ], [ %dst, %for.cond17.preheader.i75 ], [ %dst, %for.cond23.preheader.lr.ph.i76 ], [ %dst, %for.cond.preheader.i106 ], [ %dst, %for.cond2.preheader.lr.ph.i107 ], [ %dst, %for.cond2.for.cond.cleanup4_crit_edge.us.i136 ], [ %dst, %for.cond23.for.cond.cleanup26_crit_edge.us.i101 ], [ %dst, %for.cond2.for.cond.cleanup4_crit_edge.us.i ], [ %dst, %for.cond23.for.cond.cleanup26_crit_edge.us.i ], !dbg !2043
  ret ptr %retval.0, !dbg !2044
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_chroma(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, i32 noundef %mvx, i32 noundef %mvy, i32 noundef %i_width, i32 noundef %i_height) #0 !dbg !2045 {
entry:
    #dbg_value(ptr %dst, !2047, !DIExpression(), !2068)
    #dbg_value(i32 %i_dst_stride, !2048, !DIExpression(), !2068)
    #dbg_value(i32 %i_src_stride, !2050, !DIExpression(), !2068)
    #dbg_value(i32 %mvx, !2051, !DIExpression(), !2068)
    #dbg_value(i32 %mvy, !2052, !DIExpression(), !2068)
    #dbg_value(i32 %i_width, !2053, !DIExpression(), !2068)
    #dbg_value(i32 %i_height, !2054, !DIExpression(), !2068)
    #dbg_value(i32 %mvx, !2056, !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value), !2068)
    #dbg_value(i32 %mvy, !2057, !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 8, i32 8, i32 %mvx, i32 %mvy), !2058, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 8, i32 %mvx, i32 %mvy), !2059, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 8, i32 %mvy, i32 %mvx), !2060, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %mvy, i32 %mvx), !2061, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i32 %mvy, i32 %mvx, i32 %i_src_stride), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 3, DW_OP_shra, DW_OP_LLVM_arg, 3, DW_OP_mul, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
  %idxprom = sext i32 %i_src_stride to i64, !dbg !2069
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %mvy, i32 %mvx, i32 %i_src_stride), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_LLVM_arg, 4, DW_OP_mul, DW_OP_LLVM_arg, 3, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(i32 0, !2062, !DIExpression(), !2070)
  %cmp78 = icmp sgt i32 %i_height, 0, !dbg !2071
  br i1 %cmp78, label %for.cond10.preheader.lr.ph, label %for.cond.cleanup, !dbg !2072

for.cond10.preheader.lr.ph:                       ; preds = %entry
    #dbg_value(!DIArgList(ptr %src, i32 %mvy, i32 %mvx, i32 %i_src_stride), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 3, DW_OP_shra, DW_OP_LLVM_arg, 3, DW_OP_mul, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %mvy, i32 %mvx, i32 %i_src_stride), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_LLVM_arg, 4, DW_OP_mul, DW_OP_LLVM_arg, 3, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
  %and1 = and i32 %mvy, 7, !dbg !2073
    #dbg_value(!DIArgList(i32 8, i32 8, i32 %mvx, i32 %and1), !2058, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 8, i32 %mvx, i32 %and1), !2059, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 8, i32 %and1, i32 %mvx), !2060, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %and1, i32 %mvx), !2061, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(i32 %and1, !2057, !DIExpression(), !2068)
  %sub2 = sub nuw nsw i32 8, %and1, !dbg !2074
    #dbg_value(!DIArgList(i32 %sub2, i32 8, i32 %mvx), !2058, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_constu, 7, DW_OP_and, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %sub2, i32 %mvx), !2059, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 7, DW_OP_and, DW_OP_mul, DW_OP_stack_value), !2068)
  %and = and i32 %mvx, 7, !dbg !2075
    #dbg_value(i32 %and, !2056, !DIExpression(), !2068)
    #dbg_value(!DIArgList(i32 8, i32 %and1, i32 %and), !2060, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %sub2, i32 8, i32 %and), !2058, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %and1, i32 %and), !2061, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %sub2, i32 %and), !2059, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
  %sub = sub nuw nsw i32 8, %and, !dbg !2076
    #dbg_value(!DIArgList(i32 %sub, i32 %and1), !2060, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(i32 %sub2, i32 %sub), !2058, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_stack_value), !2068)
  %0 = insertelement <4 x i32> poison, i32 %and, i64 0
  %1 = insertelement <4 x i32> %0, i32 %sub, i64 1
  %2 = shufflevector <4 x i32> %1, <4 x i32> poison, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %3 = insertelement <4 x i32> poison, i32 %sub2, i64 0
  %4 = insertelement <4 x i32> %3, i32 %and1, i64 1
  %5 = shufflevector <4 x i32> %4, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %6 = mul nuw nsw <4 x i32> %2, %5
  %cmp1175 = icmp sgt i32 %i_width, 0
  %idx.ext39 = sext i32 %i_dst_stride to i64
  br i1 %cmp1175, label %for.cond10.preheader.us.preheader, label %for.cond.cleanup

for.cond10.preheader.us.preheader:                ; preds = %for.cond10.preheader.lr.ph
  %shr = ashr i32 %mvy, 3, !dbg !2077
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %shr, i32 %mvx, i32 %i_src_stride), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_arg, 4, DW_OP_mul, DW_OP_LLVM_arg, 3, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i32 %shr, i32 %mvx, i32 %i_src_stride), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 3, DW_OP_mul, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
  %mul8 = mul i32 %shr, %i_src_stride, !dbg !2078
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %mul8, i32 %mvx), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_arg, 3, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i32 %mul8, i32 %mvx), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shra, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
  %shr9 = ashr i32 %mvx, 3, !dbg !2079
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %mul8, i32 %shr9), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_arg, 3, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i32 %mul8, i32 %shr9), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
  %add = add i32 %mul8, %shr9, !dbg !2080
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i32 %add), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i32 %add), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value), !2068)
  %idx.ext = sext i32 %add to i64, !dbg !2081
    #dbg_value(!DIArgList(ptr %src, i64 %idxprom, i64 %idx.ext), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(!DIArgList(ptr %src, i64 %idx.ext), !2049, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
  %add.ptr = getelementptr i8, ptr %src, i64 %idx.ext, !dbg !2081
    #dbg_value(!DIArgList(ptr %add.ptr, i64 %idxprom), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
    #dbg_value(ptr %add.ptr, !2049, !DIExpression(), !2068)
  %wide.trip.count = zext nneg i32 %i_width to i64
  %7 = add nsw i32 %i_height, -1, !dbg !2072
  %8 = zext i32 %7 to i64, !dbg !2072
  %9 = mul nsw i64 %idx.ext39, %8, !dbg !2072
  %10 = getelementptr i8, ptr %dst, i64 %9, !dbg !2072
  %scevgep = getelementptr i8, ptr %10, i64 %wide.trip.count, !dbg !2072
  %11 = getelementptr i8, ptr %src, i64 %idxprom, !dbg !2072
  %scevgep86 = getelementptr i8, ptr %11, i64 %idx.ext, !dbg !2072
  %12 = zext nneg i32 %i_height to i64, !dbg !2072
  %13 = mul nsw i64 %12, %idxprom, !dbg !2072
  %14 = getelementptr i8, ptr %src, i64 %13, !dbg !2072
  %15 = getelementptr i8, ptr %14, i64 %idx.ext, !dbg !2072
  %16 = getelementptr i8, ptr %15, i64 %wide.trip.count, !dbg !2072
  %scevgep87 = getelementptr i8, ptr %16, i64 1, !dbg !2072
  %17 = mul nsw i64 %idxprom, %8, !dbg !2072
  %18 = getelementptr i8, ptr %src, i64 %17, !dbg !2072
  %19 = getelementptr i8, ptr %18, i64 %idx.ext, !dbg !2072
  %20 = getelementptr i8, ptr %19, i64 %wide.trip.count, !dbg !2072
  %scevgep88 = getelementptr i8, ptr %20, i64 1, !dbg !2072
  %min.iters.check = icmp ult i32 %i_width, 8
  %bound0 = icmp ugt ptr %scevgep87, %dst
  %bound1 = icmp ult ptr %scevgep86, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %21 = or i32 %i_dst_stride, %i_src_stride
  %22 = icmp slt i32 %21, 0
  %23 = or i1 %found.conflict, %22
  %bound090 = icmp ugt ptr %scevgep88, %dst
  %bound191 = icmp ult ptr %add.ptr, %scevgep
  %found.conflict92 = and i1 %bound090, %bound191
  %24 = or i32 %i_dst_stride, %i_src_stride
  %25 = icmp slt i32 %24, 0
  %26 = or i1 %found.conflict92, %25
  %conflict.rdx = or i1 %23, %26
  %min.iters.check95 = icmp ult i32 %i_width, 64
  %n.vec = and i64 %wide.trip.count, 2147483584
  %broadcast.splat = shufflevector <4 x i32> %6, <4 x i32> poison, <16 x i32> <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %broadcast.splat104 = shufflevector <4 x i32> %6, <4 x i32> poison, <16 x i32> zeroinitializer
  %broadcast.splat110 = shufflevector <4 x i32> %6, <4 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %broadcast.splat116 = shufflevector <4 x i32> %6, <4 x i32> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  %n.vec.remaining = and i64 %wide.trip.count, 56
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  %n.vec118 = and i64 %wide.trip.count, 2147483640
  %broadcast.splat122 = shufflevector <4 x i32> %6, <4 x i32> poison, <8 x i32> <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %broadcast.splat125 = shufflevector <4 x i32> %6, <4 x i32> poison, <8 x i32> zeroinitializer
  %broadcast.splat128 = shufflevector <4 x i32> %6, <4 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %broadcast.splat131 = shufflevector <4 x i32> %6, <4 x i32> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %cmp.n133 = icmp eq i64 %n.vec118, %wide.trip.count
  br label %iter.check, !dbg !2072

iter.check:                                       ; preds = %for.cond10.preheader.us.preheader, %for.cond10.for.cond.cleanup12_crit_edge.us
  %y.081.us = phi i32 [ %inc44.us, %for.cond10.for.cond.cleanup12_crit_edge.us ], [ 0, %for.cond10.preheader.us.preheader ]
  %dst.addr.080.us = phi ptr [ %add.ptr40.us, %for.cond10.for.cond.cleanup12_crit_edge.us ], [ %dst, %for.cond10.preheader.us.preheader ]
  %src.addr.079.us = phi ptr [ %srcp.082.us, %for.cond10.for.cond.cleanup12_crit_edge.us ], [ %add.ptr, %for.cond10.preheader.us.preheader ]
  %srcp.082.us = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %idxprom, !dbg !2068
    #dbg_value(i32 %y.081.us, !2062, !DIExpression(), !2070)
    #dbg_value(ptr %dst.addr.080.us, !2047, !DIExpression(), !2068)
    #dbg_value(ptr %src.addr.079.us, !2049, !DIExpression(), !2068)
    #dbg_value(i32 0, !2064, !DIExpression(), !2082)
  %brmerge = select i1 %min.iters.check, i1 true, i1 %conflict.rdx, !dbg !2083
  br i1 %brmerge, label %for.body13.us.preheader, label %vector.main.loop.iter.check, !dbg !2083

vector.main.loop.iter.check:                      ; preds = %iter.check
  br i1 %min.iters.check95, label %vec.epilog.ph, label %vector.body, !dbg !2083

vector.body:                                      ; preds = %vector.main.loop.iter.check, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.main.loop.iter.check ], !dbg !2084
  %27 = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %index, !dbg !2086
  %28 = getelementptr inbounds i8, ptr %27, i64 16, !dbg !2086
  %29 = getelementptr inbounds i8, ptr %27, i64 32, !dbg !2086
  %30 = getelementptr inbounds i8, ptr %27, i64 48, !dbg !2086
  %wide.load = load <16 x i8>, ptr %27, align 1, !dbg !2086, !alias.scope !2087
  %wide.load96 = load <16 x i8>, ptr %28, align 1, !dbg !2086, !alias.scope !2087
  %wide.load97 = load <16 x i8>, ptr %29, align 1, !dbg !2086, !alias.scope !2087
  %wide.load98 = load <16 x i8>, ptr %30, align 1, !dbg !2086, !alias.scope !2087
  %31 = zext <16 x i8> %wide.load to <16 x i32>, !dbg !2086
  %32 = zext <16 x i8> %wide.load96 to <16 x i32>, !dbg !2086
  %33 = zext <16 x i8> %wide.load97 to <16 x i32>, !dbg !2086
  %34 = zext <16 x i8> %wide.load98 to <16 x i32>, !dbg !2086
  %35 = mul nuw nsw <16 x i32> %broadcast.splat, %31
  %36 = mul nuw nsw <16 x i32> %broadcast.splat, %32
  %37 = mul nuw nsw <16 x i32> %broadcast.splat, %33
  %38 = mul nuw nsw <16 x i32> %broadcast.splat, %34
  %39 = or disjoint i64 %index, 1, !dbg !2084
  %40 = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %39, !dbg !2090
  %41 = getelementptr inbounds i8, ptr %40, i64 16, !dbg !2090
  %42 = getelementptr inbounds i8, ptr %40, i64 32, !dbg !2090
  %43 = getelementptr inbounds i8, ptr %40, i64 48, !dbg !2090
  %wide.load99 = load <16 x i8>, ptr %40, align 1, !dbg !2090, !alias.scope !2087
  %wide.load100 = load <16 x i8>, ptr %41, align 1, !dbg !2090, !alias.scope !2087
  %wide.load101 = load <16 x i8>, ptr %42, align 1, !dbg !2090, !alias.scope !2087
  %wide.load102 = load <16 x i8>, ptr %43, align 1, !dbg !2090, !alias.scope !2087
  %44 = zext <16 x i8> %wide.load99 to <16 x i32>, !dbg !2090
  %45 = zext <16 x i8> %wide.load100 to <16 x i32>, !dbg !2090
  %46 = zext <16 x i8> %wide.load101 to <16 x i32>, !dbg !2090
  %47 = zext <16 x i8> %wide.load102 to <16 x i32>, !dbg !2090
  %48 = mul nuw nsw <16 x i32> %broadcast.splat104, %44
  %49 = mul nuw nsw <16 x i32> %broadcast.splat104, %45
  %50 = mul nuw nsw <16 x i32> %broadcast.splat104, %46
  %51 = mul nuw nsw <16 x i32> %broadcast.splat104, %47
  %52 = getelementptr inbounds i8, ptr %srcp.082.us, i64 %index, !dbg !2091
  %53 = getelementptr inbounds i8, ptr %52, i64 16, !dbg !2091
  %54 = getelementptr inbounds i8, ptr %52, i64 32, !dbg !2091
  %55 = getelementptr inbounds i8, ptr %52, i64 48, !dbg !2091
  %wide.load105 = load <16 x i8>, ptr %52, align 1, !dbg !2091, !alias.scope !2092
  %wide.load106 = load <16 x i8>, ptr %53, align 1, !dbg !2091, !alias.scope !2092
  %wide.load107 = load <16 x i8>, ptr %54, align 1, !dbg !2091, !alias.scope !2092
  %wide.load108 = load <16 x i8>, ptr %55, align 1, !dbg !2091, !alias.scope !2092
  %56 = zext <16 x i8> %wide.load105 to <16 x i32>, !dbg !2091
  %57 = zext <16 x i8> %wide.load106 to <16 x i32>, !dbg !2091
  %58 = zext <16 x i8> %wide.load107 to <16 x i32>, !dbg !2091
  %59 = zext <16 x i8> %wide.load108 to <16 x i32>, !dbg !2091
  %60 = mul nuw nsw <16 x i32> %broadcast.splat110, %56
  %61 = mul nuw nsw <16 x i32> %broadcast.splat110, %57
  %62 = mul nuw nsw <16 x i32> %broadcast.splat110, %58
  %63 = mul nuw nsw <16 x i32> %broadcast.splat110, %59
  %64 = getelementptr inbounds i8, ptr %srcp.082.us, i64 %39, !dbg !2094
  %65 = getelementptr inbounds i8, ptr %64, i64 16, !dbg !2094
  %66 = getelementptr inbounds i8, ptr %64, i64 32, !dbg !2094
  %67 = getelementptr inbounds i8, ptr %64, i64 48, !dbg !2094
  %wide.load111 = load <16 x i8>, ptr %64, align 1, !dbg !2094, !alias.scope !2092
  %wide.load112 = load <16 x i8>, ptr %65, align 1, !dbg !2094, !alias.scope !2092
  %wide.load113 = load <16 x i8>, ptr %66, align 1, !dbg !2094, !alias.scope !2092
  %wide.load114 = load <16 x i8>, ptr %67, align 1, !dbg !2094, !alias.scope !2092
  %68 = zext <16 x i8> %wide.load111 to <16 x i32>, !dbg !2094
  %69 = zext <16 x i8> %wide.load112 to <16 x i32>, !dbg !2094
  %70 = zext <16 x i8> %wide.load113 to <16 x i32>, !dbg !2094
  %71 = zext <16 x i8> %wide.load114 to <16 x i32>, !dbg !2094
  %72 = mul nuw nsw <16 x i32> %broadcast.splat116, %68
  %73 = mul nuw nsw <16 x i32> %broadcast.splat116, %69
  %74 = mul nuw nsw <16 x i32> %broadcast.splat116, %70
  %75 = mul nuw nsw <16 x i32> %broadcast.splat116, %71
  %76 = add nuw nsw <16 x i32> %72, %60
  %77 = add nuw nsw <16 x i32> %73, %61
  %78 = add nuw nsw <16 x i32> %74, %62
  %79 = add nuw nsw <16 x i32> %75, %63
  %80 = add nuw nsw <16 x i32> %48, %35
  %81 = add nuw nsw <16 x i32> %49, %36
  %82 = add nuw nsw <16 x i32> %50, %37
  %83 = add nuw nsw <16 x i32> %51, %38
  %84 = add nuw nsw <16 x i32> %80, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !dbg !2095
  %85 = add nuw nsw <16 x i32> %81, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !dbg !2095
  %86 = add nuw nsw <16 x i32> %82, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !dbg !2095
  %87 = add nuw nsw <16 x i32> %83, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !dbg !2095
  %88 = add nuw nsw <16 x i32> %84, %76, !dbg !2096
  %89 = add nuw nsw <16 x i32> %85, %77, !dbg !2096
  %90 = add nuw nsw <16 x i32> %86, %78, !dbg !2096
  %91 = add nuw nsw <16 x i32> %87, %79, !dbg !2096
  %92 = lshr <16 x i32> %88, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>, !dbg !2097
  %93 = lshr <16 x i32> %89, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>, !dbg !2097
  %94 = lshr <16 x i32> %90, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>, !dbg !2097
  %95 = lshr <16 x i32> %91, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>, !dbg !2097
  %96 = trunc <16 x i32> %92 to <16 x i8>, !dbg !2098
  %97 = trunc <16 x i32> %93 to <16 x i8>, !dbg !2098
  %98 = trunc <16 x i32> %94 to <16 x i8>, !dbg !2098
  %99 = trunc <16 x i32> %95 to <16 x i8>, !dbg !2098
  %100 = getelementptr inbounds i8, ptr %dst.addr.080.us, i64 %index, !dbg !2099
  %101 = getelementptr inbounds i8, ptr %100, i64 16, !dbg !2100
  %102 = getelementptr inbounds i8, ptr %100, i64 32, !dbg !2100
  %103 = getelementptr inbounds i8, ptr %100, i64 48, !dbg !2100
  store <16 x i8> %96, ptr %100, align 1, !dbg !2100, !alias.scope !2101, !noalias !2103
  store <16 x i8> %97, ptr %101, align 1, !dbg !2100, !alias.scope !2101, !noalias !2103
  store <16 x i8> %98, ptr %102, align 1, !dbg !2100, !alias.scope !2101, !noalias !2103
  store <16 x i8> %99, ptr %103, align 1, !dbg !2100, !alias.scope !2101, !noalias !2103
  %index.next = add nuw i64 %index, 64, !dbg !2084
  %104 = icmp eq i64 %index.next, %n.vec, !dbg !2084
  br i1 %104, label %middle.block, label %vector.body, !dbg !2084, !llvm.loop !2104

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond10.for.cond.cleanup12_crit_edge.us, label %vec.epilog.iter.check, !dbg !2083

vec.epilog.iter.check:                            ; preds = %middle.block
  br i1 %min.epilog.iters.check, label %for.body13.us.preheader, label %vec.epilog.ph, !dbg !2083

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  br label %vec.epilog.vector.body, !dbg !2083

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index119 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next132, %vec.epilog.vector.body ], !dbg !2084
  %105 = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %index119, !dbg !2086
  %wide.load120 = load <8 x i8>, ptr %105, align 1, !dbg !2086, !alias.scope !2106
  %106 = zext <8 x i8> %wide.load120 to <8 x i32>, !dbg !2086
  %107 = mul nuw nsw <8 x i32> %broadcast.splat122, %106
  %108 = or disjoint i64 %index119, 1, !dbg !2084
  %109 = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %108, !dbg !2090
  %wide.load123 = load <8 x i8>, ptr %109, align 1, !dbg !2090, !alias.scope !2106
  %110 = zext <8 x i8> %wide.load123 to <8 x i32>, !dbg !2090
  %111 = mul nuw nsw <8 x i32> %broadcast.splat125, %110
  %112 = getelementptr inbounds i8, ptr %srcp.082.us, i64 %index119, !dbg !2091
  %wide.load126 = load <8 x i8>, ptr %112, align 1, !dbg !2091, !alias.scope !2109
  %113 = zext <8 x i8> %wide.load126 to <8 x i32>, !dbg !2091
  %114 = mul nuw nsw <8 x i32> %broadcast.splat128, %113
  %115 = getelementptr inbounds i8, ptr %srcp.082.us, i64 %108, !dbg !2094
  %wide.load129 = load <8 x i8>, ptr %115, align 1, !dbg !2094, !alias.scope !2109
  %116 = zext <8 x i8> %wide.load129 to <8 x i32>, !dbg !2094
  %117 = mul nuw nsw <8 x i32> %broadcast.splat131, %116
  %118 = add nuw nsw <8 x i32> %117, %114
  %119 = add nuw nsw <8 x i32> %111, %107
  %120 = add nuw nsw <8 x i32> %119, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>, !dbg !2095
  %121 = add nuw nsw <8 x i32> %120, %118, !dbg !2096
  %122 = lshr <8 x i32> %121, <i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6>, !dbg !2097
  %123 = trunc <8 x i32> %122 to <8 x i8>, !dbg !2098
  %124 = getelementptr inbounds i8, ptr %dst.addr.080.us, i64 %index119, !dbg !2099
  store <8 x i8> %123, ptr %124, align 1, !dbg !2100, !alias.scope !2111, !noalias !2113
  %index.next132 = add nuw i64 %index119, 8, !dbg !2084
  %125 = icmp eq i64 %index.next132, %n.vec118, !dbg !2084
  br i1 %125, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !dbg !2084, !llvm.loop !2114

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  br i1 %cmp.n133, label %for.cond10.for.cond.cleanup12_crit_edge.us, label %for.body13.us.preheader, !dbg !2083

for.body13.us.preheader:                          ; preds = %iter.check, %vec.epilog.middle.block, %vec.epilog.iter.check
  %indvars.iv.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec118, %vec.epilog.middle.block ]
  br label %for.body13.us, !dbg !2083

for.body13.us:                                    ; preds = %for.body13.us.preheader, %for.body13.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13.us ], [ %indvars.iv.ph, %for.body13.us.preheader ]
    #dbg_value(i64 %indvars.iv, !2064, !DIExpression(), !2082)
  %arrayidx15.us = getelementptr inbounds i8, ptr %src.addr.079.us, i64 %indvars.iv, !dbg !2086
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2084
  %126 = load <2 x i8>, ptr %arrayidx15.us, align 1, !dbg !2086
  %arrayidx24.us = getelementptr inbounds i8, ptr %srcp.082.us, i64 %indvars.iv, !dbg !2091
  %127 = load <2 x i8>, ptr %arrayidx24.us, align 1, !dbg !2091
  %128 = shufflevector <2 x i8> %126, <2 x i8> %127, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !2090
  %129 = zext <4 x i8> %128 to <4 x i32>, !dbg !2090
  %130 = shufflevector <4 x i32> %129, <4 x i32> poison, <4 x i32> <i32 1, i32 3, i32 0, i32 2>, !dbg !2090
  %131 = mul nuw nsw <4 x i32> %6, %130
  %132 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %131), !dbg !2096
  %op.rdx = add i32 %132, 32, !dbg !2095
  %shr35.us = lshr i32 %op.rdx, 6, !dbg !2097
  %conv36.us = trunc i32 %shr35.us to i8, !dbg !2098
  %arrayidx38.us = getelementptr inbounds i8, ptr %dst.addr.080.us, i64 %indvars.iv, !dbg !2099
  store i8 %conv36.us, ptr %arrayidx38.us, align 1, !dbg !2100
    #dbg_value(i64 %indvars.iv.next, !2064, !DIExpression(), !2082)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !2115
  br i1 %exitcond.not, label %for.cond10.for.cond.cleanup12_crit_edge.us, label %for.body13.us, !dbg !2083, !llvm.loop !2116

for.cond10.for.cond.cleanup12_crit_edge.us:       ; preds = %for.body13.us, %vec.epilog.middle.block, %middle.block
  %add.ptr40.us = getelementptr inbounds i8, ptr %dst.addr.080.us, i64 %idx.ext39, !dbg !2117
    #dbg_value(ptr %add.ptr40.us, !2047, !DIExpression(), !2068)
    #dbg_value(ptr %srcp.082.us, !2049, !DIExpression(), !2068)
    #dbg_value(!DIArgList(ptr %srcp.082.us, i64 %idxprom), !2055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2068)
  %inc44.us = add nuw nsw i32 %y.081.us, 1, !dbg !2118
    #dbg_value(i32 %inc44.us, !2062, !DIExpression(), !2070)
  %exitcond85.not = icmp eq i32 %inc44.us, %i_height, !dbg !2071
  br i1 %exitcond85.not, label %for.cond.cleanup, label %iter.check, !dbg !2072, !llvm.loop !2119

for.cond.cleanup:                                 ; preds = %for.cond10.for.cond.cleanup12_crit_edge.us, %for.cond10.preheader.lr.ph, %entry
  ret void, !dbg !2121
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_16x16(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2122 {
entry:
    #dbg_value(ptr %pix1, !2124, !DIExpression(), !2131)
    #dbg_value(i32 %i_stride_pix1, !2125, !DIExpression(), !2131)
    #dbg_value(ptr %pix2, !2126, !DIExpression(), !2131)
    #dbg_value(i32 %i_stride_pix2, !2127, !DIExpression(), !2131)
    #dbg_value(ptr %pix3, !2128, !DIExpression(), !2131)
    #dbg_value(i32 %i_stride_pix3, !2129, !DIExpression(), !2131)
    #dbg_value(i32 %weight, !2130, !DIExpression(), !2131)
  %cmp = icmp eq i32 %weight, 32, !dbg !2132
  br i1 %cmp, label %if.then, label %if.else, !dbg !2134

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2151)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2151)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2151)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2151)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2151)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2151)
    #dbg_value(i32 16, !2143, !DIExpression(), !2151)
    #dbg_value(i32 16, !2144, !DIExpression(), !2151)
    #dbg_value(i32 0, !2145, !DIExpression(), !2153)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
  br label %for.cond1.preheader.us.i, !dbg !2154

for.cond1.preheader.us.i:                         ; preds = %for.cond1.preheader.us.i, %if.then
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.preheader.us.i ], [ 0, %if.then ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.preheader.us.i ], [ %pix1, %if.then ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.preheader.us.i ], [ %pix2, %if.then ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.preheader.us.i ], [ %pix3, %if.then ]
    #dbg_value(i32 %y.033.us.i, !2145, !DIExpression(), !2153)
    #dbg_value(ptr %dst.addr.032.us.i, !2135, !DIExpression(), !2151)
    #dbg_value(ptr %src1.addr.031.us.i, !2139, !DIExpression(), !2151)
    #dbg_value(ptr %src2.addr.030.us.i, !2141, !DIExpression(), !2151)
    #dbg_value(i32 0, !2147, !DIExpression(), !2155)
    #dbg_value(i64 0, !2147, !DIExpression(), !2155)
  %0 = load i8, ptr %src1.addr.031.us.i, align 1, !dbg !2156
  %conv.us.i = zext i8 %0 to i16, !dbg !2156
  %1 = load i8, ptr %src2.addr.030.us.i, align 1, !dbg !2158
  %conv7.us.i = zext i8 %1 to i16, !dbg !2158
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2159
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2160
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2161
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2162
  store i8 %conv9.us.i, ptr %dst.addr.032.us.i, align 1, !dbg !2163
    #dbg_value(i64 1, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 1, !dbg !2156
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2156
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2156
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 1, !dbg !2158
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2158
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2158
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2159
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2160
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2161
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2162
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 1, !dbg !2164
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2163
    #dbg_value(i64 2, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 2, !dbg !2156
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2156
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2156
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 2, !dbg !2158
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2158
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2158
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2159
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2160
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2161
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2162
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 2, !dbg !2164
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2163
    #dbg_value(i64 3, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 3, !dbg !2156
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2156
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2156
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 3, !dbg !2158
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2158
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2158
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2159
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2160
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2161
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2162
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 3, !dbg !2164
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2163
    #dbg_value(i64 4, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.4 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 4, !dbg !2156
  %8 = load i8, ptr %arrayidx.us.i.4, align 1, !dbg !2156
  %conv.us.i.4 = zext i8 %8 to i16, !dbg !2156
  %arrayidx6.us.i.4 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 4, !dbg !2158
  %9 = load i8, ptr %arrayidx6.us.i.4, align 1, !dbg !2158
  %conv7.us.i.4 = zext i8 %9 to i16, !dbg !2158
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2159
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2160
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2161
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2162
  %arrayidx11.us.i.4 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 4, !dbg !2164
  store i8 %conv9.us.i.4, ptr %arrayidx11.us.i.4, align 1, !dbg !2163
    #dbg_value(i64 5, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.5 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 5, !dbg !2156
  %10 = load i8, ptr %arrayidx.us.i.5, align 1, !dbg !2156
  %conv.us.i.5 = zext i8 %10 to i16, !dbg !2156
  %arrayidx6.us.i.5 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 5, !dbg !2158
  %11 = load i8, ptr %arrayidx6.us.i.5, align 1, !dbg !2158
  %conv7.us.i.5 = zext i8 %11 to i16, !dbg !2158
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2159
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2160
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2161
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2162
  %arrayidx11.us.i.5 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 5, !dbg !2164
  store i8 %conv9.us.i.5, ptr %arrayidx11.us.i.5, align 1, !dbg !2163
    #dbg_value(i64 6, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.6 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 6, !dbg !2156
  %12 = load i8, ptr %arrayidx.us.i.6, align 1, !dbg !2156
  %conv.us.i.6 = zext i8 %12 to i16, !dbg !2156
  %arrayidx6.us.i.6 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 6, !dbg !2158
  %13 = load i8, ptr %arrayidx6.us.i.6, align 1, !dbg !2158
  %conv7.us.i.6 = zext i8 %13 to i16, !dbg !2158
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2159
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2160
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2161
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2162
  %arrayidx11.us.i.6 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 6, !dbg !2164
  store i8 %conv9.us.i.6, ptr %arrayidx11.us.i.6, align 1, !dbg !2163
    #dbg_value(i64 7, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.7 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 7, !dbg !2156
  %14 = load i8, ptr %arrayidx.us.i.7, align 1, !dbg !2156
  %conv.us.i.7 = zext i8 %14 to i16, !dbg !2156
  %arrayidx6.us.i.7 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 7, !dbg !2158
  %15 = load i8, ptr %arrayidx6.us.i.7, align 1, !dbg !2158
  %conv7.us.i.7 = zext i8 %15 to i16, !dbg !2158
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2159
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2160
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2161
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2162
  %arrayidx11.us.i.7 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 7, !dbg !2164
  store i8 %conv9.us.i.7, ptr %arrayidx11.us.i.7, align 1, !dbg !2163
    #dbg_value(i64 8, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.8 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 8, !dbg !2156
  %16 = load i8, ptr %arrayidx.us.i.8, align 1, !dbg !2156
  %conv.us.i.8 = zext i8 %16 to i16, !dbg !2156
  %arrayidx6.us.i.8 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 8, !dbg !2158
  %17 = load i8, ptr %arrayidx6.us.i.8, align 1, !dbg !2158
  %conv7.us.i.8 = zext i8 %17 to i16, !dbg !2158
  %add.us.i.8 = add nuw nsw i16 %conv.us.i.8, 1, !dbg !2159
  %add8.us.i.8 = add nuw nsw i16 %add.us.i.8, %conv7.us.i.8, !dbg !2160
  %shr.us.i.8 = lshr i16 %add8.us.i.8, 1, !dbg !2161
  %conv9.us.i.8 = trunc nuw i16 %shr.us.i.8 to i8, !dbg !2162
  %arrayidx11.us.i.8 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 8, !dbg !2164
  store i8 %conv9.us.i.8, ptr %arrayidx11.us.i.8, align 1, !dbg !2163
    #dbg_value(i64 9, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.9 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 9, !dbg !2156
  %18 = load i8, ptr %arrayidx.us.i.9, align 1, !dbg !2156
  %conv.us.i.9 = zext i8 %18 to i16, !dbg !2156
  %arrayidx6.us.i.9 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 9, !dbg !2158
  %19 = load i8, ptr %arrayidx6.us.i.9, align 1, !dbg !2158
  %conv7.us.i.9 = zext i8 %19 to i16, !dbg !2158
  %add.us.i.9 = add nuw nsw i16 %conv.us.i.9, 1, !dbg !2159
  %add8.us.i.9 = add nuw nsw i16 %add.us.i.9, %conv7.us.i.9, !dbg !2160
  %shr.us.i.9 = lshr i16 %add8.us.i.9, 1, !dbg !2161
  %conv9.us.i.9 = trunc nuw i16 %shr.us.i.9 to i8, !dbg !2162
  %arrayidx11.us.i.9 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 9, !dbg !2164
  store i8 %conv9.us.i.9, ptr %arrayidx11.us.i.9, align 1, !dbg !2163
    #dbg_value(i64 10, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.10 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 10, !dbg !2156
  %20 = load i8, ptr %arrayidx.us.i.10, align 1, !dbg !2156
  %conv.us.i.10 = zext i8 %20 to i16, !dbg !2156
  %arrayidx6.us.i.10 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 10, !dbg !2158
  %21 = load i8, ptr %arrayidx6.us.i.10, align 1, !dbg !2158
  %conv7.us.i.10 = zext i8 %21 to i16, !dbg !2158
  %add.us.i.10 = add nuw nsw i16 %conv.us.i.10, 1, !dbg !2159
  %add8.us.i.10 = add nuw nsw i16 %add.us.i.10, %conv7.us.i.10, !dbg !2160
  %shr.us.i.10 = lshr i16 %add8.us.i.10, 1, !dbg !2161
  %conv9.us.i.10 = trunc nuw i16 %shr.us.i.10 to i8, !dbg !2162
  %arrayidx11.us.i.10 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 10, !dbg !2164
  store i8 %conv9.us.i.10, ptr %arrayidx11.us.i.10, align 1, !dbg !2163
    #dbg_value(i64 11, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.11 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 11, !dbg !2156
  %22 = load i8, ptr %arrayidx.us.i.11, align 1, !dbg !2156
  %conv.us.i.11 = zext i8 %22 to i16, !dbg !2156
  %arrayidx6.us.i.11 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 11, !dbg !2158
  %23 = load i8, ptr %arrayidx6.us.i.11, align 1, !dbg !2158
  %conv7.us.i.11 = zext i8 %23 to i16, !dbg !2158
  %add.us.i.11 = add nuw nsw i16 %conv.us.i.11, 1, !dbg !2159
  %add8.us.i.11 = add nuw nsw i16 %add.us.i.11, %conv7.us.i.11, !dbg !2160
  %shr.us.i.11 = lshr i16 %add8.us.i.11, 1, !dbg !2161
  %conv9.us.i.11 = trunc nuw i16 %shr.us.i.11 to i8, !dbg !2162
  %arrayidx11.us.i.11 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 11, !dbg !2164
  store i8 %conv9.us.i.11, ptr %arrayidx11.us.i.11, align 1, !dbg !2163
    #dbg_value(i64 12, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.12 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 12, !dbg !2156
  %24 = load i8, ptr %arrayidx.us.i.12, align 1, !dbg !2156
  %conv.us.i.12 = zext i8 %24 to i16, !dbg !2156
  %arrayidx6.us.i.12 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 12, !dbg !2158
  %25 = load i8, ptr %arrayidx6.us.i.12, align 1, !dbg !2158
  %conv7.us.i.12 = zext i8 %25 to i16, !dbg !2158
  %add.us.i.12 = add nuw nsw i16 %conv.us.i.12, 1, !dbg !2159
  %add8.us.i.12 = add nuw nsw i16 %add.us.i.12, %conv7.us.i.12, !dbg !2160
  %shr.us.i.12 = lshr i16 %add8.us.i.12, 1, !dbg !2161
  %conv9.us.i.12 = trunc nuw i16 %shr.us.i.12 to i8, !dbg !2162
  %arrayidx11.us.i.12 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 12, !dbg !2164
  store i8 %conv9.us.i.12, ptr %arrayidx11.us.i.12, align 1, !dbg !2163
    #dbg_value(i64 13, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.13 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 13, !dbg !2156
  %26 = load i8, ptr %arrayidx.us.i.13, align 1, !dbg !2156
  %conv.us.i.13 = zext i8 %26 to i16, !dbg !2156
  %arrayidx6.us.i.13 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 13, !dbg !2158
  %27 = load i8, ptr %arrayidx6.us.i.13, align 1, !dbg !2158
  %conv7.us.i.13 = zext i8 %27 to i16, !dbg !2158
  %add.us.i.13 = add nuw nsw i16 %conv.us.i.13, 1, !dbg !2159
  %add8.us.i.13 = add nuw nsw i16 %add.us.i.13, %conv7.us.i.13, !dbg !2160
  %shr.us.i.13 = lshr i16 %add8.us.i.13, 1, !dbg !2161
  %conv9.us.i.13 = trunc nuw i16 %shr.us.i.13 to i8, !dbg !2162
  %arrayidx11.us.i.13 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 13, !dbg !2164
  store i8 %conv9.us.i.13, ptr %arrayidx11.us.i.13, align 1, !dbg !2163
    #dbg_value(i64 14, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.14 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 14, !dbg !2156
  %28 = load i8, ptr %arrayidx.us.i.14, align 1, !dbg !2156
  %conv.us.i.14 = zext i8 %28 to i16, !dbg !2156
  %arrayidx6.us.i.14 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 14, !dbg !2158
  %29 = load i8, ptr %arrayidx6.us.i.14, align 1, !dbg !2158
  %conv7.us.i.14 = zext i8 %29 to i16, !dbg !2158
  %add.us.i.14 = add nuw nsw i16 %conv.us.i.14, 1, !dbg !2159
  %add8.us.i.14 = add nuw nsw i16 %add.us.i.14, %conv7.us.i.14, !dbg !2160
  %shr.us.i.14 = lshr i16 %add8.us.i.14, 1, !dbg !2161
  %conv9.us.i.14 = trunc nuw i16 %shr.us.i.14 to i8, !dbg !2162
  %arrayidx11.us.i.14 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 14, !dbg !2164
  store i8 %conv9.us.i.14, ptr %arrayidx11.us.i.14, align 1, !dbg !2163
    #dbg_value(i64 15, !2147, !DIExpression(), !2155)
  %arrayidx.us.i.15 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 15, !dbg !2156
  %30 = load i8, ptr %arrayidx.us.i.15, align 1, !dbg !2156
  %conv.us.i.15 = zext i8 %30 to i16, !dbg !2156
  %arrayidx6.us.i.15 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 15, !dbg !2158
  %31 = load i8, ptr %arrayidx6.us.i.15, align 1, !dbg !2158
  %conv7.us.i.15 = zext i8 %31 to i16, !dbg !2158
  %add.us.i.15 = add nuw nsw i16 %conv.us.i.15, 1, !dbg !2159
  %add8.us.i.15 = add nuw nsw i16 %add.us.i.15, %conv7.us.i.15, !dbg !2160
  %shr.us.i.15 = lshr i16 %add8.us.i.15, 1, !dbg !2161
  %conv9.us.i.15 = trunc nuw i16 %shr.us.i.15 to i8, !dbg !2162
  %arrayidx11.us.i.15 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 15, !dbg !2164
  store i8 %conv9.us.i.15, ptr %arrayidx11.us.i.15, align 1, !dbg !2163
    #dbg_value(i64 16, !2147, !DIExpression(), !2155)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext.i, !dbg !2165
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2151)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !2166
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2151)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext14.i, !dbg !2167
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2151)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !2168
    #dbg_value(i32 %inc17.us.i, !2145, !DIExpression(), !2153)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, 16, !dbg !2169
  br i1 %exitcond36.not.i, label %if.end, label %for.cond1.preheader.us.i, !dbg !2154, !llvm.loop !2170

if.else:                                          ; preds = %entry
  tail call fastcc void @pixel_avg_weight_wxh(ptr noundef %pix1, i32 noundef %i_stride_pix1, ptr noundef %pix2, i32 noundef %i_stride_pix2, ptr noundef %pix3, i32 noundef %i_stride_pix3, i32 noundef 16, i32 noundef 16, i32 noundef %weight), !dbg !2132
  br label %if.end

if.end:                                           ; preds = %for.cond1.preheader.us.i, %if.else
  ret void, !dbg !2134
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_16x8(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2172 {
entry:
    #dbg_value(ptr %pix1, !2174, !DIExpression(), !2181)
    #dbg_value(i32 %i_stride_pix1, !2175, !DIExpression(), !2181)
    #dbg_value(ptr %pix2, !2176, !DIExpression(), !2181)
    #dbg_value(i32 %i_stride_pix2, !2177, !DIExpression(), !2181)
    #dbg_value(ptr %pix3, !2178, !DIExpression(), !2181)
    #dbg_value(i32 %i_stride_pix3, !2179, !DIExpression(), !2181)
    #dbg_value(i32 %weight, !2180, !DIExpression(), !2181)
  %cmp = icmp eq i32 %weight, 32, !dbg !2182
  br i1 %cmp, label %if.then, label %if.else, !dbg !2184

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2185)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2185)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2185)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2185)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2185)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2185)
    #dbg_value(i32 16, !2143, !DIExpression(), !2185)
    #dbg_value(i32 8, !2144, !DIExpression(), !2185)
    #dbg_value(i32 0, !2145, !DIExpression(), !2187)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
  br label %for.cond1.preheader.us.i, !dbg !2188

for.cond1.preheader.us.i:                         ; preds = %for.cond1.preheader.us.i, %if.then
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.preheader.us.i ], [ 0, %if.then ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.preheader.us.i ], [ %pix1, %if.then ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.preheader.us.i ], [ %pix2, %if.then ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.preheader.us.i ], [ %pix3, %if.then ]
    #dbg_value(i32 %y.033.us.i, !2145, !DIExpression(), !2187)
    #dbg_value(ptr %dst.addr.032.us.i, !2135, !DIExpression(), !2185)
    #dbg_value(ptr %src1.addr.031.us.i, !2139, !DIExpression(), !2185)
    #dbg_value(ptr %src2.addr.030.us.i, !2141, !DIExpression(), !2185)
    #dbg_value(i32 0, !2147, !DIExpression(), !2189)
    #dbg_value(i64 0, !2147, !DIExpression(), !2189)
  %0 = load i8, ptr %src1.addr.031.us.i, align 1, !dbg !2190
  %conv.us.i = zext i8 %0 to i16, !dbg !2190
  %1 = load i8, ptr %src2.addr.030.us.i, align 1, !dbg !2191
  %conv7.us.i = zext i8 %1 to i16, !dbg !2191
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2192
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2193
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2194
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2195
  store i8 %conv9.us.i, ptr %dst.addr.032.us.i, align 1, !dbg !2196
    #dbg_value(i64 1, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 1, !dbg !2190
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2190
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2190
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 1, !dbg !2191
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2191
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2191
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2192
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2193
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2194
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2195
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 1, !dbg !2197
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2196
    #dbg_value(i64 2, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 2, !dbg !2190
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2190
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2190
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 2, !dbg !2191
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2191
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2191
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2192
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2193
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2194
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2195
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 2, !dbg !2197
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2196
    #dbg_value(i64 3, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 3, !dbg !2190
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2190
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2190
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 3, !dbg !2191
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2191
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2191
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2192
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2193
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2194
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2195
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 3, !dbg !2197
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2196
    #dbg_value(i64 4, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.4 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 4, !dbg !2190
  %8 = load i8, ptr %arrayidx.us.i.4, align 1, !dbg !2190
  %conv.us.i.4 = zext i8 %8 to i16, !dbg !2190
  %arrayidx6.us.i.4 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 4, !dbg !2191
  %9 = load i8, ptr %arrayidx6.us.i.4, align 1, !dbg !2191
  %conv7.us.i.4 = zext i8 %9 to i16, !dbg !2191
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2192
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2193
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2194
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2195
  %arrayidx11.us.i.4 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 4, !dbg !2197
  store i8 %conv9.us.i.4, ptr %arrayidx11.us.i.4, align 1, !dbg !2196
    #dbg_value(i64 5, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.5 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 5, !dbg !2190
  %10 = load i8, ptr %arrayidx.us.i.5, align 1, !dbg !2190
  %conv.us.i.5 = zext i8 %10 to i16, !dbg !2190
  %arrayidx6.us.i.5 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 5, !dbg !2191
  %11 = load i8, ptr %arrayidx6.us.i.5, align 1, !dbg !2191
  %conv7.us.i.5 = zext i8 %11 to i16, !dbg !2191
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2192
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2193
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2194
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2195
  %arrayidx11.us.i.5 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 5, !dbg !2197
  store i8 %conv9.us.i.5, ptr %arrayidx11.us.i.5, align 1, !dbg !2196
    #dbg_value(i64 6, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.6 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 6, !dbg !2190
  %12 = load i8, ptr %arrayidx.us.i.6, align 1, !dbg !2190
  %conv.us.i.6 = zext i8 %12 to i16, !dbg !2190
  %arrayidx6.us.i.6 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 6, !dbg !2191
  %13 = load i8, ptr %arrayidx6.us.i.6, align 1, !dbg !2191
  %conv7.us.i.6 = zext i8 %13 to i16, !dbg !2191
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2192
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2193
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2194
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2195
  %arrayidx11.us.i.6 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 6, !dbg !2197
  store i8 %conv9.us.i.6, ptr %arrayidx11.us.i.6, align 1, !dbg !2196
    #dbg_value(i64 7, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.7 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 7, !dbg !2190
  %14 = load i8, ptr %arrayidx.us.i.7, align 1, !dbg !2190
  %conv.us.i.7 = zext i8 %14 to i16, !dbg !2190
  %arrayidx6.us.i.7 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 7, !dbg !2191
  %15 = load i8, ptr %arrayidx6.us.i.7, align 1, !dbg !2191
  %conv7.us.i.7 = zext i8 %15 to i16, !dbg !2191
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2192
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2193
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2194
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2195
  %arrayidx11.us.i.7 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 7, !dbg !2197
  store i8 %conv9.us.i.7, ptr %arrayidx11.us.i.7, align 1, !dbg !2196
    #dbg_value(i64 8, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.8 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 8, !dbg !2190
  %16 = load i8, ptr %arrayidx.us.i.8, align 1, !dbg !2190
  %conv.us.i.8 = zext i8 %16 to i16, !dbg !2190
  %arrayidx6.us.i.8 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 8, !dbg !2191
  %17 = load i8, ptr %arrayidx6.us.i.8, align 1, !dbg !2191
  %conv7.us.i.8 = zext i8 %17 to i16, !dbg !2191
  %add.us.i.8 = add nuw nsw i16 %conv.us.i.8, 1, !dbg !2192
  %add8.us.i.8 = add nuw nsw i16 %add.us.i.8, %conv7.us.i.8, !dbg !2193
  %shr.us.i.8 = lshr i16 %add8.us.i.8, 1, !dbg !2194
  %conv9.us.i.8 = trunc nuw i16 %shr.us.i.8 to i8, !dbg !2195
  %arrayidx11.us.i.8 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 8, !dbg !2197
  store i8 %conv9.us.i.8, ptr %arrayidx11.us.i.8, align 1, !dbg !2196
    #dbg_value(i64 9, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.9 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 9, !dbg !2190
  %18 = load i8, ptr %arrayidx.us.i.9, align 1, !dbg !2190
  %conv.us.i.9 = zext i8 %18 to i16, !dbg !2190
  %arrayidx6.us.i.9 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 9, !dbg !2191
  %19 = load i8, ptr %arrayidx6.us.i.9, align 1, !dbg !2191
  %conv7.us.i.9 = zext i8 %19 to i16, !dbg !2191
  %add.us.i.9 = add nuw nsw i16 %conv.us.i.9, 1, !dbg !2192
  %add8.us.i.9 = add nuw nsw i16 %add.us.i.9, %conv7.us.i.9, !dbg !2193
  %shr.us.i.9 = lshr i16 %add8.us.i.9, 1, !dbg !2194
  %conv9.us.i.9 = trunc nuw i16 %shr.us.i.9 to i8, !dbg !2195
  %arrayidx11.us.i.9 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 9, !dbg !2197
  store i8 %conv9.us.i.9, ptr %arrayidx11.us.i.9, align 1, !dbg !2196
    #dbg_value(i64 10, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.10 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 10, !dbg !2190
  %20 = load i8, ptr %arrayidx.us.i.10, align 1, !dbg !2190
  %conv.us.i.10 = zext i8 %20 to i16, !dbg !2190
  %arrayidx6.us.i.10 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 10, !dbg !2191
  %21 = load i8, ptr %arrayidx6.us.i.10, align 1, !dbg !2191
  %conv7.us.i.10 = zext i8 %21 to i16, !dbg !2191
  %add.us.i.10 = add nuw nsw i16 %conv.us.i.10, 1, !dbg !2192
  %add8.us.i.10 = add nuw nsw i16 %add.us.i.10, %conv7.us.i.10, !dbg !2193
  %shr.us.i.10 = lshr i16 %add8.us.i.10, 1, !dbg !2194
  %conv9.us.i.10 = trunc nuw i16 %shr.us.i.10 to i8, !dbg !2195
  %arrayidx11.us.i.10 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 10, !dbg !2197
  store i8 %conv9.us.i.10, ptr %arrayidx11.us.i.10, align 1, !dbg !2196
    #dbg_value(i64 11, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.11 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 11, !dbg !2190
  %22 = load i8, ptr %arrayidx.us.i.11, align 1, !dbg !2190
  %conv.us.i.11 = zext i8 %22 to i16, !dbg !2190
  %arrayidx6.us.i.11 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 11, !dbg !2191
  %23 = load i8, ptr %arrayidx6.us.i.11, align 1, !dbg !2191
  %conv7.us.i.11 = zext i8 %23 to i16, !dbg !2191
  %add.us.i.11 = add nuw nsw i16 %conv.us.i.11, 1, !dbg !2192
  %add8.us.i.11 = add nuw nsw i16 %add.us.i.11, %conv7.us.i.11, !dbg !2193
  %shr.us.i.11 = lshr i16 %add8.us.i.11, 1, !dbg !2194
  %conv9.us.i.11 = trunc nuw i16 %shr.us.i.11 to i8, !dbg !2195
  %arrayidx11.us.i.11 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 11, !dbg !2197
  store i8 %conv9.us.i.11, ptr %arrayidx11.us.i.11, align 1, !dbg !2196
    #dbg_value(i64 12, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.12 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 12, !dbg !2190
  %24 = load i8, ptr %arrayidx.us.i.12, align 1, !dbg !2190
  %conv.us.i.12 = zext i8 %24 to i16, !dbg !2190
  %arrayidx6.us.i.12 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 12, !dbg !2191
  %25 = load i8, ptr %arrayidx6.us.i.12, align 1, !dbg !2191
  %conv7.us.i.12 = zext i8 %25 to i16, !dbg !2191
  %add.us.i.12 = add nuw nsw i16 %conv.us.i.12, 1, !dbg !2192
  %add8.us.i.12 = add nuw nsw i16 %add.us.i.12, %conv7.us.i.12, !dbg !2193
  %shr.us.i.12 = lshr i16 %add8.us.i.12, 1, !dbg !2194
  %conv9.us.i.12 = trunc nuw i16 %shr.us.i.12 to i8, !dbg !2195
  %arrayidx11.us.i.12 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 12, !dbg !2197
  store i8 %conv9.us.i.12, ptr %arrayidx11.us.i.12, align 1, !dbg !2196
    #dbg_value(i64 13, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.13 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 13, !dbg !2190
  %26 = load i8, ptr %arrayidx.us.i.13, align 1, !dbg !2190
  %conv.us.i.13 = zext i8 %26 to i16, !dbg !2190
  %arrayidx6.us.i.13 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 13, !dbg !2191
  %27 = load i8, ptr %arrayidx6.us.i.13, align 1, !dbg !2191
  %conv7.us.i.13 = zext i8 %27 to i16, !dbg !2191
  %add.us.i.13 = add nuw nsw i16 %conv.us.i.13, 1, !dbg !2192
  %add8.us.i.13 = add nuw nsw i16 %add.us.i.13, %conv7.us.i.13, !dbg !2193
  %shr.us.i.13 = lshr i16 %add8.us.i.13, 1, !dbg !2194
  %conv9.us.i.13 = trunc nuw i16 %shr.us.i.13 to i8, !dbg !2195
  %arrayidx11.us.i.13 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 13, !dbg !2197
  store i8 %conv9.us.i.13, ptr %arrayidx11.us.i.13, align 1, !dbg !2196
    #dbg_value(i64 14, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.14 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 14, !dbg !2190
  %28 = load i8, ptr %arrayidx.us.i.14, align 1, !dbg !2190
  %conv.us.i.14 = zext i8 %28 to i16, !dbg !2190
  %arrayidx6.us.i.14 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 14, !dbg !2191
  %29 = load i8, ptr %arrayidx6.us.i.14, align 1, !dbg !2191
  %conv7.us.i.14 = zext i8 %29 to i16, !dbg !2191
  %add.us.i.14 = add nuw nsw i16 %conv.us.i.14, 1, !dbg !2192
  %add8.us.i.14 = add nuw nsw i16 %add.us.i.14, %conv7.us.i.14, !dbg !2193
  %shr.us.i.14 = lshr i16 %add8.us.i.14, 1, !dbg !2194
  %conv9.us.i.14 = trunc nuw i16 %shr.us.i.14 to i8, !dbg !2195
  %arrayidx11.us.i.14 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 14, !dbg !2197
  store i8 %conv9.us.i.14, ptr %arrayidx11.us.i.14, align 1, !dbg !2196
    #dbg_value(i64 15, !2147, !DIExpression(), !2189)
  %arrayidx.us.i.15 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 15, !dbg !2190
  %30 = load i8, ptr %arrayidx.us.i.15, align 1, !dbg !2190
  %conv.us.i.15 = zext i8 %30 to i16, !dbg !2190
  %arrayidx6.us.i.15 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 15, !dbg !2191
  %31 = load i8, ptr %arrayidx6.us.i.15, align 1, !dbg !2191
  %conv7.us.i.15 = zext i8 %31 to i16, !dbg !2191
  %add.us.i.15 = add nuw nsw i16 %conv.us.i.15, 1, !dbg !2192
  %add8.us.i.15 = add nuw nsw i16 %add.us.i.15, %conv7.us.i.15, !dbg !2193
  %shr.us.i.15 = lshr i16 %add8.us.i.15, 1, !dbg !2194
  %conv9.us.i.15 = trunc nuw i16 %shr.us.i.15 to i8, !dbg !2195
  %arrayidx11.us.i.15 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 15, !dbg !2197
  store i8 %conv9.us.i.15, ptr %arrayidx11.us.i.15, align 1, !dbg !2196
    #dbg_value(i64 16, !2147, !DIExpression(), !2189)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext.i, !dbg !2198
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2185)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !2199
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2185)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext14.i, !dbg !2200
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2185)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !2201
    #dbg_value(i32 %inc17.us.i, !2145, !DIExpression(), !2187)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, 8, !dbg !2202
  br i1 %exitcond36.not.i, label %if.end, label %for.cond1.preheader.us.i, !dbg !2188, !llvm.loop !2203

if.else:                                          ; preds = %entry
  tail call fastcc void @pixel_avg_weight_wxh(ptr noundef %pix1, i32 noundef %i_stride_pix1, ptr noundef %pix2, i32 noundef %i_stride_pix2, ptr noundef %pix3, i32 noundef %i_stride_pix3, i32 noundef 16, i32 noundef 8, i32 noundef %weight), !dbg !2182
  br label %if.end

if.end:                                           ; preds = %for.cond1.preheader.us.i, %if.else
  ret void, !dbg !2184
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_8x16(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2205 {
entry:
    #dbg_value(ptr %pix1, !2207, !DIExpression(), !2214)
    #dbg_value(i32 %i_stride_pix1, !2208, !DIExpression(), !2214)
    #dbg_value(ptr %pix2, !2209, !DIExpression(), !2214)
    #dbg_value(i32 %i_stride_pix2, !2210, !DIExpression(), !2214)
    #dbg_value(ptr %pix3, !2211, !DIExpression(), !2214)
    #dbg_value(i32 %i_stride_pix3, !2212, !DIExpression(), !2214)
    #dbg_value(i32 %weight, !2213, !DIExpression(), !2214)
  %cmp = icmp eq i32 %weight, 32, !dbg !2215
  br i1 %cmp, label %if.then, label %if.else, !dbg !2217

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2218)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2218)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2218)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2218)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2218)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2218)
    #dbg_value(i32 8, !2143, !DIExpression(), !2218)
    #dbg_value(i32 16, !2144, !DIExpression(), !2218)
    #dbg_value(i32 0, !2145, !DIExpression(), !2220)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
  br label %for.cond1.preheader.us.i, !dbg !2221

for.cond1.preheader.us.i:                         ; preds = %for.cond1.preheader.us.i, %if.then
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.preheader.us.i ], [ 0, %if.then ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.preheader.us.i ], [ %pix1, %if.then ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.preheader.us.i ], [ %pix2, %if.then ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.preheader.us.i ], [ %pix3, %if.then ]
    #dbg_value(i32 %y.033.us.i, !2145, !DIExpression(), !2220)
    #dbg_value(ptr %dst.addr.032.us.i, !2135, !DIExpression(), !2218)
    #dbg_value(ptr %src1.addr.031.us.i, !2139, !DIExpression(), !2218)
    #dbg_value(ptr %src2.addr.030.us.i, !2141, !DIExpression(), !2218)
    #dbg_value(i32 0, !2147, !DIExpression(), !2222)
    #dbg_value(i64 0, !2147, !DIExpression(), !2222)
  %0 = load i8, ptr %src1.addr.031.us.i, align 1, !dbg !2223
  %conv.us.i = zext i8 %0 to i16, !dbg !2223
  %1 = load i8, ptr %src2.addr.030.us.i, align 1, !dbg !2224
  %conv7.us.i = zext i8 %1 to i16, !dbg !2224
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2225
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2226
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2227
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2228
  store i8 %conv9.us.i, ptr %dst.addr.032.us.i, align 1, !dbg !2229
    #dbg_value(i64 1, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 1, !dbg !2223
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2223
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2223
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 1, !dbg !2224
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2224
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2224
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2225
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2226
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2227
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2228
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 1, !dbg !2230
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2229
    #dbg_value(i64 2, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 2, !dbg !2223
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2223
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2223
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 2, !dbg !2224
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2224
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2224
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2225
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2226
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2227
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2228
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 2, !dbg !2230
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2229
    #dbg_value(i64 3, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 3, !dbg !2223
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2223
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2223
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 3, !dbg !2224
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2224
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2224
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2225
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2226
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2227
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2228
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 3, !dbg !2230
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2229
    #dbg_value(i64 4, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.4 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 4, !dbg !2223
  %8 = load i8, ptr %arrayidx.us.i.4, align 1, !dbg !2223
  %conv.us.i.4 = zext i8 %8 to i16, !dbg !2223
  %arrayidx6.us.i.4 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 4, !dbg !2224
  %9 = load i8, ptr %arrayidx6.us.i.4, align 1, !dbg !2224
  %conv7.us.i.4 = zext i8 %9 to i16, !dbg !2224
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2225
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2226
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2227
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2228
  %arrayidx11.us.i.4 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 4, !dbg !2230
  store i8 %conv9.us.i.4, ptr %arrayidx11.us.i.4, align 1, !dbg !2229
    #dbg_value(i64 5, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.5 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 5, !dbg !2223
  %10 = load i8, ptr %arrayidx.us.i.5, align 1, !dbg !2223
  %conv.us.i.5 = zext i8 %10 to i16, !dbg !2223
  %arrayidx6.us.i.5 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 5, !dbg !2224
  %11 = load i8, ptr %arrayidx6.us.i.5, align 1, !dbg !2224
  %conv7.us.i.5 = zext i8 %11 to i16, !dbg !2224
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2225
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2226
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2227
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2228
  %arrayidx11.us.i.5 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 5, !dbg !2230
  store i8 %conv9.us.i.5, ptr %arrayidx11.us.i.5, align 1, !dbg !2229
    #dbg_value(i64 6, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.6 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 6, !dbg !2223
  %12 = load i8, ptr %arrayidx.us.i.6, align 1, !dbg !2223
  %conv.us.i.6 = zext i8 %12 to i16, !dbg !2223
  %arrayidx6.us.i.6 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 6, !dbg !2224
  %13 = load i8, ptr %arrayidx6.us.i.6, align 1, !dbg !2224
  %conv7.us.i.6 = zext i8 %13 to i16, !dbg !2224
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2225
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2226
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2227
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2228
  %arrayidx11.us.i.6 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 6, !dbg !2230
  store i8 %conv9.us.i.6, ptr %arrayidx11.us.i.6, align 1, !dbg !2229
    #dbg_value(i64 7, !2147, !DIExpression(), !2222)
  %arrayidx.us.i.7 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 7, !dbg !2223
  %14 = load i8, ptr %arrayidx.us.i.7, align 1, !dbg !2223
  %conv.us.i.7 = zext i8 %14 to i16, !dbg !2223
  %arrayidx6.us.i.7 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 7, !dbg !2224
  %15 = load i8, ptr %arrayidx6.us.i.7, align 1, !dbg !2224
  %conv7.us.i.7 = zext i8 %15 to i16, !dbg !2224
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2225
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2226
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2227
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2228
  %arrayidx11.us.i.7 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 7, !dbg !2230
  store i8 %conv9.us.i.7, ptr %arrayidx11.us.i.7, align 1, !dbg !2229
    #dbg_value(i64 8, !2147, !DIExpression(), !2222)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext.i, !dbg !2231
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2218)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !2232
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2218)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext14.i, !dbg !2233
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2218)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !2234
    #dbg_value(i32 %inc17.us.i, !2145, !DIExpression(), !2220)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, 16, !dbg !2235
  br i1 %exitcond36.not.i, label %if.end, label %for.cond1.preheader.us.i, !dbg !2221, !llvm.loop !2236

if.else:                                          ; preds = %entry
  tail call fastcc void @pixel_avg_weight_wxh(ptr noundef %pix1, i32 noundef %i_stride_pix1, ptr noundef %pix2, i32 noundef %i_stride_pix2, ptr noundef %pix3, i32 noundef %i_stride_pix3, i32 noundef 8, i32 noundef 16, i32 noundef %weight), !dbg !2215
  br label %if.end

if.end:                                           ; preds = %for.cond1.preheader.us.i, %if.else
  ret void, !dbg !2217
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_8x8(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2238 {
entry:
    #dbg_value(ptr %pix1, !2240, !DIExpression(), !2247)
    #dbg_value(i32 %i_stride_pix1, !2241, !DIExpression(), !2247)
    #dbg_value(ptr %pix2, !2242, !DIExpression(), !2247)
    #dbg_value(i32 %i_stride_pix2, !2243, !DIExpression(), !2247)
    #dbg_value(ptr %pix3, !2244, !DIExpression(), !2247)
    #dbg_value(i32 %i_stride_pix3, !2245, !DIExpression(), !2247)
    #dbg_value(i32 %weight, !2246, !DIExpression(), !2247)
  %cmp = icmp eq i32 %weight, 32, !dbg !2248
  br i1 %cmp, label %if.then, label %if.else, !dbg !2250

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2251)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2251)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2251)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2251)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2251)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2251)
    #dbg_value(i32 8, !2143, !DIExpression(), !2251)
    #dbg_value(i32 8, !2144, !DIExpression(), !2251)
    #dbg_value(i32 0, !2145, !DIExpression(), !2253)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
  br label %for.cond1.preheader.us.i, !dbg !2254

for.cond1.preheader.us.i:                         ; preds = %for.cond1.preheader.us.i, %if.then
  %y.033.us.i = phi i32 [ %inc17.us.i, %for.cond1.preheader.us.i ], [ 0, %if.then ]
  %dst.addr.032.us.i = phi ptr [ %add.ptr15.us.i, %for.cond1.preheader.us.i ], [ %pix1, %if.then ]
  %src1.addr.031.us.i = phi ptr [ %add.ptr.us.i, %for.cond1.preheader.us.i ], [ %pix2, %if.then ]
  %src2.addr.030.us.i = phi ptr [ %add.ptr13.us.i, %for.cond1.preheader.us.i ], [ %pix3, %if.then ]
    #dbg_value(i32 %y.033.us.i, !2145, !DIExpression(), !2253)
    #dbg_value(ptr %dst.addr.032.us.i, !2135, !DIExpression(), !2251)
    #dbg_value(ptr %src1.addr.031.us.i, !2139, !DIExpression(), !2251)
    #dbg_value(ptr %src2.addr.030.us.i, !2141, !DIExpression(), !2251)
    #dbg_value(i32 0, !2147, !DIExpression(), !2255)
    #dbg_value(i64 0, !2147, !DIExpression(), !2255)
  %0 = load i8, ptr %src1.addr.031.us.i, align 1, !dbg !2256
  %conv.us.i = zext i8 %0 to i16, !dbg !2256
  %1 = load i8, ptr %src2.addr.030.us.i, align 1, !dbg !2257
  %conv7.us.i = zext i8 %1 to i16, !dbg !2257
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2258
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2259
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2260
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2261
  store i8 %conv9.us.i, ptr %dst.addr.032.us.i, align 1, !dbg !2262
    #dbg_value(i64 1, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 1, !dbg !2256
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2256
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2256
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 1, !dbg !2257
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2257
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2257
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2258
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2259
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2260
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2261
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 1, !dbg !2263
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2262
    #dbg_value(i64 2, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 2, !dbg !2256
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2256
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2256
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 2, !dbg !2257
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2257
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2257
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2258
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2259
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2260
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2261
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 2, !dbg !2263
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2262
    #dbg_value(i64 3, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 3, !dbg !2256
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2256
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2256
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 3, !dbg !2257
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2257
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2257
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2258
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2259
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2260
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2261
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 3, !dbg !2263
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2262
    #dbg_value(i64 4, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.4 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 4, !dbg !2256
  %8 = load i8, ptr %arrayidx.us.i.4, align 1, !dbg !2256
  %conv.us.i.4 = zext i8 %8 to i16, !dbg !2256
  %arrayidx6.us.i.4 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 4, !dbg !2257
  %9 = load i8, ptr %arrayidx6.us.i.4, align 1, !dbg !2257
  %conv7.us.i.4 = zext i8 %9 to i16, !dbg !2257
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2258
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2259
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2260
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2261
  %arrayidx11.us.i.4 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 4, !dbg !2263
  store i8 %conv9.us.i.4, ptr %arrayidx11.us.i.4, align 1, !dbg !2262
    #dbg_value(i64 5, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.5 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 5, !dbg !2256
  %10 = load i8, ptr %arrayidx.us.i.5, align 1, !dbg !2256
  %conv.us.i.5 = zext i8 %10 to i16, !dbg !2256
  %arrayidx6.us.i.5 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 5, !dbg !2257
  %11 = load i8, ptr %arrayidx6.us.i.5, align 1, !dbg !2257
  %conv7.us.i.5 = zext i8 %11 to i16, !dbg !2257
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2258
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2259
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2260
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2261
  %arrayidx11.us.i.5 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 5, !dbg !2263
  store i8 %conv9.us.i.5, ptr %arrayidx11.us.i.5, align 1, !dbg !2262
    #dbg_value(i64 6, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.6 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 6, !dbg !2256
  %12 = load i8, ptr %arrayidx.us.i.6, align 1, !dbg !2256
  %conv.us.i.6 = zext i8 %12 to i16, !dbg !2256
  %arrayidx6.us.i.6 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 6, !dbg !2257
  %13 = load i8, ptr %arrayidx6.us.i.6, align 1, !dbg !2257
  %conv7.us.i.6 = zext i8 %13 to i16, !dbg !2257
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2258
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2259
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2260
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2261
  %arrayidx11.us.i.6 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 6, !dbg !2263
  store i8 %conv9.us.i.6, ptr %arrayidx11.us.i.6, align 1, !dbg !2262
    #dbg_value(i64 7, !2147, !DIExpression(), !2255)
  %arrayidx.us.i.7 = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 7, !dbg !2256
  %14 = load i8, ptr %arrayidx.us.i.7, align 1, !dbg !2256
  %conv.us.i.7 = zext i8 %14 to i16, !dbg !2256
  %arrayidx6.us.i.7 = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 7, !dbg !2257
  %15 = load i8, ptr %arrayidx6.us.i.7, align 1, !dbg !2257
  %conv7.us.i.7 = zext i8 %15 to i16, !dbg !2257
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2258
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2259
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2260
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2261
  %arrayidx11.us.i.7 = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 7, !dbg !2263
  store i8 %conv9.us.i.7, ptr %arrayidx11.us.i.7, align 1, !dbg !2262
    #dbg_value(i64 8, !2147, !DIExpression(), !2255)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %src1.addr.031.us.i, i64 %idx.ext.i, !dbg !2264
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2251)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %src2.addr.030.us.i, i64 %idx.ext12.i, !dbg !2265
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2251)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %dst.addr.032.us.i, i64 %idx.ext14.i, !dbg !2266
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2251)
  %inc17.us.i = add nuw nsw i32 %y.033.us.i, 1, !dbg !2267
    #dbg_value(i32 %inc17.us.i, !2145, !DIExpression(), !2253)
  %exitcond36.not.i = icmp eq i32 %inc17.us.i, 8, !dbg !2268
  br i1 %exitcond36.not.i, label %if.end, label %for.cond1.preheader.us.i, !dbg !2254, !llvm.loop !2269

if.else:                                          ; preds = %entry
  tail call fastcc void @pixel_avg_weight_wxh(ptr noundef %pix1, i32 noundef %i_stride_pix1, ptr noundef %pix2, i32 noundef %i_stride_pix2, ptr noundef %pix3, i32 noundef %i_stride_pix3, i32 noundef 8, i32 noundef 8, i32 noundef %weight), !dbg !2248
  br label %if.end

if.end:                                           ; preds = %for.cond1.preheader.us.i, %if.else
  ret void, !dbg !2250
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_8x4(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2271 {
entry:
    #dbg_value(ptr %pix1, !2273, !DIExpression(), !2280)
    #dbg_value(i32 %i_stride_pix1, !2274, !DIExpression(), !2280)
    #dbg_value(ptr %pix2, !2275, !DIExpression(), !2280)
    #dbg_value(i32 %i_stride_pix2, !2276, !DIExpression(), !2280)
    #dbg_value(ptr %pix3, !2277, !DIExpression(), !2280)
    #dbg_value(i32 %i_stride_pix3, !2278, !DIExpression(), !2280)
    #dbg_value(i32 %weight, !2279, !DIExpression(), !2280)
  %cmp = icmp eq i32 %weight, 32, !dbg !2281
  br i1 %cmp, label %if.then, label %if.else, !dbg !2283

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2284)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2284)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2284)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2284)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2284)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2284)
    #dbg_value(i32 8, !2143, !DIExpression(), !2284)
    #dbg_value(i32 4, !2144, !DIExpression(), !2284)
    #dbg_value(i32 0, !2145, !DIExpression(), !2286)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2286)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2284)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2284)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2284)
    #dbg_value(i32 0, !2147, !DIExpression(), !2287)
    #dbg_value(i64 0, !2147, !DIExpression(), !2287)
  %0 = load i8, ptr %pix2, align 1, !dbg !2288
  %conv.us.i = zext i8 %0 to i16, !dbg !2288
  %1 = load i8, ptr %pix3, align 1, !dbg !2289
  %conv7.us.i = zext i8 %1 to i16, !dbg !2289
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2290
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2291
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2292
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2293
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2294
    #dbg_value(i64 1, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2288
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2288
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2288
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2289
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2289
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2289
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2290
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2291
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2292
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2293
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2295
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2294
    #dbg_value(i64 2, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2288
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2288
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2288
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2289
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2289
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2289
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2290
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2291
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2292
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2293
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2295
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2294
    #dbg_value(i64 3, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2288
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2288
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2288
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2289
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2289
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2289
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2290
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2291
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2292
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2293
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2295
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2294
    #dbg_value(i64 4, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.4 = getelementptr inbounds i8, ptr %pix2, i64 4, !dbg !2288
  %8 = load i8, ptr %arrayidx.us.i.4, align 1, !dbg !2288
  %conv.us.i.4 = zext i8 %8 to i16, !dbg !2288
  %arrayidx6.us.i.4 = getelementptr inbounds i8, ptr %pix3, i64 4, !dbg !2289
  %9 = load i8, ptr %arrayidx6.us.i.4, align 1, !dbg !2289
  %conv7.us.i.4 = zext i8 %9 to i16, !dbg !2289
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2290
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2291
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2292
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2293
  %arrayidx11.us.i.4 = getelementptr inbounds i8, ptr %pix1, i64 4, !dbg !2295
  store i8 %conv9.us.i.4, ptr %arrayidx11.us.i.4, align 1, !dbg !2294
    #dbg_value(i64 5, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.5 = getelementptr inbounds i8, ptr %pix2, i64 5, !dbg !2288
  %10 = load i8, ptr %arrayidx.us.i.5, align 1, !dbg !2288
  %conv.us.i.5 = zext i8 %10 to i16, !dbg !2288
  %arrayidx6.us.i.5 = getelementptr inbounds i8, ptr %pix3, i64 5, !dbg !2289
  %11 = load i8, ptr %arrayidx6.us.i.5, align 1, !dbg !2289
  %conv7.us.i.5 = zext i8 %11 to i16, !dbg !2289
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2290
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2291
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2292
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2293
  %arrayidx11.us.i.5 = getelementptr inbounds i8, ptr %pix1, i64 5, !dbg !2295
  store i8 %conv9.us.i.5, ptr %arrayidx11.us.i.5, align 1, !dbg !2294
    #dbg_value(i64 6, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.6 = getelementptr inbounds i8, ptr %pix2, i64 6, !dbg !2288
  %12 = load i8, ptr %arrayidx.us.i.6, align 1, !dbg !2288
  %conv.us.i.6 = zext i8 %12 to i16, !dbg !2288
  %arrayidx6.us.i.6 = getelementptr inbounds i8, ptr %pix3, i64 6, !dbg !2289
  %13 = load i8, ptr %arrayidx6.us.i.6, align 1, !dbg !2289
  %conv7.us.i.6 = zext i8 %13 to i16, !dbg !2289
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2290
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2291
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2292
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2293
  %arrayidx11.us.i.6 = getelementptr inbounds i8, ptr %pix1, i64 6, !dbg !2295
  store i8 %conv9.us.i.6, ptr %arrayidx11.us.i.6, align 1, !dbg !2294
    #dbg_value(i64 7, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.7 = getelementptr inbounds i8, ptr %pix2, i64 7, !dbg !2288
  %14 = load i8, ptr %arrayidx.us.i.7, align 1, !dbg !2288
  %conv.us.i.7 = zext i8 %14 to i16, !dbg !2288
  %arrayidx6.us.i.7 = getelementptr inbounds i8, ptr %pix3, i64 7, !dbg !2289
  %15 = load i8, ptr %arrayidx6.us.i.7, align 1, !dbg !2289
  %conv7.us.i.7 = zext i8 %15 to i16, !dbg !2289
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2290
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2291
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2292
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2293
  %arrayidx11.us.i.7 = getelementptr inbounds i8, ptr %pix1, i64 7, !dbg !2295
  store i8 %conv9.us.i.7, ptr %arrayidx11.us.i.7, align 1, !dbg !2294
    #dbg_value(i64 8, !2147, !DIExpression(), !2287)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2296
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2284)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2297
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2284)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2298
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2284)
    #dbg_value(i32 1, !2145, !DIExpression(), !2286)
    #dbg_value(i32 0, !2147, !DIExpression(), !2287)
    #dbg_value(i64 0, !2147, !DIExpression(), !2287)
  %16 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2288
  %conv.us.i.18 = zext i8 %16 to i16, !dbg !2288
  %17 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2289
  %conv7.us.i.19 = zext i8 %17 to i16, !dbg !2289
  %add.us.i.110 = add nuw nsw i16 %conv.us.i.18, 1, !dbg !2290
  %add8.us.i.111 = add nuw nsw i16 %add.us.i.110, %conv7.us.i.19, !dbg !2291
  %shr.us.i.112 = lshr i16 %add8.us.i.111, 1, !dbg !2292
  %conv9.us.i.113 = trunc nuw i16 %shr.us.i.112 to i8, !dbg !2293
  store i8 %conv9.us.i.113, ptr %add.ptr15.us.i, align 1, !dbg !2294
    #dbg_value(i64 1, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2288
  %18 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2288
  %conv.us.i.1.1 = zext i8 %18 to i16, !dbg !2288
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2289
  %19 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2289
  %conv7.us.i.1.1 = zext i8 %19 to i16, !dbg !2289
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2290
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2291
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2292
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2293
  %arrayidx11.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 1, !dbg !2295
  store i8 %conv9.us.i.1.1, ptr %arrayidx11.us.i.1.1, align 1, !dbg !2294
    #dbg_value(i64 2, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 2, !dbg !2288
  %20 = load i8, ptr %arrayidx.us.i.2.1, align 1, !dbg !2288
  %conv.us.i.2.1 = zext i8 %20 to i16, !dbg !2288
  %arrayidx6.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 2, !dbg !2289
  %21 = load i8, ptr %arrayidx6.us.i.2.1, align 1, !dbg !2289
  %conv7.us.i.2.1 = zext i8 %21 to i16, !dbg !2289
  %add.us.i.2.1 = add nuw nsw i16 %conv.us.i.2.1, 1, !dbg !2290
  %add8.us.i.2.1 = add nuw nsw i16 %add.us.i.2.1, %conv7.us.i.2.1, !dbg !2291
  %shr.us.i.2.1 = lshr i16 %add8.us.i.2.1, 1, !dbg !2292
  %conv9.us.i.2.1 = trunc nuw i16 %shr.us.i.2.1 to i8, !dbg !2293
  %arrayidx11.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 2, !dbg !2295
  store i8 %conv9.us.i.2.1, ptr %arrayidx11.us.i.2.1, align 1, !dbg !2294
    #dbg_value(i64 3, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 3, !dbg !2288
  %22 = load i8, ptr %arrayidx.us.i.3.1, align 1, !dbg !2288
  %conv.us.i.3.1 = zext i8 %22 to i16, !dbg !2288
  %arrayidx6.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 3, !dbg !2289
  %23 = load i8, ptr %arrayidx6.us.i.3.1, align 1, !dbg !2289
  %conv7.us.i.3.1 = zext i8 %23 to i16, !dbg !2289
  %add.us.i.3.1 = add nuw nsw i16 %conv.us.i.3.1, 1, !dbg !2290
  %add8.us.i.3.1 = add nuw nsw i16 %add.us.i.3.1, %conv7.us.i.3.1, !dbg !2291
  %shr.us.i.3.1 = lshr i16 %add8.us.i.3.1, 1, !dbg !2292
  %conv9.us.i.3.1 = trunc nuw i16 %shr.us.i.3.1 to i8, !dbg !2293
  %arrayidx11.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 3, !dbg !2295
  store i8 %conv9.us.i.3.1, ptr %arrayidx11.us.i.3.1, align 1, !dbg !2294
    #dbg_value(i64 4, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.4.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 4, !dbg !2288
  %24 = load i8, ptr %arrayidx.us.i.4.1, align 1, !dbg !2288
  %conv.us.i.4.1 = zext i8 %24 to i16, !dbg !2288
  %arrayidx6.us.i.4.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 4, !dbg !2289
  %25 = load i8, ptr %arrayidx6.us.i.4.1, align 1, !dbg !2289
  %conv7.us.i.4.1 = zext i8 %25 to i16, !dbg !2289
  %add.us.i.4.1 = add nuw nsw i16 %conv.us.i.4.1, 1, !dbg !2290
  %add8.us.i.4.1 = add nuw nsw i16 %add.us.i.4.1, %conv7.us.i.4.1, !dbg !2291
  %shr.us.i.4.1 = lshr i16 %add8.us.i.4.1, 1, !dbg !2292
  %conv9.us.i.4.1 = trunc nuw i16 %shr.us.i.4.1 to i8, !dbg !2293
  %arrayidx11.us.i.4.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 4, !dbg !2295
  store i8 %conv9.us.i.4.1, ptr %arrayidx11.us.i.4.1, align 1, !dbg !2294
    #dbg_value(i64 5, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.5.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 5, !dbg !2288
  %26 = load i8, ptr %arrayidx.us.i.5.1, align 1, !dbg !2288
  %conv.us.i.5.1 = zext i8 %26 to i16, !dbg !2288
  %arrayidx6.us.i.5.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 5, !dbg !2289
  %27 = load i8, ptr %arrayidx6.us.i.5.1, align 1, !dbg !2289
  %conv7.us.i.5.1 = zext i8 %27 to i16, !dbg !2289
  %add.us.i.5.1 = add nuw nsw i16 %conv.us.i.5.1, 1, !dbg !2290
  %add8.us.i.5.1 = add nuw nsw i16 %add.us.i.5.1, %conv7.us.i.5.1, !dbg !2291
  %shr.us.i.5.1 = lshr i16 %add8.us.i.5.1, 1, !dbg !2292
  %conv9.us.i.5.1 = trunc nuw i16 %shr.us.i.5.1 to i8, !dbg !2293
  %arrayidx11.us.i.5.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 5, !dbg !2295
  store i8 %conv9.us.i.5.1, ptr %arrayidx11.us.i.5.1, align 1, !dbg !2294
    #dbg_value(i64 6, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.6.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 6, !dbg !2288
  %28 = load i8, ptr %arrayidx.us.i.6.1, align 1, !dbg !2288
  %conv.us.i.6.1 = zext i8 %28 to i16, !dbg !2288
  %arrayidx6.us.i.6.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 6, !dbg !2289
  %29 = load i8, ptr %arrayidx6.us.i.6.1, align 1, !dbg !2289
  %conv7.us.i.6.1 = zext i8 %29 to i16, !dbg !2289
  %add.us.i.6.1 = add nuw nsw i16 %conv.us.i.6.1, 1, !dbg !2290
  %add8.us.i.6.1 = add nuw nsw i16 %add.us.i.6.1, %conv7.us.i.6.1, !dbg !2291
  %shr.us.i.6.1 = lshr i16 %add8.us.i.6.1, 1, !dbg !2292
  %conv9.us.i.6.1 = trunc nuw i16 %shr.us.i.6.1 to i8, !dbg !2293
  %arrayidx11.us.i.6.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 6, !dbg !2295
  store i8 %conv9.us.i.6.1, ptr %arrayidx11.us.i.6.1, align 1, !dbg !2294
    #dbg_value(i64 7, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.7.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 7, !dbg !2288
  %30 = load i8, ptr %arrayidx.us.i.7.1, align 1, !dbg !2288
  %conv.us.i.7.1 = zext i8 %30 to i16, !dbg !2288
  %arrayidx6.us.i.7.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 7, !dbg !2289
  %31 = load i8, ptr %arrayidx6.us.i.7.1, align 1, !dbg !2289
  %conv7.us.i.7.1 = zext i8 %31 to i16, !dbg !2289
  %add.us.i.7.1 = add nuw nsw i16 %conv.us.i.7.1, 1, !dbg !2290
  %add8.us.i.7.1 = add nuw nsw i16 %add.us.i.7.1, %conv7.us.i.7.1, !dbg !2291
  %shr.us.i.7.1 = lshr i16 %add8.us.i.7.1, 1, !dbg !2292
  %conv9.us.i.7.1 = trunc nuw i16 %shr.us.i.7.1 to i8, !dbg !2293
  %arrayidx11.us.i.7.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 7, !dbg !2295
  store i8 %conv9.us.i.7.1, ptr %arrayidx11.us.i.7.1, align 1, !dbg !2294
    #dbg_value(i64 8, !2147, !DIExpression(), !2287)
  %add.ptr.us.i.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 %idx.ext.i, !dbg !2296
    #dbg_value(ptr %add.ptr.us.i.1, !2139, !DIExpression(), !2284)
  %add.ptr13.us.i.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 %idx.ext12.i, !dbg !2297
    #dbg_value(ptr %add.ptr13.us.i.1, !2141, !DIExpression(), !2284)
  %add.ptr15.us.i.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 %idx.ext14.i, !dbg !2298
    #dbg_value(ptr %add.ptr15.us.i.1, !2135, !DIExpression(), !2284)
    #dbg_value(i32 2, !2145, !DIExpression(), !2286)
    #dbg_value(i32 0, !2147, !DIExpression(), !2287)
    #dbg_value(i64 0, !2147, !DIExpression(), !2287)
  %32 = load i8, ptr %add.ptr.us.i.1, align 1, !dbg !2288
  %conv.us.i.214 = zext i8 %32 to i16, !dbg !2288
  %33 = load i8, ptr %add.ptr13.us.i.1, align 1, !dbg !2289
  %conv7.us.i.215 = zext i8 %33 to i16, !dbg !2289
  %add.us.i.216 = add nuw nsw i16 %conv.us.i.214, 1, !dbg !2290
  %add8.us.i.217 = add nuw nsw i16 %add.us.i.216, %conv7.us.i.215, !dbg !2291
  %shr.us.i.218 = lshr i16 %add8.us.i.217, 1, !dbg !2292
  %conv9.us.i.219 = trunc nuw i16 %shr.us.i.218 to i8, !dbg !2293
  store i8 %conv9.us.i.219, ptr %add.ptr15.us.i.1, align 1, !dbg !2294
    #dbg_value(i64 1, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 1, !dbg !2288
  %34 = load i8, ptr %arrayidx.us.i.1.2, align 1, !dbg !2288
  %conv.us.i.1.2 = zext i8 %34 to i16, !dbg !2288
  %arrayidx6.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 1, !dbg !2289
  %35 = load i8, ptr %arrayidx6.us.i.1.2, align 1, !dbg !2289
  %conv7.us.i.1.2 = zext i8 %35 to i16, !dbg !2289
  %add.us.i.1.2 = add nuw nsw i16 %conv.us.i.1.2, 1, !dbg !2290
  %add8.us.i.1.2 = add nuw nsw i16 %add.us.i.1.2, %conv7.us.i.1.2, !dbg !2291
  %shr.us.i.1.2 = lshr i16 %add8.us.i.1.2, 1, !dbg !2292
  %conv9.us.i.1.2 = trunc nuw i16 %shr.us.i.1.2 to i8, !dbg !2293
  %arrayidx11.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 1, !dbg !2295
  store i8 %conv9.us.i.1.2, ptr %arrayidx11.us.i.1.2, align 1, !dbg !2294
    #dbg_value(i64 2, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 2, !dbg !2288
  %36 = load i8, ptr %arrayidx.us.i.2.2, align 1, !dbg !2288
  %conv.us.i.2.2 = zext i8 %36 to i16, !dbg !2288
  %arrayidx6.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 2, !dbg !2289
  %37 = load i8, ptr %arrayidx6.us.i.2.2, align 1, !dbg !2289
  %conv7.us.i.2.2 = zext i8 %37 to i16, !dbg !2289
  %add.us.i.2.2 = add nuw nsw i16 %conv.us.i.2.2, 1, !dbg !2290
  %add8.us.i.2.2 = add nuw nsw i16 %add.us.i.2.2, %conv7.us.i.2.2, !dbg !2291
  %shr.us.i.2.2 = lshr i16 %add8.us.i.2.2, 1, !dbg !2292
  %conv9.us.i.2.2 = trunc nuw i16 %shr.us.i.2.2 to i8, !dbg !2293
  %arrayidx11.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 2, !dbg !2295
  store i8 %conv9.us.i.2.2, ptr %arrayidx11.us.i.2.2, align 1, !dbg !2294
    #dbg_value(i64 3, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 3, !dbg !2288
  %38 = load i8, ptr %arrayidx.us.i.3.2, align 1, !dbg !2288
  %conv.us.i.3.2 = zext i8 %38 to i16, !dbg !2288
  %arrayidx6.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 3, !dbg !2289
  %39 = load i8, ptr %arrayidx6.us.i.3.2, align 1, !dbg !2289
  %conv7.us.i.3.2 = zext i8 %39 to i16, !dbg !2289
  %add.us.i.3.2 = add nuw nsw i16 %conv.us.i.3.2, 1, !dbg !2290
  %add8.us.i.3.2 = add nuw nsw i16 %add.us.i.3.2, %conv7.us.i.3.2, !dbg !2291
  %shr.us.i.3.2 = lshr i16 %add8.us.i.3.2, 1, !dbg !2292
  %conv9.us.i.3.2 = trunc nuw i16 %shr.us.i.3.2 to i8, !dbg !2293
  %arrayidx11.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 3, !dbg !2295
  store i8 %conv9.us.i.3.2, ptr %arrayidx11.us.i.3.2, align 1, !dbg !2294
    #dbg_value(i64 4, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.4.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 4, !dbg !2288
  %40 = load i8, ptr %arrayidx.us.i.4.2, align 1, !dbg !2288
  %conv.us.i.4.2 = zext i8 %40 to i16, !dbg !2288
  %arrayidx6.us.i.4.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 4, !dbg !2289
  %41 = load i8, ptr %arrayidx6.us.i.4.2, align 1, !dbg !2289
  %conv7.us.i.4.2 = zext i8 %41 to i16, !dbg !2289
  %add.us.i.4.2 = add nuw nsw i16 %conv.us.i.4.2, 1, !dbg !2290
  %add8.us.i.4.2 = add nuw nsw i16 %add.us.i.4.2, %conv7.us.i.4.2, !dbg !2291
  %shr.us.i.4.2 = lshr i16 %add8.us.i.4.2, 1, !dbg !2292
  %conv9.us.i.4.2 = trunc nuw i16 %shr.us.i.4.2 to i8, !dbg !2293
  %arrayidx11.us.i.4.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 4, !dbg !2295
  store i8 %conv9.us.i.4.2, ptr %arrayidx11.us.i.4.2, align 1, !dbg !2294
    #dbg_value(i64 5, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.5.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 5, !dbg !2288
  %42 = load i8, ptr %arrayidx.us.i.5.2, align 1, !dbg !2288
  %conv.us.i.5.2 = zext i8 %42 to i16, !dbg !2288
  %arrayidx6.us.i.5.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 5, !dbg !2289
  %43 = load i8, ptr %arrayidx6.us.i.5.2, align 1, !dbg !2289
  %conv7.us.i.5.2 = zext i8 %43 to i16, !dbg !2289
  %add.us.i.5.2 = add nuw nsw i16 %conv.us.i.5.2, 1, !dbg !2290
  %add8.us.i.5.2 = add nuw nsw i16 %add.us.i.5.2, %conv7.us.i.5.2, !dbg !2291
  %shr.us.i.5.2 = lshr i16 %add8.us.i.5.2, 1, !dbg !2292
  %conv9.us.i.5.2 = trunc nuw i16 %shr.us.i.5.2 to i8, !dbg !2293
  %arrayidx11.us.i.5.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 5, !dbg !2295
  store i8 %conv9.us.i.5.2, ptr %arrayidx11.us.i.5.2, align 1, !dbg !2294
    #dbg_value(i64 6, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.6.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 6, !dbg !2288
  %44 = load i8, ptr %arrayidx.us.i.6.2, align 1, !dbg !2288
  %conv.us.i.6.2 = zext i8 %44 to i16, !dbg !2288
  %arrayidx6.us.i.6.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 6, !dbg !2289
  %45 = load i8, ptr %arrayidx6.us.i.6.2, align 1, !dbg !2289
  %conv7.us.i.6.2 = zext i8 %45 to i16, !dbg !2289
  %add.us.i.6.2 = add nuw nsw i16 %conv.us.i.6.2, 1, !dbg !2290
  %add8.us.i.6.2 = add nuw nsw i16 %add.us.i.6.2, %conv7.us.i.6.2, !dbg !2291
  %shr.us.i.6.2 = lshr i16 %add8.us.i.6.2, 1, !dbg !2292
  %conv9.us.i.6.2 = trunc nuw i16 %shr.us.i.6.2 to i8, !dbg !2293
  %arrayidx11.us.i.6.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 6, !dbg !2295
  store i8 %conv9.us.i.6.2, ptr %arrayidx11.us.i.6.2, align 1, !dbg !2294
    #dbg_value(i64 7, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.7.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 7, !dbg !2288
  %46 = load i8, ptr %arrayidx.us.i.7.2, align 1, !dbg !2288
  %conv.us.i.7.2 = zext i8 %46 to i16, !dbg !2288
  %arrayidx6.us.i.7.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 7, !dbg !2289
  %47 = load i8, ptr %arrayidx6.us.i.7.2, align 1, !dbg !2289
  %conv7.us.i.7.2 = zext i8 %47 to i16, !dbg !2289
  %add.us.i.7.2 = add nuw nsw i16 %conv.us.i.7.2, 1, !dbg !2290
  %add8.us.i.7.2 = add nuw nsw i16 %add.us.i.7.2, %conv7.us.i.7.2, !dbg !2291
  %shr.us.i.7.2 = lshr i16 %add8.us.i.7.2, 1, !dbg !2292
  %conv9.us.i.7.2 = trunc nuw i16 %shr.us.i.7.2 to i8, !dbg !2293
  %arrayidx11.us.i.7.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 7, !dbg !2295
  store i8 %conv9.us.i.7.2, ptr %arrayidx11.us.i.7.2, align 1, !dbg !2294
    #dbg_value(i64 8, !2147, !DIExpression(), !2287)
  %add.ptr.us.i.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 %idx.ext.i, !dbg !2296
    #dbg_value(ptr %add.ptr.us.i.2, !2139, !DIExpression(), !2284)
  %add.ptr13.us.i.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 %idx.ext12.i, !dbg !2297
    #dbg_value(ptr %add.ptr13.us.i.2, !2141, !DIExpression(), !2284)
  %add.ptr15.us.i.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 %idx.ext14.i, !dbg !2298
    #dbg_value(ptr %add.ptr15.us.i.2, !2135, !DIExpression(), !2284)
    #dbg_value(i32 3, !2145, !DIExpression(), !2286)
    #dbg_value(i32 0, !2147, !DIExpression(), !2287)
    #dbg_value(i64 0, !2147, !DIExpression(), !2287)
  %48 = load i8, ptr %add.ptr.us.i.2, align 1, !dbg !2288
  %conv.us.i.320 = zext i8 %48 to i16, !dbg !2288
  %49 = load i8, ptr %add.ptr13.us.i.2, align 1, !dbg !2289
  %conv7.us.i.321 = zext i8 %49 to i16, !dbg !2289
  %add.us.i.322 = add nuw nsw i16 %conv.us.i.320, 1, !dbg !2290
  %add8.us.i.323 = add nuw nsw i16 %add.us.i.322, %conv7.us.i.321, !dbg !2291
  %shr.us.i.324 = lshr i16 %add8.us.i.323, 1, !dbg !2292
  %conv9.us.i.325 = trunc nuw i16 %shr.us.i.324 to i8, !dbg !2293
  store i8 %conv9.us.i.325, ptr %add.ptr15.us.i.2, align 1, !dbg !2294
    #dbg_value(i64 1, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 1, !dbg !2288
  %50 = load i8, ptr %arrayidx.us.i.1.3, align 1, !dbg !2288
  %conv.us.i.1.3 = zext i8 %50 to i16, !dbg !2288
  %arrayidx6.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 1, !dbg !2289
  %51 = load i8, ptr %arrayidx6.us.i.1.3, align 1, !dbg !2289
  %conv7.us.i.1.3 = zext i8 %51 to i16, !dbg !2289
  %add.us.i.1.3 = add nuw nsw i16 %conv.us.i.1.3, 1, !dbg !2290
  %add8.us.i.1.3 = add nuw nsw i16 %add.us.i.1.3, %conv7.us.i.1.3, !dbg !2291
  %shr.us.i.1.3 = lshr i16 %add8.us.i.1.3, 1, !dbg !2292
  %conv9.us.i.1.3 = trunc nuw i16 %shr.us.i.1.3 to i8, !dbg !2293
  %arrayidx11.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 1, !dbg !2295
  store i8 %conv9.us.i.1.3, ptr %arrayidx11.us.i.1.3, align 1, !dbg !2294
    #dbg_value(i64 2, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 2, !dbg !2288
  %52 = load i8, ptr %arrayidx.us.i.2.3, align 1, !dbg !2288
  %conv.us.i.2.3 = zext i8 %52 to i16, !dbg !2288
  %arrayidx6.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 2, !dbg !2289
  %53 = load i8, ptr %arrayidx6.us.i.2.3, align 1, !dbg !2289
  %conv7.us.i.2.3 = zext i8 %53 to i16, !dbg !2289
  %add.us.i.2.3 = add nuw nsw i16 %conv.us.i.2.3, 1, !dbg !2290
  %add8.us.i.2.3 = add nuw nsw i16 %add.us.i.2.3, %conv7.us.i.2.3, !dbg !2291
  %shr.us.i.2.3 = lshr i16 %add8.us.i.2.3, 1, !dbg !2292
  %conv9.us.i.2.3 = trunc nuw i16 %shr.us.i.2.3 to i8, !dbg !2293
  %arrayidx11.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 2, !dbg !2295
  store i8 %conv9.us.i.2.3, ptr %arrayidx11.us.i.2.3, align 1, !dbg !2294
    #dbg_value(i64 3, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 3, !dbg !2288
  %54 = load i8, ptr %arrayidx.us.i.3.3, align 1, !dbg !2288
  %conv.us.i.3.3 = zext i8 %54 to i16, !dbg !2288
  %arrayidx6.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 3, !dbg !2289
  %55 = load i8, ptr %arrayidx6.us.i.3.3, align 1, !dbg !2289
  %conv7.us.i.3.3 = zext i8 %55 to i16, !dbg !2289
  %add.us.i.3.3 = add nuw nsw i16 %conv.us.i.3.3, 1, !dbg !2290
  %add8.us.i.3.3 = add nuw nsw i16 %add.us.i.3.3, %conv7.us.i.3.3, !dbg !2291
  %shr.us.i.3.3 = lshr i16 %add8.us.i.3.3, 1, !dbg !2292
  %conv9.us.i.3.3 = trunc nuw i16 %shr.us.i.3.3 to i8, !dbg !2293
  %arrayidx11.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 3, !dbg !2295
  store i8 %conv9.us.i.3.3, ptr %arrayidx11.us.i.3.3, align 1, !dbg !2294
    #dbg_value(i64 4, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.4.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 4, !dbg !2288
  %56 = load i8, ptr %arrayidx.us.i.4.3, align 1, !dbg !2288
  %conv.us.i.4.3 = zext i8 %56 to i16, !dbg !2288
  %arrayidx6.us.i.4.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 4, !dbg !2289
  %57 = load i8, ptr %arrayidx6.us.i.4.3, align 1, !dbg !2289
  %conv7.us.i.4.3 = zext i8 %57 to i16, !dbg !2289
  %add.us.i.4.3 = add nuw nsw i16 %conv.us.i.4.3, 1, !dbg !2290
  %add8.us.i.4.3 = add nuw nsw i16 %add.us.i.4.3, %conv7.us.i.4.3, !dbg !2291
  %shr.us.i.4.3 = lshr i16 %add8.us.i.4.3, 1, !dbg !2292
  %conv9.us.i.4.3 = trunc nuw i16 %shr.us.i.4.3 to i8, !dbg !2293
  %arrayidx11.us.i.4.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 4, !dbg !2295
  store i8 %conv9.us.i.4.3, ptr %arrayidx11.us.i.4.3, align 1, !dbg !2294
    #dbg_value(i64 5, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.5.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 5, !dbg !2288
  %58 = load i8, ptr %arrayidx.us.i.5.3, align 1, !dbg !2288
  %conv.us.i.5.3 = zext i8 %58 to i16, !dbg !2288
  %arrayidx6.us.i.5.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 5, !dbg !2289
  %59 = load i8, ptr %arrayidx6.us.i.5.3, align 1, !dbg !2289
  %conv7.us.i.5.3 = zext i8 %59 to i16, !dbg !2289
  %add.us.i.5.3 = add nuw nsw i16 %conv.us.i.5.3, 1, !dbg !2290
  %add8.us.i.5.3 = add nuw nsw i16 %add.us.i.5.3, %conv7.us.i.5.3, !dbg !2291
  %shr.us.i.5.3 = lshr i16 %add8.us.i.5.3, 1, !dbg !2292
  %conv9.us.i.5.3 = trunc nuw i16 %shr.us.i.5.3 to i8, !dbg !2293
  %arrayidx11.us.i.5.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 5, !dbg !2295
  store i8 %conv9.us.i.5.3, ptr %arrayidx11.us.i.5.3, align 1, !dbg !2294
    #dbg_value(i64 6, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.6.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 6, !dbg !2288
  %60 = load i8, ptr %arrayidx.us.i.6.3, align 1, !dbg !2288
  %conv.us.i.6.3 = zext i8 %60 to i16, !dbg !2288
  %arrayidx6.us.i.6.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 6, !dbg !2289
  %61 = load i8, ptr %arrayidx6.us.i.6.3, align 1, !dbg !2289
  %conv7.us.i.6.3 = zext i8 %61 to i16, !dbg !2289
  %add.us.i.6.3 = add nuw nsw i16 %conv.us.i.6.3, 1, !dbg !2290
  %add8.us.i.6.3 = add nuw nsw i16 %add.us.i.6.3, %conv7.us.i.6.3, !dbg !2291
  %shr.us.i.6.3 = lshr i16 %add8.us.i.6.3, 1, !dbg !2292
  %conv9.us.i.6.3 = trunc nuw i16 %shr.us.i.6.3 to i8, !dbg !2293
  %arrayidx11.us.i.6.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 6, !dbg !2295
  store i8 %conv9.us.i.6.3, ptr %arrayidx11.us.i.6.3, align 1, !dbg !2294
    #dbg_value(i64 7, !2147, !DIExpression(), !2287)
  %arrayidx.us.i.7.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 7, !dbg !2288
  %62 = load i8, ptr %arrayidx.us.i.7.3, align 1, !dbg !2288
  %conv.us.i.7.3 = zext i8 %62 to i16, !dbg !2288
  %arrayidx6.us.i.7.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 7, !dbg !2289
  %63 = load i8, ptr %arrayidx6.us.i.7.3, align 1, !dbg !2289
  %conv7.us.i.7.3 = zext i8 %63 to i16, !dbg !2289
  %add.us.i.7.3 = add nuw nsw i16 %conv.us.i.7.3, 1, !dbg !2290
  %add8.us.i.7.3 = add nuw nsw i16 %add.us.i.7.3, %conv7.us.i.7.3, !dbg !2291
  %shr.us.i.7.3 = lshr i16 %add8.us.i.7.3, 1, !dbg !2292
  %conv9.us.i.7.3 = trunc nuw i16 %shr.us.i.7.3 to i8, !dbg !2293
  %arrayidx11.us.i.7.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 7, !dbg !2295
  store i8 %conv9.us.i.7.3, ptr %arrayidx11.us.i.7.3, align 1, !dbg !2294
    #dbg_value(i64 8, !2147, !DIExpression(), !2287)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i.2, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2284)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i.2, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2284)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i.2, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2284)
    #dbg_value(i32 4, !2145, !DIExpression(), !2286)
  br label %if.end, !dbg !2283

if.else:                                          ; preds = %entry
  tail call fastcc void @pixel_avg_weight_wxh(ptr noundef %pix1, i32 noundef %i_stride_pix1, ptr noundef %pix2, i32 noundef %i_stride_pix2, ptr noundef %pix3, i32 noundef %i_stride_pix3, i32 noundef 8, i32 noundef 4, i32 noundef %weight), !dbg !2281
  br label %if.end

if.end:                                           ; preds = %if.then, %if.else
  ret void, !dbg !2283
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_4x8(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #0 !dbg !2299 {
entry:
    #dbg_value(ptr %pix1, !2301, !DIExpression(), !2308)
    #dbg_value(i32 %i_stride_pix1, !2302, !DIExpression(), !2308)
    #dbg_value(ptr %pix2, !2303, !DIExpression(), !2308)
    #dbg_value(i32 %i_stride_pix2, !2304, !DIExpression(), !2308)
    #dbg_value(ptr %pix3, !2305, !DIExpression(), !2308)
    #dbg_value(i32 %i_stride_pix3, !2306, !DIExpression(), !2308)
    #dbg_value(i32 %weight, !2307, !DIExpression(), !2308)
  %cmp = icmp eq i32 %weight, 32, !dbg !2309
  br i1 %cmp, label %if.then, label %if.else, !dbg !2311

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2312)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2312)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2312)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2312)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2312)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2312)
    #dbg_value(i32 4, !2143, !DIExpression(), !2312)
    #dbg_value(i32 8, !2144, !DIExpression(), !2312)
    #dbg_value(i32 0, !2145, !DIExpression(), !2314)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2314)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2312)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2312)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2312)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %0 = load i8, ptr %pix2, align 1, !dbg !2316
  %conv.us.i = zext i8 %0 to i16, !dbg !2316
  %1 = load i8, ptr %pix3, align 1, !dbg !2317
  %conv7.us.i = zext i8 %1 to i16, !dbg !2317
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2318
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2319
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2320
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2321
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2316
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2316
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2316
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2317
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2317
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2317
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2318
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2319
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2320
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2321
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2323
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2316
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2316
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2316
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2317
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2317
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2317
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2318
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2319
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2320
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2321
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2323
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2316
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2316
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2316
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2317
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2317
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2317
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2318
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2319
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2320
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2321
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2323
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2312)
    #dbg_value(i32 1, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %8 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2316
  %conv.us.i.112 = zext i8 %8 to i16, !dbg !2316
  %9 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2317
  %conv7.us.i.113 = zext i8 %9 to i16, !dbg !2317
  %add.us.i.114 = add nuw nsw i16 %conv.us.i.112, 1, !dbg !2318
  %add8.us.i.115 = add nuw nsw i16 %add.us.i.114, %conv7.us.i.113, !dbg !2319
  %shr.us.i.116 = lshr i16 %add8.us.i.115, 1, !dbg !2320
  %conv9.us.i.117 = trunc nuw i16 %shr.us.i.116 to i8, !dbg !2321
  store i8 %conv9.us.i.117, ptr %add.ptr15.us.i, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2316
  %10 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2316
  %conv.us.i.1.1 = zext i8 %10 to i16, !dbg !2316
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2317
  %11 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2317
  %conv7.us.i.1.1 = zext i8 %11 to i16, !dbg !2317
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2318
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2319
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2320
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2321
  %arrayidx11.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.1, ptr %arrayidx11.us.i.1.1, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 2, !dbg !2316
  %12 = load i8, ptr %arrayidx.us.i.2.1, align 1, !dbg !2316
  %conv.us.i.2.1 = zext i8 %12 to i16, !dbg !2316
  %arrayidx6.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 2, !dbg !2317
  %13 = load i8, ptr %arrayidx6.us.i.2.1, align 1, !dbg !2317
  %conv7.us.i.2.1 = zext i8 %13 to i16, !dbg !2317
  %add.us.i.2.1 = add nuw nsw i16 %conv.us.i.2.1, 1, !dbg !2318
  %add8.us.i.2.1 = add nuw nsw i16 %add.us.i.2.1, %conv7.us.i.2.1, !dbg !2319
  %shr.us.i.2.1 = lshr i16 %add8.us.i.2.1, 1, !dbg !2320
  %conv9.us.i.2.1 = trunc nuw i16 %shr.us.i.2.1 to i8, !dbg !2321
  %arrayidx11.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.1, ptr %arrayidx11.us.i.2.1, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 3, !dbg !2316
  %14 = load i8, ptr %arrayidx.us.i.3.1, align 1, !dbg !2316
  %conv.us.i.3.1 = zext i8 %14 to i16, !dbg !2316
  %arrayidx6.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 3, !dbg !2317
  %15 = load i8, ptr %arrayidx6.us.i.3.1, align 1, !dbg !2317
  %conv7.us.i.3.1 = zext i8 %15 to i16, !dbg !2317
  %add.us.i.3.1 = add nuw nsw i16 %conv.us.i.3.1, 1, !dbg !2318
  %add8.us.i.3.1 = add nuw nsw i16 %add.us.i.3.1, %conv7.us.i.3.1, !dbg !2319
  %shr.us.i.3.1 = lshr i16 %add8.us.i.3.1, 1, !dbg !2320
  %conv9.us.i.3.1 = trunc nuw i16 %shr.us.i.3.1 to i8, !dbg !2321
  %arrayidx11.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.1, ptr %arrayidx11.us.i.3.1, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.1, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.1, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.1, !2135, !DIExpression(), !2312)
    #dbg_value(i32 2, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %16 = load i8, ptr %add.ptr.us.i.1, align 1, !dbg !2316
  %conv.us.i.218 = zext i8 %16 to i16, !dbg !2316
  %17 = load i8, ptr %add.ptr13.us.i.1, align 1, !dbg !2317
  %conv7.us.i.219 = zext i8 %17 to i16, !dbg !2317
  %add.us.i.220 = add nuw nsw i16 %conv.us.i.218, 1, !dbg !2318
  %add8.us.i.221 = add nuw nsw i16 %add.us.i.220, %conv7.us.i.219, !dbg !2319
  %shr.us.i.222 = lshr i16 %add8.us.i.221, 1, !dbg !2320
  %conv9.us.i.223 = trunc nuw i16 %shr.us.i.222 to i8, !dbg !2321
  store i8 %conv9.us.i.223, ptr %add.ptr15.us.i.1, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 1, !dbg !2316
  %18 = load i8, ptr %arrayidx.us.i.1.2, align 1, !dbg !2316
  %conv.us.i.1.2 = zext i8 %18 to i16, !dbg !2316
  %arrayidx6.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 1, !dbg !2317
  %19 = load i8, ptr %arrayidx6.us.i.1.2, align 1, !dbg !2317
  %conv7.us.i.1.2 = zext i8 %19 to i16, !dbg !2317
  %add.us.i.1.2 = add nuw nsw i16 %conv.us.i.1.2, 1, !dbg !2318
  %add8.us.i.1.2 = add nuw nsw i16 %add.us.i.1.2, %conv7.us.i.1.2, !dbg !2319
  %shr.us.i.1.2 = lshr i16 %add8.us.i.1.2, 1, !dbg !2320
  %conv9.us.i.1.2 = trunc nuw i16 %shr.us.i.1.2 to i8, !dbg !2321
  %arrayidx11.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.2, ptr %arrayidx11.us.i.1.2, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 2, !dbg !2316
  %20 = load i8, ptr %arrayidx.us.i.2.2, align 1, !dbg !2316
  %conv.us.i.2.2 = zext i8 %20 to i16, !dbg !2316
  %arrayidx6.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 2, !dbg !2317
  %21 = load i8, ptr %arrayidx6.us.i.2.2, align 1, !dbg !2317
  %conv7.us.i.2.2 = zext i8 %21 to i16, !dbg !2317
  %add.us.i.2.2 = add nuw nsw i16 %conv.us.i.2.2, 1, !dbg !2318
  %add8.us.i.2.2 = add nuw nsw i16 %add.us.i.2.2, %conv7.us.i.2.2, !dbg !2319
  %shr.us.i.2.2 = lshr i16 %add8.us.i.2.2, 1, !dbg !2320
  %conv9.us.i.2.2 = trunc nuw i16 %shr.us.i.2.2 to i8, !dbg !2321
  %arrayidx11.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.2, ptr %arrayidx11.us.i.2.2, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 3, !dbg !2316
  %22 = load i8, ptr %arrayidx.us.i.3.2, align 1, !dbg !2316
  %conv.us.i.3.2 = zext i8 %22 to i16, !dbg !2316
  %arrayidx6.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 3, !dbg !2317
  %23 = load i8, ptr %arrayidx6.us.i.3.2, align 1, !dbg !2317
  %conv7.us.i.3.2 = zext i8 %23 to i16, !dbg !2317
  %add.us.i.3.2 = add nuw nsw i16 %conv.us.i.3.2, 1, !dbg !2318
  %add8.us.i.3.2 = add nuw nsw i16 %add.us.i.3.2, %conv7.us.i.3.2, !dbg !2319
  %shr.us.i.3.2 = lshr i16 %add8.us.i.3.2, 1, !dbg !2320
  %conv9.us.i.3.2 = trunc nuw i16 %shr.us.i.3.2 to i8, !dbg !2321
  %arrayidx11.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.2, ptr %arrayidx11.us.i.3.2, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.2, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.2, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.2, !2135, !DIExpression(), !2312)
    #dbg_value(i32 3, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %24 = load i8, ptr %add.ptr.us.i.2, align 1, !dbg !2316
  %conv.us.i.324 = zext i8 %24 to i16, !dbg !2316
  %25 = load i8, ptr %add.ptr13.us.i.2, align 1, !dbg !2317
  %conv7.us.i.325 = zext i8 %25 to i16, !dbg !2317
  %add.us.i.326 = add nuw nsw i16 %conv.us.i.324, 1, !dbg !2318
  %add8.us.i.327 = add nuw nsw i16 %add.us.i.326, %conv7.us.i.325, !dbg !2319
  %shr.us.i.328 = lshr i16 %add8.us.i.327, 1, !dbg !2320
  %conv9.us.i.329 = trunc nuw i16 %shr.us.i.328 to i8, !dbg !2321
  store i8 %conv9.us.i.329, ptr %add.ptr15.us.i.2, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 1, !dbg !2316
  %26 = load i8, ptr %arrayidx.us.i.1.3, align 1, !dbg !2316
  %conv.us.i.1.3 = zext i8 %26 to i16, !dbg !2316
  %arrayidx6.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 1, !dbg !2317
  %27 = load i8, ptr %arrayidx6.us.i.1.3, align 1, !dbg !2317
  %conv7.us.i.1.3 = zext i8 %27 to i16, !dbg !2317
  %add.us.i.1.3 = add nuw nsw i16 %conv.us.i.1.3, 1, !dbg !2318
  %add8.us.i.1.3 = add nuw nsw i16 %add.us.i.1.3, %conv7.us.i.1.3, !dbg !2319
  %shr.us.i.1.3 = lshr i16 %add8.us.i.1.3, 1, !dbg !2320
  %conv9.us.i.1.3 = trunc nuw i16 %shr.us.i.1.3 to i8, !dbg !2321
  %arrayidx11.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.3, ptr %arrayidx11.us.i.1.3, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 2, !dbg !2316
  %28 = load i8, ptr %arrayidx.us.i.2.3, align 1, !dbg !2316
  %conv.us.i.2.3 = zext i8 %28 to i16, !dbg !2316
  %arrayidx6.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 2, !dbg !2317
  %29 = load i8, ptr %arrayidx6.us.i.2.3, align 1, !dbg !2317
  %conv7.us.i.2.3 = zext i8 %29 to i16, !dbg !2317
  %add.us.i.2.3 = add nuw nsw i16 %conv.us.i.2.3, 1, !dbg !2318
  %add8.us.i.2.3 = add nuw nsw i16 %add.us.i.2.3, %conv7.us.i.2.3, !dbg !2319
  %shr.us.i.2.3 = lshr i16 %add8.us.i.2.3, 1, !dbg !2320
  %conv9.us.i.2.3 = trunc nuw i16 %shr.us.i.2.3 to i8, !dbg !2321
  %arrayidx11.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.3, ptr %arrayidx11.us.i.2.3, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 3, !dbg !2316
  %30 = load i8, ptr %arrayidx.us.i.3.3, align 1, !dbg !2316
  %conv.us.i.3.3 = zext i8 %30 to i16, !dbg !2316
  %arrayidx6.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 3, !dbg !2317
  %31 = load i8, ptr %arrayidx6.us.i.3.3, align 1, !dbg !2317
  %conv7.us.i.3.3 = zext i8 %31 to i16, !dbg !2317
  %add.us.i.3.3 = add nuw nsw i16 %conv.us.i.3.3, 1, !dbg !2318
  %add8.us.i.3.3 = add nuw nsw i16 %add.us.i.3.3, %conv7.us.i.3.3, !dbg !2319
  %shr.us.i.3.3 = lshr i16 %add8.us.i.3.3, 1, !dbg !2320
  %conv9.us.i.3.3 = trunc nuw i16 %shr.us.i.3.3 to i8, !dbg !2321
  %arrayidx11.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.3, ptr %arrayidx11.us.i.3.3, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.3, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.3, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.3, !2135, !DIExpression(), !2312)
    #dbg_value(i32 4, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %32 = load i8, ptr %add.ptr.us.i.3, align 1, !dbg !2316
  %conv.us.i.4 = zext i8 %32 to i16, !dbg !2316
  %33 = load i8, ptr %add.ptr13.us.i.3, align 1, !dbg !2317
  %conv7.us.i.4 = zext i8 %33 to i16, !dbg !2317
  %add.us.i.4 = add nuw nsw i16 %conv.us.i.4, 1, !dbg !2318
  %add8.us.i.4 = add nuw nsw i16 %add.us.i.4, %conv7.us.i.4, !dbg !2319
  %shr.us.i.4 = lshr i16 %add8.us.i.4, 1, !dbg !2320
  %conv9.us.i.4 = trunc nuw i16 %shr.us.i.4 to i8, !dbg !2321
  store i8 %conv9.us.i.4, ptr %add.ptr15.us.i.3, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.4 = getelementptr inbounds i8, ptr %add.ptr.us.i.3, i64 1, !dbg !2316
  %34 = load i8, ptr %arrayidx.us.i.1.4, align 1, !dbg !2316
  %conv.us.i.1.4 = zext i8 %34 to i16, !dbg !2316
  %arrayidx6.us.i.1.4 = getelementptr inbounds i8, ptr %add.ptr13.us.i.3, i64 1, !dbg !2317
  %35 = load i8, ptr %arrayidx6.us.i.1.4, align 1, !dbg !2317
  %conv7.us.i.1.4 = zext i8 %35 to i16, !dbg !2317
  %add.us.i.1.4 = add nuw nsw i16 %conv.us.i.1.4, 1, !dbg !2318
  %add8.us.i.1.4 = add nuw nsw i16 %add.us.i.1.4, %conv7.us.i.1.4, !dbg !2319
  %shr.us.i.1.4 = lshr i16 %add8.us.i.1.4, 1, !dbg !2320
  %conv9.us.i.1.4 = trunc nuw i16 %shr.us.i.1.4 to i8, !dbg !2321
  %arrayidx11.us.i.1.4 = getelementptr inbounds i8, ptr %add.ptr15.us.i.3, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.4, ptr %arrayidx11.us.i.1.4, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.4 = getelementptr inbounds i8, ptr %add.ptr.us.i.3, i64 2, !dbg !2316
  %36 = load i8, ptr %arrayidx.us.i.2.4, align 1, !dbg !2316
  %conv.us.i.2.4 = zext i8 %36 to i16, !dbg !2316
  %arrayidx6.us.i.2.4 = getelementptr inbounds i8, ptr %add.ptr13.us.i.3, i64 2, !dbg !2317
  %37 = load i8, ptr %arrayidx6.us.i.2.4, align 1, !dbg !2317
  %conv7.us.i.2.4 = zext i8 %37 to i16, !dbg !2317
  %add.us.i.2.4 = add nuw nsw i16 %conv.us.i.2.4, 1, !dbg !2318
  %add8.us.i.2.4 = add nuw nsw i16 %add.us.i.2.4, %conv7.us.i.2.4, !dbg !2319
  %shr.us.i.2.4 = lshr i16 %add8.us.i.2.4, 1, !dbg !2320
  %conv9.us.i.2.4 = trunc nuw i16 %shr.us.i.2.4 to i8, !dbg !2321
  %arrayidx11.us.i.2.4 = getelementptr inbounds i8, ptr %add.ptr15.us.i.3, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.4, ptr %arrayidx11.us.i.2.4, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.4 = getelementptr inbounds i8, ptr %add.ptr.us.i.3, i64 3, !dbg !2316
  %38 = load i8, ptr %arrayidx.us.i.3.4, align 1, !dbg !2316
  %conv.us.i.3.4 = zext i8 %38 to i16, !dbg !2316
  %arrayidx6.us.i.3.4 = getelementptr inbounds i8, ptr %add.ptr13.us.i.3, i64 3, !dbg !2317
  %39 = load i8, ptr %arrayidx6.us.i.3.4, align 1, !dbg !2317
  %conv7.us.i.3.4 = zext i8 %39 to i16, !dbg !2317
  %add.us.i.3.4 = add nuw nsw i16 %conv.us.i.3.4, 1, !dbg !2318
  %add8.us.i.3.4 = add nuw nsw i16 %add.us.i.3.4, %conv7.us.i.3.4, !dbg !2319
  %shr.us.i.3.4 = lshr i16 %add8.us.i.3.4, 1, !dbg !2320
  %conv9.us.i.3.4 = trunc nuw i16 %shr.us.i.3.4 to i8, !dbg !2321
  %arrayidx11.us.i.3.4 = getelementptr inbounds i8, ptr %add.ptr15.us.i.3, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.4, ptr %arrayidx11.us.i.3.4, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.4 = getelementptr inbounds i8, ptr %add.ptr.us.i.3, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.4, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.4 = getelementptr inbounds i8, ptr %add.ptr13.us.i.3, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.4, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.4 = getelementptr inbounds i8, ptr %add.ptr15.us.i.3, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.4, !2135, !DIExpression(), !2312)
    #dbg_value(i32 5, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %40 = load i8, ptr %add.ptr.us.i.4, align 1, !dbg !2316
  %conv.us.i.5 = zext i8 %40 to i16, !dbg !2316
  %41 = load i8, ptr %add.ptr13.us.i.4, align 1, !dbg !2317
  %conv7.us.i.5 = zext i8 %41 to i16, !dbg !2317
  %add.us.i.5 = add nuw nsw i16 %conv.us.i.5, 1, !dbg !2318
  %add8.us.i.5 = add nuw nsw i16 %add.us.i.5, %conv7.us.i.5, !dbg !2319
  %shr.us.i.5 = lshr i16 %add8.us.i.5, 1, !dbg !2320
  %conv9.us.i.5 = trunc nuw i16 %shr.us.i.5 to i8, !dbg !2321
  store i8 %conv9.us.i.5, ptr %add.ptr15.us.i.4, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.5 = getelementptr inbounds i8, ptr %add.ptr.us.i.4, i64 1, !dbg !2316
  %42 = load i8, ptr %arrayidx.us.i.1.5, align 1, !dbg !2316
  %conv.us.i.1.5 = zext i8 %42 to i16, !dbg !2316
  %arrayidx6.us.i.1.5 = getelementptr inbounds i8, ptr %add.ptr13.us.i.4, i64 1, !dbg !2317
  %43 = load i8, ptr %arrayidx6.us.i.1.5, align 1, !dbg !2317
  %conv7.us.i.1.5 = zext i8 %43 to i16, !dbg !2317
  %add.us.i.1.5 = add nuw nsw i16 %conv.us.i.1.5, 1, !dbg !2318
  %add8.us.i.1.5 = add nuw nsw i16 %add.us.i.1.5, %conv7.us.i.1.5, !dbg !2319
  %shr.us.i.1.5 = lshr i16 %add8.us.i.1.5, 1, !dbg !2320
  %conv9.us.i.1.5 = trunc nuw i16 %shr.us.i.1.5 to i8, !dbg !2321
  %arrayidx11.us.i.1.5 = getelementptr inbounds i8, ptr %add.ptr15.us.i.4, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.5, ptr %arrayidx11.us.i.1.5, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.5 = getelementptr inbounds i8, ptr %add.ptr.us.i.4, i64 2, !dbg !2316
  %44 = load i8, ptr %arrayidx.us.i.2.5, align 1, !dbg !2316
  %conv.us.i.2.5 = zext i8 %44 to i16, !dbg !2316
  %arrayidx6.us.i.2.5 = getelementptr inbounds i8, ptr %add.ptr13.us.i.4, i64 2, !dbg !2317
  %45 = load i8, ptr %arrayidx6.us.i.2.5, align 1, !dbg !2317
  %conv7.us.i.2.5 = zext i8 %45 to i16, !dbg !2317
  %add.us.i.2.5 = add nuw nsw i16 %conv.us.i.2.5, 1, !dbg !2318
  %add8.us.i.2.5 = add nuw nsw i16 %add.us.i.2.5, %conv7.us.i.2.5, !dbg !2319
  %shr.us.i.2.5 = lshr i16 %add8.us.i.2.5, 1, !dbg !2320
  %conv9.us.i.2.5 = trunc nuw i16 %shr.us.i.2.5 to i8, !dbg !2321
  %arrayidx11.us.i.2.5 = getelementptr inbounds i8, ptr %add.ptr15.us.i.4, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.5, ptr %arrayidx11.us.i.2.5, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.5 = getelementptr inbounds i8, ptr %add.ptr.us.i.4, i64 3, !dbg !2316
  %46 = load i8, ptr %arrayidx.us.i.3.5, align 1, !dbg !2316
  %conv.us.i.3.5 = zext i8 %46 to i16, !dbg !2316
  %arrayidx6.us.i.3.5 = getelementptr inbounds i8, ptr %add.ptr13.us.i.4, i64 3, !dbg !2317
  %47 = load i8, ptr %arrayidx6.us.i.3.5, align 1, !dbg !2317
  %conv7.us.i.3.5 = zext i8 %47 to i16, !dbg !2317
  %add.us.i.3.5 = add nuw nsw i16 %conv.us.i.3.5, 1, !dbg !2318
  %add8.us.i.3.5 = add nuw nsw i16 %add.us.i.3.5, %conv7.us.i.3.5, !dbg !2319
  %shr.us.i.3.5 = lshr i16 %add8.us.i.3.5, 1, !dbg !2320
  %conv9.us.i.3.5 = trunc nuw i16 %shr.us.i.3.5 to i8, !dbg !2321
  %arrayidx11.us.i.3.5 = getelementptr inbounds i8, ptr %add.ptr15.us.i.4, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.5, ptr %arrayidx11.us.i.3.5, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.5 = getelementptr inbounds i8, ptr %add.ptr.us.i.4, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.5, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.5 = getelementptr inbounds i8, ptr %add.ptr13.us.i.4, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.5, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.5 = getelementptr inbounds i8, ptr %add.ptr15.us.i.4, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.5, !2135, !DIExpression(), !2312)
    #dbg_value(i32 6, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %48 = load i8, ptr %add.ptr.us.i.5, align 1, !dbg !2316
  %conv.us.i.6 = zext i8 %48 to i16, !dbg !2316
  %49 = load i8, ptr %add.ptr13.us.i.5, align 1, !dbg !2317
  %conv7.us.i.6 = zext i8 %49 to i16, !dbg !2317
  %add.us.i.6 = add nuw nsw i16 %conv.us.i.6, 1, !dbg !2318
  %add8.us.i.6 = add nuw nsw i16 %add.us.i.6, %conv7.us.i.6, !dbg !2319
  %shr.us.i.6 = lshr i16 %add8.us.i.6, 1, !dbg !2320
  %conv9.us.i.6 = trunc nuw i16 %shr.us.i.6 to i8, !dbg !2321
  store i8 %conv9.us.i.6, ptr %add.ptr15.us.i.5, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.6 = getelementptr inbounds i8, ptr %add.ptr.us.i.5, i64 1, !dbg !2316
  %50 = load i8, ptr %arrayidx.us.i.1.6, align 1, !dbg !2316
  %conv.us.i.1.6 = zext i8 %50 to i16, !dbg !2316
  %arrayidx6.us.i.1.6 = getelementptr inbounds i8, ptr %add.ptr13.us.i.5, i64 1, !dbg !2317
  %51 = load i8, ptr %arrayidx6.us.i.1.6, align 1, !dbg !2317
  %conv7.us.i.1.6 = zext i8 %51 to i16, !dbg !2317
  %add.us.i.1.6 = add nuw nsw i16 %conv.us.i.1.6, 1, !dbg !2318
  %add8.us.i.1.6 = add nuw nsw i16 %add.us.i.1.6, %conv7.us.i.1.6, !dbg !2319
  %shr.us.i.1.6 = lshr i16 %add8.us.i.1.6, 1, !dbg !2320
  %conv9.us.i.1.6 = trunc nuw i16 %shr.us.i.1.6 to i8, !dbg !2321
  %arrayidx11.us.i.1.6 = getelementptr inbounds i8, ptr %add.ptr15.us.i.5, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.6, ptr %arrayidx11.us.i.1.6, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.6 = getelementptr inbounds i8, ptr %add.ptr.us.i.5, i64 2, !dbg !2316
  %52 = load i8, ptr %arrayidx.us.i.2.6, align 1, !dbg !2316
  %conv.us.i.2.6 = zext i8 %52 to i16, !dbg !2316
  %arrayidx6.us.i.2.6 = getelementptr inbounds i8, ptr %add.ptr13.us.i.5, i64 2, !dbg !2317
  %53 = load i8, ptr %arrayidx6.us.i.2.6, align 1, !dbg !2317
  %conv7.us.i.2.6 = zext i8 %53 to i16, !dbg !2317
  %add.us.i.2.6 = add nuw nsw i16 %conv.us.i.2.6, 1, !dbg !2318
  %add8.us.i.2.6 = add nuw nsw i16 %add.us.i.2.6, %conv7.us.i.2.6, !dbg !2319
  %shr.us.i.2.6 = lshr i16 %add8.us.i.2.6, 1, !dbg !2320
  %conv9.us.i.2.6 = trunc nuw i16 %shr.us.i.2.6 to i8, !dbg !2321
  %arrayidx11.us.i.2.6 = getelementptr inbounds i8, ptr %add.ptr15.us.i.5, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.6, ptr %arrayidx11.us.i.2.6, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.6 = getelementptr inbounds i8, ptr %add.ptr.us.i.5, i64 3, !dbg !2316
  %54 = load i8, ptr %arrayidx.us.i.3.6, align 1, !dbg !2316
  %conv.us.i.3.6 = zext i8 %54 to i16, !dbg !2316
  %arrayidx6.us.i.3.6 = getelementptr inbounds i8, ptr %add.ptr13.us.i.5, i64 3, !dbg !2317
  %55 = load i8, ptr %arrayidx6.us.i.3.6, align 1, !dbg !2317
  %conv7.us.i.3.6 = zext i8 %55 to i16, !dbg !2317
  %add.us.i.3.6 = add nuw nsw i16 %conv.us.i.3.6, 1, !dbg !2318
  %add8.us.i.3.6 = add nuw nsw i16 %add.us.i.3.6, %conv7.us.i.3.6, !dbg !2319
  %shr.us.i.3.6 = lshr i16 %add8.us.i.3.6, 1, !dbg !2320
  %conv9.us.i.3.6 = trunc nuw i16 %shr.us.i.3.6 to i8, !dbg !2321
  %arrayidx11.us.i.3.6 = getelementptr inbounds i8, ptr %add.ptr15.us.i.5, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.6, ptr %arrayidx11.us.i.3.6, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
  %add.ptr.us.i.6 = getelementptr inbounds i8, ptr %add.ptr.us.i.5, i64 %idx.ext.i, !dbg !2324
    #dbg_value(ptr %add.ptr.us.i.6, !2139, !DIExpression(), !2312)
  %add.ptr13.us.i.6 = getelementptr inbounds i8, ptr %add.ptr13.us.i.5, i64 %idx.ext12.i, !dbg !2325
    #dbg_value(ptr %add.ptr13.us.i.6, !2141, !DIExpression(), !2312)
  %add.ptr15.us.i.6 = getelementptr inbounds i8, ptr %add.ptr15.us.i.5, i64 %idx.ext14.i, !dbg !2326
    #dbg_value(ptr %add.ptr15.us.i.6, !2135, !DIExpression(), !2312)
    #dbg_value(i32 7, !2145, !DIExpression(), !2314)
    #dbg_value(i32 0, !2147, !DIExpression(), !2315)
    #dbg_value(i64 0, !2147, !DIExpression(), !2315)
  %56 = load i8, ptr %add.ptr.us.i.6, align 1, !dbg !2316
  %conv.us.i.7 = zext i8 %56 to i16, !dbg !2316
  %57 = load i8, ptr %add.ptr13.us.i.6, align 1, !dbg !2317
  %conv7.us.i.7 = zext i8 %57 to i16, !dbg !2317
  %add.us.i.7 = add nuw nsw i16 %conv.us.i.7, 1, !dbg !2318
  %add8.us.i.7 = add nuw nsw i16 %add.us.i.7, %conv7.us.i.7, !dbg !2319
  %shr.us.i.7 = lshr i16 %add8.us.i.7, 1, !dbg !2320
  %conv9.us.i.7 = trunc nuw i16 %shr.us.i.7 to i8, !dbg !2321
  store i8 %conv9.us.i.7, ptr %add.ptr15.us.i.6, align 1, !dbg !2322
    #dbg_value(i64 1, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.1.7 = getelementptr inbounds i8, ptr %add.ptr.us.i.6, i64 1, !dbg !2316
  %58 = load i8, ptr %arrayidx.us.i.1.7, align 1, !dbg !2316
  %conv.us.i.1.7 = zext i8 %58 to i16, !dbg !2316
  %arrayidx6.us.i.1.7 = getelementptr inbounds i8, ptr %add.ptr13.us.i.6, i64 1, !dbg !2317
  %59 = load i8, ptr %arrayidx6.us.i.1.7, align 1, !dbg !2317
  %conv7.us.i.1.7 = zext i8 %59 to i16, !dbg !2317
  %add.us.i.1.7 = add nuw nsw i16 %conv.us.i.1.7, 1, !dbg !2318
  %add8.us.i.1.7 = add nuw nsw i16 %add.us.i.1.7, %conv7.us.i.1.7, !dbg !2319
  %shr.us.i.1.7 = lshr i16 %add8.us.i.1.7, 1, !dbg !2320
  %conv9.us.i.1.7 = trunc nuw i16 %shr.us.i.1.7 to i8, !dbg !2321
  %arrayidx11.us.i.1.7 = getelementptr inbounds i8, ptr %add.ptr15.us.i.6, i64 1, !dbg !2323
  store i8 %conv9.us.i.1.7, ptr %arrayidx11.us.i.1.7, align 1, !dbg !2322
    #dbg_value(i64 2, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.2.7 = getelementptr inbounds i8, ptr %add.ptr.us.i.6, i64 2, !dbg !2316
  %60 = load i8, ptr %arrayidx.us.i.2.7, align 1, !dbg !2316
  %conv.us.i.2.7 = zext i8 %60 to i16, !dbg !2316
  %arrayidx6.us.i.2.7 = getelementptr inbounds i8, ptr %add.ptr13.us.i.6, i64 2, !dbg !2317
  %61 = load i8, ptr %arrayidx6.us.i.2.7, align 1, !dbg !2317
  %conv7.us.i.2.7 = zext i8 %61 to i16, !dbg !2317
  %add.us.i.2.7 = add nuw nsw i16 %conv.us.i.2.7, 1, !dbg !2318
  %add8.us.i.2.7 = add nuw nsw i16 %add.us.i.2.7, %conv7.us.i.2.7, !dbg !2319
  %shr.us.i.2.7 = lshr i16 %add8.us.i.2.7, 1, !dbg !2320
  %conv9.us.i.2.7 = trunc nuw i16 %shr.us.i.2.7 to i8, !dbg !2321
  %arrayidx11.us.i.2.7 = getelementptr inbounds i8, ptr %add.ptr15.us.i.6, i64 2, !dbg !2323
  store i8 %conv9.us.i.2.7, ptr %arrayidx11.us.i.2.7, align 1, !dbg !2322
    #dbg_value(i64 3, !2147, !DIExpression(), !2315)
  %arrayidx.us.i.3.7 = getelementptr inbounds i8, ptr %add.ptr.us.i.6, i64 3, !dbg !2316
  %62 = load i8, ptr %arrayidx.us.i.3.7, align 1, !dbg !2316
  %conv.us.i.3.7 = zext i8 %62 to i16, !dbg !2316
  %arrayidx6.us.i.3.7 = getelementptr inbounds i8, ptr %add.ptr13.us.i.6, i64 3, !dbg !2317
  %63 = load i8, ptr %arrayidx6.us.i.3.7, align 1, !dbg !2317
  %conv7.us.i.3.7 = zext i8 %63 to i16, !dbg !2317
  %add.us.i.3.7 = add nuw nsw i16 %conv.us.i.3.7, 1, !dbg !2318
  %add8.us.i.3.7 = add nuw nsw i16 %add.us.i.3.7, %conv7.us.i.3.7, !dbg !2319
  %shr.us.i.3.7 = lshr i16 %add8.us.i.3.7, 1, !dbg !2320
  %conv9.us.i.3.7 = trunc nuw i16 %shr.us.i.3.7 to i8, !dbg !2321
  %arrayidx11.us.i.3.7 = getelementptr inbounds i8, ptr %add.ptr15.us.i.6, i64 3, !dbg !2323
  store i8 %conv9.us.i.3.7, ptr %arrayidx11.us.i.3.7, align 1, !dbg !2322
    #dbg_value(i64 4, !2147, !DIExpression(), !2315)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i.6, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2312)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i.6, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2312)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i.6, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2312)
    #dbg_value(i32 8, !2145, !DIExpression(), !2314)
  br label %if.end, !dbg !2311

if.else:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2344)
    #dbg_value(i32 %i_stride_pix1, !2332, !DIExpression(), !2344)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2344)
    #dbg_value(i32 %i_stride_pix2, !2334, !DIExpression(), !2344)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2344)
    #dbg_value(i32 %i_stride_pix3, !2336, !DIExpression(), !2344)
    #dbg_value(i32 4, !2337, !DIExpression(), !2344)
    #dbg_value(i32 8, !2338, !DIExpression(), !2344)
    #dbg_value(i32 %weight, !2339, !DIExpression(), !2344)
  %sub.i = sub nsw i32 64, %weight, !dbg !2346
    #dbg_value(i32 %sub.i, !2340, !DIExpression(), !2344)
    #dbg_value(i32 0, !2342, !DIExpression(), !2347)
  %idx.ext.i8 = sext i32 %i_stride_pix1 to i64
  %idx.ext181.i = sext i32 %i_stride_pix2 to i64
  %idx.ext183.i = sext i32 %i_stride_pix3 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.else
  %y.0331.i = phi i32 [ %inc.i, %for.body.i ], [ 0, %if.else ]
  %dst.addr.0330.i = phi ptr [ %add.ptr.i, %for.body.i ], [ %pix1, %if.else ]
  %src1.addr.0329.i = phi ptr [ %add.ptr182.i, %for.body.i ], [ %pix2, %if.else ]
  %src2.addr.0328.i = phi ptr [ %add.ptr184.i, %for.body.i ], [ %pix3, %if.else ]
    #dbg_value(i32 %y.0331.i, !2342, !DIExpression(), !2347)
    #dbg_value(ptr %dst.addr.0330.i, !2327, !DIExpression(), !2344)
    #dbg_value(ptr %src1.addr.0329.i, !2333, !DIExpression(), !2344)
    #dbg_value(ptr %src2.addr.0328.i, !2335, !DIExpression(), !2344)
  %64 = load i8, ptr %src1.addr.0329.i, align 1, !dbg !2348
  %conv.i = zext i8 %64 to i32, !dbg !2348
  %mul.i = mul nsw i32 %conv.i, %weight, !dbg !2348
  %65 = load i8, ptr %src2.addr.0328.i, align 1, !dbg !2348
  %conv2.i = zext i8 %65 to i32, !dbg !2348
  %mul3.i = mul nsw i32 %sub.i, %conv2.i, !dbg !2348
  %add.i = add i32 %mul.i, 32, !dbg !2348
  %add4.i = add i32 %add.i, %mul3.i, !dbg !2348
  %shr.i = ashr i32 %add4.i, 6, !dbg !2348
    #dbg_value(i32 %shr.i, !1702, !DIExpression(), !2351)
  %tobool.not.i.i = icmp ult i32 %shr.i, 256, !dbg !2353
  %66 = icmp sgt i32 %shr.i, 0, !dbg !2354
  %shr.i.i = sext i1 %66 to i32, !dbg !2354
  %cond.i.i = select i1 %tobool.not.i.i, i32 %shr.i, i32 %shr.i.i, !dbg !2354
  %conv.i.i = trunc i32 %cond.i.i to i8, !dbg !2354
  store i8 %conv.i.i, ptr %dst.addr.0330.i, align 1, !dbg !2348
  %arrayidx6.i = getelementptr inbounds i8, ptr %src1.addr.0329.i, i64 1, !dbg !2355
  %67 = load i8, ptr %arrayidx6.i, align 1, !dbg !2355
  %conv7.i = zext i8 %67 to i32, !dbg !2355
  %mul8.i = mul nsw i32 %conv7.i, %weight, !dbg !2355
  %arrayidx9.i = getelementptr inbounds i8, ptr %src2.addr.0328.i, i64 1, !dbg !2355
  %68 = load i8, ptr %arrayidx9.i, align 1, !dbg !2355
  %conv10.i = zext i8 %68 to i32, !dbg !2355
  %mul11.i = mul nsw i32 %sub.i, %conv10.i, !dbg !2355
  %add12.i = add i32 %mul8.i, 32, !dbg !2355
  %add13.i = add i32 %add12.i, %mul11.i, !dbg !2355
  %shr14.i = ashr i32 %add13.i, 6, !dbg !2355
    #dbg_value(i32 %shr14.i, !1702, !DIExpression(), !2356)
  %tobool.not.i267.i = icmp ult i32 %shr14.i, 256, !dbg !2358
  %69 = icmp sgt i32 %shr14.i, 0, !dbg !2359
  %shr.i268.i = sext i1 %69 to i32, !dbg !2359
  %cond.i269.i = select i1 %tobool.not.i267.i, i32 %shr14.i, i32 %shr.i268.i, !dbg !2359
  %conv.i270.i = trunc i32 %cond.i269.i to i8, !dbg !2359
  %arrayidx16.i = getelementptr inbounds i8, ptr %dst.addr.0330.i, i64 1, !dbg !2355
  store i8 %conv.i270.i, ptr %arrayidx16.i, align 1, !dbg !2355
  %arrayidx19.i = getelementptr inbounds i8, ptr %src1.addr.0329.i, i64 2, !dbg !2360
  %70 = load i8, ptr %arrayidx19.i, align 1, !dbg !2360
  %conv20.i = zext i8 %70 to i32, !dbg !2360
  %mul21.i = mul nsw i32 %conv20.i, %weight, !dbg !2360
  %arrayidx22.i = getelementptr inbounds i8, ptr %src2.addr.0328.i, i64 2, !dbg !2360
  %71 = load i8, ptr %arrayidx22.i, align 1, !dbg !2360
  %conv23.i = zext i8 %71 to i32, !dbg !2360
  %mul24.i = mul nsw i32 %sub.i, %conv23.i, !dbg !2360
  %add25.i = add i32 %mul21.i, 32, !dbg !2360
  %add26.i = add i32 %add25.i, %mul24.i, !dbg !2360
  %shr27.i = ashr i32 %add26.i, 6, !dbg !2360
    #dbg_value(i32 %shr27.i, !1702, !DIExpression(), !2361)
  %tobool.not.i271.i = icmp ult i32 %shr27.i, 256, !dbg !2363
  %72 = icmp sgt i32 %shr27.i, 0, !dbg !2364
  %shr.i272.i = sext i1 %72 to i32, !dbg !2364
  %cond.i273.i = select i1 %tobool.not.i271.i, i32 %shr27.i, i32 %shr.i272.i, !dbg !2364
  %conv.i274.i = trunc i32 %cond.i273.i to i8, !dbg !2364
  %arrayidx29.i = getelementptr inbounds i8, ptr %dst.addr.0330.i, i64 2, !dbg !2360
  store i8 %conv.i274.i, ptr %arrayidx29.i, align 1, !dbg !2360
  %arrayidx30.i = getelementptr inbounds i8, ptr %src1.addr.0329.i, i64 3, !dbg !2365
  %73 = load i8, ptr %arrayidx30.i, align 1, !dbg !2365
  %conv31.i = zext i8 %73 to i32, !dbg !2365
  %mul32.i = mul nsw i32 %conv31.i, %weight, !dbg !2365
  %arrayidx33.i = getelementptr inbounds i8, ptr %src2.addr.0328.i, i64 3, !dbg !2365
  %74 = load i8, ptr %arrayidx33.i, align 1, !dbg !2365
  %conv34.i = zext i8 %74 to i32, !dbg !2365
  %mul35.i = mul nsw i32 %sub.i, %conv34.i, !dbg !2365
  %add36.i = add i32 %mul32.i, 32, !dbg !2365
  %add37.i = add i32 %add36.i, %mul35.i, !dbg !2365
  %shr38.i = ashr i32 %add37.i, 6, !dbg !2365
    #dbg_value(i32 %shr38.i, !1702, !DIExpression(), !2366)
  %tobool.not.i275.i = icmp ult i32 %shr38.i, 256, !dbg !2368
  %75 = icmp sgt i32 %shr38.i, 0, !dbg !2369
  %shr.i276.i = sext i1 %75 to i32, !dbg !2369
  %cond.i277.i = select i1 %tobool.not.i275.i, i32 %shr38.i, i32 %shr.i276.i, !dbg !2369
  %conv.i278.i = trunc i32 %cond.i277.i to i8, !dbg !2369
  %arrayidx40.i = getelementptr inbounds i8, ptr %dst.addr.0330.i, i64 3, !dbg !2365
  store i8 %conv.i278.i, ptr %arrayidx40.i, align 1, !dbg !2365
  %inc.i = add nuw nsw i32 %y.0331.i, 1, !dbg !2370
    #dbg_value(i32 %inc.i, !2342, !DIExpression(), !2347)
  %add.ptr.i = getelementptr inbounds i8, ptr %dst.addr.0330.i, i64 %idx.ext.i8, !dbg !2371
    #dbg_value(ptr %add.ptr.i, !2327, !DIExpression(), !2344)
  %add.ptr182.i = getelementptr inbounds i8, ptr %src1.addr.0329.i, i64 %idx.ext181.i, !dbg !2372
    #dbg_value(ptr %add.ptr182.i, !2333, !DIExpression(), !2344)
  %add.ptr184.i = getelementptr inbounds i8, ptr %src2.addr.0328.i, i64 %idx.ext183.i, !dbg !2373
    #dbg_value(ptr %add.ptr184.i, !2335, !DIExpression(), !2344)
  %exitcond.not.i9 = icmp eq i32 %inc.i, 8, !dbg !2374
  br i1 %exitcond.not.i9, label %if.end, label %for.body.i, !dbg !2375, !llvm.loop !2376

if.end:                                           ; preds = %for.body.i, %if.then
  ret void, !dbg !2311
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_4x4(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #6 !dbg !2378 {
entry:
    #dbg_value(ptr %pix1, !2380, !DIExpression(), !2387)
    #dbg_value(i32 %i_stride_pix1, !2381, !DIExpression(), !2387)
    #dbg_value(ptr %pix2, !2382, !DIExpression(), !2387)
    #dbg_value(i32 %i_stride_pix2, !2383, !DIExpression(), !2387)
    #dbg_value(ptr %pix3, !2384, !DIExpression(), !2387)
    #dbg_value(i32 %i_stride_pix3, !2385, !DIExpression(), !2387)
    #dbg_value(i32 %weight, !2386, !DIExpression(), !2387)
  %cmp = icmp eq i32 %weight, 32, !dbg !2388
  br i1 %cmp, label %if.then, label %if.else, !dbg !2390

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2391)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2391)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2391)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2391)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2391)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2391)
    #dbg_value(i32 4, !2143, !DIExpression(), !2391)
    #dbg_value(i32 4, !2144, !DIExpression(), !2391)
    #dbg_value(i32 0, !2145, !DIExpression(), !2393)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2393)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2391)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2391)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2391)
    #dbg_value(i32 0, !2147, !DIExpression(), !2394)
    #dbg_value(i64 0, !2147, !DIExpression(), !2394)
  %0 = load i8, ptr %pix2, align 1, !dbg !2395
  %conv.us.i = zext i8 %0 to i16, !dbg !2395
  %1 = load i8, ptr %pix3, align 1, !dbg !2396
  %conv7.us.i = zext i8 %1 to i16, !dbg !2396
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2397
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2398
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2399
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2400
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2401
    #dbg_value(i64 1, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2395
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2395
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2395
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2396
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2396
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2396
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2397
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2398
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2399
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2400
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2402
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2401
    #dbg_value(i64 2, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2395
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2395
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2395
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2396
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2396
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2396
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2397
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2398
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2399
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2400
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2402
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2401
    #dbg_value(i64 3, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2395
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2395
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2395
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2396
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2396
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2396
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2397
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2398
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2399
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2400
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2402
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2401
    #dbg_value(i64 4, !2147, !DIExpression(), !2394)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2403
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2391)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2404
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2391)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2405
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2391)
    #dbg_value(i32 1, !2145, !DIExpression(), !2393)
    #dbg_value(i32 0, !2147, !DIExpression(), !2394)
    #dbg_value(i64 0, !2147, !DIExpression(), !2394)
  %8 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2395
  %conv.us.i.112 = zext i8 %8 to i16, !dbg !2395
  %9 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2396
  %conv7.us.i.113 = zext i8 %9 to i16, !dbg !2396
  %add.us.i.114 = add nuw nsw i16 %conv.us.i.112, 1, !dbg !2397
  %add8.us.i.115 = add nuw nsw i16 %add.us.i.114, %conv7.us.i.113, !dbg !2398
  %shr.us.i.116 = lshr i16 %add8.us.i.115, 1, !dbg !2399
  %conv9.us.i.117 = trunc nuw i16 %shr.us.i.116 to i8, !dbg !2400
  store i8 %conv9.us.i.117, ptr %add.ptr15.us.i, align 1, !dbg !2401
    #dbg_value(i64 1, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2395
  %10 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2395
  %conv.us.i.1.1 = zext i8 %10 to i16, !dbg !2395
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2396
  %11 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2396
  %conv7.us.i.1.1 = zext i8 %11 to i16, !dbg !2396
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2397
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2398
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2399
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2400
  %arrayidx11.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 1, !dbg !2402
  store i8 %conv9.us.i.1.1, ptr %arrayidx11.us.i.1.1, align 1, !dbg !2401
    #dbg_value(i64 2, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 2, !dbg !2395
  %12 = load i8, ptr %arrayidx.us.i.2.1, align 1, !dbg !2395
  %conv.us.i.2.1 = zext i8 %12 to i16, !dbg !2395
  %arrayidx6.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 2, !dbg !2396
  %13 = load i8, ptr %arrayidx6.us.i.2.1, align 1, !dbg !2396
  %conv7.us.i.2.1 = zext i8 %13 to i16, !dbg !2396
  %add.us.i.2.1 = add nuw nsw i16 %conv.us.i.2.1, 1, !dbg !2397
  %add8.us.i.2.1 = add nuw nsw i16 %add.us.i.2.1, %conv7.us.i.2.1, !dbg !2398
  %shr.us.i.2.1 = lshr i16 %add8.us.i.2.1, 1, !dbg !2399
  %conv9.us.i.2.1 = trunc nuw i16 %shr.us.i.2.1 to i8, !dbg !2400
  %arrayidx11.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 2, !dbg !2402
  store i8 %conv9.us.i.2.1, ptr %arrayidx11.us.i.2.1, align 1, !dbg !2401
    #dbg_value(i64 3, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 3, !dbg !2395
  %14 = load i8, ptr %arrayidx.us.i.3.1, align 1, !dbg !2395
  %conv.us.i.3.1 = zext i8 %14 to i16, !dbg !2395
  %arrayidx6.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 3, !dbg !2396
  %15 = load i8, ptr %arrayidx6.us.i.3.1, align 1, !dbg !2396
  %conv7.us.i.3.1 = zext i8 %15 to i16, !dbg !2396
  %add.us.i.3.1 = add nuw nsw i16 %conv.us.i.3.1, 1, !dbg !2397
  %add8.us.i.3.1 = add nuw nsw i16 %add.us.i.3.1, %conv7.us.i.3.1, !dbg !2398
  %shr.us.i.3.1 = lshr i16 %add8.us.i.3.1, 1, !dbg !2399
  %conv9.us.i.3.1 = trunc nuw i16 %shr.us.i.3.1 to i8, !dbg !2400
  %arrayidx11.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 3, !dbg !2402
  store i8 %conv9.us.i.3.1, ptr %arrayidx11.us.i.3.1, align 1, !dbg !2401
    #dbg_value(i64 4, !2147, !DIExpression(), !2394)
  %add.ptr.us.i.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 %idx.ext.i, !dbg !2403
    #dbg_value(ptr %add.ptr.us.i.1, !2139, !DIExpression(), !2391)
  %add.ptr13.us.i.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 %idx.ext12.i, !dbg !2404
    #dbg_value(ptr %add.ptr13.us.i.1, !2141, !DIExpression(), !2391)
  %add.ptr15.us.i.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 %idx.ext14.i, !dbg !2405
    #dbg_value(ptr %add.ptr15.us.i.1, !2135, !DIExpression(), !2391)
    #dbg_value(i32 2, !2145, !DIExpression(), !2393)
    #dbg_value(i32 0, !2147, !DIExpression(), !2394)
    #dbg_value(i64 0, !2147, !DIExpression(), !2394)
  %16 = load i8, ptr %add.ptr.us.i.1, align 1, !dbg !2395
  %conv.us.i.218 = zext i8 %16 to i16, !dbg !2395
  %17 = load i8, ptr %add.ptr13.us.i.1, align 1, !dbg !2396
  %conv7.us.i.219 = zext i8 %17 to i16, !dbg !2396
  %add.us.i.220 = add nuw nsw i16 %conv.us.i.218, 1, !dbg !2397
  %add8.us.i.221 = add nuw nsw i16 %add.us.i.220, %conv7.us.i.219, !dbg !2398
  %shr.us.i.222 = lshr i16 %add8.us.i.221, 1, !dbg !2399
  %conv9.us.i.223 = trunc nuw i16 %shr.us.i.222 to i8, !dbg !2400
  store i8 %conv9.us.i.223, ptr %add.ptr15.us.i.1, align 1, !dbg !2401
    #dbg_value(i64 1, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 1, !dbg !2395
  %18 = load i8, ptr %arrayidx.us.i.1.2, align 1, !dbg !2395
  %conv.us.i.1.2 = zext i8 %18 to i16, !dbg !2395
  %arrayidx6.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 1, !dbg !2396
  %19 = load i8, ptr %arrayidx6.us.i.1.2, align 1, !dbg !2396
  %conv7.us.i.1.2 = zext i8 %19 to i16, !dbg !2396
  %add.us.i.1.2 = add nuw nsw i16 %conv.us.i.1.2, 1, !dbg !2397
  %add8.us.i.1.2 = add nuw nsw i16 %add.us.i.1.2, %conv7.us.i.1.2, !dbg !2398
  %shr.us.i.1.2 = lshr i16 %add8.us.i.1.2, 1, !dbg !2399
  %conv9.us.i.1.2 = trunc nuw i16 %shr.us.i.1.2 to i8, !dbg !2400
  %arrayidx11.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 1, !dbg !2402
  store i8 %conv9.us.i.1.2, ptr %arrayidx11.us.i.1.2, align 1, !dbg !2401
    #dbg_value(i64 2, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 2, !dbg !2395
  %20 = load i8, ptr %arrayidx.us.i.2.2, align 1, !dbg !2395
  %conv.us.i.2.2 = zext i8 %20 to i16, !dbg !2395
  %arrayidx6.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 2, !dbg !2396
  %21 = load i8, ptr %arrayidx6.us.i.2.2, align 1, !dbg !2396
  %conv7.us.i.2.2 = zext i8 %21 to i16, !dbg !2396
  %add.us.i.2.2 = add nuw nsw i16 %conv.us.i.2.2, 1, !dbg !2397
  %add8.us.i.2.2 = add nuw nsw i16 %add.us.i.2.2, %conv7.us.i.2.2, !dbg !2398
  %shr.us.i.2.2 = lshr i16 %add8.us.i.2.2, 1, !dbg !2399
  %conv9.us.i.2.2 = trunc nuw i16 %shr.us.i.2.2 to i8, !dbg !2400
  %arrayidx11.us.i.2.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 2, !dbg !2402
  store i8 %conv9.us.i.2.2, ptr %arrayidx11.us.i.2.2, align 1, !dbg !2401
    #dbg_value(i64 3, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 3, !dbg !2395
  %22 = load i8, ptr %arrayidx.us.i.3.2, align 1, !dbg !2395
  %conv.us.i.3.2 = zext i8 %22 to i16, !dbg !2395
  %arrayidx6.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 3, !dbg !2396
  %23 = load i8, ptr %arrayidx6.us.i.3.2, align 1, !dbg !2396
  %conv7.us.i.3.2 = zext i8 %23 to i16, !dbg !2396
  %add.us.i.3.2 = add nuw nsw i16 %conv.us.i.3.2, 1, !dbg !2397
  %add8.us.i.3.2 = add nuw nsw i16 %add.us.i.3.2, %conv7.us.i.3.2, !dbg !2398
  %shr.us.i.3.2 = lshr i16 %add8.us.i.3.2, 1, !dbg !2399
  %conv9.us.i.3.2 = trunc nuw i16 %shr.us.i.3.2 to i8, !dbg !2400
  %arrayidx11.us.i.3.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 3, !dbg !2402
  store i8 %conv9.us.i.3.2, ptr %arrayidx11.us.i.3.2, align 1, !dbg !2401
    #dbg_value(i64 4, !2147, !DIExpression(), !2394)
  %add.ptr.us.i.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 %idx.ext.i, !dbg !2403
    #dbg_value(ptr %add.ptr.us.i.2, !2139, !DIExpression(), !2391)
  %add.ptr13.us.i.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 %idx.ext12.i, !dbg !2404
    #dbg_value(ptr %add.ptr13.us.i.2, !2141, !DIExpression(), !2391)
  %add.ptr15.us.i.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 %idx.ext14.i, !dbg !2405
    #dbg_value(ptr %add.ptr15.us.i.2, !2135, !DIExpression(), !2391)
    #dbg_value(i32 3, !2145, !DIExpression(), !2393)
    #dbg_value(i32 0, !2147, !DIExpression(), !2394)
    #dbg_value(i64 0, !2147, !DIExpression(), !2394)
  %24 = load i8, ptr %add.ptr.us.i.2, align 1, !dbg !2395
  %conv.us.i.324 = zext i8 %24 to i16, !dbg !2395
  %25 = load i8, ptr %add.ptr13.us.i.2, align 1, !dbg !2396
  %conv7.us.i.325 = zext i8 %25 to i16, !dbg !2396
  %add.us.i.326 = add nuw nsw i16 %conv.us.i.324, 1, !dbg !2397
  %add8.us.i.327 = add nuw nsw i16 %add.us.i.326, %conv7.us.i.325, !dbg !2398
  %shr.us.i.328 = lshr i16 %add8.us.i.327, 1, !dbg !2399
  %conv9.us.i.329 = trunc nuw i16 %shr.us.i.328 to i8, !dbg !2400
  store i8 %conv9.us.i.329, ptr %add.ptr15.us.i.2, align 1, !dbg !2401
    #dbg_value(i64 1, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 1, !dbg !2395
  %26 = load i8, ptr %arrayidx.us.i.1.3, align 1, !dbg !2395
  %conv.us.i.1.3 = zext i8 %26 to i16, !dbg !2395
  %arrayidx6.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 1, !dbg !2396
  %27 = load i8, ptr %arrayidx6.us.i.1.3, align 1, !dbg !2396
  %conv7.us.i.1.3 = zext i8 %27 to i16, !dbg !2396
  %add.us.i.1.3 = add nuw nsw i16 %conv.us.i.1.3, 1, !dbg !2397
  %add8.us.i.1.3 = add nuw nsw i16 %add.us.i.1.3, %conv7.us.i.1.3, !dbg !2398
  %shr.us.i.1.3 = lshr i16 %add8.us.i.1.3, 1, !dbg !2399
  %conv9.us.i.1.3 = trunc nuw i16 %shr.us.i.1.3 to i8, !dbg !2400
  %arrayidx11.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 1, !dbg !2402
  store i8 %conv9.us.i.1.3, ptr %arrayidx11.us.i.1.3, align 1, !dbg !2401
    #dbg_value(i64 2, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 2, !dbg !2395
  %28 = load i8, ptr %arrayidx.us.i.2.3, align 1, !dbg !2395
  %conv.us.i.2.3 = zext i8 %28 to i16, !dbg !2395
  %arrayidx6.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 2, !dbg !2396
  %29 = load i8, ptr %arrayidx6.us.i.2.3, align 1, !dbg !2396
  %conv7.us.i.2.3 = zext i8 %29 to i16, !dbg !2396
  %add.us.i.2.3 = add nuw nsw i16 %conv.us.i.2.3, 1, !dbg !2397
  %add8.us.i.2.3 = add nuw nsw i16 %add.us.i.2.3, %conv7.us.i.2.3, !dbg !2398
  %shr.us.i.2.3 = lshr i16 %add8.us.i.2.3, 1, !dbg !2399
  %conv9.us.i.2.3 = trunc nuw i16 %shr.us.i.2.3 to i8, !dbg !2400
  %arrayidx11.us.i.2.3 = getelementptr inbounds i8, ptr %add.ptr15.us.i.2, i64 2, !dbg !2402
  store i8 %conv9.us.i.2.3, ptr %arrayidx11.us.i.2.3, align 1, !dbg !2401
    #dbg_value(i64 3, !2147, !DIExpression(), !2394)
  %arrayidx.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 3, !dbg !2395
  %30 = load i8, ptr %arrayidx.us.i.3.3, align 1, !dbg !2395
  %conv.us.i.3.3 = zext i8 %30 to i16, !dbg !2395
  %arrayidx6.us.i.3.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 3, !dbg !2396
  %31 = load i8, ptr %arrayidx6.us.i.3.3, align 1, !dbg !2396
  %conv7.us.i.3.3 = zext i8 %31 to i16, !dbg !2396
  %add.us.i.3.3 = add nuw nsw i16 %conv.us.i.3.3, 1, !dbg !2397
  %add8.us.i.3.3 = add nuw nsw i16 %add.us.i.3.3, %conv7.us.i.3.3, !dbg !2398
  %shr.us.i.3.3 = lshr i16 %add8.us.i.3.3, 1, !dbg !2399
  %conv9.us.i.3.3 = trunc nuw i16 %shr.us.i.3.3 to i8, !dbg !2400
    #dbg_value(i64 4, !2147, !DIExpression(), !2394)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i.2, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2391)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i.2, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2391)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i.2, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2391)
    #dbg_value(i32 4, !2145, !DIExpression(), !2393)
  br label %if.end, !dbg !2390

if.else:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2406)
    #dbg_value(i32 %i_stride_pix1, !2332, !DIExpression(), !2406)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2406)
    #dbg_value(i32 %i_stride_pix2, !2334, !DIExpression(), !2406)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2406)
    #dbg_value(i32 %i_stride_pix3, !2336, !DIExpression(), !2406)
    #dbg_value(i32 4, !2337, !DIExpression(), !2406)
    #dbg_value(i32 4, !2338, !DIExpression(), !2406)
    #dbg_value(i32 %weight, !2339, !DIExpression(), !2406)
  %sub.i = sub nsw i32 64, %weight, !dbg !2408
    #dbg_value(i32 %sub.i, !2340, !DIExpression(), !2406)
    #dbg_value(i32 0, !2342, !DIExpression(), !2409)
  %idx.ext.i8 = sext i32 %i_stride_pix1 to i64
  %idx.ext181.i = sext i32 %i_stride_pix2 to i64
  %idx.ext183.i = sext i32 %i_stride_pix3 to i64
    #dbg_value(i32 0, !2342, !DIExpression(), !2409)
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2406)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2406)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2406)
  %32 = load i8, ptr %pix2, align 1, !dbg !2410
  %conv.i = zext i8 %32 to i32, !dbg !2410
  %mul.i = mul nsw i32 %conv.i, %weight, !dbg !2410
  %33 = load i8, ptr %pix3, align 1, !dbg !2410
  %conv2.i = zext i8 %33 to i32, !dbg !2410
  %mul3.i = mul nsw i32 %sub.i, %conv2.i, !dbg !2410
  %add.i = add i32 %mul.i, 32, !dbg !2410
  %add4.i = add i32 %add.i, %mul3.i, !dbg !2410
  %shr.i = ashr i32 %add4.i, 6, !dbg !2410
    #dbg_value(i32 %shr.i, !1702, !DIExpression(), !2411)
  %tobool.not.i.i = icmp ult i32 %shr.i, 256, !dbg !2413
  %34 = icmp sgt i32 %shr.i, 0, !dbg !2414
  %shr.i.i = sext i1 %34 to i32, !dbg !2414
  %cond.i.i = select i1 %tobool.not.i.i, i32 %shr.i, i32 %shr.i.i, !dbg !2414
  %conv.i.i = trunc i32 %cond.i.i to i8, !dbg !2414
  store i8 %conv.i.i, ptr %pix1, align 1, !dbg !2410
  %arrayidx6.i = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2415
  %35 = load i8, ptr %arrayidx6.i, align 1, !dbg !2415
  %conv7.i = zext i8 %35 to i32, !dbg !2415
  %mul8.i = mul nsw i32 %conv7.i, %weight, !dbg !2415
  %arrayidx9.i = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2415
  %36 = load i8, ptr %arrayidx9.i, align 1, !dbg !2415
  %conv10.i = zext i8 %36 to i32, !dbg !2415
  %mul11.i = mul nsw i32 %sub.i, %conv10.i, !dbg !2415
  %add12.i = add i32 %mul8.i, 32, !dbg !2415
  %add13.i = add i32 %add12.i, %mul11.i, !dbg !2415
  %shr14.i = ashr i32 %add13.i, 6, !dbg !2415
    #dbg_value(i32 %shr14.i, !1702, !DIExpression(), !2416)
  %tobool.not.i267.i = icmp ult i32 %shr14.i, 256, !dbg !2418
  %37 = icmp sgt i32 %shr14.i, 0, !dbg !2419
  %shr.i268.i = sext i1 %37 to i32, !dbg !2419
  %cond.i269.i = select i1 %tobool.not.i267.i, i32 %shr14.i, i32 %shr.i268.i, !dbg !2419
  %conv.i270.i = trunc i32 %cond.i269.i to i8, !dbg !2419
  %arrayidx16.i = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2415
  store i8 %conv.i270.i, ptr %arrayidx16.i, align 1, !dbg !2415
  %arrayidx19.i = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2420
  %38 = load i8, ptr %arrayidx19.i, align 1, !dbg !2420
  %conv20.i = zext i8 %38 to i32, !dbg !2420
  %mul21.i = mul nsw i32 %conv20.i, %weight, !dbg !2420
  %arrayidx22.i = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2420
  %39 = load i8, ptr %arrayidx22.i, align 1, !dbg !2420
  %conv23.i = zext i8 %39 to i32, !dbg !2420
  %mul24.i = mul nsw i32 %sub.i, %conv23.i, !dbg !2420
  %add25.i = add i32 %mul21.i, 32, !dbg !2420
  %add26.i = add i32 %add25.i, %mul24.i, !dbg !2420
  %shr27.i = ashr i32 %add26.i, 6, !dbg !2420
    #dbg_value(i32 %shr27.i, !1702, !DIExpression(), !2421)
  %tobool.not.i271.i = icmp ult i32 %shr27.i, 256, !dbg !2423
  %40 = icmp sgt i32 %shr27.i, 0, !dbg !2424
  %shr.i272.i = sext i1 %40 to i32, !dbg !2424
  %cond.i273.i = select i1 %tobool.not.i271.i, i32 %shr27.i, i32 %shr.i272.i, !dbg !2424
  %conv.i274.i = trunc i32 %cond.i273.i to i8, !dbg !2424
  %arrayidx29.i = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2420
  store i8 %conv.i274.i, ptr %arrayidx29.i, align 1, !dbg !2420
  %arrayidx30.i = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2425
  %41 = load i8, ptr %arrayidx30.i, align 1, !dbg !2425
  %conv31.i = zext i8 %41 to i32, !dbg !2425
  %mul32.i = mul nsw i32 %conv31.i, %weight, !dbg !2425
  %arrayidx33.i = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2425
  %42 = load i8, ptr %arrayidx33.i, align 1, !dbg !2425
  %conv34.i = zext i8 %42 to i32, !dbg !2425
  %mul35.i = mul nsw i32 %sub.i, %conv34.i, !dbg !2425
  %add36.i = add i32 %mul32.i, 32, !dbg !2425
  %add37.i = add i32 %add36.i, %mul35.i, !dbg !2425
  %shr38.i = ashr i32 %add37.i, 6, !dbg !2425
    #dbg_value(i32 %shr38.i, !1702, !DIExpression(), !2426)
  %tobool.not.i275.i = icmp ult i32 %shr38.i, 256, !dbg !2428
  %43 = icmp sgt i32 %shr38.i, 0, !dbg !2429
  %shr.i276.i = sext i1 %43 to i32, !dbg !2429
  %cond.i277.i = select i1 %tobool.not.i275.i, i32 %shr38.i, i32 %shr.i276.i, !dbg !2429
  %conv.i278.i = trunc i32 %cond.i277.i to i8, !dbg !2429
  %arrayidx40.i = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2425
  store i8 %conv.i278.i, ptr %arrayidx40.i, align 1, !dbg !2425
    #dbg_value(i32 1, !2342, !DIExpression(), !2409)
  %add.ptr.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext.i8, !dbg !2430
    #dbg_value(ptr %add.ptr.i, !2327, !DIExpression(), !2406)
  %add.ptr182.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext181.i, !dbg !2431
    #dbg_value(ptr %add.ptr182.i, !2333, !DIExpression(), !2406)
  %add.ptr184.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext183.i, !dbg !2432
    #dbg_value(ptr %add.ptr184.i, !2335, !DIExpression(), !2406)
  %44 = load i8, ptr %add.ptr182.i, align 1, !dbg !2410
  %conv.i.1 = zext i8 %44 to i32, !dbg !2410
  %mul.i.1 = mul nsw i32 %conv.i.1, %weight, !dbg !2410
  %45 = load i8, ptr %add.ptr184.i, align 1, !dbg !2410
  %conv2.i.1 = zext i8 %45 to i32, !dbg !2410
  %mul3.i.1 = mul nsw i32 %sub.i, %conv2.i.1, !dbg !2410
  %add.i.1 = add i32 %mul.i.1, 32, !dbg !2410
  %add4.i.1 = add i32 %add.i.1, %mul3.i.1, !dbg !2410
  %shr.i.1 = ashr i32 %add4.i.1, 6, !dbg !2410
    #dbg_value(i32 %shr.i.1, !1702, !DIExpression(), !2411)
  %tobool.not.i.i.1 = icmp ult i32 %shr.i.1, 256, !dbg !2413
  %46 = icmp sgt i32 %shr.i.1, 0, !dbg !2414
  %shr.i.i.1 = sext i1 %46 to i32, !dbg !2414
  %cond.i.i.1 = select i1 %tobool.not.i.i.1, i32 %shr.i.1, i32 %shr.i.i.1, !dbg !2414
  %conv.i.i.1 = trunc i32 %cond.i.i.1 to i8, !dbg !2414
  store i8 %conv.i.i.1, ptr %add.ptr.i, align 1, !dbg !2410
  %arrayidx6.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 1, !dbg !2415
  %47 = load i8, ptr %arrayidx6.i.1, align 1, !dbg !2415
  %conv7.i.1 = zext i8 %47 to i32, !dbg !2415
  %mul8.i.1 = mul nsw i32 %conv7.i.1, %weight, !dbg !2415
  %arrayidx9.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 1, !dbg !2415
  %48 = load i8, ptr %arrayidx9.i.1, align 1, !dbg !2415
  %conv10.i.1 = zext i8 %48 to i32, !dbg !2415
  %mul11.i.1 = mul nsw i32 %sub.i, %conv10.i.1, !dbg !2415
  %add12.i.1 = add i32 %mul8.i.1, 32, !dbg !2415
  %add13.i.1 = add i32 %add12.i.1, %mul11.i.1, !dbg !2415
  %shr14.i.1 = ashr i32 %add13.i.1, 6, !dbg !2415
    #dbg_value(i32 %shr14.i.1, !1702, !DIExpression(), !2416)
  %tobool.not.i267.i.1 = icmp ult i32 %shr14.i.1, 256, !dbg !2418
  %49 = icmp sgt i32 %shr14.i.1, 0, !dbg !2419
  %shr.i268.i.1 = sext i1 %49 to i32, !dbg !2419
  %cond.i269.i.1 = select i1 %tobool.not.i267.i.1, i32 %shr14.i.1, i32 %shr.i268.i.1, !dbg !2419
  %conv.i270.i.1 = trunc i32 %cond.i269.i.1 to i8, !dbg !2419
  %arrayidx16.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 1, !dbg !2415
  store i8 %conv.i270.i.1, ptr %arrayidx16.i.1, align 1, !dbg !2415
  %arrayidx19.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 2, !dbg !2420
  %50 = load i8, ptr %arrayidx19.i.1, align 1, !dbg !2420
  %conv20.i.1 = zext i8 %50 to i32, !dbg !2420
  %mul21.i.1 = mul nsw i32 %conv20.i.1, %weight, !dbg !2420
  %arrayidx22.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 2, !dbg !2420
  %51 = load i8, ptr %arrayidx22.i.1, align 1, !dbg !2420
  %conv23.i.1 = zext i8 %51 to i32, !dbg !2420
  %mul24.i.1 = mul nsw i32 %sub.i, %conv23.i.1, !dbg !2420
  %add25.i.1 = add i32 %mul21.i.1, 32, !dbg !2420
  %add26.i.1 = add i32 %add25.i.1, %mul24.i.1, !dbg !2420
  %shr27.i.1 = ashr i32 %add26.i.1, 6, !dbg !2420
    #dbg_value(i32 %shr27.i.1, !1702, !DIExpression(), !2421)
  %tobool.not.i271.i.1 = icmp ult i32 %shr27.i.1, 256, !dbg !2423
  %52 = icmp sgt i32 %shr27.i.1, 0, !dbg !2424
  %shr.i272.i.1 = sext i1 %52 to i32, !dbg !2424
  %cond.i273.i.1 = select i1 %tobool.not.i271.i.1, i32 %shr27.i.1, i32 %shr.i272.i.1, !dbg !2424
  %conv.i274.i.1 = trunc i32 %cond.i273.i.1 to i8, !dbg !2424
  %arrayidx29.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 2, !dbg !2420
  store i8 %conv.i274.i.1, ptr %arrayidx29.i.1, align 1, !dbg !2420
  %arrayidx30.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 3, !dbg !2425
  %53 = load i8, ptr %arrayidx30.i.1, align 1, !dbg !2425
  %conv31.i.1 = zext i8 %53 to i32, !dbg !2425
  %mul32.i.1 = mul nsw i32 %conv31.i.1, %weight, !dbg !2425
  %arrayidx33.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 3, !dbg !2425
  %54 = load i8, ptr %arrayidx33.i.1, align 1, !dbg !2425
  %conv34.i.1 = zext i8 %54 to i32, !dbg !2425
  %mul35.i.1 = mul nsw i32 %sub.i, %conv34.i.1, !dbg !2425
  %add36.i.1 = add i32 %mul32.i.1, 32, !dbg !2425
  %add37.i.1 = add i32 %add36.i.1, %mul35.i.1, !dbg !2425
  %shr38.i.1 = ashr i32 %add37.i.1, 6, !dbg !2425
    #dbg_value(i32 %shr38.i.1, !1702, !DIExpression(), !2426)
  %tobool.not.i275.i.1 = icmp ult i32 %shr38.i.1, 256, !dbg !2428
  %55 = icmp sgt i32 %shr38.i.1, 0, !dbg !2429
  %shr.i276.i.1 = sext i1 %55 to i32, !dbg !2429
  %cond.i277.i.1 = select i1 %tobool.not.i275.i.1, i32 %shr38.i.1, i32 %shr.i276.i.1, !dbg !2429
  %conv.i278.i.1 = trunc i32 %cond.i277.i.1 to i8, !dbg !2429
  %arrayidx40.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 3, !dbg !2425
  store i8 %conv.i278.i.1, ptr %arrayidx40.i.1, align 1, !dbg !2425
    #dbg_value(i32 2, !2342, !DIExpression(), !2409)
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 %idx.ext.i8, !dbg !2430
    #dbg_value(ptr %add.ptr.i.1, !2327, !DIExpression(), !2406)
  %add.ptr182.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 %idx.ext181.i, !dbg !2431
    #dbg_value(ptr %add.ptr182.i.1, !2333, !DIExpression(), !2406)
  %add.ptr184.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 %idx.ext183.i, !dbg !2432
    #dbg_value(ptr %add.ptr184.i.1, !2335, !DIExpression(), !2406)
  %56 = load i8, ptr %add.ptr182.i.1, align 1, !dbg !2410
  %conv.i.2 = zext i8 %56 to i32, !dbg !2410
  %mul.i.2 = mul nsw i32 %conv.i.2, %weight, !dbg !2410
  %57 = load i8, ptr %add.ptr184.i.1, align 1, !dbg !2410
  %conv2.i.2 = zext i8 %57 to i32, !dbg !2410
  %mul3.i.2 = mul nsw i32 %sub.i, %conv2.i.2, !dbg !2410
  %add.i.2 = add i32 %mul.i.2, 32, !dbg !2410
  %add4.i.2 = add i32 %add.i.2, %mul3.i.2, !dbg !2410
  %shr.i.2 = ashr i32 %add4.i.2, 6, !dbg !2410
    #dbg_value(i32 %shr.i.2, !1702, !DIExpression(), !2411)
  %tobool.not.i.i.2 = icmp ult i32 %shr.i.2, 256, !dbg !2413
  %58 = icmp sgt i32 %shr.i.2, 0, !dbg !2414
  %shr.i.i.2 = sext i1 %58 to i32, !dbg !2414
  %cond.i.i.2 = select i1 %tobool.not.i.i.2, i32 %shr.i.2, i32 %shr.i.i.2, !dbg !2414
  %conv.i.i.2 = trunc i32 %cond.i.i.2 to i8, !dbg !2414
  store i8 %conv.i.i.2, ptr %add.ptr.i.1, align 1, !dbg !2410
  %arrayidx6.i.2 = getelementptr inbounds i8, ptr %add.ptr182.i.1, i64 1, !dbg !2415
  %59 = load i8, ptr %arrayidx6.i.2, align 1, !dbg !2415
  %conv7.i.2 = zext i8 %59 to i32, !dbg !2415
  %mul8.i.2 = mul nsw i32 %conv7.i.2, %weight, !dbg !2415
  %arrayidx9.i.2 = getelementptr inbounds i8, ptr %add.ptr184.i.1, i64 1, !dbg !2415
  %60 = load i8, ptr %arrayidx9.i.2, align 1, !dbg !2415
  %conv10.i.2 = zext i8 %60 to i32, !dbg !2415
  %mul11.i.2 = mul nsw i32 %sub.i, %conv10.i.2, !dbg !2415
  %add12.i.2 = add i32 %mul8.i.2, 32, !dbg !2415
  %add13.i.2 = add i32 %add12.i.2, %mul11.i.2, !dbg !2415
  %shr14.i.2 = ashr i32 %add13.i.2, 6, !dbg !2415
    #dbg_value(i32 %shr14.i.2, !1702, !DIExpression(), !2416)
  %tobool.not.i267.i.2 = icmp ult i32 %shr14.i.2, 256, !dbg !2418
  %61 = icmp sgt i32 %shr14.i.2, 0, !dbg !2419
  %shr.i268.i.2 = sext i1 %61 to i32, !dbg !2419
  %cond.i269.i.2 = select i1 %tobool.not.i267.i.2, i32 %shr14.i.2, i32 %shr.i268.i.2, !dbg !2419
  %conv.i270.i.2 = trunc i32 %cond.i269.i.2 to i8, !dbg !2419
  %arrayidx16.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 1, !dbg !2415
  store i8 %conv.i270.i.2, ptr %arrayidx16.i.2, align 1, !dbg !2415
  %arrayidx19.i.2 = getelementptr inbounds i8, ptr %add.ptr182.i.1, i64 2, !dbg !2420
  %62 = load i8, ptr %arrayidx19.i.2, align 1, !dbg !2420
  %conv20.i.2 = zext i8 %62 to i32, !dbg !2420
  %mul21.i.2 = mul nsw i32 %conv20.i.2, %weight, !dbg !2420
  %arrayidx22.i.2 = getelementptr inbounds i8, ptr %add.ptr184.i.1, i64 2, !dbg !2420
  %63 = load i8, ptr %arrayidx22.i.2, align 1, !dbg !2420
  %conv23.i.2 = zext i8 %63 to i32, !dbg !2420
  %mul24.i.2 = mul nsw i32 %sub.i, %conv23.i.2, !dbg !2420
  %add25.i.2 = add i32 %mul21.i.2, 32, !dbg !2420
  %add26.i.2 = add i32 %add25.i.2, %mul24.i.2, !dbg !2420
  %shr27.i.2 = ashr i32 %add26.i.2, 6, !dbg !2420
    #dbg_value(i32 %shr27.i.2, !1702, !DIExpression(), !2421)
  %tobool.not.i271.i.2 = icmp ult i32 %shr27.i.2, 256, !dbg !2423
  %64 = icmp sgt i32 %shr27.i.2, 0, !dbg !2424
  %shr.i272.i.2 = sext i1 %64 to i32, !dbg !2424
  %cond.i273.i.2 = select i1 %tobool.not.i271.i.2, i32 %shr27.i.2, i32 %shr.i272.i.2, !dbg !2424
  %conv.i274.i.2 = trunc i32 %cond.i273.i.2 to i8, !dbg !2424
  %arrayidx29.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 2, !dbg !2420
  store i8 %conv.i274.i.2, ptr %arrayidx29.i.2, align 1, !dbg !2420
  %arrayidx30.i.2 = getelementptr inbounds i8, ptr %add.ptr182.i.1, i64 3, !dbg !2425
  %65 = load i8, ptr %arrayidx30.i.2, align 1, !dbg !2425
  %conv31.i.2 = zext i8 %65 to i32, !dbg !2425
  %mul32.i.2 = mul nsw i32 %conv31.i.2, %weight, !dbg !2425
  %arrayidx33.i.2 = getelementptr inbounds i8, ptr %add.ptr184.i.1, i64 3, !dbg !2425
  %66 = load i8, ptr %arrayidx33.i.2, align 1, !dbg !2425
  %conv34.i.2 = zext i8 %66 to i32, !dbg !2425
  %mul35.i.2 = mul nsw i32 %sub.i, %conv34.i.2, !dbg !2425
  %add36.i.2 = add i32 %mul32.i.2, 32, !dbg !2425
  %add37.i.2 = add i32 %add36.i.2, %mul35.i.2, !dbg !2425
  %shr38.i.2 = ashr i32 %add37.i.2, 6, !dbg !2425
    #dbg_value(i32 %shr38.i.2, !1702, !DIExpression(), !2426)
  %tobool.not.i275.i.2 = icmp ult i32 %shr38.i.2, 256, !dbg !2428
  %67 = icmp sgt i32 %shr38.i.2, 0, !dbg !2429
  %shr.i276.i.2 = sext i1 %67 to i32, !dbg !2429
  %cond.i277.i.2 = select i1 %tobool.not.i275.i.2, i32 %shr38.i.2, i32 %shr.i276.i.2, !dbg !2429
  %conv.i278.i.2 = trunc i32 %cond.i277.i.2 to i8, !dbg !2429
  %arrayidx40.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 3, !dbg !2425
  store i8 %conv.i278.i.2, ptr %arrayidx40.i.2, align 1, !dbg !2425
    #dbg_value(i32 3, !2342, !DIExpression(), !2409)
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 %idx.ext.i8, !dbg !2430
    #dbg_value(ptr %add.ptr.i.2, !2327, !DIExpression(), !2406)
  %add.ptr182.i.2 = getelementptr inbounds i8, ptr %add.ptr182.i.1, i64 %idx.ext181.i, !dbg !2431
    #dbg_value(ptr %add.ptr182.i.2, !2333, !DIExpression(), !2406)
  %add.ptr184.i.2 = getelementptr inbounds i8, ptr %add.ptr184.i.1, i64 %idx.ext183.i, !dbg !2432
    #dbg_value(ptr %add.ptr184.i.2, !2335, !DIExpression(), !2406)
  %68 = load i8, ptr %add.ptr182.i.2, align 1, !dbg !2410
  %conv.i.3 = zext i8 %68 to i32, !dbg !2410
  %mul.i.3 = mul nsw i32 %conv.i.3, %weight, !dbg !2410
  %69 = load i8, ptr %add.ptr184.i.2, align 1, !dbg !2410
  %conv2.i.3 = zext i8 %69 to i32, !dbg !2410
  %mul3.i.3 = mul nsw i32 %sub.i, %conv2.i.3, !dbg !2410
  %add.i.3 = add i32 %mul.i.3, 32, !dbg !2410
  %add4.i.3 = add i32 %add.i.3, %mul3.i.3, !dbg !2410
  %shr.i.3 = ashr i32 %add4.i.3, 6, !dbg !2410
    #dbg_value(i32 %shr.i.3, !1702, !DIExpression(), !2411)
  %tobool.not.i.i.3 = icmp ult i32 %shr.i.3, 256, !dbg !2413
  %70 = icmp sgt i32 %shr.i.3, 0, !dbg !2414
  %shr.i.i.3 = sext i1 %70 to i32, !dbg !2414
  %cond.i.i.3 = select i1 %tobool.not.i.i.3, i32 %shr.i.3, i32 %shr.i.i.3, !dbg !2414
  %conv.i.i.3 = trunc i32 %cond.i.i.3 to i8, !dbg !2414
  store i8 %conv.i.i.3, ptr %add.ptr.i.2, align 1, !dbg !2410
  %arrayidx6.i.3 = getelementptr inbounds i8, ptr %add.ptr182.i.2, i64 1, !dbg !2415
  %71 = load i8, ptr %arrayidx6.i.3, align 1, !dbg !2415
  %conv7.i.3 = zext i8 %71 to i32, !dbg !2415
  %mul8.i.3 = mul nsw i32 %conv7.i.3, %weight, !dbg !2415
  %arrayidx9.i.3 = getelementptr inbounds i8, ptr %add.ptr184.i.2, i64 1, !dbg !2415
  %72 = load i8, ptr %arrayidx9.i.3, align 1, !dbg !2415
  %conv10.i.3 = zext i8 %72 to i32, !dbg !2415
  %mul11.i.3 = mul nsw i32 %sub.i, %conv10.i.3, !dbg !2415
  %add12.i.3 = add i32 %mul8.i.3, 32, !dbg !2415
  %add13.i.3 = add i32 %add12.i.3, %mul11.i.3, !dbg !2415
  %shr14.i.3 = ashr i32 %add13.i.3, 6, !dbg !2415
    #dbg_value(i32 %shr14.i.3, !1702, !DIExpression(), !2416)
  %tobool.not.i267.i.3 = icmp ult i32 %shr14.i.3, 256, !dbg !2418
  %73 = icmp sgt i32 %shr14.i.3, 0, !dbg !2419
  %shr.i268.i.3 = sext i1 %73 to i32, !dbg !2419
  %cond.i269.i.3 = select i1 %tobool.not.i267.i.3, i32 %shr14.i.3, i32 %shr.i268.i.3, !dbg !2419
  %conv.i270.i.3 = trunc i32 %cond.i269.i.3 to i8, !dbg !2419
  %arrayidx16.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 1, !dbg !2415
  store i8 %conv.i270.i.3, ptr %arrayidx16.i.3, align 1, !dbg !2415
  %arrayidx19.i.3 = getelementptr inbounds i8, ptr %add.ptr182.i.2, i64 2, !dbg !2420
  %74 = load i8, ptr %arrayidx19.i.3, align 1, !dbg !2420
  %conv20.i.3 = zext i8 %74 to i32, !dbg !2420
  %mul21.i.3 = mul nsw i32 %conv20.i.3, %weight, !dbg !2420
  %arrayidx22.i.3 = getelementptr inbounds i8, ptr %add.ptr184.i.2, i64 2, !dbg !2420
  %75 = load i8, ptr %arrayidx22.i.3, align 1, !dbg !2420
  %conv23.i.3 = zext i8 %75 to i32, !dbg !2420
  %mul24.i.3 = mul nsw i32 %sub.i, %conv23.i.3, !dbg !2420
  %add25.i.3 = add i32 %mul21.i.3, 32, !dbg !2420
  %add26.i.3 = add i32 %add25.i.3, %mul24.i.3, !dbg !2420
  %shr27.i.3 = ashr i32 %add26.i.3, 6, !dbg !2420
    #dbg_value(i32 %shr27.i.3, !1702, !DIExpression(), !2421)
  %tobool.not.i271.i.3 = icmp ult i32 %shr27.i.3, 256, !dbg !2423
  %76 = icmp sgt i32 %shr27.i.3, 0, !dbg !2424
  %shr.i272.i.3 = sext i1 %76 to i32, !dbg !2424
  %cond.i273.i.3 = select i1 %tobool.not.i271.i.3, i32 %shr27.i.3, i32 %shr.i272.i.3, !dbg !2424
  %conv.i274.i.3 = trunc i32 %cond.i273.i.3 to i8, !dbg !2424
  %arrayidx29.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 2, !dbg !2420
  store i8 %conv.i274.i.3, ptr %arrayidx29.i.3, align 1, !dbg !2420
  %arrayidx30.i.3 = getelementptr inbounds i8, ptr %add.ptr182.i.2, i64 3, !dbg !2425
  %77 = load i8, ptr %arrayidx30.i.3, align 1, !dbg !2425
  %conv31.i.3 = zext i8 %77 to i32, !dbg !2425
  %mul32.i.3 = mul nsw i32 %conv31.i.3, %weight, !dbg !2425
  %arrayidx33.i.3 = getelementptr inbounds i8, ptr %add.ptr184.i.2, i64 3, !dbg !2425
  %78 = load i8, ptr %arrayidx33.i.3, align 1, !dbg !2425
  %conv34.i.3 = zext i8 %78 to i32, !dbg !2425
  %mul35.i.3 = mul nsw i32 %sub.i, %conv34.i.3, !dbg !2425
  %add36.i.3 = add i32 %mul32.i.3, 32, !dbg !2425
  %add37.i.3 = add i32 %add36.i.3, %mul35.i.3, !dbg !2425
  %shr38.i.3 = ashr i32 %add37.i.3, 6, !dbg !2425
    #dbg_value(i32 %shr38.i.3, !1702, !DIExpression(), !2426)
  %tobool.not.i275.i.3 = icmp ult i32 %shr38.i.3, 256, !dbg !2428
  %79 = icmp sgt i32 %shr38.i.3, 0, !dbg !2429
  %shr.i276.i.3 = sext i1 %79 to i32, !dbg !2429
  %cond.i277.i.3 = select i1 %tobool.not.i275.i.3, i32 %shr38.i.3, i32 %shr.i276.i.3, !dbg !2429
  %conv.i278.i.3 = trunc i32 %cond.i277.i.3 to i8, !dbg !2429
    #dbg_value(i32 4, !2342, !DIExpression(), !2409)
    #dbg_value(!DIArgList(ptr %add.ptr.i.2, i64 %idx.ext.i8), !2327, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2406)
    #dbg_value(!DIArgList(ptr %add.ptr182.i.2, i64 %idx.ext181.i), !2333, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2406)
    #dbg_value(!DIArgList(ptr %add.ptr184.i.2, i64 %idx.ext183.i), !2335, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2406)
  br label %if.end, !dbg !2390

if.end:                                           ; preds = %if.else, %if.then
  %add.ptr.i.2.sink = phi ptr [ %add.ptr.i.2, %if.else ], [ %add.ptr15.us.i.2, %if.then ]
  %conv.i278.i.3.sink = phi i8 [ %conv.i278.i.3, %if.else ], [ %conv9.us.i.3.3, %if.then ]
  %arrayidx40.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2.sink, i64 3, !dbg !2388
  store i8 %conv.i278.i.3.sink, ptr %arrayidx40.i.3, align 1, !dbg !2388
  ret void, !dbg !2390
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @pixel_avg_4x2(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #7 !dbg !2433 {
entry:
    #dbg_value(ptr %pix1, !2435, !DIExpression(), !2442)
    #dbg_value(i32 %i_stride_pix1, !2436, !DIExpression(), !2442)
    #dbg_value(ptr %pix2, !2437, !DIExpression(), !2442)
    #dbg_value(i32 %i_stride_pix2, !2438, !DIExpression(), !2442)
    #dbg_value(ptr %pix3, !2439, !DIExpression(), !2442)
    #dbg_value(i32 %i_stride_pix3, !2440, !DIExpression(), !2442)
    #dbg_value(i32 %weight, !2441, !DIExpression(), !2442)
  %cmp = icmp eq i32 %weight, 32, !dbg !2443
  br i1 %cmp, label %if.then, label %if.else, !dbg !2445

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2446)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2446)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2446)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2446)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2446)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2446)
    #dbg_value(i32 4, !2143, !DIExpression(), !2446)
    #dbg_value(i32 2, !2144, !DIExpression(), !2446)
    #dbg_value(i32 0, !2145, !DIExpression(), !2448)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2448)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2446)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2446)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2446)
    #dbg_value(i32 0, !2147, !DIExpression(), !2449)
    #dbg_value(i64 0, !2147, !DIExpression(), !2449)
  %0 = load i8, ptr %pix2, align 1, !dbg !2450
  %conv.us.i = zext i8 %0 to i16, !dbg !2450
  %1 = load i8, ptr %pix3, align 1, !dbg !2451
  %conv7.us.i = zext i8 %1 to i16, !dbg !2451
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2452
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2453
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2454
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2455
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2456
    #dbg_value(i64 1, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2450
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2450
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2450
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2451
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2451
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2451
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2452
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2453
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2454
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2455
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2457
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2456
    #dbg_value(i64 2, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.2 = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2450
  %4 = load i8, ptr %arrayidx.us.i.2, align 1, !dbg !2450
  %conv.us.i.2 = zext i8 %4 to i16, !dbg !2450
  %arrayidx6.us.i.2 = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2451
  %5 = load i8, ptr %arrayidx6.us.i.2, align 1, !dbg !2451
  %conv7.us.i.2 = zext i8 %5 to i16, !dbg !2451
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2452
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2453
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2454
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2455
  %arrayidx11.us.i.2 = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2457
  store i8 %conv9.us.i.2, ptr %arrayidx11.us.i.2, align 1, !dbg !2456
    #dbg_value(i64 3, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.3 = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2450
  %6 = load i8, ptr %arrayidx.us.i.3, align 1, !dbg !2450
  %conv.us.i.3 = zext i8 %6 to i16, !dbg !2450
  %arrayidx6.us.i.3 = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2451
  %7 = load i8, ptr %arrayidx6.us.i.3, align 1, !dbg !2451
  %conv7.us.i.3 = zext i8 %7 to i16, !dbg !2451
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2452
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2453
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2454
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2455
  %arrayidx11.us.i.3 = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2457
  store i8 %conv9.us.i.3, ptr %arrayidx11.us.i.3, align 1, !dbg !2456
    #dbg_value(i64 4, !2147, !DIExpression(), !2449)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2458
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2446)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2459
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2446)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2460
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2446)
    #dbg_value(i32 1, !2145, !DIExpression(), !2448)
    #dbg_value(i32 0, !2147, !DIExpression(), !2449)
    #dbg_value(i64 0, !2147, !DIExpression(), !2449)
  %8 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2450
  %conv.us.i.112 = zext i8 %8 to i16, !dbg !2450
  %9 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2451
  %conv7.us.i.113 = zext i8 %9 to i16, !dbg !2451
  %add.us.i.114 = add nuw nsw i16 %conv.us.i.112, 1, !dbg !2452
  %add8.us.i.115 = add nuw nsw i16 %add.us.i.114, %conv7.us.i.113, !dbg !2453
  %shr.us.i.116 = lshr i16 %add8.us.i.115, 1, !dbg !2454
  %conv9.us.i.117 = trunc nuw i16 %shr.us.i.116 to i8, !dbg !2455
  store i8 %conv9.us.i.117, ptr %add.ptr15.us.i, align 1, !dbg !2456
    #dbg_value(i64 1, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2450
  %10 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2450
  %conv.us.i.1.1 = zext i8 %10 to i16, !dbg !2450
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2451
  %11 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2451
  %conv7.us.i.1.1 = zext i8 %11 to i16, !dbg !2451
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2452
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2453
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2454
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2455
  %arrayidx11.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 1, !dbg !2457
  store i8 %conv9.us.i.1.1, ptr %arrayidx11.us.i.1.1, align 1, !dbg !2456
    #dbg_value(i64 2, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 2, !dbg !2450
  %12 = load i8, ptr %arrayidx.us.i.2.1, align 1, !dbg !2450
  %conv.us.i.2.1 = zext i8 %12 to i16, !dbg !2450
  %arrayidx6.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 2, !dbg !2451
  %13 = load i8, ptr %arrayidx6.us.i.2.1, align 1, !dbg !2451
  %conv7.us.i.2.1 = zext i8 %13 to i16, !dbg !2451
  %add.us.i.2.1 = add nuw nsw i16 %conv.us.i.2.1, 1, !dbg !2452
  %add8.us.i.2.1 = add nuw nsw i16 %add.us.i.2.1, %conv7.us.i.2.1, !dbg !2453
  %shr.us.i.2.1 = lshr i16 %add8.us.i.2.1, 1, !dbg !2454
  %conv9.us.i.2.1 = trunc nuw i16 %shr.us.i.2.1 to i8, !dbg !2455
  %arrayidx11.us.i.2.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 2, !dbg !2457
  store i8 %conv9.us.i.2.1, ptr %arrayidx11.us.i.2.1, align 1, !dbg !2456
    #dbg_value(i64 3, !2147, !DIExpression(), !2449)
  %arrayidx.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 3, !dbg !2450
  %14 = load i8, ptr %arrayidx.us.i.3.1, align 1, !dbg !2450
  %conv.us.i.3.1 = zext i8 %14 to i16, !dbg !2450
  %arrayidx6.us.i.3.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 3, !dbg !2451
  %15 = load i8, ptr %arrayidx6.us.i.3.1, align 1, !dbg !2451
  %conv7.us.i.3.1 = zext i8 %15 to i16, !dbg !2451
  %add.us.i.3.1 = add nuw nsw i16 %conv.us.i.3.1, 1, !dbg !2452
  %add8.us.i.3.1 = add nuw nsw i16 %add.us.i.3.1, %conv7.us.i.3.1, !dbg !2453
  %shr.us.i.3.1 = lshr i16 %add8.us.i.3.1, 1, !dbg !2454
  %conv9.us.i.3.1 = trunc nuw i16 %shr.us.i.3.1 to i8, !dbg !2455
    #dbg_value(i64 4, !2147, !DIExpression(), !2449)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2446)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2446)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2446)
    #dbg_value(i32 2, !2145, !DIExpression(), !2448)
  br label %if.end, !dbg !2445

if.else:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2461)
    #dbg_value(i32 %i_stride_pix1, !2332, !DIExpression(), !2461)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2461)
    #dbg_value(i32 %i_stride_pix2, !2334, !DIExpression(), !2461)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2461)
    #dbg_value(i32 %i_stride_pix3, !2336, !DIExpression(), !2461)
    #dbg_value(i32 4, !2337, !DIExpression(), !2461)
    #dbg_value(i32 2, !2338, !DIExpression(), !2461)
    #dbg_value(i32 %weight, !2339, !DIExpression(), !2461)
  %sub.i = sub nsw i32 64, %weight, !dbg !2463
    #dbg_value(i32 %sub.i, !2340, !DIExpression(), !2461)
    #dbg_value(i32 0, !2342, !DIExpression(), !2464)
  %idx.ext.i8 = sext i32 %i_stride_pix1 to i64
  %idx.ext181.i = sext i32 %i_stride_pix2 to i64
  %idx.ext183.i = sext i32 %i_stride_pix3 to i64
    #dbg_value(i32 0, !2342, !DIExpression(), !2464)
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2461)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2461)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2461)
  %16 = load i8, ptr %pix2, align 1, !dbg !2465
  %conv.i = zext i8 %16 to i32, !dbg !2465
  %mul.i = mul nsw i32 %conv.i, %weight, !dbg !2465
  %17 = load i8, ptr %pix3, align 1, !dbg !2465
  %conv2.i = zext i8 %17 to i32, !dbg !2465
  %mul3.i = mul nsw i32 %sub.i, %conv2.i, !dbg !2465
  %add.i = add i32 %mul.i, 32, !dbg !2465
  %add4.i = add i32 %add.i, %mul3.i, !dbg !2465
  %shr.i = ashr i32 %add4.i, 6, !dbg !2465
    #dbg_value(i32 %shr.i, !1702, !DIExpression(), !2466)
  %tobool.not.i.i = icmp ult i32 %shr.i, 256, !dbg !2468
  %18 = icmp sgt i32 %shr.i, 0, !dbg !2469
  %shr.i.i = sext i1 %18 to i32, !dbg !2469
  %cond.i.i = select i1 %tobool.not.i.i, i32 %shr.i, i32 %shr.i.i, !dbg !2469
  %conv.i.i = trunc i32 %cond.i.i to i8, !dbg !2469
  store i8 %conv.i.i, ptr %pix1, align 1, !dbg !2465
  %arrayidx6.i = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2470
  %19 = load i8, ptr %arrayidx6.i, align 1, !dbg !2470
  %conv7.i = zext i8 %19 to i32, !dbg !2470
  %mul8.i = mul nsw i32 %conv7.i, %weight, !dbg !2470
  %arrayidx9.i = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2470
  %20 = load i8, ptr %arrayidx9.i, align 1, !dbg !2470
  %conv10.i = zext i8 %20 to i32, !dbg !2470
  %mul11.i = mul nsw i32 %sub.i, %conv10.i, !dbg !2470
  %add12.i = add i32 %mul8.i, 32, !dbg !2470
  %add13.i = add i32 %add12.i, %mul11.i, !dbg !2470
  %shr14.i = ashr i32 %add13.i, 6, !dbg !2470
    #dbg_value(i32 %shr14.i, !1702, !DIExpression(), !2471)
  %tobool.not.i267.i = icmp ult i32 %shr14.i, 256, !dbg !2473
  %21 = icmp sgt i32 %shr14.i, 0, !dbg !2474
  %shr.i268.i = sext i1 %21 to i32, !dbg !2474
  %cond.i269.i = select i1 %tobool.not.i267.i, i32 %shr14.i, i32 %shr.i268.i, !dbg !2474
  %conv.i270.i = trunc i32 %cond.i269.i to i8, !dbg !2474
  %arrayidx16.i = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2470
  store i8 %conv.i270.i, ptr %arrayidx16.i, align 1, !dbg !2470
  %arrayidx19.i = getelementptr inbounds i8, ptr %pix2, i64 2, !dbg !2475
  %22 = load i8, ptr %arrayidx19.i, align 1, !dbg !2475
  %conv20.i = zext i8 %22 to i32, !dbg !2475
  %mul21.i = mul nsw i32 %conv20.i, %weight, !dbg !2475
  %arrayidx22.i = getelementptr inbounds i8, ptr %pix3, i64 2, !dbg !2475
  %23 = load i8, ptr %arrayidx22.i, align 1, !dbg !2475
  %conv23.i = zext i8 %23 to i32, !dbg !2475
  %mul24.i = mul nsw i32 %sub.i, %conv23.i, !dbg !2475
  %add25.i = add i32 %mul21.i, 32, !dbg !2475
  %add26.i = add i32 %add25.i, %mul24.i, !dbg !2475
  %shr27.i = ashr i32 %add26.i, 6, !dbg !2475
    #dbg_value(i32 %shr27.i, !1702, !DIExpression(), !2476)
  %tobool.not.i271.i = icmp ult i32 %shr27.i, 256, !dbg !2478
  %24 = icmp sgt i32 %shr27.i, 0, !dbg !2479
  %shr.i272.i = sext i1 %24 to i32, !dbg !2479
  %cond.i273.i = select i1 %tobool.not.i271.i, i32 %shr27.i, i32 %shr.i272.i, !dbg !2479
  %conv.i274.i = trunc i32 %cond.i273.i to i8, !dbg !2479
  %arrayidx29.i = getelementptr inbounds i8, ptr %pix1, i64 2, !dbg !2475
  store i8 %conv.i274.i, ptr %arrayidx29.i, align 1, !dbg !2475
  %arrayidx30.i = getelementptr inbounds i8, ptr %pix2, i64 3, !dbg !2480
  %25 = load i8, ptr %arrayidx30.i, align 1, !dbg !2480
  %conv31.i = zext i8 %25 to i32, !dbg !2480
  %mul32.i = mul nsw i32 %conv31.i, %weight, !dbg !2480
  %arrayidx33.i = getelementptr inbounds i8, ptr %pix3, i64 3, !dbg !2480
  %26 = load i8, ptr %arrayidx33.i, align 1, !dbg !2480
  %conv34.i = zext i8 %26 to i32, !dbg !2480
  %mul35.i = mul nsw i32 %sub.i, %conv34.i, !dbg !2480
  %add36.i = add i32 %mul32.i, 32, !dbg !2480
  %add37.i = add i32 %add36.i, %mul35.i, !dbg !2480
  %shr38.i = ashr i32 %add37.i, 6, !dbg !2480
    #dbg_value(i32 %shr38.i, !1702, !DIExpression(), !2481)
  %tobool.not.i275.i = icmp ult i32 %shr38.i, 256, !dbg !2483
  %27 = icmp sgt i32 %shr38.i, 0, !dbg !2484
  %shr.i276.i = sext i1 %27 to i32, !dbg !2484
  %cond.i277.i = select i1 %tobool.not.i275.i, i32 %shr38.i, i32 %shr.i276.i, !dbg !2484
  %conv.i278.i = trunc i32 %cond.i277.i to i8, !dbg !2484
  %arrayidx40.i = getelementptr inbounds i8, ptr %pix1, i64 3, !dbg !2480
  store i8 %conv.i278.i, ptr %arrayidx40.i, align 1, !dbg !2480
    #dbg_value(i32 1, !2342, !DIExpression(), !2464)
  %add.ptr.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext.i8, !dbg !2485
    #dbg_value(ptr %add.ptr.i, !2327, !DIExpression(), !2461)
  %add.ptr182.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext181.i, !dbg !2486
    #dbg_value(ptr %add.ptr182.i, !2333, !DIExpression(), !2461)
  %add.ptr184.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext183.i, !dbg !2487
    #dbg_value(ptr %add.ptr184.i, !2335, !DIExpression(), !2461)
  %28 = load i8, ptr %add.ptr182.i, align 1, !dbg !2465
  %conv.i.1 = zext i8 %28 to i32, !dbg !2465
  %mul.i.1 = mul nsw i32 %conv.i.1, %weight, !dbg !2465
  %29 = load i8, ptr %add.ptr184.i, align 1, !dbg !2465
  %conv2.i.1 = zext i8 %29 to i32, !dbg !2465
  %mul3.i.1 = mul nsw i32 %sub.i, %conv2.i.1, !dbg !2465
  %add.i.1 = add i32 %mul.i.1, 32, !dbg !2465
  %add4.i.1 = add i32 %add.i.1, %mul3.i.1, !dbg !2465
  %shr.i.1 = ashr i32 %add4.i.1, 6, !dbg !2465
    #dbg_value(i32 %shr.i.1, !1702, !DIExpression(), !2466)
  %tobool.not.i.i.1 = icmp ult i32 %shr.i.1, 256, !dbg !2468
  %30 = icmp sgt i32 %shr.i.1, 0, !dbg !2469
  %shr.i.i.1 = sext i1 %30 to i32, !dbg !2469
  %cond.i.i.1 = select i1 %tobool.not.i.i.1, i32 %shr.i.1, i32 %shr.i.i.1, !dbg !2469
  %conv.i.i.1 = trunc i32 %cond.i.i.1 to i8, !dbg !2469
  store i8 %conv.i.i.1, ptr %add.ptr.i, align 1, !dbg !2465
  %arrayidx6.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 1, !dbg !2470
  %31 = load i8, ptr %arrayidx6.i.1, align 1, !dbg !2470
  %conv7.i.1 = zext i8 %31 to i32, !dbg !2470
  %mul8.i.1 = mul nsw i32 %conv7.i.1, %weight, !dbg !2470
  %arrayidx9.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 1, !dbg !2470
  %32 = load i8, ptr %arrayidx9.i.1, align 1, !dbg !2470
  %conv10.i.1 = zext i8 %32 to i32, !dbg !2470
  %mul11.i.1 = mul nsw i32 %sub.i, %conv10.i.1, !dbg !2470
  %add12.i.1 = add i32 %mul8.i.1, 32, !dbg !2470
  %add13.i.1 = add i32 %add12.i.1, %mul11.i.1, !dbg !2470
  %shr14.i.1 = ashr i32 %add13.i.1, 6, !dbg !2470
    #dbg_value(i32 %shr14.i.1, !1702, !DIExpression(), !2471)
  %tobool.not.i267.i.1 = icmp ult i32 %shr14.i.1, 256, !dbg !2473
  %33 = icmp sgt i32 %shr14.i.1, 0, !dbg !2474
  %shr.i268.i.1 = sext i1 %33 to i32, !dbg !2474
  %cond.i269.i.1 = select i1 %tobool.not.i267.i.1, i32 %shr14.i.1, i32 %shr.i268.i.1, !dbg !2474
  %conv.i270.i.1 = trunc i32 %cond.i269.i.1 to i8, !dbg !2474
  %arrayidx16.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 1, !dbg !2470
  store i8 %conv.i270.i.1, ptr %arrayidx16.i.1, align 1, !dbg !2470
  %arrayidx19.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 2, !dbg !2475
  %34 = load i8, ptr %arrayidx19.i.1, align 1, !dbg !2475
  %conv20.i.1 = zext i8 %34 to i32, !dbg !2475
  %mul21.i.1 = mul nsw i32 %conv20.i.1, %weight, !dbg !2475
  %arrayidx22.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 2, !dbg !2475
  %35 = load i8, ptr %arrayidx22.i.1, align 1, !dbg !2475
  %conv23.i.1 = zext i8 %35 to i32, !dbg !2475
  %mul24.i.1 = mul nsw i32 %sub.i, %conv23.i.1, !dbg !2475
  %add25.i.1 = add i32 %mul21.i.1, 32, !dbg !2475
  %add26.i.1 = add i32 %add25.i.1, %mul24.i.1, !dbg !2475
  %shr27.i.1 = ashr i32 %add26.i.1, 6, !dbg !2475
    #dbg_value(i32 %shr27.i.1, !1702, !DIExpression(), !2476)
  %tobool.not.i271.i.1 = icmp ult i32 %shr27.i.1, 256, !dbg !2478
  %36 = icmp sgt i32 %shr27.i.1, 0, !dbg !2479
  %shr.i272.i.1 = sext i1 %36 to i32, !dbg !2479
  %cond.i273.i.1 = select i1 %tobool.not.i271.i.1, i32 %shr27.i.1, i32 %shr.i272.i.1, !dbg !2479
  %conv.i274.i.1 = trunc i32 %cond.i273.i.1 to i8, !dbg !2479
  %arrayidx29.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 2, !dbg !2475
  store i8 %conv.i274.i.1, ptr %arrayidx29.i.1, align 1, !dbg !2475
  %arrayidx30.i.1 = getelementptr inbounds i8, ptr %add.ptr182.i, i64 3, !dbg !2480
  %37 = load i8, ptr %arrayidx30.i.1, align 1, !dbg !2480
  %conv31.i.1 = zext i8 %37 to i32, !dbg !2480
  %mul32.i.1 = mul nsw i32 %conv31.i.1, %weight, !dbg !2480
  %arrayidx33.i.1 = getelementptr inbounds i8, ptr %add.ptr184.i, i64 3, !dbg !2480
  %38 = load i8, ptr %arrayidx33.i.1, align 1, !dbg !2480
  %conv34.i.1 = zext i8 %38 to i32, !dbg !2480
  %mul35.i.1 = mul nsw i32 %sub.i, %conv34.i.1, !dbg !2480
  %add36.i.1 = add i32 %mul32.i.1, 32, !dbg !2480
  %add37.i.1 = add i32 %add36.i.1, %mul35.i.1, !dbg !2480
  %shr38.i.1 = ashr i32 %add37.i.1, 6, !dbg !2480
    #dbg_value(i32 %shr38.i.1, !1702, !DIExpression(), !2481)
  %tobool.not.i275.i.1 = icmp ult i32 %shr38.i.1, 256, !dbg !2483
  %39 = icmp sgt i32 %shr38.i.1, 0, !dbg !2484
  %shr.i276.i.1 = sext i1 %39 to i32, !dbg !2484
  %cond.i277.i.1 = select i1 %tobool.not.i275.i.1, i32 %shr38.i.1, i32 %shr.i276.i.1, !dbg !2484
  %conv.i278.i.1 = trunc i32 %cond.i277.i.1 to i8, !dbg !2484
    #dbg_value(i32 2, !2342, !DIExpression(), !2464)
    #dbg_value(!DIArgList(ptr %add.ptr.i, i64 %idx.ext.i8), !2327, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2461)
    #dbg_value(!DIArgList(ptr %add.ptr182.i, i64 %idx.ext181.i), !2333, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2461)
    #dbg_value(!DIArgList(ptr %add.ptr184.i, i64 %idx.ext183.i), !2335, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2461)
  br label %if.end, !dbg !2445

if.end:                                           ; preds = %if.else, %if.then
  %40 = phi i64 [ %idx.ext.i8, %if.else ], [ %idx.ext14.i, %if.then ]
  %conv.i278.i.1.sink = phi i8 [ %conv.i278.i.1, %if.else ], [ %conv9.us.i.3.1, %if.then ]
  %41 = getelementptr inbounds i8, ptr %pix1, i64 %40, !dbg !2485
  %arrayidx40.i.1 = getelementptr inbounds i8, ptr %41, i64 3, !dbg !2443
  store i8 %conv.i278.i.1.sink, ptr %arrayidx40.i.1, align 1, !dbg !2443
  ret void, !dbg !2445
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @pixel_avg_2x4(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #6 !dbg !2488 {
entry:
    #dbg_value(ptr %pix1, !2490, !DIExpression(), !2497)
    #dbg_value(i32 %i_stride_pix1, !2491, !DIExpression(), !2497)
    #dbg_value(ptr %pix2, !2492, !DIExpression(), !2497)
    #dbg_value(i32 %i_stride_pix2, !2493, !DIExpression(), !2497)
    #dbg_value(ptr %pix3, !2494, !DIExpression(), !2497)
    #dbg_value(i32 %i_stride_pix3, !2495, !DIExpression(), !2497)
    #dbg_value(i32 %weight, !2496, !DIExpression(), !2497)
  %cmp = icmp eq i32 %weight, 32, !dbg !2498
  br i1 %cmp, label %if.then, label %if.else, !dbg !2500

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2501)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2501)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2501)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2501)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2501)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2501)
    #dbg_value(i32 2, !2143, !DIExpression(), !2501)
    #dbg_value(i32 4, !2144, !DIExpression(), !2501)
    #dbg_value(i32 0, !2145, !DIExpression(), !2503)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2503)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2501)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2501)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2501)
    #dbg_value(i32 0, !2147, !DIExpression(), !2504)
    #dbg_value(i64 0, !2147, !DIExpression(), !2504)
  %0 = load i8, ptr %pix2, align 1, !dbg !2505
  %conv.us.i = zext i8 %0 to i16, !dbg !2505
  %1 = load i8, ptr %pix3, align 1, !dbg !2506
  %conv7.us.i = zext i8 %1 to i16, !dbg !2506
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2507
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2508
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2509
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2510
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2511
    #dbg_value(i64 1, !2147, !DIExpression(), !2504)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2505
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2505
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2505
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2506
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2506
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2506
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2507
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2508
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2509
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2510
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2512
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2511
    #dbg_value(i64 2, !2147, !DIExpression(), !2504)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2513
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2501)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2514
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2501)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2515
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2501)
    #dbg_value(i32 1, !2145, !DIExpression(), !2503)
    #dbg_value(i32 0, !2147, !DIExpression(), !2504)
    #dbg_value(i64 0, !2147, !DIExpression(), !2504)
  %4 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2505
  %conv.us.i.117 = zext i8 %4 to i16, !dbg !2505
  %5 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2506
  %conv7.us.i.118 = zext i8 %5 to i16, !dbg !2506
  %add.us.i.119 = add nuw nsw i16 %conv.us.i.117, 1, !dbg !2507
  %add8.us.i.120 = add nuw nsw i16 %add.us.i.119, %conv7.us.i.118, !dbg !2508
  %shr.us.i.121 = lshr i16 %add8.us.i.120, 1, !dbg !2509
  %conv9.us.i.122 = trunc nuw i16 %shr.us.i.121 to i8, !dbg !2510
  store i8 %conv9.us.i.122, ptr %add.ptr15.us.i, align 1, !dbg !2511
    #dbg_value(i64 1, !2147, !DIExpression(), !2504)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2505
  %6 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2505
  %conv.us.i.1.1 = zext i8 %6 to i16, !dbg !2505
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2506
  %7 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2506
  %conv7.us.i.1.1 = zext i8 %7 to i16, !dbg !2506
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2507
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2508
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2509
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2510
  %arrayidx11.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 1, !dbg !2512
  store i8 %conv9.us.i.1.1, ptr %arrayidx11.us.i.1.1, align 1, !dbg !2511
    #dbg_value(i64 2, !2147, !DIExpression(), !2504)
  %add.ptr.us.i.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 %idx.ext.i, !dbg !2513
    #dbg_value(ptr %add.ptr.us.i.1, !2139, !DIExpression(), !2501)
  %add.ptr13.us.i.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 %idx.ext12.i, !dbg !2514
    #dbg_value(ptr %add.ptr13.us.i.1, !2141, !DIExpression(), !2501)
  %add.ptr15.us.i.1 = getelementptr inbounds i8, ptr %add.ptr15.us.i, i64 %idx.ext14.i, !dbg !2515
    #dbg_value(ptr %add.ptr15.us.i.1, !2135, !DIExpression(), !2501)
    #dbg_value(i32 2, !2145, !DIExpression(), !2503)
    #dbg_value(i32 0, !2147, !DIExpression(), !2504)
    #dbg_value(i64 0, !2147, !DIExpression(), !2504)
  %8 = load i8, ptr %add.ptr.us.i.1, align 1, !dbg !2505
  %conv.us.i.2 = zext i8 %8 to i16, !dbg !2505
  %9 = load i8, ptr %add.ptr13.us.i.1, align 1, !dbg !2506
  %conv7.us.i.2 = zext i8 %9 to i16, !dbg !2506
  %add.us.i.2 = add nuw nsw i16 %conv.us.i.2, 1, !dbg !2507
  %add8.us.i.2 = add nuw nsw i16 %add.us.i.2, %conv7.us.i.2, !dbg !2508
  %shr.us.i.2 = lshr i16 %add8.us.i.2, 1, !dbg !2509
  %conv9.us.i.2 = trunc nuw i16 %shr.us.i.2 to i8, !dbg !2510
  store i8 %conv9.us.i.2, ptr %add.ptr15.us.i.1, align 1, !dbg !2511
    #dbg_value(i64 1, !2147, !DIExpression(), !2504)
  %arrayidx.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 1, !dbg !2505
  %10 = load i8, ptr %arrayidx.us.i.1.2, align 1, !dbg !2505
  %conv.us.i.1.2 = zext i8 %10 to i16, !dbg !2505
  %arrayidx6.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 1, !dbg !2506
  %11 = load i8, ptr %arrayidx6.us.i.1.2, align 1, !dbg !2506
  %conv7.us.i.1.2 = zext i8 %11 to i16, !dbg !2506
  %add.us.i.1.2 = add nuw nsw i16 %conv.us.i.1.2, 1, !dbg !2507
  %add8.us.i.1.2 = add nuw nsw i16 %add.us.i.1.2, %conv7.us.i.1.2, !dbg !2508
  %shr.us.i.1.2 = lshr i16 %add8.us.i.1.2, 1, !dbg !2509
  %conv9.us.i.1.2 = trunc nuw i16 %shr.us.i.1.2 to i8, !dbg !2510
  %arrayidx11.us.i.1.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 1, !dbg !2512
  store i8 %conv9.us.i.1.2, ptr %arrayidx11.us.i.1.2, align 1, !dbg !2511
    #dbg_value(i64 2, !2147, !DIExpression(), !2504)
  %add.ptr.us.i.2 = getelementptr inbounds i8, ptr %add.ptr.us.i.1, i64 %idx.ext.i, !dbg !2513
    #dbg_value(ptr %add.ptr.us.i.2, !2139, !DIExpression(), !2501)
  %add.ptr13.us.i.2 = getelementptr inbounds i8, ptr %add.ptr13.us.i.1, i64 %idx.ext12.i, !dbg !2514
    #dbg_value(ptr %add.ptr13.us.i.2, !2141, !DIExpression(), !2501)
  %add.ptr15.us.i.2 = getelementptr inbounds i8, ptr %add.ptr15.us.i.1, i64 %idx.ext14.i, !dbg !2515
    #dbg_value(ptr %add.ptr15.us.i.2, !2135, !DIExpression(), !2501)
    #dbg_value(i32 3, !2145, !DIExpression(), !2503)
    #dbg_value(i32 0, !2147, !DIExpression(), !2504)
    #dbg_value(i64 0, !2147, !DIExpression(), !2504)
  %12 = load i8, ptr %add.ptr.us.i.2, align 1, !dbg !2505
  %conv.us.i.3 = zext i8 %12 to i16, !dbg !2505
  %13 = load i8, ptr %add.ptr13.us.i.2, align 1, !dbg !2506
  %conv7.us.i.3 = zext i8 %13 to i16, !dbg !2506
  %add.us.i.3 = add nuw nsw i16 %conv.us.i.3, 1, !dbg !2507
  %add8.us.i.3 = add nuw nsw i16 %add.us.i.3, %conv7.us.i.3, !dbg !2508
  %shr.us.i.3 = lshr i16 %add8.us.i.3, 1, !dbg !2509
  %conv9.us.i.3 = trunc nuw i16 %shr.us.i.3 to i8, !dbg !2510
  store i8 %conv9.us.i.3, ptr %add.ptr15.us.i.2, align 1, !dbg !2511
    #dbg_value(i64 1, !2147, !DIExpression(), !2504)
  %arrayidx.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr.us.i.2, i64 1, !dbg !2505
  %14 = load i8, ptr %arrayidx.us.i.1.3, align 1, !dbg !2505
  %conv.us.i.1.3 = zext i8 %14 to i16, !dbg !2505
  %arrayidx6.us.i.1.3 = getelementptr inbounds i8, ptr %add.ptr13.us.i.2, i64 1, !dbg !2506
  %15 = load i8, ptr %arrayidx6.us.i.1.3, align 1, !dbg !2506
  %conv7.us.i.1.3 = zext i8 %15 to i16, !dbg !2506
  %add.us.i.1.3 = add nuw nsw i16 %conv.us.i.1.3, 1, !dbg !2507
  %add8.us.i.1.3 = add nuw nsw i16 %add.us.i.1.3, %conv7.us.i.1.3, !dbg !2508
  %shr.us.i.1.3 = lshr i16 %add8.us.i.1.3, 1, !dbg !2509
  %conv9.us.i.1.3 = trunc nuw i16 %shr.us.i.1.3 to i8, !dbg !2510
    #dbg_value(i64 2, !2147, !DIExpression(), !2504)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i.2, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2501)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i.2, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2501)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i.2, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2501)
    #dbg_value(i32 4, !2145, !DIExpression(), !2503)
  br label %if.end, !dbg !2500

if.else:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2516)
    #dbg_value(i32 %i_stride_pix1, !2332, !DIExpression(), !2516)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2516)
    #dbg_value(i32 %i_stride_pix2, !2334, !DIExpression(), !2516)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2516)
    #dbg_value(i32 %i_stride_pix3, !2336, !DIExpression(), !2516)
    #dbg_value(i32 2, !2337, !DIExpression(), !2516)
    #dbg_value(i32 4, !2338, !DIExpression(), !2516)
    #dbg_value(i32 %weight, !2339, !DIExpression(), !2516)
  %sub.i = sub nsw i32 64, %weight, !dbg !2518
    #dbg_value(i32 %sub.i, !2340, !DIExpression(), !2516)
    #dbg_value(i32 0, !2342, !DIExpression(), !2519)
  %idx.ext.i8 = sext i32 %i_stride_pix1 to i64
  %idx.ext181.i = sext i32 %i_stride_pix2 to i64
  %idx.ext183.i = sext i32 %i_stride_pix3 to i64
    #dbg_value(i32 0, !2342, !DIExpression(), !2519)
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2516)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2516)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2516)
  %16 = load i8, ptr %pix2, align 1, !dbg !2520
  %conv.us.i9 = zext i8 %16 to i32, !dbg !2520
  %mul.us.i = mul nsw i32 %conv.us.i9, %weight, !dbg !2520
  %17 = load i8, ptr %pix3, align 1, !dbg !2520
  %conv2.us.i = zext i8 %17 to i32, !dbg !2520
  %mul3.us.i = mul nsw i32 %sub.i, %conv2.us.i, !dbg !2520
  %add.us.i10 = add i32 %mul.us.i, 32, !dbg !2520
  %add4.us.i = add i32 %add.us.i10, %mul3.us.i, !dbg !2520
  %shr.us.i11 = ashr i32 %add4.us.i, 6, !dbg !2520
    #dbg_value(i32 %shr.us.i11, !1702, !DIExpression(), !2521)
  %tobool.not.i.us.i = icmp ult i32 %shr.us.i11, 256, !dbg !2523
  %18 = icmp sgt i32 %shr.us.i11, 0, !dbg !2524
  %shr.i.us.i = sext i1 %18 to i32, !dbg !2524
  %cond.i.us.i = select i1 %tobool.not.i.us.i, i32 %shr.us.i11, i32 %shr.i.us.i, !dbg !2524
  %conv.i.us.i = trunc i32 %cond.i.us.i to i8, !dbg !2524
  store i8 %conv.i.us.i, ptr %pix1, align 1, !dbg !2520
  %arrayidx6.us.i12 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2525
  %19 = load i8, ptr %arrayidx6.us.i12, align 1, !dbg !2525
  %conv7.us.i13 = zext i8 %19 to i32, !dbg !2525
  %mul8.us.i = mul nsw i32 %conv7.us.i13, %weight, !dbg !2525
  %arrayidx9.us.i = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2525
  %20 = load i8, ptr %arrayidx9.us.i, align 1, !dbg !2525
  %conv10.us.i = zext i8 %20 to i32, !dbg !2525
  %mul11.us.i = mul nsw i32 %sub.i, %conv10.us.i, !dbg !2525
  %add12.us.i = add i32 %mul8.us.i, 32, !dbg !2525
  %add13.us.i = add i32 %add12.us.i, %mul11.us.i, !dbg !2525
  %shr14.us.i = ashr i32 %add13.us.i, 6, !dbg !2525
    #dbg_value(i32 %shr14.us.i, !1702, !DIExpression(), !2526)
  %tobool.not.i267.us.i = icmp ult i32 %shr14.us.i, 256, !dbg !2528
  %21 = icmp sgt i32 %shr14.us.i, 0, !dbg !2529
  %shr.i268.us.i = sext i1 %21 to i32, !dbg !2529
  %cond.i269.us.i = select i1 %tobool.not.i267.us.i, i32 %shr14.us.i, i32 %shr.i268.us.i, !dbg !2529
  %conv.i270.us.i = trunc i32 %cond.i269.us.i to i8, !dbg !2529
  %arrayidx16.us.i = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2525
  store i8 %conv.i270.us.i, ptr %arrayidx16.us.i, align 1, !dbg !2525
    #dbg_value(i32 1, !2342, !DIExpression(), !2519)
  %add.ptr.us.i14 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext.i8, !dbg !2530
    #dbg_value(ptr %add.ptr.us.i14, !2327, !DIExpression(), !2516)
  %add.ptr182.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext181.i, !dbg !2531
    #dbg_value(ptr %add.ptr182.us.i, !2333, !DIExpression(), !2516)
  %add.ptr184.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext183.i, !dbg !2532
    #dbg_value(ptr %add.ptr184.us.i, !2335, !DIExpression(), !2516)
  %22 = load i8, ptr %add.ptr182.us.i, align 1, !dbg !2520
  %conv.us.i9.1 = zext i8 %22 to i32, !dbg !2520
  %mul.us.i.1 = mul nsw i32 %conv.us.i9.1, %weight, !dbg !2520
  %23 = load i8, ptr %add.ptr184.us.i, align 1, !dbg !2520
  %conv2.us.i.1 = zext i8 %23 to i32, !dbg !2520
  %mul3.us.i.1 = mul nsw i32 %sub.i, %conv2.us.i.1, !dbg !2520
  %add.us.i10.1 = add i32 %mul.us.i.1, 32, !dbg !2520
  %add4.us.i.1 = add i32 %add.us.i10.1, %mul3.us.i.1, !dbg !2520
  %shr.us.i11.1 = ashr i32 %add4.us.i.1, 6, !dbg !2520
    #dbg_value(i32 %shr.us.i11.1, !1702, !DIExpression(), !2521)
  %tobool.not.i.us.i.1 = icmp ult i32 %shr.us.i11.1, 256, !dbg !2523
  %24 = icmp sgt i32 %shr.us.i11.1, 0, !dbg !2524
  %shr.i.us.i.1 = sext i1 %24 to i32, !dbg !2524
  %cond.i.us.i.1 = select i1 %tobool.not.i.us.i.1, i32 %shr.us.i11.1, i32 %shr.i.us.i.1, !dbg !2524
  %conv.i.us.i.1 = trunc i32 %cond.i.us.i.1 to i8, !dbg !2524
  store i8 %conv.i.us.i.1, ptr %add.ptr.us.i14, align 1, !dbg !2520
  %arrayidx6.us.i12.1 = getelementptr inbounds i8, ptr %add.ptr182.us.i, i64 1, !dbg !2525
  %25 = load i8, ptr %arrayidx6.us.i12.1, align 1, !dbg !2525
  %conv7.us.i13.1 = zext i8 %25 to i32, !dbg !2525
  %mul8.us.i.1 = mul nsw i32 %conv7.us.i13.1, %weight, !dbg !2525
  %arrayidx9.us.i.1 = getelementptr inbounds i8, ptr %add.ptr184.us.i, i64 1, !dbg !2525
  %26 = load i8, ptr %arrayidx9.us.i.1, align 1, !dbg !2525
  %conv10.us.i.1 = zext i8 %26 to i32, !dbg !2525
  %mul11.us.i.1 = mul nsw i32 %sub.i, %conv10.us.i.1, !dbg !2525
  %add12.us.i.1 = add i32 %mul8.us.i.1, 32, !dbg !2525
  %add13.us.i.1 = add i32 %add12.us.i.1, %mul11.us.i.1, !dbg !2525
  %shr14.us.i.1 = ashr i32 %add13.us.i.1, 6, !dbg !2525
    #dbg_value(i32 %shr14.us.i.1, !1702, !DIExpression(), !2526)
  %tobool.not.i267.us.i.1 = icmp ult i32 %shr14.us.i.1, 256, !dbg !2528
  %27 = icmp sgt i32 %shr14.us.i.1, 0, !dbg !2529
  %shr.i268.us.i.1 = sext i1 %27 to i32, !dbg !2529
  %cond.i269.us.i.1 = select i1 %tobool.not.i267.us.i.1, i32 %shr14.us.i.1, i32 %shr.i268.us.i.1, !dbg !2529
  %conv.i270.us.i.1 = trunc i32 %cond.i269.us.i.1 to i8, !dbg !2529
  %arrayidx16.us.i.1 = getelementptr inbounds i8, ptr %add.ptr.us.i14, i64 1, !dbg !2525
  store i8 %conv.i270.us.i.1, ptr %arrayidx16.us.i.1, align 1, !dbg !2525
    #dbg_value(i32 2, !2342, !DIExpression(), !2519)
  %add.ptr.us.i14.1 = getelementptr inbounds i8, ptr %add.ptr.us.i14, i64 %idx.ext.i8, !dbg !2530
    #dbg_value(ptr %add.ptr.us.i14.1, !2327, !DIExpression(), !2516)
  %add.ptr182.us.i.1 = getelementptr inbounds i8, ptr %add.ptr182.us.i, i64 %idx.ext181.i, !dbg !2531
    #dbg_value(ptr %add.ptr182.us.i.1, !2333, !DIExpression(), !2516)
  %add.ptr184.us.i.1 = getelementptr inbounds i8, ptr %add.ptr184.us.i, i64 %idx.ext183.i, !dbg !2532
    #dbg_value(ptr %add.ptr184.us.i.1, !2335, !DIExpression(), !2516)
  %28 = load i8, ptr %add.ptr182.us.i.1, align 1, !dbg !2520
  %conv.us.i9.2 = zext i8 %28 to i32, !dbg !2520
  %mul.us.i.2 = mul nsw i32 %conv.us.i9.2, %weight, !dbg !2520
  %29 = load i8, ptr %add.ptr184.us.i.1, align 1, !dbg !2520
  %conv2.us.i.2 = zext i8 %29 to i32, !dbg !2520
  %mul3.us.i.2 = mul nsw i32 %sub.i, %conv2.us.i.2, !dbg !2520
  %add.us.i10.2 = add i32 %mul.us.i.2, 32, !dbg !2520
  %add4.us.i.2 = add i32 %add.us.i10.2, %mul3.us.i.2, !dbg !2520
  %shr.us.i11.2 = ashr i32 %add4.us.i.2, 6, !dbg !2520
    #dbg_value(i32 %shr.us.i11.2, !1702, !DIExpression(), !2521)
  %tobool.not.i.us.i.2 = icmp ult i32 %shr.us.i11.2, 256, !dbg !2523
  %30 = icmp sgt i32 %shr.us.i11.2, 0, !dbg !2524
  %shr.i.us.i.2 = sext i1 %30 to i32, !dbg !2524
  %cond.i.us.i.2 = select i1 %tobool.not.i.us.i.2, i32 %shr.us.i11.2, i32 %shr.i.us.i.2, !dbg !2524
  %conv.i.us.i.2 = trunc i32 %cond.i.us.i.2 to i8, !dbg !2524
  store i8 %conv.i.us.i.2, ptr %add.ptr.us.i14.1, align 1, !dbg !2520
  %arrayidx6.us.i12.2 = getelementptr inbounds i8, ptr %add.ptr182.us.i.1, i64 1, !dbg !2525
  %31 = load i8, ptr %arrayidx6.us.i12.2, align 1, !dbg !2525
  %conv7.us.i13.2 = zext i8 %31 to i32, !dbg !2525
  %mul8.us.i.2 = mul nsw i32 %conv7.us.i13.2, %weight, !dbg !2525
  %arrayidx9.us.i.2 = getelementptr inbounds i8, ptr %add.ptr184.us.i.1, i64 1, !dbg !2525
  %32 = load i8, ptr %arrayidx9.us.i.2, align 1, !dbg !2525
  %conv10.us.i.2 = zext i8 %32 to i32, !dbg !2525
  %mul11.us.i.2 = mul nsw i32 %sub.i, %conv10.us.i.2, !dbg !2525
  %add12.us.i.2 = add i32 %mul8.us.i.2, 32, !dbg !2525
  %add13.us.i.2 = add i32 %add12.us.i.2, %mul11.us.i.2, !dbg !2525
  %shr14.us.i.2 = ashr i32 %add13.us.i.2, 6, !dbg !2525
    #dbg_value(i32 %shr14.us.i.2, !1702, !DIExpression(), !2526)
  %tobool.not.i267.us.i.2 = icmp ult i32 %shr14.us.i.2, 256, !dbg !2528
  %33 = icmp sgt i32 %shr14.us.i.2, 0, !dbg !2529
  %shr.i268.us.i.2 = sext i1 %33 to i32, !dbg !2529
  %cond.i269.us.i.2 = select i1 %tobool.not.i267.us.i.2, i32 %shr14.us.i.2, i32 %shr.i268.us.i.2, !dbg !2529
  %conv.i270.us.i.2 = trunc i32 %cond.i269.us.i.2 to i8, !dbg !2529
  %arrayidx16.us.i.2 = getelementptr inbounds i8, ptr %add.ptr.us.i14.1, i64 1, !dbg !2525
  store i8 %conv.i270.us.i.2, ptr %arrayidx16.us.i.2, align 1, !dbg !2525
    #dbg_value(i32 3, !2342, !DIExpression(), !2519)
  %add.ptr.us.i14.2 = getelementptr inbounds i8, ptr %add.ptr.us.i14.1, i64 %idx.ext.i8, !dbg !2530
    #dbg_value(ptr %add.ptr.us.i14.2, !2327, !DIExpression(), !2516)
  %add.ptr182.us.i.2 = getelementptr inbounds i8, ptr %add.ptr182.us.i.1, i64 %idx.ext181.i, !dbg !2531
    #dbg_value(ptr %add.ptr182.us.i.2, !2333, !DIExpression(), !2516)
  %add.ptr184.us.i.2 = getelementptr inbounds i8, ptr %add.ptr184.us.i.1, i64 %idx.ext183.i, !dbg !2532
    #dbg_value(ptr %add.ptr184.us.i.2, !2335, !DIExpression(), !2516)
  %34 = load i8, ptr %add.ptr182.us.i.2, align 1, !dbg !2520
  %conv.us.i9.3 = zext i8 %34 to i32, !dbg !2520
  %mul.us.i.3 = mul nsw i32 %conv.us.i9.3, %weight, !dbg !2520
  %35 = load i8, ptr %add.ptr184.us.i.2, align 1, !dbg !2520
  %conv2.us.i.3 = zext i8 %35 to i32, !dbg !2520
  %mul3.us.i.3 = mul nsw i32 %sub.i, %conv2.us.i.3, !dbg !2520
  %add.us.i10.3 = add i32 %mul.us.i.3, 32, !dbg !2520
  %add4.us.i.3 = add i32 %add.us.i10.3, %mul3.us.i.3, !dbg !2520
  %shr.us.i11.3 = ashr i32 %add4.us.i.3, 6, !dbg !2520
    #dbg_value(i32 %shr.us.i11.3, !1702, !DIExpression(), !2521)
  %tobool.not.i.us.i.3 = icmp ult i32 %shr.us.i11.3, 256, !dbg !2523
  %36 = icmp sgt i32 %shr.us.i11.3, 0, !dbg !2524
  %shr.i.us.i.3 = sext i1 %36 to i32, !dbg !2524
  %cond.i.us.i.3 = select i1 %tobool.not.i.us.i.3, i32 %shr.us.i11.3, i32 %shr.i.us.i.3, !dbg !2524
  %conv.i.us.i.3 = trunc i32 %cond.i.us.i.3 to i8, !dbg !2524
  store i8 %conv.i.us.i.3, ptr %add.ptr.us.i14.2, align 1, !dbg !2520
  %arrayidx6.us.i12.3 = getelementptr inbounds i8, ptr %add.ptr182.us.i.2, i64 1, !dbg !2525
  %37 = load i8, ptr %arrayidx6.us.i12.3, align 1, !dbg !2525
  %conv7.us.i13.3 = zext i8 %37 to i32, !dbg !2525
  %mul8.us.i.3 = mul nsw i32 %conv7.us.i13.3, %weight, !dbg !2525
  %arrayidx9.us.i.3 = getelementptr inbounds i8, ptr %add.ptr184.us.i.2, i64 1, !dbg !2525
  %38 = load i8, ptr %arrayidx9.us.i.3, align 1, !dbg !2525
  %conv10.us.i.3 = zext i8 %38 to i32, !dbg !2525
  %mul11.us.i.3 = mul nsw i32 %sub.i, %conv10.us.i.3, !dbg !2525
  %add12.us.i.3 = add i32 %mul8.us.i.3, 32, !dbg !2525
  %add13.us.i.3 = add i32 %add12.us.i.3, %mul11.us.i.3, !dbg !2525
  %shr14.us.i.3 = ashr i32 %add13.us.i.3, 6, !dbg !2525
    #dbg_value(i32 %shr14.us.i.3, !1702, !DIExpression(), !2526)
  %tobool.not.i267.us.i.3 = icmp ult i32 %shr14.us.i.3, 256, !dbg !2528
  %39 = icmp sgt i32 %shr14.us.i.3, 0, !dbg !2529
  %shr.i268.us.i.3 = sext i1 %39 to i32, !dbg !2529
  %cond.i269.us.i.3 = select i1 %tobool.not.i267.us.i.3, i32 %shr14.us.i.3, i32 %shr.i268.us.i.3, !dbg !2529
  %conv.i270.us.i.3 = trunc i32 %cond.i269.us.i.3 to i8, !dbg !2529
    #dbg_value(i32 4, !2342, !DIExpression(), !2519)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i14.2, i64 %idx.ext.i8), !2327, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2516)
    #dbg_value(!DIArgList(ptr %add.ptr182.us.i.2, i64 %idx.ext181.i), !2333, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2516)
    #dbg_value(!DIArgList(ptr %add.ptr184.us.i.2, i64 %idx.ext183.i), !2335, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2516)
  br label %if.end, !dbg !2500

if.end:                                           ; preds = %if.else, %if.then
  %add.ptr.us.i14.2.sink = phi ptr [ %add.ptr.us.i14.2, %if.else ], [ %add.ptr15.us.i.2, %if.then ]
  %conv.i270.us.i.3.sink = phi i8 [ %conv.i270.us.i.3, %if.else ], [ %conv9.us.i.1.3, %if.then ]
  %arrayidx16.us.i.3 = getelementptr inbounds i8, ptr %add.ptr.us.i14.2.sink, i64 1, !dbg !2498
  store i8 %conv.i270.us.i.3.sink, ptr %arrayidx16.us.i.3, align 1, !dbg !2498
  ret void, !dbg !2500
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @pixel_avg_2x2(ptr nocapture noundef writeonly %pix1, i32 noundef %i_stride_pix1, ptr nocapture noundef readonly %pix2, i32 noundef %i_stride_pix2, ptr nocapture noundef readonly %pix3, i32 noundef %i_stride_pix3, i32 noundef %weight) #7 !dbg !2533 {
entry:
    #dbg_value(ptr %pix1, !2535, !DIExpression(), !2542)
    #dbg_value(i32 %i_stride_pix1, !2536, !DIExpression(), !2542)
    #dbg_value(ptr %pix2, !2537, !DIExpression(), !2542)
    #dbg_value(i32 %i_stride_pix2, !2538, !DIExpression(), !2542)
    #dbg_value(ptr %pix3, !2539, !DIExpression(), !2542)
    #dbg_value(i32 %i_stride_pix3, !2540, !DIExpression(), !2542)
    #dbg_value(i32 %weight, !2541, !DIExpression(), !2542)
  %cmp = icmp eq i32 %weight, 32, !dbg !2543
  br i1 %cmp, label %if.then, label %if.else, !dbg !2545

if.then:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2546)
    #dbg_value(i32 %i_stride_pix1, !2138, !DIExpression(), !2546)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2546)
    #dbg_value(i32 %i_stride_pix2, !2140, !DIExpression(), !2546)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2546)
    #dbg_value(i32 %i_stride_pix3, !2142, !DIExpression(), !2546)
    #dbg_value(i32 2, !2143, !DIExpression(), !2546)
    #dbg_value(i32 2, !2144, !DIExpression(), !2546)
    #dbg_value(i32 0, !2145, !DIExpression(), !2548)
  %idx.ext.i = sext i32 %i_stride_pix2 to i64
  %idx.ext12.i = sext i32 %i_stride_pix3 to i64
  %idx.ext14.i = sext i32 %i_stride_pix1 to i64
    #dbg_value(i32 0, !2145, !DIExpression(), !2548)
    #dbg_value(ptr %pix1, !2135, !DIExpression(), !2546)
    #dbg_value(ptr %pix2, !2139, !DIExpression(), !2546)
    #dbg_value(ptr %pix3, !2141, !DIExpression(), !2546)
    #dbg_value(i32 0, !2147, !DIExpression(), !2549)
    #dbg_value(i64 0, !2147, !DIExpression(), !2549)
  %0 = load i8, ptr %pix2, align 1, !dbg !2550
  %conv.us.i = zext i8 %0 to i16, !dbg !2550
  %1 = load i8, ptr %pix3, align 1, !dbg !2551
  %conv7.us.i = zext i8 %1 to i16, !dbg !2551
  %add.us.i = add nuw nsw i16 %conv.us.i, 1, !dbg !2552
  %add8.us.i = add nuw nsw i16 %add.us.i, %conv7.us.i, !dbg !2553
  %shr.us.i = lshr i16 %add8.us.i, 1, !dbg !2554
  %conv9.us.i = trunc nuw i16 %shr.us.i to i8, !dbg !2555
  store i8 %conv9.us.i, ptr %pix1, align 1, !dbg !2556
    #dbg_value(i64 1, !2147, !DIExpression(), !2549)
  %arrayidx.us.i.1 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2550
  %2 = load i8, ptr %arrayidx.us.i.1, align 1, !dbg !2550
  %conv.us.i.1 = zext i8 %2 to i16, !dbg !2550
  %arrayidx6.us.i.1 = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2551
  %3 = load i8, ptr %arrayidx6.us.i.1, align 1, !dbg !2551
  %conv7.us.i.1 = zext i8 %3 to i16, !dbg !2551
  %add.us.i.1 = add nuw nsw i16 %conv.us.i.1, 1, !dbg !2552
  %add8.us.i.1 = add nuw nsw i16 %add.us.i.1, %conv7.us.i.1, !dbg !2553
  %shr.us.i.1 = lshr i16 %add8.us.i.1, 1, !dbg !2554
  %conv9.us.i.1 = trunc nuw i16 %shr.us.i.1 to i8, !dbg !2555
  %arrayidx11.us.i.1 = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2557
  store i8 %conv9.us.i.1, ptr %arrayidx11.us.i.1, align 1, !dbg !2556
    #dbg_value(i64 2, !2147, !DIExpression(), !2549)
  %add.ptr.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext.i, !dbg !2558
    #dbg_value(ptr %add.ptr.us.i, !2139, !DIExpression(), !2546)
  %add.ptr13.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext12.i, !dbg !2559
    #dbg_value(ptr %add.ptr13.us.i, !2141, !DIExpression(), !2546)
  %add.ptr15.us.i = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext14.i, !dbg !2560
    #dbg_value(ptr %add.ptr15.us.i, !2135, !DIExpression(), !2546)
    #dbg_value(i32 1, !2145, !DIExpression(), !2548)
    #dbg_value(i32 0, !2147, !DIExpression(), !2549)
    #dbg_value(i64 0, !2147, !DIExpression(), !2549)
  %4 = load i8, ptr %add.ptr.us.i, align 1, !dbg !2550
  %conv.us.i.117 = zext i8 %4 to i16, !dbg !2550
  %5 = load i8, ptr %add.ptr13.us.i, align 1, !dbg !2551
  %conv7.us.i.118 = zext i8 %5 to i16, !dbg !2551
  %add.us.i.119 = add nuw nsw i16 %conv.us.i.117, 1, !dbg !2552
  %add8.us.i.120 = add nuw nsw i16 %add.us.i.119, %conv7.us.i.118, !dbg !2553
  %shr.us.i.121 = lshr i16 %add8.us.i.120, 1, !dbg !2554
  %conv9.us.i.122 = trunc nuw i16 %shr.us.i.121 to i8, !dbg !2555
  store i8 %conv9.us.i.122, ptr %add.ptr15.us.i, align 1, !dbg !2556
    #dbg_value(i64 1, !2147, !DIExpression(), !2549)
  %arrayidx.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr.us.i, i64 1, !dbg !2550
  %6 = load i8, ptr %arrayidx.us.i.1.1, align 1, !dbg !2550
  %conv.us.i.1.1 = zext i8 %6 to i16, !dbg !2550
  %arrayidx6.us.i.1.1 = getelementptr inbounds i8, ptr %add.ptr13.us.i, i64 1, !dbg !2551
  %7 = load i8, ptr %arrayidx6.us.i.1.1, align 1, !dbg !2551
  %conv7.us.i.1.1 = zext i8 %7 to i16, !dbg !2551
  %add.us.i.1.1 = add nuw nsw i16 %conv.us.i.1.1, 1, !dbg !2552
  %add8.us.i.1.1 = add nuw nsw i16 %add.us.i.1.1, %conv7.us.i.1.1, !dbg !2553
  %shr.us.i.1.1 = lshr i16 %add8.us.i.1.1, 1, !dbg !2554
  %conv9.us.i.1.1 = trunc nuw i16 %shr.us.i.1.1 to i8, !dbg !2555
    #dbg_value(i64 2, !2147, !DIExpression(), !2549)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i, i64 %idx.ext.i), !2139, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2546)
    #dbg_value(!DIArgList(ptr %add.ptr13.us.i, i64 %idx.ext12.i), !2141, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2546)
    #dbg_value(!DIArgList(ptr %add.ptr15.us.i, i64 %idx.ext14.i), !2135, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2546)
    #dbg_value(i32 2, !2145, !DIExpression(), !2548)
  br label %if.end, !dbg !2545

if.else:                                          ; preds = %entry
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2561)
    #dbg_value(i32 %i_stride_pix1, !2332, !DIExpression(), !2561)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2561)
    #dbg_value(i32 %i_stride_pix2, !2334, !DIExpression(), !2561)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2561)
    #dbg_value(i32 %i_stride_pix3, !2336, !DIExpression(), !2561)
    #dbg_value(i32 2, !2337, !DIExpression(), !2561)
    #dbg_value(i32 2, !2338, !DIExpression(), !2561)
    #dbg_value(i32 %weight, !2339, !DIExpression(), !2561)
  %sub.i = sub nsw i32 64, %weight, !dbg !2563
    #dbg_value(i32 %sub.i, !2340, !DIExpression(), !2561)
    #dbg_value(i32 0, !2342, !DIExpression(), !2564)
  %idx.ext.i8 = sext i32 %i_stride_pix1 to i64
  %idx.ext181.i = sext i32 %i_stride_pix2 to i64
  %idx.ext183.i = sext i32 %i_stride_pix3 to i64
    #dbg_value(i32 0, !2342, !DIExpression(), !2564)
    #dbg_value(ptr %pix1, !2327, !DIExpression(), !2561)
    #dbg_value(ptr %pix2, !2333, !DIExpression(), !2561)
    #dbg_value(ptr %pix3, !2335, !DIExpression(), !2561)
  %8 = load i8, ptr %pix2, align 1, !dbg !2565
  %conv.us.i9 = zext i8 %8 to i32, !dbg !2565
  %mul.us.i = mul nsw i32 %conv.us.i9, %weight, !dbg !2565
  %9 = load i8, ptr %pix3, align 1, !dbg !2565
  %conv2.us.i = zext i8 %9 to i32, !dbg !2565
  %mul3.us.i = mul nsw i32 %sub.i, %conv2.us.i, !dbg !2565
  %add.us.i10 = add i32 %mul.us.i, 32, !dbg !2565
  %add4.us.i = add i32 %add.us.i10, %mul3.us.i, !dbg !2565
  %shr.us.i11 = ashr i32 %add4.us.i, 6, !dbg !2565
    #dbg_value(i32 %shr.us.i11, !1702, !DIExpression(), !2566)
  %tobool.not.i.us.i = icmp ult i32 %shr.us.i11, 256, !dbg !2568
  %10 = icmp sgt i32 %shr.us.i11, 0, !dbg !2569
  %shr.i.us.i = sext i1 %10 to i32, !dbg !2569
  %cond.i.us.i = select i1 %tobool.not.i.us.i, i32 %shr.us.i11, i32 %shr.i.us.i, !dbg !2569
  %conv.i.us.i = trunc i32 %cond.i.us.i to i8, !dbg !2569
  store i8 %conv.i.us.i, ptr %pix1, align 1, !dbg !2565
  %arrayidx6.us.i12 = getelementptr inbounds i8, ptr %pix2, i64 1, !dbg !2570
  %11 = load i8, ptr %arrayidx6.us.i12, align 1, !dbg !2570
  %conv7.us.i13 = zext i8 %11 to i32, !dbg !2570
  %mul8.us.i = mul nsw i32 %conv7.us.i13, %weight, !dbg !2570
  %arrayidx9.us.i = getelementptr inbounds i8, ptr %pix3, i64 1, !dbg !2570
  %12 = load i8, ptr %arrayidx9.us.i, align 1, !dbg !2570
  %conv10.us.i = zext i8 %12 to i32, !dbg !2570
  %mul11.us.i = mul nsw i32 %sub.i, %conv10.us.i, !dbg !2570
  %add12.us.i = add i32 %mul8.us.i, 32, !dbg !2570
  %add13.us.i = add i32 %add12.us.i, %mul11.us.i, !dbg !2570
  %shr14.us.i = ashr i32 %add13.us.i, 6, !dbg !2570
    #dbg_value(i32 %shr14.us.i, !1702, !DIExpression(), !2571)
  %tobool.not.i267.us.i = icmp ult i32 %shr14.us.i, 256, !dbg !2573
  %13 = icmp sgt i32 %shr14.us.i, 0, !dbg !2574
  %shr.i268.us.i = sext i1 %13 to i32, !dbg !2574
  %cond.i269.us.i = select i1 %tobool.not.i267.us.i, i32 %shr14.us.i, i32 %shr.i268.us.i, !dbg !2574
  %conv.i270.us.i = trunc i32 %cond.i269.us.i to i8, !dbg !2574
  %arrayidx16.us.i = getelementptr inbounds i8, ptr %pix1, i64 1, !dbg !2570
  store i8 %conv.i270.us.i, ptr %arrayidx16.us.i, align 1, !dbg !2570
    #dbg_value(i32 1, !2342, !DIExpression(), !2564)
  %add.ptr.us.i14 = getelementptr inbounds i8, ptr %pix1, i64 %idx.ext.i8, !dbg !2575
    #dbg_value(ptr %add.ptr.us.i14, !2327, !DIExpression(), !2561)
  %add.ptr182.us.i = getelementptr inbounds i8, ptr %pix2, i64 %idx.ext181.i, !dbg !2576
    #dbg_value(ptr %add.ptr182.us.i, !2333, !DIExpression(), !2561)
  %add.ptr184.us.i = getelementptr inbounds i8, ptr %pix3, i64 %idx.ext183.i, !dbg !2577
    #dbg_value(ptr %add.ptr184.us.i, !2335, !DIExpression(), !2561)
  %14 = load i8, ptr %add.ptr182.us.i, align 1, !dbg !2565
  %conv.us.i9.1 = zext i8 %14 to i32, !dbg !2565
  %mul.us.i.1 = mul nsw i32 %conv.us.i9.1, %weight, !dbg !2565
  %15 = load i8, ptr %add.ptr184.us.i, align 1, !dbg !2565
  %conv2.us.i.1 = zext i8 %15 to i32, !dbg !2565
  %mul3.us.i.1 = mul nsw i32 %sub.i, %conv2.us.i.1, !dbg !2565
  %add.us.i10.1 = add i32 %mul.us.i.1, 32, !dbg !2565
  %add4.us.i.1 = add i32 %add.us.i10.1, %mul3.us.i.1, !dbg !2565
  %shr.us.i11.1 = ashr i32 %add4.us.i.1, 6, !dbg !2565
    #dbg_value(i32 %shr.us.i11.1, !1702, !DIExpression(), !2566)
  %tobool.not.i.us.i.1 = icmp ult i32 %shr.us.i11.1, 256, !dbg !2568
  %16 = icmp sgt i32 %shr.us.i11.1, 0, !dbg !2569
  %shr.i.us.i.1 = sext i1 %16 to i32, !dbg !2569
  %cond.i.us.i.1 = select i1 %tobool.not.i.us.i.1, i32 %shr.us.i11.1, i32 %shr.i.us.i.1, !dbg !2569
  %conv.i.us.i.1 = trunc i32 %cond.i.us.i.1 to i8, !dbg !2569
  store i8 %conv.i.us.i.1, ptr %add.ptr.us.i14, align 1, !dbg !2565
  %arrayidx6.us.i12.1 = getelementptr inbounds i8, ptr %add.ptr182.us.i, i64 1, !dbg !2570
  %17 = load i8, ptr %arrayidx6.us.i12.1, align 1, !dbg !2570
  %conv7.us.i13.1 = zext i8 %17 to i32, !dbg !2570
  %mul8.us.i.1 = mul nsw i32 %conv7.us.i13.1, %weight, !dbg !2570
  %arrayidx9.us.i.1 = getelementptr inbounds i8, ptr %add.ptr184.us.i, i64 1, !dbg !2570
  %18 = load i8, ptr %arrayidx9.us.i.1, align 1, !dbg !2570
  %conv10.us.i.1 = zext i8 %18 to i32, !dbg !2570
  %mul11.us.i.1 = mul nsw i32 %sub.i, %conv10.us.i.1, !dbg !2570
  %add12.us.i.1 = add i32 %mul8.us.i.1, 32, !dbg !2570
  %add13.us.i.1 = add i32 %add12.us.i.1, %mul11.us.i.1, !dbg !2570
  %shr14.us.i.1 = ashr i32 %add13.us.i.1, 6, !dbg !2570
    #dbg_value(i32 %shr14.us.i.1, !1702, !DIExpression(), !2571)
  %tobool.not.i267.us.i.1 = icmp ult i32 %shr14.us.i.1, 256, !dbg !2573
  %19 = icmp sgt i32 %shr14.us.i.1, 0, !dbg !2574
  %shr.i268.us.i.1 = sext i1 %19 to i32, !dbg !2574
  %cond.i269.us.i.1 = select i1 %tobool.not.i267.us.i.1, i32 %shr14.us.i.1, i32 %shr.i268.us.i.1, !dbg !2574
  %conv.i270.us.i.1 = trunc i32 %cond.i269.us.i.1 to i8, !dbg !2574
    #dbg_value(i32 2, !2342, !DIExpression(), !2564)
    #dbg_value(!DIArgList(ptr %add.ptr.us.i14, i64 %idx.ext.i8), !2327, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2561)
    #dbg_value(!DIArgList(ptr %add.ptr182.us.i, i64 %idx.ext181.i), !2333, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2561)
    #dbg_value(!DIArgList(ptr %add.ptr184.us.i, i64 %idx.ext183.i), !2335, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2561)
  br label %if.end, !dbg !2545

if.end:                                           ; preds = %if.else, %if.then
  %20 = phi i64 [ %idx.ext.i8, %if.else ], [ %idx.ext14.i, %if.then ]
  %conv.i270.us.i.1.sink = phi i8 [ %conv.i270.us.i.1, %if.else ], [ %conv9.us.i.1.1, %if.then ]
  %21 = getelementptr inbounds i8, ptr %pix1, i64 %20, !dbg !2575
  %arrayidx16.us.i.1 = getelementptr inbounds i8, ptr %21, i64 1, !dbg !2543
  store i8 %conv.i270.us.i.1.sink, ptr %arrayidx16.us.i.1, align 1, !dbg !2543
  ret void, !dbg !2545
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @x264_weight_cache(ptr nocapture noundef readonly %h, ptr nocapture noundef writeonly %w) #7 !dbg !2578 {
entry:
    #dbg_value(ptr %h, !2580, !DIExpression(), !2582)
    #dbg_value(ptr %w, !2581, !DIExpression(), !2582)
  %weight = getelementptr inbounds i8, ptr %h, i64 32872, !dbg !2583
  %0 = load ptr, ptr %weight, align 8, !dbg !2583
  %weightfn = getelementptr inbounds i8, ptr %w, i64 48, !dbg !2584
  store ptr %0, ptr %weightfn, align 16, !dbg !2585
  ret void, !dbg !2586
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_copy_w16(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst, ptr nocapture noundef readonly %src, i32 noundef %i_src, i32 noundef %i_height) #0 !dbg !2587 {
entry:
    #dbg_value(ptr %dst, !2589, !DIExpression(), !2594)
    #dbg_value(i32 %i_dst, !2590, !DIExpression(), !2594)
    #dbg_value(ptr %src, !2591, !DIExpression(), !2594)
    #dbg_value(i32 %i_src, !2592, !DIExpression(), !2594)
    #dbg_value(i32 %i_height, !2593, !DIExpression(), !2594)
    #dbg_value(ptr %src, !1806, !DIExpression(), !2595)
    #dbg_value(i32 %i_src, !1809, !DIExpression(), !2595)
    #dbg_value(ptr %dst, !1810, !DIExpression(), !2595)
    #dbg_value(i32 %i_dst, !1811, !DIExpression(), !2595)
    #dbg_value(i32 16, !1812, !DIExpression(), !2595)
    #dbg_value(i32 %i_height, !1813, !DIExpression(), !2595)
    #dbg_value(i32 0, !1814, !DIExpression(), !2597)
  %cmp6.i = icmp sgt i32 %i_height, 0, !dbg !2598
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %mc_copy.exit, !dbg !2599

for.body.lr.ph.i:                                 ; preds = %entry
  %idx.ext.i = sext i32 %i_src to i64
  %idx.ext1.i = sext i32 %i_dst to i64
  %xtraiter = and i32 %i_height, 3, !dbg !2599
  %0 = icmp ult i32 %i_height, 4, !dbg !2599
  br i1 %0, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !2599

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i32 %i_height, 2147483644, !dbg !2599
  br label %for.body.i, !dbg !2599

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %src.addr.08.i = phi ptr [ %src, %for.body.lr.ph.i.new ], [ %add.ptr.i.3, %for.body.i ]
  %dst.addr.07.i = phi ptr [ %dst, %for.body.lr.ph.i.new ], [ %add.ptr2.i.3, %for.body.i ]
  %niter = phi i32 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2597)
    #dbg_value(ptr %src.addr.08.i, !1806, !DIExpression(), !2595)
    #dbg_value(ptr %dst.addr.07.i, !1810, !DIExpression(), !2595)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %dst.addr.07.i, ptr noundef nonnull align 1 dereferenceable(16) %src.addr.08.i, i64 16, i1 false), !dbg !2600
  %add.ptr.i = getelementptr inbounds i8, ptr %src.addr.08.i, i64 %idx.ext.i, !dbg !2601
    #dbg_value(ptr %add.ptr.i, !1806, !DIExpression(), !2595)
  %add.ptr2.i = getelementptr inbounds i8, ptr %dst.addr.07.i, i64 %idx.ext1.i, !dbg !2602
    #dbg_value(ptr %add.ptr2.i, !1810, !DIExpression(), !2595)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2597)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %add.ptr2.i, ptr noundef nonnull align 1 dereferenceable(16) %add.ptr.i, i64 16, i1 false), !dbg !2600
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 %idx.ext.i, !dbg !2601
    #dbg_value(ptr %add.ptr.i.1, !1806, !DIExpression(), !2595)
  %add.ptr2.i.1 = getelementptr inbounds i8, ptr %add.ptr2.i, i64 %idx.ext1.i, !dbg !2602
    #dbg_value(ptr %add.ptr2.i.1, !1810, !DIExpression(), !2595)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2597)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %add.ptr2.i.1, ptr noundef nonnull align 1 dereferenceable(16) %add.ptr.i.1, i64 16, i1 false), !dbg !2600
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 %idx.ext.i, !dbg !2601
    #dbg_value(ptr %add.ptr.i.2, !1806, !DIExpression(), !2595)
  %add.ptr2.i.2 = getelementptr inbounds i8, ptr %add.ptr2.i.1, i64 %idx.ext1.i, !dbg !2602
    #dbg_value(ptr %add.ptr2.i.2, !1810, !DIExpression(), !2595)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2597)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %add.ptr2.i.2, ptr noundef nonnull align 1 dereferenceable(16) %add.ptr.i.2, i64 16, i1 false), !dbg !2600
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 %idx.ext.i, !dbg !2601
    #dbg_value(ptr %add.ptr.i.3, !1806, !DIExpression(), !2595)
  %add.ptr2.i.3 = getelementptr inbounds i8, ptr %add.ptr2.i.2, i64 %idx.ext1.i, !dbg !2602
    #dbg_value(ptr %add.ptr2.i.3, !1810, !DIExpression(), !2595)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !2597)
  %niter.next.3 = add i32 %niter, 4, !dbg !2599
  %niter.ncmp.3 = icmp eq i32 %niter.next.3, %unroll_iter, !dbg !2599
  br i1 %niter.ncmp.3, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !2599, !llvm.loop !2603

mc_copy.exit.loopexit.unr-lcssa:                  ; preds = %for.body.i, %for.body.lr.ph.i
  %src.addr.08.i.unr = phi ptr [ %src, %for.body.lr.ph.i ], [ %add.ptr.i.3, %for.body.i ]
  %dst.addr.07.i.unr = phi ptr [ %dst, %for.body.lr.ph.i ], [ %add.ptr2.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0, !dbg !2599
  br i1 %lcmp.mod.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2599

for.body.i.epil:                                  ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil
  %src.addr.08.i.epil = phi ptr [ %add.ptr.i.epil, %for.body.i.epil ], [ %src.addr.08.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %dst.addr.07.i.epil = phi ptr [ %add.ptr2.i.epil, %for.body.i.epil ], [ %dst.addr.07.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.next, %for.body.i.epil ], [ 0, %mc_copy.exit.loopexit.unr-lcssa ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2597)
    #dbg_value(ptr %src.addr.08.i.epil, !1806, !DIExpression(), !2595)
    #dbg_value(ptr %dst.addr.07.i.epil, !1810, !DIExpression(), !2595)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %dst.addr.07.i.epil, ptr noundef nonnull align 1 dereferenceable(16) %src.addr.08.i.epil, i64 16, i1 false), !dbg !2600
  %add.ptr.i.epil = getelementptr inbounds i8, ptr %src.addr.08.i.epil, i64 %idx.ext.i, !dbg !2601
    #dbg_value(ptr %add.ptr.i.epil, !1806, !DIExpression(), !2595)
  %add.ptr2.i.epil = getelementptr inbounds i8, ptr %dst.addr.07.i.epil, i64 %idx.ext1.i, !dbg !2602
    #dbg_value(ptr %add.ptr2.i.epil, !1810, !DIExpression(), !2595)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2597)
  %epil.iter.next = add i32 %epil.iter, 1, !dbg !2599
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.next, %xtraiter, !dbg !2599
  br i1 %epil.iter.cmp.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2599, !llvm.loop !2605

mc_copy.exit:                                     ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil, %entry
  ret void, !dbg !2606
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_copy_w8(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst, ptr nocapture noundef readonly %src, i32 noundef %i_src, i32 noundef %i_height) #0 !dbg !2607 {
entry:
    #dbg_value(ptr %dst, !2609, !DIExpression(), !2614)
    #dbg_value(i32 %i_dst, !2610, !DIExpression(), !2614)
    #dbg_value(ptr %src, !2611, !DIExpression(), !2614)
    #dbg_value(i32 %i_src, !2612, !DIExpression(), !2614)
    #dbg_value(i32 %i_height, !2613, !DIExpression(), !2614)
    #dbg_value(ptr %src, !1806, !DIExpression(), !2615)
    #dbg_value(i32 %i_src, !1809, !DIExpression(), !2615)
    #dbg_value(ptr %dst, !1810, !DIExpression(), !2615)
    #dbg_value(i32 %i_dst, !1811, !DIExpression(), !2615)
    #dbg_value(i32 8, !1812, !DIExpression(), !2615)
    #dbg_value(i32 %i_height, !1813, !DIExpression(), !2615)
    #dbg_value(i32 0, !1814, !DIExpression(), !2617)
  %cmp6.i = icmp sgt i32 %i_height, 0, !dbg !2618
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %mc_copy.exit, !dbg !2619

for.body.lr.ph.i:                                 ; preds = %entry
  %idx.ext.i = sext i32 %i_src to i64
  %idx.ext1.i = sext i32 %i_dst to i64
  %xtraiter = and i32 %i_height, 7, !dbg !2619
  %0 = icmp ult i32 %i_height, 8, !dbg !2619
  br i1 %0, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !2619

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i32 %i_height, 2147483640, !dbg !2619
  br label %for.body.i, !dbg !2619

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %src.addr.08.i = phi ptr [ %src, %for.body.lr.ph.i.new ], [ %add.ptr.i.7, %for.body.i ]
  %dst.addr.07.i = phi ptr [ %dst, %for.body.lr.ph.i.new ], [ %add.ptr2.i.7, %for.body.i ]
  %niter = phi i32 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.7, %for.body.i ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2617)
    #dbg_value(ptr %src.addr.08.i, !1806, !DIExpression(), !2615)
    #dbg_value(ptr %dst.addr.07.i, !1810, !DIExpression(), !2615)
  %1 = load i64, ptr %src.addr.08.i, align 1, !dbg !2620
  store i64 %1, ptr %dst.addr.07.i, align 1, !dbg !2620
  %add.ptr.i = getelementptr inbounds i8, ptr %src.addr.08.i, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i, !1806, !DIExpression(), !2615)
  %add.ptr2.i = getelementptr inbounds i8, ptr %dst.addr.07.i, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2617)
  %2 = load i64, ptr %add.ptr.i, align 1, !dbg !2620
  store i64 %2, ptr %add.ptr2.i, align 1, !dbg !2620
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.1, !1806, !DIExpression(), !2615)
  %add.ptr2.i.1 = getelementptr inbounds i8, ptr %add.ptr2.i, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.1, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2617)
  %3 = load i64, ptr %add.ptr.i.1, align 1, !dbg !2620
  store i64 %3, ptr %add.ptr2.i.1, align 1, !dbg !2620
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.2, !1806, !DIExpression(), !2615)
  %add.ptr2.i.2 = getelementptr inbounds i8, ptr %add.ptr2.i.1, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.2, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2617)
  %4 = load i64, ptr %add.ptr.i.2, align 1, !dbg !2620
  store i64 %4, ptr %add.ptr2.i.2, align 1, !dbg !2620
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.3, !1806, !DIExpression(), !2615)
  %add.ptr2.i.3 = getelementptr inbounds i8, ptr %add.ptr2.i.2, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.3, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !2617)
  %5 = load i64, ptr %add.ptr.i.3, align 1, !dbg !2620
  store i64 %5, ptr %add.ptr2.i.3, align 1, !dbg !2620
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %add.ptr.i.3, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.4, !1806, !DIExpression(), !2615)
  %add.ptr2.i.4 = getelementptr inbounds i8, ptr %add.ptr2.i.3, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.4, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 5, DW_OP_stack_value), !2617)
  %6 = load i64, ptr %add.ptr.i.4, align 1, !dbg !2620
  store i64 %6, ptr %add.ptr2.i.4, align 1, !dbg !2620
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %add.ptr.i.4, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.5, !1806, !DIExpression(), !2615)
  %add.ptr2.i.5 = getelementptr inbounds i8, ptr %add.ptr2.i.4, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.5, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 6, DW_OP_stack_value), !2617)
  %7 = load i64, ptr %add.ptr.i.5, align 1, !dbg !2620
  store i64 %7, ptr %add.ptr2.i.5, align 1, !dbg !2620
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %add.ptr.i.5, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.6, !1806, !DIExpression(), !2615)
  %add.ptr2.i.6 = getelementptr inbounds i8, ptr %add.ptr2.i.5, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.6, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 7, DW_OP_stack_value), !2617)
  %8 = load i64, ptr %add.ptr.i.6, align 1, !dbg !2620
  store i64 %8, ptr %add.ptr2.i.6, align 1, !dbg !2620
  %add.ptr.i.7 = getelementptr inbounds i8, ptr %add.ptr.i.6, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.7, !1806, !DIExpression(), !2615)
  %add.ptr2.i.7 = getelementptr inbounds i8, ptr %add.ptr2.i.6, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.7, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value), !2617)
  %niter.next.7 = add i32 %niter, 8, !dbg !2619
  %niter.ncmp.7 = icmp eq i32 %niter.next.7, %unroll_iter, !dbg !2619
  br i1 %niter.ncmp.7, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !2619, !llvm.loop !2623

mc_copy.exit.loopexit.unr-lcssa:                  ; preds = %for.body.i, %for.body.lr.ph.i
  %src.addr.08.i.unr = phi ptr [ %src, %for.body.lr.ph.i ], [ %add.ptr.i.7, %for.body.i ]
  %dst.addr.07.i.unr = phi ptr [ %dst, %for.body.lr.ph.i ], [ %add.ptr2.i.7, %for.body.i ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0, !dbg !2619
  br i1 %lcmp.mod.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2619

for.body.i.epil:                                  ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil
  %src.addr.08.i.epil = phi ptr [ %add.ptr.i.epil, %for.body.i.epil ], [ %src.addr.08.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %dst.addr.07.i.epil = phi ptr [ %add.ptr2.i.epil, %for.body.i.epil ], [ %dst.addr.07.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.next, %for.body.i.epil ], [ 0, %mc_copy.exit.loopexit.unr-lcssa ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2617)
    #dbg_value(ptr %src.addr.08.i.epil, !1806, !DIExpression(), !2615)
    #dbg_value(ptr %dst.addr.07.i.epil, !1810, !DIExpression(), !2615)
  %9 = load i64, ptr %src.addr.08.i.epil, align 1, !dbg !2620
  store i64 %9, ptr %dst.addr.07.i.epil, align 1, !dbg !2620
  %add.ptr.i.epil = getelementptr inbounds i8, ptr %src.addr.08.i.epil, i64 %idx.ext.i, !dbg !2621
    #dbg_value(ptr %add.ptr.i.epil, !1806, !DIExpression(), !2615)
  %add.ptr2.i.epil = getelementptr inbounds i8, ptr %dst.addr.07.i.epil, i64 %idx.ext1.i, !dbg !2622
    #dbg_value(ptr %add.ptr2.i.epil, !1810, !DIExpression(), !2615)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2617)
  %epil.iter.next = add i32 %epil.iter, 1, !dbg !2619
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.next, %xtraiter, !dbg !2619
  br i1 %epil.iter.cmp.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2619, !llvm.loop !2625

mc_copy.exit:                                     ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil, %entry
  ret void, !dbg !2626
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_copy_w4(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst, ptr nocapture noundef readonly %src, i32 noundef %i_src, i32 noundef %i_height) #0 !dbg !2627 {
entry:
    #dbg_value(ptr %dst, !2629, !DIExpression(), !2634)
    #dbg_value(i32 %i_dst, !2630, !DIExpression(), !2634)
    #dbg_value(ptr %src, !2631, !DIExpression(), !2634)
    #dbg_value(i32 %i_src, !2632, !DIExpression(), !2634)
    #dbg_value(i32 %i_height, !2633, !DIExpression(), !2634)
    #dbg_value(ptr %src, !1806, !DIExpression(), !2635)
    #dbg_value(i32 %i_src, !1809, !DIExpression(), !2635)
    #dbg_value(ptr %dst, !1810, !DIExpression(), !2635)
    #dbg_value(i32 %i_dst, !1811, !DIExpression(), !2635)
    #dbg_value(i32 4, !1812, !DIExpression(), !2635)
    #dbg_value(i32 %i_height, !1813, !DIExpression(), !2635)
    #dbg_value(i32 0, !1814, !DIExpression(), !2637)
  %cmp6.i = icmp sgt i32 %i_height, 0, !dbg !2638
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %mc_copy.exit, !dbg !2639

for.body.lr.ph.i:                                 ; preds = %entry
  %idx.ext.i = sext i32 %i_src to i64
  %idx.ext1.i = sext i32 %i_dst to i64
  %xtraiter = and i32 %i_height, 7, !dbg !2639
  %0 = icmp ult i32 %i_height, 8, !dbg !2639
  br i1 %0, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !2639

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i32 %i_height, 2147483640, !dbg !2639
  br label %for.body.i, !dbg !2639

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %src.addr.08.i = phi ptr [ %src, %for.body.lr.ph.i.new ], [ %add.ptr.i.7, %for.body.i ]
  %dst.addr.07.i = phi ptr [ %dst, %for.body.lr.ph.i.new ], [ %add.ptr2.i.7, %for.body.i ]
  %niter = phi i32 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.7, %for.body.i ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2637)
    #dbg_value(ptr %src.addr.08.i, !1806, !DIExpression(), !2635)
    #dbg_value(ptr %dst.addr.07.i, !1810, !DIExpression(), !2635)
  %1 = load i32, ptr %src.addr.08.i, align 1, !dbg !2640
  store i32 %1, ptr %dst.addr.07.i, align 1, !dbg !2640
  %add.ptr.i = getelementptr inbounds i8, ptr %src.addr.08.i, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i, !1806, !DIExpression(), !2635)
  %add.ptr2.i = getelementptr inbounds i8, ptr %dst.addr.07.i, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2637)
  %2 = load i32, ptr %add.ptr.i, align 1, !dbg !2640
  store i32 %2, ptr %add.ptr2.i, align 1, !dbg !2640
  %add.ptr.i.1 = getelementptr inbounds i8, ptr %add.ptr.i, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.1, !1806, !DIExpression(), !2635)
  %add.ptr2.i.1 = getelementptr inbounds i8, ptr %add.ptr2.i, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.1, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2637)
  %3 = load i32, ptr %add.ptr.i.1, align 1, !dbg !2640
  store i32 %3, ptr %add.ptr2.i.1, align 1, !dbg !2640
  %add.ptr.i.2 = getelementptr inbounds i8, ptr %add.ptr.i.1, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.2, !1806, !DIExpression(), !2635)
  %add.ptr2.i.2 = getelementptr inbounds i8, ptr %add.ptr2.i.1, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.2, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2637)
  %4 = load i32, ptr %add.ptr.i.2, align 1, !dbg !2640
  store i32 %4, ptr %add.ptr2.i.2, align 1, !dbg !2640
  %add.ptr.i.3 = getelementptr inbounds i8, ptr %add.ptr.i.2, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.3, !1806, !DIExpression(), !2635)
  %add.ptr2.i.3 = getelementptr inbounds i8, ptr %add.ptr2.i.2, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.3, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !2637)
  %5 = load i32, ptr %add.ptr.i.3, align 1, !dbg !2640
  store i32 %5, ptr %add.ptr2.i.3, align 1, !dbg !2640
  %add.ptr.i.4 = getelementptr inbounds i8, ptr %add.ptr.i.3, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.4, !1806, !DIExpression(), !2635)
  %add.ptr2.i.4 = getelementptr inbounds i8, ptr %add.ptr2.i.3, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.4, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 5, DW_OP_stack_value), !2637)
  %6 = load i32, ptr %add.ptr.i.4, align 1, !dbg !2640
  store i32 %6, ptr %add.ptr2.i.4, align 1, !dbg !2640
  %add.ptr.i.5 = getelementptr inbounds i8, ptr %add.ptr.i.4, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.5, !1806, !DIExpression(), !2635)
  %add.ptr2.i.5 = getelementptr inbounds i8, ptr %add.ptr2.i.4, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.5, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 6, DW_OP_stack_value), !2637)
  %7 = load i32, ptr %add.ptr.i.5, align 1, !dbg !2640
  store i32 %7, ptr %add.ptr2.i.5, align 1, !dbg !2640
  %add.ptr.i.6 = getelementptr inbounds i8, ptr %add.ptr.i.5, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.6, !1806, !DIExpression(), !2635)
  %add.ptr2.i.6 = getelementptr inbounds i8, ptr %add.ptr2.i.5, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.6, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 7, DW_OP_stack_value), !2637)
  %8 = load i32, ptr %add.ptr.i.6, align 1, !dbg !2640
  store i32 %8, ptr %add.ptr2.i.6, align 1, !dbg !2640
  %add.ptr.i.7 = getelementptr inbounds i8, ptr %add.ptr.i.6, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.7, !1806, !DIExpression(), !2635)
  %add.ptr2.i.7 = getelementptr inbounds i8, ptr %add.ptr2.i.6, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.7, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value), !2637)
  %niter.next.7 = add i32 %niter, 8, !dbg !2639
  %niter.ncmp.7 = icmp eq i32 %niter.next.7, %unroll_iter, !dbg !2639
  br i1 %niter.ncmp.7, label %mc_copy.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !2639, !llvm.loop !2643

mc_copy.exit.loopexit.unr-lcssa:                  ; preds = %for.body.i, %for.body.lr.ph.i
  %src.addr.08.i.unr = phi ptr [ %src, %for.body.lr.ph.i ], [ %add.ptr.i.7, %for.body.i ]
  %dst.addr.07.i.unr = phi ptr [ %dst, %for.body.lr.ph.i ], [ %add.ptr2.i.7, %for.body.i ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0, !dbg !2639
  br i1 %lcmp.mod.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2639

for.body.i.epil:                                  ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil
  %src.addr.08.i.epil = phi ptr [ %add.ptr.i.epil, %for.body.i.epil ], [ %src.addr.08.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %dst.addr.07.i.epil = phi ptr [ %add.ptr2.i.epil, %for.body.i.epil ], [ %dst.addr.07.i.unr, %mc_copy.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.next, %for.body.i.epil ], [ 0, %mc_copy.exit.loopexit.unr-lcssa ]
    #dbg_value(i32 poison, !1814, !DIExpression(), !2637)
    #dbg_value(ptr %src.addr.08.i.epil, !1806, !DIExpression(), !2635)
    #dbg_value(ptr %dst.addr.07.i.epil, !1810, !DIExpression(), !2635)
  %9 = load i32, ptr %src.addr.08.i.epil, align 1, !dbg !2640
  store i32 %9, ptr %dst.addr.07.i.epil, align 1, !dbg !2640
  %add.ptr.i.epil = getelementptr inbounds i8, ptr %src.addr.08.i.epil, i64 %idx.ext.i, !dbg !2641
    #dbg_value(ptr %add.ptr.i.epil, !1806, !DIExpression(), !2635)
  %add.ptr2.i.epil = getelementptr inbounds i8, ptr %dst.addr.07.i.epil, i64 %idx.ext1.i, !dbg !2642
    #dbg_value(ptr %add.ptr2.i.epil, !1810, !DIExpression(), !2635)
    #dbg_value(i32 poison, !1814, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2637)
  %epil.iter.next = add i32 %epil.iter, 1, !dbg !2639
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.next, %xtraiter, !dbg !2639
  br i1 %epil.iter.cmp.not, label %mc_copy.exit, label %for.body.i.epil, !dbg !2639, !llvm.loop !2645

mc_copy.exit:                                     ; preds = %mc_copy.exit.loopexit.unr-lcssa, %for.body.i.epil, %entry
  ret void, !dbg !2646
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @hpel_filter(ptr nocapture noundef writeonly %dsth, ptr nocapture noundef writeonly %dstv, ptr nocapture noundef writeonly %dstc, ptr nocapture noundef readonly %src, i32 noundef %stride, i32 noundef %width, i32 noundef %height, ptr nocapture noundef %buf) #0 !dbg !2647 {
entry:
    #dbg_value(ptr %dsth, !2649, !DIExpression(), !2670)
    #dbg_value(ptr %dstv, !2650, !DIExpression(), !2670)
    #dbg_value(ptr %dstc, !2651, !DIExpression(), !2670)
    #dbg_value(ptr %src, !2652, !DIExpression(), !2670)
    #dbg_value(i32 %stride, !2653, !DIExpression(), !2670)
    #dbg_value(i32 %width, !2654, !DIExpression(), !2670)
    #dbg_value(i32 %height, !2655, !DIExpression(), !2670)
    #dbg_value(ptr %buf, !2656, !DIExpression(), !2670)
    #dbg_value(i32 0, !2657, !DIExpression(), !2671)
  %cmp215 = icmp sgt i32 %height, 0, !dbg !2672
  br i1 %cmp215, label %for.cond1.preheader.lr.ph, label %for.cond.cleanup, !dbg !2673

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %invariant.gep = getelementptr i8, ptr %buf, i64 4
  %cmp2209 = icmp sgt i32 %width, -5
  %mul = shl i32 %stride, 1
  %mul5 = mul i32 %stride, 3
  %cmp42211 = icmp sgt i32 %width, 0
  %idx.ext = sext i32 %stride to i64
  %0 = sext i32 %mul to i64, !dbg !2673
  %1 = sext i32 %mul5 to i64, !dbg !2673
  %2 = add i32 %width, 2, !dbg !2673
  %smax = tail call i32 @llvm.smax.i32(i32 %2, i32 -2), !dbg !2673
  %3 = add i32 %smax, 1, !dbg !2673
  %wide.trip.count = zext i32 %width to i64
  %wide.trip.count238 = zext nneg i32 %width to i64
  %4 = add nsw i32 %height, -1, !dbg !2673
  %5 = zext i32 %4 to i64, !dbg !2673
  %6 = mul nsw i64 %idx.ext, %5, !dbg !2673
  %7 = add i64 %6, %wide.trip.count, !dbg !2673
  %scevgep = getelementptr i8, ptr %dsth, i64 %7, !dbg !2673
  %scevgep241 = getelementptr i8, ptr %src, i64 -2, !dbg !2673
  %8 = getelementptr i8, ptr %src, i64 %7, !dbg !2673
  %scevgep242 = getelementptr i8, ptr %8, i64 3, !dbg !2673
  %9 = add nsw i32 %height, -1, !dbg !2673
  %10 = zext i32 %9 to i64, !dbg !2673
  %11 = mul nsw i64 %idx.ext, %10, !dbg !2673
  %12 = getelementptr i8, ptr %dstc, i64 %11, !dbg !2673
  %scevgep280 = getelementptr i8, ptr %12, i64 %wide.trip.count, !dbg !2673
  %13 = shl nuw nsw i64 %wide.trip.count, 1, !dbg !2673
  %14 = getelementptr i8, ptr %buf, i64 %13, !dbg !2673
  %scevgep281 = getelementptr i8, ptr %14, i64 10, !dbg !2673
  %scevgep321 = getelementptr i8, ptr %dstv, i64 -2, !dbg !2673
  %15 = add nsw i32 %height, -1, !dbg !2673
  %16 = zext i32 %15 to i64, !dbg !2673
  %17 = mul nsw i64 %idx.ext, %16, !dbg !2673
  %18 = add i32 %smax, 2, !dbg !2673
  %19 = zext i32 %18 to i64, !dbg !2673
  %20 = add i64 %17, %19, !dbg !2673
  %21 = add i64 %20, -1, !dbg !2673
  %scevgep322 = getelementptr i8, ptr %dstv, i64 %21, !dbg !2673
  %22 = shl nuw nsw i64 %19, 1, !dbg !2673
  %23 = getelementptr i8, ptr %buf, i64 %22, !dbg !2673
  %scevgep323 = getelementptr i8, ptr %23, i64 2, !dbg !2673
  %24 = getelementptr i8, ptr %src, i64 %idx.ext, !dbg !2673
  %scevgep324 = getelementptr i8, ptr %24, i64 -2, !dbg !2673
  %25 = zext nneg i32 %height to i64, !dbg !2673
  %26 = mul nsw i64 %25, %idx.ext, !dbg !2673
  %27 = getelementptr i8, ptr %src, i64 %26, !dbg !2673
  %28 = getelementptr i8, ptr %27, i64 %19, !dbg !2673
  %scevgep325 = getelementptr i8, ptr %28, i64 -1, !dbg !2673
  %scevgep326 = getelementptr i8, ptr %src, i64 -2, !dbg !2673
  %scevgep327 = getelementptr i8, ptr %src, i64 %21, !dbg !2673
  %29 = getelementptr i8, ptr %src, i64 %0, !dbg !2673
  %scevgep328 = getelementptr i8, ptr %29, i64 -2, !dbg !2673
  %30 = getelementptr i8, ptr %src, i64 %17, !dbg !2673
  %31 = getelementptr i8, ptr %30, i64 %0, !dbg !2673
  %32 = getelementptr i8, ptr %31, i64 %19, !dbg !2673
  %scevgep329 = getelementptr i8, ptr %32, i64 -1, !dbg !2673
  %33 = sub nsw i64 -2, %idx.ext, !dbg !2673
  %scevgep330 = getelementptr i8, ptr %src, i64 %33, !dbg !2673
  %34 = add nsw i64 %16, -1, !dbg !2673
  %35 = mul i64 %34, %idx.ext, !dbg !2673
  %36 = getelementptr i8, ptr %src, i64 %35, !dbg !2673
  %37 = getelementptr i8, ptr %36, i64 %19, !dbg !2673
  %scevgep331 = getelementptr i8, ptr %37, i64 -1, !dbg !2673
  %38 = getelementptr i8, ptr %src, i64 %1, !dbg !2673
  %scevgep332 = getelementptr i8, ptr %38, i64 -2, !dbg !2673
  %39 = getelementptr i8, ptr %src, i64 %17, !dbg !2673
  %40 = getelementptr i8, ptr %39, i64 %1, !dbg !2673
  %41 = getelementptr i8, ptr %40, i64 %19, !dbg !2673
  %scevgep333 = getelementptr i8, ptr %41, i64 -1, !dbg !2673
  %42 = sub nuw nsw i64 -2, %0, !dbg !2673
  %scevgep334 = getelementptr i8, ptr %src, i64 %42, !dbg !2673
  %43 = xor i64 %0, -1, !dbg !2673
  %44 = getelementptr i8, ptr %src, i64 %17, !dbg !2673
  %45 = getelementptr i8, ptr %44, i64 %19, !dbg !2673
  %scevgep335 = getelementptr i8, ptr %45, i64 %43, !dbg !2673
  %46 = add i32 %smax, 3, !dbg !2673
  %47 = zext i32 %46 to i64, !dbg !2673
  %min.iters.check407 = icmp ult i32 %46, 32
  %bound0336 = icmp ult ptr %scevgep321, %scevgep323
  %bound1337 = icmp ugt ptr %scevgep322, %buf
  %found.conflict338 = and i1 %bound0336, %bound1337
  %bound0340 = icmp ult ptr %scevgep321, %scevgep325
  %bound1341 = icmp ult ptr %scevgep324, %scevgep322
  %found.conflict342 = and i1 %bound0340, %bound1341
  %stride.check343 = icmp slt i32 %stride, 0
  %48 = or i1 %found.conflict342, %stride.check343
  %conflict.rdx = or i1 %found.conflict338, %48
  %bound0345 = icmp ult ptr %scevgep321, %scevgep327
  %bound1346 = icmp ult ptr %scevgep326, %scevgep322
  %found.conflict347 = and i1 %bound0345, %bound1346
  %conflict.rdx350 = or i1 %found.conflict347, %conflict.rdx
  %bound0351 = icmp ult ptr %scevgep321, %scevgep329
  %bound1352 = icmp ult ptr %scevgep328, %scevgep322
  %found.conflict353 = and i1 %bound0351, %bound1352
  %conflict.rdx356 = or i1 %found.conflict353, %conflict.rdx350
  %bound0357 = icmp ult ptr %scevgep321, %scevgep331
  %bound1358 = icmp ult ptr %scevgep330, %scevgep322
  %found.conflict359 = and i1 %bound0357, %bound1358
  %conflict.rdx362 = or i1 %found.conflict359, %conflict.rdx356
  %bound0363 = icmp ult ptr %scevgep321, %scevgep333
  %bound1364 = icmp ult ptr %scevgep332, %scevgep322
  %found.conflict365 = and i1 %bound0363, %bound1364
  %conflict.rdx368 = or i1 %found.conflict365, %conflict.rdx362
  %bound0369 = icmp ult ptr %scevgep321, %scevgep335
  %bound1370 = icmp ult ptr %scevgep334, %scevgep322
  %found.conflict371 = and i1 %bound0369, %bound1370
  %conflict.rdx374 = or i1 %found.conflict371, %conflict.rdx368
  %bound0375 = icmp ugt ptr %scevgep325, %buf
  %bound1376 = icmp ult ptr %scevgep324, %scevgep323
  %found.conflict377 = and i1 %bound0375, %bound1376
  %conflict.rdx379 = or i1 %found.conflict377, %conflict.rdx374
  %bound0380 = icmp ugt ptr %scevgep327, %buf
  %bound1381 = icmp ult ptr %scevgep326, %scevgep323
  %found.conflict382 = and i1 %bound0380, %bound1381
  %conflict.rdx384 = or i1 %found.conflict382, %conflict.rdx379
  %bound0385 = icmp ugt ptr %scevgep329, %buf
  %bound1386 = icmp ult ptr %scevgep328, %scevgep323
  %found.conflict387 = and i1 %bound0385, %bound1386
  %stride.check388 = icmp slt i32 %stride, 0
  %49 = or i1 %found.conflict387, %stride.check388
  %conflict.rdx389 = or i1 %conflict.rdx384, %49
  %bound0390 = icmp ugt ptr %scevgep331, %buf
  %bound1391 = icmp ult ptr %scevgep330, %scevgep323
  %found.conflict392 = and i1 %bound0390, %bound1391
  %conflict.rdx394 = or i1 %found.conflict392, %conflict.rdx389
  %bound0395 = icmp ugt ptr %scevgep333, %buf
  %bound1396 = icmp ult ptr %scevgep332, %scevgep323
  %found.conflict397 = and i1 %bound0395, %bound1396
  %conflict.rdx399 = or i1 %found.conflict397, %conflict.rdx394
  %bound0400 = icmp ugt ptr %scevgep335, %buf
  %bound1401 = icmp ult ptr %scevgep334, %scevgep323
  %found.conflict402 = and i1 %bound0400, %bound1401
  %conflict.rdx404 = or i1 %found.conflict402, %conflict.rdx399
  %n.vec410 = and i64 %47, 4294967264
  %ind.end = add nsw i64 %n.vec410, -2
  %cmp.n439 = icmp eq i64 %n.vec410, %47
  %min.iters.check287 = icmp ult i32 %width, 32
  %bound0282 = icmp ugt ptr %scevgep281, %dstc
  %bound1283 = icmp ugt ptr %scevgep280, %buf
  %found.conflict284 = and i1 %bound0282, %bound1283
  %stride.check285 = icmp slt i32 %stride, 0
  %50 = or i1 %found.conflict284, %stride.check285
  %n.vec290 = and i64 %wide.trip.count, 2147483616
  %cmp.n319 = icmp eq i64 %n.vec290, %wide.trip.count
  %min.iters.check = icmp ult i32 %width, 8
  %bound0 = icmp ugt ptr %scevgep242, %dsth
  %bound1 = icmp ult ptr %scevgep241, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %stride.check = icmp slt i32 %stride, 0
  %51 = or i1 %found.conflict, %stride.check
  %min.iters.check244 = icmp ult i32 %width, 64
  %n.vec = and i64 %wide.trip.count, 2147483584
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  %n.vec.remaining = and i64 %wide.trip.count, 56
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  %n.vec269 = and i64 %wide.trip.count, 2147483640
  %cmp.n278 = icmp eq i64 %n.vec269, %wide.trip.count
  br label %for.cond1.preheader, !dbg !2673

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.cond.cleanup93
  %dsth.addr.0220 = phi ptr [ %dsth, %for.cond1.preheader.lr.ph ], [ %add.ptr133, %for.cond.cleanup93 ]
  %y.0219 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %inc141, %for.cond.cleanup93 ]
  %dstv.addr.0218 = phi ptr [ %dstv, %for.cond1.preheader.lr.ph ], [ %add.ptr135, %for.cond.cleanup93 ]
  %dstc.addr.0217 = phi ptr [ %dstc, %for.cond1.preheader.lr.ph ], [ %add.ptr137, %for.cond.cleanup93 ]
  %src.addr.0216 = phi ptr [ %src, %for.cond1.preheader.lr.ph ], [ %add.ptr139, %for.cond.cleanup93 ]
    #dbg_value(ptr %dsth.addr.0220, !2649, !DIExpression(), !2670)
    #dbg_value(i32 %y.0219, !2657, !DIExpression(), !2671)
    #dbg_value(ptr %dstv.addr.0218, !2650, !DIExpression(), !2670)
    #dbg_value(ptr %dstc.addr.0217, !2651, !DIExpression(), !2670)
    #dbg_value(ptr %src.addr.0216, !2652, !DIExpression(), !2670)
    #dbg_value(i32 -2, !2659, !DIExpression(), !2674)
  br i1 %cmp2209, label %for.body4.preheader, label %for.cond.cleanup93, !dbg !2675

for.body4.preheader:                              ; preds = %for.cond1.preheader
  %brmerge = select i1 %min.iters.check407, i1 true, i1 %conflict.rdx404, !dbg !2675
  br i1 %brmerge, label %for.body4.preheader441, label %vector.body412, !dbg !2675

for.body4.preheader441:                           ; preds = %for.body4.preheader, %middle.block405
  %indvars.iv.ph = phi i64 [ -2, %for.body4.preheader ], [ %ind.end, %middle.block405 ]
  br label %for.body4, !dbg !2675

vector.body412:                                   ; preds = %for.body4.preheader, %vector.body412
  %index413 = phi i64 [ %index.next438, %vector.body412 ], [ 0, %for.body4.preheader ]
  %offset.idx = add i64 %index413, -2, !dbg !2675
  %52 = sub nsw i64 %offset.idx, %0, !dbg !2676
  %53 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %52, !dbg !2676
  %54 = getelementptr inbounds i8, ptr %53, i64 8, !dbg !2676
  %55 = getelementptr inbounds i8, ptr %53, i64 16, !dbg !2676
  %56 = getelementptr inbounds i8, ptr %53, i64 24, !dbg !2676
  %wide.load414 = load <8 x i8>, ptr %53, align 1, !dbg !2676, !alias.scope !2677
  %wide.load415 = load <8 x i8>, ptr %54, align 1, !dbg !2676, !alias.scope !2677
  %wide.load416 = load <8 x i8>, ptr %55, align 1, !dbg !2676, !alias.scope !2677
  %wide.load417 = load <8 x i8>, ptr %56, align 1, !dbg !2676, !alias.scope !2677
  %57 = zext <8 x i8> %wide.load414 to <8 x i32>, !dbg !2676
  %58 = zext <8 x i8> %wide.load415 to <8 x i32>, !dbg !2676
  %59 = zext <8 x i8> %wide.load416 to <8 x i32>, !dbg !2676
  %60 = zext <8 x i8> %wide.load417 to <8 x i32>, !dbg !2676
  %61 = add nsw i64 %offset.idx, %1, !dbg !2676
  %62 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %61, !dbg !2676
  %63 = getelementptr inbounds i8, ptr %62, i64 8, !dbg !2676
  %64 = getelementptr inbounds i8, ptr %62, i64 16, !dbg !2676
  %65 = getelementptr inbounds i8, ptr %62, i64 24, !dbg !2676
  %wide.load418 = load <8 x i8>, ptr %62, align 1, !dbg !2676, !alias.scope !2680
  %wide.load419 = load <8 x i8>, ptr %63, align 1, !dbg !2676, !alias.scope !2680
  %wide.load420 = load <8 x i8>, ptr %64, align 1, !dbg !2676, !alias.scope !2680
  %wide.load421 = load <8 x i8>, ptr %65, align 1, !dbg !2676, !alias.scope !2680
  %66 = zext <8 x i8> %wide.load418 to <8 x i32>, !dbg !2676
  %67 = zext <8 x i8> %wide.load419 to <8 x i32>, !dbg !2676
  %68 = zext <8 x i8> %wide.load420 to <8 x i32>, !dbg !2676
  %69 = zext <8 x i8> %wide.load421 to <8 x i32>, !dbg !2676
  %70 = add nuw nsw <8 x i32> %66, %57, !dbg !2676
  %71 = add nuw nsw <8 x i32> %67, %58, !dbg !2676
  %72 = add nuw nsw <8 x i32> %68, %59, !dbg !2676
  %73 = add nuw nsw <8 x i32> %69, %60, !dbg !2676
  %74 = sub nsw i64 %offset.idx, %idx.ext, !dbg !2676
  %75 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %74, !dbg !2676
  %76 = getelementptr inbounds i8, ptr %75, i64 8, !dbg !2676
  %77 = getelementptr inbounds i8, ptr %75, i64 16, !dbg !2676
  %78 = getelementptr inbounds i8, ptr %75, i64 24, !dbg !2676
  %wide.load422 = load <8 x i8>, ptr %75, align 1, !dbg !2676, !alias.scope !2682
  %wide.load423 = load <8 x i8>, ptr %76, align 1, !dbg !2676, !alias.scope !2682
  %wide.load424 = load <8 x i8>, ptr %77, align 1, !dbg !2676, !alias.scope !2682
  %wide.load425 = load <8 x i8>, ptr %78, align 1, !dbg !2676, !alias.scope !2682
  %79 = zext <8 x i8> %wide.load422 to <8 x i32>, !dbg !2676
  %80 = zext <8 x i8> %wide.load423 to <8 x i32>, !dbg !2676
  %81 = zext <8 x i8> %wide.load424 to <8 x i32>, !dbg !2676
  %82 = zext <8 x i8> %wide.load425 to <8 x i32>, !dbg !2676
  %83 = add nsw i64 %offset.idx, %0, !dbg !2676
  %84 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %83, !dbg !2676
  %85 = getelementptr inbounds i8, ptr %84, i64 8, !dbg !2676
  %86 = getelementptr inbounds i8, ptr %84, i64 16, !dbg !2676
  %87 = getelementptr inbounds i8, ptr %84, i64 24, !dbg !2676
  %wide.load426 = load <8 x i8>, ptr %84, align 1, !dbg !2676, !alias.scope !2684
  %wide.load427 = load <8 x i8>, ptr %85, align 1, !dbg !2676, !alias.scope !2684
  %wide.load428 = load <8 x i8>, ptr %86, align 1, !dbg !2676, !alias.scope !2684
  %wide.load429 = load <8 x i8>, ptr %87, align 1, !dbg !2676, !alias.scope !2684
  %88 = zext <8 x i8> %wide.load426 to <8 x i32>, !dbg !2676
  %89 = zext <8 x i8> %wide.load427 to <8 x i32>, !dbg !2676
  %90 = zext <8 x i8> %wide.load428 to <8 x i32>, !dbg !2676
  %91 = zext <8 x i8> %wide.load429 to <8 x i32>, !dbg !2676
  %92 = add nuw nsw <8 x i32> %88, %79, !dbg !2676
  %93 = add nuw nsw <8 x i32> %89, %80, !dbg !2676
  %94 = add nuw nsw <8 x i32> %90, %81, !dbg !2676
  %95 = add nuw nsw <8 x i32> %91, %82, !dbg !2676
  %96 = mul nsw <8 x i32> %92, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2676
  %97 = mul nsw <8 x i32> %93, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2676
  %98 = mul nsw <8 x i32> %94, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2676
  %99 = mul nsw <8 x i32> %95, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2676
  %100 = add nsw <8 x i32> %70, %96, !dbg !2676
  %101 = add nsw <8 x i32> %71, %97, !dbg !2676
  %102 = add nsw <8 x i32> %72, %98, !dbg !2676
  %103 = add nsw <8 x i32> %73, %99, !dbg !2676
  %104 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %offset.idx, !dbg !2676
  %105 = getelementptr inbounds i8, ptr %104, i64 8, !dbg !2676
  %106 = getelementptr inbounds i8, ptr %104, i64 16, !dbg !2676
  %107 = getelementptr inbounds i8, ptr %104, i64 24, !dbg !2676
  %wide.load430 = load <8 x i8>, ptr %104, align 1, !dbg !2676, !alias.scope !2686
  %wide.load431 = load <8 x i8>, ptr %105, align 1, !dbg !2676, !alias.scope !2686
  %wide.load432 = load <8 x i8>, ptr %106, align 1, !dbg !2676, !alias.scope !2686
  %wide.load433 = load <8 x i8>, ptr %107, align 1, !dbg !2676, !alias.scope !2686
  %108 = zext <8 x i8> %wide.load430 to <8 x i32>, !dbg !2676
  %109 = zext <8 x i8> %wide.load431 to <8 x i32>, !dbg !2676
  %110 = zext <8 x i8> %wide.load432 to <8 x i32>, !dbg !2676
  %111 = zext <8 x i8> %wide.load433 to <8 x i32>, !dbg !2676
  %112 = add nsw i64 %offset.idx, %idx.ext, !dbg !2676
  %113 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %112, !dbg !2676
  %114 = getelementptr inbounds i8, ptr %113, i64 8, !dbg !2676
  %115 = getelementptr inbounds i8, ptr %113, i64 16, !dbg !2676
  %116 = getelementptr inbounds i8, ptr %113, i64 24, !dbg !2676
  %wide.load434 = load <8 x i8>, ptr %113, align 1, !dbg !2676, !alias.scope !2688
  %wide.load435 = load <8 x i8>, ptr %114, align 1, !dbg !2676, !alias.scope !2688
  %wide.load436 = load <8 x i8>, ptr %115, align 1, !dbg !2676, !alias.scope !2688
  %wide.load437 = load <8 x i8>, ptr %116, align 1, !dbg !2676, !alias.scope !2688
  %117 = zext <8 x i8> %wide.load434 to <8 x i32>, !dbg !2676
  %118 = zext <8 x i8> %wide.load435 to <8 x i32>, !dbg !2676
  %119 = zext <8 x i8> %wide.load436 to <8 x i32>, !dbg !2676
  %120 = zext <8 x i8> %wide.load437 to <8 x i32>, !dbg !2676
  %121 = add nuw nsw <8 x i32> %117, %108, !dbg !2676
  %122 = add nuw nsw <8 x i32> %118, %109, !dbg !2676
  %123 = add nuw nsw <8 x i32> %119, %110, !dbg !2676
  %124 = add nuw nsw <8 x i32> %120, %111, !dbg !2676
  %125 = mul nuw nsw <8 x i32> %121, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2676
  %126 = mul nuw nsw <8 x i32> %122, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2676
  %127 = mul nuw nsw <8 x i32> %123, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2676
  %128 = mul nuw nsw <8 x i32> %124, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2676
  %129 = add nsw <8 x i32> %100, %125, !dbg !2676
  %130 = add nsw <8 x i32> %101, %126, !dbg !2676
  %131 = add nsw <8 x i32> %102, %127, !dbg !2676
  %132 = add nsw <8 x i32> %103, %128, !dbg !2676
  %133 = add nsw <8 x i32> %129, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2690
  %134 = add nsw <8 x i32> %130, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2690
  %135 = add nsw <8 x i32> %131, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2690
  %136 = add nsw <8 x i32> %132, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2690
  %137 = ashr <8 x i32> %133, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2691
  %138 = ashr <8 x i32> %134, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2691
  %139 = ashr <8 x i32> %135, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2691
  %140 = ashr <8 x i32> %136, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2691
  %141 = icmp ult <8 x i32> %137, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2692
  %142 = icmp ult <8 x i32> %138, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2692
  %143 = icmp ult <8 x i32> %139, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2692
  %144 = icmp ult <8 x i32> %140, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2692
  %145 = icmp sgt <8 x i32> %137, zeroinitializer, !dbg !2694
  %146 = icmp sgt <8 x i32> %138, zeroinitializer, !dbg !2694
  %147 = icmp sgt <8 x i32> %139, zeroinitializer, !dbg !2694
  %148 = icmp sgt <8 x i32> %140, zeroinitializer, !dbg !2694
  %149 = sext <8 x i1> %145 to <8 x i32>, !dbg !2694
  %150 = sext <8 x i1> %146 to <8 x i32>, !dbg !2694
  %151 = sext <8 x i1> %147 to <8 x i32>, !dbg !2694
  %152 = sext <8 x i1> %148 to <8 x i32>, !dbg !2694
  %153 = select <8 x i1> %141, <8 x i32> %137, <8 x i32> %149, !dbg !2694
  %154 = select <8 x i1> %142, <8 x i32> %138, <8 x i32> %150, !dbg !2694
  %155 = select <8 x i1> %143, <8 x i32> %139, <8 x i32> %151, !dbg !2694
  %156 = select <8 x i1> %144, <8 x i32> %140, <8 x i32> %152, !dbg !2694
  %157 = trunc <8 x i32> %153 to <8 x i8>, !dbg !2694
  %158 = trunc <8 x i32> %154 to <8 x i8>, !dbg !2694
  %159 = trunc <8 x i32> %155 to <8 x i8>, !dbg !2694
  %160 = trunc <8 x i32> %156 to <8 x i8>, !dbg !2694
  %161 = getelementptr inbounds i8, ptr %dstv.addr.0218, i64 %offset.idx, !dbg !2695
  %162 = getelementptr inbounds i8, ptr %161, i64 8, !dbg !2696
  %163 = getelementptr inbounds i8, ptr %161, i64 16, !dbg !2696
  %164 = getelementptr inbounds i8, ptr %161, i64 24, !dbg !2696
  store <8 x i8> %157, ptr %161, align 1, !dbg !2696, !alias.scope !2697, !noalias !2699
  store <8 x i8> %158, ptr %162, align 1, !dbg !2696, !alias.scope !2697, !noalias !2699
  store <8 x i8> %159, ptr %163, align 1, !dbg !2696, !alias.scope !2697, !noalias !2699
  store <8 x i8> %160, ptr %164, align 1, !dbg !2696, !alias.scope !2697, !noalias !2699
  %165 = trunc <8 x i32> %129 to <8 x i16>, !dbg !2701
  %166 = trunc <8 x i32> %130 to <8 x i16>, !dbg !2701
  %167 = trunc <8 x i32> %131 to <8 x i16>, !dbg !2701
  %168 = trunc <8 x i32> %132 to <8 x i16>, !dbg !2701
  %169 = getelementptr i16, ptr %buf, i64 %index413, !dbg !2702
  %170 = getelementptr i8, ptr %169, i64 16, !dbg !2703
  %171 = getelementptr i8, ptr %169, i64 32, !dbg !2703
  %172 = getelementptr i8, ptr %169, i64 48, !dbg !2703
  store <8 x i16> %165, ptr %169, align 2, !dbg !2703, !alias.scope !2704, !noalias !2705
  store <8 x i16> %166, ptr %170, align 2, !dbg !2703, !alias.scope !2704, !noalias !2705
  store <8 x i16> %167, ptr %171, align 2, !dbg !2703, !alias.scope !2704, !noalias !2705
  store <8 x i16> %168, ptr %172, align 2, !dbg !2703, !alias.scope !2704, !noalias !2705
  %index.next438 = add nuw i64 %index413, 32
  %173 = icmp eq i64 %index.next438, %n.vec410
  br i1 %173, label %middle.block405, label %vector.body412, !llvm.loop !2706

middle.block405:                                  ; preds = %vector.body412
  br i1 %cmp.n439, label %for.cond41.preheader, label %for.body4.preheader441, !dbg !2675

for.cond.cleanup:                                 ; preds = %for.cond.cleanup93, %entry
  ret void, !dbg !2708

for.cond41.preheader:                             ; preds = %for.body4, %middle.block405
    #dbg_value(i32 0, !2666, !DIExpression(), !2709)
  br i1 %cmp42211, label %for.body45.preheader, label %for.cond.cleanup93, !dbg !2710

for.body45.preheader:                             ; preds = %for.cond41.preheader
  %brmerge442 = select i1 %min.iters.check287, i1 true, i1 %50, !dbg !2710
  br i1 %brmerge442, label %for.body45.preheader440, label %vector.body292, !dbg !2710

for.body45.preheader440:                          ; preds = %for.body45.preheader, %middle.block286
  %indvars.iv227.ph = phi i64 [ 0, %for.body45.preheader ], [ %n.vec290, %middle.block286 ]
  br label %for.body45, !dbg !2710

vector.body292:                                   ; preds = %for.body45.preheader, %vector.body292
  %index293 = phi i64 [ %index.next318, %vector.body292 ], [ 0, %for.body45.preheader ], !dbg !2711
  %174 = getelementptr i16, ptr %invariant.gep, i64 %index293, !dbg !2711
  %175 = getelementptr i8, ptr %174, i64 -4, !dbg !2711
  %176 = getelementptr i8, ptr %174, i64 12, !dbg !2711
  %177 = getelementptr i8, ptr %174, i64 28, !dbg !2711
  %178 = getelementptr i8, ptr %174, i64 44, !dbg !2711
  %wide.load294 = load <8 x i16>, ptr %175, align 2, !dbg !2711, !alias.scope !2713
  %wide.load295 = load <8 x i16>, ptr %176, align 2, !dbg !2711, !alias.scope !2713
  %wide.load296 = load <8 x i16>, ptr %177, align 2, !dbg !2711, !alias.scope !2713
  %wide.load297 = load <8 x i16>, ptr %178, align 2, !dbg !2711, !alias.scope !2713
  %179 = sext <8 x i16> %wide.load294 to <8 x i32>, !dbg !2711
  %180 = sext <8 x i16> %wide.load295 to <8 x i32>, !dbg !2711
  %181 = sext <8 x i16> %wide.load296 to <8 x i32>, !dbg !2711
  %182 = sext <8 x i16> %wide.load297 to <8 x i32>, !dbg !2711
  %183 = getelementptr inbounds i8, ptr %174, i64 6, !dbg !2711
  %184 = getelementptr inbounds i8, ptr %174, i64 22, !dbg !2711
  %185 = getelementptr inbounds i8, ptr %174, i64 38, !dbg !2711
  %186 = getelementptr inbounds i8, ptr %174, i64 54, !dbg !2711
  %wide.load298 = load <8 x i16>, ptr %183, align 2, !dbg !2711, !alias.scope !2713
  %wide.load299 = load <8 x i16>, ptr %184, align 2, !dbg !2711, !alias.scope !2713
  %wide.load300 = load <8 x i16>, ptr %185, align 2, !dbg !2711, !alias.scope !2713
  %wide.load301 = load <8 x i16>, ptr %186, align 2, !dbg !2711, !alias.scope !2713
  %187 = sext <8 x i16> %wide.load298 to <8 x i32>, !dbg !2711
  %188 = sext <8 x i16> %wide.load299 to <8 x i32>, !dbg !2711
  %189 = sext <8 x i16> %wide.load300 to <8 x i32>, !dbg !2711
  %190 = sext <8 x i16> %wide.load301 to <8 x i32>, !dbg !2711
  %191 = getelementptr i8, ptr %174, i64 -2, !dbg !2711
  %192 = getelementptr i8, ptr %174, i64 14, !dbg !2711
  %193 = getelementptr i8, ptr %174, i64 30, !dbg !2711
  %194 = getelementptr i8, ptr %174, i64 46, !dbg !2711
  %wide.load302 = load <8 x i16>, ptr %191, align 2, !dbg !2711, !alias.scope !2713
  %wide.load303 = load <8 x i16>, ptr %192, align 2, !dbg !2711, !alias.scope !2713
  %wide.load304 = load <8 x i16>, ptr %193, align 2, !dbg !2711, !alias.scope !2713
  %wide.load305 = load <8 x i16>, ptr %194, align 2, !dbg !2711, !alias.scope !2713
  %195 = sext <8 x i16> %wide.load302 to <8 x i32>, !dbg !2711
  %196 = sext <8 x i16> %wide.load303 to <8 x i32>, !dbg !2711
  %197 = sext <8 x i16> %wide.load304 to <8 x i32>, !dbg !2711
  %198 = sext <8 x i16> %wide.load305 to <8 x i32>, !dbg !2711
  %199 = getelementptr inbounds i8, ptr %174, i64 4, !dbg !2711
  %200 = getelementptr inbounds i8, ptr %174, i64 20, !dbg !2711
  %201 = getelementptr inbounds i8, ptr %174, i64 36, !dbg !2711
  %202 = getelementptr inbounds i8, ptr %174, i64 52, !dbg !2711
  %wide.load306 = load <8 x i16>, ptr %199, align 2, !dbg !2711, !alias.scope !2713
  %wide.load307 = load <8 x i16>, ptr %200, align 2, !dbg !2711, !alias.scope !2713
  %wide.load308 = load <8 x i16>, ptr %201, align 2, !dbg !2711, !alias.scope !2713
  %wide.load309 = load <8 x i16>, ptr %202, align 2, !dbg !2711, !alias.scope !2713
  %203 = sext <8 x i16> %wide.load306 to <8 x i32>, !dbg !2711
  %204 = sext <8 x i16> %wide.load307 to <8 x i32>, !dbg !2711
  %205 = sext <8 x i16> %wide.load308 to <8 x i32>, !dbg !2711
  %206 = sext <8 x i16> %wide.load309 to <8 x i32>, !dbg !2711
  %207 = add nsw <8 x i32> %203, %195, !dbg !2711
  %208 = add nsw <8 x i32> %204, %196, !dbg !2711
  %209 = add nsw <8 x i32> %205, %197, !dbg !2711
  %210 = add nsw <8 x i32> %206, %198, !dbg !2711
  %211 = mul nsw <8 x i32> %207, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2711
  %212 = mul nsw <8 x i32> %208, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2711
  %213 = mul nsw <8 x i32> %209, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2711
  %214 = mul nsw <8 x i32> %210, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2711
  %215 = getelementptr i8, ptr %174, i64 16, !dbg !2711
  %216 = getelementptr i8, ptr %174, i64 32, !dbg !2711
  %217 = getelementptr i8, ptr %174, i64 48, !dbg !2711
  %wide.load310 = load <8 x i16>, ptr %174, align 2, !dbg !2711, !alias.scope !2713
  %wide.load311 = load <8 x i16>, ptr %215, align 2, !dbg !2711, !alias.scope !2713
  %wide.load312 = load <8 x i16>, ptr %216, align 2, !dbg !2711, !alias.scope !2713
  %wide.load313 = load <8 x i16>, ptr %217, align 2, !dbg !2711, !alias.scope !2713
  %218 = sext <8 x i16> %wide.load310 to <8 x i32>, !dbg !2711
  %219 = sext <8 x i16> %wide.load311 to <8 x i32>, !dbg !2711
  %220 = sext <8 x i16> %wide.load312 to <8 x i32>, !dbg !2711
  %221 = sext <8 x i16> %wide.load313 to <8 x i32>, !dbg !2711
  %222 = or disjoint i64 %index293, 1, !dbg !2711
  %223 = getelementptr inbounds i16, ptr %invariant.gep, i64 %222, !dbg !2711
  %224 = getelementptr inbounds i8, ptr %223, i64 16, !dbg !2711
  %225 = getelementptr inbounds i8, ptr %223, i64 32, !dbg !2711
  %226 = getelementptr inbounds i8, ptr %223, i64 48, !dbg !2711
  %wide.load314 = load <8 x i16>, ptr %223, align 2, !dbg !2711, !alias.scope !2713
  %wide.load315 = load <8 x i16>, ptr %224, align 2, !dbg !2711, !alias.scope !2713
  %wide.load316 = load <8 x i16>, ptr %225, align 2, !dbg !2711, !alias.scope !2713
  %wide.load317 = load <8 x i16>, ptr %226, align 2, !dbg !2711, !alias.scope !2713
  %227 = sext <8 x i16> %wide.load314 to <8 x i32>, !dbg !2711
  %228 = sext <8 x i16> %wide.load315 to <8 x i32>, !dbg !2711
  %229 = sext <8 x i16> %wide.load316 to <8 x i32>, !dbg !2711
  %230 = sext <8 x i16> %wide.load317 to <8 x i32>, !dbg !2711
  %231 = add nsw <8 x i32> %227, %218, !dbg !2711
  %232 = add nsw <8 x i32> %228, %219, !dbg !2711
  %233 = add nsw <8 x i32> %229, %220, !dbg !2711
  %234 = add nsw <8 x i32> %230, %221, !dbg !2711
  %235 = mul nsw <8 x i32> %231, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2711
  %236 = mul nsw <8 x i32> %232, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2711
  %237 = mul nsw <8 x i32> %233, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2711
  %238 = mul nsw <8 x i32> %234, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2711
  %239 = add nsw <8 x i32> %179, <i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512>, !dbg !2711
  %240 = add nsw <8 x i32> %180, <i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512>, !dbg !2711
  %241 = add nsw <8 x i32> %181, <i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512>, !dbg !2711
  %242 = add nsw <8 x i32> %182, <i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512, i32 512>, !dbg !2711
  %243 = add nsw <8 x i32> %239, %187, !dbg !2711
  %244 = add nsw <8 x i32> %240, %188, !dbg !2711
  %245 = add nsw <8 x i32> %241, %189, !dbg !2711
  %246 = add nsw <8 x i32> %242, %190, !dbg !2711
  %247 = add nsw <8 x i32> %243, %211, !dbg !2711
  %248 = add nsw <8 x i32> %244, %212, !dbg !2711
  %249 = add nsw <8 x i32> %245, %213, !dbg !2711
  %250 = add nsw <8 x i32> %246, %214, !dbg !2711
  %251 = add nsw <8 x i32> %247, %235, !dbg !2716
  %252 = add nsw <8 x i32> %248, %236, !dbg !2716
  %253 = add nsw <8 x i32> %249, %237, !dbg !2716
  %254 = add nsw <8 x i32> %250, %238, !dbg !2716
  %255 = ashr <8 x i32> %251, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>, !dbg !2717
  %256 = ashr <8 x i32> %252, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>, !dbg !2717
  %257 = ashr <8 x i32> %253, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>, !dbg !2717
  %258 = ashr <8 x i32> %254, <i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10>, !dbg !2717
  %259 = icmp ult <8 x i32> %255, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2718
  %260 = icmp ult <8 x i32> %256, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2718
  %261 = icmp ult <8 x i32> %257, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2718
  %262 = icmp ult <8 x i32> %258, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2718
  %263 = icmp sgt <8 x i32> %255, zeroinitializer, !dbg !2720
  %264 = icmp sgt <8 x i32> %256, zeroinitializer, !dbg !2720
  %265 = icmp sgt <8 x i32> %257, zeroinitializer, !dbg !2720
  %266 = icmp sgt <8 x i32> %258, zeroinitializer, !dbg !2720
  %267 = sext <8 x i1> %263 to <8 x i32>, !dbg !2720
  %268 = sext <8 x i1> %264 to <8 x i32>, !dbg !2720
  %269 = sext <8 x i1> %265 to <8 x i32>, !dbg !2720
  %270 = sext <8 x i1> %266 to <8 x i32>, !dbg !2720
  %271 = select <8 x i1> %259, <8 x i32> %255, <8 x i32> %267, !dbg !2720
  %272 = select <8 x i1> %260, <8 x i32> %256, <8 x i32> %268, !dbg !2720
  %273 = select <8 x i1> %261, <8 x i32> %257, <8 x i32> %269, !dbg !2720
  %274 = select <8 x i1> %262, <8 x i32> %258, <8 x i32> %270, !dbg !2720
  %275 = trunc <8 x i32> %271 to <8 x i8>, !dbg !2720
  %276 = trunc <8 x i32> %272 to <8 x i8>, !dbg !2720
  %277 = trunc <8 x i32> %273 to <8 x i8>, !dbg !2720
  %278 = trunc <8 x i32> %274 to <8 x i8>, !dbg !2720
  %279 = getelementptr inbounds i8, ptr %dstc.addr.0217, i64 %index293, !dbg !2721
  %280 = getelementptr inbounds i8, ptr %279, i64 8, !dbg !2722
  %281 = getelementptr inbounds i8, ptr %279, i64 16, !dbg !2722
  %282 = getelementptr inbounds i8, ptr %279, i64 24, !dbg !2722
  store <8 x i8> %275, ptr %279, align 1, !dbg !2722, !alias.scope !2723, !noalias !2713
  store <8 x i8> %276, ptr %280, align 1, !dbg !2722, !alias.scope !2723, !noalias !2713
  store <8 x i8> %277, ptr %281, align 1, !dbg !2722, !alias.scope !2723, !noalias !2713
  store <8 x i8> %278, ptr %282, align 1, !dbg !2722, !alias.scope !2723, !noalias !2713
  %index.next318 = add nuw i64 %index293, 32, !dbg !2711
  %283 = icmp eq i64 %index.next318, %n.vec290, !dbg !2711
  br i1 %283, label %middle.block286, label %vector.body292, !dbg !2711, !llvm.loop !2725

middle.block286:                                  ; preds = %vector.body292
  br i1 %cmp.n319, label %for.cond90.preheader, label %for.body45.preheader440, !dbg !2710

for.body4:                                        ; preds = %for.body4.preheader441, %for.body4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ %indvars.iv.ph, %for.body4.preheader441 ]
    #dbg_value(i64 %indvars.iv, !2659, !DIExpression(), !2674)
  %284 = sub nsw i64 %indvars.iv, %0, !dbg !2676
  %arrayidx = getelementptr inbounds i8, ptr %src.addr.0216, i64 %284, !dbg !2676
  %285 = load i8, ptr %arrayidx, align 1, !dbg !2676
  %conv = zext i8 %285 to i32, !dbg !2676
  %286 = add nsw i64 %indvars.iv, %1, !dbg !2676
  %arrayidx8 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %286, !dbg !2676
  %287 = load i8, ptr %arrayidx8, align 1, !dbg !2676
  %conv9 = zext i8 %287 to i32, !dbg !2676
  %add10 = add nuw nsw i32 %conv9, %conv, !dbg !2676
  %288 = sub nsw i64 %indvars.iv, %idx.ext, !dbg !2676
  %arrayidx13 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %288, !dbg !2676
  %289 = load i8, ptr %arrayidx13, align 1, !dbg !2676
  %conv14 = zext i8 %289 to i32, !dbg !2676
  %290 = add nsw i64 %indvars.iv, %0, !dbg !2676
  %arrayidx18 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %290, !dbg !2676
  %291 = load i8, ptr %arrayidx18, align 1, !dbg !2676
  %conv19 = zext i8 %291 to i32, !dbg !2676
  %add20 = add nuw nsw i32 %conv19, %conv14, !dbg !2676
  %mul21.neg = mul nsw i32 %add20, -5, !dbg !2676
  %sub22 = add nsw i32 %add10, %mul21.neg, !dbg !2676
  %arrayidx24 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %indvars.iv, !dbg !2676
  %292 = load i8, ptr %arrayidx24, align 1, !dbg !2676
  %conv25 = zext i8 %292 to i32, !dbg !2676
  %293 = add nsw i64 %indvars.iv, %idx.ext, !dbg !2676
  %arrayidx28 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %293, !dbg !2676
  %294 = load i8, ptr %arrayidx28, align 1, !dbg !2676
  %conv29 = zext i8 %294 to i32, !dbg !2676
  %add30 = add nuw nsw i32 %conv29, %conv25, !dbg !2676
  %mul31 = mul nuw nsw i32 %add30, 20, !dbg !2676
  %add32 = add nsw i32 %sub22, %mul31, !dbg !2676
    #dbg_value(i32 %add32, !2663, !DIExpression(), !2727)
  %add33 = add nsw i32 %add32, 16, !dbg !2690
  %shr = ashr i32 %add33, 5, !dbg !2691
    #dbg_value(i32 %shr, !1702, !DIExpression(), !2728)
  %tobool.not.i = icmp ult i32 %shr, 256, !dbg !2692
  %295 = icmp sgt i32 %shr, 0, !dbg !2694
  %shr.i = sext i1 %295 to i32, !dbg !2694
  %cond.i = select i1 %tobool.not.i, i32 %shr, i32 %shr.i, !dbg !2694
  %conv.i = trunc i32 %cond.i to i8, !dbg !2694
  %arrayidx35 = getelementptr inbounds i8, ptr %dstv.addr.0218, i64 %indvars.iv, !dbg !2695
  store i8 %conv.i, ptr %arrayidx35, align 1, !dbg !2696
  %conv36 = trunc nsw i32 %add32 to i16, !dbg !2701
  %gep = getelementptr i16, ptr %invariant.gep, i64 %indvars.iv, !dbg !2702
  store i16 %conv36, ptr %gep, align 2, !dbg !2703
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !2729
    #dbg_value(i64 %indvars.iv.next, !2659, !DIExpression(), !2674)
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !2730
  %exitcond.not = icmp eq i32 %3, %lftr.wideiv, !dbg !2730
  br i1 %exitcond.not, label %for.cond41.preheader, label %for.body4, !dbg !2675, !llvm.loop !2731

for.cond90.preheader:                             ; preds = %for.body45, %middle.block286
    #dbg_value(i32 0, !2668, !DIExpression(), !2732)
  br i1 %cmp42211, label %iter.check, label %for.cond.cleanup93, !dbg !2733

iter.check:                                       ; preds = %for.cond90.preheader
  %brmerge443 = select i1 %min.iters.check, i1 true, i1 %51, !dbg !2733
  br i1 %brmerge443, label %for.body94.preheader, label %vector.main.loop.iter.check, !dbg !2733

vector.main.loop.iter.check:                      ; preds = %iter.check
  br i1 %min.iters.check244, label %vec.epilog.ph, label %vector.body, !dbg !2733

vector.body:                                      ; preds = %vector.main.loop.iter.check, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.main.loop.iter.check ], !dbg !2734
  %296 = add nsw i64 %index, -2, !dbg !2734
  %297 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %296, !dbg !2734
  %298 = getelementptr inbounds i8, ptr %297, i64 16, !dbg !2734
  %299 = getelementptr inbounds i8, ptr %297, i64 32, !dbg !2734
  %300 = getelementptr inbounds i8, ptr %297, i64 48, !dbg !2734
  %wide.load = load <16 x i8>, ptr %297, align 1, !dbg !2734, !alias.scope !2736
  %wide.load245 = load <16 x i8>, ptr %298, align 1, !dbg !2734, !alias.scope !2736
  %wide.load246 = load <16 x i8>, ptr %299, align 1, !dbg !2734, !alias.scope !2736
  %wide.load247 = load <16 x i8>, ptr %300, align 1, !dbg !2734, !alias.scope !2736
  %301 = zext <16 x i8> %wide.load to <16 x i32>, !dbg !2734
  %302 = zext <16 x i8> %wide.load245 to <16 x i32>, !dbg !2734
  %303 = zext <16 x i8> %wide.load246 to <16 x i32>, !dbg !2734
  %304 = zext <16 x i8> %wide.load247 to <16 x i32>, !dbg !2734
  %305 = or disjoint i64 %index, 3, !dbg !2734
  %306 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %305, !dbg !2734
  %307 = getelementptr inbounds i8, ptr %306, i64 16, !dbg !2734
  %308 = getelementptr inbounds i8, ptr %306, i64 32, !dbg !2734
  %309 = getelementptr inbounds i8, ptr %306, i64 48, !dbg !2734
  %wide.load248 = load <16 x i8>, ptr %306, align 1, !dbg !2734, !alias.scope !2736
  %wide.load249 = load <16 x i8>, ptr %307, align 1, !dbg !2734, !alias.scope !2736
  %wide.load250 = load <16 x i8>, ptr %308, align 1, !dbg !2734, !alias.scope !2736
  %wide.load251 = load <16 x i8>, ptr %309, align 1, !dbg !2734, !alias.scope !2736
  %310 = zext <16 x i8> %wide.load248 to <16 x i32>, !dbg !2734
  %311 = zext <16 x i8> %wide.load249 to <16 x i32>, !dbg !2734
  %312 = zext <16 x i8> %wide.load250 to <16 x i32>, !dbg !2734
  %313 = zext <16 x i8> %wide.load251 to <16 x i32>, !dbg !2734
  %314 = add nsw i64 %index, -1, !dbg !2734
  %315 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %314, !dbg !2734
  %316 = getelementptr inbounds i8, ptr %315, i64 16, !dbg !2734
  %317 = getelementptr inbounds i8, ptr %315, i64 32, !dbg !2734
  %318 = getelementptr inbounds i8, ptr %315, i64 48, !dbg !2734
  %wide.load252 = load <16 x i8>, ptr %315, align 1, !dbg !2734, !alias.scope !2736
  %wide.load253 = load <16 x i8>, ptr %316, align 1, !dbg !2734, !alias.scope !2736
  %wide.load254 = load <16 x i8>, ptr %317, align 1, !dbg !2734, !alias.scope !2736
  %wide.load255 = load <16 x i8>, ptr %318, align 1, !dbg !2734, !alias.scope !2736
  %319 = zext <16 x i8> %wide.load252 to <16 x i32>, !dbg !2734
  %320 = zext <16 x i8> %wide.load253 to <16 x i32>, !dbg !2734
  %321 = zext <16 x i8> %wide.load254 to <16 x i32>, !dbg !2734
  %322 = zext <16 x i8> %wide.load255 to <16 x i32>, !dbg !2734
  %323 = or disjoint i64 %index, 2, !dbg !2734
  %324 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %323, !dbg !2734
  %325 = getelementptr inbounds i8, ptr %324, i64 16, !dbg !2734
  %326 = getelementptr inbounds i8, ptr %324, i64 32, !dbg !2734
  %327 = getelementptr inbounds i8, ptr %324, i64 48, !dbg !2734
  %wide.load256 = load <16 x i8>, ptr %324, align 1, !dbg !2734, !alias.scope !2736
  %wide.load257 = load <16 x i8>, ptr %325, align 1, !dbg !2734, !alias.scope !2736
  %wide.load258 = load <16 x i8>, ptr %326, align 1, !dbg !2734, !alias.scope !2736
  %wide.load259 = load <16 x i8>, ptr %327, align 1, !dbg !2734, !alias.scope !2736
  %328 = zext <16 x i8> %wide.load256 to <16 x i32>, !dbg !2734
  %329 = zext <16 x i8> %wide.load257 to <16 x i32>, !dbg !2734
  %330 = zext <16 x i8> %wide.load258 to <16 x i32>, !dbg !2734
  %331 = zext <16 x i8> %wide.load259 to <16 x i32>, !dbg !2734
  %332 = add nuw nsw <16 x i32> %328, %319, !dbg !2734
  %333 = add nuw nsw <16 x i32> %329, %320, !dbg !2734
  %334 = add nuw nsw <16 x i32> %330, %321, !dbg !2734
  %335 = add nuw nsw <16 x i32> %331, %322, !dbg !2734
  %336 = mul nsw <16 x i32> %332, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2734
  %337 = mul nsw <16 x i32> %333, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2734
  %338 = mul nsw <16 x i32> %334, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2734
  %339 = mul nsw <16 x i32> %335, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2734
  %340 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %index, !dbg !2734
  %341 = getelementptr inbounds i8, ptr %340, i64 16, !dbg !2734
  %342 = getelementptr inbounds i8, ptr %340, i64 32, !dbg !2734
  %343 = getelementptr inbounds i8, ptr %340, i64 48, !dbg !2734
  %wide.load260 = load <16 x i8>, ptr %340, align 1, !dbg !2734, !alias.scope !2736
  %wide.load261 = load <16 x i8>, ptr %341, align 1, !dbg !2734, !alias.scope !2736
  %wide.load262 = load <16 x i8>, ptr %342, align 1, !dbg !2734, !alias.scope !2736
  %wide.load263 = load <16 x i8>, ptr %343, align 1, !dbg !2734, !alias.scope !2736
  %344 = zext <16 x i8> %wide.load260 to <16 x i32>, !dbg !2734
  %345 = zext <16 x i8> %wide.load261 to <16 x i32>, !dbg !2734
  %346 = zext <16 x i8> %wide.load262 to <16 x i32>, !dbg !2734
  %347 = zext <16 x i8> %wide.load263 to <16 x i32>, !dbg !2734
  %348 = or disjoint i64 %index, 1, !dbg !2734
  %349 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %348, !dbg !2734
  %350 = getelementptr inbounds i8, ptr %349, i64 16, !dbg !2734
  %351 = getelementptr inbounds i8, ptr %349, i64 32, !dbg !2734
  %352 = getelementptr inbounds i8, ptr %349, i64 48, !dbg !2734
  %wide.load264 = load <16 x i8>, ptr %349, align 1, !dbg !2734, !alias.scope !2736
  %wide.load265 = load <16 x i8>, ptr %350, align 1, !dbg !2734, !alias.scope !2736
  %wide.load266 = load <16 x i8>, ptr %351, align 1, !dbg !2734, !alias.scope !2736
  %wide.load267 = load <16 x i8>, ptr %352, align 1, !dbg !2734, !alias.scope !2736
  %353 = zext <16 x i8> %wide.load264 to <16 x i32>, !dbg !2734
  %354 = zext <16 x i8> %wide.load265 to <16 x i32>, !dbg !2734
  %355 = zext <16 x i8> %wide.load266 to <16 x i32>, !dbg !2734
  %356 = zext <16 x i8> %wide.load267 to <16 x i32>, !dbg !2734
  %357 = add nuw nsw <16 x i32> %353, %344, !dbg !2734
  %358 = add nuw nsw <16 x i32> %354, %345, !dbg !2734
  %359 = add nuw nsw <16 x i32> %355, %346, !dbg !2734
  %360 = add nuw nsw <16 x i32> %356, %347, !dbg !2734
  %361 = mul nuw nsw <16 x i32> %357, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2734
  %362 = mul nuw nsw <16 x i32> %358, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2734
  %363 = mul nuw nsw <16 x i32> %359, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2734
  %364 = mul nuw nsw <16 x i32> %360, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2734
  %365 = add nuw nsw <16 x i32> %301, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2734
  %366 = add nuw nsw <16 x i32> %302, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2734
  %367 = add nuw nsw <16 x i32> %303, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2734
  %368 = add nuw nsw <16 x i32> %304, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2734
  %369 = add nuw nsw <16 x i32> %365, %310, !dbg !2734
  %370 = add nuw nsw <16 x i32> %366, %311, !dbg !2734
  %371 = add nuw nsw <16 x i32> %367, %312, !dbg !2734
  %372 = add nuw nsw <16 x i32> %368, %313, !dbg !2734
  %373 = add nsw <16 x i32> %369, %336, !dbg !2734
  %374 = add nsw <16 x i32> %370, %337, !dbg !2734
  %375 = add nsw <16 x i32> %371, %338, !dbg !2734
  %376 = add nsw <16 x i32> %372, %339, !dbg !2734
  %377 = add nsw <16 x i32> %373, %361, !dbg !2739
  %378 = add nsw <16 x i32> %374, %362, !dbg !2739
  %379 = add nsw <16 x i32> %375, %363, !dbg !2739
  %380 = add nsw <16 x i32> %376, %364, !dbg !2739
  %381 = ashr <16 x i32> %377, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2740
  %382 = ashr <16 x i32> %378, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2740
  %383 = ashr <16 x i32> %379, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2740
  %384 = ashr <16 x i32> %380, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2740
  %385 = icmp ult <16 x i32> %381, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2741
  %386 = icmp ult <16 x i32> %382, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2741
  %387 = icmp ult <16 x i32> %383, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2741
  %388 = icmp ult <16 x i32> %384, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2741
  %389 = icmp sgt <16 x i32> %381, zeroinitializer, !dbg !2743
  %390 = icmp sgt <16 x i32> %382, zeroinitializer, !dbg !2743
  %391 = icmp sgt <16 x i32> %383, zeroinitializer, !dbg !2743
  %392 = icmp sgt <16 x i32> %384, zeroinitializer, !dbg !2743
  %393 = sext <16 x i1> %389 to <16 x i32>, !dbg !2743
  %394 = sext <16 x i1> %390 to <16 x i32>, !dbg !2743
  %395 = sext <16 x i1> %391 to <16 x i32>, !dbg !2743
  %396 = sext <16 x i1> %392 to <16 x i32>, !dbg !2743
  %397 = select <16 x i1> %385, <16 x i32> %381, <16 x i32> %393, !dbg !2743
  %398 = select <16 x i1> %386, <16 x i32> %382, <16 x i32> %394, !dbg !2743
  %399 = select <16 x i1> %387, <16 x i32> %383, <16 x i32> %395, !dbg !2743
  %400 = select <16 x i1> %388, <16 x i32> %384, <16 x i32> %396, !dbg !2743
  %401 = trunc <16 x i32> %397 to <16 x i8>, !dbg !2743
  %402 = trunc <16 x i32> %398 to <16 x i8>, !dbg !2743
  %403 = trunc <16 x i32> %399 to <16 x i8>, !dbg !2743
  %404 = trunc <16 x i32> %400 to <16 x i8>, !dbg !2743
  %405 = getelementptr inbounds i8, ptr %dsth.addr.0220, i64 %index, !dbg !2744
  %406 = getelementptr inbounds i8, ptr %405, i64 16, !dbg !2745
  %407 = getelementptr inbounds i8, ptr %405, i64 32, !dbg !2745
  %408 = getelementptr inbounds i8, ptr %405, i64 48, !dbg !2745
  store <16 x i8> %401, ptr %405, align 1, !dbg !2745, !alias.scope !2746, !noalias !2736
  store <16 x i8> %402, ptr %406, align 1, !dbg !2745, !alias.scope !2746, !noalias !2736
  store <16 x i8> %403, ptr %407, align 1, !dbg !2745, !alias.scope !2746, !noalias !2736
  store <16 x i8> %404, ptr %408, align 1, !dbg !2745, !alias.scope !2746, !noalias !2736
  %index.next = add nuw i64 %index, 64, !dbg !2734
  %409 = icmp eq i64 %index.next, %n.vec, !dbg !2734
  br i1 %409, label %middle.block, label %vector.body, !dbg !2734, !llvm.loop !2748

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond.cleanup93, label %vec.epilog.iter.check, !dbg !2733

vec.epilog.iter.check:                            ; preds = %middle.block
  br i1 %min.epilog.iters.check, label %for.body94.preheader, label %vec.epilog.ph, !dbg !2733

for.body94.preheader:                             ; preds = %iter.check, %vec.epilog.middle.block, %vec.epilog.iter.check
  %indvars.iv231.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec269, %vec.epilog.middle.block ]
  br label %for.body94, !dbg !2733

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  br label %vec.epilog.vector.body, !dbg !2733

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index270 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next277, %vec.epilog.vector.body ], !dbg !2734
  %410 = add nsw i64 %index270, -2, !dbg !2734
  %411 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %410, !dbg !2734
  %wide.load271 = load <8 x i8>, ptr %411, align 1, !dbg !2734, !alias.scope !2750
  %412 = zext <8 x i8> %wide.load271 to <8 x i32>, !dbg !2734
  %413 = or disjoint i64 %index270, 3, !dbg !2734
  %414 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %413, !dbg !2734
  %wide.load272 = load <8 x i8>, ptr %414, align 1, !dbg !2734, !alias.scope !2750
  %415 = zext <8 x i8> %wide.load272 to <8 x i32>, !dbg !2734
  %416 = add nsw i64 %index270, -1, !dbg !2734
  %417 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %416, !dbg !2734
  %wide.load273 = load <8 x i8>, ptr %417, align 1, !dbg !2734, !alias.scope !2750
  %418 = zext <8 x i8> %wide.load273 to <8 x i32>, !dbg !2734
  %419 = or disjoint i64 %index270, 2, !dbg !2734
  %420 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %419, !dbg !2734
  %wide.load274 = load <8 x i8>, ptr %420, align 1, !dbg !2734, !alias.scope !2750
  %421 = zext <8 x i8> %wide.load274 to <8 x i32>, !dbg !2734
  %422 = add nuw nsw <8 x i32> %421, %418, !dbg !2734
  %423 = mul nsw <8 x i32> %422, <i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5, i32 -5>, !dbg !2734
  %424 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %index270, !dbg !2734
  %wide.load275 = load <8 x i8>, ptr %424, align 1, !dbg !2734, !alias.scope !2750
  %425 = zext <8 x i8> %wide.load275 to <8 x i32>, !dbg !2734
  %426 = or disjoint i64 %index270, 1, !dbg !2734
  %427 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %426, !dbg !2734
  %wide.load276 = load <8 x i8>, ptr %427, align 1, !dbg !2734, !alias.scope !2750
  %428 = zext <8 x i8> %wide.load276 to <8 x i32>, !dbg !2734
  %429 = add nuw nsw <8 x i32> %428, %425, !dbg !2734
  %430 = mul nuw nsw <8 x i32> %429, <i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20, i32 20>, !dbg !2734
  %431 = add nuw nsw <8 x i32> %412, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>, !dbg !2734
  %432 = add nuw nsw <8 x i32> %431, %415, !dbg !2734
  %433 = add nsw <8 x i32> %432, %423, !dbg !2734
  %434 = add nsw <8 x i32> %433, %430, !dbg !2739
  %435 = ashr <8 x i32> %434, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>, !dbg !2740
  %436 = icmp ult <8 x i32> %435, <i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256, i32 256>, !dbg !2741
  %437 = icmp sgt <8 x i32> %435, zeroinitializer, !dbg !2743
  %438 = sext <8 x i1> %437 to <8 x i32>, !dbg !2743
  %439 = select <8 x i1> %436, <8 x i32> %435, <8 x i32> %438, !dbg !2743
  %440 = trunc <8 x i32> %439 to <8 x i8>, !dbg !2743
  %441 = getelementptr inbounds i8, ptr %dsth.addr.0220, i64 %index270, !dbg !2744
  store <8 x i8> %440, ptr %441, align 1, !dbg !2745, !alias.scope !2753, !noalias !2750
  %index.next277 = add nuw i64 %index270, 8, !dbg !2734
  %442 = icmp eq i64 %index.next277, %n.vec269, !dbg !2734
  br i1 %442, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !dbg !2734, !llvm.loop !2755

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  br i1 %cmp.n278, label %for.cond.cleanup93, label %for.body94.preheader, !dbg !2733

for.body45:                                       ; preds = %for.body45.preheader440, %for.body45
  %indvars.iv227 = phi i64 [ %indvars.iv.next228, %for.body45 ], [ %indvars.iv227.ph, %for.body45.preheader440 ]
    #dbg_value(i64 %indvars.iv227, !2666, !DIExpression(), !2709)
  %443 = getelementptr i16, ptr %invariant.gep, i64 %indvars.iv227, !dbg !2711
  %arrayidx48 = getelementptr i8, ptr %443, i64 -4, !dbg !2711
  %444 = load i16, ptr %arrayidx48, align 2, !dbg !2711
  %conv49 = sext i16 %444 to i32, !dbg !2711
  %arrayidx53 = getelementptr inbounds i8, ptr %443, i64 6, !dbg !2711
  %445 = load i16, ptr %arrayidx53, align 2, !dbg !2711
  %conv54 = sext i16 %445 to i32, !dbg !2711
  %arrayidx59 = getelementptr i8, ptr %443, i64 -2, !dbg !2711
  %446 = load i16, ptr %arrayidx59, align 2, !dbg !2711
  %conv60 = sext i16 %446 to i32, !dbg !2711
  %arrayidx64 = getelementptr inbounds i8, ptr %443, i64 4, !dbg !2711
  %447 = load i16, ptr %arrayidx64, align 2, !dbg !2711
  %conv65 = sext i16 %447 to i32, !dbg !2711
  %add66 = add nsw i32 %conv65, %conv60, !dbg !2711
  %mul67.neg = mul nsw i32 %add66, -5, !dbg !2711
  %448 = load i16, ptr %443, align 2, !dbg !2711
  %conv72 = sext i16 %448 to i32, !dbg !2711
  %indvars.iv.next228 = add nuw nsw i64 %indvars.iv227, 1, !dbg !2711
  %arrayidx76 = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv.next228, !dbg !2711
  %449 = load i16, ptr %arrayidx76, align 2, !dbg !2711
  %conv77 = sext i16 %449 to i32, !dbg !2711
  %add78 = add nsw i32 %conv77, %conv72, !dbg !2711
  %mul79 = mul nsw i32 %add78, 20, !dbg !2711
  %add55 = add nsw i32 %conv49, 512, !dbg !2711
  %sub68 = add nsw i32 %add55, %conv54, !dbg !2711
  %add80 = add nsw i32 %sub68, %mul67.neg, !dbg !2711
  %add81 = add nsw i32 %add80, %mul79, !dbg !2716
  %shr82 = ashr i32 %add81, 10, !dbg !2717
    #dbg_value(i32 %shr82, !1702, !DIExpression(), !2756)
  %tobool.not.i201 = icmp ult i32 %shr82, 256, !dbg !2718
  %450 = icmp sgt i32 %shr82, 0, !dbg !2720
  %shr.i202 = sext i1 %450 to i32, !dbg !2720
  %cond.i203 = select i1 %tobool.not.i201, i32 %shr82, i32 %shr.i202, !dbg !2720
  %conv.i204 = trunc i32 %cond.i203 to i8, !dbg !2720
  %arrayidx85 = getelementptr inbounds i8, ptr %dstc.addr.0217, i64 %indvars.iv227, !dbg !2721
  store i8 %conv.i204, ptr %arrayidx85, align 1, !dbg !2722
    #dbg_value(i64 %indvars.iv.next228, !2666, !DIExpression(), !2709)
  %exitcond230.not = icmp eq i64 %indvars.iv.next228, %wide.trip.count, !dbg !2757
  br i1 %exitcond230.not, label %for.cond90.preheader, label %for.body45, !dbg !2710, !llvm.loop !2758

for.cond.cleanup93:                               ; preds = %for.body94, %middle.block, %vec.epilog.middle.block, %for.cond1.preheader, %for.cond41.preheader, %for.cond90.preheader
  %add.ptr133 = getelementptr inbounds i8, ptr %dsth.addr.0220, i64 %idx.ext, !dbg !2759
    #dbg_value(ptr %add.ptr133, !2649, !DIExpression(), !2670)
  %add.ptr135 = getelementptr inbounds i8, ptr %dstv.addr.0218, i64 %idx.ext, !dbg !2760
    #dbg_value(ptr %add.ptr135, !2650, !DIExpression(), !2670)
  %add.ptr137 = getelementptr inbounds i8, ptr %dstc.addr.0217, i64 %idx.ext, !dbg !2761
    #dbg_value(ptr %add.ptr137, !2651, !DIExpression(), !2670)
  %add.ptr139 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %idx.ext, !dbg !2762
    #dbg_value(ptr %add.ptr139, !2652, !DIExpression(), !2670)
  %inc141 = add nuw nsw i32 %y.0219, 1, !dbg !2763
    #dbg_value(i32 %inc141, !2657, !DIExpression(), !2671)
  %exitcond240.not = icmp eq i32 %inc141, %height, !dbg !2672
  br i1 %exitcond240.not, label %for.cond.cleanup, label %for.cond1.preheader, !dbg !2673, !llvm.loop !2764

for.body94:                                       ; preds = %for.body94.preheader, %for.body94
  %indvars.iv231 = phi i64 [ %indvars.iv.next232, %for.body94 ], [ %indvars.iv231.ph, %for.body94.preheader ]
    #dbg_value(i64 %indvars.iv231, !2668, !DIExpression(), !2732)
  %451 = add nsw i64 %indvars.iv231, -2, !dbg !2734
  %arrayidx97 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %451, !dbg !2734
  %452 = load i8, ptr %arrayidx97, align 1, !dbg !2734
  %conv98 = zext i8 %452 to i32, !dbg !2734
  %453 = add nuw nsw i64 %indvars.iv231, 3, !dbg !2734
  %arrayidx101 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %453, !dbg !2734
  %454 = load i8, ptr %arrayidx101, align 1, !dbg !2734
  %conv102 = zext i8 %454 to i32, !dbg !2734
  %455 = add nsw i64 %indvars.iv231, -1, !dbg !2734
  %arrayidx106 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %455, !dbg !2734
  %456 = load i8, ptr %arrayidx106, align 1, !dbg !2734
  %conv107 = zext i8 %456 to i32, !dbg !2734
  %457 = add nuw nsw i64 %indvars.iv231, 2, !dbg !2734
  %arrayidx110 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %457, !dbg !2734
  %458 = load i8, ptr %arrayidx110, align 1, !dbg !2734
  %conv111 = zext i8 %458 to i32, !dbg !2734
  %add112 = add nuw nsw i32 %conv111, %conv107, !dbg !2734
  %mul113.neg = mul nsw i32 %add112, -5, !dbg !2734
  %arrayidx116 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %indvars.iv231, !dbg !2734
  %459 = load i8, ptr %arrayidx116, align 1, !dbg !2734
  %conv117 = zext i8 %459 to i32, !dbg !2734
  %indvars.iv.next232 = add nuw nsw i64 %indvars.iv231, 1, !dbg !2734
  %arrayidx120 = getelementptr inbounds i8, ptr %src.addr.0216, i64 %indvars.iv.next232, !dbg !2734
  %460 = load i8, ptr %arrayidx120, align 1, !dbg !2734
  %conv121 = zext i8 %460 to i32, !dbg !2734
  %add122 = add nuw nsw i32 %conv121, %conv117, !dbg !2734
  %mul123 = mul nuw nsw i32 %add122, 20, !dbg !2734
  %add103 = add nuw nsw i32 %conv98, 16, !dbg !2734
  %sub114 = add nuw nsw i32 %add103, %conv102, !dbg !2734
  %add124 = add nsw i32 %sub114, %mul113.neg, !dbg !2734
  %add125 = add nsw i32 %add124, %mul123, !dbg !2739
  %shr126 = ashr i32 %add125, 5, !dbg !2740
    #dbg_value(i32 %shr126, !1702, !DIExpression(), !2766)
  %tobool.not.i205 = icmp ult i32 %shr126, 256, !dbg !2741
  %461 = icmp sgt i32 %shr126, 0, !dbg !2743
  %shr.i206 = sext i1 %461 to i32, !dbg !2743
  %cond.i207 = select i1 %tobool.not.i205, i32 %shr126, i32 %shr.i206, !dbg !2743
  %conv.i208 = trunc i32 %cond.i207 to i8, !dbg !2743
  %arrayidx129 = getelementptr inbounds i8, ptr %dsth.addr.0220, i64 %indvars.iv231, !dbg !2744
  store i8 %conv.i208, ptr %arrayidx129, align 1, !dbg !2745
    #dbg_value(i64 %indvars.iv.next232, !2668, !DIExpression(), !2732)
  %exitcond239.not = icmp eq i64 %indvars.iv.next232, %wide.trip.count238, !dbg !2767
  br i1 %exitcond239.not, label %for.cond.cleanup93, label %for.body94, !dbg !2733, !llvm.loop !2768
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal void @prefetch_fenc_null(ptr nocapture readnone %pix_y, i32 %stride_y, ptr nocapture readnone %pix_uv, i32 %stride_uv, i32 %mb_x) #8 !dbg !2769 {
entry:
    #dbg_value(ptr poison, !2771, !DIExpression(), !2776)
    #dbg_value(i32 poison, !2772, !DIExpression(), !2776)
    #dbg_value(ptr poison, !2773, !DIExpression(), !2776)
    #dbg_value(i32 poison, !2774, !DIExpression(), !2776)
    #dbg_value(i32 poison, !2775, !DIExpression(), !2776)
  ret void, !dbg !2777
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal void @prefetch_ref_null(ptr nocapture readnone %pix, i32 %stride, i32 %parity) #8 !dbg !2778 {
entry:
    #dbg_value(ptr poison, !2780, !DIExpression(), !2783)
    #dbg_value(i32 poison, !2781, !DIExpression(), !2783)
    #dbg_value(i32 poison, !2782, !DIExpression(), !2783)
  ret void, !dbg !2784
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @memcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i64 noundef) #9

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define internal void @memzero_aligned(ptr nocapture noundef writeonly %dst, i32 noundef %n) #5 !dbg !2785 {
entry:
    #dbg_value(ptr %dst, !2787, !DIExpression(), !2789)
    #dbg_value(i32 %n, !2788, !DIExpression(), !2789)
  %conv = sext i32 %n to i64, !dbg !2790
  tail call void @llvm.memset.p0.i64(ptr align 1 %dst, i8 0, i64 %conv, i1 false), !dbg !2791
  ret void, !dbg !2792
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @frame_init_lowres_core(ptr nocapture noundef readonly %src0, ptr nocapture noundef writeonly %dst0, ptr nocapture noundef writeonly %dsth, ptr nocapture noundef writeonly %dstv, ptr nocapture noundef writeonly %dstc, i32 noundef %src_stride, i32 noundef %dst_stride, i32 noundef %width, i32 noundef %height) #0 !dbg !2793 {
entry:
    #dbg_value(ptr %src0, !2795, !DIExpression(), !2812)
    #dbg_value(ptr %dst0, !2796, !DIExpression(), !2812)
    #dbg_value(ptr %dsth, !2797, !DIExpression(), !2812)
    #dbg_value(ptr %dstv, !2798, !DIExpression(), !2812)
    #dbg_value(ptr %dstc, !2799, !DIExpression(), !2812)
    #dbg_value(i32 %src_stride, !2800, !DIExpression(), !2812)
    #dbg_value(i32 %dst_stride, !2801, !DIExpression(), !2812)
    #dbg_value(i32 %width, !2802, !DIExpression(), !2812)
    #dbg_value(i32 %height, !2803, !DIExpression(), !2812)
    #dbg_value(i32 0, !2804, !DIExpression(), !2813)
  %cmp188 = icmp sgt i32 %height, 0, !dbg !2814
  br i1 %cmp188, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !2815

for.body.lr.ph:                                   ; preds = %entry
  %idx.ext = sext i32 %src_stride to i64
  %cmp4186 = icmp sgt i32 %width, 0
  %mul125 = shl i32 %src_stride, 1
  %idx.ext126 = sext i32 %mul125 to i64
  %idx.ext128 = sext i32 %dst_stride to i64
  br i1 %cmp4186, label %for.body.us.preheader, label %for.cond.cleanup

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %wide.trip.count = zext nneg i32 %width to i64
  %0 = add nsw i32 %height, -1, !dbg !2815
  %1 = zext i32 %0 to i64, !dbg !2815
  %2 = mul nsw i64 %idx.ext128, %1, !dbg !2815
  %3 = add i64 %2, %wide.trip.count, !dbg !2815
  %scevgep = getelementptr i8, ptr %dst0, i64 %3, !dbg !2815
  %scevgep201 = getelementptr i8, ptr %dsth, i64 %3, !dbg !2815
  %scevgep202 = getelementptr i8, ptr %dstv, i64 %3, !dbg !2815
  %scevgep203 = getelementptr i8, ptr %dstc, i64 %3, !dbg !2815
  %4 = shl nsw i64 %idx.ext, 1, !dbg !2815
  %scevgep204 = getelementptr i8, ptr %src0, i64 %4, !dbg !2815
  %5 = mul nsw i64 %idx.ext126, %1, !dbg !2815
  %6 = add i64 %5, %4, !dbg !2815
  %7 = shl nuw nsw i64 %wide.trip.count, 1, !dbg !2815
  %8 = add i64 %6, %7, !dbg !2815
  %9 = or disjoint i64 %8, 1, !dbg !2815
  %scevgep205 = getelementptr i8, ptr %src0, i64 %9, !dbg !2815
  %scevgep206 = getelementptr i8, ptr %src0, i64 %idx.ext, !dbg !2815
  %10 = add i64 %5, %7, !dbg !2815
  %11 = getelementptr i8, ptr %src0, i64 %10, !dbg !2815
  %12 = getelementptr i8, ptr %11, i64 %idx.ext, !dbg !2815
  %scevgep207 = getelementptr i8, ptr %12, i64 1, !dbg !2815
  %13 = or disjoint i64 %10, 1, !dbg !2815
  %scevgep208 = getelementptr i8, ptr %src0, i64 %13, !dbg !2815
  %min.iters.check = icmp ult i32 %width, 4
  %bound0 = icmp ugt ptr %scevgep201, %dst0
  %bound1 = icmp ugt ptr %scevgep, %dsth
  %found.conflict = and i1 %bound0, %bound1
  %bound0210 = icmp ugt ptr %scevgep202, %dst0
  %bound1211 = icmp ugt ptr %scevgep, %dstv
  %found.conflict212 = and i1 %bound0210, %bound1211
  %stride.check213 = icmp slt i32 %dst_stride, 0
  %bound0215 = icmp ugt ptr %scevgep203, %dst0
  %bound1216 = icmp ugt ptr %scevgep, %dstc
  %found.conflict217 = and i1 %bound0215, %bound1216
  %bound0221 = icmp ugt ptr %scevgep205, %dst0
  %bound1222 = icmp ult ptr %scevgep204, %scevgep
  %found.conflict223 = and i1 %bound0221, %bound1222
  %bound0227 = icmp ugt ptr %scevgep207, %dst0
  %bound1228 = icmp ult ptr %scevgep206, %scevgep
  %found.conflict229 = and i1 %bound0227, %bound1228
  %bound0233 = icmp ugt ptr %scevgep208, %dst0
  %bound1234 = icmp ugt ptr %scevgep, %src0
  %found.conflict235 = and i1 %bound0233, %bound1234
  %bound0239 = icmp ugt ptr %scevgep202, %dsth
  %bound1240 = icmp ugt ptr %scevgep201, %dstv
  %found.conflict241 = and i1 %bound0239, %bound1240
  %bound0245 = icmp ugt ptr %scevgep203, %dsth
  %bound1246 = icmp ugt ptr %scevgep201, %dstc
  %found.conflict247 = and i1 %bound0245, %bound1246
  %bound0251 = icmp ugt ptr %scevgep205, %dsth
  %bound1252 = icmp ult ptr %scevgep204, %scevgep201
  %found.conflict253 = and i1 %bound0251, %bound1252
  %bound0257 = icmp ugt ptr %scevgep207, %dsth
  %bound1258 = icmp ult ptr %scevgep206, %scevgep201
  %found.conflict259 = and i1 %bound0257, %bound1258
  %bound0263 = icmp ugt ptr %scevgep208, %dsth
  %bound1264 = icmp ugt ptr %scevgep201, %src0
  %found.conflict265 = and i1 %bound0263, %bound1264
  %bound0269 = icmp ugt ptr %scevgep203, %dstv
  %bound1270 = icmp ugt ptr %scevgep202, %dstc
  %found.conflict271 = and i1 %bound0269, %bound1270
  %bound0275 = icmp ugt ptr %scevgep205, %dstv
  %bound1276 = icmp ult ptr %scevgep204, %scevgep202
  %found.conflict277 = and i1 %bound0275, %bound1276
  %bound0281 = icmp ugt ptr %scevgep207, %dstv
  %bound1282 = icmp ult ptr %scevgep206, %scevgep202
  %found.conflict283 = and i1 %bound0281, %bound1282
  %bound0287 = icmp ugt ptr %scevgep208, %dstv
  %bound1288 = icmp ugt ptr %scevgep202, %src0
  %found.conflict289 = and i1 %bound0287, %bound1288
  %bound0293 = icmp ugt ptr %scevgep205, %dstc
  %bound1294 = icmp ult ptr %scevgep204, %scevgep203
  %found.conflict295 = and i1 %bound0293, %bound1294
  %bound0299 = icmp ugt ptr %scevgep207, %dstc
  %bound1300 = icmp ult ptr %scevgep206, %scevgep203
  %found.conflict301 = and i1 %bound0299, %bound1300
  %bound0305 = icmp ugt ptr %scevgep208, %dstc
  %bound1306 = icmp ugt ptr %scevgep203, %src0
  %found.conflict307 = and i1 %bound0305, %bound1306
  %14 = or i32 %mul125, %dst_stride
  %15 = or i32 %mul125, %dst_stride
  %16 = icmp slt i32 %15, 0
  %op.rdx311 = or i1 %16, %found.conflict212
  %op.rdx312 = or i1 %found.conflict, %found.conflict217
  %op.rdx313 = or i1 %found.conflict223, %found.conflict229
  %op.rdx314 = or i1 %found.conflict235, %found.conflict241
  %op.rdx315 = or i1 %found.conflict247, %found.conflict253
  %op.rdx316 = or i1 %found.conflict259, %found.conflict265
  %op.rdx317 = or i1 %found.conflict271, %found.conflict277
  %op.rdx318 = or i1 %found.conflict283, %found.conflict289
  %op.rdx319 = or i1 %found.conflict295, %found.conflict301
  %op.rdx320 = or i1 %found.conflict307, %stride.check213
  %op.rdx323 = or i1 %op.rdx311, %op.rdx312
  %op.rdx324 = or i1 %op.rdx313, %op.rdx314
  %op.rdx325 = or i1 %op.rdx315, %op.rdx316
  %op.rdx326 = or i1 %op.rdx317, %op.rdx318
  %op.rdx327 = or i1 %op.rdx319, %op.rdx320
  %op.rdx329 = or i1 %op.rdx323, %op.rdx324
  %op.rdx330 = or i1 %op.rdx325, %op.rdx326
  %op.rdx332 = or i1 %op.rdx329, %op.rdx330
  %17 = icmp slt i32 %14, 0
  %op.rdx333 = or i1 %op.rdx327, %17
  %op.rdx334 = or i1 %op.rdx332, %op.rdx333
  %n.vec = and i64 %wide.trip.count, 2147483644
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br label %for.body.us, !dbg !2815

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond3.for.cond.cleanup5_crit_edge.us
  %src0.addr.0194.us = phi ptr [ %add.ptr127.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ %src0, %for.body.us.preheader ]
  %dst0.addr.0193.us = phi ptr [ %add.ptr129.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ %dst0, %for.body.us.preheader ]
  %y.0192.us = phi i32 [ %inc137.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ 0, %for.body.us.preheader ]
  %dsth.addr.0191.us = phi ptr [ %add.ptr131.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ %dsth, %for.body.us.preheader ]
  %dstv.addr.0190.us = phi ptr [ %add.ptr133.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ %dstv, %for.body.us.preheader ]
  %dstc.addr.0189.us = phi ptr [ %add.ptr135.us, %for.cond3.for.cond.cleanup5_crit_edge.us ], [ %dstc, %for.body.us.preheader ]
    #dbg_value(ptr %src0.addr.0194.us, !2795, !DIExpression(), !2812)
    #dbg_value(ptr %dst0.addr.0193.us, !2796, !DIExpression(), !2812)
    #dbg_value(i32 %y.0192.us, !2804, !DIExpression(), !2813)
    #dbg_value(ptr %dsth.addr.0191.us, !2797, !DIExpression(), !2812)
    #dbg_value(ptr %dstv.addr.0190.us, !2798, !DIExpression(), !2812)
    #dbg_value(ptr %dstc.addr.0189.us, !2799, !DIExpression(), !2812)
  %add.ptr.us = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %idx.ext, !dbg !2816
    #dbg_value(ptr %add.ptr.us, !2806, !DIExpression(), !2817)
  %add.ptr2.us = getelementptr inbounds i8, ptr %add.ptr.us, i64 %idx.ext, !dbg !2818
    #dbg_value(ptr %add.ptr2.us, !2809, !DIExpression(), !2817)
    #dbg_value(i32 0, !2810, !DIExpression(), !2819)
  %brmerge = select i1 %min.iters.check, i1 true, i1 %op.rdx334, !dbg !2820
  br i1 %brmerge, label %for.body6.us.preheader, label %vector.body, !dbg !2820

vector.body:                                      ; preds = %for.body.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body.us ], !dbg !2821
  %18 = or disjoint i64 %index, 1, !dbg !2820
  %19 = or disjoint i64 %index, 2, !dbg !2820
  %20 = or disjoint i64 %index, 3, !dbg !2820
  %21 = shl nuw nsw i64 %index, 1, !dbg !2823
  %22 = shl nuw nsw i64 %18, 1, !dbg !2823
  %23 = shl nuw nsw i64 %19, 1, !dbg !2823
  %24 = shl nuw nsw i64 %20, 1, !dbg !2823
  %25 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %21, !dbg !2823
  %26 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %22, !dbg !2823
  %27 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %23, !dbg !2823
  %28 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %24, !dbg !2823
  %29 = load i8, ptr %25, align 1, !dbg !2823, !alias.scope !2825
  %30 = load i8, ptr %26, align 1, !dbg !2823, !alias.scope !2825
  %31 = load i8, ptr %27, align 1, !dbg !2823, !alias.scope !2825
  %32 = load i8, ptr %28, align 1, !dbg !2823, !alias.scope !2825
  %33 = zext i8 %29 to i16, !dbg !2823
  %34 = zext i8 %30 to i16, !dbg !2823
  %35 = zext i8 %31 to i16, !dbg !2823
  %36 = zext i8 %32 to i16, !dbg !2823
  %37 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %21, !dbg !2823
  %38 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %22, !dbg !2823
  %39 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %23, !dbg !2823
  %40 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %24, !dbg !2823
  %41 = load i8, ptr %37, align 1, !dbg !2823, !alias.scope !2828
  %42 = load i8, ptr %38, align 1, !dbg !2823, !alias.scope !2828
  %43 = load i8, ptr %39, align 1, !dbg !2823, !alias.scope !2828
  %44 = load i8, ptr %40, align 1, !dbg !2823, !alias.scope !2828
  %45 = zext i8 %41 to i16, !dbg !2823
  %46 = zext i8 %42 to i16, !dbg !2823
  %47 = zext i8 %43 to i16, !dbg !2823
  %48 = zext i8 %44 to i16, !dbg !2823
  %49 = add nuw nsw i16 %33, 1, !dbg !2823
  %50 = add nuw nsw i16 %34, 1, !dbg !2823
  %51 = add nuw nsw i16 %35, 1, !dbg !2823
  %52 = add nuw nsw i16 %36, 1, !dbg !2823
  %53 = add nuw nsw i16 %49, %45, !dbg !2823
  %54 = add nuw nsw i16 %50, %46, !dbg !2823
  %55 = add nuw nsw i16 %51, %47, !dbg !2823
  %56 = add nuw nsw i16 %52, %48, !dbg !2823
  %57 = lshr i16 %53, 1, !dbg !2823
  %58 = lshr i16 %54, 1, !dbg !2823
  %59 = lshr i16 %55, 1, !dbg !2823
  %60 = lshr i16 %56, 1, !dbg !2823
  %61 = or disjoint i64 %21, 1, !dbg !2823
  %62 = or disjoint i64 %22, 1, !dbg !2823
  %63 = or disjoint i64 %23, 1, !dbg !2823
  %64 = or disjoint i64 %24, 1, !dbg !2823
  %65 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %61, !dbg !2823
  %66 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %62, !dbg !2823
  %67 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %63, !dbg !2823
  %68 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %64, !dbg !2823
  %69 = load i8, ptr %65, align 1, !dbg !2823, !alias.scope !2825
  %70 = load i8, ptr %66, align 1, !dbg !2823, !alias.scope !2825
  %71 = load i8, ptr %67, align 1, !dbg !2823, !alias.scope !2825
  %72 = load i8, ptr %68, align 1, !dbg !2823, !alias.scope !2825
  %73 = zext i8 %69 to i16, !dbg !2823
  %74 = zext i8 %70 to i16, !dbg !2823
  %75 = zext i8 %71 to i16, !dbg !2823
  %76 = zext i8 %72 to i16, !dbg !2823
  %77 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %61, !dbg !2823
  %78 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %62, !dbg !2823
  %79 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %63, !dbg !2823
  %80 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %64, !dbg !2823
  %81 = load i8, ptr %77, align 1, !dbg !2823, !alias.scope !2828
  %82 = load i8, ptr %78, align 1, !dbg !2823, !alias.scope !2828
  %83 = load i8, ptr %79, align 1, !dbg !2823, !alias.scope !2828
  %84 = load i8, ptr %80, align 1, !dbg !2823, !alias.scope !2828
  %85 = zext i8 %81 to i16, !dbg !2823
  %86 = zext i8 %82 to i16, !dbg !2823
  %87 = zext i8 %83 to i16, !dbg !2823
  %88 = zext i8 %84 to i16, !dbg !2823
  %89 = add nuw nsw i16 %73, 1, !dbg !2823
  %90 = add nuw nsw i16 %74, 1, !dbg !2823
  %91 = add nuw nsw i16 %75, 1, !dbg !2823
  %92 = add nuw nsw i16 %76, 1, !dbg !2823
  %93 = add nuw nsw i16 %89, %85, !dbg !2823
  %94 = add nuw nsw i16 %90, %86, !dbg !2823
  %95 = add nuw nsw i16 %91, %87, !dbg !2823
  %96 = add nuw nsw i16 %92, %88, !dbg !2823
  %97 = lshr i16 %93, 1, !dbg !2823
  %98 = lshr i16 %94, 1, !dbg !2823
  %99 = lshr i16 %95, 1, !dbg !2823
  %100 = lshr i16 %96, 1, !dbg !2823
  %101 = add nuw nsw i16 %57, 1, !dbg !2823
  %102 = add nuw nsw i16 %58, 1, !dbg !2823
  %103 = add nuw nsw i16 %59, 1, !dbg !2823
  %104 = add nuw nsw i16 %60, 1, !dbg !2823
  %105 = add nuw nsw i16 %101, %97, !dbg !2823
  %106 = add nuw nsw i16 %102, %98, !dbg !2823
  %107 = add nuw nsw i16 %103, %99, !dbg !2823
  %108 = add nuw nsw i16 %104, %100, !dbg !2823
  %109 = lshr i16 %105, 1, !dbg !2823
  %110 = lshr i16 %106, 1, !dbg !2823
  %111 = lshr i16 %107, 1, !dbg !2823
  %112 = lshr i16 %108, 1, !dbg !2823
  %113 = trunc nuw i16 %109 to i8, !dbg !2823
  %114 = trunc nuw i16 %110 to i8, !dbg !2823
  %115 = trunc nuw i16 %111 to i8, !dbg !2823
  %116 = trunc nuw i16 %112 to i8, !dbg !2823
  %117 = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %index, !dbg !2830
  %118 = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %18, !dbg !2830
  %119 = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %19, !dbg !2830
  %120 = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %20, !dbg !2830
  store i8 %113, ptr %117, align 1, !dbg !2831, !alias.scope !2832, !noalias !2834
  store i8 %114, ptr %118, align 1, !dbg !2831, !alias.scope !2832, !noalias !2834
  store i8 %115, ptr %119, align 1, !dbg !2831, !alias.scope !2832, !noalias !2834
  store i8 %116, ptr %120, align 1, !dbg !2831, !alias.scope !2832, !noalias !2834
  %121 = load i8, ptr %65, align 1, !dbg !2839, !alias.scope !2825
  %122 = load i8, ptr %66, align 1, !dbg !2839, !alias.scope !2825
  %123 = load i8, ptr %67, align 1, !dbg !2839, !alias.scope !2825
  %124 = load i8, ptr %68, align 1, !dbg !2839, !alias.scope !2825
  %125 = zext i8 %121 to i16, !dbg !2839
  %126 = zext i8 %122 to i16, !dbg !2839
  %127 = zext i8 %123 to i16, !dbg !2839
  %128 = zext i8 %124 to i16, !dbg !2839
  %129 = load i8, ptr %77, align 1, !dbg !2839, !alias.scope !2828
  %130 = load i8, ptr %78, align 1, !dbg !2839, !alias.scope !2828
  %131 = load i8, ptr %79, align 1, !dbg !2839, !alias.scope !2828
  %132 = load i8, ptr %80, align 1, !dbg !2839, !alias.scope !2828
  %133 = zext i8 %129 to i16, !dbg !2839
  %134 = zext i8 %130 to i16, !dbg !2839
  %135 = zext i8 %131 to i16, !dbg !2839
  %136 = zext i8 %132 to i16, !dbg !2839
  %137 = add nuw nsw i16 %125, 1, !dbg !2839
  %138 = add nuw nsw i16 %126, 1, !dbg !2839
  %139 = add nuw nsw i16 %127, 1, !dbg !2839
  %140 = add nuw nsw i16 %128, 1, !dbg !2839
  %141 = add nuw nsw i16 %137, %133, !dbg !2839
  %142 = add nuw nsw i16 %138, %134, !dbg !2839
  %143 = add nuw nsw i16 %139, %135, !dbg !2839
  %144 = add nuw nsw i16 %140, %136, !dbg !2839
  %145 = lshr i16 %141, 1, !dbg !2839
  %146 = lshr i16 %142, 1, !dbg !2839
  %147 = lshr i16 %143, 1, !dbg !2839
  %148 = lshr i16 %144, 1, !dbg !2839
  %149 = or disjoint i64 %21, 2, !dbg !2839
  %150 = add nuw nsw i64 %22, 2, !dbg !2839
  %151 = or disjoint i64 %23, 2, !dbg !2839
  %152 = add nuw nsw i64 %24, 2, !dbg !2839
  %153 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %149, !dbg !2839
  %154 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %150, !dbg !2839
  %155 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %151, !dbg !2839
  %156 = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %152, !dbg !2839
  %157 = load i8, ptr %153, align 1, !dbg !2839, !alias.scope !2825
  %158 = load i8, ptr %154, align 1, !dbg !2839, !alias.scope !2825
  %159 = load i8, ptr %155, align 1, !dbg !2839, !alias.scope !2825
  %160 = load i8, ptr %156, align 1, !dbg !2839, !alias.scope !2825
  %161 = zext i8 %157 to i16, !dbg !2839
  %162 = zext i8 %158 to i16, !dbg !2839
  %163 = zext i8 %159 to i16, !dbg !2839
  %164 = zext i8 %160 to i16, !dbg !2839
  %165 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %149, !dbg !2839
  %166 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %150, !dbg !2839
  %167 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %151, !dbg !2839
  %168 = getelementptr inbounds i8, ptr %add.ptr.us, i64 %152, !dbg !2839
  %169 = load i8, ptr %165, align 1, !dbg !2839, !alias.scope !2828
  %170 = load i8, ptr %166, align 1, !dbg !2839, !alias.scope !2828
  %171 = load i8, ptr %167, align 1, !dbg !2839, !alias.scope !2828
  %172 = load i8, ptr %168, align 1, !dbg !2839, !alias.scope !2828
  %173 = zext i8 %169 to i16, !dbg !2839
  %174 = zext i8 %170 to i16, !dbg !2839
  %175 = zext i8 %171 to i16, !dbg !2839
  %176 = zext i8 %172 to i16, !dbg !2839
  %177 = add nuw nsw i16 %161, 1, !dbg !2839
  %178 = add nuw nsw i16 %162, 1, !dbg !2839
  %179 = add nuw nsw i16 %163, 1, !dbg !2839
  %180 = add nuw nsw i16 %164, 1, !dbg !2839
  %181 = add nuw nsw i16 %177, %173, !dbg !2839
  %182 = add nuw nsw i16 %178, %174, !dbg !2839
  %183 = add nuw nsw i16 %179, %175, !dbg !2839
  %184 = add nuw nsw i16 %180, %176, !dbg !2839
  %185 = lshr i16 %181, 1, !dbg !2839
  %186 = lshr i16 %182, 1, !dbg !2839
  %187 = lshr i16 %183, 1, !dbg !2839
  %188 = lshr i16 %184, 1, !dbg !2839
  %189 = add nuw nsw i16 %145, 1, !dbg !2839
  %190 = add nuw nsw i16 %146, 1, !dbg !2839
  %191 = add nuw nsw i16 %147, 1, !dbg !2839
  %192 = add nuw nsw i16 %148, 1, !dbg !2839
  %193 = add nuw nsw i16 %189, %185, !dbg !2839
  %194 = add nuw nsw i16 %190, %186, !dbg !2839
  %195 = add nuw nsw i16 %191, %187, !dbg !2839
  %196 = add nuw nsw i16 %192, %188, !dbg !2839
  %197 = lshr i16 %193, 1, !dbg !2839
  %198 = lshr i16 %194, 1, !dbg !2839
  %199 = lshr i16 %195, 1, !dbg !2839
  %200 = lshr i16 %196, 1, !dbg !2839
  %201 = trunc nuw i16 %197 to i8, !dbg !2839
  %202 = trunc nuw i16 %198 to i8, !dbg !2839
  %203 = trunc nuw i16 %199 to i8, !dbg !2839
  %204 = trunc nuw i16 %200 to i8, !dbg !2839
  %205 = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %index, !dbg !2840
  %206 = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %18, !dbg !2840
  %207 = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %19, !dbg !2840
  %208 = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %20, !dbg !2840
  store i8 %201, ptr %205, align 1, !dbg !2841, !alias.scope !2842, !noalias !2843
  store i8 %202, ptr %206, align 1, !dbg !2841, !alias.scope !2842, !noalias !2843
  store i8 %203, ptr %207, align 1, !dbg !2841, !alias.scope !2842, !noalias !2843
  store i8 %204, ptr %208, align 1, !dbg !2841, !alias.scope !2842, !noalias !2843
  %209 = load i8, ptr %37, align 1, !dbg !2844, !alias.scope !2828
  %210 = load i8, ptr %38, align 1, !dbg !2844, !alias.scope !2828
  %211 = load i8, ptr %39, align 1, !dbg !2844, !alias.scope !2828
  %212 = load i8, ptr %40, align 1, !dbg !2844, !alias.scope !2828
  %213 = zext i8 %209 to i16, !dbg !2844
  %214 = zext i8 %210 to i16, !dbg !2844
  %215 = zext i8 %211 to i16, !dbg !2844
  %216 = zext i8 %212 to i16, !dbg !2844
  %217 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %21, !dbg !2844
  %218 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %22, !dbg !2844
  %219 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %23, !dbg !2844
  %220 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %24, !dbg !2844
  %221 = load i8, ptr %217, align 1, !dbg !2844, !alias.scope !2845
  %222 = load i8, ptr %218, align 1, !dbg !2844, !alias.scope !2845
  %223 = load i8, ptr %219, align 1, !dbg !2844, !alias.scope !2845
  %224 = load i8, ptr %220, align 1, !dbg !2844, !alias.scope !2845
  %225 = zext i8 %221 to i16, !dbg !2844
  %226 = zext i8 %222 to i16, !dbg !2844
  %227 = zext i8 %223 to i16, !dbg !2844
  %228 = zext i8 %224 to i16, !dbg !2844
  %229 = add nuw nsw i16 %213, 1, !dbg !2844
  %230 = add nuw nsw i16 %214, 1, !dbg !2844
  %231 = add nuw nsw i16 %215, 1, !dbg !2844
  %232 = add nuw nsw i16 %216, 1, !dbg !2844
  %233 = add nuw nsw i16 %229, %225, !dbg !2844
  %234 = add nuw nsw i16 %230, %226, !dbg !2844
  %235 = add nuw nsw i16 %231, %227, !dbg !2844
  %236 = add nuw nsw i16 %232, %228, !dbg !2844
  %237 = lshr i16 %233, 1, !dbg !2844
  %238 = lshr i16 %234, 1, !dbg !2844
  %239 = lshr i16 %235, 1, !dbg !2844
  %240 = lshr i16 %236, 1, !dbg !2844
  %241 = load i8, ptr %77, align 1, !dbg !2844, !alias.scope !2828
  %242 = load i8, ptr %78, align 1, !dbg !2844, !alias.scope !2828
  %243 = load i8, ptr %79, align 1, !dbg !2844, !alias.scope !2828
  %244 = load i8, ptr %80, align 1, !dbg !2844, !alias.scope !2828
  %245 = zext i8 %241 to i16, !dbg !2844
  %246 = zext i8 %242 to i16, !dbg !2844
  %247 = zext i8 %243 to i16, !dbg !2844
  %248 = zext i8 %244 to i16, !dbg !2844
  %249 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %61, !dbg !2844
  %250 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %62, !dbg !2844
  %251 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %63, !dbg !2844
  %252 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %64, !dbg !2844
  %253 = load i8, ptr %249, align 1, !dbg !2844, !alias.scope !2845
  %254 = load i8, ptr %250, align 1, !dbg !2844, !alias.scope !2845
  %255 = load i8, ptr %251, align 1, !dbg !2844, !alias.scope !2845
  %256 = load i8, ptr %252, align 1, !dbg !2844, !alias.scope !2845
  %257 = zext i8 %253 to i16, !dbg !2844
  %258 = zext i8 %254 to i16, !dbg !2844
  %259 = zext i8 %255 to i16, !dbg !2844
  %260 = zext i8 %256 to i16, !dbg !2844
  %261 = add nuw nsw i16 %245, 1, !dbg !2844
  %262 = add nuw nsw i16 %246, 1, !dbg !2844
  %263 = add nuw nsw i16 %247, 1, !dbg !2844
  %264 = add nuw nsw i16 %248, 1, !dbg !2844
  %265 = add nuw nsw i16 %261, %257, !dbg !2844
  %266 = add nuw nsw i16 %262, %258, !dbg !2844
  %267 = add nuw nsw i16 %263, %259, !dbg !2844
  %268 = add nuw nsw i16 %264, %260, !dbg !2844
  %269 = lshr i16 %265, 1, !dbg !2844
  %270 = lshr i16 %266, 1, !dbg !2844
  %271 = lshr i16 %267, 1, !dbg !2844
  %272 = lshr i16 %268, 1, !dbg !2844
  %273 = add nuw nsw i16 %237, 1, !dbg !2844
  %274 = add nuw nsw i16 %238, 1, !dbg !2844
  %275 = add nuw nsw i16 %239, 1, !dbg !2844
  %276 = add nuw nsw i16 %240, 1, !dbg !2844
  %277 = add nuw nsw i16 %273, %269, !dbg !2844
  %278 = add nuw nsw i16 %274, %270, !dbg !2844
  %279 = add nuw nsw i16 %275, %271, !dbg !2844
  %280 = add nuw nsw i16 %276, %272, !dbg !2844
  %281 = lshr i16 %277, 1, !dbg !2844
  %282 = lshr i16 %278, 1, !dbg !2844
  %283 = lshr i16 %279, 1, !dbg !2844
  %284 = lshr i16 %280, 1, !dbg !2844
  %285 = trunc nuw i16 %281 to i8, !dbg !2844
  %286 = trunc nuw i16 %282 to i8, !dbg !2844
  %287 = trunc nuw i16 %283 to i8, !dbg !2844
  %288 = trunc nuw i16 %284 to i8, !dbg !2844
  %289 = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %index, !dbg !2846
  %290 = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %18, !dbg !2846
  %291 = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %19, !dbg !2846
  %292 = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %20, !dbg !2846
  store i8 %285, ptr %289, align 1, !dbg !2847, !alias.scope !2848, !noalias !2849
  store i8 %286, ptr %290, align 1, !dbg !2847, !alias.scope !2848, !noalias !2849
  store i8 %287, ptr %291, align 1, !dbg !2847, !alias.scope !2848, !noalias !2849
  store i8 %288, ptr %292, align 1, !dbg !2847, !alias.scope !2848, !noalias !2849
  %293 = load i8, ptr %77, align 1, !dbg !2850, !alias.scope !2828
  %294 = load i8, ptr %78, align 1, !dbg !2850, !alias.scope !2828
  %295 = load i8, ptr %79, align 1, !dbg !2850, !alias.scope !2828
  %296 = load i8, ptr %80, align 1, !dbg !2850, !alias.scope !2828
  %297 = zext i8 %293 to i16, !dbg !2850
  %298 = zext i8 %294 to i16, !dbg !2850
  %299 = zext i8 %295 to i16, !dbg !2850
  %300 = zext i8 %296 to i16, !dbg !2850
  %301 = load i8, ptr %249, align 1, !dbg !2850, !alias.scope !2845
  %302 = load i8, ptr %250, align 1, !dbg !2850, !alias.scope !2845
  %303 = load i8, ptr %251, align 1, !dbg !2850, !alias.scope !2845
  %304 = load i8, ptr %252, align 1, !dbg !2850, !alias.scope !2845
  %305 = zext i8 %301 to i16, !dbg !2850
  %306 = zext i8 %302 to i16, !dbg !2850
  %307 = zext i8 %303 to i16, !dbg !2850
  %308 = zext i8 %304 to i16, !dbg !2850
  %309 = add nuw nsw i16 %297, 1, !dbg !2850
  %310 = add nuw nsw i16 %298, 1, !dbg !2850
  %311 = add nuw nsw i16 %299, 1, !dbg !2850
  %312 = add nuw nsw i16 %300, 1, !dbg !2850
  %313 = add nuw nsw i16 %309, %305, !dbg !2850
  %314 = add nuw nsw i16 %310, %306, !dbg !2850
  %315 = add nuw nsw i16 %311, %307, !dbg !2850
  %316 = add nuw nsw i16 %312, %308, !dbg !2850
  %317 = lshr i16 %313, 1, !dbg !2850
  %318 = lshr i16 %314, 1, !dbg !2850
  %319 = lshr i16 %315, 1, !dbg !2850
  %320 = lshr i16 %316, 1, !dbg !2850
  %321 = load i8, ptr %165, align 1, !dbg !2850, !alias.scope !2828
  %322 = load i8, ptr %166, align 1, !dbg !2850, !alias.scope !2828
  %323 = load i8, ptr %167, align 1, !dbg !2850, !alias.scope !2828
  %324 = load i8, ptr %168, align 1, !dbg !2850, !alias.scope !2828
  %325 = zext i8 %321 to i16, !dbg !2850
  %326 = zext i8 %322 to i16, !dbg !2850
  %327 = zext i8 %323 to i16, !dbg !2850
  %328 = zext i8 %324 to i16, !dbg !2850
  %329 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %149, !dbg !2850
  %330 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %150, !dbg !2850
  %331 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %151, !dbg !2850
  %332 = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %152, !dbg !2850
  %333 = load i8, ptr %329, align 1, !dbg !2850, !alias.scope !2845
  %334 = load i8, ptr %330, align 1, !dbg !2850, !alias.scope !2845
  %335 = load i8, ptr %331, align 1, !dbg !2850, !alias.scope !2845
  %336 = load i8, ptr %332, align 1, !dbg !2850, !alias.scope !2845
  %337 = zext i8 %333 to i16, !dbg !2850
  %338 = zext i8 %334 to i16, !dbg !2850
  %339 = zext i8 %335 to i16, !dbg !2850
  %340 = zext i8 %336 to i16, !dbg !2850
  %341 = add nuw nsw i16 %325, 1, !dbg !2850
  %342 = add nuw nsw i16 %326, 1, !dbg !2850
  %343 = add nuw nsw i16 %327, 1, !dbg !2850
  %344 = add nuw nsw i16 %328, 1, !dbg !2850
  %345 = add nuw nsw i16 %341, %337, !dbg !2850
  %346 = add nuw nsw i16 %342, %338, !dbg !2850
  %347 = add nuw nsw i16 %343, %339, !dbg !2850
  %348 = add nuw nsw i16 %344, %340, !dbg !2850
  %349 = lshr i16 %345, 1, !dbg !2850
  %350 = lshr i16 %346, 1, !dbg !2850
  %351 = lshr i16 %347, 1, !dbg !2850
  %352 = lshr i16 %348, 1, !dbg !2850
  %353 = add nuw nsw i16 %317, 1, !dbg !2850
  %354 = add nuw nsw i16 %318, 1, !dbg !2850
  %355 = add nuw nsw i16 %319, 1, !dbg !2850
  %356 = add nuw nsw i16 %320, 1, !dbg !2850
  %357 = add nuw nsw i16 %353, %349, !dbg !2850
  %358 = add nuw nsw i16 %354, %350, !dbg !2850
  %359 = add nuw nsw i16 %355, %351, !dbg !2850
  %360 = add nuw nsw i16 %356, %352, !dbg !2850
  %361 = lshr i16 %357, 1, !dbg !2850
  %362 = lshr i16 %358, 1, !dbg !2850
  %363 = lshr i16 %359, 1, !dbg !2850
  %364 = lshr i16 %360, 1, !dbg !2850
  %365 = trunc nuw i16 %361 to i8, !dbg !2850
  %366 = trunc nuw i16 %362 to i8, !dbg !2850
  %367 = trunc nuw i16 %363 to i8, !dbg !2850
  %368 = trunc nuw i16 %364 to i8, !dbg !2850
  %369 = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %index, !dbg !2851
  %370 = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %18, !dbg !2851
  %371 = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %19, !dbg !2851
  %372 = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %20, !dbg !2851
  store i8 %365, ptr %369, align 1, !dbg !2852, !alias.scope !2853, !noalias !2854
  store i8 %366, ptr %370, align 1, !dbg !2852, !alias.scope !2853, !noalias !2854
  store i8 %367, ptr %371, align 1, !dbg !2852, !alias.scope !2853, !noalias !2854
  store i8 %368, ptr %372, align 1, !dbg !2852, !alias.scope !2853, !noalias !2854
  %index.next = add nuw i64 %index, 4, !dbg !2821
  %373 = icmp eq i64 %index.next, %n.vec, !dbg !2821
  br i1 %373, label %middle.block, label %vector.body, !dbg !2821, !llvm.loop !2855

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond3.for.cond.cleanup5_crit_edge.us, label %for.body6.us.preheader, !dbg !2820

for.body6.us.preheader:                           ; preds = %for.body.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.us ], [ %n.vec, %middle.block ]
  br label %for.body6.us, !dbg !2820

for.body6.us:                                     ; preds = %for.body6.us.preheader, %for.body6.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body6.us ], [ %indvars.iv.ph, %for.body6.us.preheader ]
    #dbg_value(i64 %indvars.iv, !2810, !DIExpression(), !2819)
  %374 = shl nuw nsw i64 %indvars.iv, 1, !dbg !2823
  %arrayidx.us = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %374, !dbg !2823
  %375 = load i8, ptr %arrayidx.us, align 1, !dbg !2823
  %conv.us = zext i8 %375 to i16, !dbg !2823
  %arrayidx9.us = getelementptr inbounds i8, ptr %add.ptr.us, i64 %374, !dbg !2823
  %376 = load i8, ptr %arrayidx9.us, align 1, !dbg !2823
  %conv10.us = zext i8 %376 to i16, !dbg !2823
  %add.us = add nuw nsw i16 %conv.us, 1, !dbg !2823
  %add11.us = add nuw nsw i16 %add.us, %conv10.us, !dbg !2823
  %shr.us = lshr i16 %add11.us, 1, !dbg !2823
  %377 = or disjoint i64 %374, 1, !dbg !2823
  %arrayidx15.us = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %377, !dbg !2823
  %378 = load i8, ptr %arrayidx15.us, align 1, !dbg !2823
  %conv16.us = zext i8 %378 to i16, !dbg !2823
  %arrayidx20.us = getelementptr inbounds i8, ptr %add.ptr.us, i64 %377, !dbg !2823
  %379 = load i8, ptr %arrayidx20.us, align 1, !dbg !2823
  %conv21.us = zext i8 %379 to i16, !dbg !2823
  %add22.us = add nuw nsw i16 %conv16.us, 1, !dbg !2823
  %add23.us = add nuw nsw i16 %add22.us, %conv21.us, !dbg !2823
  %shr24.us = lshr i16 %add23.us, 1, !dbg !2823
  %add25.us = add nuw nsw i16 %shr.us, 1, !dbg !2823
  %add26.us = add nuw nsw i16 %add25.us, %shr24.us, !dbg !2823
  %shr27.us = lshr i16 %add26.us, 1, !dbg !2823
  %conv28.us = trunc nuw i16 %shr27.us to i8, !dbg !2823
  %arrayidx30.us = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %indvars.iv, !dbg !2830
  store i8 %conv28.us, ptr %arrayidx30.us, align 1, !dbg !2831
  %380 = load i8, ptr %arrayidx15.us, align 1, !dbg !2839
  %conv35.us = zext i8 %380 to i16, !dbg !2839
  %381 = load i8, ptr %arrayidx20.us, align 1, !dbg !2839
  %conv40.us = zext i8 %381 to i16, !dbg !2839
  %add41.us = add nuw nsw i16 %conv35.us, 1, !dbg !2839
  %add42.us = add nuw nsw i16 %add41.us, %conv40.us, !dbg !2839
  %shr43.us = lshr i16 %add42.us, 1, !dbg !2839
  %382 = add nuw nsw i64 %374, 2, !dbg !2839
  %arrayidx47.us = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %382, !dbg !2839
  %383 = load i8, ptr %arrayidx47.us, align 1, !dbg !2839
  %conv48.us = zext i8 %383 to i16, !dbg !2839
  %arrayidx52.us = getelementptr inbounds i8, ptr %add.ptr.us, i64 %382, !dbg !2839
  %384 = load i8, ptr %arrayidx52.us, align 1, !dbg !2839
  %conv53.us = zext i8 %384 to i16, !dbg !2839
  %add54.us = add nuw nsw i16 %conv48.us, 1, !dbg !2839
  %add55.us = add nuw nsw i16 %add54.us, %conv53.us, !dbg !2839
  %shr56.us = lshr i16 %add55.us, 1, !dbg !2839
  %add57.us = add nuw nsw i16 %shr43.us, 1, !dbg !2839
  %add58.us = add nuw nsw i16 %add57.us, %shr56.us, !dbg !2839
  %shr59.us = lshr i16 %add58.us, 1, !dbg !2839
  %conv60.us = trunc nuw i16 %shr59.us to i8, !dbg !2839
  %arrayidx62.us = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %indvars.iv, !dbg !2840
  store i8 %conv60.us, ptr %arrayidx62.us, align 1, !dbg !2841
  %385 = load i8, ptr %arrayidx9.us, align 1, !dbg !2844
  %conv66.us = zext i8 %385 to i16, !dbg !2844
  %arrayidx69.us = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %374, !dbg !2844
  %386 = load i8, ptr %arrayidx69.us, align 1, !dbg !2844
  %conv70.us = zext i8 %386 to i16, !dbg !2844
  %add71.us = add nuw nsw i16 %conv66.us, 1, !dbg !2844
  %add72.us = add nuw nsw i16 %add71.us, %conv70.us, !dbg !2844
  %shr73.us = lshr i16 %add72.us, 1, !dbg !2844
  %387 = load i8, ptr %arrayidx20.us, align 1, !dbg !2844
  %conv78.us = zext i8 %387 to i16, !dbg !2844
  %arrayidx82.us = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %377, !dbg !2844
  %388 = load i8, ptr %arrayidx82.us, align 1, !dbg !2844
  %conv83.us = zext i8 %388 to i16, !dbg !2844
  %add84.us = add nuw nsw i16 %conv78.us, 1, !dbg !2844
  %add85.us = add nuw nsw i16 %add84.us, %conv83.us, !dbg !2844
  %shr86.us = lshr i16 %add85.us, 1, !dbg !2844
  %add87.us = add nuw nsw i16 %shr73.us, 1, !dbg !2844
  %add88.us = add nuw nsw i16 %add87.us, %shr86.us, !dbg !2844
  %shr89.us = lshr i16 %add88.us, 1, !dbg !2844
  %conv90.us = trunc nuw i16 %shr89.us to i8, !dbg !2844
  %arrayidx92.us = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %indvars.iv, !dbg !2846
  store i8 %conv90.us, ptr %arrayidx92.us, align 1, !dbg !2847
  %389 = load i8, ptr %arrayidx20.us, align 1, !dbg !2850
  %conv97.us = zext i8 %389 to i16, !dbg !2850
  %390 = load i8, ptr %arrayidx82.us, align 1, !dbg !2850
  %conv102.us = zext i8 %390 to i16, !dbg !2850
  %add103.us = add nuw nsw i16 %conv97.us, 1, !dbg !2850
  %add104.us = add nuw nsw i16 %add103.us, %conv102.us, !dbg !2850
  %shr105.us = lshr i16 %add104.us, 1, !dbg !2850
  %391 = load i8, ptr %arrayidx52.us, align 1, !dbg !2850
  %conv110.us = zext i8 %391 to i16, !dbg !2850
  %arrayidx114.us = getelementptr inbounds i8, ptr %add.ptr2.us, i64 %382, !dbg !2850
  %392 = load i8, ptr %arrayidx114.us, align 1, !dbg !2850
  %conv115.us = zext i8 %392 to i16, !dbg !2850
  %add116.us = add nuw nsw i16 %conv110.us, 1, !dbg !2850
  %add117.us = add nuw nsw i16 %add116.us, %conv115.us, !dbg !2850
  %shr118.us = lshr i16 %add117.us, 1, !dbg !2850
  %add119.us = add nuw nsw i16 %shr105.us, 1, !dbg !2850
  %add120.us = add nuw nsw i16 %add119.us, %shr118.us, !dbg !2850
  %shr121.us = lshr i16 %add120.us, 1, !dbg !2850
  %conv122.us = trunc nuw i16 %shr121.us to i8, !dbg !2850
  %arrayidx124.us = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %indvars.iv, !dbg !2851
  store i8 %conv122.us, ptr %arrayidx124.us, align 1, !dbg !2852
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2821
    #dbg_value(i64 %indvars.iv.next, !2810, !DIExpression(), !2819)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !2857
  br i1 %exitcond.not, label %for.cond3.for.cond.cleanup5_crit_edge.us, label %for.body6.us, !dbg !2820, !llvm.loop !2858

for.cond3.for.cond.cleanup5_crit_edge.us:         ; preds = %for.body6.us, %middle.block
  %add.ptr127.us = getelementptr inbounds i8, ptr %src0.addr.0194.us, i64 %idx.ext126, !dbg !2859
    #dbg_value(ptr %add.ptr127.us, !2795, !DIExpression(), !2812)
  %add.ptr129.us = getelementptr inbounds i8, ptr %dst0.addr.0193.us, i64 %idx.ext128, !dbg !2860
    #dbg_value(ptr %add.ptr129.us, !2796, !DIExpression(), !2812)
  %add.ptr131.us = getelementptr inbounds i8, ptr %dsth.addr.0191.us, i64 %idx.ext128, !dbg !2861
    #dbg_value(ptr %add.ptr131.us, !2797, !DIExpression(), !2812)
  %add.ptr133.us = getelementptr inbounds i8, ptr %dstv.addr.0190.us, i64 %idx.ext128, !dbg !2862
    #dbg_value(ptr %add.ptr133.us, !2798, !DIExpression(), !2812)
  %add.ptr135.us = getelementptr inbounds i8, ptr %dstc.addr.0189.us, i64 %idx.ext128, !dbg !2863
    #dbg_value(ptr %add.ptr135.us, !2799, !DIExpression(), !2812)
  %inc137.us = add nuw nsw i32 %y.0192.us, 1, !dbg !2864
    #dbg_value(i32 %inc137.us, !2804, !DIExpression(), !2813)
  %exitcond200.not = icmp eq i32 %inc137.us, %height, !dbg !2814
  br i1 %exitcond200.not, label %for.cond.cleanup, label %for.body.us, !dbg !2815, !llvm.loop !2865

for.cond.cleanup:                                 ; preds = %for.cond3.for.cond.cleanup5_crit_edge.us, %for.body.lr.ph, %entry
  ret void, !dbg !2867
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal void @integral_init4h(ptr nocapture noundef %sum, ptr nocapture noundef readonly %pix, i32 noundef %stride) #10 !dbg !2868 {
entry:
    #dbg_value(ptr %sum, !2870, !DIExpression(), !2876)
    #dbg_value(ptr %pix, !2871, !DIExpression(), !2876)
    #dbg_value(i32 %stride, !2872, !DIExpression(), !2876)
    #dbg_value(i32 undef, !2873, !DIExpression(), !2876)
    #dbg_value(i32 0, !2874, !DIExpression(), !2877)
    #dbg_value(i32 0, !2874, !DIExpression(), !2877)
    #dbg_value(i32 poison, !2873, !DIExpression(), !2876)
  %cmp39 = icmp sgt i32 %stride, 4, !dbg !2878
  br i1 %cmp39, label %for.body.preheader, label %for.cond.cleanup, !dbg !2880

for.body.preheader:                               ; preds = %entry
  %sub = add nsw i32 %stride, -4
  %0 = load <4 x i8>, ptr %pix, align 1, !dbg !2881
  %1 = zext <4 x i8> %0 to <4 x i16>, !dbg !2882
  %2 = tail call i16 @llvm.vector.reduce.add.v4i16(<4 x i16> %1), !dbg !2883
  %3 = zext nneg i32 %stride to i64, !dbg !2880
  %wide.trip.count = zext nneg i32 %sub to i64, !dbg !2878
  %xtraiter = and i64 %wide.trip.count, 1, !dbg !2880
  %4 = icmp eq i32 %sub, 1, !dbg !2880
  br i1 %4, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new, !dbg !2880

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 2147483646, !dbg !2880
  br label %for.body, !dbg !2880

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.body ]
  %v.040.unr = phi i16 [ %2, %for.body.preheader ], [ %add25.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2880
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil, !dbg !2880

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
    #dbg_value(i64 %indvars.iv.unr, !2874, !DIExpression(), !2877)
  %5 = sub nsw i64 %indvars.iv.unr, %3, !dbg !2884
  %arrayidx11.epil = getelementptr inbounds i16, ptr %sum, i64 %5, !dbg !2886
  %6 = load i16, ptr %arrayidx11.epil, align 2, !dbg !2886
  %conv14.epil = add i16 %6, %v.040.unr, !dbg !2887
  %arrayidx16.epil = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv.unr, !dbg !2888
  store i16 %conv14.epil, ptr %arrayidx16.epil, align 2, !dbg !2889
    #dbg_value(i32 undef, !2873, !DIExpression(), !2876)
    #dbg_value(i64 %indvars.iv.unr, !2874, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2877)
    #dbg_value(i32 poison, !2873, !DIExpression(), !2876)
  br label %for.cond.cleanup, !dbg !2890

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  ret void, !dbg !2890

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.body ]
  %v.040 = phi i16 [ %2, %for.body.preheader.new ], [ %add25.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.body ]
    #dbg_value(i64 %indvars.iv, !2874, !DIExpression(), !2877)
  %7 = sub nsw i64 %indvars.iv, %3, !dbg !2884
  %arrayidx11 = getelementptr inbounds i16, ptr %sum, i64 %7, !dbg !2886
  %8 = load i16, ptr %arrayidx11, align 2, !dbg !2886
  %conv14 = add i16 %8, %v.040, !dbg !2887
  %arrayidx16 = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv, !dbg !2888
  store i16 %conv14, ptr %arrayidx16, align 2, !dbg !2889
  %9 = getelementptr inbounds i8, ptr %pix, i64 %indvars.iv, !dbg !2891
  %arrayidx19 = getelementptr inbounds i8, ptr %9, i64 4, !dbg !2891
  %10 = load i8, ptr %arrayidx19, align 1, !dbg !2891
  %conv20 = zext i8 %10 to i16, !dbg !2891
  %11 = load i8, ptr %9, align 1, !dbg !2892
  %conv23 = zext i8 %11 to i16, !dbg !2892
  %sub24 = add i16 %v.040, %conv20, !dbg !2893
  %add25 = sub i16 %sub24, %conv23, !dbg !2894
    #dbg_value(i32 undef, !2873, !DIExpression(), !2876)
  %indvars.iv.next = or disjoint i64 %indvars.iv, 1, !dbg !2895
    #dbg_value(i64 %indvars.iv.next, !2874, !DIExpression(), !2877)
    #dbg_value(i32 poison, !2873, !DIExpression(), !2876)
  %12 = sub nsw i64 %indvars.iv.next, %3, !dbg !2884
  %arrayidx11.1 = getelementptr inbounds i16, ptr %sum, i64 %12, !dbg !2886
  %13 = load i16, ptr %arrayidx11.1, align 2, !dbg !2886
  %conv14.1 = add i16 %13, %add25, !dbg !2887
  %arrayidx16.1 = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv.next, !dbg !2888
  store i16 %conv14.1, ptr %arrayidx16.1, align 2, !dbg !2889
  %14 = getelementptr inbounds i8, ptr %pix, i64 %indvars.iv.next, !dbg !2891
  %arrayidx19.1 = getelementptr inbounds i8, ptr %14, i64 4, !dbg !2891
  %15 = load i8, ptr %arrayidx19.1, align 1, !dbg !2891
  %conv20.1 = zext i8 %15 to i16, !dbg !2891
  %16 = load i8, ptr %14, align 1, !dbg !2892
  %conv23.1 = zext i8 %16 to i16, !dbg !2892
  %sub24.1 = add i16 %add25, %conv20.1, !dbg !2893
  %add25.1 = sub i16 %sub24.1, %conv23.1, !dbg !2894
    #dbg_value(i32 undef, !2873, !DIExpression(), !2876)
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2, !dbg !2895
    #dbg_value(i64 %indvars.iv.next.1, !2874, !DIExpression(), !2877)
    #dbg_value(i32 poison, !2873, !DIExpression(), !2876)
  %niter.next.1 = add i64 %niter, 2, !dbg !2880
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter, !dbg !2880
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !dbg !2880, !llvm.loop !2896
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal void @integral_init8h(ptr nocapture noundef %sum, ptr nocapture noundef readonly %pix, i32 noundef %stride) #10 !dbg !2898 {
entry:
    #dbg_value(ptr %sum, !2900, !DIExpression(), !2906)
    #dbg_value(ptr %pix, !2901, !DIExpression(), !2906)
    #dbg_value(i32 %stride, !2902, !DIExpression(), !2906)
    #dbg_value(i32 undef, !2903, !DIExpression(), !2906)
    #dbg_value(i32 0, !2904, !DIExpression(), !2907)
    #dbg_value(i32 0, !2904, !DIExpression(), !2907)
    #dbg_value(i32 poison, !2903, !DIExpression(), !2906)
  %cmp55 = icmp sgt i32 %stride, 8, !dbg !2908
  br i1 %cmp55, label %for.body.preheader, label %for.cond.cleanup, !dbg !2910

for.body.preheader:                               ; preds = %entry
  %sub = add nsw i32 %stride, -8
  %0 = load <8 x i8>, ptr %pix, align 1, !dbg !2911
  %1 = zext <8 x i8> %0 to <8 x i16>, !dbg !2912
  %2 = tail call i16 @llvm.vector.reduce.add.v8i16(<8 x i16> %1), !dbg !2913
  %3 = zext nneg i32 %stride to i64, !dbg !2910
  %wide.trip.count = zext nneg i32 %sub to i64, !dbg !2908
  %xtraiter = and i64 %wide.trip.count, 1, !dbg !2910
  %4 = icmp eq i32 %sub, 1, !dbg !2910
  br i1 %4, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new, !dbg !2910

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 2147483646, !dbg !2910
  br label %for.body, !dbg !2910

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.body ]
  %v.056.unr = phi i16 [ %2, %for.body.preheader ], [ %add37.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2910
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil, !dbg !2910

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
    #dbg_value(i64 %indvars.iv.unr, !2904, !DIExpression(), !2907)
  %5 = sub nsw i64 %indvars.iv.unr, %3, !dbg !2914
  %arrayidx23.epil = getelementptr inbounds i16, ptr %sum, i64 %5, !dbg !2916
  %6 = load i16, ptr %arrayidx23.epil, align 2, !dbg !2916
  %conv26.epil = add i16 %6, %v.056.unr, !dbg !2917
  %arrayidx28.epil = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv.unr, !dbg !2918
  store i16 %conv26.epil, ptr %arrayidx28.epil, align 2, !dbg !2919
    #dbg_value(i32 undef, !2903, !DIExpression(), !2906)
    #dbg_value(i64 %indvars.iv.unr, !2904, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2907)
    #dbg_value(i32 poison, !2903, !DIExpression(), !2906)
  br label %for.cond.cleanup, !dbg !2920

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  ret void, !dbg !2920

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.body ]
  %v.056 = phi i16 [ %2, %for.body.preheader.new ], [ %add37.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.body ]
    #dbg_value(i64 %indvars.iv, !2904, !DIExpression(), !2907)
  %7 = sub nsw i64 %indvars.iv, %3, !dbg !2914
  %arrayidx23 = getelementptr inbounds i16, ptr %sum, i64 %7, !dbg !2916
  %8 = load i16, ptr %arrayidx23, align 2, !dbg !2916
  %conv26 = add i16 %8, %v.056, !dbg !2917
  %arrayidx28 = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv, !dbg !2918
  store i16 %conv26, ptr %arrayidx28, align 2, !dbg !2919
  %9 = getelementptr inbounds i8, ptr %pix, i64 %indvars.iv, !dbg !2921
  %arrayidx31 = getelementptr inbounds i8, ptr %9, i64 8, !dbg !2921
  %10 = load i8, ptr %arrayidx31, align 1, !dbg !2921
  %conv32 = zext i8 %10 to i16, !dbg !2921
  %11 = load i8, ptr %9, align 1, !dbg !2922
  %conv35 = zext i8 %11 to i16, !dbg !2922
  %sub36 = add i16 %v.056, %conv32, !dbg !2923
  %add37 = sub i16 %sub36, %conv35, !dbg !2924
    #dbg_value(i32 undef, !2903, !DIExpression(), !2906)
  %indvars.iv.next = or disjoint i64 %indvars.iv, 1, !dbg !2925
    #dbg_value(i64 %indvars.iv.next, !2904, !DIExpression(), !2907)
    #dbg_value(i32 poison, !2903, !DIExpression(), !2906)
  %12 = sub nsw i64 %indvars.iv.next, %3, !dbg !2914
  %arrayidx23.1 = getelementptr inbounds i16, ptr %sum, i64 %12, !dbg !2916
  %13 = load i16, ptr %arrayidx23.1, align 2, !dbg !2916
  %conv26.1 = add i16 %13, %add37, !dbg !2917
  %arrayidx28.1 = getelementptr inbounds i16, ptr %sum, i64 %indvars.iv.next, !dbg !2918
  store i16 %conv26.1, ptr %arrayidx28.1, align 2, !dbg !2919
  %14 = getelementptr inbounds i8, ptr %pix, i64 %indvars.iv.next, !dbg !2921
  %arrayidx31.1 = getelementptr inbounds i8, ptr %14, i64 8, !dbg !2921
  %15 = load i8, ptr %arrayidx31.1, align 1, !dbg !2921
  %conv32.1 = zext i8 %15 to i16, !dbg !2921
  %16 = load i8, ptr %14, align 1, !dbg !2922
  %conv35.1 = zext i8 %16 to i16, !dbg !2922
  %sub36.1 = add i16 %add37, %conv32.1, !dbg !2923
  %add37.1 = sub i16 %sub36.1, %conv35.1, !dbg !2924
    #dbg_value(i32 undef, !2903, !DIExpression(), !2906)
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2, !dbg !2925
    #dbg_value(i64 %indvars.iv.next.1, !2904, !DIExpression(), !2907)
    #dbg_value(i32 poison, !2903, !DIExpression(), !2906)
  %niter.next.1 = add i64 %niter, 2, !dbg !2910
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter, !dbg !2910
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !dbg !2910, !llvm.loop !2926
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal void @integral_init4v(ptr nocapture noundef %sum8, ptr nocapture noundef writeonly %sum4, i32 noundef %stride) #10 !dbg !2928 {
entry:
    #dbg_value(ptr %sum8, !2930, !DIExpression(), !2937)
    #dbg_value(ptr %sum4, !2931, !DIExpression(), !2937)
    #dbg_value(i32 %stride, !2932, !DIExpression(), !2937)
    #dbg_value(i32 0, !2933, !DIExpression(), !2938)
  %sum879 = ptrtoint ptr %sum8 to i64
  %sum478 = ptrtoint ptr %sum4 to i64
  %sub = add i32 %stride, -8
  %cmp64 = icmp sgt i32 %stride, 8, !dbg !2939
  br i1 %cmp64, label %for.body.lr.ph, label %for.cond.cleanup13, !dbg !2941

for.body.lr.ph:                                   ; preds = %entry
  %mul = shl nsw i32 %stride, 2
  %0 = zext nneg i32 %mul to i64, !dbg !2941
  %wide.trip.count = zext i32 %sub to i64, !dbg !2939
  %invariant.gep = getelementptr inbounds i16, ptr %sum8, i64 %0, !dbg !2941
  %min.iters.check = icmp ult i32 %sub, 32, !dbg !2941
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck, !dbg !2941

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  %xtraiter = and i64 %wide.trip.count, 3, !dbg !2941
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2941
  br i1 %lcmp.mod.not, label %for.body.prol.loopexit, label %for.body.prol, !dbg !2941

for.body.prol:                                    ; preds = %for.body.preheader, %for.body.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body.prol ], [ %indvars.iv.ph, %for.body.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.prol ], [ 0, %for.body.preheader ]
    #dbg_value(i64 %indvars.iv.prol, !2933, !DIExpression(), !2938)
  %gep.prol = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv.prol, !dbg !2942
  %1 = load i16, ptr %gep.prol, align 2, !dbg !2942
  %arrayidx2.prol = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv.prol, !dbg !2943
  %2 = load i16, ptr %arrayidx2.prol, align 2, !dbg !2943
  %sub4.prol = sub i16 %1, %2, !dbg !2944
  %arrayidx7.prol = getelementptr inbounds i16, ptr %sum4, i64 %indvars.iv.prol, !dbg !2945
  store i16 %sub4.prol, ptr %arrayidx7.prol, align 2, !dbg !2946
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1, !dbg !2947
    #dbg_value(i64 %indvars.iv.next.prol, !2933, !DIExpression(), !2938)
  %prol.iter.next = add i64 %prol.iter, 1, !dbg !2941
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter, !dbg !2941
  br i1 %prol.iter.cmp.not, label %for.body.prol.loopexit, label %for.body.prol, !dbg !2941, !llvm.loop !2948

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body.preheader ], [ %indvars.iv.next.prol, %for.body.prol ]
  %3 = sub nsw i64 %indvars.iv.ph, %wide.trip.count, !dbg !2941
  %4 = icmp ugt i64 %3, -4, !dbg !2941
  br i1 %4, label %for.cond9.preheader, label %for.body, !dbg !2941

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %5 = sub i64 %sum478, %sum879, !dbg !2941
  %diff.check = icmp ult i64 %5, 64, !dbg !2941
  %6 = shl nuw nsw i64 %0, 1, !dbg !2941
  %7 = sub i64 %5, %6, !dbg !2941
  %diff.check80 = icmp ult i64 %7, 64, !dbg !2941
  %conflict.rdx = or i1 %diff.check, %diff.check80, !dbg !2941
  br i1 %conflict.rdx, label %for.body.preheader, label %vector.ph, !dbg !2941

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 2147483616, !dbg !2941
  br label %vector.body, !dbg !2941

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ], !dbg !2947
  %8 = getelementptr inbounds i16, ptr %invariant.gep, i64 %index, !dbg !2942
  %9 = getelementptr inbounds i8, ptr %8, i64 16, !dbg !2942
  %10 = getelementptr inbounds i8, ptr %8, i64 32, !dbg !2942
  %11 = getelementptr inbounds i8, ptr %8, i64 48, !dbg !2942
  %wide.load = load <8 x i16>, ptr %8, align 2, !dbg !2942
  %wide.load81 = load <8 x i16>, ptr %9, align 2, !dbg !2942
  %wide.load82 = load <8 x i16>, ptr %10, align 2, !dbg !2942
  %wide.load83 = load <8 x i16>, ptr %11, align 2, !dbg !2942
  %12 = getelementptr inbounds i16, ptr %sum8, i64 %index, !dbg !2943
  %13 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !2943
  %14 = getelementptr inbounds i8, ptr %12, i64 32, !dbg !2943
  %15 = getelementptr inbounds i8, ptr %12, i64 48, !dbg !2943
  %wide.load84 = load <8 x i16>, ptr %12, align 2, !dbg !2943
  %wide.load85 = load <8 x i16>, ptr %13, align 2, !dbg !2943
  %wide.load86 = load <8 x i16>, ptr %14, align 2, !dbg !2943
  %wide.load87 = load <8 x i16>, ptr %15, align 2, !dbg !2943
  %16 = sub <8 x i16> %wide.load, %wide.load84, !dbg !2944
  %17 = sub <8 x i16> %wide.load81, %wide.load85, !dbg !2944
  %18 = sub <8 x i16> %wide.load82, %wide.load86, !dbg !2944
  %19 = sub <8 x i16> %wide.load83, %wide.load87, !dbg !2944
  %20 = getelementptr inbounds i16, ptr %sum4, i64 %index, !dbg !2945
  %21 = getelementptr inbounds i8, ptr %20, i64 16, !dbg !2946
  %22 = getelementptr inbounds i8, ptr %20, i64 32, !dbg !2946
  %23 = getelementptr inbounds i8, ptr %20, i64 48, !dbg !2946
  store <8 x i16> %16, ptr %20, align 2, !dbg !2946
  store <8 x i16> %17, ptr %21, align 2, !dbg !2946
  store <8 x i16> %18, ptr %22, align 2, !dbg !2946
  store <8 x i16> %19, ptr %23, align 2, !dbg !2946
  %index.next = add nuw i64 %index, 32, !dbg !2947
  %24 = icmp eq i64 %index.next, %n.vec, !dbg !2947
  br i1 %24, label %middle.block, label %vector.body, !dbg !2947, !llvm.loop !2949

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count, !dbg !2941
  br i1 %cmp.n, label %for.cond9.preheader, label %for.body.preheader, !dbg !2941

for.cond9.preheader:                              ; preds = %for.body.prol.loopexit, %for.body, %middle.block
    #dbg_value(i32 0, !2935, !DIExpression(), !2951)
  br i1 %cmp64, label %for.body14.lr.ph, label %for.cond.cleanup13, !dbg !2952

for.body14.lr.ph:                                 ; preds = %for.cond9.preheader
  %mul15 = shl nsw i32 %stride, 3
  %25 = zext nneg i32 %mul15 to i64, !dbg !2952
  %wide.trip.count74 = zext nneg i32 %sub to i64, !dbg !2953
  %invariant.gep76 = getelementptr inbounds i16, ptr %sum8, i64 %25, !dbg !2952
  %min.iters.check90 = icmp ult i32 %sub, 32, !dbg !2952
  br i1 %min.iters.check90, label %for.body14.preheader, label %vector.ph91, !dbg !2952

for.body14.preheader:                             ; preds = %middle.block88, %for.body14.lr.ph
  %indvars.iv70.ph = phi i64 [ 0, %for.body14.lr.ph ], [ %n.vec93, %middle.block88 ]
  br label %for.body14, !dbg !2952

vector.ph91:                                      ; preds = %for.body14.lr.ph
  %n.vec93 = and i64 %wide.trip.count, 2147483616, !dbg !2952
  br label %vector.body95, !dbg !2952

vector.body95:                                    ; preds = %vector.body95, %vector.ph91
  %index96 = phi i64 [ 0, %vector.ph91 ], [ %index.next113, %vector.body95 ], !dbg !2955
  %26 = getelementptr inbounds i16, ptr %invariant.gep76, i64 %index96, !dbg !2956
  %27 = getelementptr inbounds i8, ptr %26, i64 16, !dbg !2956
  %28 = getelementptr inbounds i8, ptr %26, i64 32, !dbg !2956
  %29 = getelementptr inbounds i8, ptr %26, i64 48, !dbg !2956
  %wide.load97 = load <8 x i16>, ptr %26, align 2, !dbg !2956
  %wide.load98 = load <8 x i16>, ptr %27, align 2, !dbg !2956
  %wide.load99 = load <8 x i16>, ptr %28, align 2, !dbg !2956
  %wide.load100 = load <8 x i16>, ptr %29, align 2, !dbg !2956
  %30 = getelementptr i8, ptr %26, i64 8, !dbg !2957
  %31 = getelementptr i8, ptr %26, i64 24, !dbg !2957
  %32 = getelementptr i8, ptr %26, i64 40, !dbg !2957
  %33 = getelementptr i8, ptr %26, i64 56, !dbg !2957
  %wide.load101 = load <8 x i16>, ptr %30, align 2, !dbg !2957
  %wide.load102 = load <8 x i16>, ptr %31, align 2, !dbg !2957
  %wide.load103 = load <8 x i16>, ptr %32, align 2, !dbg !2957
  %wide.load104 = load <8 x i16>, ptr %33, align 2, !dbg !2957
  %34 = getelementptr inbounds i16, ptr %sum8, i64 %index96, !dbg !2958
  %35 = getelementptr inbounds i8, ptr %34, i64 16, !dbg !2958
  %36 = getelementptr inbounds i8, ptr %34, i64 32, !dbg !2958
  %37 = getelementptr inbounds i8, ptr %34, i64 48, !dbg !2958
  %wide.load105 = load <8 x i16>, ptr %34, align 2, !dbg !2958
  %wide.load106 = load <8 x i16>, ptr %35, align 2, !dbg !2958
  %wide.load107 = load <8 x i16>, ptr %36, align 2, !dbg !2958
  %wide.load108 = load <8 x i16>, ptr %37, align 2, !dbg !2958
  %38 = getelementptr inbounds i8, ptr %34, i64 8, !dbg !2959
  %39 = getelementptr inbounds i8, ptr %34, i64 24, !dbg !2959
  %40 = getelementptr inbounds i8, ptr %34, i64 40, !dbg !2959
  %41 = getelementptr inbounds i8, ptr %34, i64 56, !dbg !2959
  %wide.load109 = load <8 x i16>, ptr %38, align 2, !dbg !2959
  %wide.load110 = load <8 x i16>, ptr %39, align 2, !dbg !2959
  %wide.load111 = load <8 x i16>, ptr %40, align 2, !dbg !2959
  %wide.load112 = load <8 x i16>, ptr %41, align 2, !dbg !2959
  %42 = add <8 x i16> %wide.load101, %wide.load97, !dbg !2960
  %43 = add <8 x i16> %wide.load102, %wide.load98, !dbg !2960
  %44 = add <8 x i16> %wide.load103, %wide.load99, !dbg !2960
  %45 = add <8 x i16> %wide.load104, %wide.load100, !dbg !2960
  %46 = add <8 x i16> %wide.load105, %wide.load109, !dbg !2960
  %47 = add <8 x i16> %wide.load106, %wide.load110, !dbg !2960
  %48 = add <8 x i16> %wide.load107, %wide.load111, !dbg !2960
  %49 = add <8 x i16> %wide.load108, %wide.load112, !dbg !2960
  %50 = sub <8 x i16> %42, %46, !dbg !2960
  %51 = sub <8 x i16> %43, %47, !dbg !2960
  %52 = sub <8 x i16> %44, %48, !dbg !2960
  %53 = sub <8 x i16> %45, %49, !dbg !2960
  store <8 x i16> %50, ptr %34, align 2, !dbg !2961
  store <8 x i16> %51, ptr %35, align 2, !dbg !2961
  store <8 x i16> %52, ptr %36, align 2, !dbg !2961
  store <8 x i16> %53, ptr %37, align 2, !dbg !2961
  %index.next113 = add nuw i64 %index96, 32, !dbg !2955
  %54 = icmp eq i64 %index.next113, %n.vec93, !dbg !2955
  br i1 %54, label %middle.block88, label %vector.body95, !dbg !2955, !llvm.loop !2962

middle.block88:                                   ; preds = %vector.body95
  %cmp.n114 = icmp eq i64 %n.vec93, %wide.trip.count, !dbg !2952
  br i1 %cmp.n114, label %for.cond.cleanup13, label %for.body14.preheader, !dbg !2952

for.body:                                         ; preds = %for.body.prol.loopexit, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body ], [ %indvars.iv.unr, %for.body.prol.loopexit ]
    #dbg_value(i64 %indvars.iv, !2933, !DIExpression(), !2938)
  %gep = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv, !dbg !2942
  %55 = load i16, ptr %gep, align 2, !dbg !2942
  %arrayidx2 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv, !dbg !2943
  %56 = load i16, ptr %arrayidx2, align 2, !dbg !2943
  %sub4 = sub i16 %55, %56, !dbg !2944
  %arrayidx7 = getelementptr inbounds i16, ptr %sum4, i64 %indvars.iv, !dbg !2945
  store i16 %sub4, ptr %arrayidx7, align 2, !dbg !2946
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2947
    #dbg_value(i64 %indvars.iv.next, !2933, !DIExpression(), !2938)
  %gep.1 = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv.next, !dbg !2942
  %57 = load i16, ptr %gep.1, align 2, !dbg !2942
  %arrayidx2.1 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv.next, !dbg !2943
  %58 = load i16, ptr %arrayidx2.1, align 2, !dbg !2943
  %sub4.1 = sub i16 %57, %58, !dbg !2944
  %arrayidx7.1 = getelementptr inbounds i16, ptr %sum4, i64 %indvars.iv.next, !dbg !2945
  store i16 %sub4.1, ptr %arrayidx7.1, align 2, !dbg !2946
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2, !dbg !2947
    #dbg_value(i64 %indvars.iv.next.1, !2933, !DIExpression(), !2938)
  %gep.2 = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv.next.1, !dbg !2942
  %59 = load i16, ptr %gep.2, align 2, !dbg !2942
  %arrayidx2.2 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv.next.1, !dbg !2943
  %60 = load i16, ptr %arrayidx2.2, align 2, !dbg !2943
  %sub4.2 = sub i16 %59, %60, !dbg !2944
  %arrayidx7.2 = getelementptr inbounds i16, ptr %sum4, i64 %indvars.iv.next.1, !dbg !2945
  store i16 %sub4.2, ptr %arrayidx7.2, align 2, !dbg !2946
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3, !dbg !2947
    #dbg_value(i64 %indvars.iv.next.2, !2933, !DIExpression(), !2938)
  %gep.3 = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv.next.2, !dbg !2942
  %61 = load i16, ptr %gep.3, align 2, !dbg !2942
  %arrayidx2.3 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv.next.2, !dbg !2943
  %62 = load i16, ptr %arrayidx2.3, align 2, !dbg !2943
  %sub4.3 = sub i16 %61, %62, !dbg !2944
  %arrayidx7.3 = getelementptr inbounds i16, ptr %sum4, i64 %indvars.iv.next.2, !dbg !2945
  store i16 %sub4.3, ptr %arrayidx7.3, align 2, !dbg !2946
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2947
    #dbg_value(i64 %indvars.iv.next.3, !2933, !DIExpression(), !2938)
  %exitcond.not.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count, !dbg !2939
  br i1 %exitcond.not.3, label %for.cond9.preheader, label %for.body, !dbg !2941, !llvm.loop !2964

for.cond.cleanup13:                               ; preds = %for.body14, %middle.block88, %entry, %for.cond9.preheader
  ret void, !dbg !2965

for.body14:                                       ; preds = %for.body14.preheader, %for.body14
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %for.body14 ], [ %indvars.iv70.ph, %for.body14.preheader ]
    #dbg_value(i64 %indvars.iv70, !2935, !DIExpression(), !2951)
  %gep77 = getelementptr inbounds i16, ptr %invariant.gep76, i64 %indvars.iv70, !dbg !2956
  %63 = load i16, ptr %gep77, align 2, !dbg !2956
  %arrayidx24 = getelementptr i8, ptr %gep77, i64 8, !dbg !2957
  %64 = load i16, ptr %arrayidx24, align 2, !dbg !2957
  %arrayidx28 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv70, !dbg !2958
  %65 = load i16, ptr %arrayidx28, align 2, !dbg !2958
  %arrayidx33 = getelementptr inbounds i8, ptr %arrayidx28, i64 8, !dbg !2959
  %66 = load i16, ptr %arrayidx33, align 2, !dbg !2959
  %.neg63 = add i16 %64, %63, !dbg !2960
  %67 = add i16 %65, %66, !dbg !2960
  %sub35 = sub i16 %.neg63, %67, !dbg !2960
  store i16 %sub35, ptr %arrayidx28, align 2, !dbg !2961
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1, !dbg !2955
    #dbg_value(i64 %indvars.iv.next71, !2935, !DIExpression(), !2951)
  %exitcond75.not = icmp eq i64 %indvars.iv.next71, %wide.trip.count74, !dbg !2953
  br i1 %exitcond75.not, label %for.cond.cleanup13, label %for.body14, !dbg !2952, !llvm.loop !2966
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal void @integral_init8v(ptr nocapture noundef %sum8, i32 noundef %stride) #10 !dbg !2967 {
entry:
    #dbg_value(ptr %sum8, !2969, !DIExpression(), !2973)
    #dbg_value(i32 %stride, !2970, !DIExpression(), !2973)
    #dbg_value(i32 0, !2971, !DIExpression(), !2974)
  %cmp15 = icmp sgt i32 %stride, 8, !dbg !2975
  br i1 %cmp15, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !2977

for.body.lr.ph:                                   ; preds = %entry
  %sub = add nsw i32 %stride, -8
  %mul = shl nsw i32 %stride, 3
  %0 = zext nneg i32 %mul to i64, !dbg !2977
  %wide.trip.count = zext nneg i32 %sub to i64, !dbg !2975
  %invariant.gep = getelementptr inbounds i16, ptr %sum8, i64 %0, !dbg !2977
  %min.iters.check = icmp ult i32 %sub, 32, !dbg !2977
  br i1 %min.iters.check, label %for.body.preheader, label %vector.ph, !dbg !2977

for.body.preheader:                               ; preds = %middle.block, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body, !dbg !2977

vector.ph:                                        ; preds = %for.body.lr.ph
  %n.vec = and i64 %wide.trip.count, 2147483616, !dbg !2977
  br label %vector.body, !dbg !2977

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ], !dbg !2978
  %1 = getelementptr inbounds i16, ptr %invariant.gep, i64 %index, !dbg !2979
  %2 = getelementptr inbounds i8, ptr %1, i64 16, !dbg !2979
  %3 = getelementptr inbounds i8, ptr %1, i64 32, !dbg !2979
  %4 = getelementptr inbounds i8, ptr %1, i64 48, !dbg !2979
  %wide.load = load <8 x i16>, ptr %1, align 2, !dbg !2979
  %wide.load19 = load <8 x i16>, ptr %2, align 2, !dbg !2979
  %wide.load20 = load <8 x i16>, ptr %3, align 2, !dbg !2979
  %wide.load21 = load <8 x i16>, ptr %4, align 2, !dbg !2979
  %5 = getelementptr inbounds i16, ptr %sum8, i64 %index, !dbg !2980
  %6 = getelementptr inbounds i8, ptr %5, i64 16, !dbg !2980
  %7 = getelementptr inbounds i8, ptr %5, i64 32, !dbg !2980
  %8 = getelementptr inbounds i8, ptr %5, i64 48, !dbg !2980
  %wide.load22 = load <8 x i16>, ptr %5, align 2, !dbg !2980
  %wide.load23 = load <8 x i16>, ptr %6, align 2, !dbg !2980
  %wide.load24 = load <8 x i16>, ptr %7, align 2, !dbg !2980
  %wide.load25 = load <8 x i16>, ptr %8, align 2, !dbg !2980
  %9 = sub <8 x i16> %wide.load, %wide.load22, !dbg !2981
  %10 = sub <8 x i16> %wide.load19, %wide.load23, !dbg !2981
  %11 = sub <8 x i16> %wide.load20, %wide.load24, !dbg !2981
  %12 = sub <8 x i16> %wide.load21, %wide.load25, !dbg !2981
  store <8 x i16> %9, ptr %5, align 2, !dbg !2982
  store <8 x i16> %10, ptr %6, align 2, !dbg !2982
  store <8 x i16> %11, ptr %7, align 2, !dbg !2982
  store <8 x i16> %12, ptr %8, align 2, !dbg !2982
  %index.next = add nuw i64 %index, 32, !dbg !2978
  %13 = icmp eq i64 %index.next, %n.vec, !dbg !2978
  br i1 %13, label %middle.block, label %vector.body, !dbg !2978, !llvm.loop !2983

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count, !dbg !2977
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader, !dbg !2977

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  ret void, !dbg !2985

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
    #dbg_value(i64 %indvars.iv, !2971, !DIExpression(), !2974)
  %gep = getelementptr inbounds i16, ptr %invariant.gep, i64 %indvars.iv, !dbg !2979
  %14 = load i16, ptr %gep, align 2, !dbg !2979
  %arrayidx2 = getelementptr inbounds i16, ptr %sum8, i64 %indvars.iv, !dbg !2980
  %15 = load i16, ptr %arrayidx2, align 2, !dbg !2980
  %sub4 = sub i16 %14, %15, !dbg !2981
  store i16 %sub4, ptr %arrayidx2, align 2, !dbg !2982
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2978
    #dbg_value(i64 %indvars.iv.next, !2971, !DIExpression(), !2974)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !2975
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !2977, !llvm.loop !2986
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define internal void @mbtree_propagate_cost(ptr nocapture noundef writeonly %dst, ptr nocapture noundef readonly %propagate_in, ptr nocapture noundef readonly %intra_costs, ptr nocapture noundef readonly %inter_costs, ptr nocapture noundef readonly %inv_qscales, i32 noundef %len) #10 !dbg !2987 {
entry:
    #dbg_value(ptr %dst, !2989, !DIExpression(), !3000)
    #dbg_value(ptr %propagate_in, !2990, !DIExpression(), !3000)
    #dbg_value(ptr %intra_costs, !2991, !DIExpression(), !3000)
    #dbg_value(ptr %inter_costs, !2992, !DIExpression(), !3000)
    #dbg_value(ptr %inv_qscales, !2993, !DIExpression(), !3000)
    #dbg_value(i32 %len, !2994, !DIExpression(), !3000)
    #dbg_value(i32 0, !2995, !DIExpression(), !3001)
  %cmp33 = icmp sgt i32 %len, 0, !dbg !3002
  br i1 %cmp33, label %for.body.preheader, label %for.cond.cleanup, !dbg !3003

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext nneg i32 %len to i64, !dbg !3002
  %min.iters.check = icmp ult i32 %len, 4, !dbg !3003
  br i1 %min.iters.check, label %for.body.preheader51, label %vector.memcheck, !dbg !3003

for.body.preheader51:                             ; preds = %middle.block, %vector.memcheck, %for.body.preheader
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body, !dbg !3003

vector.memcheck:                                  ; preds = %for.body.preheader
  %0 = shl nuw nsw i64 %wide.trip.count, 2, !dbg !3003
  %scevgep = getelementptr i8, ptr %dst, i64 %0, !dbg !3003
  %1 = shl nuw nsw i64 %wide.trip.count, 1, !dbg !3003
  %scevgep36 = getelementptr i8, ptr %propagate_in, i64 %1, !dbg !3003
  %scevgep37 = getelementptr i8, ptr %intra_costs, i64 %1, !dbg !3003
  %scevgep38 = getelementptr i8, ptr %inv_qscales, i64 %1, !dbg !3003
  %scevgep39 = getelementptr i8, ptr %inter_costs, i64 %1, !dbg !3003
  %bound0 = icmp ugt ptr %scevgep36, %dst, !dbg !3003
  %bound1 = icmp ugt ptr %scevgep, %propagate_in, !dbg !3003
  %found.conflict = and i1 %bound0, %bound1, !dbg !3003
  %bound040 = icmp ugt ptr %scevgep37, %dst, !dbg !3003
  %bound141 = icmp ugt ptr %scevgep, %intra_costs, !dbg !3003
  %found.conflict42 = and i1 %bound040, %bound141, !dbg !3003
  %conflict.rdx = or i1 %found.conflict, %found.conflict42, !dbg !3003
  %bound043 = icmp ugt ptr %scevgep38, %dst, !dbg !3003
  %bound144 = icmp ugt ptr %scevgep, %inv_qscales, !dbg !3003
  %found.conflict45 = and i1 %bound043, %bound144, !dbg !3003
  %conflict.rdx46 = or i1 %conflict.rdx, %found.conflict45, !dbg !3003
  %bound047 = icmp ugt ptr %scevgep39, %dst, !dbg !3003
  %bound148 = icmp ugt ptr %scevgep, %inter_costs, !dbg !3003
  %found.conflict49 = and i1 %bound047, %bound148, !dbg !3003
  %conflict.rdx50 = or i1 %conflict.rdx46, %found.conflict49, !dbg !3003
  br i1 %conflict.rdx50, label %for.body.preheader51, label %vector.ph, !dbg !3003

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 2147483644, !dbg !3003
  br label %vector.body, !dbg !3003

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ], !dbg !3004
  %2 = or disjoint i64 %index, 1, !dbg !3003
  %3 = or disjoint i64 %index, 2, !dbg !3003
  %4 = or disjoint i64 %index, 3, !dbg !3003
  %5 = getelementptr inbounds i16, ptr %propagate_in, i64 %index, !dbg !3005
  %6 = getelementptr inbounds i16, ptr %propagate_in, i64 %2, !dbg !3005
  %7 = getelementptr inbounds i16, ptr %propagate_in, i64 %3, !dbg !3005
  %8 = getelementptr inbounds i16, ptr %propagate_in, i64 %4, !dbg !3005
  %9 = load i16, ptr %5, align 2, !dbg !3005, !alias.scope !3006
  %10 = load i16, ptr %6, align 2, !dbg !3005, !alias.scope !3006
  %11 = load i16, ptr %7, align 2, !dbg !3005, !alias.scope !3006
  %12 = load i16, ptr %8, align 2, !dbg !3005, !alias.scope !3006
  %13 = zext i16 %9 to i32, !dbg !3005
  %14 = zext i16 %10 to i32, !dbg !3005
  %15 = zext i16 %11 to i32, !dbg !3005
  %16 = zext i16 %12 to i32, !dbg !3005
  %17 = getelementptr inbounds i16, ptr %intra_costs, i64 %index, !dbg !3009
  %18 = getelementptr inbounds i16, ptr %intra_costs, i64 %2, !dbg !3009
  %19 = getelementptr inbounds i16, ptr %intra_costs, i64 %3, !dbg !3009
  %20 = getelementptr inbounds i16, ptr %intra_costs, i64 %4, !dbg !3009
  %21 = load i16, ptr %17, align 2, !dbg !3009, !alias.scope !3010
  %22 = load i16, ptr %18, align 2, !dbg !3009, !alias.scope !3010
  %23 = load i16, ptr %19, align 2, !dbg !3009, !alias.scope !3010
  %24 = load i16, ptr %20, align 2, !dbg !3009, !alias.scope !3010
  %25 = zext i16 %21 to i32, !dbg !3009
  %26 = zext i16 %22 to i32, !dbg !3009
  %27 = zext i16 %23 to i32, !dbg !3009
  %28 = zext i16 %24 to i32, !dbg !3009
  %29 = getelementptr inbounds i16, ptr %inv_qscales, i64 %index, !dbg !3012
  %30 = getelementptr inbounds i16, ptr %inv_qscales, i64 %2, !dbg !3012
  %31 = getelementptr inbounds i16, ptr %inv_qscales, i64 %3, !dbg !3012
  %32 = getelementptr inbounds i16, ptr %inv_qscales, i64 %4, !dbg !3012
  %33 = load i16, ptr %29, align 2, !dbg !3012, !alias.scope !3013
  %34 = load i16, ptr %30, align 2, !dbg !3012, !alias.scope !3013
  %35 = load i16, ptr %31, align 2, !dbg !3012, !alias.scope !3013
  %36 = load i16, ptr %32, align 2, !dbg !3012, !alias.scope !3013
  %37 = zext i16 %33 to i32, !dbg !3012
  %38 = zext i16 %34 to i32, !dbg !3012
  %39 = zext i16 %35 to i32, !dbg !3012
  %40 = zext i16 %36 to i32, !dbg !3012
  %41 = mul nuw nsw i32 %37, %25, !dbg !3015
  %42 = mul nuw nsw i32 %38, %26, !dbg !3015
  %43 = mul nuw nsw i32 %39, %27, !dbg !3015
  %44 = mul nuw nsw i32 %40, %28, !dbg !3015
  %45 = add nuw nsw i32 %41, 128, !dbg !3016
  %46 = add nuw nsw i32 %42, 128, !dbg !3016
  %47 = add nuw nsw i32 %43, 128, !dbg !3016
  %48 = add nuw nsw i32 %44, 128, !dbg !3016
  %49 = lshr i32 %45, 8, !dbg !3017
  %50 = lshr i32 %46, 8, !dbg !3017
  %51 = lshr i32 %47, 8, !dbg !3017
  %52 = lshr i32 %48, 8, !dbg !3017
  %53 = add nuw nsw i32 %49, %13, !dbg !3018
  %54 = add nuw nsw i32 %50, %14, !dbg !3018
  %55 = add nuw nsw i32 %51, %15, !dbg !3018
  %56 = add nuw nsw i32 %52, %16, !dbg !3018
  %57 = zext nneg i32 %53 to i64, !dbg !3019
  %58 = zext nneg i32 %54 to i64, !dbg !3019
  %59 = zext nneg i32 %55 to i64, !dbg !3019
  %60 = zext nneg i32 %56 to i64, !dbg !3019
  %61 = getelementptr inbounds i16, ptr %inter_costs, i64 %index, !dbg !3019
  %62 = getelementptr inbounds i16, ptr %inter_costs, i64 %2, !dbg !3019
  %63 = getelementptr inbounds i16, ptr %inter_costs, i64 %3, !dbg !3019
  %64 = getelementptr inbounds i16, ptr %inter_costs, i64 %4, !dbg !3019
  %65 = load i16, ptr %61, align 2, !dbg !3019, !alias.scope !3020
  %66 = load i16, ptr %62, align 2, !dbg !3019, !alias.scope !3020
  %67 = load i16, ptr %63, align 2, !dbg !3019, !alias.scope !3020
  %68 = load i16, ptr %64, align 2, !dbg !3019, !alias.scope !3020
  %69 = and i16 %65, 16383, !dbg !3019
  %70 = and i16 %66, 16383, !dbg !3019
  %71 = and i16 %67, 16383, !dbg !3019
  %72 = and i16 %68, 16383, !dbg !3019
  %73 = zext nneg i16 %69 to i32, !dbg !3019
  %74 = zext nneg i16 %70 to i32, !dbg !3019
  %75 = zext nneg i16 %71 to i32, !dbg !3019
  %76 = zext nneg i16 %72 to i32, !dbg !3019
  %77 = sub nsw i32 %25, %73, !dbg !3019
  %78 = sub nsw i32 %26, %74, !dbg !3019
  %79 = sub nsw i32 %27, %75, !dbg !3019
  %80 = sub nsw i32 %28, %76, !dbg !3019
  %81 = sext i32 %77 to i64, !dbg !3019
  %82 = sext i32 %78 to i64, !dbg !3019
  %83 = sext i32 %79 to i64, !dbg !3019
  %84 = sext i32 %80 to i64, !dbg !3019
  %85 = mul nsw i64 %57, %81, !dbg !3019
  %86 = mul nsw i64 %58, %82, !dbg !3019
  %87 = mul nsw i64 %59, %83, !dbg !3019
  %88 = mul nsw i64 %60, %84, !dbg !3019
  %89 = zext i16 %21 to i64, !dbg !3019
  %90 = zext i16 %22 to i64, !dbg !3019
  %91 = zext i16 %23 to i64, !dbg !3019
  %92 = zext i16 %24 to i64, !dbg !3019
  %93 = sdiv i64 %85, %89, !dbg !3019
  %94 = sdiv i64 %86, %90, !dbg !3019
  %95 = sdiv i64 %87, %91, !dbg !3019
  %96 = sdiv i64 %88, %92, !dbg !3019
  %97 = trunc i64 %93 to i32, !dbg !3019
  %98 = trunc i64 %94 to i32, !dbg !3019
  %99 = trunc i64 %95 to i32, !dbg !3019
  %100 = trunc i64 %96 to i32, !dbg !3019
  %101 = getelementptr inbounds i32, ptr %dst, i64 %index, !dbg !3022
  %102 = getelementptr inbounds i32, ptr %dst, i64 %2, !dbg !3022
  %103 = getelementptr inbounds i32, ptr %dst, i64 %3, !dbg !3022
  %104 = getelementptr inbounds i32, ptr %dst, i64 %4, !dbg !3022
  store i32 %97, ptr %101, align 4, !dbg !3023, !alias.scope !3024, !noalias !3026
  store i32 %98, ptr %102, align 4, !dbg !3023, !alias.scope !3024, !noalias !3026
  store i32 %99, ptr %103, align 4, !dbg !3023, !alias.scope !3024, !noalias !3026
  store i32 %100, ptr %104, align 4, !dbg !3023, !alias.scope !3024, !noalias !3026
  %index.next = add nuw i64 %index, 4, !dbg !3004
  %105 = icmp eq i64 %index.next, %n.vec, !dbg !3004
  br i1 %105, label %middle.block, label %vector.body, !dbg !3004, !llvm.loop !3027

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count, !dbg !3003
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader51, !dbg !3003

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %entry
  ret void, !dbg !3029

for.body:                                         ; preds = %for.body.preheader51, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader51 ]
    #dbg_value(i64 %indvars.iv, !2995, !DIExpression(), !3001)
  %arrayidx = getelementptr inbounds i16, ptr %propagate_in, i64 %indvars.iv, !dbg !3005
  %106 = load i16, ptr %arrayidx, align 2, !dbg !3005
  %conv = zext i16 %106 to i32, !dbg !3005
  %arrayidx2 = getelementptr inbounds i16, ptr %intra_costs, i64 %indvars.iv, !dbg !3009
  %107 = load i16, ptr %arrayidx2, align 2, !dbg !3009
  %conv3 = zext i16 %107 to i32, !dbg !3009
  %arrayidx5 = getelementptr inbounds i16, ptr %inv_qscales, i64 %indvars.iv, !dbg !3012
  %108 = load i16, ptr %arrayidx5, align 2, !dbg !3012
  %conv6 = zext i16 %108 to i32, !dbg !3012
  %mul = mul nuw nsw i32 %conv6, %conv3, !dbg !3015
  %add = add nuw nsw i32 %mul, 128, !dbg !3016
  %shr = lshr i32 %add, 8, !dbg !3017
  %add7 = add nuw nsw i32 %shr, %conv, !dbg !3018
    #dbg_value(i32 %add7, !2997, !DIExpression(), !3030)
  %conv8 = zext nneg i32 %add7 to i64, !dbg !3019
  %arrayidx13 = getelementptr inbounds i16, ptr %inter_costs, i64 %indvars.iv, !dbg !3019
  %109 = load i16, ptr %arrayidx13, align 2, !dbg !3019
  %110 = and i16 %109, 16383, !dbg !3019
  %and = zext nneg i16 %110 to i32, !dbg !3019
  %sub = sub nsw i32 %conv3, %and, !dbg !3019
  %conv15 = sext i32 %sub to i64, !dbg !3019
  %mul16 = mul nsw i64 %conv8, %conv15, !dbg !3019
  %conv19 = zext i16 %107 to i64, !dbg !3019
  %div = sdiv i64 %mul16, %conv19, !dbg !3019
  %conv20 = trunc i64 %div to i32, !dbg !3019
  %arrayidx22 = getelementptr inbounds i32, ptr %dst, i64 %indvars.iv, !dbg !3022
  store i32 %conv20, ptr %arrayidx22, align 4, !dbg !3023
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3004
    #dbg_value(i64 %indvars.iv.next, !2995, !DIExpression(), !3001)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !3002
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !3003, !llvm.loop !3031
}

; Function Attrs: nounwind uwtable
define dso_local void @x264_frame_filter(ptr nocapture noundef readonly %h, ptr nocapture noundef readonly %frame, i32 noundef %mb_y, i32 noundef %b_end) local_unnamed_addr #2 !dbg !3032 {
entry:
    #dbg_value(ptr %h, !3036, !DIExpression(), !3057)
    #dbg_value(ptr %frame, !3037, !DIExpression(), !3057)
    #dbg_value(i32 %mb_y, !3038, !DIExpression(), !3057)
    #dbg_value(i32 %b_end, !3039, !DIExpression(), !3057)
  %b_mbaff = getelementptr inbounds i8, ptr %h, i64 7268, !dbg !3058
  %0 = load i32, ptr %b_mbaff, align 4, !dbg !3058
    #dbg_value(i32 %0, !3040, !DIExpression(), !3057)
  %i_stride = getelementptr inbounds i8, ptr %frame, i64 104, !dbg !3059
  %1 = load i32, ptr %i_stride, align 8, !dbg !3060
  %shl = shl i32 %1, %0, !dbg !3061
    #dbg_value(i32 %shl, !3041, !DIExpression(), !3057)
  %i_width = getelementptr inbounds i8, ptr %frame, i64 116, !dbg !3062
  %2 = load i32, ptr %i_width, align 4, !dbg !3063
    #dbg_value(i32 %2, !3042, !DIExpression(), !3057)
  %mul = shl nsw i32 %mb_y, 4, !dbg !3064
  %shr = ashr i32 %mul, %0, !dbg !3065
  %sub = add nsw i32 %shr, -8, !dbg !3066
    #dbg_value(i32 %sub, !3043, !DIExpression(), !3057)
  %tobool.not = icmp eq i32 %b_end, 0, !dbg !3067
  br i1 %tobool.not, label %cond.end, label %cond.true, !dbg !3067

cond.true:                                        ; preds = %entry
  %i_lines = getelementptr inbounds i8, ptr %frame, i64 128, !dbg !3068
  %3 = load i32, ptr %i_lines, align 16, !dbg !3069
  %.pre = ashr i32 %3, %0, !dbg !3070
  br label %cond.end, !dbg !3067

cond.end:                                         ; preds = %entry, %cond.true
  %shr4.pre-phi = phi i32 [ %shr, %entry ], [ %.pre, %cond.true ], !dbg !3070
  %add = add nsw i32 %shr4.pre-phi, 8, !dbg !3071
    #dbg_value(i32 %add, !3044, !DIExpression(), !3057)
    #dbg_value(!DIArgList(i32 %sub, i32 %shl), !3045, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_constu, 8, DW_OP_minus, DW_OP_stack_value), !3057)
  %and = and i32 %0, %mb_y, !dbg !3072
  %tobool7.not = icmp eq i32 %and, 0, !dbg !3072
  br i1 %tobool7.not, label %if.end, label %cleanup, !dbg !3074

if.end:                                           ; preds = %cond.end
    #dbg_value(!DIArgList(i32 %sub, i32 %shl), !3045, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_constu, 8, DW_OP_minus, DW_OP_stack_value), !3057)
    #dbg_value(!DIArgList(i32 %sub, i32 %shl), !3045, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_mul, DW_OP_constu, 8, DW_OP_minus, DW_OP_stack_value), !3057)
    #dbg_value(i32 0, !3046, !DIExpression(), !3075)
  %cmp.not155 = icmp slt i32 %0, 0, !dbg !3076
  br i1 %cmp.not155, label %for.cond.cleanup, label %for.body.lr.ph, !dbg !3078

for.body.lr.ph:                                   ; preds = %if.end
  %mul5 = mul nsw i32 %sub, %shl, !dbg !3079
    #dbg_value(i32 %mul5, !3045, !DIExpression(DW_OP_constu, 8, DW_OP_minus, DW_OP_stack_value), !3057)
  %sub6 = add nsw i32 %mul5, -8, !dbg !3080
    #dbg_value(i32 %sub6, !3045, !DIExpression(), !3057)
  %hpel_filter = getelementptr inbounds i8, ptr %h, i64 32792
  %arrayidx8 = getelementptr inbounds i8, ptr %frame, i64 184
  %arrayidx10 = getelementptr inbounds i8, ptr %frame, i64 192
  %arrayidx14 = getelementptr inbounds i8, ptr %frame, i64 200
  %plane = getelementptr inbounds i8, ptr %frame, i64 152
  %add20 = add nsw i32 %2, 16
  %sub21 = sub nsw i32 %add, %sub
  %scratch_buffer = getelementptr inbounds i8, ptr %h, i64 31176
  br label %for.body, !dbg !3078

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %integral = getelementptr inbounds i8, ptr %frame, i64 240, !dbg !3081
  %4 = load ptr, ptr %integral, align 16, !dbg !3081
  %tobool25.not = icmp eq ptr %4, null, !dbg !3082
  br i1 %tobool25.not, label %cleanup, label %if.then26, !dbg !3083

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %y.0157 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body ]
  %offs.0156 = phi i32 [ %sub6, %for.body.lr.ph ], [ %add24, %for.body ]
    #dbg_value(i32 %y.0157, !3046, !DIExpression(), !3075)
    #dbg_value(i32 %offs.0156, !3045, !DIExpression(), !3057)
  %5 = load ptr, ptr %hpel_filter, align 8, !dbg !3084
  %6 = load ptr, ptr %arrayidx8, align 8, !dbg !3086
  %idx.ext = sext i32 %offs.0156 to i64, !dbg !3087
  %add.ptr = getelementptr inbounds i8, ptr %6, i64 %idx.ext, !dbg !3087
  %7 = load ptr, ptr %arrayidx10, align 16, !dbg !3088
  %add.ptr12 = getelementptr inbounds i8, ptr %7, i64 %idx.ext, !dbg !3089
  %8 = load ptr, ptr %arrayidx14, align 8, !dbg !3090
  %add.ptr16 = getelementptr inbounds i8, ptr %8, i64 %idx.ext, !dbg !3091
  %9 = load ptr, ptr %plane, align 8, !dbg !3092
  %add.ptr19 = getelementptr inbounds i8, ptr %9, i64 %idx.ext, !dbg !3093
  %10 = load ptr, ptr %scratch_buffer, align 8, !dbg !3094
  tail call void %5(ptr noundef %add.ptr, ptr noundef %add.ptr12, ptr noundef %add.ptr16, ptr noundef %add.ptr19, i32 noundef %shl, i32 noundef %add20, i32 noundef %sub21, ptr noundef %10) #13, !dbg !3095
  %inc = add nuw i32 %y.0157, 1, !dbg !3096
    #dbg_value(i32 %inc, !3046, !DIExpression(), !3075)
  %11 = load i32, ptr %i_stride, align 8, !dbg !3097
  %add24 = add nsw i32 %11, %offs.0156, !dbg !3098
    #dbg_value(i32 %add24, !3045, !DIExpression(), !3057)
  %exitcond.not = icmp eq i32 %y.0157, %0, !dbg !3076
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !3078, !llvm.loop !3099

if.then26:                                        ; preds = %for.cond.cleanup
  %cmp27 = icmp slt i32 %shr, 8, !dbg !3101
  br i1 %cmp27, label %if.then28, label %if.end35, !dbg !3103

if.then28:                                        ; preds = %if.then26
  %mul30 = shl nsw i32 %shl, 5, !dbg !3104
  %idx.ext31 = sext i32 %mul30 to i64, !dbg !3106
  %idx.neg = sub nsw i64 0, %idx.ext31, !dbg !3106
  %add.ptr32 = getelementptr inbounds i16, ptr %4, i64 %idx.neg, !dbg !3106
  %add.ptr33 = getelementptr inbounds i8, ptr %add.ptr32, i64 -64, !dbg !3107
  %conv = sext i32 %shl to i64, !dbg !3108
  %mul34 = shl nsw i64 %conv, 1, !dbg !3109
  tail call void @llvm.memset.p0.i64(ptr nonnull align 2 %add.ptr33, i8 0, i64 %mul34, i1 false), !dbg !3110
    #dbg_value(i32 -32, !3043, !DIExpression(), !3057)
  br label %if.end35, !dbg !3111

if.end35:                                         ; preds = %if.then28, %if.then26
  %start.0 = phi i32 [ -32, %if.then28 ], [ %sub, %if.then26 ], !dbg !3057
    #dbg_value(i32 %start.0, !3043, !DIExpression(), !3057)
  %add38 = add nsw i32 %shr4.pre-phi, 31
  %spec.select = select i1 %tobool.not, i32 %add, i32 %add38, !dbg !3112
    #dbg_value(i32 %spec.select, !3044, !DIExpression(), !3057)
    #dbg_value(i32 %start.0, !3048, !DIExpression(), !3113)
  %cmp42158 = icmp slt i32 %start.0, %spec.select, !dbg !3114
  br i1 %cmp42158, label %for.body45.lr.ph, label %cleanup, !dbg !3115

for.body45.lr.ph:                                 ; preds = %if.end35
  %plane46 = getelementptr inbounds i8, ptr %frame, i64 152
  %b_have_sub8x8_esa = getelementptr inbounds i8, ptr %h, i64 14676
  %integral_init4h = getelementptr inbounds i8, ptr %h, i64 32832
  %mul61 = shl nsw i32 %shl, 3
  %idx.ext62 = sext i32 %mul61 to i64
  %idx.neg63 = sub nsw i64 0, %idx.ext62
  %i_lines65 = getelementptr inbounds i8, ptr %frame, i64 128
  %integral_init4v = getelementptr inbounds i8, ptr %h, i64 32848
  %integral_init8h = getelementptr inbounds i8, ptr %h, i64 32840
  %integral_init8v = getelementptr inbounds i8, ptr %h, i64 32856
  %12 = sext i32 %start.0 to i64, !dbg !3115
  %13 = sext i32 %shl to i64, !dbg !3115
  br label %for.body45, !dbg !3115

for.body45:                                       ; preds = %for.body45.lr.ph, %if.end86
  %indvars.iv = phi i64 [ %12, %for.body45.lr.ph ], [ %indvars.iv.next, %if.end86 ]
    #dbg_value(i64 %indvars.iv, !3048, !DIExpression(), !3113)
  %14 = load ptr, ptr %plane46, align 8, !dbg !3116
  %15 = mul nsw i64 %indvars.iv, %13, !dbg !3117
  %add.ptr50 = getelementptr inbounds i8, ptr %14, i64 %15, !dbg !3118
  %add.ptr51 = getelementptr inbounds i8, ptr %add.ptr50, i64 -32, !dbg !3119
    #dbg_value(ptr %add.ptr51, !3052, !DIExpression(), !3120)
  %16 = load ptr, ptr %integral, align 16, !dbg !3121
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !3122
  %17 = mul nsw i64 %indvars.iv.next, %13, !dbg !3123
  %add.ptr56 = getelementptr inbounds i16, ptr %16, i64 %17, !dbg !3124
  %add.ptr57 = getelementptr inbounds i8, ptr %add.ptr56, i64 -64, !dbg !3125
    #dbg_value(ptr %add.ptr57, !3055, !DIExpression(), !3120)
  %18 = load i32, ptr %b_have_sub8x8_esa, align 4, !dbg !3126
  %tobool58.not = icmp eq i32 %18, 0, !dbg !3128
  %cmp77 = icmp sgt i64 %indvars.iv, -25, !dbg !3129
  br i1 %tobool58.not, label %if.else, label %if.then59, !dbg !3130

if.then59:                                        ; preds = %for.body45
  %19 = load ptr, ptr %integral_init4h, align 8, !dbg !3131
  tail call void %19(ptr noundef nonnull %add.ptr57, ptr noundef nonnull %add.ptr51, i32 noundef %shl) #13, !dbg !3133
    #dbg_value(!DIArgList(ptr %add.ptr57, i64 0, i32 %shl), !3055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_constu, 3, DW_OP_shl, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_minus, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
    #dbg_value(!DIArgList(ptr poison, i32 poison, i32 poison), !3056, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_plus_uconst, 64, DW_OP_mul, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  br i1 %cmp77, label %if.then73, label %if.end86, !dbg !3134

if.then73:                                        ; preds = %if.then59
    #dbg_value(!DIArgList(ptr %add.ptr57, i64 %idx.neg63), !3055, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  %add.ptr64 = getelementptr inbounds i16, ptr %add.ptr57, i64 %idx.neg63, !dbg !3135
    #dbg_value(ptr %add.ptr64, !3055, !DIExpression(), !3120)
  %20 = load i32, ptr %i_lines65, align 16, !dbg !3136
    #dbg_value(!DIArgList(ptr %add.ptr64, i32 %shl, i32 %20), !3056, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_plus_uconst, 64, DW_OP_mul, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  %add67 = add nsw i32 %20, 64, !dbg !3137
    #dbg_value(!DIArgList(ptr %add.ptr64, i32 %shl, i32 %add67), !3056, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_mul, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  %mul68 = mul nsw i32 %add67, %shl, !dbg !3138
    #dbg_value(!DIArgList(ptr %add.ptr64, i32 %mul68), !3056, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  %idx.ext69 = sext i32 %mul68 to i64, !dbg !3139
    #dbg_value(!DIArgList(ptr %add.ptr64, i64 %idx.ext69), !3056, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 2, DW_OP_mul, DW_OP_plus, DW_OP_stack_value), !3120)
  %add.ptr70 = getelementptr inbounds i16, ptr %add.ptr64, i64 %idx.ext69, !dbg !3139
    #dbg_value(ptr %add.ptr70, !3056, !DIExpression(), !3120)
  %21 = load ptr, ptr %integral_init4v, align 8, !dbg !3140
  tail call void %21(ptr noundef nonnull %add.ptr64, ptr noundef nonnull %add.ptr70, i32 noundef %shl) #13, !dbg !3142
  br label %if.end86, !dbg !3142

if.else:                                          ; preds = %for.body45
  %22 = load ptr, ptr %integral_init8h, align 8, !dbg !3143
  tail call void %22(ptr noundef nonnull %add.ptr57, ptr noundef nonnull %add.ptr51, i32 noundef %shl) #13, !dbg !3145
  br i1 %cmp77, label %if.then79, label %if.end86, !dbg !3146

if.then79:                                        ; preds = %if.else
  %23 = load ptr, ptr %integral_init8v, align 8, !dbg !3147
  %add.ptr84 = getelementptr inbounds i16, ptr %add.ptr57, i64 %idx.neg63, !dbg !3149
  tail call void %23(ptr noundef nonnull %add.ptr84, i32 noundef %shl) #13, !dbg !3150
  br label %if.end86, !dbg !3150

if.end86:                                         ; preds = %if.else, %if.then79, %if.then59, %if.then73
    #dbg_value(i64 %indvars.iv.next, !3048, !DIExpression(), !3113)
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32, !dbg !3114
  %exitcond163.not = icmp eq i32 %spec.select, %lftr.wideiv, !dbg !3114
  br i1 %exitcond163.not, label %cleanup, label %for.body45, !dbg !3115, !llvm.loop !3151

cleanup:                                          ; preds = %if.end86, %if.end35, %for.cond.cleanup, %cond.end
  ret void, !dbg !3153
}

; Function Attrs: inlinehint nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @pixel_avg_weight_wxh(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst, ptr nocapture noundef readonly %src1, i32 noundef %i_src1, ptr nocapture noundef readonly %src2, i32 noundef %i_src2, i32 noundef %width, i32 noundef %height, i32 noundef %i_weight1) unnamed_addr #11 !dbg !2328 {
entry:
    #dbg_value(ptr %dst, !2327, !DIExpression(), !3154)
    #dbg_value(i32 %i_dst, !2332, !DIExpression(), !3154)
    #dbg_value(ptr %src1, !2333, !DIExpression(), !3154)
    #dbg_value(i32 %i_src1, !2334, !DIExpression(), !3154)
    #dbg_value(ptr %src2, !2335, !DIExpression(), !3154)
    #dbg_value(i32 %i_src2, !2336, !DIExpression(), !3154)
    #dbg_value(i32 %width, !2337, !DIExpression(), !3154)
    #dbg_value(i32 %height, !2338, !DIExpression(), !3154)
    #dbg_value(i32 %i_weight1, !2339, !DIExpression(), !3154)
  %sub = sub nsw i32 64, %i_weight1, !dbg !3155
    #dbg_value(i32 %sub, !2340, !DIExpression(), !3154)
    #dbg_value(i32 0, !2342, !DIExpression(), !3156)
    #dbg_value(ptr %dst, !2327, !DIExpression(), !3154)
    #dbg_value(ptr %src1, !2333, !DIExpression(), !3154)
    #dbg_value(ptr %src2, !2335, !DIExpression(), !3154)
  %cmp327 = icmp sgt i32 %height, 0, !dbg !3157
  br i1 %cmp327, label %for.body.lr.ph, label %for.cond.cleanup, !dbg !3158

for.body.lr.ph:                                   ; preds = %entry
  %cmp17 = icmp eq i32 %width, 2
  %cmp41 = icmp eq i32 %width, 4
  %cmp89 = icmp eq i32 %width, 8
  %idx.ext = sext i32 %i_dst to i64
  %idx.ext181 = sext i32 %i_src1 to i64
  %idx.ext183 = sext i32 %i_src2 to i64
  br i1 %cmp17, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.body.us
  %y.0331.us = phi i32 [ %inc.us, %for.body.us ], [ 0, %for.body.lr.ph ]
  %dst.addr.0330.us = phi ptr [ %add.ptr.us, %for.body.us ], [ %dst, %for.body.lr.ph ]
  %src1.addr.0329.us = phi ptr [ %add.ptr182.us, %for.body.us ], [ %src1, %for.body.lr.ph ]
  %src2.addr.0328.us = phi ptr [ %add.ptr184.us, %for.body.us ], [ %src2, %for.body.lr.ph ]
    #dbg_value(i32 %y.0331.us, !2342, !DIExpression(), !3156)
    #dbg_value(ptr %dst.addr.0330.us, !2327, !DIExpression(), !3154)
    #dbg_value(ptr %src1.addr.0329.us, !2333, !DIExpression(), !3154)
    #dbg_value(ptr %src2.addr.0328.us, !2335, !DIExpression(), !3154)
  %0 = load i8, ptr %src1.addr.0329.us, align 1, !dbg !3159
  %conv.us = zext i8 %0 to i32, !dbg !3159
  %mul.us = mul nsw i32 %conv.us, %i_weight1, !dbg !3159
  %1 = load i8, ptr %src2.addr.0328.us, align 1, !dbg !3159
  %conv2.us = zext i8 %1 to i32, !dbg !3159
  %mul3.us = mul nsw i32 %sub, %conv2.us, !dbg !3159
  %add.us = add i32 %mul.us, 32, !dbg !3159
  %add4.us = add i32 %add.us, %mul3.us, !dbg !3159
  %shr.us = ashr i32 %add4.us, 6, !dbg !3159
    #dbg_value(i32 %shr.us, !1702, !DIExpression(), !3160)
  %tobool.not.i.us = icmp ult i32 %shr.us, 256, !dbg !3162
  %2 = icmp sgt i32 %shr.us, 0, !dbg !3163
  %shr.i.us = sext i1 %2 to i32, !dbg !3163
  %cond.i.us = select i1 %tobool.not.i.us, i32 %shr.us, i32 %shr.i.us, !dbg !3163
  %conv.i.us = trunc i32 %cond.i.us to i8, !dbg !3163
  store i8 %conv.i.us, ptr %dst.addr.0330.us, align 1, !dbg !3159
  %arrayidx6.us = getelementptr inbounds i8, ptr %src1.addr.0329.us, i64 1, !dbg !3164
  %3 = load i8, ptr %arrayidx6.us, align 1, !dbg !3164
  %conv7.us = zext i8 %3 to i32, !dbg !3164
  %mul8.us = mul nsw i32 %conv7.us, %i_weight1, !dbg !3164
  %arrayidx9.us = getelementptr inbounds i8, ptr %src2.addr.0328.us, i64 1, !dbg !3164
  %4 = load i8, ptr %arrayidx9.us, align 1, !dbg !3164
  %conv10.us = zext i8 %4 to i32, !dbg !3164
  %mul11.us = mul nsw i32 %sub, %conv10.us, !dbg !3164
  %add12.us = add i32 %mul8.us, 32, !dbg !3164
  %add13.us = add i32 %add12.us, %mul11.us, !dbg !3164
  %shr14.us = ashr i32 %add13.us, 6, !dbg !3164
    #dbg_value(i32 %shr14.us, !1702, !DIExpression(), !3165)
  %tobool.not.i267.us = icmp ult i32 %shr14.us, 256, !dbg !3167
  %5 = icmp sgt i32 %shr14.us, 0, !dbg !3168
  %shr.i268.us = sext i1 %5 to i32, !dbg !3168
  %cond.i269.us = select i1 %tobool.not.i267.us, i32 %shr14.us, i32 %shr.i268.us, !dbg !3168
  %conv.i270.us = trunc i32 %cond.i269.us to i8, !dbg !3168
  %arrayidx16.us = getelementptr inbounds i8, ptr %dst.addr.0330.us, i64 1, !dbg !3164
  store i8 %conv.i270.us, ptr %arrayidx16.us, align 1, !dbg !3164
  %inc.us = add nuw nsw i32 %y.0331.us, 1, !dbg !3169
    #dbg_value(i32 %inc.us, !2342, !DIExpression(), !3156)
  %add.ptr.us = getelementptr inbounds i8, ptr %dst.addr.0330.us, i64 %idx.ext, !dbg !3170
    #dbg_value(ptr %add.ptr.us, !2327, !DIExpression(), !3154)
  %add.ptr182.us = getelementptr inbounds i8, ptr %src1.addr.0329.us, i64 %idx.ext181, !dbg !3171
    #dbg_value(ptr %add.ptr182.us, !2333, !DIExpression(), !3154)
  %add.ptr184.us = getelementptr inbounds i8, ptr %src2.addr.0328.us, i64 %idx.ext183, !dbg !3172
    #dbg_value(ptr %add.ptr184.us, !2335, !DIExpression(), !3154)
  %exitcond333.not = icmp eq i32 %inc.us, %height, !dbg !3157
  br i1 %exitcond333.not, label %for.cond.cleanup, label %for.body.us, !dbg !3158, !llvm.loop !3173

for.cond.cleanup:                                 ; preds = %for.inc, %for.body.us, %entry
  ret void, !dbg !3175

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %y.0331 = phi i32 [ %inc, %for.inc ], [ 0, %for.body.lr.ph ]
  %dst.addr.0330 = phi ptr [ %add.ptr, %for.inc ], [ %dst, %for.body.lr.ph ]
  %src1.addr.0329 = phi ptr [ %add.ptr182, %for.inc ], [ %src1, %for.body.lr.ph ]
  %src2.addr.0328 = phi ptr [ %add.ptr184, %for.inc ], [ %src2, %for.body.lr.ph ]
    #dbg_value(i32 %y.0331, !2342, !DIExpression(), !3156)
    #dbg_value(ptr %dst.addr.0330, !2327, !DIExpression(), !3154)
    #dbg_value(ptr %src1.addr.0329, !2333, !DIExpression(), !3154)
    #dbg_value(ptr %src2.addr.0328, !2335, !DIExpression(), !3154)
  %6 = load i8, ptr %src1.addr.0329, align 1, !dbg !3159
  %conv = zext i8 %6 to i32, !dbg !3159
  %mul = mul nsw i32 %conv, %i_weight1, !dbg !3159
  %7 = load i8, ptr %src2.addr.0328, align 1, !dbg !3159
  %conv2 = zext i8 %7 to i32, !dbg !3159
  %mul3 = mul nsw i32 %sub, %conv2, !dbg !3159
  %add = add i32 %mul, 32, !dbg !3159
  %add4 = add i32 %add, %mul3, !dbg !3159
  %shr = ashr i32 %add4, 6, !dbg !3159
    #dbg_value(i32 %shr, !1702, !DIExpression(), !3160)
  %tobool.not.i = icmp ult i32 %shr, 256, !dbg !3162
  %8 = icmp sgt i32 %shr, 0, !dbg !3163
  %shr.i = sext i1 %8 to i32, !dbg !3163
  %cond.i = select i1 %tobool.not.i, i32 %shr, i32 %shr.i, !dbg !3163
  %conv.i = trunc i32 %cond.i to i8, !dbg !3163
  store i8 %conv.i, ptr %dst.addr.0330, align 1, !dbg !3159
  %arrayidx6 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 1, !dbg !3164
  %9 = load i8, ptr %arrayidx6, align 1, !dbg !3164
  %conv7 = zext i8 %9 to i32, !dbg !3164
  %mul8 = mul nsw i32 %conv7, %i_weight1, !dbg !3164
  %arrayidx9 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 1, !dbg !3164
  %10 = load i8, ptr %arrayidx9, align 1, !dbg !3164
  %conv10 = zext i8 %10 to i32, !dbg !3164
  %mul11 = mul nsw i32 %sub, %conv10, !dbg !3164
  %add12 = add i32 %mul8, 32, !dbg !3164
  %add13 = add i32 %add12, %mul11, !dbg !3164
  %shr14 = ashr i32 %add13, 6, !dbg !3164
    #dbg_value(i32 %shr14, !1702, !DIExpression(), !3165)
  %tobool.not.i267 = icmp ult i32 %shr14, 256, !dbg !3167
  %11 = icmp sgt i32 %shr14, 0, !dbg !3168
  %shr.i268 = sext i1 %11 to i32, !dbg !3168
  %cond.i269 = select i1 %tobool.not.i267, i32 %shr14, i32 %shr.i268, !dbg !3168
  %conv.i270 = trunc i32 %cond.i269 to i8, !dbg !3168
  %arrayidx16 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 1, !dbg !3164
  store i8 %conv.i270, ptr %arrayidx16, align 1, !dbg !3164
  %arrayidx19 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 2, !dbg !3176
  %12 = load i8, ptr %arrayidx19, align 1, !dbg !3176
  %conv20 = zext i8 %12 to i32, !dbg !3176
  %mul21 = mul nsw i32 %conv20, %i_weight1, !dbg !3176
  %arrayidx22 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 2, !dbg !3176
  %13 = load i8, ptr %arrayidx22, align 1, !dbg !3176
  %conv23 = zext i8 %13 to i32, !dbg !3176
  %mul24 = mul nsw i32 %sub, %conv23, !dbg !3176
  %add25 = add i32 %mul21, 32, !dbg !3176
  %add26 = add i32 %add25, %mul24, !dbg !3176
  %shr27 = ashr i32 %add26, 6, !dbg !3176
    #dbg_value(i32 %shr27, !1702, !DIExpression(), !3177)
  %tobool.not.i271 = icmp ult i32 %shr27, 256, !dbg !3179
  %14 = icmp sgt i32 %shr27, 0, !dbg !3180
  %shr.i272 = sext i1 %14 to i32, !dbg !3180
  %cond.i273 = select i1 %tobool.not.i271, i32 %shr27, i32 %shr.i272, !dbg !3180
  %conv.i274 = trunc i32 %cond.i273 to i8, !dbg !3180
  %arrayidx29 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 2, !dbg !3176
  store i8 %conv.i274, ptr %arrayidx29, align 1, !dbg !3176
  %arrayidx30 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 3, !dbg !3181
  %15 = load i8, ptr %arrayidx30, align 1, !dbg !3181
  %conv31 = zext i8 %15 to i32, !dbg !3181
  %mul32 = mul nsw i32 %conv31, %i_weight1, !dbg !3181
  %arrayidx33 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 3, !dbg !3181
  %16 = load i8, ptr %arrayidx33, align 1, !dbg !3181
  %conv34 = zext i8 %16 to i32, !dbg !3181
  %mul35 = mul nsw i32 %sub, %conv34, !dbg !3181
  %add36 = add i32 %mul32, 32, !dbg !3181
  %add37 = add i32 %add36, %mul35, !dbg !3181
  %shr38 = ashr i32 %add37, 6, !dbg !3181
    #dbg_value(i32 %shr38, !1702, !DIExpression(), !3182)
  %tobool.not.i275 = icmp ult i32 %shr38, 256, !dbg !3184
  %17 = icmp sgt i32 %shr38, 0, !dbg !3185
  %shr.i276 = sext i1 %17 to i32, !dbg !3185
  %cond.i277 = select i1 %tobool.not.i275, i32 %shr38, i32 %shr.i276, !dbg !3185
  %conv.i278 = trunc i32 %cond.i277 to i8, !dbg !3185
  %arrayidx40 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 3, !dbg !3181
  store i8 %conv.i278, ptr %arrayidx40, align 1, !dbg !3181
  br i1 %cmp41, label %for.inc, label %if.end44, !dbg !3186

if.end44:                                         ; preds = %for.body
  %arrayidx45 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 4, !dbg !3187
  %18 = load i8, ptr %arrayidx45, align 1, !dbg !3187
  %conv46 = zext i8 %18 to i32, !dbg !3187
  %mul47 = mul nsw i32 %conv46, %i_weight1, !dbg !3187
  %arrayidx48 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 4, !dbg !3187
  %19 = load i8, ptr %arrayidx48, align 1, !dbg !3187
  %conv49 = zext i8 %19 to i32, !dbg !3187
  %mul50 = mul nsw i32 %sub, %conv49, !dbg !3187
  %add51 = add i32 %mul47, 32, !dbg !3187
  %add52 = add i32 %add51, %mul50, !dbg !3187
  %shr53 = ashr i32 %add52, 6, !dbg !3187
    #dbg_value(i32 %shr53, !1702, !DIExpression(), !3188)
  %tobool.not.i279 = icmp ult i32 %shr53, 256, !dbg !3190
  %20 = icmp sgt i32 %shr53, 0, !dbg !3191
  %shr.i280 = sext i1 %20 to i32, !dbg !3191
  %cond.i281 = select i1 %tobool.not.i279, i32 %shr53, i32 %shr.i280, !dbg !3191
  %conv.i282 = trunc i32 %cond.i281 to i8, !dbg !3191
  %arrayidx55 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 4, !dbg !3187
  store i8 %conv.i282, ptr %arrayidx55, align 1, !dbg !3187
  %arrayidx56 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 5, !dbg !3192
  %21 = load i8, ptr %arrayidx56, align 1, !dbg !3192
  %conv57 = zext i8 %21 to i32, !dbg !3192
  %mul58 = mul nsw i32 %conv57, %i_weight1, !dbg !3192
  %arrayidx59 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 5, !dbg !3192
  %22 = load i8, ptr %arrayidx59, align 1, !dbg !3192
  %conv60 = zext i8 %22 to i32, !dbg !3192
  %mul61 = mul nsw i32 %sub, %conv60, !dbg !3192
  %add62 = add i32 %mul58, 32, !dbg !3192
  %add63 = add i32 %add62, %mul61, !dbg !3192
  %shr64 = ashr i32 %add63, 6, !dbg !3192
    #dbg_value(i32 %shr64, !1702, !DIExpression(), !3193)
  %tobool.not.i283 = icmp ult i32 %shr64, 256, !dbg !3195
  %23 = icmp sgt i32 %shr64, 0, !dbg !3196
  %shr.i284 = sext i1 %23 to i32, !dbg !3196
  %cond.i285 = select i1 %tobool.not.i283, i32 %shr64, i32 %shr.i284, !dbg !3196
  %conv.i286 = trunc i32 %cond.i285 to i8, !dbg !3196
  %arrayidx66 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 5, !dbg !3192
  store i8 %conv.i286, ptr %arrayidx66, align 1, !dbg !3192
  %arrayidx67 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 6, !dbg !3197
  %24 = load i8, ptr %arrayidx67, align 1, !dbg !3197
  %conv68 = zext i8 %24 to i32, !dbg !3197
  %mul69 = mul nsw i32 %conv68, %i_weight1, !dbg !3197
  %arrayidx70 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 6, !dbg !3197
  %25 = load i8, ptr %arrayidx70, align 1, !dbg !3197
  %conv71 = zext i8 %25 to i32, !dbg !3197
  %mul72 = mul nsw i32 %sub, %conv71, !dbg !3197
  %add73 = add i32 %mul69, 32, !dbg !3197
  %add74 = add i32 %add73, %mul72, !dbg !3197
  %shr75 = ashr i32 %add74, 6, !dbg !3197
    #dbg_value(i32 %shr75, !1702, !DIExpression(), !3198)
  %tobool.not.i287 = icmp ult i32 %shr75, 256, !dbg !3200
  %26 = icmp sgt i32 %shr75, 0, !dbg !3201
  %shr.i288 = sext i1 %26 to i32, !dbg !3201
  %cond.i289 = select i1 %tobool.not.i287, i32 %shr75, i32 %shr.i288, !dbg !3201
  %conv.i290 = trunc i32 %cond.i289 to i8, !dbg !3201
  %arrayidx77 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 6, !dbg !3197
  store i8 %conv.i290, ptr %arrayidx77, align 1, !dbg !3197
  %arrayidx78 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 7, !dbg !3202
  %27 = load i8, ptr %arrayidx78, align 1, !dbg !3202
  %conv79 = zext i8 %27 to i32, !dbg !3202
  %mul80 = mul nsw i32 %conv79, %i_weight1, !dbg !3202
  %arrayidx81 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 7, !dbg !3202
  %28 = load i8, ptr %arrayidx81, align 1, !dbg !3202
  %conv82 = zext i8 %28 to i32, !dbg !3202
  %mul83 = mul nsw i32 %sub, %conv82, !dbg !3202
  %add84 = add i32 %mul80, 32, !dbg !3202
  %add85 = add i32 %add84, %mul83, !dbg !3202
  %shr86 = ashr i32 %add85, 6, !dbg !3202
    #dbg_value(i32 %shr86, !1702, !DIExpression(), !3203)
  %tobool.not.i291 = icmp ult i32 %shr86, 256, !dbg !3205
  %29 = icmp sgt i32 %shr86, 0, !dbg !3206
  %shr.i292 = sext i1 %29 to i32, !dbg !3206
  %cond.i293 = select i1 %tobool.not.i291, i32 %shr86, i32 %shr.i292, !dbg !3206
  %conv.i294 = trunc i32 %cond.i293 to i8, !dbg !3206
  %arrayidx88 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 7, !dbg !3202
  store i8 %conv.i294, ptr %arrayidx88, align 1, !dbg !3202
  br i1 %cmp89, label %for.inc, label %if.end92, !dbg !3207

if.end92:                                         ; preds = %if.end44
  %arrayidx93 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 8, !dbg !3208
  %30 = load i8, ptr %arrayidx93, align 1, !dbg !3208
  %conv94 = zext i8 %30 to i32, !dbg !3208
  %mul95 = mul nsw i32 %conv94, %i_weight1, !dbg !3208
  %arrayidx96 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 8, !dbg !3208
  %31 = load i8, ptr %arrayidx96, align 1, !dbg !3208
  %conv97 = zext i8 %31 to i32, !dbg !3208
  %mul98 = mul nsw i32 %sub, %conv97, !dbg !3208
  %add99 = add i32 %mul95, 32, !dbg !3208
  %add100 = add i32 %add99, %mul98, !dbg !3208
  %shr101 = ashr i32 %add100, 6, !dbg !3208
    #dbg_value(i32 %shr101, !1702, !DIExpression(), !3209)
  %tobool.not.i295 = icmp ult i32 %shr101, 256, !dbg !3211
  %32 = icmp sgt i32 %shr101, 0, !dbg !3212
  %shr.i296 = sext i1 %32 to i32, !dbg !3212
  %cond.i297 = select i1 %tobool.not.i295, i32 %shr101, i32 %shr.i296, !dbg !3212
  %conv.i298 = trunc i32 %cond.i297 to i8, !dbg !3212
  %arrayidx103 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 8, !dbg !3208
  store i8 %conv.i298, ptr %arrayidx103, align 1, !dbg !3208
  %arrayidx104 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 9, !dbg !3213
  %33 = load i8, ptr %arrayidx104, align 1, !dbg !3213
  %conv105 = zext i8 %33 to i32, !dbg !3213
  %mul106 = mul nsw i32 %conv105, %i_weight1, !dbg !3213
  %arrayidx107 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 9, !dbg !3213
  %34 = load i8, ptr %arrayidx107, align 1, !dbg !3213
  %conv108 = zext i8 %34 to i32, !dbg !3213
  %mul109 = mul nsw i32 %sub, %conv108, !dbg !3213
  %add110 = add i32 %mul106, 32, !dbg !3213
  %add111 = add i32 %add110, %mul109, !dbg !3213
  %shr112 = ashr i32 %add111, 6, !dbg !3213
    #dbg_value(i32 %shr112, !1702, !DIExpression(), !3214)
  %tobool.not.i299 = icmp ult i32 %shr112, 256, !dbg !3216
  %35 = icmp sgt i32 %shr112, 0, !dbg !3217
  %shr.i300 = sext i1 %35 to i32, !dbg !3217
  %cond.i301 = select i1 %tobool.not.i299, i32 %shr112, i32 %shr.i300, !dbg !3217
  %conv.i302 = trunc i32 %cond.i301 to i8, !dbg !3217
  %arrayidx114 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 9, !dbg !3213
  store i8 %conv.i302, ptr %arrayidx114, align 1, !dbg !3213
  %arrayidx115 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 10, !dbg !3218
  %36 = load i8, ptr %arrayidx115, align 1, !dbg !3218
  %conv116 = zext i8 %36 to i32, !dbg !3218
  %mul117 = mul nsw i32 %conv116, %i_weight1, !dbg !3218
  %arrayidx118 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 10, !dbg !3218
  %37 = load i8, ptr %arrayidx118, align 1, !dbg !3218
  %conv119 = zext i8 %37 to i32, !dbg !3218
  %mul120 = mul nsw i32 %sub, %conv119, !dbg !3218
  %add121 = add i32 %mul117, 32, !dbg !3218
  %add122 = add i32 %add121, %mul120, !dbg !3218
  %shr123 = ashr i32 %add122, 6, !dbg !3218
    #dbg_value(i32 %shr123, !1702, !DIExpression(), !3219)
  %tobool.not.i303 = icmp ult i32 %shr123, 256, !dbg !3221
  %38 = icmp sgt i32 %shr123, 0, !dbg !3222
  %shr.i304 = sext i1 %38 to i32, !dbg !3222
  %cond.i305 = select i1 %tobool.not.i303, i32 %shr123, i32 %shr.i304, !dbg !3222
  %conv.i306 = trunc i32 %cond.i305 to i8, !dbg !3222
  %arrayidx125 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 10, !dbg !3218
  store i8 %conv.i306, ptr %arrayidx125, align 1, !dbg !3218
  %arrayidx126 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 11, !dbg !3223
  %39 = load i8, ptr %arrayidx126, align 1, !dbg !3223
  %conv127 = zext i8 %39 to i32, !dbg !3223
  %mul128 = mul nsw i32 %conv127, %i_weight1, !dbg !3223
  %arrayidx129 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 11, !dbg !3223
  %40 = load i8, ptr %arrayidx129, align 1, !dbg !3223
  %conv130 = zext i8 %40 to i32, !dbg !3223
  %mul131 = mul nsw i32 %sub, %conv130, !dbg !3223
  %add132 = add i32 %mul128, 32, !dbg !3223
  %add133 = add i32 %add132, %mul131, !dbg !3223
  %shr134 = ashr i32 %add133, 6, !dbg !3223
    #dbg_value(i32 %shr134, !1702, !DIExpression(), !3224)
  %tobool.not.i307 = icmp ult i32 %shr134, 256, !dbg !3226
  %41 = icmp sgt i32 %shr134, 0, !dbg !3227
  %shr.i308 = sext i1 %41 to i32, !dbg !3227
  %cond.i309 = select i1 %tobool.not.i307, i32 %shr134, i32 %shr.i308, !dbg !3227
  %conv.i310 = trunc i32 %cond.i309 to i8, !dbg !3227
  %arrayidx136 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 11, !dbg !3223
  store i8 %conv.i310, ptr %arrayidx136, align 1, !dbg !3223
  %arrayidx137 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 12, !dbg !3228
  %42 = load i8, ptr %arrayidx137, align 1, !dbg !3228
  %conv138 = zext i8 %42 to i32, !dbg !3228
  %mul139 = mul nsw i32 %conv138, %i_weight1, !dbg !3228
  %arrayidx140 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 12, !dbg !3228
  %43 = load i8, ptr %arrayidx140, align 1, !dbg !3228
  %conv141 = zext i8 %43 to i32, !dbg !3228
  %mul142 = mul nsw i32 %sub, %conv141, !dbg !3228
  %add143 = add i32 %mul139, 32, !dbg !3228
  %add144 = add i32 %add143, %mul142, !dbg !3228
  %shr145 = ashr i32 %add144, 6, !dbg !3228
    #dbg_value(i32 %shr145, !1702, !DIExpression(), !3229)
  %tobool.not.i311 = icmp ult i32 %shr145, 256, !dbg !3231
  %44 = icmp sgt i32 %shr145, 0, !dbg !3232
  %shr.i312 = sext i1 %44 to i32, !dbg !3232
  %cond.i313 = select i1 %tobool.not.i311, i32 %shr145, i32 %shr.i312, !dbg !3232
  %conv.i314 = trunc i32 %cond.i313 to i8, !dbg !3232
  %arrayidx147 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 12, !dbg !3228
  store i8 %conv.i314, ptr %arrayidx147, align 1, !dbg !3228
  %arrayidx148 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 13, !dbg !3233
  %45 = load i8, ptr %arrayidx148, align 1, !dbg !3233
  %conv149 = zext i8 %45 to i32, !dbg !3233
  %mul150 = mul nsw i32 %conv149, %i_weight1, !dbg !3233
  %arrayidx151 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 13, !dbg !3233
  %46 = load i8, ptr %arrayidx151, align 1, !dbg !3233
  %conv152 = zext i8 %46 to i32, !dbg !3233
  %mul153 = mul nsw i32 %sub, %conv152, !dbg !3233
  %add154 = add i32 %mul150, 32, !dbg !3233
  %add155 = add i32 %add154, %mul153, !dbg !3233
  %shr156 = ashr i32 %add155, 6, !dbg !3233
    #dbg_value(i32 %shr156, !1702, !DIExpression(), !3234)
  %tobool.not.i315 = icmp ult i32 %shr156, 256, !dbg !3236
  %47 = icmp sgt i32 %shr156, 0, !dbg !3237
  %shr.i316 = sext i1 %47 to i32, !dbg !3237
  %cond.i317 = select i1 %tobool.not.i315, i32 %shr156, i32 %shr.i316, !dbg !3237
  %conv.i318 = trunc i32 %cond.i317 to i8, !dbg !3237
  %arrayidx158 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 13, !dbg !3233
  store i8 %conv.i318, ptr %arrayidx158, align 1, !dbg !3233
  %arrayidx159 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 14, !dbg !3238
  %48 = load i8, ptr %arrayidx159, align 1, !dbg !3238
  %conv160 = zext i8 %48 to i32, !dbg !3238
  %mul161 = mul nsw i32 %conv160, %i_weight1, !dbg !3238
  %arrayidx162 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 14, !dbg !3238
  %49 = load i8, ptr %arrayidx162, align 1, !dbg !3238
  %conv163 = zext i8 %49 to i32, !dbg !3238
  %mul164 = mul nsw i32 %sub, %conv163, !dbg !3238
  %add165 = add i32 %mul161, 32, !dbg !3238
  %add166 = add i32 %add165, %mul164, !dbg !3238
  %shr167 = ashr i32 %add166, 6, !dbg !3238
    #dbg_value(i32 %shr167, !1702, !DIExpression(), !3239)
  %tobool.not.i319 = icmp ult i32 %shr167, 256, !dbg !3241
  %50 = icmp sgt i32 %shr167, 0, !dbg !3242
  %shr.i320 = sext i1 %50 to i32, !dbg !3242
  %cond.i321 = select i1 %tobool.not.i319, i32 %shr167, i32 %shr.i320, !dbg !3242
  %conv.i322 = trunc i32 %cond.i321 to i8, !dbg !3242
  %arrayidx169 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 14, !dbg !3238
  store i8 %conv.i322, ptr %arrayidx169, align 1, !dbg !3238
  %arrayidx170 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 15, !dbg !3243
  %51 = load i8, ptr %arrayidx170, align 1, !dbg !3243
  %conv171 = zext i8 %51 to i32, !dbg !3243
  %mul172 = mul nsw i32 %conv171, %i_weight1, !dbg !3243
  %arrayidx173 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 15, !dbg !3243
  %52 = load i8, ptr %arrayidx173, align 1, !dbg !3243
  %conv174 = zext i8 %52 to i32, !dbg !3243
  %mul175 = mul nsw i32 %sub, %conv174, !dbg !3243
  %add176 = add i32 %mul172, 32, !dbg !3243
  %add177 = add i32 %add176, %mul175, !dbg !3243
  %shr178 = ashr i32 %add177, 6, !dbg !3243
    #dbg_value(i32 %shr178, !1702, !DIExpression(), !3244)
  %tobool.not.i323 = icmp ult i32 %shr178, 256, !dbg !3246
  %53 = icmp sgt i32 %shr178, 0, !dbg !3247
  %shr.i324 = sext i1 %53 to i32, !dbg !3247
  %cond.i325 = select i1 %tobool.not.i323, i32 %shr178, i32 %shr.i324, !dbg !3247
  %conv.i326 = trunc i32 %cond.i325 to i8, !dbg !3247
  %arrayidx180 = getelementptr inbounds i8, ptr %dst.addr.0330, i64 15, !dbg !3243
  store i8 %conv.i326, ptr %arrayidx180, align 1, !dbg !3243
  br label %for.inc, !dbg !3248

for.inc:                                          ; preds = %if.end44, %for.body, %if.end92
  %inc = add nuw nsw i32 %y.0331, 1, !dbg !3169
    #dbg_value(i32 %inc, !2342, !DIExpression(), !3156)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.0330, i64 %idx.ext, !dbg !3170
    #dbg_value(ptr %add.ptr, !2327, !DIExpression(), !3154)
  %add.ptr182 = getelementptr inbounds i8, ptr %src1.addr.0329, i64 %idx.ext181, !dbg !3171
    #dbg_value(ptr %add.ptr182, !2333, !DIExpression(), !3154)
  %add.ptr184 = getelementptr inbounds i8, ptr %src2.addr.0328, i64 %idx.ext183, !dbg !3172
    #dbg_value(ptr %add.ptr184, !2335, !DIExpression(), !3154)
  %exitcond.not = icmp eq i32 %inc, %height, !dbg !3157
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !dbg !3158, !llvm.loop !3173
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w2(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3249 {
entry:
    #dbg_value(ptr %dst, !3253, !DIExpression(), !3272)
    #dbg_value(i32 %i_dst_stride, !3254, !DIExpression(), !3272)
    #dbg_value(ptr %src, !3255, !DIExpression(), !3272)
    #dbg_value(i32 %i_src_stride, !3256, !DIExpression(), !3272)
    #dbg_value(ptr %weight, !3257, !DIExpression(), !3272)
    #dbg_value(i32 %height, !3258, !DIExpression(), !3272)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3273
  %0 = load i32, ptr %i_denom, align 16, !dbg !3273
  %cmp = icmp sgt i32 %0, 0, !dbg !3273
    #dbg_value(ptr %dst, !3253, !DIExpression(), !3272)
    #dbg_value(ptr %dst, !3253, !DIExpression(), !3272)
    #dbg_value(ptr %src, !3255, !DIExpression(), !3272)
    #dbg_value(ptr %src, !3255, !DIExpression(), !3272)
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3273
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3274

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3266, !DIExpression(), !3275)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3276

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3276

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3259, !DIExpression(), !3277)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3278

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  br label %for.cond2.preheader, !dbg !3278

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond2.preheader
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond2.preheader ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond2.preheader ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond2.preheader ]
    #dbg_value(i32 %y.085, !3259, !DIExpression(), !3277)
    #dbg_value(ptr %dst.addr.084, !3253, !DIExpression(), !3272)
    #dbg_value(ptr %src.addr.083, !3255, !DIExpression(), !3272)
    #dbg_value(i32 0, !3263, !DIExpression(), !3279)
    #dbg_value(i64 0, !3263, !DIExpression(), !3279)
  %1 = load i8, ptr %src.addr.083, align 1, !dbg !3280
  %conv = zext i8 %1 to i32, !dbg !3280
  %2 = load i32, ptr %i_scale, align 4, !dbg !3280
  %mul = mul nsw i32 %2, %conv, !dbg !3280
  %3 = load i32, ptr %i_denom, align 16, !dbg !3280
  %sub = add nsw i32 %3, -1, !dbg !3280
  %shl = shl nuw i32 1, %sub, !dbg !3280
  %add = add nsw i32 %shl, %mul, !dbg !3280
  %shr = ashr i32 %add, %3, !dbg !3280
  %4 = load i32, ptr %i_offset, align 8, !dbg !3280
  %add8 = add nsw i32 %shr, %4, !dbg !3280
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3282)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3284
  %5 = icmp sgt i32 %add8, 0, !dbg !3285
  %shr.i = sext i1 %5 to i32, !dbg !3285
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3285
  %conv.i = trunc i32 %cond.i to i8, !dbg !3285
  store i8 %conv.i, ptr %dst.addr.084, align 1, !dbg !3280
    #dbg_value(i64 1, !3263, !DIExpression(), !3279)
  %arrayidx.1 = getelementptr inbounds i8, ptr %src.addr.083, i64 1, !dbg !3280
  %6 = load i8, ptr %arrayidx.1, align 1, !dbg !3280
  %conv.1 = zext i8 %6 to i32, !dbg !3280
  %7 = load i32, ptr %i_scale, align 4, !dbg !3280
  %mul.1 = mul nsw i32 %7, %conv.1, !dbg !3280
  %8 = load i32, ptr %i_denom, align 16, !dbg !3280
  %sub.1 = add nsw i32 %8, -1, !dbg !3280
  %shl.1 = shl nuw i32 1, %sub.1, !dbg !3280
  %add.1 = add nsw i32 %shl.1, %mul.1, !dbg !3280
  %shr.1 = ashr i32 %add.1, %8, !dbg !3280
  %9 = load i32, ptr %i_offset, align 8, !dbg !3280
  %add8.1 = add nsw i32 %shr.1, %9, !dbg !3280
    #dbg_value(i32 %add8.1, !1702, !DIExpression(), !3282)
  %tobool.not.i.1 = icmp ult i32 %add8.1, 256, !dbg !3284
  %10 = icmp sgt i32 %add8.1, 0, !dbg !3285
  %shr.i.1 = sext i1 %10 to i32, !dbg !3285
  %cond.i.1 = select i1 %tobool.not.i.1, i32 %add8.1, i32 %shr.i.1, !dbg !3285
  %conv.i.1 = trunc i32 %cond.i.1 to i8, !dbg !3285
  %arrayidx10.1 = getelementptr inbounds i8, ptr %dst.addr.084, i64 1, !dbg !3280
  store i8 %conv.i.1, ptr %arrayidx10.1, align 1, !dbg !3280
    #dbg_value(i64 2, !3263, !DIExpression(), !3279)
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3286
    #dbg_value(i32 %inc12, !3259, !DIExpression(), !3277)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3286
    #dbg_value(ptr %add.ptr, !3253, !DIExpression(), !3272)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3286
    #dbg_value(ptr %add.ptr14, !3255, !DIExpression(), !3272)
  %exitcond89.not = icmp eq i32 %inc12, %height, !dbg !3286
  br i1 %exitcond89.not, label %if.end, label %for.cond2.preheader, !dbg !3278, !llvm.loop !3287

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3266, !DIExpression(), !3275)
    #dbg_value(ptr %dst.addr.179, !3253, !DIExpression(), !3272)
    #dbg_value(ptr %src.addr.178, !3255, !DIExpression(), !3272)
    #dbg_value(i32 0, !3269, !DIExpression(), !3288)
    #dbg_value(i64 0, !3269, !DIExpression(), !3288)
  %11 = load i8, ptr %src.addr.178, align 1, !dbg !3289
  %conv30 = zext i8 %11 to i32, !dbg !3289
  %12 = load i32, ptr %i_scale31, align 4, !dbg !3289
  %mul32 = mul nsw i32 %12, %conv30, !dbg !3289
  %13 = load i32, ptr %i_offset33, align 8, !dbg !3289
  %add34 = add nsw i32 %mul32, %13, !dbg !3289
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3291)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3293
  %14 = icmp sgt i32 %add34, 0, !dbg !3294
  %shr.i72 = sext i1 %14 to i32, !dbg !3294
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3294
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3294
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3289
    #dbg_value(i64 1, !3269, !DIExpression(), !3288)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3289
  %15 = load i8, ptr %arrayidx29.1, align 1, !dbg !3289
  %conv30.1 = zext i8 %15 to i32, !dbg !3289
  %16 = load i32, ptr %i_scale31, align 4, !dbg !3289
  %mul32.1 = mul nsw i32 %16, %conv30.1, !dbg !3289
  %17 = load i32, ptr %i_offset33, align 8, !dbg !3289
  %add34.1 = add nsw i32 %mul32.1, %17, !dbg !3289
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3291)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3293
  %18 = icmp sgt i32 %add34.1, 0, !dbg !3294
  %shr.i72.1 = sext i1 %18 to i32, !dbg !3294
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3294
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3294
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3289
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3289
    #dbg_value(i64 2, !3269, !DIExpression(), !3288)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3295
    #dbg_value(i32 %inc42, !3266, !DIExpression(), !3275)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3295
    #dbg_value(ptr %add.ptr44, !3253, !DIExpression(), !3272)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3295
    #dbg_value(ptr %add.ptr46, !3255, !DIExpression(), !3272)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3295
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3276, !llvm.loop !3296

if.end:                                           ; preds = %for.cond23.preheader, %for.cond2.preheader, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3274
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w4(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3297 {
entry:
    #dbg_value(ptr %dst, !3299, !DIExpression(), !3318)
    #dbg_value(i32 %i_dst_stride, !3300, !DIExpression(), !3318)
    #dbg_value(ptr %src, !3301, !DIExpression(), !3318)
    #dbg_value(i32 %i_src_stride, !3302, !DIExpression(), !3318)
    #dbg_value(ptr %weight, !3303, !DIExpression(), !3318)
    #dbg_value(i32 %height, !3304, !DIExpression(), !3318)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3319
  %0 = load i32, ptr %i_denom, align 16, !dbg !3319
  %cmp = icmp sgt i32 %0, 0, !dbg !3319
    #dbg_value(ptr %dst, !3299, !DIExpression(), !3318)
    #dbg_value(ptr %dst, !3299, !DIExpression(), !3318)
    #dbg_value(ptr %src, !3301, !DIExpression(), !3318)
    #dbg_value(ptr %src, !3301, !DIExpression(), !3318)
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3319
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3320

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3312, !DIExpression(), !3321)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3322

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3322

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3305, !DIExpression(), !3323)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3324

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  br label %for.cond2.preheader, !dbg !3324

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond2.preheader
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond2.preheader ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond2.preheader ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond2.preheader ]
    #dbg_value(i32 %y.085, !3305, !DIExpression(), !3323)
    #dbg_value(ptr %dst.addr.084, !3299, !DIExpression(), !3318)
    #dbg_value(ptr %src.addr.083, !3301, !DIExpression(), !3318)
    #dbg_value(i32 0, !3309, !DIExpression(), !3325)
    #dbg_value(i64 0, !3309, !DIExpression(), !3325)
  %1 = load i8, ptr %src.addr.083, align 1, !dbg !3326
  %conv = zext i8 %1 to i32, !dbg !3326
  %2 = load i32, ptr %i_scale, align 4, !dbg !3326
  %mul = mul nsw i32 %2, %conv, !dbg !3326
  %3 = load i32, ptr %i_denom, align 16, !dbg !3326
  %sub = add nsw i32 %3, -1, !dbg !3326
  %shl = shl nuw i32 1, %sub, !dbg !3326
  %add = add nsw i32 %shl, %mul, !dbg !3326
  %shr = ashr i32 %add, %3, !dbg !3326
  %4 = load i32, ptr %i_offset, align 8, !dbg !3326
  %add8 = add nsw i32 %shr, %4, !dbg !3326
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3328)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3330
  %5 = icmp sgt i32 %add8, 0, !dbg !3331
  %shr.i = sext i1 %5 to i32, !dbg !3331
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3331
  %conv.i = trunc i32 %cond.i to i8, !dbg !3331
  store i8 %conv.i, ptr %dst.addr.084, align 1, !dbg !3326
    #dbg_value(i64 1, !3309, !DIExpression(), !3325)
  %arrayidx.1 = getelementptr inbounds i8, ptr %src.addr.083, i64 1, !dbg !3326
  %6 = load i8, ptr %arrayidx.1, align 1, !dbg !3326
  %conv.1 = zext i8 %6 to i32, !dbg !3326
  %7 = load i32, ptr %i_scale, align 4, !dbg !3326
  %mul.1 = mul nsw i32 %7, %conv.1, !dbg !3326
  %8 = load i32, ptr %i_denom, align 16, !dbg !3326
  %sub.1 = add nsw i32 %8, -1, !dbg !3326
  %shl.1 = shl nuw i32 1, %sub.1, !dbg !3326
  %add.1 = add nsw i32 %shl.1, %mul.1, !dbg !3326
  %shr.1 = ashr i32 %add.1, %8, !dbg !3326
  %9 = load i32, ptr %i_offset, align 8, !dbg !3326
  %add8.1 = add nsw i32 %shr.1, %9, !dbg !3326
    #dbg_value(i32 %add8.1, !1702, !DIExpression(), !3328)
  %tobool.not.i.1 = icmp ult i32 %add8.1, 256, !dbg !3330
  %10 = icmp sgt i32 %add8.1, 0, !dbg !3331
  %shr.i.1 = sext i1 %10 to i32, !dbg !3331
  %cond.i.1 = select i1 %tobool.not.i.1, i32 %add8.1, i32 %shr.i.1, !dbg !3331
  %conv.i.1 = trunc i32 %cond.i.1 to i8, !dbg !3331
  %arrayidx10.1 = getelementptr inbounds i8, ptr %dst.addr.084, i64 1, !dbg !3326
  store i8 %conv.i.1, ptr %arrayidx10.1, align 1, !dbg !3326
    #dbg_value(i64 2, !3309, !DIExpression(), !3325)
  %arrayidx.2 = getelementptr inbounds i8, ptr %src.addr.083, i64 2, !dbg !3326
  %11 = load i8, ptr %arrayidx.2, align 1, !dbg !3326
  %conv.2 = zext i8 %11 to i32, !dbg !3326
  %12 = load i32, ptr %i_scale, align 4, !dbg !3326
  %mul.2 = mul nsw i32 %12, %conv.2, !dbg !3326
  %13 = load i32, ptr %i_denom, align 16, !dbg !3326
  %sub.2 = add nsw i32 %13, -1, !dbg !3326
  %shl.2 = shl nuw i32 1, %sub.2, !dbg !3326
  %add.2 = add nsw i32 %shl.2, %mul.2, !dbg !3326
  %shr.2 = ashr i32 %add.2, %13, !dbg !3326
  %14 = load i32, ptr %i_offset, align 8, !dbg !3326
  %add8.2 = add nsw i32 %shr.2, %14, !dbg !3326
    #dbg_value(i32 %add8.2, !1702, !DIExpression(), !3328)
  %tobool.not.i.2 = icmp ult i32 %add8.2, 256, !dbg !3330
  %15 = icmp sgt i32 %add8.2, 0, !dbg !3331
  %shr.i.2 = sext i1 %15 to i32, !dbg !3331
  %cond.i.2 = select i1 %tobool.not.i.2, i32 %add8.2, i32 %shr.i.2, !dbg !3331
  %conv.i.2 = trunc i32 %cond.i.2 to i8, !dbg !3331
  %arrayidx10.2 = getelementptr inbounds i8, ptr %dst.addr.084, i64 2, !dbg !3326
  store i8 %conv.i.2, ptr %arrayidx10.2, align 1, !dbg !3326
    #dbg_value(i64 3, !3309, !DIExpression(), !3325)
  %arrayidx.3 = getelementptr inbounds i8, ptr %src.addr.083, i64 3, !dbg !3326
  %16 = load i8, ptr %arrayidx.3, align 1, !dbg !3326
  %conv.3 = zext i8 %16 to i32, !dbg !3326
  %17 = load i32, ptr %i_scale, align 4, !dbg !3326
  %mul.3 = mul nsw i32 %17, %conv.3, !dbg !3326
  %18 = load i32, ptr %i_denom, align 16, !dbg !3326
  %sub.3 = add nsw i32 %18, -1, !dbg !3326
  %shl.3 = shl nuw i32 1, %sub.3, !dbg !3326
  %add.3 = add nsw i32 %shl.3, %mul.3, !dbg !3326
  %shr.3 = ashr i32 %add.3, %18, !dbg !3326
  %19 = load i32, ptr %i_offset, align 8, !dbg !3326
  %add8.3 = add nsw i32 %shr.3, %19, !dbg !3326
    #dbg_value(i32 %add8.3, !1702, !DIExpression(), !3328)
  %tobool.not.i.3 = icmp ult i32 %add8.3, 256, !dbg !3330
  %20 = icmp sgt i32 %add8.3, 0, !dbg !3331
  %shr.i.3 = sext i1 %20 to i32, !dbg !3331
  %cond.i.3 = select i1 %tobool.not.i.3, i32 %add8.3, i32 %shr.i.3, !dbg !3331
  %conv.i.3 = trunc i32 %cond.i.3 to i8, !dbg !3331
  %arrayidx10.3 = getelementptr inbounds i8, ptr %dst.addr.084, i64 3, !dbg !3326
  store i8 %conv.i.3, ptr %arrayidx10.3, align 1, !dbg !3326
    #dbg_value(i64 4, !3309, !DIExpression(), !3325)
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3332
    #dbg_value(i32 %inc12, !3305, !DIExpression(), !3323)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3332
    #dbg_value(ptr %add.ptr, !3299, !DIExpression(), !3318)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3332
    #dbg_value(ptr %add.ptr14, !3301, !DIExpression(), !3318)
  %exitcond90.not = icmp eq i32 %inc12, %height, !dbg !3332
  br i1 %exitcond90.not, label %if.end, label %for.cond2.preheader, !dbg !3324, !llvm.loop !3333

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3312, !DIExpression(), !3321)
    #dbg_value(ptr %dst.addr.179, !3299, !DIExpression(), !3318)
    #dbg_value(ptr %src.addr.178, !3301, !DIExpression(), !3318)
    #dbg_value(i32 0, !3315, !DIExpression(), !3334)
    #dbg_value(i64 0, !3315, !DIExpression(), !3334)
  %21 = load i8, ptr %src.addr.178, align 1, !dbg !3335
  %conv30 = zext i8 %21 to i32, !dbg !3335
  %22 = load i32, ptr %i_scale31, align 4, !dbg !3335
  %mul32 = mul nsw i32 %22, %conv30, !dbg !3335
  %23 = load i32, ptr %i_offset33, align 8, !dbg !3335
  %add34 = add nsw i32 %mul32, %23, !dbg !3335
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3337)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3339
  %24 = icmp sgt i32 %add34, 0, !dbg !3340
  %shr.i72 = sext i1 %24 to i32, !dbg !3340
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3340
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3340
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3335
    #dbg_value(i64 1, !3315, !DIExpression(), !3334)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3335
  %25 = load i8, ptr %arrayidx29.1, align 1, !dbg !3335
  %conv30.1 = zext i8 %25 to i32, !dbg !3335
  %26 = load i32, ptr %i_scale31, align 4, !dbg !3335
  %mul32.1 = mul nsw i32 %26, %conv30.1, !dbg !3335
  %27 = load i32, ptr %i_offset33, align 8, !dbg !3335
  %add34.1 = add nsw i32 %mul32.1, %27, !dbg !3335
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3337)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3339
  %28 = icmp sgt i32 %add34.1, 0, !dbg !3340
  %shr.i72.1 = sext i1 %28 to i32, !dbg !3340
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3340
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3340
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3335
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3335
    #dbg_value(i64 2, !3315, !DIExpression(), !3334)
  %arrayidx29.2 = getelementptr inbounds i8, ptr %src.addr.178, i64 2, !dbg !3335
  %29 = load i8, ptr %arrayidx29.2, align 1, !dbg !3335
  %conv30.2 = zext i8 %29 to i32, !dbg !3335
  %30 = load i32, ptr %i_scale31, align 4, !dbg !3335
  %mul32.2 = mul nsw i32 %30, %conv30.2, !dbg !3335
  %31 = load i32, ptr %i_offset33, align 8, !dbg !3335
  %add34.2 = add nsw i32 %mul32.2, %31, !dbg !3335
    #dbg_value(i32 %add34.2, !1702, !DIExpression(), !3337)
  %tobool.not.i71.2 = icmp ult i32 %add34.2, 256, !dbg !3339
  %32 = icmp sgt i32 %add34.2, 0, !dbg !3340
  %shr.i72.2 = sext i1 %32 to i32, !dbg !3340
  %cond.i73.2 = select i1 %tobool.not.i71.2, i32 %add34.2, i32 %shr.i72.2, !dbg !3340
  %conv.i74.2 = trunc i32 %cond.i73.2 to i8, !dbg !3340
  %arrayidx37.2 = getelementptr inbounds i8, ptr %dst.addr.179, i64 2, !dbg !3335
  store i8 %conv.i74.2, ptr %arrayidx37.2, align 1, !dbg !3335
    #dbg_value(i64 3, !3315, !DIExpression(), !3334)
  %arrayidx29.3 = getelementptr inbounds i8, ptr %src.addr.178, i64 3, !dbg !3335
  %33 = load i8, ptr %arrayidx29.3, align 1, !dbg !3335
  %conv30.3 = zext i8 %33 to i32, !dbg !3335
  %34 = load i32, ptr %i_scale31, align 4, !dbg !3335
  %mul32.3 = mul nsw i32 %34, %conv30.3, !dbg !3335
  %35 = load i32, ptr %i_offset33, align 8, !dbg !3335
  %add34.3 = add nsw i32 %mul32.3, %35, !dbg !3335
    #dbg_value(i32 %add34.3, !1702, !DIExpression(), !3337)
  %tobool.not.i71.3 = icmp ult i32 %add34.3, 256, !dbg !3339
  %36 = icmp sgt i32 %add34.3, 0, !dbg !3340
  %shr.i72.3 = sext i1 %36 to i32, !dbg !3340
  %cond.i73.3 = select i1 %tobool.not.i71.3, i32 %add34.3, i32 %shr.i72.3, !dbg !3340
  %conv.i74.3 = trunc i32 %cond.i73.3 to i8, !dbg !3340
  %arrayidx37.3 = getelementptr inbounds i8, ptr %dst.addr.179, i64 3, !dbg !3335
  store i8 %conv.i74.3, ptr %arrayidx37.3, align 1, !dbg !3335
    #dbg_value(i64 4, !3315, !DIExpression(), !3334)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3341
    #dbg_value(i32 %inc42, !3312, !DIExpression(), !3321)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3341
    #dbg_value(ptr %add.ptr44, !3299, !DIExpression(), !3318)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3341
    #dbg_value(ptr %add.ptr46, !3301, !DIExpression(), !3318)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3341
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3322, !llvm.loop !3342

if.end:                                           ; preds = %for.cond23.preheader, %for.cond2.preheader, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3320
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w8(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3343 {
entry:
    #dbg_value(ptr %dst, !3345, !DIExpression(), !3364)
    #dbg_value(i32 %i_dst_stride, !3346, !DIExpression(), !3364)
    #dbg_value(ptr %src, !3347, !DIExpression(), !3364)
    #dbg_value(i32 %i_src_stride, !3348, !DIExpression(), !3364)
    #dbg_value(ptr %weight, !3349, !DIExpression(), !3364)
    #dbg_value(i32 %height, !3350, !DIExpression(), !3364)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3365
  %0 = load i32, ptr %i_denom, align 16, !dbg !3365
  %cmp = icmp sgt i32 %0, 0, !dbg !3365
    #dbg_value(ptr %dst, !3345, !DIExpression(), !3364)
    #dbg_value(ptr %dst, !3345, !DIExpression(), !3364)
    #dbg_value(ptr %src, !3347, !DIExpression(), !3364)
    #dbg_value(ptr %src, !3347, !DIExpression(), !3364)
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3365
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3366

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3358, !DIExpression(), !3367)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3368

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3368

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3351, !DIExpression(), !3369)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3370

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  br label %for.cond2.preheader, !dbg !3370

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond2.preheader
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond2.preheader ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond2.preheader ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond2.preheader ]
    #dbg_value(i32 %y.085, !3351, !DIExpression(), !3369)
    #dbg_value(ptr %dst.addr.084, !3345, !DIExpression(), !3364)
    #dbg_value(ptr %src.addr.083, !3347, !DIExpression(), !3364)
    #dbg_value(i32 0, !3355, !DIExpression(), !3371)
    #dbg_value(i64 0, !3355, !DIExpression(), !3371)
  %1 = load i8, ptr %src.addr.083, align 1, !dbg !3372
  %conv = zext i8 %1 to i32, !dbg !3372
  %2 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul = mul nsw i32 %2, %conv, !dbg !3372
  %3 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub = add nsw i32 %3, -1, !dbg !3372
  %shl = shl nuw i32 1, %sub, !dbg !3372
  %add = add nsw i32 %shl, %mul, !dbg !3372
  %shr = ashr i32 %add, %3, !dbg !3372
  %4 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8 = add nsw i32 %shr, %4, !dbg !3372
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3374)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3376
  %5 = icmp sgt i32 %add8, 0, !dbg !3377
  %shr.i = sext i1 %5 to i32, !dbg !3377
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3377
  %conv.i = trunc i32 %cond.i to i8, !dbg !3377
  store i8 %conv.i, ptr %dst.addr.084, align 1, !dbg !3372
    #dbg_value(i64 1, !3355, !DIExpression(), !3371)
  %arrayidx.1 = getelementptr inbounds i8, ptr %src.addr.083, i64 1, !dbg !3372
  %6 = load i8, ptr %arrayidx.1, align 1, !dbg !3372
  %conv.1 = zext i8 %6 to i32, !dbg !3372
  %7 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.1 = mul nsw i32 %7, %conv.1, !dbg !3372
  %8 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.1 = add nsw i32 %8, -1, !dbg !3372
  %shl.1 = shl nuw i32 1, %sub.1, !dbg !3372
  %add.1 = add nsw i32 %shl.1, %mul.1, !dbg !3372
  %shr.1 = ashr i32 %add.1, %8, !dbg !3372
  %9 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.1 = add nsw i32 %shr.1, %9, !dbg !3372
    #dbg_value(i32 %add8.1, !1702, !DIExpression(), !3374)
  %tobool.not.i.1 = icmp ult i32 %add8.1, 256, !dbg !3376
  %10 = icmp sgt i32 %add8.1, 0, !dbg !3377
  %shr.i.1 = sext i1 %10 to i32, !dbg !3377
  %cond.i.1 = select i1 %tobool.not.i.1, i32 %add8.1, i32 %shr.i.1, !dbg !3377
  %conv.i.1 = trunc i32 %cond.i.1 to i8, !dbg !3377
  %arrayidx10.1 = getelementptr inbounds i8, ptr %dst.addr.084, i64 1, !dbg !3372
  store i8 %conv.i.1, ptr %arrayidx10.1, align 1, !dbg !3372
    #dbg_value(i64 2, !3355, !DIExpression(), !3371)
  %arrayidx.2 = getelementptr inbounds i8, ptr %src.addr.083, i64 2, !dbg !3372
  %11 = load i8, ptr %arrayidx.2, align 1, !dbg !3372
  %conv.2 = zext i8 %11 to i32, !dbg !3372
  %12 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.2 = mul nsw i32 %12, %conv.2, !dbg !3372
  %13 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.2 = add nsw i32 %13, -1, !dbg !3372
  %shl.2 = shl nuw i32 1, %sub.2, !dbg !3372
  %add.2 = add nsw i32 %shl.2, %mul.2, !dbg !3372
  %shr.2 = ashr i32 %add.2, %13, !dbg !3372
  %14 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.2 = add nsw i32 %shr.2, %14, !dbg !3372
    #dbg_value(i32 %add8.2, !1702, !DIExpression(), !3374)
  %tobool.not.i.2 = icmp ult i32 %add8.2, 256, !dbg !3376
  %15 = icmp sgt i32 %add8.2, 0, !dbg !3377
  %shr.i.2 = sext i1 %15 to i32, !dbg !3377
  %cond.i.2 = select i1 %tobool.not.i.2, i32 %add8.2, i32 %shr.i.2, !dbg !3377
  %conv.i.2 = trunc i32 %cond.i.2 to i8, !dbg !3377
  %arrayidx10.2 = getelementptr inbounds i8, ptr %dst.addr.084, i64 2, !dbg !3372
  store i8 %conv.i.2, ptr %arrayidx10.2, align 1, !dbg !3372
    #dbg_value(i64 3, !3355, !DIExpression(), !3371)
  %arrayidx.3 = getelementptr inbounds i8, ptr %src.addr.083, i64 3, !dbg !3372
  %16 = load i8, ptr %arrayidx.3, align 1, !dbg !3372
  %conv.3 = zext i8 %16 to i32, !dbg !3372
  %17 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.3 = mul nsw i32 %17, %conv.3, !dbg !3372
  %18 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.3 = add nsw i32 %18, -1, !dbg !3372
  %shl.3 = shl nuw i32 1, %sub.3, !dbg !3372
  %add.3 = add nsw i32 %shl.3, %mul.3, !dbg !3372
  %shr.3 = ashr i32 %add.3, %18, !dbg !3372
  %19 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.3 = add nsw i32 %shr.3, %19, !dbg !3372
    #dbg_value(i32 %add8.3, !1702, !DIExpression(), !3374)
  %tobool.not.i.3 = icmp ult i32 %add8.3, 256, !dbg !3376
  %20 = icmp sgt i32 %add8.3, 0, !dbg !3377
  %shr.i.3 = sext i1 %20 to i32, !dbg !3377
  %cond.i.3 = select i1 %tobool.not.i.3, i32 %add8.3, i32 %shr.i.3, !dbg !3377
  %conv.i.3 = trunc i32 %cond.i.3 to i8, !dbg !3377
  %arrayidx10.3 = getelementptr inbounds i8, ptr %dst.addr.084, i64 3, !dbg !3372
  store i8 %conv.i.3, ptr %arrayidx10.3, align 1, !dbg !3372
    #dbg_value(i64 4, !3355, !DIExpression(), !3371)
  %arrayidx.4 = getelementptr inbounds i8, ptr %src.addr.083, i64 4, !dbg !3372
  %21 = load i8, ptr %arrayidx.4, align 1, !dbg !3372
  %conv.4 = zext i8 %21 to i32, !dbg !3372
  %22 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.4 = mul nsw i32 %22, %conv.4, !dbg !3372
  %23 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.4 = add nsw i32 %23, -1, !dbg !3372
  %shl.4 = shl nuw i32 1, %sub.4, !dbg !3372
  %add.4 = add nsw i32 %shl.4, %mul.4, !dbg !3372
  %shr.4 = ashr i32 %add.4, %23, !dbg !3372
  %24 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.4 = add nsw i32 %shr.4, %24, !dbg !3372
    #dbg_value(i32 %add8.4, !1702, !DIExpression(), !3374)
  %tobool.not.i.4 = icmp ult i32 %add8.4, 256, !dbg !3376
  %25 = icmp sgt i32 %add8.4, 0, !dbg !3377
  %shr.i.4 = sext i1 %25 to i32, !dbg !3377
  %cond.i.4 = select i1 %tobool.not.i.4, i32 %add8.4, i32 %shr.i.4, !dbg !3377
  %conv.i.4 = trunc i32 %cond.i.4 to i8, !dbg !3377
  %arrayidx10.4 = getelementptr inbounds i8, ptr %dst.addr.084, i64 4, !dbg !3372
  store i8 %conv.i.4, ptr %arrayidx10.4, align 1, !dbg !3372
    #dbg_value(i64 5, !3355, !DIExpression(), !3371)
  %arrayidx.5 = getelementptr inbounds i8, ptr %src.addr.083, i64 5, !dbg !3372
  %26 = load i8, ptr %arrayidx.5, align 1, !dbg !3372
  %conv.5 = zext i8 %26 to i32, !dbg !3372
  %27 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.5 = mul nsw i32 %27, %conv.5, !dbg !3372
  %28 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.5 = add nsw i32 %28, -1, !dbg !3372
  %shl.5 = shl nuw i32 1, %sub.5, !dbg !3372
  %add.5 = add nsw i32 %shl.5, %mul.5, !dbg !3372
  %shr.5 = ashr i32 %add.5, %28, !dbg !3372
  %29 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.5 = add nsw i32 %shr.5, %29, !dbg !3372
    #dbg_value(i32 %add8.5, !1702, !DIExpression(), !3374)
  %tobool.not.i.5 = icmp ult i32 %add8.5, 256, !dbg !3376
  %30 = icmp sgt i32 %add8.5, 0, !dbg !3377
  %shr.i.5 = sext i1 %30 to i32, !dbg !3377
  %cond.i.5 = select i1 %tobool.not.i.5, i32 %add8.5, i32 %shr.i.5, !dbg !3377
  %conv.i.5 = trunc i32 %cond.i.5 to i8, !dbg !3377
  %arrayidx10.5 = getelementptr inbounds i8, ptr %dst.addr.084, i64 5, !dbg !3372
  store i8 %conv.i.5, ptr %arrayidx10.5, align 1, !dbg !3372
    #dbg_value(i64 6, !3355, !DIExpression(), !3371)
  %arrayidx.6 = getelementptr inbounds i8, ptr %src.addr.083, i64 6, !dbg !3372
  %31 = load i8, ptr %arrayidx.6, align 1, !dbg !3372
  %conv.6 = zext i8 %31 to i32, !dbg !3372
  %32 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.6 = mul nsw i32 %32, %conv.6, !dbg !3372
  %33 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.6 = add nsw i32 %33, -1, !dbg !3372
  %shl.6 = shl nuw i32 1, %sub.6, !dbg !3372
  %add.6 = add nsw i32 %shl.6, %mul.6, !dbg !3372
  %shr.6 = ashr i32 %add.6, %33, !dbg !3372
  %34 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.6 = add nsw i32 %shr.6, %34, !dbg !3372
    #dbg_value(i32 %add8.6, !1702, !DIExpression(), !3374)
  %tobool.not.i.6 = icmp ult i32 %add8.6, 256, !dbg !3376
  %35 = icmp sgt i32 %add8.6, 0, !dbg !3377
  %shr.i.6 = sext i1 %35 to i32, !dbg !3377
  %cond.i.6 = select i1 %tobool.not.i.6, i32 %add8.6, i32 %shr.i.6, !dbg !3377
  %conv.i.6 = trunc i32 %cond.i.6 to i8, !dbg !3377
  %arrayidx10.6 = getelementptr inbounds i8, ptr %dst.addr.084, i64 6, !dbg !3372
  store i8 %conv.i.6, ptr %arrayidx10.6, align 1, !dbg !3372
    #dbg_value(i64 7, !3355, !DIExpression(), !3371)
  %arrayidx.7 = getelementptr inbounds i8, ptr %src.addr.083, i64 7, !dbg !3372
  %36 = load i8, ptr %arrayidx.7, align 1, !dbg !3372
  %conv.7 = zext i8 %36 to i32, !dbg !3372
  %37 = load i32, ptr %i_scale, align 4, !dbg !3372
  %mul.7 = mul nsw i32 %37, %conv.7, !dbg !3372
  %38 = load i32, ptr %i_denom, align 16, !dbg !3372
  %sub.7 = add nsw i32 %38, -1, !dbg !3372
  %shl.7 = shl nuw i32 1, %sub.7, !dbg !3372
  %add.7 = add nsw i32 %shl.7, %mul.7, !dbg !3372
  %shr.7 = ashr i32 %add.7, %38, !dbg !3372
  %39 = load i32, ptr %i_offset, align 8, !dbg !3372
  %add8.7 = add nsw i32 %shr.7, %39, !dbg !3372
    #dbg_value(i32 %add8.7, !1702, !DIExpression(), !3374)
  %tobool.not.i.7 = icmp ult i32 %add8.7, 256, !dbg !3376
  %40 = icmp sgt i32 %add8.7, 0, !dbg !3377
  %shr.i.7 = sext i1 %40 to i32, !dbg !3377
  %cond.i.7 = select i1 %tobool.not.i.7, i32 %add8.7, i32 %shr.i.7, !dbg !3377
  %conv.i.7 = trunc i32 %cond.i.7 to i8, !dbg !3377
  %arrayidx10.7 = getelementptr inbounds i8, ptr %dst.addr.084, i64 7, !dbg !3372
  store i8 %conv.i.7, ptr %arrayidx10.7, align 1, !dbg !3372
    #dbg_value(i64 8, !3355, !DIExpression(), !3371)
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3378
    #dbg_value(i32 %inc12, !3351, !DIExpression(), !3369)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3378
    #dbg_value(ptr %add.ptr, !3345, !DIExpression(), !3364)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3378
    #dbg_value(ptr %add.ptr14, !3347, !DIExpression(), !3364)
  %exitcond90.not = icmp eq i32 %inc12, %height, !dbg !3378
  br i1 %exitcond90.not, label %if.end, label %for.cond2.preheader, !dbg !3370, !llvm.loop !3379

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3358, !DIExpression(), !3367)
    #dbg_value(ptr %dst.addr.179, !3345, !DIExpression(), !3364)
    #dbg_value(ptr %src.addr.178, !3347, !DIExpression(), !3364)
    #dbg_value(i32 0, !3361, !DIExpression(), !3380)
    #dbg_value(i64 0, !3361, !DIExpression(), !3380)
  %41 = load i8, ptr %src.addr.178, align 1, !dbg !3381
  %conv30 = zext i8 %41 to i32, !dbg !3381
  %42 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32 = mul nsw i32 %42, %conv30, !dbg !3381
  %43 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34 = add nsw i32 %mul32, %43, !dbg !3381
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3383)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3385
  %44 = icmp sgt i32 %add34, 0, !dbg !3386
  %shr.i72 = sext i1 %44 to i32, !dbg !3386
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3386
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3386
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3381
    #dbg_value(i64 1, !3361, !DIExpression(), !3380)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3381
  %45 = load i8, ptr %arrayidx29.1, align 1, !dbg !3381
  %conv30.1 = zext i8 %45 to i32, !dbg !3381
  %46 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.1 = mul nsw i32 %46, %conv30.1, !dbg !3381
  %47 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.1 = add nsw i32 %mul32.1, %47, !dbg !3381
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3383)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3385
  %48 = icmp sgt i32 %add34.1, 0, !dbg !3386
  %shr.i72.1 = sext i1 %48 to i32, !dbg !3386
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3386
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3386
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3381
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3381
    #dbg_value(i64 2, !3361, !DIExpression(), !3380)
  %arrayidx29.2 = getelementptr inbounds i8, ptr %src.addr.178, i64 2, !dbg !3381
  %49 = load i8, ptr %arrayidx29.2, align 1, !dbg !3381
  %conv30.2 = zext i8 %49 to i32, !dbg !3381
  %50 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.2 = mul nsw i32 %50, %conv30.2, !dbg !3381
  %51 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.2 = add nsw i32 %mul32.2, %51, !dbg !3381
    #dbg_value(i32 %add34.2, !1702, !DIExpression(), !3383)
  %tobool.not.i71.2 = icmp ult i32 %add34.2, 256, !dbg !3385
  %52 = icmp sgt i32 %add34.2, 0, !dbg !3386
  %shr.i72.2 = sext i1 %52 to i32, !dbg !3386
  %cond.i73.2 = select i1 %tobool.not.i71.2, i32 %add34.2, i32 %shr.i72.2, !dbg !3386
  %conv.i74.2 = trunc i32 %cond.i73.2 to i8, !dbg !3386
  %arrayidx37.2 = getelementptr inbounds i8, ptr %dst.addr.179, i64 2, !dbg !3381
  store i8 %conv.i74.2, ptr %arrayidx37.2, align 1, !dbg !3381
    #dbg_value(i64 3, !3361, !DIExpression(), !3380)
  %arrayidx29.3 = getelementptr inbounds i8, ptr %src.addr.178, i64 3, !dbg !3381
  %53 = load i8, ptr %arrayidx29.3, align 1, !dbg !3381
  %conv30.3 = zext i8 %53 to i32, !dbg !3381
  %54 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.3 = mul nsw i32 %54, %conv30.3, !dbg !3381
  %55 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.3 = add nsw i32 %mul32.3, %55, !dbg !3381
    #dbg_value(i32 %add34.3, !1702, !DIExpression(), !3383)
  %tobool.not.i71.3 = icmp ult i32 %add34.3, 256, !dbg !3385
  %56 = icmp sgt i32 %add34.3, 0, !dbg !3386
  %shr.i72.3 = sext i1 %56 to i32, !dbg !3386
  %cond.i73.3 = select i1 %tobool.not.i71.3, i32 %add34.3, i32 %shr.i72.3, !dbg !3386
  %conv.i74.3 = trunc i32 %cond.i73.3 to i8, !dbg !3386
  %arrayidx37.3 = getelementptr inbounds i8, ptr %dst.addr.179, i64 3, !dbg !3381
  store i8 %conv.i74.3, ptr %arrayidx37.3, align 1, !dbg !3381
    #dbg_value(i64 4, !3361, !DIExpression(), !3380)
  %arrayidx29.4 = getelementptr inbounds i8, ptr %src.addr.178, i64 4, !dbg !3381
  %57 = load i8, ptr %arrayidx29.4, align 1, !dbg !3381
  %conv30.4 = zext i8 %57 to i32, !dbg !3381
  %58 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.4 = mul nsw i32 %58, %conv30.4, !dbg !3381
  %59 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.4 = add nsw i32 %mul32.4, %59, !dbg !3381
    #dbg_value(i32 %add34.4, !1702, !DIExpression(), !3383)
  %tobool.not.i71.4 = icmp ult i32 %add34.4, 256, !dbg !3385
  %60 = icmp sgt i32 %add34.4, 0, !dbg !3386
  %shr.i72.4 = sext i1 %60 to i32, !dbg !3386
  %cond.i73.4 = select i1 %tobool.not.i71.4, i32 %add34.4, i32 %shr.i72.4, !dbg !3386
  %conv.i74.4 = trunc i32 %cond.i73.4 to i8, !dbg !3386
  %arrayidx37.4 = getelementptr inbounds i8, ptr %dst.addr.179, i64 4, !dbg !3381
  store i8 %conv.i74.4, ptr %arrayidx37.4, align 1, !dbg !3381
    #dbg_value(i64 5, !3361, !DIExpression(), !3380)
  %arrayidx29.5 = getelementptr inbounds i8, ptr %src.addr.178, i64 5, !dbg !3381
  %61 = load i8, ptr %arrayidx29.5, align 1, !dbg !3381
  %conv30.5 = zext i8 %61 to i32, !dbg !3381
  %62 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.5 = mul nsw i32 %62, %conv30.5, !dbg !3381
  %63 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.5 = add nsw i32 %mul32.5, %63, !dbg !3381
    #dbg_value(i32 %add34.5, !1702, !DIExpression(), !3383)
  %tobool.not.i71.5 = icmp ult i32 %add34.5, 256, !dbg !3385
  %64 = icmp sgt i32 %add34.5, 0, !dbg !3386
  %shr.i72.5 = sext i1 %64 to i32, !dbg !3386
  %cond.i73.5 = select i1 %tobool.not.i71.5, i32 %add34.5, i32 %shr.i72.5, !dbg !3386
  %conv.i74.5 = trunc i32 %cond.i73.5 to i8, !dbg !3386
  %arrayidx37.5 = getelementptr inbounds i8, ptr %dst.addr.179, i64 5, !dbg !3381
  store i8 %conv.i74.5, ptr %arrayidx37.5, align 1, !dbg !3381
    #dbg_value(i64 6, !3361, !DIExpression(), !3380)
  %arrayidx29.6 = getelementptr inbounds i8, ptr %src.addr.178, i64 6, !dbg !3381
  %65 = load i8, ptr %arrayidx29.6, align 1, !dbg !3381
  %conv30.6 = zext i8 %65 to i32, !dbg !3381
  %66 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.6 = mul nsw i32 %66, %conv30.6, !dbg !3381
  %67 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.6 = add nsw i32 %mul32.6, %67, !dbg !3381
    #dbg_value(i32 %add34.6, !1702, !DIExpression(), !3383)
  %tobool.not.i71.6 = icmp ult i32 %add34.6, 256, !dbg !3385
  %68 = icmp sgt i32 %add34.6, 0, !dbg !3386
  %shr.i72.6 = sext i1 %68 to i32, !dbg !3386
  %cond.i73.6 = select i1 %tobool.not.i71.6, i32 %add34.6, i32 %shr.i72.6, !dbg !3386
  %conv.i74.6 = trunc i32 %cond.i73.6 to i8, !dbg !3386
  %arrayidx37.6 = getelementptr inbounds i8, ptr %dst.addr.179, i64 6, !dbg !3381
  store i8 %conv.i74.6, ptr %arrayidx37.6, align 1, !dbg !3381
    #dbg_value(i64 7, !3361, !DIExpression(), !3380)
  %arrayidx29.7 = getelementptr inbounds i8, ptr %src.addr.178, i64 7, !dbg !3381
  %69 = load i8, ptr %arrayidx29.7, align 1, !dbg !3381
  %conv30.7 = zext i8 %69 to i32, !dbg !3381
  %70 = load i32, ptr %i_scale31, align 4, !dbg !3381
  %mul32.7 = mul nsw i32 %70, %conv30.7, !dbg !3381
  %71 = load i32, ptr %i_offset33, align 8, !dbg !3381
  %add34.7 = add nsw i32 %mul32.7, %71, !dbg !3381
    #dbg_value(i32 %add34.7, !1702, !DIExpression(), !3383)
  %tobool.not.i71.7 = icmp ult i32 %add34.7, 256, !dbg !3385
  %72 = icmp sgt i32 %add34.7, 0, !dbg !3386
  %shr.i72.7 = sext i1 %72 to i32, !dbg !3386
  %cond.i73.7 = select i1 %tobool.not.i71.7, i32 %add34.7, i32 %shr.i72.7, !dbg !3386
  %conv.i74.7 = trunc i32 %cond.i73.7 to i8, !dbg !3386
  %arrayidx37.7 = getelementptr inbounds i8, ptr %dst.addr.179, i64 7, !dbg !3381
  store i8 %conv.i74.7, ptr %arrayidx37.7, align 1, !dbg !3381
    #dbg_value(i64 8, !3361, !DIExpression(), !3380)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3387
    #dbg_value(i32 %inc42, !3358, !DIExpression(), !3367)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3387
    #dbg_value(ptr %add.ptr44, !3345, !DIExpression(), !3364)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3387
    #dbg_value(ptr %add.ptr46, !3347, !DIExpression(), !3364)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3387
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3368, !llvm.loop !3388

if.end:                                           ; preds = %for.cond23.preheader, %for.cond2.preheader, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3366
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w12(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3389 {
entry:
    #dbg_value(ptr %dst, !3391, !DIExpression(), !3410)
    #dbg_value(i32 %i_dst_stride, !3392, !DIExpression(), !3410)
    #dbg_value(ptr %src, !3393, !DIExpression(), !3410)
    #dbg_value(i32 %i_src_stride, !3394, !DIExpression(), !3410)
    #dbg_value(ptr %weight, !3395, !DIExpression(), !3410)
    #dbg_value(i32 %height, !3396, !DIExpression(), !3410)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3411
  %0 = load i32, ptr %i_denom, align 16, !dbg !3411
  %cmp = icmp sgt i32 %0, 0, !dbg !3411
    #dbg_value(ptr %dst, !3391, !DIExpression(), !3410)
    #dbg_value(ptr %dst, !3391, !DIExpression(), !3410)
    #dbg_value(ptr %src, !3393, !DIExpression(), !3410)
    #dbg_value(ptr %src, !3393, !DIExpression(), !3410)
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3411
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3412

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3404, !DIExpression(), !3413)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3414

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3414

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3397, !DIExpression(), !3415)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3416

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  br label %for.cond2.preheader, !dbg !3416

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond2.preheader
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond2.preheader ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond2.preheader ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond2.preheader ]
    #dbg_value(i32 %y.085, !3397, !DIExpression(), !3415)
    #dbg_value(ptr %dst.addr.084, !3391, !DIExpression(), !3410)
    #dbg_value(ptr %src.addr.083, !3393, !DIExpression(), !3410)
    #dbg_value(i32 0, !3401, !DIExpression(), !3417)
    #dbg_value(i64 0, !3401, !DIExpression(), !3417)
  %1 = load i8, ptr %src.addr.083, align 1, !dbg !3418
  %conv = zext i8 %1 to i32, !dbg !3418
  %2 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul = mul nsw i32 %2, %conv, !dbg !3418
  %3 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub = add nsw i32 %3, -1, !dbg !3418
  %shl = shl nuw i32 1, %sub, !dbg !3418
  %add = add nsw i32 %shl, %mul, !dbg !3418
  %shr = ashr i32 %add, %3, !dbg !3418
  %4 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8 = add nsw i32 %shr, %4, !dbg !3418
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3420)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3422
  %5 = icmp sgt i32 %add8, 0, !dbg !3423
  %shr.i = sext i1 %5 to i32, !dbg !3423
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3423
  %conv.i = trunc i32 %cond.i to i8, !dbg !3423
  store i8 %conv.i, ptr %dst.addr.084, align 1, !dbg !3418
    #dbg_value(i64 1, !3401, !DIExpression(), !3417)
  %arrayidx.1 = getelementptr inbounds i8, ptr %src.addr.083, i64 1, !dbg !3418
  %6 = load i8, ptr %arrayidx.1, align 1, !dbg !3418
  %conv.1 = zext i8 %6 to i32, !dbg !3418
  %7 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.1 = mul nsw i32 %7, %conv.1, !dbg !3418
  %8 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.1 = add nsw i32 %8, -1, !dbg !3418
  %shl.1 = shl nuw i32 1, %sub.1, !dbg !3418
  %add.1 = add nsw i32 %shl.1, %mul.1, !dbg !3418
  %shr.1 = ashr i32 %add.1, %8, !dbg !3418
  %9 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.1 = add nsw i32 %shr.1, %9, !dbg !3418
    #dbg_value(i32 %add8.1, !1702, !DIExpression(), !3420)
  %tobool.not.i.1 = icmp ult i32 %add8.1, 256, !dbg !3422
  %10 = icmp sgt i32 %add8.1, 0, !dbg !3423
  %shr.i.1 = sext i1 %10 to i32, !dbg !3423
  %cond.i.1 = select i1 %tobool.not.i.1, i32 %add8.1, i32 %shr.i.1, !dbg !3423
  %conv.i.1 = trunc i32 %cond.i.1 to i8, !dbg !3423
  %arrayidx10.1 = getelementptr inbounds i8, ptr %dst.addr.084, i64 1, !dbg !3418
  store i8 %conv.i.1, ptr %arrayidx10.1, align 1, !dbg !3418
    #dbg_value(i64 2, !3401, !DIExpression(), !3417)
  %arrayidx.2 = getelementptr inbounds i8, ptr %src.addr.083, i64 2, !dbg !3418
  %11 = load i8, ptr %arrayidx.2, align 1, !dbg !3418
  %conv.2 = zext i8 %11 to i32, !dbg !3418
  %12 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.2 = mul nsw i32 %12, %conv.2, !dbg !3418
  %13 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.2 = add nsw i32 %13, -1, !dbg !3418
  %shl.2 = shl nuw i32 1, %sub.2, !dbg !3418
  %add.2 = add nsw i32 %shl.2, %mul.2, !dbg !3418
  %shr.2 = ashr i32 %add.2, %13, !dbg !3418
  %14 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.2 = add nsw i32 %shr.2, %14, !dbg !3418
    #dbg_value(i32 %add8.2, !1702, !DIExpression(), !3420)
  %tobool.not.i.2 = icmp ult i32 %add8.2, 256, !dbg !3422
  %15 = icmp sgt i32 %add8.2, 0, !dbg !3423
  %shr.i.2 = sext i1 %15 to i32, !dbg !3423
  %cond.i.2 = select i1 %tobool.not.i.2, i32 %add8.2, i32 %shr.i.2, !dbg !3423
  %conv.i.2 = trunc i32 %cond.i.2 to i8, !dbg !3423
  %arrayidx10.2 = getelementptr inbounds i8, ptr %dst.addr.084, i64 2, !dbg !3418
  store i8 %conv.i.2, ptr %arrayidx10.2, align 1, !dbg !3418
    #dbg_value(i64 3, !3401, !DIExpression(), !3417)
  %arrayidx.3 = getelementptr inbounds i8, ptr %src.addr.083, i64 3, !dbg !3418
  %16 = load i8, ptr %arrayidx.3, align 1, !dbg !3418
  %conv.3 = zext i8 %16 to i32, !dbg !3418
  %17 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.3 = mul nsw i32 %17, %conv.3, !dbg !3418
  %18 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.3 = add nsw i32 %18, -1, !dbg !3418
  %shl.3 = shl nuw i32 1, %sub.3, !dbg !3418
  %add.3 = add nsw i32 %shl.3, %mul.3, !dbg !3418
  %shr.3 = ashr i32 %add.3, %18, !dbg !3418
  %19 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.3 = add nsw i32 %shr.3, %19, !dbg !3418
    #dbg_value(i32 %add8.3, !1702, !DIExpression(), !3420)
  %tobool.not.i.3 = icmp ult i32 %add8.3, 256, !dbg !3422
  %20 = icmp sgt i32 %add8.3, 0, !dbg !3423
  %shr.i.3 = sext i1 %20 to i32, !dbg !3423
  %cond.i.3 = select i1 %tobool.not.i.3, i32 %add8.3, i32 %shr.i.3, !dbg !3423
  %conv.i.3 = trunc i32 %cond.i.3 to i8, !dbg !3423
  %arrayidx10.3 = getelementptr inbounds i8, ptr %dst.addr.084, i64 3, !dbg !3418
  store i8 %conv.i.3, ptr %arrayidx10.3, align 1, !dbg !3418
    #dbg_value(i64 4, !3401, !DIExpression(), !3417)
  %arrayidx.4 = getelementptr inbounds i8, ptr %src.addr.083, i64 4, !dbg !3418
  %21 = load i8, ptr %arrayidx.4, align 1, !dbg !3418
  %conv.4 = zext i8 %21 to i32, !dbg !3418
  %22 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.4 = mul nsw i32 %22, %conv.4, !dbg !3418
  %23 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.4 = add nsw i32 %23, -1, !dbg !3418
  %shl.4 = shl nuw i32 1, %sub.4, !dbg !3418
  %add.4 = add nsw i32 %shl.4, %mul.4, !dbg !3418
  %shr.4 = ashr i32 %add.4, %23, !dbg !3418
  %24 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.4 = add nsw i32 %shr.4, %24, !dbg !3418
    #dbg_value(i32 %add8.4, !1702, !DIExpression(), !3420)
  %tobool.not.i.4 = icmp ult i32 %add8.4, 256, !dbg !3422
  %25 = icmp sgt i32 %add8.4, 0, !dbg !3423
  %shr.i.4 = sext i1 %25 to i32, !dbg !3423
  %cond.i.4 = select i1 %tobool.not.i.4, i32 %add8.4, i32 %shr.i.4, !dbg !3423
  %conv.i.4 = trunc i32 %cond.i.4 to i8, !dbg !3423
  %arrayidx10.4 = getelementptr inbounds i8, ptr %dst.addr.084, i64 4, !dbg !3418
  store i8 %conv.i.4, ptr %arrayidx10.4, align 1, !dbg !3418
    #dbg_value(i64 5, !3401, !DIExpression(), !3417)
  %arrayidx.5 = getelementptr inbounds i8, ptr %src.addr.083, i64 5, !dbg !3418
  %26 = load i8, ptr %arrayidx.5, align 1, !dbg !3418
  %conv.5 = zext i8 %26 to i32, !dbg !3418
  %27 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.5 = mul nsw i32 %27, %conv.5, !dbg !3418
  %28 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.5 = add nsw i32 %28, -1, !dbg !3418
  %shl.5 = shl nuw i32 1, %sub.5, !dbg !3418
  %add.5 = add nsw i32 %shl.5, %mul.5, !dbg !3418
  %shr.5 = ashr i32 %add.5, %28, !dbg !3418
  %29 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.5 = add nsw i32 %shr.5, %29, !dbg !3418
    #dbg_value(i32 %add8.5, !1702, !DIExpression(), !3420)
  %tobool.not.i.5 = icmp ult i32 %add8.5, 256, !dbg !3422
  %30 = icmp sgt i32 %add8.5, 0, !dbg !3423
  %shr.i.5 = sext i1 %30 to i32, !dbg !3423
  %cond.i.5 = select i1 %tobool.not.i.5, i32 %add8.5, i32 %shr.i.5, !dbg !3423
  %conv.i.5 = trunc i32 %cond.i.5 to i8, !dbg !3423
  %arrayidx10.5 = getelementptr inbounds i8, ptr %dst.addr.084, i64 5, !dbg !3418
  store i8 %conv.i.5, ptr %arrayidx10.5, align 1, !dbg !3418
    #dbg_value(i64 6, !3401, !DIExpression(), !3417)
  %arrayidx.6 = getelementptr inbounds i8, ptr %src.addr.083, i64 6, !dbg !3418
  %31 = load i8, ptr %arrayidx.6, align 1, !dbg !3418
  %conv.6 = zext i8 %31 to i32, !dbg !3418
  %32 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.6 = mul nsw i32 %32, %conv.6, !dbg !3418
  %33 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.6 = add nsw i32 %33, -1, !dbg !3418
  %shl.6 = shl nuw i32 1, %sub.6, !dbg !3418
  %add.6 = add nsw i32 %shl.6, %mul.6, !dbg !3418
  %shr.6 = ashr i32 %add.6, %33, !dbg !3418
  %34 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.6 = add nsw i32 %shr.6, %34, !dbg !3418
    #dbg_value(i32 %add8.6, !1702, !DIExpression(), !3420)
  %tobool.not.i.6 = icmp ult i32 %add8.6, 256, !dbg !3422
  %35 = icmp sgt i32 %add8.6, 0, !dbg !3423
  %shr.i.6 = sext i1 %35 to i32, !dbg !3423
  %cond.i.6 = select i1 %tobool.not.i.6, i32 %add8.6, i32 %shr.i.6, !dbg !3423
  %conv.i.6 = trunc i32 %cond.i.6 to i8, !dbg !3423
  %arrayidx10.6 = getelementptr inbounds i8, ptr %dst.addr.084, i64 6, !dbg !3418
  store i8 %conv.i.6, ptr %arrayidx10.6, align 1, !dbg !3418
    #dbg_value(i64 7, !3401, !DIExpression(), !3417)
  %arrayidx.7 = getelementptr inbounds i8, ptr %src.addr.083, i64 7, !dbg !3418
  %36 = load i8, ptr %arrayidx.7, align 1, !dbg !3418
  %conv.7 = zext i8 %36 to i32, !dbg !3418
  %37 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.7 = mul nsw i32 %37, %conv.7, !dbg !3418
  %38 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.7 = add nsw i32 %38, -1, !dbg !3418
  %shl.7 = shl nuw i32 1, %sub.7, !dbg !3418
  %add.7 = add nsw i32 %shl.7, %mul.7, !dbg !3418
  %shr.7 = ashr i32 %add.7, %38, !dbg !3418
  %39 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.7 = add nsw i32 %shr.7, %39, !dbg !3418
    #dbg_value(i32 %add8.7, !1702, !DIExpression(), !3420)
  %tobool.not.i.7 = icmp ult i32 %add8.7, 256, !dbg !3422
  %40 = icmp sgt i32 %add8.7, 0, !dbg !3423
  %shr.i.7 = sext i1 %40 to i32, !dbg !3423
  %cond.i.7 = select i1 %tobool.not.i.7, i32 %add8.7, i32 %shr.i.7, !dbg !3423
  %conv.i.7 = trunc i32 %cond.i.7 to i8, !dbg !3423
  %arrayidx10.7 = getelementptr inbounds i8, ptr %dst.addr.084, i64 7, !dbg !3418
  store i8 %conv.i.7, ptr %arrayidx10.7, align 1, !dbg !3418
    #dbg_value(i64 8, !3401, !DIExpression(), !3417)
  %arrayidx.8 = getelementptr inbounds i8, ptr %src.addr.083, i64 8, !dbg !3418
  %41 = load i8, ptr %arrayidx.8, align 1, !dbg !3418
  %conv.8 = zext i8 %41 to i32, !dbg !3418
  %42 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.8 = mul nsw i32 %42, %conv.8, !dbg !3418
  %43 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.8 = add nsw i32 %43, -1, !dbg !3418
  %shl.8 = shl nuw i32 1, %sub.8, !dbg !3418
  %add.8 = add nsw i32 %shl.8, %mul.8, !dbg !3418
  %shr.8 = ashr i32 %add.8, %43, !dbg !3418
  %44 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.8 = add nsw i32 %shr.8, %44, !dbg !3418
    #dbg_value(i32 %add8.8, !1702, !DIExpression(), !3420)
  %tobool.not.i.8 = icmp ult i32 %add8.8, 256, !dbg !3422
  %45 = icmp sgt i32 %add8.8, 0, !dbg !3423
  %shr.i.8 = sext i1 %45 to i32, !dbg !3423
  %cond.i.8 = select i1 %tobool.not.i.8, i32 %add8.8, i32 %shr.i.8, !dbg !3423
  %conv.i.8 = trunc i32 %cond.i.8 to i8, !dbg !3423
  %arrayidx10.8 = getelementptr inbounds i8, ptr %dst.addr.084, i64 8, !dbg !3418
  store i8 %conv.i.8, ptr %arrayidx10.8, align 1, !dbg !3418
    #dbg_value(i64 9, !3401, !DIExpression(), !3417)
  %arrayidx.9 = getelementptr inbounds i8, ptr %src.addr.083, i64 9, !dbg !3418
  %46 = load i8, ptr %arrayidx.9, align 1, !dbg !3418
  %conv.9 = zext i8 %46 to i32, !dbg !3418
  %47 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.9 = mul nsw i32 %47, %conv.9, !dbg !3418
  %48 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.9 = add nsw i32 %48, -1, !dbg !3418
  %shl.9 = shl nuw i32 1, %sub.9, !dbg !3418
  %add.9 = add nsw i32 %shl.9, %mul.9, !dbg !3418
  %shr.9 = ashr i32 %add.9, %48, !dbg !3418
  %49 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.9 = add nsw i32 %shr.9, %49, !dbg !3418
    #dbg_value(i32 %add8.9, !1702, !DIExpression(), !3420)
  %tobool.not.i.9 = icmp ult i32 %add8.9, 256, !dbg !3422
  %50 = icmp sgt i32 %add8.9, 0, !dbg !3423
  %shr.i.9 = sext i1 %50 to i32, !dbg !3423
  %cond.i.9 = select i1 %tobool.not.i.9, i32 %add8.9, i32 %shr.i.9, !dbg !3423
  %conv.i.9 = trunc i32 %cond.i.9 to i8, !dbg !3423
  %arrayidx10.9 = getelementptr inbounds i8, ptr %dst.addr.084, i64 9, !dbg !3418
  store i8 %conv.i.9, ptr %arrayidx10.9, align 1, !dbg !3418
    #dbg_value(i64 10, !3401, !DIExpression(), !3417)
  %arrayidx.10 = getelementptr inbounds i8, ptr %src.addr.083, i64 10, !dbg !3418
  %51 = load i8, ptr %arrayidx.10, align 1, !dbg !3418
  %conv.10 = zext i8 %51 to i32, !dbg !3418
  %52 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.10 = mul nsw i32 %52, %conv.10, !dbg !3418
  %53 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.10 = add nsw i32 %53, -1, !dbg !3418
  %shl.10 = shl nuw i32 1, %sub.10, !dbg !3418
  %add.10 = add nsw i32 %shl.10, %mul.10, !dbg !3418
  %shr.10 = ashr i32 %add.10, %53, !dbg !3418
  %54 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.10 = add nsw i32 %shr.10, %54, !dbg !3418
    #dbg_value(i32 %add8.10, !1702, !DIExpression(), !3420)
  %tobool.not.i.10 = icmp ult i32 %add8.10, 256, !dbg !3422
  %55 = icmp sgt i32 %add8.10, 0, !dbg !3423
  %shr.i.10 = sext i1 %55 to i32, !dbg !3423
  %cond.i.10 = select i1 %tobool.not.i.10, i32 %add8.10, i32 %shr.i.10, !dbg !3423
  %conv.i.10 = trunc i32 %cond.i.10 to i8, !dbg !3423
  %arrayidx10.10 = getelementptr inbounds i8, ptr %dst.addr.084, i64 10, !dbg !3418
  store i8 %conv.i.10, ptr %arrayidx10.10, align 1, !dbg !3418
    #dbg_value(i64 11, !3401, !DIExpression(), !3417)
  %arrayidx.11 = getelementptr inbounds i8, ptr %src.addr.083, i64 11, !dbg !3418
  %56 = load i8, ptr %arrayidx.11, align 1, !dbg !3418
  %conv.11 = zext i8 %56 to i32, !dbg !3418
  %57 = load i32, ptr %i_scale, align 4, !dbg !3418
  %mul.11 = mul nsw i32 %57, %conv.11, !dbg !3418
  %58 = load i32, ptr %i_denom, align 16, !dbg !3418
  %sub.11 = add nsw i32 %58, -1, !dbg !3418
  %shl.11 = shl nuw i32 1, %sub.11, !dbg !3418
  %add.11 = add nsw i32 %shl.11, %mul.11, !dbg !3418
  %shr.11 = ashr i32 %add.11, %58, !dbg !3418
  %59 = load i32, ptr %i_offset, align 8, !dbg !3418
  %add8.11 = add nsw i32 %shr.11, %59, !dbg !3418
    #dbg_value(i32 %add8.11, !1702, !DIExpression(), !3420)
  %tobool.not.i.11 = icmp ult i32 %add8.11, 256, !dbg !3422
  %60 = icmp sgt i32 %add8.11, 0, !dbg !3423
  %shr.i.11 = sext i1 %60 to i32, !dbg !3423
  %cond.i.11 = select i1 %tobool.not.i.11, i32 %add8.11, i32 %shr.i.11, !dbg !3423
  %conv.i.11 = trunc i32 %cond.i.11 to i8, !dbg !3423
  %arrayidx10.11 = getelementptr inbounds i8, ptr %dst.addr.084, i64 11, !dbg !3418
  store i8 %conv.i.11, ptr %arrayidx10.11, align 1, !dbg !3418
    #dbg_value(i64 12, !3401, !DIExpression(), !3417)
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3424
    #dbg_value(i32 %inc12, !3397, !DIExpression(), !3415)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3424
    #dbg_value(ptr %add.ptr, !3391, !DIExpression(), !3410)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3424
    #dbg_value(ptr %add.ptr14, !3393, !DIExpression(), !3410)
  %exitcond90.not = icmp eq i32 %inc12, %height, !dbg !3424
  br i1 %exitcond90.not, label %if.end, label %for.cond2.preheader, !dbg !3416, !llvm.loop !3425

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3404, !DIExpression(), !3413)
    #dbg_value(ptr %dst.addr.179, !3391, !DIExpression(), !3410)
    #dbg_value(ptr %src.addr.178, !3393, !DIExpression(), !3410)
    #dbg_value(i32 0, !3407, !DIExpression(), !3426)
    #dbg_value(i64 0, !3407, !DIExpression(), !3426)
  %61 = load i8, ptr %src.addr.178, align 1, !dbg !3427
  %conv30 = zext i8 %61 to i32, !dbg !3427
  %62 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32 = mul nsw i32 %62, %conv30, !dbg !3427
  %63 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34 = add nsw i32 %mul32, %63, !dbg !3427
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3429)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3431
  %64 = icmp sgt i32 %add34, 0, !dbg !3432
  %shr.i72 = sext i1 %64 to i32, !dbg !3432
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3432
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3432
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3427
    #dbg_value(i64 1, !3407, !DIExpression(), !3426)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3427
  %65 = load i8, ptr %arrayidx29.1, align 1, !dbg !3427
  %conv30.1 = zext i8 %65 to i32, !dbg !3427
  %66 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.1 = mul nsw i32 %66, %conv30.1, !dbg !3427
  %67 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.1 = add nsw i32 %mul32.1, %67, !dbg !3427
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3429)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3431
  %68 = icmp sgt i32 %add34.1, 0, !dbg !3432
  %shr.i72.1 = sext i1 %68 to i32, !dbg !3432
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3432
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3432
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3427
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3427
    #dbg_value(i64 2, !3407, !DIExpression(), !3426)
  %arrayidx29.2 = getelementptr inbounds i8, ptr %src.addr.178, i64 2, !dbg !3427
  %69 = load i8, ptr %arrayidx29.2, align 1, !dbg !3427
  %conv30.2 = zext i8 %69 to i32, !dbg !3427
  %70 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.2 = mul nsw i32 %70, %conv30.2, !dbg !3427
  %71 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.2 = add nsw i32 %mul32.2, %71, !dbg !3427
    #dbg_value(i32 %add34.2, !1702, !DIExpression(), !3429)
  %tobool.not.i71.2 = icmp ult i32 %add34.2, 256, !dbg !3431
  %72 = icmp sgt i32 %add34.2, 0, !dbg !3432
  %shr.i72.2 = sext i1 %72 to i32, !dbg !3432
  %cond.i73.2 = select i1 %tobool.not.i71.2, i32 %add34.2, i32 %shr.i72.2, !dbg !3432
  %conv.i74.2 = trunc i32 %cond.i73.2 to i8, !dbg !3432
  %arrayidx37.2 = getelementptr inbounds i8, ptr %dst.addr.179, i64 2, !dbg !3427
  store i8 %conv.i74.2, ptr %arrayidx37.2, align 1, !dbg !3427
    #dbg_value(i64 3, !3407, !DIExpression(), !3426)
  %arrayidx29.3 = getelementptr inbounds i8, ptr %src.addr.178, i64 3, !dbg !3427
  %73 = load i8, ptr %arrayidx29.3, align 1, !dbg !3427
  %conv30.3 = zext i8 %73 to i32, !dbg !3427
  %74 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.3 = mul nsw i32 %74, %conv30.3, !dbg !3427
  %75 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.3 = add nsw i32 %mul32.3, %75, !dbg !3427
    #dbg_value(i32 %add34.3, !1702, !DIExpression(), !3429)
  %tobool.not.i71.3 = icmp ult i32 %add34.3, 256, !dbg !3431
  %76 = icmp sgt i32 %add34.3, 0, !dbg !3432
  %shr.i72.3 = sext i1 %76 to i32, !dbg !3432
  %cond.i73.3 = select i1 %tobool.not.i71.3, i32 %add34.3, i32 %shr.i72.3, !dbg !3432
  %conv.i74.3 = trunc i32 %cond.i73.3 to i8, !dbg !3432
  %arrayidx37.3 = getelementptr inbounds i8, ptr %dst.addr.179, i64 3, !dbg !3427
  store i8 %conv.i74.3, ptr %arrayidx37.3, align 1, !dbg !3427
    #dbg_value(i64 4, !3407, !DIExpression(), !3426)
  %arrayidx29.4 = getelementptr inbounds i8, ptr %src.addr.178, i64 4, !dbg !3427
  %77 = load i8, ptr %arrayidx29.4, align 1, !dbg !3427
  %conv30.4 = zext i8 %77 to i32, !dbg !3427
  %78 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.4 = mul nsw i32 %78, %conv30.4, !dbg !3427
  %79 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.4 = add nsw i32 %mul32.4, %79, !dbg !3427
    #dbg_value(i32 %add34.4, !1702, !DIExpression(), !3429)
  %tobool.not.i71.4 = icmp ult i32 %add34.4, 256, !dbg !3431
  %80 = icmp sgt i32 %add34.4, 0, !dbg !3432
  %shr.i72.4 = sext i1 %80 to i32, !dbg !3432
  %cond.i73.4 = select i1 %tobool.not.i71.4, i32 %add34.4, i32 %shr.i72.4, !dbg !3432
  %conv.i74.4 = trunc i32 %cond.i73.4 to i8, !dbg !3432
  %arrayidx37.4 = getelementptr inbounds i8, ptr %dst.addr.179, i64 4, !dbg !3427
  store i8 %conv.i74.4, ptr %arrayidx37.4, align 1, !dbg !3427
    #dbg_value(i64 5, !3407, !DIExpression(), !3426)
  %arrayidx29.5 = getelementptr inbounds i8, ptr %src.addr.178, i64 5, !dbg !3427
  %81 = load i8, ptr %arrayidx29.5, align 1, !dbg !3427
  %conv30.5 = zext i8 %81 to i32, !dbg !3427
  %82 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.5 = mul nsw i32 %82, %conv30.5, !dbg !3427
  %83 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.5 = add nsw i32 %mul32.5, %83, !dbg !3427
    #dbg_value(i32 %add34.5, !1702, !DIExpression(), !3429)
  %tobool.not.i71.5 = icmp ult i32 %add34.5, 256, !dbg !3431
  %84 = icmp sgt i32 %add34.5, 0, !dbg !3432
  %shr.i72.5 = sext i1 %84 to i32, !dbg !3432
  %cond.i73.5 = select i1 %tobool.not.i71.5, i32 %add34.5, i32 %shr.i72.5, !dbg !3432
  %conv.i74.5 = trunc i32 %cond.i73.5 to i8, !dbg !3432
  %arrayidx37.5 = getelementptr inbounds i8, ptr %dst.addr.179, i64 5, !dbg !3427
  store i8 %conv.i74.5, ptr %arrayidx37.5, align 1, !dbg !3427
    #dbg_value(i64 6, !3407, !DIExpression(), !3426)
  %arrayidx29.6 = getelementptr inbounds i8, ptr %src.addr.178, i64 6, !dbg !3427
  %85 = load i8, ptr %arrayidx29.6, align 1, !dbg !3427
  %conv30.6 = zext i8 %85 to i32, !dbg !3427
  %86 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.6 = mul nsw i32 %86, %conv30.6, !dbg !3427
  %87 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.6 = add nsw i32 %mul32.6, %87, !dbg !3427
    #dbg_value(i32 %add34.6, !1702, !DIExpression(), !3429)
  %tobool.not.i71.6 = icmp ult i32 %add34.6, 256, !dbg !3431
  %88 = icmp sgt i32 %add34.6, 0, !dbg !3432
  %shr.i72.6 = sext i1 %88 to i32, !dbg !3432
  %cond.i73.6 = select i1 %tobool.not.i71.6, i32 %add34.6, i32 %shr.i72.6, !dbg !3432
  %conv.i74.6 = trunc i32 %cond.i73.6 to i8, !dbg !3432
  %arrayidx37.6 = getelementptr inbounds i8, ptr %dst.addr.179, i64 6, !dbg !3427
  store i8 %conv.i74.6, ptr %arrayidx37.6, align 1, !dbg !3427
    #dbg_value(i64 7, !3407, !DIExpression(), !3426)
  %arrayidx29.7 = getelementptr inbounds i8, ptr %src.addr.178, i64 7, !dbg !3427
  %89 = load i8, ptr %arrayidx29.7, align 1, !dbg !3427
  %conv30.7 = zext i8 %89 to i32, !dbg !3427
  %90 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.7 = mul nsw i32 %90, %conv30.7, !dbg !3427
  %91 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.7 = add nsw i32 %mul32.7, %91, !dbg !3427
    #dbg_value(i32 %add34.7, !1702, !DIExpression(), !3429)
  %tobool.not.i71.7 = icmp ult i32 %add34.7, 256, !dbg !3431
  %92 = icmp sgt i32 %add34.7, 0, !dbg !3432
  %shr.i72.7 = sext i1 %92 to i32, !dbg !3432
  %cond.i73.7 = select i1 %tobool.not.i71.7, i32 %add34.7, i32 %shr.i72.7, !dbg !3432
  %conv.i74.7 = trunc i32 %cond.i73.7 to i8, !dbg !3432
  %arrayidx37.7 = getelementptr inbounds i8, ptr %dst.addr.179, i64 7, !dbg !3427
  store i8 %conv.i74.7, ptr %arrayidx37.7, align 1, !dbg !3427
    #dbg_value(i64 8, !3407, !DIExpression(), !3426)
  %arrayidx29.8 = getelementptr inbounds i8, ptr %src.addr.178, i64 8, !dbg !3427
  %93 = load i8, ptr %arrayidx29.8, align 1, !dbg !3427
  %conv30.8 = zext i8 %93 to i32, !dbg !3427
  %94 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.8 = mul nsw i32 %94, %conv30.8, !dbg !3427
  %95 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.8 = add nsw i32 %mul32.8, %95, !dbg !3427
    #dbg_value(i32 %add34.8, !1702, !DIExpression(), !3429)
  %tobool.not.i71.8 = icmp ult i32 %add34.8, 256, !dbg !3431
  %96 = icmp sgt i32 %add34.8, 0, !dbg !3432
  %shr.i72.8 = sext i1 %96 to i32, !dbg !3432
  %cond.i73.8 = select i1 %tobool.not.i71.8, i32 %add34.8, i32 %shr.i72.8, !dbg !3432
  %conv.i74.8 = trunc i32 %cond.i73.8 to i8, !dbg !3432
  %arrayidx37.8 = getelementptr inbounds i8, ptr %dst.addr.179, i64 8, !dbg !3427
  store i8 %conv.i74.8, ptr %arrayidx37.8, align 1, !dbg !3427
    #dbg_value(i64 9, !3407, !DIExpression(), !3426)
  %arrayidx29.9 = getelementptr inbounds i8, ptr %src.addr.178, i64 9, !dbg !3427
  %97 = load i8, ptr %arrayidx29.9, align 1, !dbg !3427
  %conv30.9 = zext i8 %97 to i32, !dbg !3427
  %98 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.9 = mul nsw i32 %98, %conv30.9, !dbg !3427
  %99 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.9 = add nsw i32 %mul32.9, %99, !dbg !3427
    #dbg_value(i32 %add34.9, !1702, !DIExpression(), !3429)
  %tobool.not.i71.9 = icmp ult i32 %add34.9, 256, !dbg !3431
  %100 = icmp sgt i32 %add34.9, 0, !dbg !3432
  %shr.i72.9 = sext i1 %100 to i32, !dbg !3432
  %cond.i73.9 = select i1 %tobool.not.i71.9, i32 %add34.9, i32 %shr.i72.9, !dbg !3432
  %conv.i74.9 = trunc i32 %cond.i73.9 to i8, !dbg !3432
  %arrayidx37.9 = getelementptr inbounds i8, ptr %dst.addr.179, i64 9, !dbg !3427
  store i8 %conv.i74.9, ptr %arrayidx37.9, align 1, !dbg !3427
    #dbg_value(i64 10, !3407, !DIExpression(), !3426)
  %arrayidx29.10 = getelementptr inbounds i8, ptr %src.addr.178, i64 10, !dbg !3427
  %101 = load i8, ptr %arrayidx29.10, align 1, !dbg !3427
  %conv30.10 = zext i8 %101 to i32, !dbg !3427
  %102 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.10 = mul nsw i32 %102, %conv30.10, !dbg !3427
  %103 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.10 = add nsw i32 %mul32.10, %103, !dbg !3427
    #dbg_value(i32 %add34.10, !1702, !DIExpression(), !3429)
  %tobool.not.i71.10 = icmp ult i32 %add34.10, 256, !dbg !3431
  %104 = icmp sgt i32 %add34.10, 0, !dbg !3432
  %shr.i72.10 = sext i1 %104 to i32, !dbg !3432
  %cond.i73.10 = select i1 %tobool.not.i71.10, i32 %add34.10, i32 %shr.i72.10, !dbg !3432
  %conv.i74.10 = trunc i32 %cond.i73.10 to i8, !dbg !3432
  %arrayidx37.10 = getelementptr inbounds i8, ptr %dst.addr.179, i64 10, !dbg !3427
  store i8 %conv.i74.10, ptr %arrayidx37.10, align 1, !dbg !3427
    #dbg_value(i64 11, !3407, !DIExpression(), !3426)
  %arrayidx29.11 = getelementptr inbounds i8, ptr %src.addr.178, i64 11, !dbg !3427
  %105 = load i8, ptr %arrayidx29.11, align 1, !dbg !3427
  %conv30.11 = zext i8 %105 to i32, !dbg !3427
  %106 = load i32, ptr %i_scale31, align 4, !dbg !3427
  %mul32.11 = mul nsw i32 %106, %conv30.11, !dbg !3427
  %107 = load i32, ptr %i_offset33, align 8, !dbg !3427
  %add34.11 = add nsw i32 %mul32.11, %107, !dbg !3427
    #dbg_value(i32 %add34.11, !1702, !DIExpression(), !3429)
  %tobool.not.i71.11 = icmp ult i32 %add34.11, 256, !dbg !3431
  %108 = icmp sgt i32 %add34.11, 0, !dbg !3432
  %shr.i72.11 = sext i1 %108 to i32, !dbg !3432
  %cond.i73.11 = select i1 %tobool.not.i71.11, i32 %add34.11, i32 %shr.i72.11, !dbg !3432
  %conv.i74.11 = trunc i32 %cond.i73.11 to i8, !dbg !3432
  %arrayidx37.11 = getelementptr inbounds i8, ptr %dst.addr.179, i64 11, !dbg !3427
  store i8 %conv.i74.11, ptr %arrayidx37.11, align 1, !dbg !3427
    #dbg_value(i64 12, !3407, !DIExpression(), !3426)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3433
    #dbg_value(i32 %inc42, !3404, !DIExpression(), !3413)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3433
    #dbg_value(ptr %add.ptr44, !3391, !DIExpression(), !3410)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3433
    #dbg_value(ptr %add.ptr46, !3393, !DIExpression(), !3410)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3433
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3414, !llvm.loop !3434

if.end:                                           ; preds = %for.cond23.preheader, %for.cond2.preheader, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3412
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w16(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3435 {
entry:
    #dbg_value(ptr %dst, !3437, !DIExpression(), !3456)
    #dbg_value(i32 %i_dst_stride, !3438, !DIExpression(), !3456)
    #dbg_value(ptr %src, !3439, !DIExpression(), !3456)
    #dbg_value(i32 %i_src_stride, !3440, !DIExpression(), !3456)
    #dbg_value(ptr %weight, !3441, !DIExpression(), !3456)
    #dbg_value(i32 %height, !3442, !DIExpression(), !3456)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3457
  %0 = load i32, ptr %i_denom, align 16, !dbg !3457
  %cmp = icmp sgt i32 %0, 0, !dbg !3457
    #dbg_value(ptr %dst, !3437, !DIExpression(), !3456)
    #dbg_value(ptr %dst, !3437, !DIExpression(), !3456)
    #dbg_value(ptr %src, !3439, !DIExpression(), !3456)
    #dbg_value(ptr %src, !3439, !DIExpression(), !3456)
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3457
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3458

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3450, !DIExpression(), !3459)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3460

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3460

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3443, !DIExpression(), !3461)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3462

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  br label %for.cond2.preheader, !dbg !3462

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond2.preheader
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond2.preheader ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond2.preheader ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond2.preheader ]
    #dbg_value(i32 %y.085, !3443, !DIExpression(), !3461)
    #dbg_value(ptr %dst.addr.084, !3437, !DIExpression(), !3456)
    #dbg_value(ptr %src.addr.083, !3439, !DIExpression(), !3456)
    #dbg_value(i32 0, !3447, !DIExpression(), !3463)
    #dbg_value(i64 0, !3447, !DIExpression(), !3463)
  %1 = load i8, ptr %src.addr.083, align 1, !dbg !3464
  %conv = zext i8 %1 to i32, !dbg !3464
  %2 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul = mul nsw i32 %2, %conv, !dbg !3464
  %3 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub = add nsw i32 %3, -1, !dbg !3464
  %shl = shl nuw i32 1, %sub, !dbg !3464
  %add = add nsw i32 %shl, %mul, !dbg !3464
  %shr = ashr i32 %add, %3, !dbg !3464
  %4 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8 = add nsw i32 %shr, %4, !dbg !3464
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3466)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3468
  %5 = icmp sgt i32 %add8, 0, !dbg !3469
  %shr.i = sext i1 %5 to i32, !dbg !3469
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3469
  %conv.i = trunc i32 %cond.i to i8, !dbg !3469
  store i8 %conv.i, ptr %dst.addr.084, align 1, !dbg !3464
    #dbg_value(i64 1, !3447, !DIExpression(), !3463)
  %arrayidx.1 = getelementptr inbounds i8, ptr %src.addr.083, i64 1, !dbg !3464
  %6 = load i8, ptr %arrayidx.1, align 1, !dbg !3464
  %conv.1 = zext i8 %6 to i32, !dbg !3464
  %7 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.1 = mul nsw i32 %7, %conv.1, !dbg !3464
  %8 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.1 = add nsw i32 %8, -1, !dbg !3464
  %shl.1 = shl nuw i32 1, %sub.1, !dbg !3464
  %add.1 = add nsw i32 %shl.1, %mul.1, !dbg !3464
  %shr.1 = ashr i32 %add.1, %8, !dbg !3464
  %9 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.1 = add nsw i32 %shr.1, %9, !dbg !3464
    #dbg_value(i32 %add8.1, !1702, !DIExpression(), !3466)
  %tobool.not.i.1 = icmp ult i32 %add8.1, 256, !dbg !3468
  %10 = icmp sgt i32 %add8.1, 0, !dbg !3469
  %shr.i.1 = sext i1 %10 to i32, !dbg !3469
  %cond.i.1 = select i1 %tobool.not.i.1, i32 %add8.1, i32 %shr.i.1, !dbg !3469
  %conv.i.1 = trunc i32 %cond.i.1 to i8, !dbg !3469
  %arrayidx10.1 = getelementptr inbounds i8, ptr %dst.addr.084, i64 1, !dbg !3464
  store i8 %conv.i.1, ptr %arrayidx10.1, align 1, !dbg !3464
    #dbg_value(i64 2, !3447, !DIExpression(), !3463)
  %arrayidx.2 = getelementptr inbounds i8, ptr %src.addr.083, i64 2, !dbg !3464
  %11 = load i8, ptr %arrayidx.2, align 1, !dbg !3464
  %conv.2 = zext i8 %11 to i32, !dbg !3464
  %12 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.2 = mul nsw i32 %12, %conv.2, !dbg !3464
  %13 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.2 = add nsw i32 %13, -1, !dbg !3464
  %shl.2 = shl nuw i32 1, %sub.2, !dbg !3464
  %add.2 = add nsw i32 %shl.2, %mul.2, !dbg !3464
  %shr.2 = ashr i32 %add.2, %13, !dbg !3464
  %14 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.2 = add nsw i32 %shr.2, %14, !dbg !3464
    #dbg_value(i32 %add8.2, !1702, !DIExpression(), !3466)
  %tobool.not.i.2 = icmp ult i32 %add8.2, 256, !dbg !3468
  %15 = icmp sgt i32 %add8.2, 0, !dbg !3469
  %shr.i.2 = sext i1 %15 to i32, !dbg !3469
  %cond.i.2 = select i1 %tobool.not.i.2, i32 %add8.2, i32 %shr.i.2, !dbg !3469
  %conv.i.2 = trunc i32 %cond.i.2 to i8, !dbg !3469
  %arrayidx10.2 = getelementptr inbounds i8, ptr %dst.addr.084, i64 2, !dbg !3464
  store i8 %conv.i.2, ptr %arrayidx10.2, align 1, !dbg !3464
    #dbg_value(i64 3, !3447, !DIExpression(), !3463)
  %arrayidx.3 = getelementptr inbounds i8, ptr %src.addr.083, i64 3, !dbg !3464
  %16 = load i8, ptr %arrayidx.3, align 1, !dbg !3464
  %conv.3 = zext i8 %16 to i32, !dbg !3464
  %17 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.3 = mul nsw i32 %17, %conv.3, !dbg !3464
  %18 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.3 = add nsw i32 %18, -1, !dbg !3464
  %shl.3 = shl nuw i32 1, %sub.3, !dbg !3464
  %add.3 = add nsw i32 %shl.3, %mul.3, !dbg !3464
  %shr.3 = ashr i32 %add.3, %18, !dbg !3464
  %19 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.3 = add nsw i32 %shr.3, %19, !dbg !3464
    #dbg_value(i32 %add8.3, !1702, !DIExpression(), !3466)
  %tobool.not.i.3 = icmp ult i32 %add8.3, 256, !dbg !3468
  %20 = icmp sgt i32 %add8.3, 0, !dbg !3469
  %shr.i.3 = sext i1 %20 to i32, !dbg !3469
  %cond.i.3 = select i1 %tobool.not.i.3, i32 %add8.3, i32 %shr.i.3, !dbg !3469
  %conv.i.3 = trunc i32 %cond.i.3 to i8, !dbg !3469
  %arrayidx10.3 = getelementptr inbounds i8, ptr %dst.addr.084, i64 3, !dbg !3464
  store i8 %conv.i.3, ptr %arrayidx10.3, align 1, !dbg !3464
    #dbg_value(i64 4, !3447, !DIExpression(), !3463)
  %arrayidx.4 = getelementptr inbounds i8, ptr %src.addr.083, i64 4, !dbg !3464
  %21 = load i8, ptr %arrayidx.4, align 1, !dbg !3464
  %conv.4 = zext i8 %21 to i32, !dbg !3464
  %22 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.4 = mul nsw i32 %22, %conv.4, !dbg !3464
  %23 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.4 = add nsw i32 %23, -1, !dbg !3464
  %shl.4 = shl nuw i32 1, %sub.4, !dbg !3464
  %add.4 = add nsw i32 %shl.4, %mul.4, !dbg !3464
  %shr.4 = ashr i32 %add.4, %23, !dbg !3464
  %24 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.4 = add nsw i32 %shr.4, %24, !dbg !3464
    #dbg_value(i32 %add8.4, !1702, !DIExpression(), !3466)
  %tobool.not.i.4 = icmp ult i32 %add8.4, 256, !dbg !3468
  %25 = icmp sgt i32 %add8.4, 0, !dbg !3469
  %shr.i.4 = sext i1 %25 to i32, !dbg !3469
  %cond.i.4 = select i1 %tobool.not.i.4, i32 %add8.4, i32 %shr.i.4, !dbg !3469
  %conv.i.4 = trunc i32 %cond.i.4 to i8, !dbg !3469
  %arrayidx10.4 = getelementptr inbounds i8, ptr %dst.addr.084, i64 4, !dbg !3464
  store i8 %conv.i.4, ptr %arrayidx10.4, align 1, !dbg !3464
    #dbg_value(i64 5, !3447, !DIExpression(), !3463)
  %arrayidx.5 = getelementptr inbounds i8, ptr %src.addr.083, i64 5, !dbg !3464
  %26 = load i8, ptr %arrayidx.5, align 1, !dbg !3464
  %conv.5 = zext i8 %26 to i32, !dbg !3464
  %27 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.5 = mul nsw i32 %27, %conv.5, !dbg !3464
  %28 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.5 = add nsw i32 %28, -1, !dbg !3464
  %shl.5 = shl nuw i32 1, %sub.5, !dbg !3464
  %add.5 = add nsw i32 %shl.5, %mul.5, !dbg !3464
  %shr.5 = ashr i32 %add.5, %28, !dbg !3464
  %29 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.5 = add nsw i32 %shr.5, %29, !dbg !3464
    #dbg_value(i32 %add8.5, !1702, !DIExpression(), !3466)
  %tobool.not.i.5 = icmp ult i32 %add8.5, 256, !dbg !3468
  %30 = icmp sgt i32 %add8.5, 0, !dbg !3469
  %shr.i.5 = sext i1 %30 to i32, !dbg !3469
  %cond.i.5 = select i1 %tobool.not.i.5, i32 %add8.5, i32 %shr.i.5, !dbg !3469
  %conv.i.5 = trunc i32 %cond.i.5 to i8, !dbg !3469
  %arrayidx10.5 = getelementptr inbounds i8, ptr %dst.addr.084, i64 5, !dbg !3464
  store i8 %conv.i.5, ptr %arrayidx10.5, align 1, !dbg !3464
    #dbg_value(i64 6, !3447, !DIExpression(), !3463)
  %arrayidx.6 = getelementptr inbounds i8, ptr %src.addr.083, i64 6, !dbg !3464
  %31 = load i8, ptr %arrayidx.6, align 1, !dbg !3464
  %conv.6 = zext i8 %31 to i32, !dbg !3464
  %32 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.6 = mul nsw i32 %32, %conv.6, !dbg !3464
  %33 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.6 = add nsw i32 %33, -1, !dbg !3464
  %shl.6 = shl nuw i32 1, %sub.6, !dbg !3464
  %add.6 = add nsw i32 %shl.6, %mul.6, !dbg !3464
  %shr.6 = ashr i32 %add.6, %33, !dbg !3464
  %34 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.6 = add nsw i32 %shr.6, %34, !dbg !3464
    #dbg_value(i32 %add8.6, !1702, !DIExpression(), !3466)
  %tobool.not.i.6 = icmp ult i32 %add8.6, 256, !dbg !3468
  %35 = icmp sgt i32 %add8.6, 0, !dbg !3469
  %shr.i.6 = sext i1 %35 to i32, !dbg !3469
  %cond.i.6 = select i1 %tobool.not.i.6, i32 %add8.6, i32 %shr.i.6, !dbg !3469
  %conv.i.6 = trunc i32 %cond.i.6 to i8, !dbg !3469
  %arrayidx10.6 = getelementptr inbounds i8, ptr %dst.addr.084, i64 6, !dbg !3464
  store i8 %conv.i.6, ptr %arrayidx10.6, align 1, !dbg !3464
    #dbg_value(i64 7, !3447, !DIExpression(), !3463)
  %arrayidx.7 = getelementptr inbounds i8, ptr %src.addr.083, i64 7, !dbg !3464
  %36 = load i8, ptr %arrayidx.7, align 1, !dbg !3464
  %conv.7 = zext i8 %36 to i32, !dbg !3464
  %37 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.7 = mul nsw i32 %37, %conv.7, !dbg !3464
  %38 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.7 = add nsw i32 %38, -1, !dbg !3464
  %shl.7 = shl nuw i32 1, %sub.7, !dbg !3464
  %add.7 = add nsw i32 %shl.7, %mul.7, !dbg !3464
  %shr.7 = ashr i32 %add.7, %38, !dbg !3464
  %39 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.7 = add nsw i32 %shr.7, %39, !dbg !3464
    #dbg_value(i32 %add8.7, !1702, !DIExpression(), !3466)
  %tobool.not.i.7 = icmp ult i32 %add8.7, 256, !dbg !3468
  %40 = icmp sgt i32 %add8.7, 0, !dbg !3469
  %shr.i.7 = sext i1 %40 to i32, !dbg !3469
  %cond.i.7 = select i1 %tobool.not.i.7, i32 %add8.7, i32 %shr.i.7, !dbg !3469
  %conv.i.7 = trunc i32 %cond.i.7 to i8, !dbg !3469
  %arrayidx10.7 = getelementptr inbounds i8, ptr %dst.addr.084, i64 7, !dbg !3464
  store i8 %conv.i.7, ptr %arrayidx10.7, align 1, !dbg !3464
    #dbg_value(i64 8, !3447, !DIExpression(), !3463)
  %arrayidx.8 = getelementptr inbounds i8, ptr %src.addr.083, i64 8, !dbg !3464
  %41 = load i8, ptr %arrayidx.8, align 1, !dbg !3464
  %conv.8 = zext i8 %41 to i32, !dbg !3464
  %42 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.8 = mul nsw i32 %42, %conv.8, !dbg !3464
  %43 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.8 = add nsw i32 %43, -1, !dbg !3464
  %shl.8 = shl nuw i32 1, %sub.8, !dbg !3464
  %add.8 = add nsw i32 %shl.8, %mul.8, !dbg !3464
  %shr.8 = ashr i32 %add.8, %43, !dbg !3464
  %44 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.8 = add nsw i32 %shr.8, %44, !dbg !3464
    #dbg_value(i32 %add8.8, !1702, !DIExpression(), !3466)
  %tobool.not.i.8 = icmp ult i32 %add8.8, 256, !dbg !3468
  %45 = icmp sgt i32 %add8.8, 0, !dbg !3469
  %shr.i.8 = sext i1 %45 to i32, !dbg !3469
  %cond.i.8 = select i1 %tobool.not.i.8, i32 %add8.8, i32 %shr.i.8, !dbg !3469
  %conv.i.8 = trunc i32 %cond.i.8 to i8, !dbg !3469
  %arrayidx10.8 = getelementptr inbounds i8, ptr %dst.addr.084, i64 8, !dbg !3464
  store i8 %conv.i.8, ptr %arrayidx10.8, align 1, !dbg !3464
    #dbg_value(i64 9, !3447, !DIExpression(), !3463)
  %arrayidx.9 = getelementptr inbounds i8, ptr %src.addr.083, i64 9, !dbg !3464
  %46 = load i8, ptr %arrayidx.9, align 1, !dbg !3464
  %conv.9 = zext i8 %46 to i32, !dbg !3464
  %47 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.9 = mul nsw i32 %47, %conv.9, !dbg !3464
  %48 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.9 = add nsw i32 %48, -1, !dbg !3464
  %shl.9 = shl nuw i32 1, %sub.9, !dbg !3464
  %add.9 = add nsw i32 %shl.9, %mul.9, !dbg !3464
  %shr.9 = ashr i32 %add.9, %48, !dbg !3464
  %49 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.9 = add nsw i32 %shr.9, %49, !dbg !3464
    #dbg_value(i32 %add8.9, !1702, !DIExpression(), !3466)
  %tobool.not.i.9 = icmp ult i32 %add8.9, 256, !dbg !3468
  %50 = icmp sgt i32 %add8.9, 0, !dbg !3469
  %shr.i.9 = sext i1 %50 to i32, !dbg !3469
  %cond.i.9 = select i1 %tobool.not.i.9, i32 %add8.9, i32 %shr.i.9, !dbg !3469
  %conv.i.9 = trunc i32 %cond.i.9 to i8, !dbg !3469
  %arrayidx10.9 = getelementptr inbounds i8, ptr %dst.addr.084, i64 9, !dbg !3464
  store i8 %conv.i.9, ptr %arrayidx10.9, align 1, !dbg !3464
    #dbg_value(i64 10, !3447, !DIExpression(), !3463)
  %arrayidx.10 = getelementptr inbounds i8, ptr %src.addr.083, i64 10, !dbg !3464
  %51 = load i8, ptr %arrayidx.10, align 1, !dbg !3464
  %conv.10 = zext i8 %51 to i32, !dbg !3464
  %52 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.10 = mul nsw i32 %52, %conv.10, !dbg !3464
  %53 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.10 = add nsw i32 %53, -1, !dbg !3464
  %shl.10 = shl nuw i32 1, %sub.10, !dbg !3464
  %add.10 = add nsw i32 %shl.10, %mul.10, !dbg !3464
  %shr.10 = ashr i32 %add.10, %53, !dbg !3464
  %54 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.10 = add nsw i32 %shr.10, %54, !dbg !3464
    #dbg_value(i32 %add8.10, !1702, !DIExpression(), !3466)
  %tobool.not.i.10 = icmp ult i32 %add8.10, 256, !dbg !3468
  %55 = icmp sgt i32 %add8.10, 0, !dbg !3469
  %shr.i.10 = sext i1 %55 to i32, !dbg !3469
  %cond.i.10 = select i1 %tobool.not.i.10, i32 %add8.10, i32 %shr.i.10, !dbg !3469
  %conv.i.10 = trunc i32 %cond.i.10 to i8, !dbg !3469
  %arrayidx10.10 = getelementptr inbounds i8, ptr %dst.addr.084, i64 10, !dbg !3464
  store i8 %conv.i.10, ptr %arrayidx10.10, align 1, !dbg !3464
    #dbg_value(i64 11, !3447, !DIExpression(), !3463)
  %arrayidx.11 = getelementptr inbounds i8, ptr %src.addr.083, i64 11, !dbg !3464
  %56 = load i8, ptr %arrayidx.11, align 1, !dbg !3464
  %conv.11 = zext i8 %56 to i32, !dbg !3464
  %57 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.11 = mul nsw i32 %57, %conv.11, !dbg !3464
  %58 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.11 = add nsw i32 %58, -1, !dbg !3464
  %shl.11 = shl nuw i32 1, %sub.11, !dbg !3464
  %add.11 = add nsw i32 %shl.11, %mul.11, !dbg !3464
  %shr.11 = ashr i32 %add.11, %58, !dbg !3464
  %59 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.11 = add nsw i32 %shr.11, %59, !dbg !3464
    #dbg_value(i32 %add8.11, !1702, !DIExpression(), !3466)
  %tobool.not.i.11 = icmp ult i32 %add8.11, 256, !dbg !3468
  %60 = icmp sgt i32 %add8.11, 0, !dbg !3469
  %shr.i.11 = sext i1 %60 to i32, !dbg !3469
  %cond.i.11 = select i1 %tobool.not.i.11, i32 %add8.11, i32 %shr.i.11, !dbg !3469
  %conv.i.11 = trunc i32 %cond.i.11 to i8, !dbg !3469
  %arrayidx10.11 = getelementptr inbounds i8, ptr %dst.addr.084, i64 11, !dbg !3464
  store i8 %conv.i.11, ptr %arrayidx10.11, align 1, !dbg !3464
    #dbg_value(i64 12, !3447, !DIExpression(), !3463)
  %arrayidx.12 = getelementptr inbounds i8, ptr %src.addr.083, i64 12, !dbg !3464
  %61 = load i8, ptr %arrayidx.12, align 1, !dbg !3464
  %conv.12 = zext i8 %61 to i32, !dbg !3464
  %62 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.12 = mul nsw i32 %62, %conv.12, !dbg !3464
  %63 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.12 = add nsw i32 %63, -1, !dbg !3464
  %shl.12 = shl nuw i32 1, %sub.12, !dbg !3464
  %add.12 = add nsw i32 %shl.12, %mul.12, !dbg !3464
  %shr.12 = ashr i32 %add.12, %63, !dbg !3464
  %64 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.12 = add nsw i32 %shr.12, %64, !dbg !3464
    #dbg_value(i32 %add8.12, !1702, !DIExpression(), !3466)
  %tobool.not.i.12 = icmp ult i32 %add8.12, 256, !dbg !3468
  %65 = icmp sgt i32 %add8.12, 0, !dbg !3469
  %shr.i.12 = sext i1 %65 to i32, !dbg !3469
  %cond.i.12 = select i1 %tobool.not.i.12, i32 %add8.12, i32 %shr.i.12, !dbg !3469
  %conv.i.12 = trunc i32 %cond.i.12 to i8, !dbg !3469
  %arrayidx10.12 = getelementptr inbounds i8, ptr %dst.addr.084, i64 12, !dbg !3464
  store i8 %conv.i.12, ptr %arrayidx10.12, align 1, !dbg !3464
    #dbg_value(i64 13, !3447, !DIExpression(), !3463)
  %arrayidx.13 = getelementptr inbounds i8, ptr %src.addr.083, i64 13, !dbg !3464
  %66 = load i8, ptr %arrayidx.13, align 1, !dbg !3464
  %conv.13 = zext i8 %66 to i32, !dbg !3464
  %67 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.13 = mul nsw i32 %67, %conv.13, !dbg !3464
  %68 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.13 = add nsw i32 %68, -1, !dbg !3464
  %shl.13 = shl nuw i32 1, %sub.13, !dbg !3464
  %add.13 = add nsw i32 %shl.13, %mul.13, !dbg !3464
  %shr.13 = ashr i32 %add.13, %68, !dbg !3464
  %69 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.13 = add nsw i32 %shr.13, %69, !dbg !3464
    #dbg_value(i32 %add8.13, !1702, !DIExpression(), !3466)
  %tobool.not.i.13 = icmp ult i32 %add8.13, 256, !dbg !3468
  %70 = icmp sgt i32 %add8.13, 0, !dbg !3469
  %shr.i.13 = sext i1 %70 to i32, !dbg !3469
  %cond.i.13 = select i1 %tobool.not.i.13, i32 %add8.13, i32 %shr.i.13, !dbg !3469
  %conv.i.13 = trunc i32 %cond.i.13 to i8, !dbg !3469
  %arrayidx10.13 = getelementptr inbounds i8, ptr %dst.addr.084, i64 13, !dbg !3464
  store i8 %conv.i.13, ptr %arrayidx10.13, align 1, !dbg !3464
    #dbg_value(i64 14, !3447, !DIExpression(), !3463)
  %arrayidx.14 = getelementptr inbounds i8, ptr %src.addr.083, i64 14, !dbg !3464
  %71 = load i8, ptr %arrayidx.14, align 1, !dbg !3464
  %conv.14 = zext i8 %71 to i32, !dbg !3464
  %72 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.14 = mul nsw i32 %72, %conv.14, !dbg !3464
  %73 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.14 = add nsw i32 %73, -1, !dbg !3464
  %shl.14 = shl nuw i32 1, %sub.14, !dbg !3464
  %add.14 = add nsw i32 %shl.14, %mul.14, !dbg !3464
  %shr.14 = ashr i32 %add.14, %73, !dbg !3464
  %74 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.14 = add nsw i32 %shr.14, %74, !dbg !3464
    #dbg_value(i32 %add8.14, !1702, !DIExpression(), !3466)
  %tobool.not.i.14 = icmp ult i32 %add8.14, 256, !dbg !3468
  %75 = icmp sgt i32 %add8.14, 0, !dbg !3469
  %shr.i.14 = sext i1 %75 to i32, !dbg !3469
  %cond.i.14 = select i1 %tobool.not.i.14, i32 %add8.14, i32 %shr.i.14, !dbg !3469
  %conv.i.14 = trunc i32 %cond.i.14 to i8, !dbg !3469
  %arrayidx10.14 = getelementptr inbounds i8, ptr %dst.addr.084, i64 14, !dbg !3464
  store i8 %conv.i.14, ptr %arrayidx10.14, align 1, !dbg !3464
    #dbg_value(i64 15, !3447, !DIExpression(), !3463)
  %arrayidx.15 = getelementptr inbounds i8, ptr %src.addr.083, i64 15, !dbg !3464
  %76 = load i8, ptr %arrayidx.15, align 1, !dbg !3464
  %conv.15 = zext i8 %76 to i32, !dbg !3464
  %77 = load i32, ptr %i_scale, align 4, !dbg !3464
  %mul.15 = mul nsw i32 %77, %conv.15, !dbg !3464
  %78 = load i32, ptr %i_denom, align 16, !dbg !3464
  %sub.15 = add nsw i32 %78, -1, !dbg !3464
  %shl.15 = shl nuw i32 1, %sub.15, !dbg !3464
  %add.15 = add nsw i32 %shl.15, %mul.15, !dbg !3464
  %shr.15 = ashr i32 %add.15, %78, !dbg !3464
  %79 = load i32, ptr %i_offset, align 8, !dbg !3464
  %add8.15 = add nsw i32 %shr.15, %79, !dbg !3464
    #dbg_value(i32 %add8.15, !1702, !DIExpression(), !3466)
  %tobool.not.i.15 = icmp ult i32 %add8.15, 256, !dbg !3468
  %80 = icmp sgt i32 %add8.15, 0, !dbg !3469
  %shr.i.15 = sext i1 %80 to i32, !dbg !3469
  %cond.i.15 = select i1 %tobool.not.i.15, i32 %add8.15, i32 %shr.i.15, !dbg !3469
  %conv.i.15 = trunc i32 %cond.i.15 to i8, !dbg !3469
  %arrayidx10.15 = getelementptr inbounds i8, ptr %dst.addr.084, i64 15, !dbg !3464
  store i8 %conv.i.15, ptr %arrayidx10.15, align 1, !dbg !3464
    #dbg_value(i64 16, !3447, !DIExpression(), !3463)
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3470
    #dbg_value(i32 %inc12, !3443, !DIExpression(), !3461)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3470
    #dbg_value(ptr %add.ptr, !3437, !DIExpression(), !3456)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3470
    #dbg_value(ptr %add.ptr14, !3439, !DIExpression(), !3456)
  %exitcond90.not = icmp eq i32 %inc12, %height, !dbg !3470
  br i1 %exitcond90.not, label %if.end, label %for.cond2.preheader, !dbg !3462, !llvm.loop !3471

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3450, !DIExpression(), !3459)
    #dbg_value(ptr %dst.addr.179, !3437, !DIExpression(), !3456)
    #dbg_value(ptr %src.addr.178, !3439, !DIExpression(), !3456)
    #dbg_value(i32 0, !3453, !DIExpression(), !3472)
    #dbg_value(i64 0, !3453, !DIExpression(), !3472)
  %81 = load i8, ptr %src.addr.178, align 1, !dbg !3473
  %conv30 = zext i8 %81 to i32, !dbg !3473
  %82 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32 = mul nsw i32 %82, %conv30, !dbg !3473
  %83 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34 = add nsw i32 %mul32, %83, !dbg !3473
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3475)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3477
  %84 = icmp sgt i32 %add34, 0, !dbg !3478
  %shr.i72 = sext i1 %84 to i32, !dbg !3478
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3478
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3478
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3473
    #dbg_value(i64 1, !3453, !DIExpression(), !3472)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3473
  %85 = load i8, ptr %arrayidx29.1, align 1, !dbg !3473
  %conv30.1 = zext i8 %85 to i32, !dbg !3473
  %86 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.1 = mul nsw i32 %86, %conv30.1, !dbg !3473
  %87 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.1 = add nsw i32 %mul32.1, %87, !dbg !3473
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3475)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3477
  %88 = icmp sgt i32 %add34.1, 0, !dbg !3478
  %shr.i72.1 = sext i1 %88 to i32, !dbg !3478
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3478
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3478
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3473
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3473
    #dbg_value(i64 2, !3453, !DIExpression(), !3472)
  %arrayidx29.2 = getelementptr inbounds i8, ptr %src.addr.178, i64 2, !dbg !3473
  %89 = load i8, ptr %arrayidx29.2, align 1, !dbg !3473
  %conv30.2 = zext i8 %89 to i32, !dbg !3473
  %90 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.2 = mul nsw i32 %90, %conv30.2, !dbg !3473
  %91 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.2 = add nsw i32 %mul32.2, %91, !dbg !3473
    #dbg_value(i32 %add34.2, !1702, !DIExpression(), !3475)
  %tobool.not.i71.2 = icmp ult i32 %add34.2, 256, !dbg !3477
  %92 = icmp sgt i32 %add34.2, 0, !dbg !3478
  %shr.i72.2 = sext i1 %92 to i32, !dbg !3478
  %cond.i73.2 = select i1 %tobool.not.i71.2, i32 %add34.2, i32 %shr.i72.2, !dbg !3478
  %conv.i74.2 = trunc i32 %cond.i73.2 to i8, !dbg !3478
  %arrayidx37.2 = getelementptr inbounds i8, ptr %dst.addr.179, i64 2, !dbg !3473
  store i8 %conv.i74.2, ptr %arrayidx37.2, align 1, !dbg !3473
    #dbg_value(i64 3, !3453, !DIExpression(), !3472)
  %arrayidx29.3 = getelementptr inbounds i8, ptr %src.addr.178, i64 3, !dbg !3473
  %93 = load i8, ptr %arrayidx29.3, align 1, !dbg !3473
  %conv30.3 = zext i8 %93 to i32, !dbg !3473
  %94 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.3 = mul nsw i32 %94, %conv30.3, !dbg !3473
  %95 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.3 = add nsw i32 %mul32.3, %95, !dbg !3473
    #dbg_value(i32 %add34.3, !1702, !DIExpression(), !3475)
  %tobool.not.i71.3 = icmp ult i32 %add34.3, 256, !dbg !3477
  %96 = icmp sgt i32 %add34.3, 0, !dbg !3478
  %shr.i72.3 = sext i1 %96 to i32, !dbg !3478
  %cond.i73.3 = select i1 %tobool.not.i71.3, i32 %add34.3, i32 %shr.i72.3, !dbg !3478
  %conv.i74.3 = trunc i32 %cond.i73.3 to i8, !dbg !3478
  %arrayidx37.3 = getelementptr inbounds i8, ptr %dst.addr.179, i64 3, !dbg !3473
  store i8 %conv.i74.3, ptr %arrayidx37.3, align 1, !dbg !3473
    #dbg_value(i64 4, !3453, !DIExpression(), !3472)
  %arrayidx29.4 = getelementptr inbounds i8, ptr %src.addr.178, i64 4, !dbg !3473
  %97 = load i8, ptr %arrayidx29.4, align 1, !dbg !3473
  %conv30.4 = zext i8 %97 to i32, !dbg !3473
  %98 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.4 = mul nsw i32 %98, %conv30.4, !dbg !3473
  %99 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.4 = add nsw i32 %mul32.4, %99, !dbg !3473
    #dbg_value(i32 %add34.4, !1702, !DIExpression(), !3475)
  %tobool.not.i71.4 = icmp ult i32 %add34.4, 256, !dbg !3477
  %100 = icmp sgt i32 %add34.4, 0, !dbg !3478
  %shr.i72.4 = sext i1 %100 to i32, !dbg !3478
  %cond.i73.4 = select i1 %tobool.not.i71.4, i32 %add34.4, i32 %shr.i72.4, !dbg !3478
  %conv.i74.4 = trunc i32 %cond.i73.4 to i8, !dbg !3478
  %arrayidx37.4 = getelementptr inbounds i8, ptr %dst.addr.179, i64 4, !dbg !3473
  store i8 %conv.i74.4, ptr %arrayidx37.4, align 1, !dbg !3473
    #dbg_value(i64 5, !3453, !DIExpression(), !3472)
  %arrayidx29.5 = getelementptr inbounds i8, ptr %src.addr.178, i64 5, !dbg !3473
  %101 = load i8, ptr %arrayidx29.5, align 1, !dbg !3473
  %conv30.5 = zext i8 %101 to i32, !dbg !3473
  %102 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.5 = mul nsw i32 %102, %conv30.5, !dbg !3473
  %103 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.5 = add nsw i32 %mul32.5, %103, !dbg !3473
    #dbg_value(i32 %add34.5, !1702, !DIExpression(), !3475)
  %tobool.not.i71.5 = icmp ult i32 %add34.5, 256, !dbg !3477
  %104 = icmp sgt i32 %add34.5, 0, !dbg !3478
  %shr.i72.5 = sext i1 %104 to i32, !dbg !3478
  %cond.i73.5 = select i1 %tobool.not.i71.5, i32 %add34.5, i32 %shr.i72.5, !dbg !3478
  %conv.i74.5 = trunc i32 %cond.i73.5 to i8, !dbg !3478
  %arrayidx37.5 = getelementptr inbounds i8, ptr %dst.addr.179, i64 5, !dbg !3473
  store i8 %conv.i74.5, ptr %arrayidx37.5, align 1, !dbg !3473
    #dbg_value(i64 6, !3453, !DIExpression(), !3472)
  %arrayidx29.6 = getelementptr inbounds i8, ptr %src.addr.178, i64 6, !dbg !3473
  %105 = load i8, ptr %arrayidx29.6, align 1, !dbg !3473
  %conv30.6 = zext i8 %105 to i32, !dbg !3473
  %106 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.6 = mul nsw i32 %106, %conv30.6, !dbg !3473
  %107 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.6 = add nsw i32 %mul32.6, %107, !dbg !3473
    #dbg_value(i32 %add34.6, !1702, !DIExpression(), !3475)
  %tobool.not.i71.6 = icmp ult i32 %add34.6, 256, !dbg !3477
  %108 = icmp sgt i32 %add34.6, 0, !dbg !3478
  %shr.i72.6 = sext i1 %108 to i32, !dbg !3478
  %cond.i73.6 = select i1 %tobool.not.i71.6, i32 %add34.6, i32 %shr.i72.6, !dbg !3478
  %conv.i74.6 = trunc i32 %cond.i73.6 to i8, !dbg !3478
  %arrayidx37.6 = getelementptr inbounds i8, ptr %dst.addr.179, i64 6, !dbg !3473
  store i8 %conv.i74.6, ptr %arrayidx37.6, align 1, !dbg !3473
    #dbg_value(i64 7, !3453, !DIExpression(), !3472)
  %arrayidx29.7 = getelementptr inbounds i8, ptr %src.addr.178, i64 7, !dbg !3473
  %109 = load i8, ptr %arrayidx29.7, align 1, !dbg !3473
  %conv30.7 = zext i8 %109 to i32, !dbg !3473
  %110 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.7 = mul nsw i32 %110, %conv30.7, !dbg !3473
  %111 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.7 = add nsw i32 %mul32.7, %111, !dbg !3473
    #dbg_value(i32 %add34.7, !1702, !DIExpression(), !3475)
  %tobool.not.i71.7 = icmp ult i32 %add34.7, 256, !dbg !3477
  %112 = icmp sgt i32 %add34.7, 0, !dbg !3478
  %shr.i72.7 = sext i1 %112 to i32, !dbg !3478
  %cond.i73.7 = select i1 %tobool.not.i71.7, i32 %add34.7, i32 %shr.i72.7, !dbg !3478
  %conv.i74.7 = trunc i32 %cond.i73.7 to i8, !dbg !3478
  %arrayidx37.7 = getelementptr inbounds i8, ptr %dst.addr.179, i64 7, !dbg !3473
  store i8 %conv.i74.7, ptr %arrayidx37.7, align 1, !dbg !3473
    #dbg_value(i64 8, !3453, !DIExpression(), !3472)
  %arrayidx29.8 = getelementptr inbounds i8, ptr %src.addr.178, i64 8, !dbg !3473
  %113 = load i8, ptr %arrayidx29.8, align 1, !dbg !3473
  %conv30.8 = zext i8 %113 to i32, !dbg !3473
  %114 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.8 = mul nsw i32 %114, %conv30.8, !dbg !3473
  %115 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.8 = add nsw i32 %mul32.8, %115, !dbg !3473
    #dbg_value(i32 %add34.8, !1702, !DIExpression(), !3475)
  %tobool.not.i71.8 = icmp ult i32 %add34.8, 256, !dbg !3477
  %116 = icmp sgt i32 %add34.8, 0, !dbg !3478
  %shr.i72.8 = sext i1 %116 to i32, !dbg !3478
  %cond.i73.8 = select i1 %tobool.not.i71.8, i32 %add34.8, i32 %shr.i72.8, !dbg !3478
  %conv.i74.8 = trunc i32 %cond.i73.8 to i8, !dbg !3478
  %arrayidx37.8 = getelementptr inbounds i8, ptr %dst.addr.179, i64 8, !dbg !3473
  store i8 %conv.i74.8, ptr %arrayidx37.8, align 1, !dbg !3473
    #dbg_value(i64 9, !3453, !DIExpression(), !3472)
  %arrayidx29.9 = getelementptr inbounds i8, ptr %src.addr.178, i64 9, !dbg !3473
  %117 = load i8, ptr %arrayidx29.9, align 1, !dbg !3473
  %conv30.9 = zext i8 %117 to i32, !dbg !3473
  %118 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.9 = mul nsw i32 %118, %conv30.9, !dbg !3473
  %119 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.9 = add nsw i32 %mul32.9, %119, !dbg !3473
    #dbg_value(i32 %add34.9, !1702, !DIExpression(), !3475)
  %tobool.not.i71.9 = icmp ult i32 %add34.9, 256, !dbg !3477
  %120 = icmp sgt i32 %add34.9, 0, !dbg !3478
  %shr.i72.9 = sext i1 %120 to i32, !dbg !3478
  %cond.i73.9 = select i1 %tobool.not.i71.9, i32 %add34.9, i32 %shr.i72.9, !dbg !3478
  %conv.i74.9 = trunc i32 %cond.i73.9 to i8, !dbg !3478
  %arrayidx37.9 = getelementptr inbounds i8, ptr %dst.addr.179, i64 9, !dbg !3473
  store i8 %conv.i74.9, ptr %arrayidx37.9, align 1, !dbg !3473
    #dbg_value(i64 10, !3453, !DIExpression(), !3472)
  %arrayidx29.10 = getelementptr inbounds i8, ptr %src.addr.178, i64 10, !dbg !3473
  %121 = load i8, ptr %arrayidx29.10, align 1, !dbg !3473
  %conv30.10 = zext i8 %121 to i32, !dbg !3473
  %122 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.10 = mul nsw i32 %122, %conv30.10, !dbg !3473
  %123 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.10 = add nsw i32 %mul32.10, %123, !dbg !3473
    #dbg_value(i32 %add34.10, !1702, !DIExpression(), !3475)
  %tobool.not.i71.10 = icmp ult i32 %add34.10, 256, !dbg !3477
  %124 = icmp sgt i32 %add34.10, 0, !dbg !3478
  %shr.i72.10 = sext i1 %124 to i32, !dbg !3478
  %cond.i73.10 = select i1 %tobool.not.i71.10, i32 %add34.10, i32 %shr.i72.10, !dbg !3478
  %conv.i74.10 = trunc i32 %cond.i73.10 to i8, !dbg !3478
  %arrayidx37.10 = getelementptr inbounds i8, ptr %dst.addr.179, i64 10, !dbg !3473
  store i8 %conv.i74.10, ptr %arrayidx37.10, align 1, !dbg !3473
    #dbg_value(i64 11, !3453, !DIExpression(), !3472)
  %arrayidx29.11 = getelementptr inbounds i8, ptr %src.addr.178, i64 11, !dbg !3473
  %125 = load i8, ptr %arrayidx29.11, align 1, !dbg !3473
  %conv30.11 = zext i8 %125 to i32, !dbg !3473
  %126 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.11 = mul nsw i32 %126, %conv30.11, !dbg !3473
  %127 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.11 = add nsw i32 %mul32.11, %127, !dbg !3473
    #dbg_value(i32 %add34.11, !1702, !DIExpression(), !3475)
  %tobool.not.i71.11 = icmp ult i32 %add34.11, 256, !dbg !3477
  %128 = icmp sgt i32 %add34.11, 0, !dbg !3478
  %shr.i72.11 = sext i1 %128 to i32, !dbg !3478
  %cond.i73.11 = select i1 %tobool.not.i71.11, i32 %add34.11, i32 %shr.i72.11, !dbg !3478
  %conv.i74.11 = trunc i32 %cond.i73.11 to i8, !dbg !3478
  %arrayidx37.11 = getelementptr inbounds i8, ptr %dst.addr.179, i64 11, !dbg !3473
  store i8 %conv.i74.11, ptr %arrayidx37.11, align 1, !dbg !3473
    #dbg_value(i64 12, !3453, !DIExpression(), !3472)
  %arrayidx29.12 = getelementptr inbounds i8, ptr %src.addr.178, i64 12, !dbg !3473
  %129 = load i8, ptr %arrayidx29.12, align 1, !dbg !3473
  %conv30.12 = zext i8 %129 to i32, !dbg !3473
  %130 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.12 = mul nsw i32 %130, %conv30.12, !dbg !3473
  %131 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.12 = add nsw i32 %mul32.12, %131, !dbg !3473
    #dbg_value(i32 %add34.12, !1702, !DIExpression(), !3475)
  %tobool.not.i71.12 = icmp ult i32 %add34.12, 256, !dbg !3477
  %132 = icmp sgt i32 %add34.12, 0, !dbg !3478
  %shr.i72.12 = sext i1 %132 to i32, !dbg !3478
  %cond.i73.12 = select i1 %tobool.not.i71.12, i32 %add34.12, i32 %shr.i72.12, !dbg !3478
  %conv.i74.12 = trunc i32 %cond.i73.12 to i8, !dbg !3478
  %arrayidx37.12 = getelementptr inbounds i8, ptr %dst.addr.179, i64 12, !dbg !3473
  store i8 %conv.i74.12, ptr %arrayidx37.12, align 1, !dbg !3473
    #dbg_value(i64 13, !3453, !DIExpression(), !3472)
  %arrayidx29.13 = getelementptr inbounds i8, ptr %src.addr.178, i64 13, !dbg !3473
  %133 = load i8, ptr %arrayidx29.13, align 1, !dbg !3473
  %conv30.13 = zext i8 %133 to i32, !dbg !3473
  %134 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.13 = mul nsw i32 %134, %conv30.13, !dbg !3473
  %135 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.13 = add nsw i32 %mul32.13, %135, !dbg !3473
    #dbg_value(i32 %add34.13, !1702, !DIExpression(), !3475)
  %tobool.not.i71.13 = icmp ult i32 %add34.13, 256, !dbg !3477
  %136 = icmp sgt i32 %add34.13, 0, !dbg !3478
  %shr.i72.13 = sext i1 %136 to i32, !dbg !3478
  %cond.i73.13 = select i1 %tobool.not.i71.13, i32 %add34.13, i32 %shr.i72.13, !dbg !3478
  %conv.i74.13 = trunc i32 %cond.i73.13 to i8, !dbg !3478
  %arrayidx37.13 = getelementptr inbounds i8, ptr %dst.addr.179, i64 13, !dbg !3473
  store i8 %conv.i74.13, ptr %arrayidx37.13, align 1, !dbg !3473
    #dbg_value(i64 14, !3453, !DIExpression(), !3472)
  %arrayidx29.14 = getelementptr inbounds i8, ptr %src.addr.178, i64 14, !dbg !3473
  %137 = load i8, ptr %arrayidx29.14, align 1, !dbg !3473
  %conv30.14 = zext i8 %137 to i32, !dbg !3473
  %138 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.14 = mul nsw i32 %138, %conv30.14, !dbg !3473
  %139 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.14 = add nsw i32 %mul32.14, %139, !dbg !3473
    #dbg_value(i32 %add34.14, !1702, !DIExpression(), !3475)
  %tobool.not.i71.14 = icmp ult i32 %add34.14, 256, !dbg !3477
  %140 = icmp sgt i32 %add34.14, 0, !dbg !3478
  %shr.i72.14 = sext i1 %140 to i32, !dbg !3478
  %cond.i73.14 = select i1 %tobool.not.i71.14, i32 %add34.14, i32 %shr.i72.14, !dbg !3478
  %conv.i74.14 = trunc i32 %cond.i73.14 to i8, !dbg !3478
  %arrayidx37.14 = getelementptr inbounds i8, ptr %dst.addr.179, i64 14, !dbg !3473
  store i8 %conv.i74.14, ptr %arrayidx37.14, align 1, !dbg !3473
    #dbg_value(i64 15, !3453, !DIExpression(), !3472)
  %arrayidx29.15 = getelementptr inbounds i8, ptr %src.addr.178, i64 15, !dbg !3473
  %141 = load i8, ptr %arrayidx29.15, align 1, !dbg !3473
  %conv30.15 = zext i8 %141 to i32, !dbg !3473
  %142 = load i32, ptr %i_scale31, align 4, !dbg !3473
  %mul32.15 = mul nsw i32 %142, %conv30.15, !dbg !3473
  %143 = load i32, ptr %i_offset33, align 8, !dbg !3473
  %add34.15 = add nsw i32 %mul32.15, %143, !dbg !3473
    #dbg_value(i32 %add34.15, !1702, !DIExpression(), !3475)
  %tobool.not.i71.15 = icmp ult i32 %add34.15, 256, !dbg !3477
  %144 = icmp sgt i32 %add34.15, 0, !dbg !3478
  %shr.i72.15 = sext i1 %144 to i32, !dbg !3478
  %cond.i73.15 = select i1 %tobool.not.i71.15, i32 %add34.15, i32 %shr.i72.15, !dbg !3478
  %conv.i74.15 = trunc i32 %cond.i73.15 to i8, !dbg !3478
  %arrayidx37.15 = getelementptr inbounds i8, ptr %dst.addr.179, i64 15, !dbg !3473
  store i8 %conv.i74.15, ptr %arrayidx37.15, align 1, !dbg !3473
    #dbg_value(i64 16, !3453, !DIExpression(), !3472)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3479
    #dbg_value(i32 %inc42, !3450, !DIExpression(), !3459)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3479
    #dbg_value(ptr %add.ptr44, !3437, !DIExpression(), !3456)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3479
    #dbg_value(ptr %add.ptr46, !3439, !DIExpression(), !3456)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3479
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3460, !llvm.loop !3480

if.end:                                           ; preds = %for.cond23.preheader, %for.cond2.preheader, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3458
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal void @mc_weight_w20(ptr nocapture noundef writeonly %dst, i32 noundef %i_dst_stride, ptr nocapture noundef readonly %src, i32 noundef %i_src_stride, ptr nocapture noundef readonly %weight, i32 noundef %height) #0 !dbg !3481 {
entry:
    #dbg_value(ptr %dst, !3483, !DIExpression(), !3502)
    #dbg_value(i32 %i_dst_stride, !3484, !DIExpression(), !3502)
    #dbg_value(ptr %src, !3485, !DIExpression(), !3502)
    #dbg_value(i32 %i_src_stride, !3486, !DIExpression(), !3502)
    #dbg_value(ptr %weight, !3487, !DIExpression(), !3502)
    #dbg_value(i32 %height, !3488, !DIExpression(), !3502)
  %i_denom = getelementptr inbounds i8, ptr %weight, i64 32, !dbg !3503
  %0 = load i32, ptr %i_denom, align 16, !dbg !3503
  %cmp = icmp sgt i32 %0, 0, !dbg !3503
  %cmp182 = icmp sgt i32 %height, 0, !dbg !3503
  br i1 %cmp, label %for.cond.preheader, label %for.cond17.preheader, !dbg !3504

for.cond17.preheader:                             ; preds = %entry
    #dbg_value(i32 0, !3496, !DIExpression(), !3505)
  br i1 %cmp182, label %for.cond23.preheader.lr.ph, label %if.end, !dbg !3506

for.cond23.preheader.lr.ph:                       ; preds = %for.cond17.preheader
  %i_scale31 = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset33 = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext43 = sext i32 %i_dst_stride to i64
  %idx.ext45 = sext i32 %i_src_stride to i64
  br label %for.cond23.preheader, !dbg !3506

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !3489, !DIExpression(), !3507)
  br i1 %cmp182, label %for.cond2.preheader.lr.ph, label %if.end, !dbg !3508

for.cond2.preheader.lr.ph:                        ; preds = %for.cond.preheader
  %i_scale = getelementptr inbounds i8, ptr %weight, i64 36
  %i_offset = getelementptr inbounds i8, ptr %weight, i64 40
  %idx.ext = sext i32 %i_dst_stride to i64
  %idx.ext13 = sext i32 %i_src_stride to i64
  %1 = add nsw i32 %height, -1, !dbg !3508
  %2 = zext i32 %1 to i64, !dbg !3508
  %3 = mul nsw i64 %idx.ext, %2, !dbg !3508
  %4 = getelementptr i8, ptr %dst, i64 %3, !dbg !3508
  %scevgep = getelementptr i8, ptr %4, i64 20, !dbg !3508
  %5 = mul nsw i64 %idx.ext13, %2, !dbg !3508
  %6 = getelementptr i8, ptr %src, i64 %5, !dbg !3508
  %scevgep93 = getelementptr i8, ptr %6, i64 20, !dbg !3508
  %scevgep94 = getelementptr i8, ptr %weight, i64 44, !dbg !3508
  %bound0 = icmp ugt ptr %scevgep93, %dst
  %bound1 = icmp ugt ptr %scevgep, %src
  %found.conflict = and i1 %bound0, %bound1
  %7 = or i32 %i_dst_stride, %i_src_stride
  %8 = icmp slt i32 %7, 0
  %9 = or i1 %found.conflict, %8
  %bound096 = icmp ugt ptr %scevgep94, %dst
  %bound197 = icmp ult ptr %i_denom, %scevgep
  %found.conflict98 = and i1 %bound096, %bound197
  %stride.check99 = icmp slt i32 %i_dst_stride, 0
  %10 = or i1 %found.conflict98, %stride.check99
  %conflict.rdx = or i1 %9, %10
  br label %vector.memcheck, !dbg !3508

vector.memcheck:                                  ; preds = %for.cond.cleanup4, %for.cond2.preheader.lr.ph
  %y.085 = phi i32 [ 0, %for.cond2.preheader.lr.ph ], [ %inc12, %for.cond.cleanup4 ]
  %dst.addr.084 = phi ptr [ %dst, %for.cond2.preheader.lr.ph ], [ %add.ptr, %for.cond.cleanup4 ]
  %src.addr.083 = phi ptr [ %src, %for.cond2.preheader.lr.ph ], [ %add.ptr14, %for.cond.cleanup4 ]
    #dbg_value(i32 %y.085, !3489, !DIExpression(), !3507)
    #dbg_value(ptr %dst.addr.084, !3483, !DIExpression(), !3502)
    #dbg_value(ptr %src.addr.083, !3485, !DIExpression(), !3502)
    #dbg_value(i32 0, !3493, !DIExpression(), !3509)
  br i1 %conflict.rdx, label %for.body5.preheader, label %vector.body, !dbg !3510

for.body5.preheader:                              ; preds = %vector.body, %vector.memcheck
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 16, %vector.body ]
  br label %for.body5, !dbg !3510

vector.body:                                      ; preds = %vector.memcheck
  %11 = getelementptr inbounds i8, ptr %src.addr.083, i64 4, !dbg !3511
  %12 = getelementptr inbounds i8, ptr %src.addr.083, i64 8, !dbg !3511
  %13 = getelementptr inbounds i8, ptr %src.addr.083, i64 12, !dbg !3511
  %wide.load = load <4 x i8>, ptr %src.addr.083, align 1, !dbg !3511, !alias.scope !3513
  %wide.load100 = load <4 x i8>, ptr %11, align 1, !dbg !3511, !alias.scope !3513
  %wide.load101 = load <4 x i8>, ptr %12, align 1, !dbg !3511, !alias.scope !3513
  %wide.load102 = load <4 x i8>, ptr %13, align 1, !dbg !3511, !alias.scope !3513
  %14 = zext <4 x i8> %wide.load to <4 x i32>, !dbg !3511
  %15 = zext <4 x i8> %wide.load100 to <4 x i32>, !dbg !3511
  %16 = zext <4 x i8> %wide.load101 to <4 x i32>, !dbg !3511
  %17 = zext <4 x i8> %wide.load102 to <4 x i32>, !dbg !3511
  %18 = load i32, ptr %i_scale, align 4, !dbg !3511, !alias.scope !3516
  %broadcast.splatinsert107 = insertelement <4 x i32> poison, i32 %18, i64 0, !dbg !3510
  %broadcast.splat108 = shufflevector <4 x i32> %broadcast.splatinsert107, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !3510
  %19 = mul nsw <4 x i32> %broadcast.splat108, %14, !dbg !3510
  %20 = mul nsw <4 x i32> %broadcast.splat108, %15, !dbg !3510
  %21 = mul nsw <4 x i32> %broadcast.splat108, %16, !dbg !3510
  %22 = mul nsw <4 x i32> %broadcast.splat108, %17, !dbg !3510
  %23 = load i32, ptr %i_denom, align 16, !dbg !3511, !alias.scope !3516
  %broadcast.splatinsert115 = insertelement <4 x i32> poison, i32 %23, i64 0, !dbg !3510
  %broadcast.splat116 = shufflevector <4 x i32> %broadcast.splatinsert115, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !3510
  %24 = add nsw <4 x i32> %broadcast.splat116, <i32 -1, i32 -1, i32 -1, i32 -1>, !dbg !3510
  %25 = add nsw <4 x i32> %broadcast.splat116, <i32 -1, i32 -1, i32 -1, i32 -1>, !dbg !3510
  %26 = add nsw <4 x i32> %broadcast.splat116, <i32 -1, i32 -1, i32 -1, i32 -1>, !dbg !3510
  %27 = add nsw <4 x i32> %broadcast.splat116, <i32 -1, i32 -1, i32 -1, i32 -1>, !dbg !3510
  %28 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %24, !dbg !3511
  %29 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %25, !dbg !3511
  %30 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %26, !dbg !3511
  %31 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %27, !dbg !3511
  %32 = add nsw <4 x i32> %28, %19, !dbg !3511
  %33 = add nsw <4 x i32> %29, %20, !dbg !3511
  %34 = add nsw <4 x i32> %30, %21, !dbg !3511
  %35 = add nsw <4 x i32> %31, %22, !dbg !3511
  %36 = ashr <4 x i32> %32, %broadcast.splat116, !dbg !3511
  %37 = ashr <4 x i32> %33, %broadcast.splat116, !dbg !3511
  %38 = ashr <4 x i32> %34, %broadcast.splat116, !dbg !3511
  %39 = ashr <4 x i32> %35, %broadcast.splat116, !dbg !3511
  %40 = load i32, ptr %i_offset, align 8, !dbg !3511, !alias.scope !3516
  %broadcast.splatinsert123 = insertelement <4 x i32> poison, i32 %40, i64 0, !dbg !3510
  %broadcast.splat124 = shufflevector <4 x i32> %broadcast.splatinsert123, <4 x i32> poison, <4 x i32> zeroinitializer, !dbg !3510
  %41 = add nsw <4 x i32> %36, %broadcast.splat124, !dbg !3510
  %42 = add nsw <4 x i32> %37, %broadcast.splat124, !dbg !3510
  %43 = add nsw <4 x i32> %38, %broadcast.splat124, !dbg !3510
  %44 = add nsw <4 x i32> %39, %broadcast.splat124, !dbg !3510
  %45 = icmp ult <4 x i32> %41, <i32 256, i32 256, i32 256, i32 256>, !dbg !3518
  %46 = icmp ult <4 x i32> %42, <i32 256, i32 256, i32 256, i32 256>, !dbg !3518
  %47 = icmp ult <4 x i32> %43, <i32 256, i32 256, i32 256, i32 256>, !dbg !3518
  %48 = icmp ult <4 x i32> %44, <i32 256, i32 256, i32 256, i32 256>, !dbg !3518
  %49 = icmp sgt <4 x i32> %41, zeroinitializer, !dbg !3520
  %50 = icmp sgt <4 x i32> %42, zeroinitializer, !dbg !3520
  %51 = icmp sgt <4 x i32> %43, zeroinitializer, !dbg !3520
  %52 = icmp sgt <4 x i32> %44, zeroinitializer, !dbg !3520
  %53 = sext <4 x i1> %49 to <4 x i32>, !dbg !3520
  %54 = sext <4 x i1> %50 to <4 x i32>, !dbg !3520
  %55 = sext <4 x i1> %51 to <4 x i32>, !dbg !3520
  %56 = sext <4 x i1> %52 to <4 x i32>, !dbg !3520
  %57 = select <4 x i1> %45, <4 x i32> %41, <4 x i32> %53, !dbg !3520
  %58 = select <4 x i1> %46, <4 x i32> %42, <4 x i32> %54, !dbg !3520
  %59 = select <4 x i1> %47, <4 x i32> %43, <4 x i32> %55, !dbg !3520
  %60 = select <4 x i1> %48, <4 x i32> %44, <4 x i32> %56, !dbg !3520
  %61 = trunc <4 x i32> %57 to <4 x i8>, !dbg !3520
  %62 = trunc <4 x i32> %58 to <4 x i8>, !dbg !3520
  %63 = trunc <4 x i32> %59 to <4 x i8>, !dbg !3520
  %64 = trunc <4 x i32> %60 to <4 x i8>, !dbg !3520
  %65 = getelementptr inbounds i8, ptr %dst.addr.084, i64 4, !dbg !3511
  %66 = getelementptr inbounds i8, ptr %dst.addr.084, i64 8, !dbg !3511
  %67 = getelementptr inbounds i8, ptr %dst.addr.084, i64 12, !dbg !3511
  store <4 x i8> %61, ptr %dst.addr.084, align 1, !dbg !3511, !alias.scope !3521, !noalias !3523
  store <4 x i8> %62, ptr %65, align 1, !dbg !3511, !alias.scope !3521, !noalias !3523
  store <4 x i8> %63, ptr %66, align 1, !dbg !3511, !alias.scope !3521, !noalias !3523
  store <4 x i8> %64, ptr %67, align 1, !dbg !3511, !alias.scope !3521, !noalias !3523
  br label %for.body5.preheader, !dbg !3510

for.cond.cleanup4:                                ; preds = %for.body5
  %inc12 = add nuw nsw i32 %y.085, 1, !dbg !3524
    #dbg_value(i32 %inc12, !3489, !DIExpression(), !3507)
  %add.ptr = getelementptr inbounds i8, ptr %dst.addr.084, i64 %idx.ext, !dbg !3524
    #dbg_value(ptr %add.ptr, !3483, !DIExpression(), !3502)
  %add.ptr14 = getelementptr inbounds i8, ptr %src.addr.083, i64 %idx.ext13, !dbg !3524
    #dbg_value(ptr %add.ptr14, !3485, !DIExpression(), !3502)
  %exitcond90.not = icmp eq i32 %inc12, %height, !dbg !3524
  br i1 %exitcond90.not, label %if.end, label %vector.memcheck, !dbg !3508, !llvm.loop !3525

for.body5:                                        ; preds = %for.body5.preheader, %for.body5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ %indvars.iv.ph, %for.body5.preheader ]
    #dbg_value(i64 %indvars.iv, !3493, !DIExpression(), !3509)
  %arrayidx = getelementptr inbounds i8, ptr %src.addr.083, i64 %indvars.iv, !dbg !3511
  %68 = load i8, ptr %arrayidx, align 1, !dbg !3511
  %conv = zext i8 %68 to i32, !dbg !3511
  %69 = load i32, ptr %i_scale, align 4, !dbg !3511
  %mul = mul nsw i32 %69, %conv, !dbg !3511
  %70 = load i32, ptr %i_denom, align 16, !dbg !3511
  %sub = add nsw i32 %70, -1, !dbg !3511
  %shl = shl nuw i32 1, %sub, !dbg !3511
  %add = add nsw i32 %shl, %mul, !dbg !3511
  %shr = ashr i32 %add, %70, !dbg !3511
  %71 = load i32, ptr %i_offset, align 8, !dbg !3511
  %add8 = add nsw i32 %shr, %71, !dbg !3511
    #dbg_value(i32 %add8, !1702, !DIExpression(), !3526)
  %tobool.not.i = icmp ult i32 %add8, 256, !dbg !3518
  %72 = icmp sgt i32 %add8, 0, !dbg !3520
  %shr.i = sext i1 %72 to i32, !dbg !3520
  %cond.i = select i1 %tobool.not.i, i32 %add8, i32 %shr.i, !dbg !3520
  %conv.i = trunc i32 %cond.i to i8, !dbg !3520
  %arrayidx10 = getelementptr inbounds i8, ptr %dst.addr.084, i64 %indvars.iv, !dbg !3511
  store i8 %conv.i, ptr %arrayidx10, align 1, !dbg !3511
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3511
    #dbg_value(i64 %indvars.iv.next, !3493, !DIExpression(), !3509)
  %exitcond89.not = icmp eq i64 %indvars.iv.next, 20, !dbg !3511
  br i1 %exitcond89.not, label %for.cond.cleanup4, label %for.body5, !dbg !3510, !llvm.loop !3527

for.cond23.preheader:                             ; preds = %for.cond23.preheader.lr.ph, %for.cond23.preheader
  %y16.080 = phi i32 [ 0, %for.cond23.preheader.lr.ph ], [ %inc42, %for.cond23.preheader ]
  %dst.addr.179 = phi ptr [ %dst, %for.cond23.preheader.lr.ph ], [ %add.ptr44, %for.cond23.preheader ]
  %src.addr.178 = phi ptr [ %src, %for.cond23.preheader.lr.ph ], [ %add.ptr46, %for.cond23.preheader ]
    #dbg_value(i32 %y16.080, !3496, !DIExpression(), !3505)
    #dbg_value(ptr %dst.addr.179, !3483, !DIExpression(), !3502)
    #dbg_value(ptr %src.addr.178, !3485, !DIExpression(), !3502)
    #dbg_value(i64 0, !3499, !DIExpression(), !3528)
  %73 = load i8, ptr %src.addr.178, align 1, !dbg !3529
  %conv30 = zext i8 %73 to i32, !dbg !3529
  %74 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32 = mul nsw i32 %74, %conv30, !dbg !3529
  %75 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34 = add nsw i32 %mul32, %75, !dbg !3529
    #dbg_value(i32 %add34, !1702, !DIExpression(), !3531)
  %tobool.not.i71 = icmp ult i32 %add34, 256, !dbg !3533
  %76 = icmp sgt i32 %add34, 0, !dbg !3534
  %shr.i72 = sext i1 %76 to i32, !dbg !3534
  %cond.i73 = select i1 %tobool.not.i71, i32 %add34, i32 %shr.i72, !dbg !3534
  %conv.i74 = trunc i32 %cond.i73 to i8, !dbg !3534
  store i8 %conv.i74, ptr %dst.addr.179, align 1, !dbg !3529
    #dbg_value(i64 1, !3499, !DIExpression(), !3528)
  %arrayidx29.1 = getelementptr inbounds i8, ptr %src.addr.178, i64 1, !dbg !3529
  %77 = load i8, ptr %arrayidx29.1, align 1, !dbg !3529
  %conv30.1 = zext i8 %77 to i32, !dbg !3529
  %78 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.1 = mul nsw i32 %78, %conv30.1, !dbg !3529
  %79 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.1 = add nsw i32 %mul32.1, %79, !dbg !3529
    #dbg_value(i32 %add34.1, !1702, !DIExpression(), !3531)
  %tobool.not.i71.1 = icmp ult i32 %add34.1, 256, !dbg !3533
  %80 = icmp sgt i32 %add34.1, 0, !dbg !3534
  %shr.i72.1 = sext i1 %80 to i32, !dbg !3534
  %cond.i73.1 = select i1 %tobool.not.i71.1, i32 %add34.1, i32 %shr.i72.1, !dbg !3534
  %conv.i74.1 = trunc i32 %cond.i73.1 to i8, !dbg !3534
  %arrayidx37.1 = getelementptr inbounds i8, ptr %dst.addr.179, i64 1, !dbg !3529
  store i8 %conv.i74.1, ptr %arrayidx37.1, align 1, !dbg !3529
    #dbg_value(i64 2, !3499, !DIExpression(), !3528)
  %arrayidx29.2 = getelementptr inbounds i8, ptr %src.addr.178, i64 2, !dbg !3529
  %81 = load i8, ptr %arrayidx29.2, align 1, !dbg !3529
  %conv30.2 = zext i8 %81 to i32, !dbg !3529
  %82 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.2 = mul nsw i32 %82, %conv30.2, !dbg !3529
  %83 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.2 = add nsw i32 %mul32.2, %83, !dbg !3529
    #dbg_value(i32 %add34.2, !1702, !DIExpression(), !3531)
  %tobool.not.i71.2 = icmp ult i32 %add34.2, 256, !dbg !3533
  %84 = icmp sgt i32 %add34.2, 0, !dbg !3534
  %shr.i72.2 = sext i1 %84 to i32, !dbg !3534
  %cond.i73.2 = select i1 %tobool.not.i71.2, i32 %add34.2, i32 %shr.i72.2, !dbg !3534
  %conv.i74.2 = trunc i32 %cond.i73.2 to i8, !dbg !3534
  %arrayidx37.2 = getelementptr inbounds i8, ptr %dst.addr.179, i64 2, !dbg !3529
  store i8 %conv.i74.2, ptr %arrayidx37.2, align 1, !dbg !3529
    #dbg_value(i64 3, !3499, !DIExpression(), !3528)
  %arrayidx29.3 = getelementptr inbounds i8, ptr %src.addr.178, i64 3, !dbg !3529
  %85 = load i8, ptr %arrayidx29.3, align 1, !dbg !3529
  %conv30.3 = zext i8 %85 to i32, !dbg !3529
  %86 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.3 = mul nsw i32 %86, %conv30.3, !dbg !3529
  %87 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.3 = add nsw i32 %mul32.3, %87, !dbg !3529
    #dbg_value(i32 %add34.3, !1702, !DIExpression(), !3531)
  %tobool.not.i71.3 = icmp ult i32 %add34.3, 256, !dbg !3533
  %88 = icmp sgt i32 %add34.3, 0, !dbg !3534
  %shr.i72.3 = sext i1 %88 to i32, !dbg !3534
  %cond.i73.3 = select i1 %tobool.not.i71.3, i32 %add34.3, i32 %shr.i72.3, !dbg !3534
  %conv.i74.3 = trunc i32 %cond.i73.3 to i8, !dbg !3534
  %arrayidx37.3 = getelementptr inbounds i8, ptr %dst.addr.179, i64 3, !dbg !3529
  store i8 %conv.i74.3, ptr %arrayidx37.3, align 1, !dbg !3529
    #dbg_value(i64 4, !3499, !DIExpression(), !3528)
  %arrayidx29.4 = getelementptr inbounds i8, ptr %src.addr.178, i64 4, !dbg !3529
  %89 = load i8, ptr %arrayidx29.4, align 1, !dbg !3529
  %conv30.4 = zext i8 %89 to i32, !dbg !3529
  %90 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.4 = mul nsw i32 %90, %conv30.4, !dbg !3529
  %91 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.4 = add nsw i32 %mul32.4, %91, !dbg !3529
    #dbg_value(i32 %add34.4, !1702, !DIExpression(), !3531)
  %tobool.not.i71.4 = icmp ult i32 %add34.4, 256, !dbg !3533
  %92 = icmp sgt i32 %add34.4, 0, !dbg !3534
  %shr.i72.4 = sext i1 %92 to i32, !dbg !3534
  %cond.i73.4 = select i1 %tobool.not.i71.4, i32 %add34.4, i32 %shr.i72.4, !dbg !3534
  %conv.i74.4 = trunc i32 %cond.i73.4 to i8, !dbg !3534
  %arrayidx37.4 = getelementptr inbounds i8, ptr %dst.addr.179, i64 4, !dbg !3529
  store i8 %conv.i74.4, ptr %arrayidx37.4, align 1, !dbg !3529
    #dbg_value(i64 5, !3499, !DIExpression(), !3528)
  %arrayidx29.5 = getelementptr inbounds i8, ptr %src.addr.178, i64 5, !dbg !3529
  %93 = load i8, ptr %arrayidx29.5, align 1, !dbg !3529
  %conv30.5 = zext i8 %93 to i32, !dbg !3529
  %94 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.5 = mul nsw i32 %94, %conv30.5, !dbg !3529
  %95 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.5 = add nsw i32 %mul32.5, %95, !dbg !3529
    #dbg_value(i32 %add34.5, !1702, !DIExpression(), !3531)
  %tobool.not.i71.5 = icmp ult i32 %add34.5, 256, !dbg !3533
  %96 = icmp sgt i32 %add34.5, 0, !dbg !3534
  %shr.i72.5 = sext i1 %96 to i32, !dbg !3534
  %cond.i73.5 = select i1 %tobool.not.i71.5, i32 %add34.5, i32 %shr.i72.5, !dbg !3534
  %conv.i74.5 = trunc i32 %cond.i73.5 to i8, !dbg !3534
  %arrayidx37.5 = getelementptr inbounds i8, ptr %dst.addr.179, i64 5, !dbg !3529
  store i8 %conv.i74.5, ptr %arrayidx37.5, align 1, !dbg !3529
    #dbg_value(i64 6, !3499, !DIExpression(), !3528)
  %arrayidx29.6 = getelementptr inbounds i8, ptr %src.addr.178, i64 6, !dbg !3529
  %97 = load i8, ptr %arrayidx29.6, align 1, !dbg !3529
  %conv30.6 = zext i8 %97 to i32, !dbg !3529
  %98 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.6 = mul nsw i32 %98, %conv30.6, !dbg !3529
  %99 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.6 = add nsw i32 %mul32.6, %99, !dbg !3529
    #dbg_value(i32 %add34.6, !1702, !DIExpression(), !3531)
  %tobool.not.i71.6 = icmp ult i32 %add34.6, 256, !dbg !3533
  %100 = icmp sgt i32 %add34.6, 0, !dbg !3534
  %shr.i72.6 = sext i1 %100 to i32, !dbg !3534
  %cond.i73.6 = select i1 %tobool.not.i71.6, i32 %add34.6, i32 %shr.i72.6, !dbg !3534
  %conv.i74.6 = trunc i32 %cond.i73.6 to i8, !dbg !3534
  %arrayidx37.6 = getelementptr inbounds i8, ptr %dst.addr.179, i64 6, !dbg !3529
  store i8 %conv.i74.6, ptr %arrayidx37.6, align 1, !dbg !3529
    #dbg_value(i64 7, !3499, !DIExpression(), !3528)
  %arrayidx29.7 = getelementptr inbounds i8, ptr %src.addr.178, i64 7, !dbg !3529
  %101 = load i8, ptr %arrayidx29.7, align 1, !dbg !3529
  %conv30.7 = zext i8 %101 to i32, !dbg !3529
  %102 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.7 = mul nsw i32 %102, %conv30.7, !dbg !3529
  %103 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.7 = add nsw i32 %mul32.7, %103, !dbg !3529
    #dbg_value(i32 %add34.7, !1702, !DIExpression(), !3531)
  %tobool.not.i71.7 = icmp ult i32 %add34.7, 256, !dbg !3533
  %104 = icmp sgt i32 %add34.7, 0, !dbg !3534
  %shr.i72.7 = sext i1 %104 to i32, !dbg !3534
  %cond.i73.7 = select i1 %tobool.not.i71.7, i32 %add34.7, i32 %shr.i72.7, !dbg !3534
  %conv.i74.7 = trunc i32 %cond.i73.7 to i8, !dbg !3534
  %arrayidx37.7 = getelementptr inbounds i8, ptr %dst.addr.179, i64 7, !dbg !3529
  store i8 %conv.i74.7, ptr %arrayidx37.7, align 1, !dbg !3529
    #dbg_value(i64 8, !3499, !DIExpression(), !3528)
  %arrayidx29.8 = getelementptr inbounds i8, ptr %src.addr.178, i64 8, !dbg !3529
  %105 = load i8, ptr %arrayidx29.8, align 1, !dbg !3529
  %conv30.8 = zext i8 %105 to i32, !dbg !3529
  %106 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.8 = mul nsw i32 %106, %conv30.8, !dbg !3529
  %107 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.8 = add nsw i32 %mul32.8, %107, !dbg !3529
    #dbg_value(i32 %add34.8, !1702, !DIExpression(), !3531)
  %tobool.not.i71.8 = icmp ult i32 %add34.8, 256, !dbg !3533
  %108 = icmp sgt i32 %add34.8, 0, !dbg !3534
  %shr.i72.8 = sext i1 %108 to i32, !dbg !3534
  %cond.i73.8 = select i1 %tobool.not.i71.8, i32 %add34.8, i32 %shr.i72.8, !dbg !3534
  %conv.i74.8 = trunc i32 %cond.i73.8 to i8, !dbg !3534
  %arrayidx37.8 = getelementptr inbounds i8, ptr %dst.addr.179, i64 8, !dbg !3529
  store i8 %conv.i74.8, ptr %arrayidx37.8, align 1, !dbg !3529
    #dbg_value(i64 9, !3499, !DIExpression(), !3528)
  %arrayidx29.9 = getelementptr inbounds i8, ptr %src.addr.178, i64 9, !dbg !3529
  %109 = load i8, ptr %arrayidx29.9, align 1, !dbg !3529
  %conv30.9 = zext i8 %109 to i32, !dbg !3529
  %110 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.9 = mul nsw i32 %110, %conv30.9, !dbg !3529
  %111 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.9 = add nsw i32 %mul32.9, %111, !dbg !3529
    #dbg_value(i32 %add34.9, !1702, !DIExpression(), !3531)
  %tobool.not.i71.9 = icmp ult i32 %add34.9, 256, !dbg !3533
  %112 = icmp sgt i32 %add34.9, 0, !dbg !3534
  %shr.i72.9 = sext i1 %112 to i32, !dbg !3534
  %cond.i73.9 = select i1 %tobool.not.i71.9, i32 %add34.9, i32 %shr.i72.9, !dbg !3534
  %conv.i74.9 = trunc i32 %cond.i73.9 to i8, !dbg !3534
  %arrayidx37.9 = getelementptr inbounds i8, ptr %dst.addr.179, i64 9, !dbg !3529
  store i8 %conv.i74.9, ptr %arrayidx37.9, align 1, !dbg !3529
    #dbg_value(i64 10, !3499, !DIExpression(), !3528)
  %arrayidx29.10 = getelementptr inbounds i8, ptr %src.addr.178, i64 10, !dbg !3529
  %113 = load i8, ptr %arrayidx29.10, align 1, !dbg !3529
  %conv30.10 = zext i8 %113 to i32, !dbg !3529
  %114 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.10 = mul nsw i32 %114, %conv30.10, !dbg !3529
  %115 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.10 = add nsw i32 %mul32.10, %115, !dbg !3529
    #dbg_value(i32 %add34.10, !1702, !DIExpression(), !3531)
  %tobool.not.i71.10 = icmp ult i32 %add34.10, 256, !dbg !3533
  %116 = icmp sgt i32 %add34.10, 0, !dbg !3534
  %shr.i72.10 = sext i1 %116 to i32, !dbg !3534
  %cond.i73.10 = select i1 %tobool.not.i71.10, i32 %add34.10, i32 %shr.i72.10, !dbg !3534
  %conv.i74.10 = trunc i32 %cond.i73.10 to i8, !dbg !3534
  %arrayidx37.10 = getelementptr inbounds i8, ptr %dst.addr.179, i64 10, !dbg !3529
  store i8 %conv.i74.10, ptr %arrayidx37.10, align 1, !dbg !3529
    #dbg_value(i64 11, !3499, !DIExpression(), !3528)
  %arrayidx29.11 = getelementptr inbounds i8, ptr %src.addr.178, i64 11, !dbg !3529
  %117 = load i8, ptr %arrayidx29.11, align 1, !dbg !3529
  %conv30.11 = zext i8 %117 to i32, !dbg !3529
  %118 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.11 = mul nsw i32 %118, %conv30.11, !dbg !3529
  %119 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.11 = add nsw i32 %mul32.11, %119, !dbg !3529
    #dbg_value(i32 %add34.11, !1702, !DIExpression(), !3531)
  %tobool.not.i71.11 = icmp ult i32 %add34.11, 256, !dbg !3533
  %120 = icmp sgt i32 %add34.11, 0, !dbg !3534
  %shr.i72.11 = sext i1 %120 to i32, !dbg !3534
  %cond.i73.11 = select i1 %tobool.not.i71.11, i32 %add34.11, i32 %shr.i72.11, !dbg !3534
  %conv.i74.11 = trunc i32 %cond.i73.11 to i8, !dbg !3534
  %arrayidx37.11 = getelementptr inbounds i8, ptr %dst.addr.179, i64 11, !dbg !3529
  store i8 %conv.i74.11, ptr %arrayidx37.11, align 1, !dbg !3529
    #dbg_value(i64 12, !3499, !DIExpression(), !3528)
  %arrayidx29.12 = getelementptr inbounds i8, ptr %src.addr.178, i64 12, !dbg !3529
  %121 = load i8, ptr %arrayidx29.12, align 1, !dbg !3529
  %conv30.12 = zext i8 %121 to i32, !dbg !3529
  %122 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.12 = mul nsw i32 %122, %conv30.12, !dbg !3529
  %123 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.12 = add nsw i32 %mul32.12, %123, !dbg !3529
    #dbg_value(i32 %add34.12, !1702, !DIExpression(), !3531)
  %tobool.not.i71.12 = icmp ult i32 %add34.12, 256, !dbg !3533
  %124 = icmp sgt i32 %add34.12, 0, !dbg !3534
  %shr.i72.12 = sext i1 %124 to i32, !dbg !3534
  %cond.i73.12 = select i1 %tobool.not.i71.12, i32 %add34.12, i32 %shr.i72.12, !dbg !3534
  %conv.i74.12 = trunc i32 %cond.i73.12 to i8, !dbg !3534
  %arrayidx37.12 = getelementptr inbounds i8, ptr %dst.addr.179, i64 12, !dbg !3529
  store i8 %conv.i74.12, ptr %arrayidx37.12, align 1, !dbg !3529
    #dbg_value(i64 13, !3499, !DIExpression(), !3528)
  %arrayidx29.13 = getelementptr inbounds i8, ptr %src.addr.178, i64 13, !dbg !3529
  %125 = load i8, ptr %arrayidx29.13, align 1, !dbg !3529
  %conv30.13 = zext i8 %125 to i32, !dbg !3529
  %126 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.13 = mul nsw i32 %126, %conv30.13, !dbg !3529
  %127 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.13 = add nsw i32 %mul32.13, %127, !dbg !3529
    #dbg_value(i32 %add34.13, !1702, !DIExpression(), !3531)
  %tobool.not.i71.13 = icmp ult i32 %add34.13, 256, !dbg !3533
  %128 = icmp sgt i32 %add34.13, 0, !dbg !3534
  %shr.i72.13 = sext i1 %128 to i32, !dbg !3534
  %cond.i73.13 = select i1 %tobool.not.i71.13, i32 %add34.13, i32 %shr.i72.13, !dbg !3534
  %conv.i74.13 = trunc i32 %cond.i73.13 to i8, !dbg !3534
  %arrayidx37.13 = getelementptr inbounds i8, ptr %dst.addr.179, i64 13, !dbg !3529
  store i8 %conv.i74.13, ptr %arrayidx37.13, align 1, !dbg !3529
    #dbg_value(i64 14, !3499, !DIExpression(), !3528)
  %arrayidx29.14 = getelementptr inbounds i8, ptr %src.addr.178, i64 14, !dbg !3529
  %129 = load i8, ptr %arrayidx29.14, align 1, !dbg !3529
  %conv30.14 = zext i8 %129 to i32, !dbg !3529
  %130 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.14 = mul nsw i32 %130, %conv30.14, !dbg !3529
  %131 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.14 = add nsw i32 %mul32.14, %131, !dbg !3529
    #dbg_value(i32 %add34.14, !1702, !DIExpression(), !3531)
  %tobool.not.i71.14 = icmp ult i32 %add34.14, 256, !dbg !3533
  %132 = icmp sgt i32 %add34.14, 0, !dbg !3534
  %shr.i72.14 = sext i1 %132 to i32, !dbg !3534
  %cond.i73.14 = select i1 %tobool.not.i71.14, i32 %add34.14, i32 %shr.i72.14, !dbg !3534
  %conv.i74.14 = trunc i32 %cond.i73.14 to i8, !dbg !3534
  %arrayidx37.14 = getelementptr inbounds i8, ptr %dst.addr.179, i64 14, !dbg !3529
  store i8 %conv.i74.14, ptr %arrayidx37.14, align 1, !dbg !3529
    #dbg_value(i64 15, !3499, !DIExpression(), !3528)
  %arrayidx29.15 = getelementptr inbounds i8, ptr %src.addr.178, i64 15, !dbg !3529
  %133 = load i8, ptr %arrayidx29.15, align 1, !dbg !3529
  %conv30.15 = zext i8 %133 to i32, !dbg !3529
  %134 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.15 = mul nsw i32 %134, %conv30.15, !dbg !3529
  %135 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.15 = add nsw i32 %mul32.15, %135, !dbg !3529
    #dbg_value(i32 %add34.15, !1702, !DIExpression(), !3531)
  %tobool.not.i71.15 = icmp ult i32 %add34.15, 256, !dbg !3533
  %136 = icmp sgt i32 %add34.15, 0, !dbg !3534
  %shr.i72.15 = sext i1 %136 to i32, !dbg !3534
  %cond.i73.15 = select i1 %tobool.not.i71.15, i32 %add34.15, i32 %shr.i72.15, !dbg !3534
  %conv.i74.15 = trunc i32 %cond.i73.15 to i8, !dbg !3534
  %arrayidx37.15 = getelementptr inbounds i8, ptr %dst.addr.179, i64 15, !dbg !3529
  store i8 %conv.i74.15, ptr %arrayidx37.15, align 1, !dbg !3529
    #dbg_value(i64 16, !3499, !DIExpression(), !3528)
  %arrayidx29.16 = getelementptr inbounds i8, ptr %src.addr.178, i64 16, !dbg !3529
  %137 = load i8, ptr %arrayidx29.16, align 1, !dbg !3529
  %conv30.16 = zext i8 %137 to i32, !dbg !3529
  %138 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.16 = mul nsw i32 %138, %conv30.16, !dbg !3529
  %139 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.16 = add nsw i32 %mul32.16, %139, !dbg !3529
    #dbg_value(i32 %add34.16, !1702, !DIExpression(), !3531)
  %tobool.not.i71.16 = icmp ult i32 %add34.16, 256, !dbg !3533
  %140 = icmp sgt i32 %add34.16, 0, !dbg !3534
  %shr.i72.16 = sext i1 %140 to i32, !dbg !3534
  %cond.i73.16 = select i1 %tobool.not.i71.16, i32 %add34.16, i32 %shr.i72.16, !dbg !3534
  %conv.i74.16 = trunc i32 %cond.i73.16 to i8, !dbg !3534
  %arrayidx37.16 = getelementptr inbounds i8, ptr %dst.addr.179, i64 16, !dbg !3529
  store i8 %conv.i74.16, ptr %arrayidx37.16, align 1, !dbg !3529
    #dbg_value(i64 17, !3499, !DIExpression(), !3528)
  %arrayidx29.17 = getelementptr inbounds i8, ptr %src.addr.178, i64 17, !dbg !3529
  %141 = load i8, ptr %arrayidx29.17, align 1, !dbg !3529
  %conv30.17 = zext i8 %141 to i32, !dbg !3529
  %142 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.17 = mul nsw i32 %142, %conv30.17, !dbg !3529
  %143 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.17 = add nsw i32 %mul32.17, %143, !dbg !3529
    #dbg_value(i32 %add34.17, !1702, !DIExpression(), !3531)
  %tobool.not.i71.17 = icmp ult i32 %add34.17, 256, !dbg !3533
  %144 = icmp sgt i32 %add34.17, 0, !dbg !3534
  %shr.i72.17 = sext i1 %144 to i32, !dbg !3534
  %cond.i73.17 = select i1 %tobool.not.i71.17, i32 %add34.17, i32 %shr.i72.17, !dbg !3534
  %conv.i74.17 = trunc i32 %cond.i73.17 to i8, !dbg !3534
  %arrayidx37.17 = getelementptr inbounds i8, ptr %dst.addr.179, i64 17, !dbg !3529
  store i8 %conv.i74.17, ptr %arrayidx37.17, align 1, !dbg !3529
    #dbg_value(i64 18, !3499, !DIExpression(), !3528)
  %arrayidx29.18 = getelementptr inbounds i8, ptr %src.addr.178, i64 18, !dbg !3529
  %145 = load i8, ptr %arrayidx29.18, align 1, !dbg !3529
  %conv30.18 = zext i8 %145 to i32, !dbg !3529
  %146 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.18 = mul nsw i32 %146, %conv30.18, !dbg !3529
  %147 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.18 = add nsw i32 %mul32.18, %147, !dbg !3529
    #dbg_value(i32 %add34.18, !1702, !DIExpression(), !3531)
  %tobool.not.i71.18 = icmp ult i32 %add34.18, 256, !dbg !3533
  %148 = icmp sgt i32 %add34.18, 0, !dbg !3534
  %shr.i72.18 = sext i1 %148 to i32, !dbg !3534
  %cond.i73.18 = select i1 %tobool.not.i71.18, i32 %add34.18, i32 %shr.i72.18, !dbg !3534
  %conv.i74.18 = trunc i32 %cond.i73.18 to i8, !dbg !3534
  %arrayidx37.18 = getelementptr inbounds i8, ptr %dst.addr.179, i64 18, !dbg !3529
  store i8 %conv.i74.18, ptr %arrayidx37.18, align 1, !dbg !3529
    #dbg_value(i64 19, !3499, !DIExpression(), !3528)
  %arrayidx29.19 = getelementptr inbounds i8, ptr %src.addr.178, i64 19, !dbg !3529
  %149 = load i8, ptr %arrayidx29.19, align 1, !dbg !3529
  %conv30.19 = zext i8 %149 to i32, !dbg !3529
  %150 = load i32, ptr %i_scale31, align 4, !dbg !3529
  %mul32.19 = mul nsw i32 %150, %conv30.19, !dbg !3529
  %151 = load i32, ptr %i_offset33, align 8, !dbg !3529
  %add34.19 = add nsw i32 %mul32.19, %151, !dbg !3529
    #dbg_value(i32 %add34.19, !1702, !DIExpression(), !3531)
  %tobool.not.i71.19 = icmp ult i32 %add34.19, 256, !dbg !3533
  %152 = icmp sgt i32 %add34.19, 0, !dbg !3534
  %shr.i72.19 = sext i1 %152 to i32, !dbg !3534
  %cond.i73.19 = select i1 %tobool.not.i71.19, i32 %add34.19, i32 %shr.i72.19, !dbg !3534
  %conv.i74.19 = trunc i32 %cond.i73.19 to i8, !dbg !3534
  %arrayidx37.19 = getelementptr inbounds i8, ptr %dst.addr.179, i64 19, !dbg !3529
  store i8 %conv.i74.19, ptr %arrayidx37.19, align 1, !dbg !3529
    #dbg_value(i64 20, !3499, !DIExpression(), !3528)
  %inc42 = add nuw nsw i32 %y16.080, 1, !dbg !3535
    #dbg_value(i32 %inc42, !3496, !DIExpression(), !3505)
  %add.ptr44 = getelementptr inbounds i8, ptr %dst.addr.179, i64 %idx.ext43, !dbg !3535
    #dbg_value(ptr %add.ptr44, !3483, !DIExpression(), !3502)
  %add.ptr46 = getelementptr inbounds i8, ptr %src.addr.178, i64 %idx.ext45, !dbg !3535
    #dbg_value(ptr %add.ptr46, !3485, !DIExpression(), !3502)
  %exitcond.not = icmp eq i32 %inc42, %height, !dbg !3535
  br i1 %exitcond.not, label %if.end, label %for.cond23.preheader, !dbg !3506, !llvm.loop !3536

if.end:                                           ; preds = %for.cond23.preheader, %for.cond.cleanup4, %for.cond17.preheader, %for.cond.preheader
  ret void, !dbg !3504
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.vector.reduce.add.v4i16(<4 x i16>) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.vector.reduce.add.v8i16(<8 x i16>) #12

attributes #0 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #5 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { inlinehint nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!74, !75, !76, !77, !78, !79, !80}
!llvm.ident = !{!81}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "weight_none", scope: !2, file: !3, line: 171, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !19, globals: !25, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "x264_src/common/mc.c", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "5b5840f7c133c196a2452d152d36293d")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 30, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "x264_src/common/pixel.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "e9056d80edbb4dc2514d271d596c298e")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!9 = !DIEnumerator(name: "PIXEL_16x16", value: 0)
!10 = !DIEnumerator(name: "PIXEL_16x8", value: 1)
!11 = !DIEnumerator(name: "PIXEL_8x16", value: 2)
!12 = !DIEnumerator(name: "PIXEL_8x8", value: 3)
!13 = !DIEnumerator(name: "PIXEL_8x4", value: 4)
!14 = !DIEnumerator(name: "PIXEL_4x8", value: 5)
!15 = !DIEnumerator(name: "PIXEL_4x4", value: 6)
!16 = !DIEnumerator(name: "PIXEL_4x2", value: 7)
!17 = !DIEnumerator(name: "PIXEL_2x4", value: 8)
!18 = !DIEnumerator(name: "PIXEL_2x2", value: 9)
!19 = !{!20}
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !21, line: 27, baseType: !22)
!21 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !23, line: 44, baseType: !24)
!23 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!24 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!25 = !{!0, !26, !36, !38}
!26 = !DIGlobalVariableExpression(var: !27, expr: !DIExpression())
!27 = distinct !DIGlobalVariable(name: "hpel_ref0", scope: !2, file: !3, line: 206, type: !28, isLocal: true, isDefinition: true)
!28 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 128, elements: !34)
!29 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !31, line: 24, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "", checksumkind: CSK_MD5, checksum: "2bf2ae53c58c01b1a1b9383b5195125c")
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !23, line: 38, baseType: !33)
!33 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!34 = !{!35}
!35 = !DISubrange(count: 16)
!36 = !DIGlobalVariableExpression(var: !37, expr: !DIExpression())
!37 = distinct !DIGlobalVariable(name: "hpel_ref1", scope: !2, file: !3, line: 207, type: !28, isLocal: true, isDefinition: true)
!38 = !DIGlobalVariableExpression(var: !39, expr: !DIExpression())
!39 = distinct !DIGlobalVariable(name: "x264_mc_weight_wtab", scope: !2, file: !3, line: 162, type: !40, isLocal: true, isDefinition: true)
!40 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 384, elements: !67)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "weight_fn_t", file: !42, line: 25, baseType: !43)
!42 = !DIFile(filename: "x264_src/common/mc.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "04d0fbb98b637fe4174e4cc20d723861")
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DISubroutineType(types: !45)
!45 = !{null, !46, !47, !46, !47, !48, !47}
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!47 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !50)
!50 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_weight_t", file: !42, line: 26, size: 512, elements: !51)
!51 = !{!52, !59, !60, !63, !64, !65}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "cachea", scope: !50, file: !42, line: 30, baseType: !53, size: 128, align: 128)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 128, elements: !57)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !21, line: 25, baseType: !55)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !23, line: 39, baseType: !56)
!56 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!57 = !{!58}
!58 = !DISubrange(count: 8)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "cacheb", scope: !50, file: !42, line: 31, baseType: !53, size: 128, offset: 128)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "i_denom", scope: !50, file: !42, line: 32, baseType: !61, size: 32, offset: 256)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !21, line: 26, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !23, line: 41, baseType: !47)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "i_scale", scope: !50, file: !42, line: 33, baseType: !61, size: 32, offset: 288)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset", scope: !50, file: !42, line: 34, baseType: !61, size: 32, offset: 320)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "weightfn", scope: !50, file: !42, line: 35, baseType: !66, size: 64, offset: 384)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!67 = !{!68}
!68 = !DISubrange(count: 6)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 1536, align: 128, elements: !72)
!70 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !71)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_weight_t", file: !42, line: 36, baseType: !50, align: 128)
!72 = !{!73}
!73 = !DISubrange(count: 3)
!74 = !{i32 7, !"Dwarf Version", i32 5}
!75 = !{i32 2, !"Debug Info Version", i32 3}
!76 = !{i32 1, !"wchar_size", i32 4}
!77 = !{i32 8, !"PIC Level", i32 2}
!78 = !{i32 7, !"PIE Level", i32 2}
!79 = !{i32 7, !"uwtable", i32 2}
!80 = !{i32 7, !"debug-info-assignment-tracking", i1 true}
!81 = !{!"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"}
!82 = distinct !DISubprogram(name: "x264_plane_copy_c", scope: !3, file: !3, line: 299, type: !83, scopeLine: 301, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !85)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !46, !47, !46, !47, !47, !47}
!85 = !{!86, !87, !88, !89, !90, !91}
!86 = !DILocalVariable(name: "dst", arg: 1, scope: !82, file: !3, line: 299, type: !46)
!87 = !DILocalVariable(name: "i_dst", arg: 2, scope: !82, file: !3, line: 299, type: !47)
!88 = !DILocalVariable(name: "src", arg: 3, scope: !82, file: !3, line: 300, type: !46)
!89 = !DILocalVariable(name: "i_src", arg: 4, scope: !82, file: !3, line: 300, type: !47)
!90 = !DILocalVariable(name: "w", arg: 5, scope: !82, file: !3, line: 300, type: !47)
!91 = !DILocalVariable(name: "h", arg: 6, scope: !82, file: !3, line: 300, type: !47)
!92 = !DILocation(line: 0, scope: !82)
!93 = !DILocation(line: 302, column: 5, scope: !82)
!94 = !DILocation(line: 302, column: 13, scope: !82)
!95 = !DILocation(line: 304, column: 9, scope: !96)
!96 = distinct !DILexicalBlock(scope: !82, file: !3, line: 303, column: 5)
!97 = !DILocation(line: 305, column: 13, scope: !96)
!98 = !DILocation(line: 306, column: 13, scope: !96)
!99 = distinct !{!99, !100}
!100 = !{!"llvm.loop.unroll.disable"}
!101 = distinct !{!101, !93, !102}
!102 = !DILocation(line: 307, column: 5, scope: !82)
!103 = !DILocation(line: 308, column: 1, scope: !82)
!104 = distinct !DISubprogram(name: "x264_frame_init_lowres", scope: !3, file: !3, line: 356, type: !105, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1375)
!105 = !DISubroutineType(types: !106)
!106 = !{null, !107, !565}
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_t", file: !109, line: 46, baseType: !110)
!109 = !DIFile(filename: "x264_src/x264.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "0b04871e4f52d5a4d8833c501cba2584")
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_t", file: !111, line: 381, size: 266752, elements: !112)
!111 = !DIFile(filename: "x264_src/common/common.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "5afac7bf2f5673f1628c455d7d320ad7")
!112 = !{!113, !283, !287, !288, !289, !290, !291, !292, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !426, !428, !453, !455, !456, !457, !463, !467, !468, !469, !476, !480, !481, !482, !487, !490, !491, !543, !560, !721, !722, !723, !724, !728, !729, !730, !731, !732, !733, !734, !749, !943, !947, !1008, !1011, !1013, !1015, !1016, !1019, !1024, !1033, !1034, !1042, !1044, !1049, !1124, !1207, !1251, !1273, !1322, !1351}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !110, file: !111, line: 384, baseType: !114, size: 5632)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_param_t", file: !109, line: 376, baseType: !115)
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_param_t", file: !109, line: 176, size: 5632, elements: !116)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !160, !162, !163, !164, !165, !169, !170, !184, !185, !186, !187, !188, !219, !261, !262, !263, !264, !265, !266, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !115, file: !109, line: 179, baseType: !7, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "i_threads", scope: !115, file: !109, line: 180, baseType: !47, size: 32, offset: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "b_sliced_threads", scope: !115, file: !109, line: 181, baseType: !47, size: 32, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "b_deterministic", scope: !115, file: !109, line: 182, baseType: !47, size: 32, offset: 96)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "i_sync_lookahead", scope: !115, file: !109, line: 183, baseType: !47, size: 32, offset: 128)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "i_width", scope: !115, file: !109, line: 186, baseType: !47, size: 32, offset: 160)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "i_height", scope: !115, file: !109, line: 187, baseType: !47, size: 32, offset: 192)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "i_csp", scope: !115, file: !109, line: 188, baseType: !47, size: 32, offset: 224)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "i_level_idc", scope: !115, file: !109, line: 189, baseType: !47, size: 32, offset: 256)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_total", scope: !115, file: !109, line: 190, baseType: !47, size: 32, offset: 288)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_hrd", scope: !115, file: !109, line: 198, baseType: !47, size: 32, offset: 320)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !115, file: !109, line: 215, baseType: !129, size: 288, offset: 352)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !115, file: !109, line: 200, size: 288, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_height", scope: !129, file: !109, line: 203, baseType: !47, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_width", scope: !129, file: !109, line: 204, baseType: !47, size: 32, offset: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "i_overscan", scope: !129, file: !109, line: 206, baseType: !47, size: 32, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "i_vidformat", scope: !129, file: !109, line: 209, baseType: !47, size: 32, offset: 96)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "b_fullrange", scope: !129, file: !109, line: 210, baseType: !47, size: 32, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "i_colorprim", scope: !129, file: !109, line: 211, baseType: !47, size: 32, offset: 160)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "i_transfer", scope: !129, file: !109, line: 212, baseType: !47, size: 32, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "i_colmatrix", scope: !129, file: !109, line: 213, baseType: !47, size: 32, offset: 224)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc", scope: !129, file: !109, line: 214, baseType: !47, size: 32, offset: 256)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_reference", scope: !115, file: !109, line: 218, baseType: !47, size: 32, offset: 640)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_max", scope: !115, file: !109, line: 219, baseType: !47, size: 32, offset: 672)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "i_keyint_min", scope: !115, file: !109, line: 220, baseType: !47, size: 32, offset: 704)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "i_scenecut_threshold", scope: !115, file: !109, line: 221, baseType: !47, size: 32, offset: 736)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "b_intra_refresh", scope: !115, file: !109, line: 222, baseType: !47, size: 32, offset: 768)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe", scope: !115, file: !109, line: 224, baseType: !47, size: 32, offset: 800)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_adaptive", scope: !115, file: !109, line: 225, baseType: !47, size: 32, offset: 832)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_bias", scope: !115, file: !109, line: 226, baseType: !47, size: 32, offset: 864)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_pyramid", scope: !115, file: !109, line: 227, baseType: !47, size: 32, offset: 896)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "b_deblocking_filter", scope: !115, file: !109, line: 229, baseType: !47, size: 32, offset: 928)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_alphac0", scope: !115, file: !109, line: 230, baseType: !47, size: 32, offset: 960)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "i_deblocking_filter_beta", scope: !115, file: !109, line: 231, baseType: !47, size: 32, offset: 992)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "b_cabac", scope: !115, file: !109, line: 233, baseType: !47, size: 32, offset: 1024)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "i_cabac_init_idc", scope: !115, file: !109, line: 234, baseType: !47, size: 32, offset: 1056)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "b_interlaced", scope: !115, file: !109, line: 236, baseType: !47, size: 32, offset: 1088)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "b_constrained_intra", scope: !115, file: !109, line: 237, baseType: !47, size: 32, offset: 1120)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "i_cqm_preset", scope: !115, file: !109, line: 239, baseType: !47, size: 32, offset: 1152)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "psz_cqm_file", scope: !115, file: !109, line: 240, baseType: !158, size: 64, offset: 1216)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4iy", scope: !115, file: !109, line: 241, baseType: !161, size: 128, offset: 1280)
!161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 128, elements: !34)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4ic", scope: !115, file: !109, line: 242, baseType: !161, size: 128, offset: 1408)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4py", scope: !115, file: !109, line: 243, baseType: !161, size: 128, offset: 1536)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_4pc", scope: !115, file: !109, line: 244, baseType: !161, size: 128, offset: 1664)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8iy", scope: !115, file: !109, line: 245, baseType: !166, size: 512, offset: 1792)
!166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 512, elements: !167)
!167 = !{!168}
!168 = !DISubrange(count: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "cqm_8py", scope: !115, file: !109, line: 246, baseType: !166, size: 512, offset: 2304)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "pf_log", scope: !115, file: !109, line: 249, baseType: !171, size: 64, offset: 2816)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{null, !174, !47, !175, !177}
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !179)
!179 = !{!180, !181, !182, !183}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !178, file: !3, line: 308, baseType: !7, size: 32)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !178, file: !3, line: 308, baseType: !7, size: 32, offset: 32)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !178, file: !3, line: 308, baseType: !174, size: 64, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !178, file: !3, line: 308, baseType: !174, size: 64, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "p_log_private", scope: !115, file: !109, line: 250, baseType: !174, size: 64, offset: 2880)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "i_log_level", scope: !115, file: !109, line: 251, baseType: !47, size: 32, offset: 2944)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "b_visualize", scope: !115, file: !109, line: 252, baseType: !47, size: 32, offset: 2976)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "psz_dump_yuv", scope: !115, file: !109, line: 253, baseType: !158, size: 64, offset: 3008)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "analyse", scope: !115, file: !109, line: 287, baseType: !189, size: 800, offset: 3072)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !115, file: !109, line: 256, size: 800, elements: !190)
!190 = !{!191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !211, !212, !213, !217, !218}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "intra", scope: !189, file: !109, line: 258, baseType: !7, size: 32)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "inter", scope: !189, file: !109, line: 259, baseType: !7, size: 32, offset: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8", scope: !189, file: !109, line: 261, baseType: !47, size: 32, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "i_weighted_pred", scope: !189, file: !109, line: 262, baseType: !47, size: 32, offset: 96)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_bipred", scope: !189, file: !109, line: 263, baseType: !47, size: 32, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_mv_pred", scope: !189, file: !109, line: 264, baseType: !47, size: 32, offset: 160)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp_offset", scope: !189, file: !109, line: 265, baseType: !47, size: 32, offset: 192)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_method", scope: !189, file: !109, line: 267, baseType: !47, size: 32, offset: 224)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_range", scope: !189, file: !109, line: 268, baseType: !47, size: 32, offset: 256)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range", scope: !189, file: !109, line: 269, baseType: !47, size: 32, offset: 288)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_range_thread", scope: !189, file: !109, line: 270, baseType: !47, size: 32, offset: 320)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "i_subpel_refine", scope: !189, file: !109, line: 271, baseType: !47, size: 32, offset: 352)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_me", scope: !189, file: !109, line: 272, baseType: !47, size: 32, offset: 384)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "b_mixed_references", scope: !189, file: !109, line: 273, baseType: !47, size: 32, offset: 416)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "i_trellis", scope: !189, file: !109, line: 274, baseType: !47, size: 32, offset: 448)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "b_fast_pskip", scope: !189, file: !109, line: 275, baseType: !47, size: 32, offset: 480)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "b_dct_decimate", scope: !189, file: !109, line: 276, baseType: !47, size: 32, offset: 512)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "i_noise_reduction", scope: !189, file: !109, line: 277, baseType: !47, size: 32, offset: 544)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_rd", scope: !189, file: !109, line: 278, baseType: !210, size: 32, offset: 576)
!210 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "f_psy_trellis", scope: !189, file: !109, line: 279, baseType: !210, size: 32, offset: 608)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "b_psy", scope: !189, file: !109, line: 280, baseType: !47, size: 32, offset: 640)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "i_luma_deadzone", scope: !189, file: !109, line: 283, baseType: !214, size: 64, offset: 672)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 64, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 2)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "b_psnr", scope: !189, file: !109, line: 285, baseType: !47, size: 32, offset: 736)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "b_ssim", scope: !189, file: !109, line: 286, baseType: !47, size: 32, offset: 768)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !115, file: !109, line: 327, baseType: !220, size: 1152, offset: 3904)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !115, file: !109, line: 290, size: 1152, elements: !221)
!221 = !{!222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !259, !260}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "i_rc_method", scope: !220, file: !109, line: 292, baseType: !47, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_constant", scope: !220, file: !109, line: 294, baseType: !47, size: 32, offset: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_min", scope: !220, file: !109, line: 295, baseType: !47, size: 32, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_max", scope: !220, file: !109, line: 296, baseType: !47, size: 32, offset: 96)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_step", scope: !220, file: !109, line: 297, baseType: !47, size: 32, offset: 128)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitrate", scope: !220, file: !109, line: 299, baseType: !47, size: 32, offset: 160)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant", scope: !220, file: !109, line: 300, baseType: !210, size: 32, offset: 192)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "f_rf_constant_max", scope: !220, file: !109, line: 301, baseType: !210, size: 32, offset: 224)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "f_rate_tolerance", scope: !220, file: !109, line: 302, baseType: !210, size: 32, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_max_bitrate", scope: !220, file: !109, line: 303, baseType: !47, size: 32, offset: 288)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "i_vbv_buffer_size", scope: !220, file: !109, line: 304, baseType: !47, size: 32, offset: 320)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "f_vbv_buffer_init", scope: !220, file: !109, line: 305, baseType: !210, size: 32, offset: 352)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "f_ip_factor", scope: !220, file: !109, line: 306, baseType: !210, size: 32, offset: 384)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "f_pb_factor", scope: !220, file: !109, line: 307, baseType: !210, size: 32, offset: 416)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "i_aq_mode", scope: !220, file: !109, line: 309, baseType: !47, size: 32, offset: 448)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "f_aq_strength", scope: !220, file: !109, line: 310, baseType: !210, size: 32, offset: 480)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "b_mb_tree", scope: !220, file: !109, line: 311, baseType: !47, size: 32, offset: 512)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "i_lookahead", scope: !220, file: !109, line: 312, baseType: !47, size: 32, offset: 544)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_write", scope: !220, file: !109, line: 315, baseType: !47, size: 32, offset: 576)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_out", scope: !220, file: !109, line: 316, baseType: !158, size: 64, offset: 640)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "b_stat_read", scope: !220, file: !109, line: 317, baseType: !47, size: 32, offset: 704)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "psz_stat_in", scope: !220, file: !109, line: 318, baseType: !158, size: 64, offset: 768)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "f_qcompress", scope: !220, file: !109, line: 321, baseType: !210, size: 32, offset: 832)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "f_qblur", scope: !220, file: !109, line: 322, baseType: !210, size: 32, offset: 864)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "f_complexity_blur", scope: !220, file: !109, line: 323, baseType: !210, size: 32, offset: 896)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "zones", scope: !220, file: !109, line: 324, baseType: !248, size: 64, offset: 960)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_zone_t", file: !109, line: 174, baseType: !250)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !109, line: 167, size: 256, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "i_start", scope: !250, file: !109, line: 169, baseType: !47, size: 32)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "i_end", scope: !250, file: !109, line: 169, baseType: !47, size: 32, offset: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "b_force_qp", scope: !250, file: !109, line: 170, baseType: !47, size: 32, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !250, file: !109, line: 171, baseType: !47, size: 32, offset: 96)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "f_bitrate_factor", scope: !250, file: !109, line: 172, baseType: !210, size: 32, offset: 128)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !250, file: !109, line: 173, baseType: !258, size: 64, offset: 192)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "i_zones", scope: !220, file: !109, line: 325, baseType: !47, size: 32, offset: 1024)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "psz_zones", scope: !220, file: !109, line: 326, baseType: !158, size: 64, offset: 1088)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "b_aud", scope: !115, file: !109, line: 330, baseType: !47, size: 32, offset: 5056)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "b_repeat_headers", scope: !115, file: !109, line: 331, baseType: !47, size: 32, offset: 5088)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "b_annexb", scope: !115, file: !109, line: 332, baseType: !47, size: 32, offset: 5120)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "i_sps_id", scope: !115, file: !109, line: 334, baseType: !47, size: 32, offset: 5152)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "b_vfr_input", scope: !115, file: !109, line: 335, baseType: !47, size: 32, offset: 5184)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_num", scope: !115, file: !109, line: 336, baseType: !267, size: 32, offset: 5216)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !31, line: 26, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !23, line: 42, baseType: !7)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "i_fps_den", scope: !115, file: !109, line: 337, baseType: !267, size: 32, offset: 5248)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_num", scope: !115, file: !109, line: 338, baseType: !267, size: 32, offset: 5280)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "i_timebase_den", scope: !115, file: !109, line: 339, baseType: !267, size: 32, offset: 5312)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "b_dts_compress", scope: !115, file: !109, line: 340, baseType: !47, size: 32, offset: 5344)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "b_tff", scope: !115, file: !109, line: 344, baseType: !47, size: 32, offset: 5376)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_struct", scope: !115, file: !109, line: 356, baseType: !47, size: 32, offset: 5408)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "b_fake_interlaced", scope: !115, file: !109, line: 364, baseType: !47, size: 32, offset: 5440)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_size", scope: !115, file: !109, line: 367, baseType: !47, size: 32, offset: 5472)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_max_mbs", scope: !115, file: !109, line: 368, baseType: !47, size: 32, offset: 5504)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "i_slice_count", scope: !115, file: !109, line: 369, baseType: !47, size: 32, offset: 5536)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "param_free", scope: !115, file: !109, line: 375, baseType: !280, size: 64, offset: 5568)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{null, !174}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !110, file: !111, line: 386, baseType: !284, size: 8256, offset: 5632)
!284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !107, size: 8256, elements: !285)
!285 = !{!286}
!286 = !DISubrange(count: 129)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "thread_handle", scope: !110, file: !111, line: 387, baseType: !47, size: 32, offset: 13888)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "b_thread_active", scope: !110, file: !111, line: 388, baseType: !47, size: 32, offset: 13920)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "i_thread_phase", scope: !110, file: !111, line: 389, baseType: !47, size: 32, offset: 13952)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "i_threadslice_start", scope: !110, file: !111, line: 390, baseType: !47, size: 32, offset: 13984)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "i_threadslice_end", scope: !110, file: !111, line: 391, baseType: !47, size: 32, offset: 14016)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !110, file: !111, line: 402, baseType: !293, size: 576, offset: 14080)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !111, line: 394, size: 576, elements: !294)
!294 = !{!295, !296, !297, !306, !307, !308}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal", scope: !293, file: !111, line: 396, baseType: !47, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "i_nals_allocated", scope: !293, file: !111, line: 397, baseType: !47, size: 32, offset: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "nal", scope: !293, file: !111, line: 398, baseType: !298, size: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_nal_t", file: !109, line: 604, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !109, line: 593, size: 192, elements: !301)
!301 = !{!302, !303, !304, !305}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref_idc", scope: !300, file: !109, line: 595, baseType: !47, size: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !300, file: !109, line: 596, baseType: !47, size: 32, offset: 32)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "i_payload", scope: !300, file: !109, line: 599, baseType: !47, size: 32, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "p_payload", scope: !300, file: !109, line: 603, baseType: !46, size: 64, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "i_bitstream", scope: !293, file: !111, line: 399, baseType: !47, size: 32, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "p_bitstream", scope: !293, file: !111, line: 400, baseType: !46, size: 64, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "bs", scope: !293, file: !111, line: 401, baseType: !309, size: 320, offset: 256)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "bs_t", file: !310, line: 56, baseType: !311)
!310 = !DIFile(filename: "x264_src/common/bs.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "5e3e135f4389fadb006d4bc4f2055a86")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bs_s", file: !310, line: 47, size: 320, elements: !312)
!312 = !{!313, !314, !315, !316, !319, !320}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "p_start", scope: !311, file: !310, line: 49, baseType: !46, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !311, file: !310, line: 50, baseType: !46, size: 64, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "p_end", scope: !311, file: !310, line: 51, baseType: !46, size: 64, offset: 128)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bits", scope: !311, file: !310, line: 53, baseType: !317, size: 64, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !318, line: 87, baseType: !24)
!318 = !DIFile(filename: "/usr/include/stdint.h", directory: "", checksumkind: CSK_MD5, checksum: "a48e64edacc5b19f56c99745232c963c")
!319 = !DIDerivedType(tag: DW_TAG_member, name: "i_left", scope: !311, file: !310, line: 54, baseType: !47, size: 32, offset: 256)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "i_bits_encoded", scope: !311, file: !310, line: 55, baseType: !47, size: 32, offset: 288)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "nal_buffer", scope: !110, file: !111, line: 404, baseType: !46, size: 64, offset: 14656)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "nal_buffer_size", scope: !110, file: !111, line: 405, baseType: !47, size: 32, offset: 14720)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame", scope: !110, file: !111, line: 410, baseType: !47, size: 32, offset: 14752)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !110, file: !111, line: 411, baseType: !47, size: 32, offset: 14784)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "i_thread_frames", scope: !110, file: !111, line: 413, baseType: !47, size: 32, offset: 14816)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_type", scope: !110, file: !111, line: 415, baseType: !47, size: 32, offset: 14848)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "i_nal_ref_idc", scope: !110, file: !111, line: 416, baseType: !47, size: 32, offset: 14880)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "i_disp_fields", scope: !110, file: !111, line: 418, baseType: !47, size: 32, offset: 14912)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "i_disp_fields_last_frame", scope: !110, file: !111, line: 419, baseType: !47, size: 32, offset: 14944)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_duration", scope: !110, file: !111, line: 420, baseType: !47, size: 32, offset: 14976)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields", scope: !110, file: !111, line: 421, baseType: !47, size: 32, offset: 15008)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay", scope: !110, file: !111, line: 422, baseType: !47, size: 32, offset: 15040)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields_lookahead", scope: !110, file: !111, line: 424, baseType: !47, size: 32, offset: 15072)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay_lookahead", scope: !110, file: !111, line: 425, baseType: !47, size: 32, offset: 15104)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "b_queued_intra_refresh", scope: !110, file: !111, line: 427, baseType: !47, size: 32, offset: 15136)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "sps_array", scope: !110, file: !111, line: 430, baseType: !337, size: 10400, offset: 15168)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 10400, elements: !424)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_sps_t", file: !339, line: 154, baseType: !340)
!339 = !DIFile(filename: "x264_src/common/set.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "36bc2db0356ac829288e85d371259e00")
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 52, size: 10400, elements: !341)
!341 = !{!342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !359, !360, !361, !362, !363, !364, !365, !366, !367, !374, !375, !423}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "i_id", scope: !340, file: !339, line: 54, baseType: !47, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "i_profile_idc", scope: !340, file: !339, line: 56, baseType: !47, size: 32, offset: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "i_level_idc", scope: !340, file: !339, line: 57, baseType: !47, size: 32, offset: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set0", scope: !340, file: !339, line: 59, baseType: !47, size: 32, offset: 96)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set1", scope: !340, file: !339, line: 60, baseType: !47, size: 32, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "b_constraint_set2", scope: !340, file: !339, line: 61, baseType: !47, size: 32, offset: 160)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_frame_num", scope: !340, file: !339, line: 63, baseType: !47, size: 32, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc_type", scope: !340, file: !339, line: 65, baseType: !47, size: 32, offset: 224)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_poc_lsb", scope: !340, file: !339, line: 67, baseType: !47, size: 32, offset: 256)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "b_delta_pic_order_always_zero", scope: !340, file: !339, line: 69, baseType: !47, size: 32, offset: 288)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_non_ref_pic", scope: !340, file: !339, line: 70, baseType: !47, size: 32, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_top_to_bottom_field", scope: !340, file: !339, line: 71, baseType: !47, size: 32, offset: 352)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_frames_in_poc_cycle", scope: !340, file: !339, line: 72, baseType: !47, size: 32, offset: 384)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "i_offset_for_ref_frame", scope: !340, file: !339, line: 73, baseType: !356, size: 8192, offset: 416)
!356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8192, elements: !357)
!357 = !{!358}
!358 = !DISubrange(count: 256)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_frames", scope: !340, file: !339, line: 75, baseType: !47, size: 32, offset: 8608)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "b_gaps_in_frame_num_value_allowed", scope: !340, file: !339, line: 76, baseType: !47, size: 32, offset: 8640)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_width", scope: !340, file: !339, line: 77, baseType: !47, size: 32, offset: 8672)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_height", scope: !340, file: !339, line: 78, baseType: !47, size: 32, offset: 8704)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "b_frame_mbs_only", scope: !340, file: !339, line: 79, baseType: !47, size: 32, offset: 8736)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "b_mb_adaptive_frame_field", scope: !340, file: !339, line: 80, baseType: !47, size: 32, offset: 8768)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct8x8_inference", scope: !340, file: !339, line: 81, baseType: !47, size: 32, offset: 8800)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "b_crop", scope: !340, file: !339, line: 83, baseType: !47, size: 32, offset: 8832)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !340, file: !339, line: 90, baseType: !368, size: 128, offset: 8864)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !339, line: 84, size: 128, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "i_left", scope: !368, file: !339, line: 86, baseType: !47, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "i_right", scope: !368, file: !339, line: 87, baseType: !47, size: 32, offset: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "i_top", scope: !368, file: !339, line: 88, baseType: !47, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "i_bottom", scope: !368, file: !339, line: 89, baseType: !47, size: 32, offset: 96)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "b_vui", scope: !340, file: !339, line: 92, baseType: !47, size: 32, offset: 8992)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "vui", scope: !340, file: !339, line: 150, baseType: !376, size: 1344, offset: 9024)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !339, line: 93, size: 1344, elements: !377)
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !414, !415, !416, !417, !418, !419, !420, !421, !422}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "b_aspect_ratio_info_present", scope: !376, file: !339, line: 95, baseType: !47, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_width", scope: !376, file: !339, line: 96, baseType: !47, size: 32, offset: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "i_sar_height", scope: !376, file: !339, line: 97, baseType: !47, size: 32, offset: 64)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "b_overscan_info_present", scope: !376, file: !339, line: 99, baseType: !47, size: 32, offset: 96)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "b_overscan_info", scope: !376, file: !339, line: 100, baseType: !47, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "b_signal_type_present", scope: !376, file: !339, line: 102, baseType: !47, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "i_vidformat", scope: !376, file: !339, line: 103, baseType: !47, size: 32, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "b_fullrange", scope: !376, file: !339, line: 104, baseType: !47, size: 32, offset: 224)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "b_color_description_present", scope: !376, file: !339, line: 105, baseType: !47, size: 32, offset: 256)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "i_colorprim", scope: !376, file: !339, line: 106, baseType: !47, size: 32, offset: 288)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "i_transfer", scope: !376, file: !339, line: 107, baseType: !47, size: 32, offset: 320)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "i_colmatrix", scope: !376, file: !339, line: 108, baseType: !47, size: 32, offset: 352)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_loc_info_present", scope: !376, file: !339, line: 110, baseType: !47, size: 32, offset: 384)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc_top", scope: !376, file: !339, line: 111, baseType: !47, size: 32, offset: 416)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_loc_bottom", scope: !376, file: !339, line: 112, baseType: !47, size: 32, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "b_timing_info_present", scope: !376, file: !339, line: 114, baseType: !47, size: 32, offset: 480)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_units_in_tick", scope: !376, file: !339, line: 115, baseType: !267, size: 32, offset: 512)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "i_time_scale", scope: !376, file: !339, line: 116, baseType: !267, size: 32, offset: 544)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "b_fixed_frame_rate", scope: !376, file: !339, line: 117, baseType: !47, size: 32, offset: 576)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "b_nal_hrd_parameters_present", scope: !376, file: !339, line: 119, baseType: !47, size: 32, offset: 608)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "b_vcl_hrd_parameters_present", scope: !376, file: !339, line: 120, baseType: !47, size: 32, offset: 640)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "hrd", scope: !376, file: !339, line: 137, baseType: !400, size: 384, offset: 672)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !376, file: !339, line: 122, size: 384, elements: !401)
!401 = !{!402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_cnt", scope: !400, file: !339, line: 124, baseType: !47, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_scale", scope: !400, file: !339, line: 125, baseType: !47, size: 32, offset: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_scale", scope: !400, file: !339, line: 126, baseType: !47, size: 32, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_value", scope: !400, file: !339, line: 127, baseType: !47, size: 32, offset: 96)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_value", scope: !400, file: !339, line: 128, baseType: !47, size: 32, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "i_bit_rate_unscaled", scope: !400, file: !339, line: 129, baseType: !47, size: 32, offset: 160)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_size_unscaled", scope: !400, file: !339, line: 130, baseType: !47, size: 32, offset: 192)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "b_cbr_hrd", scope: !400, file: !339, line: 131, baseType: !47, size: 32, offset: 224)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "i_initial_cpb_removal_delay_length", scope: !400, file: !339, line: 133, baseType: !47, size: 32, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_removal_delay_length", scope: !400, file: !339, line: 134, baseType: !47, size: 32, offset: 288)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "i_dpb_output_delay_length", scope: !400, file: !339, line: 135, baseType: !47, size: 32, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "i_time_offset_length", scope: !400, file: !339, line: 136, baseType: !47, size: 32, offset: 352)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_struct_present", scope: !376, file: !339, line: 139, baseType: !47, size: 32, offset: 1056)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "b_bitstream_restriction", scope: !376, file: !339, line: 140, baseType: !47, size: 32, offset: 1088)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "b_motion_vectors_over_pic_boundaries", scope: !376, file: !339, line: 141, baseType: !47, size: 32, offset: 1120)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_bytes_per_pic_denom", scope: !376, file: !339, line: 142, baseType: !47, size: 32, offset: 1152)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_bits_per_mb_denom", scope: !376, file: !339, line: 143, baseType: !47, size: 32, offset: 1184)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_mv_length_horizontal", scope: !376, file: !339, line: 144, baseType: !47, size: 32, offset: 1216)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "i_log2_max_mv_length_vertical", scope: !376, file: !339, line: 145, baseType: !47, size: 32, offset: 1248)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_reorder_frames", scope: !376, file: !339, line: 146, baseType: !47, size: 32, offset: 1280)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_dec_frame_buffering", scope: !376, file: !339, line: 147, baseType: !47, size: 32, offset: 1312)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "b_qpprime_y_zero_transform_bypass", scope: !340, file: !339, line: 152, baseType: !47, size: 32, offset: 10368)
!424 = !{!425}
!425 = !DISubrange(count: 1)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !110, file: !111, line: 431, baseType: !427, size: 64, offset: 25600)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "pps_array", scope: !110, file: !111, line: 432, baseType: !429, size: 960, offset: 25664)
!429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 960, elements: !424)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pps_t", file: !339, line: 186, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !339, line: 156, size: 960, elements: !432)
!432 = !{!433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "i_id", scope: !431, file: !339, line: 158, baseType: !47, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "i_sps_id", scope: !431, file: !339, line: 159, baseType: !47, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "b_cabac", scope: !431, file: !339, line: 161, baseType: !47, size: 32, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "b_pic_order", scope: !431, file: !339, line: 163, baseType: !47, size: 32, offset: 96)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_slice_groups", scope: !431, file: !339, line: 164, baseType: !47, size: 32, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l0_default_active", scope: !431, file: !339, line: 166, baseType: !47, size: 32, offset: 160)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l1_default_active", scope: !431, file: !339, line: 167, baseType: !47, size: 32, offset: 192)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_pred", scope: !431, file: !339, line: 169, baseType: !47, size: 32, offset: 224)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "b_weighted_bipred", scope: !431, file: !339, line: 170, baseType: !47, size: 32, offset: 256)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_init_qp", scope: !431, file: !339, line: 172, baseType: !47, size: 32, offset: 288)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_init_qs", scope: !431, file: !339, line: 173, baseType: !47, size: 32, offset: 320)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp_index_offset", scope: !431, file: !339, line: 175, baseType: !47, size: 32, offset: 352)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "b_deblocking_filter_control", scope: !431, file: !339, line: 177, baseType: !47, size: 32, offset: 384)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "b_constrained_intra_pred", scope: !431, file: !339, line: 178, baseType: !47, size: 32, offset: 416)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "b_redundant_pic_cnt", scope: !431, file: !339, line: 179, baseType: !47, size: 32, offset: 448)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8_mode", scope: !431, file: !339, line: 181, baseType: !47, size: 32, offset: 480)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "i_cqm_preset", scope: !431, file: !339, line: 183, baseType: !47, size: 32, offset: 512)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_list", scope: !431, file: !339, line: 184, baseType: !451, size: 384, offset: 576)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 384, elements: !67)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !110, file: !111, line: 433, baseType: !454, size: 64, offset: 26624)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "i_idr_pic_id", scope: !110, file: !111, line: 434, baseType: !47, size: 32, offset: 26688)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "i_dts_compress_multiplier", scope: !110, file: !111, line: 437, baseType: !47, size: 32, offset: 26720)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dequant4_mf", scope: !110, file: !111, line: 440, baseType: !458, size: 256, offset: 26752)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 256, elements: !461)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 512, elements: !34)
!461 = !{!462}
!462 = !DISubrange(count: 4)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "dequant8_mf", scope: !110, file: !111, line: 441, baseType: !464, size: 128, offset: 27008)
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 128, elements: !215)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 2048, elements: !167)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "unquant4_mf", scope: !110, file: !111, line: 443, baseType: !458, size: 256, offset: 27136)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "unquant8_mf", scope: !110, file: !111, line: 444, baseType: !464, size: 128, offset: 27392)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "quant4_mf", scope: !110, file: !111, line: 446, baseType: !470, size: 256, offset: 27520)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 256, elements: !461)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !34)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !31, line: 25, baseType: !474)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !23, line: 40, baseType: !475)
!475 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "quant8_mf", scope: !110, file: !111, line: 447, baseType: !477, size: 128, offset: 27776)
!477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !478, size: 128, elements: !215)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 1024, elements: !167)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "quant4_bias", scope: !110, file: !111, line: 448, baseType: !470, size: 256, offset: 27904)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "quant8_bias", scope: !110, file: !111, line: 449, baseType: !477, size: 128, offset: 28160)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "cost_mv", scope: !110, file: !111, line: 454, baseType: !483, size: 5888, offset: 28288)
!483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 5888, elements: !485)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!485 = !{!486}
!486 = !DISubrange(count: 92)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cost_mv_fpel", scope: !110, file: !111, line: 455, baseType: !488, size: 23552, offset: 34176)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 23552, elements: !489)
!489 = !{!486, !462}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_table", scope: !110, file: !111, line: 457, baseType: !452, size: 64, offset: 57728)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !110, file: !111, line: 460, baseType: !492, size: 53376, offset: 57856)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_slice_header_t", file: !111, line: 364, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !111, line: 302, size: 53376, elements: !494)
!494 = !{!495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !523, !527, !528, !529, !535, !536, !537, !538, !539, !540, !541, !542}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "sps", scope: !493, file: !111, line: 304, baseType: !427, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !493, file: !111, line: 305, baseType: !454, size: 64, offset: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !493, file: !111, line: 307, baseType: !47, size: 32, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "i_first_mb", scope: !493, file: !111, line: 308, baseType: !47, size: 32, offset: 160)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_mb", scope: !493, file: !111, line: 309, baseType: !47, size: 32, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "i_pps_id", scope: !493, file: !111, line: 311, baseType: !47, size: 32, offset: 224)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !493, file: !111, line: 313, baseType: !47, size: 32, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "b_mbaff", scope: !493, file: !111, line: 315, baseType: !47, size: 32, offset: 288)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "b_field_pic", scope: !493, file: !111, line: 316, baseType: !47, size: 32, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "b_bottom_field", scope: !493, file: !111, line: 317, baseType: !47, size: 32, offset: 352)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "i_idr_pic_id", scope: !493, file: !111, line: 319, baseType: !47, size: 32, offset: 384)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !493, file: !111, line: 321, baseType: !47, size: 32, offset: 416)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "i_delta_poc_bottom", scope: !493, file: !111, line: 322, baseType: !47, size: 32, offset: 448)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "i_delta_poc", scope: !493, file: !111, line: 324, baseType: !214, size: 64, offset: 480)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "i_redundant_pic_cnt", scope: !493, file: !111, line: 325, baseType: !47, size: 32, offset: 544)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_spatial_mv_pred", scope: !493, file: !111, line: 327, baseType: !47, size: 32, offset: 576)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "b_num_ref_idx_override", scope: !493, file: !111, line: 329, baseType: !47, size: 32, offset: 608)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l0_active", scope: !493, file: !111, line: 330, baseType: !47, size: 32, offset: 640)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "i_num_ref_idx_l1_active", scope: !493, file: !111, line: 331, baseType: !47, size: 32, offset: 672)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_pic_list_reordering_l0", scope: !493, file: !111, line: 333, baseType: !47, size: 32, offset: 704)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_pic_list_reordering_l1", scope: !493, file: !111, line: 334, baseType: !47, size: 32, offset: 736)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "ref_pic_list_order", scope: !493, file: !111, line: 339, baseType: !517, size: 2048, offset: 768)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 2048, elements: !522)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !493, file: !111, line: 335, size: 64, elements: !519)
!519 = !{!520, !521}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "idc", scope: !518, file: !111, line: 337, baseType: !47, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !518, file: !111, line: 338, baseType: !47, size: 32, offset: 32)
!522 = !{!216, !35}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !493, file: !111, line: 342, baseType: !524, size: 49152, align: 128, offset: 2816)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 49152, align: 128, elements: !525)
!525 = !{!526, !73}
!526 = !DISubrange(count: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmco_remove_from_end", scope: !493, file: !111, line: 344, baseType: !47, size: 32, offset: 51968)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmco_command_count", scope: !493, file: !111, line: 345, baseType: !47, size: 32, offset: 52000)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "mmco", scope: !493, file: !111, line: 350, baseType: !530, size: 1024, offset: 52032)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 1024, elements: !34)
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !493, file: !111, line: 346, size: 64, elements: !532)
!532 = !{!533, !534}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "i_difference_of_pic_nums", scope: !531, file: !111, line: 348, baseType: !47, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !531, file: !111, line: 349, baseType: !47, size: 32, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "i_cabac_init_idc", scope: !493, file: !111, line: 352, baseType: !47, size: 32, offset: 53056)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !493, file: !111, line: 354, baseType: !47, size: 32, offset: 53088)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp_delta", scope: !493, file: !111, line: 355, baseType: !47, size: 32, offset: 53120)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "b_sp_for_swidth", scope: !493, file: !111, line: 356, baseType: !47, size: 32, offset: 53152)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "i_qs_delta", scope: !493, file: !111, line: 357, baseType: !47, size: 32, offset: 53184)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "i_disable_deblocking_filter_idc", scope: !493, file: !111, line: 360, baseType: !47, size: 32, offset: 53216)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "i_alpha_c0_offset", scope: !493, file: !111, line: 361, baseType: !47, size: 32, offset: 53248)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "i_beta_offset", scope: !493, file: !111, line: 362, baseType: !47, size: 32, offset: 53280)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "cabac", scope: !110, file: !111, line: 463, baseType: !544, size: 4096, offset: 111232)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_cabac_t", file: !545, line: 46, baseType: !546)
!545 = !DIFile(filename: "x264_src/common/cabac.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "22d062fb0f207ca9dcf17e0003a54ffb")
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !545, line: 27, size: 4096, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "i_low", scope: !546, file: !545, line: 30, baseType: !47, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "i_range", scope: !546, file: !545, line: 31, baseType: !47, size: 32, offset: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "i_queue", scope: !546, file: !545, line: 34, baseType: !47, size: 32, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes_outstanding", scope: !546, file: !545, line: 35, baseType: !47, size: 32, offset: 96)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "p_start", scope: !546, file: !545, line: 37, baseType: !46, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !546, file: !545, line: 38, baseType: !46, size: 64, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "p_end", scope: !546, file: !545, line: 39, baseType: !46, size: 64, offset: 256)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "f8_bits_encoded", scope: !546, file: !545, line: 42, baseType: !47, size: 32, align: 128, offset: 384)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !546, file: !545, line: 45, baseType: !557, size: 3680, offset: 416)
!557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 3680, elements: !558)
!558 = !{!559}
!559 = !DISubrange(count: 460)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !110, file: !111, line: 494, baseType: !561, size: 2112, offset: 115328)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !111, line: 465, size: 2112, elements: !562)
!562 = !{!563, !701, !703, !704, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !717, !718, !719, !720}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !561, file: !111, line: 468, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_frame_t", file: !567, line: 146, baseType: !568)
!567 = !DIFile(filename: "x264_src/common/frame.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "4a274a9291201f03b4af1f57e6a86f6f")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_frame", file: !567, line: 31, size: 125056, elements: !569)
!569 = !{!570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !597, !598, !599, !600, !601, !602, !604, !606, !607, !608, !609, !610, !613, !615, !616, !618, !623, !624, !628, !629, !633, !637, !640, !642, !643, !645, !646, !648, !649, !650, !653, !655, !656, !657, !659, !660, !661, !662, !663, !664, !665, !666, !668, !669, !673, !682, !686, !688, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc", scope: !568, file: !567, line: 34, baseType: !47, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !568, file: !567, line: 35, baseType: !47, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "i_qpplus1", scope: !568, file: !567, line: 36, baseType: !47, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "i_pts", scope: !568, file: !567, line: 37, baseType: !20, size: 64, offset: 128)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "i_reordered_pts", scope: !568, file: !567, line: 38, baseType: !20, size: 64, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "i_duration", scope: !568, file: !567, line: 39, baseType: !47, size: 32, offset: 256)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_duration", scope: !568, file: !567, line: 40, baseType: !47, size: 32, offset: 288)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay", scope: !568, file: !567, line: 41, baseType: !47, size: 32, offset: 320)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "i_dpb_output_delay", scope: !568, file: !567, line: 42, baseType: !47, size: 32, offset: 352)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !568, file: !567, line: 43, baseType: !580, size: 64, offset: 384)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame", scope: !568, file: !567, line: 45, baseType: !47, size: 32, offset: 448)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded", scope: !568, file: !567, line: 46, baseType: !47, size: 32, offset: 480)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "i_field_cnt", scope: !568, file: !567, line: 47, baseType: !47, size: 32, offset: 512)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_num", scope: !568, file: !567, line: 48, baseType: !47, size: 32, offset: 544)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "b_kept_as_ref", scope: !568, file: !567, line: 49, baseType: !47, size: 32, offset: 576)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "i_pic_struct", scope: !568, file: !567, line: 50, baseType: !47, size: 32, offset: 608)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "b_keyframe", scope: !568, file: !567, line: 51, baseType: !47, size: 32, offset: 640)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "b_fdec", scope: !568, file: !567, line: 52, baseType: !30, size: 8, offset: 672)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "b_last_minigop_bframe", scope: !568, file: !567, line: 53, baseType: !30, size: 8, offset: 680)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframes", scope: !568, file: !567, line: 54, baseType: !30, size: 8, offset: 688)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_avg_rc", scope: !568, file: !567, line: 55, baseType: !210, size: 32, offset: 704)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_avg_aq", scope: !568, file: !567, line: 56, baseType: !210, size: 32, offset: 736)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "i_poc_l0ref0", scope: !568, file: !567, line: 57, baseType: !47, size: 32, offset: 768)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "i_plane", scope: !568, file: !567, line: 60, baseType: !47, size: 32, offset: 800)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride", scope: !568, file: !567, line: 61, baseType: !596, size: 96, offset: 832)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 96, elements: !72)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "i_width", scope: !568, file: !567, line: 62, baseType: !596, size: 96, offset: 928)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines", scope: !568, file: !567, line: 63, baseType: !596, size: 96, offset: 1024)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride_lowres", scope: !568, file: !567, line: 64, baseType: !47, size: 32, offset: 1120)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "i_width_lowres", scope: !568, file: !567, line: 65, baseType: !47, size: 32, offset: 1152)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_lowres", scope: !568, file: !567, line: 66, baseType: !47, size: 32, offset: 1184)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !568, file: !567, line: 67, baseType: !603, size: 192, offset: 1216)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 192, elements: !72)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "filtered", scope: !568, file: !567, line: 68, baseType: !605, size: 256, offset: 1408)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 256, elements: !461)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "lowres", scope: !568, file: !567, line: 69, baseType: !605, size: 256, offset: 1664)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "integral", scope: !568, file: !567, line: 70, baseType: !484, size: 64, offset: 1920)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !568, file: !567, line: 74, baseType: !605, size: 256, offset: 1984)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_lowres", scope: !568, file: !567, line: 75, baseType: !605, size: 256, offset: 2240)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !568, file: !567, line: 77, baseType: !611, size: 24576, align: 128, offset: 2560)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 24576, align: 128, elements: !612)
!612 = !{!35, !73}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "weighted", scope: !568, file: !567, line: 78, baseType: !614, size: 1024, offset: 27136)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 1024, elements: !34)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "b_duplicate", scope: !568, file: !567, line: 79, baseType: !47, size: 32, offset: 28160)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !568, file: !567, line: 80, baseType: !617, size: 64, offset: 28224)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "mb_type", scope: !568, file: !567, line: 83, baseType: !619, size: 64, offset: 28288)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !21, line: 24, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !23, line: 37, baseType: !622)
!622 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "mb_partition", scope: !568, file: !567, line: 84, baseType: !46, size: 64, offset: 28352)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !568, file: !567, line: 85, baseType: !625, size: 128, offset: 28416)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 128, elements: !215)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 32, elements: !215)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "mv16x16", scope: !568, file: !567, line: 86, baseType: !626, size: 64, offset: 28544)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_mvs", scope: !568, file: !567, line: 87, baseType: !630, size: 2176, offset: 28608)
!630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 2176, elements: !631)
!631 = !{!216, !632}
!632 = !DISubrange(count: 17)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_costs", scope: !568, file: !567, line: 92, baseType: !634, size: 20736, offset: 30784)
!634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 20736, elements: !635)
!635 = !{!636, !636}
!636 = !DISubrange(count: 18)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "lowres_mv_costs", scope: !568, file: !567, line: 96, baseType: !638, size: 2176, offset: 51520)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 2176, elements: !631)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !568, file: !567, line: 97, baseType: !641, size: 128, offset: 53696)
!641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 128, elements: !215)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref", scope: !568, file: !567, line: 98, baseType: !214, size: 64, offset: 53824)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ref_poc", scope: !568, file: !567, line: 99, baseType: !644, size: 1024, offset: 53888)
!644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 1024, elements: !522)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "inv_ref_poc", scope: !568, file: !567, line: 100, baseType: !627, size: 32, offset: 54912)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "i_cost_est", scope: !568, file: !567, line: 105, baseType: !647, size: 10368, offset: 54944)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 10368, elements: !635)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_cost_est_aq", scope: !568, file: !567, line: 106, baseType: !647, size: 10368, offset: 65312)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "i_satd", scope: !568, file: !567, line: 107, baseType: !47, size: 32, offset: 75680)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra_mbs", scope: !568, file: !567, line: 108, baseType: !651, size: 576, offset: 75712)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 576, elements: !652)
!652 = !{!636}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_satds", scope: !568, file: !567, line: 109, baseType: !654, size: 20736, offset: 76288)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 20736, elements: !635)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_satd", scope: !568, file: !567, line: 110, baseType: !639, size: 64, offset: 97024)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "i_row_bits", scope: !568, file: !567, line: 111, baseType: !639, size: 64, offset: 97088)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "f_row_qp", scope: !568, file: !567, line: 112, baseType: !658, size: 64, offset: 97152)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_offset", scope: !568, file: !567, line: 113, baseType: !658, size: 64, offset: 97216)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "f_qp_offset_aq", scope: !568, file: !567, line: 114, baseType: !658, size: 64, offset: 97280)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "b_intra_calculated", scope: !568, file: !567, line: 115, baseType: !47, size: 32, offset: 97344)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra_cost", scope: !568, file: !567, line: 116, baseType: !484, size: 64, offset: 97408)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_propagate_cost", scope: !568, file: !567, line: 117, baseType: !484, size: 64, offset: 97472)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_inv_qscale_factor", scope: !568, file: !567, line: 118, baseType: !484, size: 64, offset: 97536)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "b_scenecut", scope: !568, file: !567, line: 119, baseType: !47, size: 32, offset: 97600)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "f_weighted_cost_delta", scope: !568, file: !567, line: 120, baseType: !667, size: 576, offset: 97632)
!667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 576, elements: !652)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "i_pixel_sum", scope: !568, file: !567, line: 121, baseType: !267, size: 32, offset: 98208)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "i_pixel_ssd", scope: !568, file: !567, line: 122, baseType: !670, size: 64, offset: 98240)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !31, line: 27, baseType: !671)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !23, line: 45, baseType: !672)
!672 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "hrd_timing", scope: !568, file: !567, line: 125, baseType: !674, size: 256, offset: 98304)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_hrd_t", file: !109, line: 503, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !109, line: 496, size: 256, elements: !676)
!676 = !{!677, !679, !680, !681}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_initial_arrival_time", scope: !675, file: !109, line: 498, baseType: !678, size: 64)
!678 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_final_arrival_time", scope: !675, file: !109, line: 499, baseType: !678, size: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "cpb_removal_time", scope: !675, file: !109, line: 500, baseType: !678, size: 64, offset: 128)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dpb_output_time", scope: !675, file: !109, line: 502, baseType: !678, size: 64, offset: 192)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "i_planned_type", scope: !568, file: !567, line: 128, baseType: !683, size: 2008, offset: 98560)
!683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 2008, elements: !684)
!684 = !{!685}
!685 = !DISubrange(count: 251)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "i_planned_satd", scope: !568, file: !567, line: 129, baseType: !687, size: 8032, offset: 100576)
!687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 8032, elements: !684)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "f_planned_cpb_duration", scope: !568, file: !567, line: 130, baseType: !689, size: 16064, offset: 108608)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 16064, elements: !684)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "i_coded_fields_lookahead", scope: !568, file: !567, line: 131, baseType: !47, size: 32, offset: 124672)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "i_cpb_delay_lookahead", scope: !568, file: !567, line: 132, baseType: !47, size: 32, offset: 124704)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_completed", scope: !568, file: !567, line: 135, baseType: !47, size: 32, offset: 124736)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "i_lines_weighted", scope: !568, file: !567, line: 136, baseType: !47, size: 32, offset: 124768)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "i_reference_count", scope: !568, file: !567, line: 137, baseType: !47, size: 32, offset: 124800)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !568, file: !567, line: 138, baseType: !47, size: 32, offset: 124832)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "cv", scope: !568, file: !567, line: 139, baseType: !47, size: 32, offset: 124864)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "f_pir_position", scope: !568, file: !567, line: 142, baseType: !210, size: 32, offset: 124896)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "i_pir_start_col", scope: !568, file: !567, line: 143, baseType: !47, size: 32, offset: 124928)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "i_pir_end_col", scope: !568, file: !567, line: 144, baseType: !47, size: 32, offset: 124960)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "i_frames_since_pir", scope: !568, file: !567, line: 145, baseType: !47, size: 32, offset: 124992)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !561, file: !111, line: 470, baseType: !702, size: 128, offset: 64)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !564, size: 128, elements: !215)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "blank_unused", scope: !561, file: !111, line: 473, baseType: !564, size: 64, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !561, file: !111, line: 476, baseType: !705, size: 1152, offset: 256)
!705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 1152, elements: !652)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_keyframe", scope: !561, file: !111, line: 478, baseType: !47, size: 32, offset: 1408)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "i_input", scope: !561, file: !111, line: 480, baseType: !47, size: 32, offset: 1440)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_dpb", scope: !561, file: !111, line: 482, baseType: !47, size: 32, offset: 1472)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_ref0", scope: !561, file: !111, line: 483, baseType: !47, size: 32, offset: 1504)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_ref1", scope: !561, file: !111, line: 484, baseType: !47, size: 32, offset: 1536)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "i_delay", scope: !561, file: !111, line: 485, baseType: !47, size: 32, offset: 1568)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_delay", scope: !561, file: !111, line: 486, baseType: !47, size: 32, offset: 1600)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "i_bframe_delay_time", scope: !561, file: !111, line: 487, baseType: !20, size: 64, offset: 1664)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "i_init_delta", scope: !561, file: !111, line: 488, baseType: !20, size: 64, offset: 1728)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "i_prev_reordered_pts", scope: !561, file: !111, line: 489, baseType: !716, size: 128, offset: 1792)
!716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 128, elements: !215)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i_largest_pts", scope: !561, file: !111, line: 490, baseType: !20, size: 64, offset: 1920)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "i_second_largest_pts", scope: !561, file: !111, line: 491, baseType: !20, size: 64, offset: 1984)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "b_have_lowres", scope: !561, file: !111, line: 492, baseType: !47, size: 32, offset: 2048)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "b_have_sub8x8_esa", scope: !561, file: !111, line: 493, baseType: !47, size: 32, offset: 2080)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "fenc", scope: !110, file: !111, line: 497, baseType: !565, size: 64, offset: 117440)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "fdec", scope: !110, file: !111, line: 500, baseType: !565, size: 64, offset: 117504)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref0", scope: !110, file: !111, line: 503, baseType: !47, size: 32, offset: 117568)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fref0", scope: !110, file: !111, line: 504, baseType: !725, size: 1216, offset: 117632)
!725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 1216, elements: !726)
!726 = !{!727}
!727 = !DISubrange(count: 19)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "i_ref1", scope: !110, file: !111, line: 505, baseType: !47, size: 32, offset: 118848)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "fref1", scope: !110, file: !111, line: 506, baseType: !725, size: 1216, offset: 118912)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "b_ref_reorder", scope: !110, file: !111, line: 507, baseType: !214, size: 64, offset: 120128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "initial_cpb_removal_delay", scope: !110, file: !111, line: 510, baseType: !47, size: 32, offset: 120192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "initial_cpb_removal_delay_offset", scope: !110, file: !111, line: 511, baseType: !47, size: 32, offset: 120224)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "i_reordered_pts_delay", scope: !110, file: !111, line: 512, baseType: !20, size: 64, offset: 120256)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "dct", scope: !110, file: !111, line: 522, baseType: !735, size: 10624, offset: 120320)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !111, line: 515, size: 10624, elements: !736)
!736 = !{!737, !739, !742, !745}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "luma16x16_dc", scope: !735, file: !111, line: 517, baseType: !738, size: 256, align: 128)
!738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 256, elements: !34)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_dc", scope: !735, file: !111, line: 518, baseType: !740, size: 128, align: 128, offset: 256)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 128, elements: !741)
!741 = !{!216, !462}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "luma8x8", scope: !735, file: !111, line: 520, baseType: !743, size: 4096, align: 128, offset: 384)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 4096, elements: !744)
!744 = !{!462, !168}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "luma4x4", scope: !735, file: !111, line: 521, baseType: !746, size: 6144, align: 128, offset: 4480)
!746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 6144, elements: !747)
!747 = !{!748, !35}
!748 = !DISubrange(count: 24)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "mb", scope: !110, file: !111, line: 732, baseType: !750, size: 82688, offset: 130944)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !111, line: 525, size: 82688, elements: !751)
!751 = !{!752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !779, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !797, !800, !804, !805, !806, !811, !812, !815, !816, !817, !818, !819, !820, !821, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !881, !912, !913, !914, !915, !916, !917, !918, !919, !920, !923, !924, !925, !928, !931, !933, !936, !938, !939}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !750, file: !111, line: 527, baseType: !47, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_stride", scope: !750, file: !111, line: 530, baseType: !47, size: 32, offset: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "i_b8_stride", scope: !750, file: !111, line: 531, baseType: !47, size: 32, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "i_b4_stride", scope: !750, file: !111, line: 532, baseType: !47, size: 32, offset: 96)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_x", scope: !750, file: !111, line: 535, baseType: !47, size: 32, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_y", scope: !750, file: !111, line: 536, baseType: !47, size: 32, offset: 160)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_xy", scope: !750, file: !111, line: 537, baseType: !47, size: 32, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "i_b8_xy", scope: !750, file: !111, line: 538, baseType: !47, size: 32, offset: 224)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "i_b4_xy", scope: !750, file: !111, line: 539, baseType: !47, size: 32, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "i_me_method", scope: !750, file: !111, line: 542, baseType: !47, size: 32, offset: 288)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "i_subpel_refine", scope: !750, file: !111, line: 543, baseType: !47, size: 32, offset: 320)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "b_chroma_me", scope: !750, file: !111, line: 544, baseType: !47, size: 32, offset: 352)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "b_trellis", scope: !750, file: !111, line: 545, baseType: !47, size: 32, offset: 384)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "b_noise_reduction", scope: !750, file: !111, line: 546, baseType: !47, size: 32, offset: 416)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "b_dct_decimate", scope: !750, file: !111, line: 547, baseType: !47, size: 32, offset: 448)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_rd", scope: !750, file: !111, line: 548, baseType: !47, size: 32, offset: 480)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_trellis", scope: !750, file: !111, line: 549, baseType: !47, size: 32, offset: 512)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "b_interlaced", scope: !750, file: !111, line: 551, baseType: !47, size: 32, offset: 544)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min", scope: !750, file: !111, line: 554, baseType: !214, size: 64, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max", scope: !750, file: !111, line: 555, baseType: !214, size: 64, offset: 640)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min_spel", scope: !750, file: !111, line: 558, baseType: !214, size: 64, offset: 704)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max_spel", scope: !750, file: !111, line: 559, baseType: !214, size: 64, offset: 768)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "mv_min_fpel", scope: !750, file: !111, line: 561, baseType: !214, size: 64, offset: 832)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "mv_max_fpel", scope: !750, file: !111, line: 562, baseType: !214, size: 64, offset: 896)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour", scope: !750, file: !111, line: 565, baseType: !7, size: 32, offset: 960)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour8", scope: !750, file: !111, line: 566, baseType: !778, size: 128, offset: 992)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !461)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour4", scope: !750, file: !111, line: 567, baseType: !780, size: 512, offset: 1120)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !34)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_intra", scope: !750, file: !111, line: 568, baseType: !7, size: 32, offset: 1632)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_frame", scope: !750, file: !111, line: 569, baseType: !7, size: 32, offset: 1664)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_top", scope: !750, file: !111, line: 570, baseType: !47, size: 32, offset: 1696)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_left", scope: !750, file: !111, line: 571, baseType: !47, size: 32, offset: 1728)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_topleft", scope: !750, file: !111, line: 572, baseType: !47, size: 32, offset: 1760)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_type_topright", scope: !750, file: !111, line: 573, baseType: !47, size: 32, offset: 1792)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_prev_xy", scope: !750, file: !111, line: 574, baseType: !47, size: 32, offset: 1824)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_left_xy", scope: !750, file: !111, line: 575, baseType: !47, size: 32, offset: 1856)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_top_xy", scope: !750, file: !111, line: 576, baseType: !47, size: 32, offset: 1888)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_topleft_xy", scope: !750, file: !111, line: 577, baseType: !47, size: 32, offset: 1920)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_topright_xy", scope: !750, file: !111, line: 578, baseType: !47, size: 32, offset: 1952)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !750, file: !111, line: 585, baseType: !619, size: 64, offset: 1984)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "partition", scope: !750, file: !111, line: 586, baseType: !46, size: 64, offset: 2048)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !750, file: !111, line: 587, baseType: !619, size: 64, offset: 2112)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "cbp", scope: !750, file: !111, line: 588, baseType: !796, size: 64, offset: 2176)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode", scope: !750, file: !111, line: 589, baseType: !798, size: 64, offset: 2240)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 64, elements: !57)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "non_zero_count", scope: !750, file: !111, line: 591, baseType: !801, size: 64, offset: 2304)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 192, elements: !803)
!803 = !{!748}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_pred_mode", scope: !750, file: !111, line: 592, baseType: !619, size: 64, offset: 2368)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !750, file: !111, line: 593, baseType: !625, size: 128, offset: 2432)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "mvd", scope: !750, file: !111, line: 594, baseType: !807, size: 128, offset: 2560)
!807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !808, size: 128, elements: !215)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 128, elements: !810)
!810 = !{!58, !216}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !750, file: !111, line: 595, baseType: !641, size: 128, offset: 2688)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "mvr", scope: !750, file: !111, line: 596, baseType: !813, size: 4096, offset: 2816)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, size: 4096, elements: !814)
!814 = !{!216, !526}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "skipbp", scope: !750, file: !111, line: 597, baseType: !619, size: 64, offset: 6912)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "mb_transform_size", scope: !750, file: !111, line: 598, baseType: !619, size: 64, offset: 6976)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "slice_table", scope: !750, file: !111, line: 599, baseType: !484, size: 64, offset: 7040)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "p_weight_buf", scope: !750, file: !111, line: 603, baseType: !614, size: 1024, offset: 7104)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "i_type", scope: !750, file: !111, line: 606, baseType: !47, size: 32, offset: 8128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "i_partition", scope: !750, file: !111, line: 607, baseType: !47, size: 32, offset: 8160)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "i_sub_partition", scope: !750, file: !111, line: 608, baseType: !822, size: 32, align: 32, offset: 8192)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 32, elements: !461)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "b_transform_8x8", scope: !750, file: !111, line: 609, baseType: !47, size: 32, offset: 8224)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_luma", scope: !750, file: !111, line: 611, baseType: !47, size: 32, offset: 8256)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_chroma", scope: !750, file: !111, line: 612, baseType: !47, size: 32, offset: 8288)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "i_intra16x16_pred_mode", scope: !750, file: !111, line: 614, baseType: !47, size: 32, offset: 8320)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_pred_mode", scope: !750, file: !111, line: 615, baseType: !47, size: 32, offset: 8352)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "i_skip_intra", scope: !750, file: !111, line: 621, baseType: !47, size: 32, offset: 8384)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "b_skip_mc", scope: !750, file: !111, line: 624, baseType: !47, size: 32, offset: 8416)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "b_reencode_mb", scope: !750, file: !111, line: 626, baseType: !47, size: 32, offset: 8448)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ip_offset", scope: !750, file: !111, line: 627, baseType: !47, size: 32, offset: 8480)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !750, file: !111, line: 671, baseType: !833, size: 60672, offset: 8576)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !750, file: !111, line: 629, size: 60672, elements: !834)
!834 = !{!835, !839, !843, !845, !846, !849, !853, !855, !856, !857, !858, !859, !862, !866, !869, !870, !871, !872, !873, !876, !878, !880}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_buf", scope: !833, file: !111, line: 634, baseType: !836, size: 3072, align: 128)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 3072, elements: !837)
!837 = !{!838}
!838 = !DISubrange(count: 384)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "fdec_buf", scope: !833, file: !111, line: 635, baseType: !840, size: 6912, align: 128, offset: 3072)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 6912, elements: !841)
!841 = !{!842}
!842 = !DISubrange(count: 864)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_fdec_buf", scope: !833, file: !111, line: 638, baseType: !844, size: 2048, align: 128, offset: 9984)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 2048, elements: !357)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_fdec_buf", scope: !833, file: !111, line: 639, baseType: !844, size: 2048, align: 128, offset: 12032)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_dct_buf", scope: !833, file: !111, line: 640, baseType: !847, size: 3072, align: 128, offset: 14080)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 3072, elements: !848)
!848 = !{!73, !168}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_dct_buf", scope: !833, file: !111, line: 641, baseType: !850, size: 3840, align: 128, offset: 17152)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 3840, elements: !851)
!851 = !{!852, !35}
!852 = !DISubrange(count: 15)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_nnz_buf", scope: !833, file: !111, line: 642, baseType: !854, size: 128, offset: 20992)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 128, elements: !461)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_nnz_buf", scope: !833, file: !111, line: 643, baseType: !854, size: 128, offset: 21120)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4_cbp", scope: !833, file: !111, line: 644, baseType: !47, size: 32, offset: 21248)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8_cbp", scope: !833, file: !111, line: 645, baseType: !47, size: 32, offset: 21280)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_dct8", scope: !833, file: !111, line: 648, baseType: !743, size: 4096, align: 128, offset: 21376)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_dct4", scope: !833, file: !111, line: 649, baseType: !860, size: 4096, align: 128, offset: 25472)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 4096, elements: !861)
!861 = !{!35, !35}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_hadamard_cache", scope: !833, file: !111, line: 652, baseType: !863, size: 576, align: 128, offset: 29568)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 576, elements: !864)
!864 = !{!865}
!865 = !DISubrange(count: 9)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "fenc_satd_cache", scope: !833, file: !111, line: 653, baseType: !867, size: 1024, align: 128, offset: 30208)
!867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 1024, elements: !868)
!868 = !{!526}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "p_fenc", scope: !833, file: !111, line: 656, baseType: !603, size: 192, offset: 31232)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "p_fenc_plane", scope: !833, file: !111, line: 658, baseType: !603, size: 192, offset: 31424)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "p_fdec", scope: !833, file: !111, line: 661, baseType: !603, size: 192, offset: 31616)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "i_fref", scope: !833, file: !111, line: 664, baseType: !214, size: 64, offset: 31808)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "p_fref", scope: !833, file: !111, line: 665, baseType: !874, size: 24576, offset: 31872)
!874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 24576, elements: !875)
!875 = !{!216, !526, !68}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "p_fref_w", scope: !833, file: !111, line: 666, baseType: !877, size: 2048, offset: 56448)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 2048, elements: !868)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "p_integral", scope: !833, file: !111, line: 667, baseType: !879, size: 2048, offset: 58496)
!879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 2048, elements: !522)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "i_stride", scope: !833, file: !111, line: 670, baseType: !596, size: 96, offset: 60544)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !750, file: !111, line: 704, baseType: !882, size: 6144, offset: 69248)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !750, file: !111, line: 674, size: 6144, elements: !883)
!883 = !{!884, !888, !892, !895, !898, !900, !901, !904, !906, !907, !908, !909, !910, !911}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "intra4x4_pred_mode", scope: !882, file: !111, line: 677, baseType: !885, size: 320, align: 64)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 320, elements: !886)
!886 = !{!887}
!887 = !DISubrange(count: 40)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "non_zero_count", scope: !882, file: !111, line: 680, baseType: !889, size: 384, align: 128, offset: 384)
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 384, elements: !890)
!890 = !{!891}
!891 = !DISubrange(count: 48)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !882, file: !111, line: 683, baseType: !893, size: 640, align: 32, offset: 768)
!893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 640, elements: !894)
!894 = !{!216, !887}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !882, file: !111, line: 686, baseType: !896, size: 2560, align: 128, offset: 1408)
!896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2560, elements: !897)
!897 = !{!216, !887, !216}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "mvd", scope: !882, file: !111, line: 687, baseType: !899, size: 1280, align: 64, offset: 3968)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1280, elements: !897)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !882, file: !111, line: 690, baseType: !885, size: 320, align: 32, offset: 5248)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "direct_mv", scope: !882, file: !111, line: 692, baseType: !902, size: 256, align: 32, offset: 5568)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 256, elements: !903)
!903 = !{!216, !462, !216}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "direct_ref", scope: !882, file: !111, line: 693, baseType: !905, size: 64, align: 32, offset: 5824)
!905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 64, elements: !741)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "direct_partition", scope: !882, file: !111, line: 694, baseType: !47, size: 32, offset: 5888)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "pskip_mv", scope: !882, file: !111, line: 695, baseType: !627, size: 32, align: 32, offset: 5920)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_transform_size", scope: !882, file: !111, line: 698, baseType: !47, size: 32, offset: 5952)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "i_neighbour_interlaced", scope: !882, file: !111, line: 699, baseType: !47, size: 32, offset: 5984)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_top", scope: !882, file: !111, line: 702, baseType: !47, size: 32, offset: 6016)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "i_cbp_left", scope: !882, file: !111, line: 703, baseType: !47, size: 32, offset: 6048)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "i_qp", scope: !750, file: !111, line: 707, baseType: !47, size: 32, offset: 75392)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_qp", scope: !750, file: !111, line: 708, baseType: !47, size: 32, offset: 75424)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_qp", scope: !750, file: !111, line: 709, baseType: !47, size: 32, offset: 75456)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_dqp", scope: !750, file: !111, line: 710, baseType: !47, size: 32, offset: 75488)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "b_variable_qp", scope: !750, file: !111, line: 711, baseType: !47, size: 32, offset: 75520)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "b_lossless", scope: !750, file: !111, line: 712, baseType: !47, size: 32, offset: 75552)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_auto_read", scope: !750, file: !111, line: 713, baseType: !47, size: 32, offset: 75584)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "b_direct_auto_write", scope: !750, file: !111, line: 714, baseType: !47, size: 32, offset: 75616)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "i_trellis_lambda2", scope: !750, file: !111, line: 717, baseType: !921, size: 128, offset: 75648)
!921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 128, elements: !922)
!922 = !{!216, !216}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "i_psy_rd_lambda", scope: !750, file: !111, line: 718, baseType: !47, size: 32, offset: 75776)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "i_chroma_lambda2_offset", scope: !750, file: !111, line: 719, baseType: !47, size: 32, offset: 75808)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "dist_scale_factor_buf", scope: !750, file: !111, line: 722, baseType: !926, size: 4096, offset: 75840)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 4096, elements: !927)
!927 = !{!216, !526, !462}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "dist_scale_factor", scope: !750, file: !111, line: 723, baseType: !929, size: 64, offset: 79936)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 64, elements: !461)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "bipred_weight_buf", scope: !750, file: !111, line: 724, baseType: !932, size: 2048, offset: 80000)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 2048, elements: !927)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "bipred_weight", scope: !750, file: !111, line: 725, baseType: !934, size: 64, offset: 82048)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 32, elements: !461)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "map_col_to_list0", scope: !750, file: !111, line: 728, baseType: !937, size: 144, offset: 82112)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 144, elements: !652)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ref_blind_dupe", scope: !750, file: !111, line: 729, baseType: !47, size: 32, offset: 82272)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_ref_table", scope: !750, file: !111, line: 730, baseType: !940, size: 272, offset: 82304)
!940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 272, elements: !941)
!941 = !{!942}
!942 = !DISubrange(count: 34)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "rc", scope: !110, file: !111, line: 735, baseType: !944, size: 64, offset: 213632)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_ratecontrol_t", file: !111, line: 379, baseType: !946)
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "x264_ratecontrol_t", file: !111, line: 379, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !110, file: !111, line: 793, baseType: !948, size: 29504, offset: 213696)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !111, line: 738, size: 29504, elements: !949)
!949 = !{!950, !977, !981, !983, !985, !986, !987, !988, !989, !990, !991, !992, !995, !997, !998, !1001, !1003, !1005, !1006, !1007}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !948, file: !111, line: 764, baseType: !951, size: 5632)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !948, file: !111, line: 741, size: 5632, elements: !952)
!952 = !{!953, !954, !955, !956, !958, !959, !960, !961, !962, !964, !967, !969, !973, !974, !976}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "i_mv_bits", scope: !951, file: !111, line: 744, baseType: !47, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "i_tex_bits", scope: !951, file: !111, line: 746, baseType: !47, size: 32, offset: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "i_misc_bits", scope: !951, file: !111, line: 748, baseType: !47, size: 32, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !951, file: !111, line: 750, baseType: !957, size: 608, offset: 96)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 608, elements: !726)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_i", scope: !951, file: !111, line: 751, baseType: !47, size: 32, offset: 704)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_p", scope: !951, file: !111, line: 752, baseType: !47, size: 32, offset: 736)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_skip", scope: !951, file: !111, line: 753, baseType: !47, size: 32, offset: 768)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_8x8dct", scope: !951, file: !111, line: 754, baseType: !214, size: 64, offset: 800)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_ref", scope: !951, file: !111, line: 755, baseType: !963, size: 2048, offset: 864)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 2048, elements: !814)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_partition", scope: !951, file: !111, line: 756, baseType: !965, size: 544, offset: 2912)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 544, elements: !966)
!966 = !{!632}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_cbp", scope: !951, file: !111, line: 757, baseType: !968, size: 192, offset: 3456)
!968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 192, elements: !67)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_pred_mode", scope: !951, file: !111, line: 758, baseType: !970, size: 1664, offset: 3648)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 1664, elements: !971)
!971 = !{!462, !972}
!972 = !DISubrange(count: 13)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_score", scope: !951, file: !111, line: 760, baseType: !214, size: 64, offset: 5312)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "i_ssd", scope: !951, file: !111, line: 762, baseType: !975, size: 192, offset: 5376)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 192, elements: !72)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "f_ssim", scope: !951, file: !111, line: 763, baseType: !678, size: 64, offset: 5568)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_count", scope: !948, file: !111, line: 769, baseType: !978, size: 160, offset: 5632)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 160, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 5)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "i_frame_size", scope: !948, file: !111, line: 770, baseType: !982, size: 320, offset: 5824)
!982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 320, elements: !979)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "f_frame_qp", scope: !948, file: !111, line: 771, baseType: !984, size: 320, offset: 6144)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 320, elements: !979)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "i_consecutive_bframes", scope: !948, file: !111, line: 772, baseType: !965, size: 544, offset: 6464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "i_ssd_global", scope: !948, file: !111, line: 774, baseType: !982, size: 320, offset: 7040)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_average", scope: !948, file: !111, line: 775, baseType: !984, size: 320, offset: 7360)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_y", scope: !948, file: !111, line: 776, baseType: !984, size: 320, offset: 7680)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_u", scope: !948, file: !111, line: 777, baseType: !984, size: 320, offset: 8000)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "f_psnr_mean_v", scope: !948, file: !111, line: 778, baseType: !984, size: 320, offset: 8320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "f_ssim_mean_y", scope: !948, file: !111, line: 779, baseType: !984, size: 320, offset: 8640)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count", scope: !948, file: !111, line: 781, baseType: !993, size: 6080, offset: 8960)
!993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 6080, elements: !994)
!994 = !{!980, !727}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_partition", scope: !948, file: !111, line: 782, baseType: !996, size: 2176, offset: 15040)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 2176, elements: !631)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_8x8dct", scope: !948, file: !111, line: 783, baseType: !716, size: 128, offset: 17216)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_count_ref", scope: !948, file: !111, line: 784, baseType: !999, size: 8192, offset: 17344)
!999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 8192, elements: !1000)
!1000 = !{!216, !216, !526}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_cbp", scope: !948, file: !111, line: 785, baseType: !1002, size: 384, offset: 25536)
!1002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 384, elements: !67)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "i_mb_pred_mode", scope: !948, file: !111, line: 786, baseType: !1004, size: 3328, offset: 25920)
!1004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 3328, elements: !971)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_score", scope: !948, file: !111, line: 788, baseType: !214, size: 64, offset: 29248)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "i_direct_frames", scope: !948, file: !111, line: 789, baseType: !214, size: 64, offset: 29312)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "i_wpred", scope: !948, file: !111, line: 791, baseType: !596, size: 96, offset: 29376)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "nr_residual_sum", scope: !110, file: !111, line: 795, baseType: !1009, size: 4096, align: 128, offset: 243200)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 4096, elements: !1010)
!1010 = !{!216, !168}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "nr_offset", scope: !110, file: !111, line: 796, baseType: !1012, size: 2048, align: 128, offset: 247296)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 2048, elements: !1010)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "nr_count", scope: !110, file: !111, line: 797, baseType: !1014, size: 64, offset: 249344)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 64, elements: !215)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "scratch_buffer", scope: !110, file: !111, line: 800, baseType: !174, size: 64, offset: 249408)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "intra_border_backup", scope: !110, file: !111, line: 801, baseType: !1017, size: 384, offset: 249472)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !46, size: 384, elements: !1018)
!1018 = !{!216, !73}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_strength", scope: !110, file: !111, line: 802, baseType: !1020, size: 128, offset: 249856)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1021, size: 128, elements: !215)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 256, elements: !1023)
!1023 = !{!216, !462, !462}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "predict_16x16", scope: !110, file: !111, line: 805, baseType: !1025, size: 448, offset: 249984)
!1025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 448, elements: !1031)
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict_t", file: !1027, line: 27, baseType: !1028)
!1027 = !DIFile(filename: "x264_src/common/predict.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "5f9c3dfea82ca04aa9f99900c2f3609a")
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !46}
!1031 = !{!1032}
!1032 = !DISubrange(count: 7)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8c", scope: !110, file: !111, line: 806, baseType: !1025, size: 448, offset: 250432)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8", scope: !110, file: !111, line: 807, baseType: !1035, size: 768, offset: 250880)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1036, size: 768, elements: !1040)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict8x8_t", file: !1027, line: 28, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{null, !46, !46}
!1040 = !{!1041}
!1041 = !DISubrange(count: 12)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "predict_4x4", scope: !110, file: !111, line: 808, baseType: !1043, size: 768, offset: 251648)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1026, size: 768, elements: !1040)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "predict_8x8_filter", scope: !110, file: !111, line: 809, baseType: !1045, size: 64, offset: 252416)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_predict_8x8_filter_t", file: !1027, line: 29, baseType: !1046)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{null, !46, !46, !47, !47}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "pixf", scope: !110, file: !111, line: 811, baseType: !1050, size: 8448, offset: 252480)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_function_t", file: !6, line: 110, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 63, size: 8448, elements: !1052)
!1052 = !{!1053, !1059, !1060, !1061, !1062, !1064, !1065, !1066, !1067, !1073, !1079, !1080, !1084, !1089, !1090, !1096, !1100, !1101, !1102, !1103, !1104, !1109, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sad", scope: !1051, file: !6, line: 65, baseType: !1054, size: 448)
!1054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 448, elements: !1031)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_t", file: !6, line: 26, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!47, !46, !47, !46, !47}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ssd", scope: !1051, file: !6, line: 66, baseType: !1054, size: 448, offset: 448)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "satd", scope: !1051, file: !6, line: 67, baseType: !1054, size: 448, offset: 896)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ssim", scope: !1051, file: !6, line: 68, baseType: !1054, size: 448, offset: 1344)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sa8d", scope: !1051, file: !6, line: 69, baseType: !1063, size: 256, offset: 1792)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1055, size: 256, elements: !461)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp", scope: !1051, file: !6, line: 70, baseType: !1054, size: 448, offset: 2048)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "mbcmp_unaligned", scope: !1051, file: !6, line: 71, baseType: !1054, size: 448, offset: 2496)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp", scope: !1051, file: !6, line: 72, baseType: !1054, size: 448, offset: 2944)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x3", scope: !1051, file: !6, line: 73, baseType: !1068, size: 448, offset: 3392)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1069, size: 448, elements: !1031)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x3_t", file: !6, line: 27, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !46, !46, !46, !46, !47, !639}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "fpelcmp_x4", scope: !1051, file: !6, line: 74, baseType: !1074, size: 448, offset: 3840)
!1074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1075, size: 448, elements: !1031)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_pixel_cmp_x4_t", file: !6, line: 28, baseType: !1076)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{null, !46, !46, !46, !46, !46, !47, !639}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "sad_aligned", scope: !1051, file: !6, line: 75, baseType: !1054, size: 448, offset: 4288)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "var2_8x8", scope: !1051, file: !6, line: 76, baseType: !1081, size: 64, offset: 4736)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!47, !46, !47, !46, !47, !639}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1051, file: !6, line: 78, baseType: !1085, size: 256, offset: 4800)
!1085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1086, size: 256, elements: !461)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!670, !46, !47}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "hadamard_ac", scope: !1051, file: !6, line: 79, baseType: !1085, size: 256, offset: 5056)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_4x4x2_core", scope: !1051, file: !6, line: 81, baseType: !1091, size: 64, offset: 5312)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !452, !47, !452, !47, !1094}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 128, elements: !461)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "ssim_end4", scope: !1051, file: !6, line: 83, baseType: !1097, size: 64, offset: 5376)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!210, !1094, !1094, !47}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x3", scope: !1051, file: !6, line: 86, baseType: !1068, size: 448, offset: 5440)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "sad_x4", scope: !1051, file: !6, line: 87, baseType: !1074, size: 448, offset: 5888)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x3", scope: !1051, file: !6, line: 88, baseType: !1068, size: 448, offset: 6336)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "satd_x4", scope: !1051, file: !6, line: 89, baseType: !1074, size: 448, offset: 6784)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "ads", scope: !1051, file: !6, line: 93, baseType: !1105, size: 448, offset: 7232)
!1105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1106, size: 448, elements: !1031)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!47, !639, !484, !47, !484, !796, !47, !47}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_16x16", scope: !1051, file: !6, line: 98, baseType: !1110, size: 64, offset: 7680)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{null, !46, !46, !639}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_16x16", scope: !1051, file: !6, line: 99, baseType: !1110, size: 64, offset: 7744)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_16x16", scope: !1051, file: !6, line: 100, baseType: !1110, size: 64, offset: 7808)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8c", scope: !1051, file: !6, line: 101, baseType: !1110, size: 64, offset: 7872)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_8x8c", scope: !1051, file: !6, line: 102, baseType: !1110, size: 64, offset: 7936)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8c", scope: !1051, file: !6, line: 103, baseType: !1110, size: 64, offset: 8000)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_4x4", scope: !1051, file: !6, line: 104, baseType: !1110, size: 64, offset: 8064)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "intra_satd_x3_4x4", scope: !1051, file: !6, line: 105, baseType: !1110, size: 64, offset: 8128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_4x4", scope: !1051, file: !6, line: 106, baseType: !1110, size: 64, offset: 8192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "intra_mbcmp_x3_8x8", scope: !1051, file: !6, line: 107, baseType: !1110, size: 64, offset: 8256)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sa8d_x3_8x8", scope: !1051, file: !6, line: 108, baseType: !1110, size: 64, offset: 8320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "intra_sad_x3_8x8", scope: !1051, file: !6, line: 109, baseType: !1110, size: 64, offset: 8384)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !110, file: !111, line: 812, baseType: !1125, size: 2368, offset: 260928)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_mc_functions_t", file: !42, line: 111, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !42, line: 58, size: 2368, elements: !1127)
!1127 = !{!1128, !1134, !1138, !1142, !1149, !1154, !1155, !1157, !1161, !1162, !1166, !1174, !1178, !1182, !1183, !1187, !1191, !1195, !1196, !1197, !1198, !1203}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "mc_luma", scope: !1126, file: !42, line: 60, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{null, !46, !47, !1132, !47, !47, !47, !47, !47, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "get_ref", scope: !1126, file: !42, line: 65, baseType: !1135, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!46, !46, !639, !1132, !47, !47, !47, !47, !47, !1133}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mc_chroma", scope: !1126, file: !42, line: 71, baseType: !1139, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{null, !46, !47, !46, !47, !47, !47, !47, !47}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "avg", scope: !1126, file: !42, line: 75, baseType: !1143, size: 640, offset: 192)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1144, size: 640, elements: !1147)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !46, !47, !46, !47, !46, !47, !47}
!1147 = !{!1148}
!1148 = !DISubrange(count: 10)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !1126, file: !42, line: 78, baseType: !1150, size: 448, offset: 832)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1151, size: 448, elements: !1031)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !46, !47, !46, !47, !47}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "copy_16x16_unaligned", scope: !1126, file: !42, line: 79, baseType: !1151, size: 64, offset: 1280)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "plane_copy", scope: !1126, file: !42, line: 81, baseType: !1156, size: 64, offset: 1344)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "hpel_filter", scope: !1126, file: !42, line: 84, baseType: !1158, size: 64, offset: 1408)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{null, !46, !46, !46, !46, !47, !47, !47, !796}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_fenc", scope: !1126, file: !42, line: 88, baseType: !1151, size: 64, offset: 1472)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "prefetch_ref", scope: !1126, file: !42, line: 91, baseType: !1163, size: 64, offset: 1536)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !46, !47, !47}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_aligned", scope: !1126, file: !42, line: 93, baseType: !1167, size: 64, offset: 1600)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!174, !174, !1170, !1172}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1173, line: 18, baseType: !672)
!1173 = !DIFile(filename: "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h", directory: "/home/yjs/workspace", checksumkind: CSK_MD5, checksum: "2c44e821a2b1951cde2eb0fb2e656867")
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "memzero_aligned", scope: !1126, file: !42, line: 94, baseType: !1175, size: 64, offset: 1664)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{null, !174, !47}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init4h", scope: !1126, file: !42, line: 97, baseType: !1179, size: 64, offset: 1728)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{null, !484, !46, !47}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init8h", scope: !1126, file: !42, line: 98, baseType: !1179, size: 64, offset: 1792)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init4v", scope: !1126, file: !42, line: 99, baseType: !1184, size: 64, offset: 1856)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{null, !484, !484, !47}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "integral_init8v", scope: !1126, file: !42, line: 100, baseType: !1188, size: 64, offset: 1920)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{null, !484, !47}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "frame_init_lowres_core", scope: !1126, file: !42, line: 102, baseType: !1192, size: 64, offset: 1984)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{null, !46, !46, !46, !46, !46, !47, !47, !47, !47}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1126, file: !42, line: 104, baseType: !66, size: 64, offset: 2048)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "offsetadd", scope: !1126, file: !42, line: 105, baseType: !66, size: 64, offset: 2112)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "offsetsub", scope: !1126, file: !42, line: 106, baseType: !66, size: 64, offset: 2176)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "weight_cache", scope: !1126, file: !42, line: 107, baseType: !1199, size: 64, offset: 2240)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{null, !107, !1202}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "mbtree_propagate_cost", scope: !1126, file: !42, line: 109, baseType: !1204, size: 64, offset: 2304)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{null, !639, !484, !484, !484, !484, !47}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "dctf", scope: !110, file: !111, line: 813, baseType: !1208, size: 960, offset: 263296)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_dct_function_t", file: !1209, line: 115, baseType: !1210)
!1209 = !DIFile(filename: "x264_src/common/dct.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "d983c98245ed7221137d0c4902e9385f")
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 89, size: 960, elements: !1211)
!1211 = !{!1212, !1216, !1220, !1225, !1226, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1242, !1246, !1250}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sub4x4_dct", scope: !1210, file: !1209, line: 94, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !796, !46, !46}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "add4x4_idct", scope: !1210, file: !1209, line: 95, baseType: !1217, size: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{null, !46, !796}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct", scope: !1210, file: !1209, line: 97, baseType: !1221, size: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{null, !1224, !46, !46}
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct_dc", scope: !1210, file: !1209, line: 98, baseType: !1213, size: 64, offset: 192)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct", scope: !1210, file: !1209, line: 99, baseType: !1227, size: 64, offset: 256)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !46, !1224}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct_dc", scope: !1210, file: !1209, line: 100, baseType: !1217, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sub16x16_dct", scope: !1210, file: !1209, line: 102, baseType: !1221, size: 64, offset: 384)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct", scope: !1210, file: !1209, line: 103, baseType: !1227, size: 64, offset: 448)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct_dc", scope: !1210, file: !1209, line: 104, baseType: !1217, size: 64, offset: 512)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sub8x8_dct8", scope: !1210, file: !1209, line: 106, baseType: !1213, size: 64, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "add8x8_idct8", scope: !1210, file: !1209, line: 107, baseType: !1217, size: 64, offset: 640)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sub16x16_dct8", scope: !1210, file: !1209, line: 109, baseType: !1237, size: 64, offset: 704)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{null, !1240, !46, !46}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1024, elements: !167)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "add16x16_idct8", scope: !1210, file: !1209, line: 110, baseType: !1243, size: 64, offset: 768)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{null, !46, !1240}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dct4x4dc", scope: !1210, file: !1209, line: 112, baseType: !1247, size: 64, offset: 832)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{null, !796}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "idct4x4dc", scope: !1210, file: !1209, line: 113, baseType: !1247, size: 64, offset: 896)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "zigzagf", scope: !110, file: !111, line: 814, baseType: !1252, size: 384, offset: 264256)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_zigzag_function_t", file: !1209, line: 126, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 117, size: 384, elements: !1254)
!1254 = !{!1255, !1259, !1260, !1264, !1265, !1269}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "scan_8x8", scope: !1253, file: !1209, line: 119, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !796, !796}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "scan_4x4", scope: !1253, file: !1209, line: 120, baseType: !1256, size: 64, offset: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "sub_8x8", scope: !1253, file: !1209, line: 121, baseType: !1261, size: 64, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!47, !796, !452, !46}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "sub_4x4", scope: !1253, file: !1209, line: 122, baseType: !1261, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "sub_4x4ac", scope: !1253, file: !1209, line: 123, baseType: !1266, size: 64, offset: 256)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!47, !796, !452, !46, !796}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "interleave_8x8_cavlc", scope: !1253, file: !1209, line: 124, baseType: !1270, size: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !796, !796, !46}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "quantf", scope: !110, file: !111, line: 815, baseType: !1274, size: 1408, offset: 264640)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_quant_function_t", file: !1275, line: 44, baseType: !1276)
!1275 = !DIFile(filename: "x264_src/common/quant.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "d1558a6947b2031223cf5868b45335f7")
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 26, size: 1408, elements: !1277)
!1277 = !{!1278, !1282, !1283, !1287, !1288, !1292, !1296, !1297, !1302, !1306, !1307, !1308, !1310}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "quant_8x8", scope: !1276, file: !1275, line: 28, baseType: !1279, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!47, !796, !484, !484}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "quant_4x4", scope: !1276, file: !1275, line: 29, baseType: !1279, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "quant_4x4_dc", scope: !1276, file: !1275, line: 30, baseType: !1284, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!47, !796, !47, !47}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "quant_2x2_dc", scope: !1276, file: !1275, line: 31, baseType: !1284, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_8x8", scope: !1276, file: !1275, line: 33, baseType: !1289, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{null, !796, !465, !47}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_4x4", scope: !1276, file: !1275, line: 34, baseType: !1293, size: 64, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !796, !459, !47}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "dequant_4x4_dc", scope: !1276, file: !1275, line: 35, baseType: !1293, size: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "denoise_dct", scope: !1276, file: !1275, line: 37, baseType: !1298, size: 64, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !796, !1301, !484, !47}
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score15", scope: !1276, file: !1275, line: 39, baseType: !1303, size: 64, offset: 512)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!47, !796}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score16", scope: !1276, file: !1275, line: 40, baseType: !1303, size: 64, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "decimate_score64", scope: !1276, file: !1275, line: 41, baseType: !1303, size: 64, offset: 640)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_last", scope: !1276, file: !1275, line: 42, baseType: !1309, size: 384, offset: 704)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1303, size: 384, elements: !67)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "coeff_level_run", scope: !1276, file: !1275, line: 43, baseType: !1311, size: 320, offset: 1088)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1312, size: 320, elements: !979)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!47, !796, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_run_level_t", file: !310, line: 63, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 58, size: 416, elements: !1318)
!1318 = !{!1319, !1320, !1321}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1317, file: !310, line: 60, baseType: !47, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1317, file: !310, line: 61, baseType: !738, size: 256, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !1317, file: !310, line: 62, baseType: !161, size: 128, offset: 288)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "loopf", scope: !110, file: !111, line: 816, baseType: !1323, size: 576, offset: 266048)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_function_t", file: !567, line: 170, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 161, size: 576, elements: !1325)
!1325 = !{!1326, !1332, !1333, !1339, !1340}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_luma", scope: !1324, file: !567, line: 163, baseType: !1327, size: 128)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1328, size: 128, elements: !215)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_inter_t", file: !567, line: 159, baseType: !1329)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !46, !47, !47, !47, !619}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_chroma", scope: !1324, file: !567, line: 164, baseType: !1327, size: 128, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_luma_intra", scope: !1324, file: !567, line: 165, baseType: !1334, size: 128, offset: 256)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1335, size: 128, elements: !215)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_deblock_intra_t", file: !567, line: 160, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !46, !47, !47, !47}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_chroma_intra", scope: !1324, file: !567, line: 166, baseType: !1334, size: 128, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "deblock_strength", scope: !1324, file: !567, line: 167, baseType: !1341, size: 64, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !46, !1344, !1345, !1348, !47, !47}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1280, elements: !1347)
!1347 = !{!887, !216}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 128, elements: !1350)
!1350 = !{!462, !462}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !110, file: !111, line: 821, baseType: !1352, size: 64, offset: 266624)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_lookahead_t", file: !111, line: 377, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "x264_lookahead_t", file: !111, line: 366, size: 960, elements: !1355)
!1355 = !{!1356, !1358, !1359, !1360, !1361, !1362, !1363, !1373, !1374}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "b_exit_thread", scope: !1354, file: !111, line: 368, baseType: !1357, size: 8)
!1357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "b_thread_active", scope: !1354, file: !111, line: 369, baseType: !30, size: 8, offset: 8)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "b_analyse_keyframe", scope: !1354, file: !111, line: 370, baseType: !30, size: 8, offset: 16)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "i_last_keyframe", scope: !1354, file: !111, line: 371, baseType: !47, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "i_slicetype_length", scope: !1354, file: !111, line: 372, baseType: !47, size: 32, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "last_nonb", scope: !1354, file: !111, line: 373, baseType: !565, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "ifbuf", scope: !1354, file: !111, line: 374, baseType: !1364, size: 256, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "x264_synch_frame_list_t", file: !567, line: 157, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 149, size: 256, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1365, file: !567, line: 151, baseType: !564, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "i_max_size", scope: !1365, file: !567, line: 152, baseType: !47, size: 32, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1365, file: !567, line: 153, baseType: !47, size: 32, offset: 96)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1365, file: !567, line: 154, baseType: !47, size: 32, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "cv_fill", scope: !1365, file: !567, line: 155, baseType: !47, size: 32, offset: 160)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "cv_empty", scope: !1365, file: !567, line: 156, baseType: !47, size: 32, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1354, file: !111, line: 375, baseType: !1364, size: 256, offset: 448)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "ofbuf", scope: !1354, file: !111, line: 376, baseType: !1364, size: 256, offset: 704)
!1375 = !{!1376, !1377, !1378, !1379, !1380, !1381, !1382, !1384, !1386, !1389, !1391}
!1376 = !DILocalVariable(name: "h", arg: 1, scope: !104, file: !3, line: 356, type: !107)
!1377 = !DILocalVariable(name: "frame", arg: 2, scope: !104, file: !3, line: 356, type: !565)
!1378 = !DILocalVariable(name: "src", scope: !104, file: !3, line: 358, type: !46)
!1379 = !DILocalVariable(name: "i_stride", scope: !104, file: !3, line: 359, type: !47)
!1380 = !DILocalVariable(name: "i_height", scope: !104, file: !3, line: 360, type: !47)
!1381 = !DILocalVariable(name: "i_width", scope: !104, file: !3, line: 361, type: !47)
!1382 = !DILocalVariable(name: "y", scope: !1383, file: !3, line: 364, type: !47)
!1383 = distinct !DILexicalBlock(scope: !104, file: !3, line: 364, column: 5)
!1384 = !DILocalVariable(name: "y", scope: !1385, file: !3, line: 373, type: !47)
!1385 = distinct !DILexicalBlock(scope: !104, file: !3, line: 373, column: 5)
!1386 = !DILocalVariable(name: "x", scope: !1387, file: !3, line: 374, type: !47)
!1387 = distinct !DILexicalBlock(scope: !1388, file: !3, line: 374, column: 9)
!1388 = distinct !DILexicalBlock(scope: !1385, file: !3, line: 373, column: 5)
!1389 = !DILocalVariable(name: "y", scope: !1390, file: !3, line: 377, type: !47)
!1390 = distinct !DILexicalBlock(scope: !104, file: !3, line: 377, column: 5)
!1391 = !DILocalVariable(name: "x", scope: !1392, file: !3, line: 378, type: !47)
!1392 = distinct !DILexicalBlock(scope: !1393, file: !3, line: 378, column: 9)
!1393 = distinct !DILexicalBlock(scope: !1390, file: !3, line: 377, column: 5)
!1394 = !DILocation(line: 0, scope: !104)
!1395 = !DILocation(line: 358, column: 27, scope: !104)
!1396 = !DILocation(line: 358, column: 20, scope: !104)
!1397 = !DILocation(line: 359, column: 27, scope: !104)
!1398 = !DILocation(line: 359, column: 20, scope: !104)
!1399 = !DILocation(line: 360, column: 27, scope: !104)
!1400 = !DILocation(line: 360, column: 20, scope: !104)
!1401 = !DILocation(line: 361, column: 27, scope: !104)
!1402 = !DILocation(line: 361, column: 20, scope: !104)
!1403 = !DILocation(line: 0, scope: !1383)
!1404 = !DILocation(line: 364, column: 23, scope: !1405)
!1405 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 364, column: 5)
!1406 = !DILocation(line: 364, column: 5, scope: !1383)
!1407 = !DILocation(line: 365, column: 50, scope: !1405)
!1408 = !DILocation(line: 365, column: 35, scope: !1405)
!1409 = !DILocation(line: 365, column: 9, scope: !1405)
!1410 = !DILocation(line: 365, column: 33, scope: !1405)
!1411 = !DILocation(line: 364, column: 36, scope: !1405)
!1412 = distinct !{!1412, !1406, !1413}
!1413 = !DILocation(line: 365, column: 59, scope: !1383)
!1414 = distinct !{!1414, !100}
!1415 = distinct !{!1415, !100}
!1416 = !DILocation(line: 366, column: 25, scope: !104)
!1417 = !DILocation(line: 366, column: 16, scope: !104)
!1418 = !DILocation(line: 366, column: 58, scope: !104)
!1419 = !DILocation(line: 366, column: 48, scope: !104)
!1420 = !DILocation(line: 366, column: 39, scope: !104)
!1421 = !DILocation(line: 366, column: 70, scope: !104)
!1422 = !DILocation(line: 366, column: 63, scope: !104)
!1423 = !DILocation(line: 366, column: 5, scope: !104)
!1424 = !DILocation(line: 367, column: 11, scope: !104)
!1425 = !DILocation(line: 367, column: 47, scope: !104)
!1426 = !DILocation(line: 367, column: 40, scope: !104)
!1427 = !DILocation(line: 367, column: 58, scope: !104)
!1428 = !DILocation(line: 367, column: 76, scope: !104)
!1429 = !DILocation(line: 367, column: 94, scope: !104)
!1430 = !DILocation(line: 368, column: 52, scope: !104)
!1431 = !DILocation(line: 368, column: 76, scope: !104)
!1432 = !DILocation(line: 368, column: 99, scope: !104)
!1433 = !DILocation(line: 367, column: 5, scope: !104)
!1434 = !DILocation(line: 369, column: 5, scope: !104)
!1435 = !DILocation(line: 371, column: 20, scope: !104)
!1436 = !DILocation(line: 371, column: 5, scope: !104)
!1437 = !DILocation(line: 0, scope: !1385)
!1438 = !DILocation(line: 373, column: 34, scope: !1388)
!1439 = !DILocation(line: 373, column: 23, scope: !1388)
!1440 = !DILocation(line: 373, column: 5, scope: !1385)
!1441 = !DILocation(line: 0, scope: !1387)
!1442 = !DILocation(line: 374, column: 27, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1387, file: !3, line: 374, column: 9)
!1444 = !DILocation(line: 374, column: 9, scope: !1387)
!1445 = !DILocation(line: 0, scope: !1390)
!1446 = !DILocation(line: 378, column: 27, scope: !1447)
!1447 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 378, column: 9)
!1448 = !DILocation(line: 373, column: 49, scope: !1388)
!1449 = distinct !{!1449, !1440, !1450, !1451}
!1450 = !DILocation(line: 375, column: 44, scope: !1385)
!1451 = !{!"llvm.loop.unswitch.partial.disable"}
!1452 = !DILocation(line: 375, column: 13, scope: !1443)
!1453 = !DILocation(line: 375, column: 41, scope: !1443)
!1454 = !DILocation(line: 374, column: 53, scope: !1443)
!1455 = !DILocation(line: 374, column: 38, scope: !1443)
!1456 = distinct !{!1456, !1444, !1457}
!1457 = !DILocation(line: 375, column: 44, scope: !1387)
!1458 = !DILocation(line: 380, column: 1, scope: !104)
!1459 = !DILocation(line: 377, column: 27, scope: !1393)
!1460 = !DILocation(line: 0, scope: !1392)
!1461 = !DILocation(line: 377, column: 5, scope: !1390)
!1462 = distinct !{!1462, !1461, !1463, !1451}
!1463 = !DILocation(line: 379, column: 45, scope: !1390)
!1464 = !DILocation(line: 379, column: 13, scope: !1447)
!1465 = !DILocation(line: 379, column: 43, scope: !1447)
!1466 = !DILocation(line: 378, column: 50, scope: !1447)
!1467 = !DILocation(line: 378, column: 39, scope: !1447)
!1468 = !DILocation(line: 378, column: 9, scope: !1392)
!1469 = distinct !{!1469, !1468, !1470}
!1470 = !DILocation(line: 379, column: 45, scope: !1392)
!1471 = !DISubprogram(name: "x264_frame_expand_border_lowres", scope: !567, file: !567, line: 179, type: !1472, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !565}
!1474 = distinct !DISubprogram(name: "x264_mc_init", scope: !3, file: !3, line: 434, type: !1475, scopeLine: 435, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1478)
!1475 = !DISubroutineType(types: !1476)
!1476 = !{null, !47, !1477}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1478 = !{!1479, !1480}
!1479 = !DILocalVariable(name: "cpu", arg: 1, scope: !1474, file: !3, line: 434, type: !47)
!1480 = !DILocalVariable(name: "pf", arg: 2, scope: !1474, file: !3, line: 434, type: !1477)
!1481 = !DILocation(line: 0, scope: !1474)
!1482 = !DILocation(line: 436, column: 19, scope: !1474)
!1483 = !DILocation(line: 437, column: 9, scope: !1474)
!1484 = !DILocation(line: 437, column: 19, scope: !1474)
!1485 = !DILocation(line: 438, column: 9, scope: !1474)
!1486 = !DILocation(line: 438, column: 19, scope: !1474)
!1487 = !DILocation(line: 440, column: 9, scope: !1474)
!1488 = !DILocation(line: 440, column: 25, scope: !1474)
!1489 = !DILocation(line: 441, column: 5, scope: !1474)
!1490 = !DILocation(line: 441, column: 25, scope: !1474)
!1491 = !DILocation(line: 442, column: 5, scope: !1474)
!1492 = !DILocation(line: 442, column: 25, scope: !1474)
!1493 = !DILocation(line: 443, column: 5, scope: !1474)
!1494 = !DILocation(line: 443, column: 25, scope: !1474)
!1495 = !DILocation(line: 444, column: 5, scope: !1474)
!1496 = !DILocation(line: 444, column: 25, scope: !1474)
!1497 = !DILocation(line: 445, column: 5, scope: !1474)
!1498 = !DILocation(line: 445, column: 25, scope: !1474)
!1499 = !DILocation(line: 446, column: 5, scope: !1474)
!1500 = !DILocation(line: 446, column: 25, scope: !1474)
!1501 = !DILocation(line: 447, column: 5, scope: !1474)
!1502 = !DILocation(line: 447, column: 25, scope: !1474)
!1503 = !DILocation(line: 448, column: 5, scope: !1474)
!1504 = !DILocation(line: 448, column: 25, scope: !1474)
!1505 = !DILocation(line: 449, column: 5, scope: !1474)
!1506 = !DILocation(line: 449, column: 25, scope: !1474)
!1507 = !DILocation(line: 451, column: 9, scope: !1474)
!1508 = !DILocation(line: 451, column: 19, scope: !1474)
!1509 = !DILocation(line: 452, column: 9, scope: !1474)
!1510 = !DILocation(line: 452, column: 19, scope: !1474)
!1511 = !DILocation(line: 453, column: 9, scope: !1474)
!1512 = !DILocation(line: 453, column: 19, scope: !1474)
!1513 = !DILocation(line: 454, column: 9, scope: !1474)
!1514 = !DILocation(line: 454, column: 22, scope: !1474)
!1515 = !DILocation(line: 456, column: 9, scope: !1474)
!1516 = !DILocation(line: 456, column: 30, scope: !1474)
!1517 = !DILocation(line: 457, column: 9, scope: !1474)
!1518 = !DILocation(line: 457, column: 27, scope: !1474)
!1519 = !DILocation(line: 458, column: 5, scope: !1474)
!1520 = !DILocation(line: 458, column: 27, scope: !1474)
!1521 = !DILocation(line: 459, column: 5, scope: !1474)
!1522 = !DILocation(line: 459, column: 27, scope: !1474)
!1523 = !DILocation(line: 461, column: 9, scope: !1474)
!1524 = !DILocation(line: 461, column: 20, scope: !1474)
!1525 = !DILocation(line: 462, column: 9, scope: !1474)
!1526 = !DILocation(line: 462, column: 21, scope: !1474)
!1527 = !DILocation(line: 464, column: 9, scope: !1474)
!1528 = !DILocation(line: 464, column: 23, scope: !1474)
!1529 = !DILocation(line: 465, column: 9, scope: !1474)
!1530 = !DILocation(line: 465, column: 23, scope: !1474)
!1531 = !DILocation(line: 466, column: 9, scope: !1474)
!1532 = !DILocation(line: 466, column: 24, scope: !1474)
!1533 = !DILocation(line: 467, column: 9, scope: !1474)
!1534 = !DILocation(line: 467, column: 25, scope: !1474)
!1535 = !DILocation(line: 468, column: 9, scope: !1474)
!1536 = !DILocation(line: 468, column: 32, scope: !1474)
!1537 = !DILocation(line: 470, column: 9, scope: !1474)
!1538 = !DILocation(line: 470, column: 25, scope: !1474)
!1539 = !DILocation(line: 471, column: 9, scope: !1474)
!1540 = !DILocation(line: 471, column: 25, scope: !1474)
!1541 = !DILocation(line: 472, column: 9, scope: !1474)
!1542 = !DILocation(line: 472, column: 25, scope: !1474)
!1543 = !DILocation(line: 473, column: 9, scope: !1474)
!1544 = !DILocation(line: 473, column: 25, scope: !1474)
!1545 = !DILocation(line: 475, column: 9, scope: !1474)
!1546 = !DILocation(line: 475, column: 31, scope: !1474)
!1547 = !DILocation(line: 487, column: 1, scope: !1474)
!1548 = distinct !DISubprogram(name: "mc_luma", scope: !3, file: !3, line: 209, type: !1130, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1549)
!1549 = !{!1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562}
!1550 = !DILocalVariable(name: "dst", arg: 1, scope: !1548, file: !3, line: 209, type: !46)
!1551 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !1548, file: !3, line: 209, type: !47)
!1552 = !DILocalVariable(name: "src", arg: 3, scope: !1548, file: !3, line: 210, type: !1132)
!1553 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !1548, file: !3, line: 210, type: !47)
!1554 = !DILocalVariable(name: "mvx", arg: 5, scope: !1548, file: !3, line: 211, type: !47)
!1555 = !DILocalVariable(name: "mvy", arg: 6, scope: !1548, file: !3, line: 211, type: !47)
!1556 = !DILocalVariable(name: "i_width", arg: 7, scope: !1548, file: !3, line: 212, type: !47)
!1557 = !DILocalVariable(name: "i_height", arg: 8, scope: !1548, file: !3, line: 212, type: !47)
!1558 = !DILocalVariable(name: "weight", arg: 9, scope: !1548, file: !3, line: 212, type: !1133)
!1559 = !DILocalVariable(name: "qpel_idx", scope: !1548, file: !3, line: 214, type: !47)
!1560 = !DILocalVariable(name: "offset", scope: !1548, file: !3, line: 215, type: !47)
!1561 = !DILocalVariable(name: "src1", scope: !1548, file: !3, line: 216, type: !46)
!1562 = !DILocalVariable(name: "src2", scope: !1563, file: !3, line: 220, type: !46)
!1563 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 219, column: 5)
!1564 = distinct !DILexicalBlock(scope: !1548, file: !3, line: 218, column: 9)
!1565 = !DILocation(line: 0, scope: !1548)
!1566 = !DILocation(line: 214, column: 25, scope: !1548)
!1567 = !DILocation(line: 214, column: 28, scope: !1548)
!1568 = !DILocation(line: 214, column: 39, scope: !1548)
!1569 = !DILocation(line: 214, column: 33, scope: !1548)
!1570 = !DILocation(line: 215, column: 22, scope: !1548)
!1571 = !DILocation(line: 215, column: 26, scope: !1548)
!1572 = !DILocation(line: 215, column: 46, scope: !1548)
!1573 = !DILocation(line: 215, column: 40, scope: !1548)
!1574 = !DILocation(line: 216, column: 25, scope: !1548)
!1575 = !DILocation(line: 216, column: 21, scope: !1548)
!1576 = !DILocation(line: 216, column: 46, scope: !1548)
!1577 = !DILocation(line: 216, column: 66, scope: !1548)
!1578 = !DILocation(line: 216, column: 72, scope: !1548)
!1579 = !DILocation(line: 216, column: 55, scope: !1548)
!1580 = !DILocation(line: 218, column: 18, scope: !1564)
!1581 = !DILocation(line: 218, column: 9, scope: !1548)
!1582 = !DILocation(line: 220, column: 29, scope: !1563)
!1583 = !DILocation(line: 220, column: 25, scope: !1563)
!1584 = !DILocation(line: 220, column: 50, scope: !1563)
!1585 = !DILocation(line: 220, column: 70, scope: !1563)
!1586 = !DILocation(line: 220, column: 59, scope: !1563)
!1587 = !DILocation(line: 0, scope: !1563)
!1588 = !DILocalVariable(name: "dst", arg: 1, scope: !1589, file: !3, line: 37, type: !46)
!1589 = distinct !DISubprogram(name: "pixel_avg", scope: !3, file: !3, line: 37, type: !1590, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1592)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{null, !46, !47, !46, !47, !46, !47, !47, !47}
!1592 = !{!1588, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1602}
!1593 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !1589, file: !3, line: 37, type: !47)
!1594 = !DILocalVariable(name: "src1", arg: 3, scope: !1589, file: !3, line: 38, type: !46)
!1595 = !DILocalVariable(name: "i_src1_stride", arg: 4, scope: !1589, file: !3, line: 38, type: !47)
!1596 = !DILocalVariable(name: "src2", arg: 5, scope: !1589, file: !3, line: 39, type: !46)
!1597 = !DILocalVariable(name: "i_src2_stride", arg: 6, scope: !1589, file: !3, line: 39, type: !47)
!1598 = !DILocalVariable(name: "i_width", arg: 7, scope: !1589, file: !3, line: 40, type: !47)
!1599 = !DILocalVariable(name: "i_height", arg: 8, scope: !1589, file: !3, line: 40, type: !47)
!1600 = !DILocalVariable(name: "y", scope: !1601, file: !3, line: 42, type: !47)
!1601 = distinct !DILexicalBlock(scope: !1589, file: !3, line: 42, column: 5)
!1602 = !DILocalVariable(name: "x", scope: !1603, file: !3, line: 44, type: !47)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 44, column: 9)
!1604 = distinct !DILexicalBlock(scope: !1605, file: !3, line: 43, column: 5)
!1605 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 42, column: 5)
!1606 = !DILocation(line: 0, scope: !1589, inlinedAt: !1607)
!1607 = distinct !DILocation(line: 221, column: 9, scope: !1563)
!1608 = !DILocation(line: 0, scope: !1601, inlinedAt: !1607)
!1609 = !DILocation(line: 42, column: 23, scope: !1605, inlinedAt: !1607)
!1610 = !DILocation(line: 42, column: 5, scope: !1601, inlinedAt: !1607)
!1611 = !DILocation(line: 0, scope: !1603, inlinedAt: !1607)
!1612 = !DILocation(line: 44, column: 9, scope: !1603, inlinedAt: !1607)
!1613 = !DILocation(line: 44, column: 39, scope: !1614, inlinedAt: !1607)
!1614 = distinct !DILexicalBlock(scope: !1603, file: !3, line: 44, column: 9)
!1615 = !DILocation(line: 45, column: 24, scope: !1614, inlinedAt: !1607)
!1616 = !{!1617}
!1617 = distinct !{!1617, !1618}
!1618 = distinct !{!1618, !"LVerDomain"}
!1619 = !DILocation(line: 45, column: 34, scope: !1614, inlinedAt: !1607)
!1620 = !{!1621}
!1621 = distinct !{!1621, !1618}
!1622 = !DILocation(line: 45, column: 32, scope: !1614, inlinedAt: !1607)
!1623 = !DILocation(line: 45, column: 42, scope: !1614, inlinedAt: !1607)
!1624 = !DILocation(line: 45, column: 48, scope: !1614, inlinedAt: !1607)
!1625 = !DILocation(line: 45, column: 22, scope: !1614, inlinedAt: !1607)
!1626 = !DILocation(line: 45, column: 13, scope: !1614, inlinedAt: !1607)
!1627 = !DILocation(line: 45, column: 20, scope: !1614, inlinedAt: !1607)
!1628 = !{!1629}
!1629 = distinct !{!1629, !1618}
!1630 = !{!1617, !1621}
!1631 = distinct !{!1631, !1612, !1632, !1633, !1634}
!1632 = !DILocation(line: 45, column: 51, scope: !1603, inlinedAt: !1607)
!1633 = !{!"llvm.loop.isvectorized", i32 1}
!1634 = !{!"llvm.loop.unroll.runtime.disable"}
!1635 = !{!1636}
!1636 = distinct !{!1636, !1637}
!1637 = distinct !{!1637, !"LVerDomain"}
!1638 = !{!1639}
!1639 = distinct !{!1639, !1637}
!1640 = !{!1641}
!1641 = distinct !{!1641, !1637}
!1642 = !{!1636, !1639}
!1643 = distinct !{!1643, !1612, !1632, !1633, !1634}
!1644 = !DILocation(line: 44, column: 27, scope: !1614, inlinedAt: !1607)
!1645 = distinct !{!1645, !1612, !1632, !1633}
!1646 = !DILocation(line: 46, column: 14, scope: !1604, inlinedAt: !1607)
!1647 = !DILocation(line: 47, column: 14, scope: !1604, inlinedAt: !1607)
!1648 = !DILocation(line: 48, column: 14, scope: !1604, inlinedAt: !1607)
!1649 = !DILocation(line: 42, column: 36, scope: !1605, inlinedAt: !1607)
!1650 = distinct !{!1650, !1610, !1651}
!1651 = !DILocation(line: 49, column: 5, scope: !1601, inlinedAt: !1607)
!1652 = !DILocation(line: 223, column: 21, scope: !1653)
!1653 = distinct !DILexicalBlock(scope: !1563, file: !3, line: 223, column: 13)
!1654 = !DILocation(line: 223, column: 13, scope: !1653)
!1655 = !DILocation(line: 223, column: 13, scope: !1563)
!1656 = !DILocalVariable(name: "dst", arg: 1, scope: !1657, file: !3, line: 122, type: !46)
!1657 = distinct !DISubprogram(name: "mc_weight", scope: !3, file: !3, line: 122, type: !1658, scopeLine: 123, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1660)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{null, !46, !47, !46, !47, !1133, !47, !47}
!1660 = !{!1656, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1671, !1674, !1677}
!1661 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !1657, file: !3, line: 122, type: !47)
!1662 = !DILocalVariable(name: "src", arg: 3, scope: !1657, file: !3, line: 122, type: !46)
!1663 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !1657, file: !3, line: 122, type: !47)
!1664 = !DILocalVariable(name: "weight", arg: 5, scope: !1657, file: !3, line: 122, type: !1133)
!1665 = !DILocalVariable(name: "i_width", arg: 6, scope: !1657, file: !3, line: 122, type: !47)
!1666 = !DILocalVariable(name: "i_height", arg: 7, scope: !1657, file: !3, line: 122, type: !47)
!1667 = !DILocalVariable(name: "y", scope: !1668, file: !3, line: 126, type: !47)
!1668 = distinct !DILexicalBlock(scope: !1669, file: !3, line: 126, column: 9)
!1669 = distinct !DILexicalBlock(scope: !1670, file: !3, line: 125, column: 5)
!1670 = distinct !DILexicalBlock(scope: !1657, file: !3, line: 124, column: 9)
!1671 = !DILocalVariable(name: "x", scope: !1672, file: !3, line: 127, type: !47)
!1672 = distinct !DILexicalBlock(scope: !1673, file: !3, line: 127, column: 13)
!1673 = distinct !DILexicalBlock(scope: !1668, file: !3, line: 126, column: 9)
!1674 = !DILocalVariable(name: "y", scope: !1675, file: !3, line: 132, type: !47)
!1675 = distinct !DILexicalBlock(scope: !1676, file: !3, line: 132, column: 9)
!1676 = distinct !DILexicalBlock(scope: !1670, file: !3, line: 131, column: 5)
!1677 = !DILocalVariable(name: "x", scope: !1678, file: !3, line: 133, type: !47)
!1678 = distinct !DILexicalBlock(scope: !1679, file: !3, line: 133, column: 13)
!1679 = distinct !DILexicalBlock(scope: !1675, file: !3, line: 132, column: 9)
!1680 = !DILocation(line: 0, scope: !1657, inlinedAt: !1681)
!1681 = distinct !DILocation(line: 224, column: 13, scope: !1653)
!1682 = !DILocation(line: 124, column: 17, scope: !1670, inlinedAt: !1681)
!1683 = !DILocation(line: 124, column: 25, scope: !1670, inlinedAt: !1681)
!1684 = !DILocation(line: 124, column: 9, scope: !1657, inlinedAt: !1681)
!1685 = !DILocation(line: 0, scope: !1675, inlinedAt: !1681)
!1686 = !DILocation(line: 132, column: 9, scope: !1675, inlinedAt: !1681)
!1687 = !DILocation(line: 0, scope: !1678, inlinedAt: !1681)
!1688 = !DILocation(line: 133, column: 13, scope: !1678, inlinedAt: !1681)
!1689 = !{!1690}
!1690 = distinct !{!1690, !1691}
!1691 = distinct !{!1691, !"LVerDomain"}
!1692 = !DILocation(line: 133, column: 43, scope: !1693, inlinedAt: !1681)
!1693 = distinct !DILexicalBlock(scope: !1678, file: !3, line: 133, column: 13)
!1694 = !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1681)
!1695 = !{!1696}
!1696 = distinct !{!1696, !1691}
!1697 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1703)
!1698 = distinct !DISubprogram(name: "x264_clip_uint8", scope: !111, file: !111, line: 195, type: !1699, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1701)
!1699 = !DISubroutineType(types: !1700)
!1700 = !{!30, !47}
!1701 = !{!1702}
!1702 = !DILocalVariable(name: "x", arg: 1, scope: !1698, file: !111, line: 195, type: !47)
!1703 = distinct !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1681)
!1704 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1703)
!1705 = distinct !{!1705, !1688, !1706, !1633, !1634}
!1706 = !DILocation(line: 134, column: 17, scope: !1678, inlinedAt: !1681)
!1707 = !DILocation(line: 0, scope: !1698, inlinedAt: !1703)
!1708 = !DILocation(line: 133, column: 31, scope: !1693, inlinedAt: !1681)
!1709 = distinct !{!1709, !1688, !1706, !1633}
!1710 = !DILocation(line: 132, column: 40, scope: !1679, inlinedAt: !1681)
!1711 = !DILocation(line: 132, column: 48, scope: !1679, inlinedAt: !1681)
!1712 = !DILocation(line: 132, column: 27, scope: !1679, inlinedAt: !1681)
!1713 = distinct !{!1713, !1686, !1714}
!1714 = !DILocation(line: 134, column: 17, scope: !1675, inlinedAt: !1681)
!1715 = !DILocation(line: 0, scope: !1668, inlinedAt: !1681)
!1716 = !DILocation(line: 126, column: 9, scope: !1668, inlinedAt: !1681)
!1717 = !DILocation(line: 0, scope: !1672, inlinedAt: !1681)
!1718 = !DILocation(line: 127, column: 13, scope: !1672, inlinedAt: !1681)
!1719 = !{!1720}
!1720 = distinct !{!1720, !1721}
!1721 = distinct !{!1721, !"LVerDomain"}
!1722 = !DILocation(line: 127, column: 43, scope: !1723, inlinedAt: !1681)
!1723 = distinct !DILexicalBlock(scope: !1672, file: !3, line: 127, column: 13)
!1724 = !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1681)
!1725 = !{!1726}
!1726 = distinct !{!1726, !1721}
!1727 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1728)
!1728 = distinct !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1681)
!1729 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1728)
!1730 = distinct !{!1730, !1718, !1731, !1633, !1634}
!1731 = !DILocation(line: 128, column: 17, scope: !1672, inlinedAt: !1681)
!1732 = !DILocation(line: 0, scope: !1698, inlinedAt: !1728)
!1733 = !DILocation(line: 127, column: 31, scope: !1723, inlinedAt: !1681)
!1734 = distinct !{!1734, !1718, !1731, !1633}
!1735 = !DILocation(line: 126, column: 40, scope: !1673, inlinedAt: !1681)
!1736 = !DILocation(line: 126, column: 48, scope: !1673, inlinedAt: !1681)
!1737 = !DILocation(line: 126, column: 27, scope: !1673, inlinedAt: !1681)
!1738 = distinct !{!1738, !1716, !1739}
!1739 = !DILocation(line: 128, column: 17, scope: !1668, inlinedAt: !1681)
!1740 = !DILocation(line: 226, column: 22, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1564, file: !3, line: 226, column: 14)
!1742 = !DILocation(line: 226, column: 14, scope: !1741)
!1743 = !DILocation(line: 226, column: 14, scope: !1564)
!1744 = !DILocation(line: 0, scope: !1657, inlinedAt: !1745)
!1745 = distinct !DILocation(line: 227, column: 9, scope: !1741)
!1746 = !DILocation(line: 124, column: 17, scope: !1670, inlinedAt: !1745)
!1747 = !DILocation(line: 124, column: 25, scope: !1670, inlinedAt: !1745)
!1748 = !DILocation(line: 0, scope: !1670, inlinedAt: !1745)
!1749 = !DILocation(line: 124, column: 9, scope: !1657, inlinedAt: !1745)
!1750 = !DILocation(line: 0, scope: !1675, inlinedAt: !1745)
!1751 = !DILocation(line: 132, column: 9, scope: !1675, inlinedAt: !1745)
!1752 = !DILocation(line: 0, scope: !1678, inlinedAt: !1745)
!1753 = !DILocation(line: 133, column: 13, scope: !1678, inlinedAt: !1745)
!1754 = !{!1755}
!1755 = distinct !{!1755, !1756}
!1756 = distinct !{!1756, !"LVerDomain"}
!1757 = !DILocation(line: 133, column: 43, scope: !1693, inlinedAt: !1745)
!1758 = !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1745)
!1759 = !{!1760}
!1760 = distinct !{!1760, !1756}
!1761 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1762)
!1762 = distinct !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1745)
!1763 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1762)
!1764 = !{!1765}
!1765 = distinct !{!1765, !1756}
!1766 = !{!1760, !1755}
!1767 = distinct !{!1767, !1753, !1768, !1633, !1634}
!1768 = !DILocation(line: 134, column: 17, scope: !1678, inlinedAt: !1745)
!1769 = !DILocation(line: 0, scope: !1698, inlinedAt: !1762)
!1770 = !DILocation(line: 133, column: 31, scope: !1693, inlinedAt: !1745)
!1771 = distinct !{!1771, !1753, !1768, !1633}
!1772 = !DILocation(line: 132, column: 40, scope: !1679, inlinedAt: !1745)
!1773 = !DILocation(line: 132, column: 48, scope: !1679, inlinedAt: !1745)
!1774 = !DILocation(line: 132, column: 69, scope: !1679, inlinedAt: !1745)
!1775 = !DILocation(line: 132, column: 27, scope: !1679, inlinedAt: !1745)
!1776 = distinct !{!1776, !1751, !1777}
!1777 = !DILocation(line: 134, column: 17, scope: !1675, inlinedAt: !1745)
!1778 = !DILocation(line: 0, scope: !1668, inlinedAt: !1745)
!1779 = !DILocation(line: 126, column: 9, scope: !1668, inlinedAt: !1745)
!1780 = !DILocation(line: 0, scope: !1672, inlinedAt: !1745)
!1781 = !DILocation(line: 127, column: 13, scope: !1672, inlinedAt: !1745)
!1782 = !{!1783}
!1783 = distinct !{!1783, !1784}
!1784 = distinct !{!1784, !"LVerDomain"}
!1785 = !DILocation(line: 127, column: 43, scope: !1723, inlinedAt: !1745)
!1786 = !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1745)
!1787 = !{!1788}
!1788 = distinct !{!1788, !1784}
!1789 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1790)
!1790 = distinct !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1745)
!1791 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1790)
!1792 = !{!1793}
!1793 = distinct !{!1793, !1784}
!1794 = !{!1788, !1783}
!1795 = distinct !{!1795, !1781, !1796, !1633, !1634}
!1796 = !DILocation(line: 128, column: 17, scope: !1672, inlinedAt: !1745)
!1797 = !DILocation(line: 0, scope: !1698, inlinedAt: !1790)
!1798 = !DILocation(line: 127, column: 31, scope: !1723, inlinedAt: !1745)
!1799 = distinct !{!1799, !1781, !1796, !1633}
!1800 = !DILocation(line: 126, column: 40, scope: !1673, inlinedAt: !1745)
!1801 = !DILocation(line: 126, column: 48, scope: !1673, inlinedAt: !1745)
!1802 = !DILocation(line: 126, column: 69, scope: !1673, inlinedAt: !1745)
!1803 = !DILocation(line: 126, column: 27, scope: !1673, inlinedAt: !1745)
!1804 = distinct !{!1804, !1779, !1805}
!1805 = !DILocation(line: 128, column: 17, scope: !1668, inlinedAt: !1745)
!1806 = !DILocalVariable(name: "src", arg: 1, scope: !1807, file: !3, line: 172, type: !46)
!1807 = distinct !DISubprogram(name: "mc_copy", scope: !3, file: !3, line: 172, type: !83, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1808)
!1808 = !{!1806, !1809, !1810, !1811, !1812, !1813, !1814}
!1809 = !DILocalVariable(name: "i_src_stride", arg: 2, scope: !1807, file: !3, line: 172, type: !47)
!1810 = !DILocalVariable(name: "dst", arg: 3, scope: !1807, file: !3, line: 172, type: !46)
!1811 = !DILocalVariable(name: "i_dst_stride", arg: 4, scope: !1807, file: !3, line: 172, type: !47)
!1812 = !DILocalVariable(name: "i_width", arg: 5, scope: !1807, file: !3, line: 172, type: !47)
!1813 = !DILocalVariable(name: "i_height", arg: 6, scope: !1807, file: !3, line: 172, type: !47)
!1814 = !DILocalVariable(name: "y", scope: !1815, file: !3, line: 174, type: !47)
!1815 = distinct !DILexicalBlock(scope: !1807, file: !3, line: 174, column: 5)
!1816 = !DILocation(line: 0, scope: !1807, inlinedAt: !1817)
!1817 = distinct !DILocation(line: 229, column: 9, scope: !1741)
!1818 = !DILocation(line: 0, scope: !1815, inlinedAt: !1817)
!1819 = !DILocation(line: 174, column: 23, scope: !1820, inlinedAt: !1817)
!1820 = distinct !DILexicalBlock(scope: !1815, file: !3, line: 174, column: 5)
!1821 = !DILocation(line: 174, column: 5, scope: !1815, inlinedAt: !1817)
!1822 = !DILocation(line: 176, column: 9, scope: !1823, inlinedAt: !1817)
!1823 = distinct !DILexicalBlock(scope: !1820, file: !3, line: 175, column: 5)
!1824 = !DILocation(line: 178, column: 13, scope: !1823, inlinedAt: !1817)
!1825 = !DILocation(line: 179, column: 13, scope: !1823, inlinedAt: !1817)
!1826 = distinct !{!1826, !1821, !1827}
!1827 = !DILocation(line: 180, column: 5, scope: !1815, inlinedAt: !1817)
!1828 = distinct !{!1828, !100}
!1829 = !DILocation(line: 230, column: 1, scope: !1548)
!1830 = distinct !DISubprogram(name: "get_ref", scope: !3, file: !3, line: 232, type: !1136, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1831)
!1831 = !{!1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844}
!1832 = !DILocalVariable(name: "dst", arg: 1, scope: !1830, file: !3, line: 232, type: !46)
!1833 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !1830, file: !3, line: 232, type: !639)
!1834 = !DILocalVariable(name: "src", arg: 3, scope: !1830, file: !3, line: 233, type: !1132)
!1835 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !1830, file: !3, line: 233, type: !47)
!1836 = !DILocalVariable(name: "mvx", arg: 5, scope: !1830, file: !3, line: 234, type: !47)
!1837 = !DILocalVariable(name: "mvy", arg: 6, scope: !1830, file: !3, line: 234, type: !47)
!1838 = !DILocalVariable(name: "i_width", arg: 7, scope: !1830, file: !3, line: 235, type: !47)
!1839 = !DILocalVariable(name: "i_height", arg: 8, scope: !1830, file: !3, line: 235, type: !47)
!1840 = !DILocalVariable(name: "weight", arg: 9, scope: !1830, file: !3, line: 235, type: !1133)
!1841 = !DILocalVariable(name: "qpel_idx", scope: !1830, file: !3, line: 237, type: !47)
!1842 = !DILocalVariable(name: "offset", scope: !1830, file: !3, line: 238, type: !47)
!1843 = !DILocalVariable(name: "src1", scope: !1830, file: !3, line: 239, type: !46)
!1844 = !DILocalVariable(name: "src2", scope: !1845, file: !3, line: 243, type: !46)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 242, column: 5)
!1846 = distinct !DILexicalBlock(scope: !1830, file: !3, line: 241, column: 9)
!1847 = !DILocation(line: 0, scope: !1830)
!1848 = !DILocation(line: 237, column: 25, scope: !1830)
!1849 = !DILocation(line: 237, column: 28, scope: !1830)
!1850 = !DILocation(line: 237, column: 39, scope: !1830)
!1851 = !DILocation(line: 237, column: 33, scope: !1830)
!1852 = !DILocation(line: 238, column: 22, scope: !1830)
!1853 = !DILocation(line: 238, column: 26, scope: !1830)
!1854 = !DILocation(line: 238, column: 46, scope: !1830)
!1855 = !DILocation(line: 238, column: 40, scope: !1830)
!1856 = !DILocation(line: 239, column: 25, scope: !1830)
!1857 = !DILocation(line: 239, column: 21, scope: !1830)
!1858 = !DILocation(line: 239, column: 46, scope: !1830)
!1859 = !DILocation(line: 239, column: 66, scope: !1830)
!1860 = !DILocation(line: 239, column: 72, scope: !1830)
!1861 = !DILocation(line: 239, column: 55, scope: !1830)
!1862 = !DILocation(line: 241, column: 18, scope: !1846)
!1863 = !DILocation(line: 241, column: 9, scope: !1830)
!1864 = !DILocation(line: 243, column: 29, scope: !1845)
!1865 = !DILocation(line: 243, column: 25, scope: !1845)
!1866 = !DILocation(line: 243, column: 50, scope: !1845)
!1867 = !DILocation(line: 243, column: 70, scope: !1845)
!1868 = !DILocation(line: 243, column: 59, scope: !1845)
!1869 = !DILocation(line: 0, scope: !1845)
!1870 = !DILocation(line: 0, scope: !1589, inlinedAt: !1871)
!1871 = distinct !DILocation(line: 244, column: 9, scope: !1845)
!1872 = !DILocation(line: 0, scope: !1601, inlinedAt: !1871)
!1873 = !DILocation(line: 42, column: 23, scope: !1605, inlinedAt: !1871)
!1874 = !DILocation(line: 42, column: 5, scope: !1601, inlinedAt: !1871)
!1875 = !DILocation(line: 244, column: 25, scope: !1845)
!1876 = !DILocation(line: 0, scope: !1603, inlinedAt: !1871)
!1877 = !DILocation(line: 44, column: 9, scope: !1603, inlinedAt: !1871)
!1878 = !DILocation(line: 44, column: 39, scope: !1614, inlinedAt: !1871)
!1879 = !DILocation(line: 45, column: 24, scope: !1614, inlinedAt: !1871)
!1880 = !{!1881}
!1881 = distinct !{!1881, !1882}
!1882 = distinct !{!1882, !"LVerDomain"}
!1883 = !DILocation(line: 45, column: 34, scope: !1614, inlinedAt: !1871)
!1884 = !{!1885}
!1885 = distinct !{!1885, !1882}
!1886 = !DILocation(line: 45, column: 32, scope: !1614, inlinedAt: !1871)
!1887 = !DILocation(line: 45, column: 42, scope: !1614, inlinedAt: !1871)
!1888 = !DILocation(line: 45, column: 48, scope: !1614, inlinedAt: !1871)
!1889 = !DILocation(line: 45, column: 22, scope: !1614, inlinedAt: !1871)
!1890 = !DILocation(line: 45, column: 13, scope: !1614, inlinedAt: !1871)
!1891 = !DILocation(line: 45, column: 20, scope: !1614, inlinedAt: !1871)
!1892 = !{!1893}
!1893 = distinct !{!1893, !1882}
!1894 = !{!1881, !1885}
!1895 = distinct !{!1895, !1877, !1896, !1633, !1634}
!1896 = !DILocation(line: 45, column: 51, scope: !1603, inlinedAt: !1871)
!1897 = !{!1898}
!1898 = distinct !{!1898, !1899}
!1899 = distinct !{!1899, !"LVerDomain"}
!1900 = !{!1901}
!1901 = distinct !{!1901, !1899}
!1902 = !{!1903}
!1903 = distinct !{!1903, !1899}
!1904 = !{!1898, !1901}
!1905 = distinct !{!1905, !1877, !1896, !1633, !1634}
!1906 = !DILocation(line: 44, column: 27, scope: !1614, inlinedAt: !1871)
!1907 = distinct !{!1907, !1877, !1896, !1633}
!1908 = !DILocation(line: 46, column: 14, scope: !1604, inlinedAt: !1871)
!1909 = !DILocation(line: 47, column: 14, scope: !1604, inlinedAt: !1871)
!1910 = !DILocation(line: 48, column: 14, scope: !1604, inlinedAt: !1871)
!1911 = !DILocation(line: 42, column: 36, scope: !1605, inlinedAt: !1871)
!1912 = distinct !{!1912, !1874, !1913}
!1913 = !DILocation(line: 49, column: 5, scope: !1601, inlinedAt: !1871)
!1914 = !DILocation(line: 246, column: 21, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1845, file: !3, line: 246, column: 13)
!1916 = !DILocation(line: 246, column: 13, scope: !1915)
!1917 = !DILocation(line: 246, column: 13, scope: !1845)
!1918 = !DILocation(line: 247, column: 29, scope: !1915)
!1919 = !DILocation(line: 0, scope: !1657, inlinedAt: !1920)
!1920 = distinct !DILocation(line: 247, column: 13, scope: !1915)
!1921 = !DILocation(line: 124, column: 17, scope: !1670, inlinedAt: !1920)
!1922 = !DILocation(line: 124, column: 25, scope: !1670, inlinedAt: !1920)
!1923 = !DILocation(line: 124, column: 9, scope: !1657, inlinedAt: !1920)
!1924 = !DILocation(line: 0, scope: !1675, inlinedAt: !1920)
!1925 = !DILocation(line: 132, column: 9, scope: !1675, inlinedAt: !1920)
!1926 = !DILocation(line: 0, scope: !1678, inlinedAt: !1920)
!1927 = !DILocation(line: 133, column: 13, scope: !1678, inlinedAt: !1920)
!1928 = !{!1929}
!1929 = distinct !{!1929, !1930}
!1930 = distinct !{!1930, !"LVerDomain"}
!1931 = !DILocation(line: 133, column: 43, scope: !1693, inlinedAt: !1920)
!1932 = !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1920)
!1933 = !{!1934}
!1934 = distinct !{!1934, !1930}
!1935 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1936)
!1936 = distinct !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1920)
!1937 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1936)
!1938 = distinct !{!1938, !1927, !1939, !1633, !1634}
!1939 = !DILocation(line: 134, column: 17, scope: !1678, inlinedAt: !1920)
!1940 = !DILocation(line: 0, scope: !1698, inlinedAt: !1936)
!1941 = !DILocation(line: 133, column: 31, scope: !1693, inlinedAt: !1920)
!1942 = distinct !{!1942, !1927, !1939, !1633}
!1943 = !DILocation(line: 132, column: 40, scope: !1679, inlinedAt: !1920)
!1944 = !DILocation(line: 132, column: 48, scope: !1679, inlinedAt: !1920)
!1945 = !DILocation(line: 132, column: 27, scope: !1679, inlinedAt: !1920)
!1946 = distinct !{!1946, !1925, !1947}
!1947 = !DILocation(line: 134, column: 17, scope: !1675, inlinedAt: !1920)
!1948 = !DILocation(line: 0, scope: !1668, inlinedAt: !1920)
!1949 = !DILocation(line: 126, column: 9, scope: !1668, inlinedAt: !1920)
!1950 = !DILocation(line: 0, scope: !1672, inlinedAt: !1920)
!1951 = !DILocation(line: 127, column: 13, scope: !1672, inlinedAt: !1920)
!1952 = !{!1953}
!1953 = distinct !{!1953, !1954}
!1954 = distinct !{!1954, !"LVerDomain"}
!1955 = !DILocation(line: 127, column: 43, scope: !1723, inlinedAt: !1920)
!1956 = !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1920)
!1957 = !{!1958}
!1958 = distinct !{!1958, !1954}
!1959 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1960)
!1960 = distinct !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1920)
!1961 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1960)
!1962 = distinct !{!1962, !1951, !1963, !1633, !1634}
!1963 = !DILocation(line: 128, column: 17, scope: !1672, inlinedAt: !1920)
!1964 = !DILocation(line: 0, scope: !1698, inlinedAt: !1960)
!1965 = !DILocation(line: 127, column: 31, scope: !1723, inlinedAt: !1920)
!1966 = distinct !{!1966, !1951, !1963, !1633}
!1967 = !DILocation(line: 126, column: 40, scope: !1673, inlinedAt: !1920)
!1968 = !DILocation(line: 126, column: 48, scope: !1673, inlinedAt: !1920)
!1969 = !DILocation(line: 126, column: 27, scope: !1673, inlinedAt: !1920)
!1970 = distinct !{!1970, !1949, !1971}
!1971 = !DILocation(line: 128, column: 17, scope: !1668, inlinedAt: !1920)
!1972 = !DILocation(line: 250, column: 22, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 250, column: 14)
!1974 = !DILocation(line: 250, column: 14, scope: !1973)
!1975 = !DILocation(line: 250, column: 14, scope: !1846)
!1976 = !DILocation(line: 252, column: 25, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 251, column: 5)
!1978 = !DILocation(line: 0, scope: !1657, inlinedAt: !1979)
!1979 = distinct !DILocation(line: 252, column: 9, scope: !1977)
!1980 = !DILocation(line: 124, column: 17, scope: !1670, inlinedAt: !1979)
!1981 = !DILocation(line: 124, column: 25, scope: !1670, inlinedAt: !1979)
!1982 = !DILocation(line: 0, scope: !1670, inlinedAt: !1979)
!1983 = !DILocation(line: 124, column: 9, scope: !1657, inlinedAt: !1979)
!1984 = !DILocation(line: 0, scope: !1675, inlinedAt: !1979)
!1985 = !DILocation(line: 132, column: 9, scope: !1675, inlinedAt: !1979)
!1986 = !DILocation(line: 0, scope: !1678, inlinedAt: !1979)
!1987 = !DILocation(line: 133, column: 13, scope: !1678, inlinedAt: !1979)
!1988 = !{!1989}
!1989 = distinct !{!1989, !1990}
!1990 = distinct !{!1990, !"LVerDomain"}
!1991 = !DILocation(line: 133, column: 43, scope: !1693, inlinedAt: !1979)
!1992 = !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1979)
!1993 = !{!1994}
!1994 = distinct !{!1994, !1990}
!1995 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !1996)
!1996 = distinct !DILocation(line: 134, column: 17, scope: !1693, inlinedAt: !1979)
!1997 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !1996)
!1998 = !{!1999}
!1999 = distinct !{!1999, !1990}
!2000 = !{!1994, !1989}
!2001 = distinct !{!2001, !1987, !2002, !1633, !1634}
!2002 = !DILocation(line: 134, column: 17, scope: !1678, inlinedAt: !1979)
!2003 = !DILocation(line: 0, scope: !1698, inlinedAt: !1996)
!2004 = !DILocation(line: 133, column: 31, scope: !1693, inlinedAt: !1979)
!2005 = distinct !{!2005, !1987, !2002, !1633}
!2006 = !DILocation(line: 132, column: 40, scope: !1679, inlinedAt: !1979)
!2007 = !DILocation(line: 132, column: 48, scope: !1679, inlinedAt: !1979)
!2008 = !DILocation(line: 132, column: 69, scope: !1679, inlinedAt: !1979)
!2009 = !DILocation(line: 132, column: 27, scope: !1679, inlinedAt: !1979)
!2010 = distinct !{!2010, !1985, !2011}
!2011 = !DILocation(line: 134, column: 17, scope: !1675, inlinedAt: !1979)
!2012 = !DILocation(line: 0, scope: !1668, inlinedAt: !1979)
!2013 = !DILocation(line: 126, column: 9, scope: !1668, inlinedAt: !1979)
!2014 = !DILocation(line: 0, scope: !1672, inlinedAt: !1979)
!2015 = !DILocation(line: 127, column: 13, scope: !1672, inlinedAt: !1979)
!2016 = !{!2017}
!2017 = distinct !{!2017, !2018}
!2018 = distinct !{!2018, !"LVerDomain"}
!2019 = !DILocation(line: 127, column: 43, scope: !1723, inlinedAt: !1979)
!2020 = !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1979)
!2021 = !{!2022}
!2022 = distinct !{!2022, !2018}
!2023 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2024)
!2024 = distinct !DILocation(line: 128, column: 17, scope: !1723, inlinedAt: !1979)
!2025 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2024)
!2026 = !{!2027}
!2027 = distinct !{!2027, !2018}
!2028 = !{!2022, !2017}
!2029 = distinct !{!2029, !2015, !2030, !1633, !1634}
!2030 = !DILocation(line: 128, column: 17, scope: !1672, inlinedAt: !1979)
!2031 = !DILocation(line: 0, scope: !1698, inlinedAt: !2024)
!2032 = !DILocation(line: 127, column: 31, scope: !1723, inlinedAt: !1979)
!2033 = distinct !{!2033, !2015, !2030, !1633}
!2034 = !DILocation(line: 126, column: 40, scope: !1673, inlinedAt: !1979)
!2035 = !DILocation(line: 126, column: 48, scope: !1673, inlinedAt: !1979)
!2036 = !DILocation(line: 126, column: 69, scope: !1673, inlinedAt: !1979)
!2037 = !DILocation(line: 126, column: 27, scope: !1673, inlinedAt: !1979)
!2038 = distinct !{!2038, !2013, !2039}
!2039 = !DILocation(line: 128, column: 17, scope: !1668, inlinedAt: !1979)
!2040 = !DILocation(line: 257, column: 23, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !1973, file: !3, line: 256, column: 5)
!2042 = !DILocation(line: 258, column: 9, scope: !2041)
!2043 = !DILocation(line: 0, scope: !1846)
!2044 = !DILocation(line: 260, column: 1, scope: !1830)
!2045 = distinct !DISubprogram(name: "mc_chroma", scope: !3, file: !3, line: 263, type: !1140, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2064}
!2047 = !DILocalVariable(name: "dst", arg: 1, scope: !2045, file: !3, line: 263, type: !46)
!2048 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !2045, file: !3, line: 263, type: !47)
!2049 = !DILocalVariable(name: "src", arg: 3, scope: !2045, file: !3, line: 264, type: !46)
!2050 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !2045, file: !3, line: 264, type: !47)
!2051 = !DILocalVariable(name: "mvx", arg: 5, scope: !2045, file: !3, line: 265, type: !47)
!2052 = !DILocalVariable(name: "mvy", arg: 6, scope: !2045, file: !3, line: 265, type: !47)
!2053 = !DILocalVariable(name: "i_width", arg: 7, scope: !2045, file: !3, line: 266, type: !47)
!2054 = !DILocalVariable(name: "i_height", arg: 8, scope: !2045, file: !3, line: 266, type: !47)
!2055 = !DILocalVariable(name: "srcp", scope: !2045, file: !3, line: 268, type: !46)
!2056 = !DILocalVariable(name: "d8x", scope: !2045, file: !3, line: 270, type: !47)
!2057 = !DILocalVariable(name: "d8y", scope: !2045, file: !3, line: 271, type: !47)
!2058 = !DILocalVariable(name: "cA", scope: !2045, file: !3, line: 272, type: !47)
!2059 = !DILocalVariable(name: "cB", scope: !2045, file: !3, line: 273, type: !47)
!2060 = !DILocalVariable(name: "cC", scope: !2045, file: !3, line: 274, type: !47)
!2061 = !DILocalVariable(name: "cD", scope: !2045, file: !3, line: 275, type: !47)
!2062 = !DILocalVariable(name: "y", scope: !2063, file: !3, line: 280, type: !47)
!2063 = distinct !DILexicalBlock(scope: !2045, file: !3, line: 280, column: 5)
!2064 = !DILocalVariable(name: "x", scope: !2065, file: !3, line: 282, type: !47)
!2065 = distinct !DILexicalBlock(scope: !2066, file: !3, line: 282, column: 9)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !3, line: 281, column: 5)
!2067 = distinct !DILexicalBlock(scope: !2063, file: !3, line: 280, column: 5)
!2068 = !DILocation(line: 0, scope: !2045)
!2069 = !DILocation(line: 278, column: 13, scope: !2045)
!2070 = !DILocation(line: 0, scope: !2063)
!2071 = !DILocation(line: 280, column: 23, scope: !2067)
!2072 = !DILocation(line: 280, column: 5, scope: !2063)
!2073 = !DILocation(line: 271, column: 18, scope: !2045)
!2074 = !DILocation(line: 272, column: 24, scope: !2045)
!2075 = !DILocation(line: 270, column: 18, scope: !2045)
!2076 = !DILocation(line: 272, column: 16, scope: !2045)
!2077 = !DILocation(line: 277, column: 17, scope: !2045)
!2078 = !DILocation(line: 277, column: 23, scope: !2045)
!2079 = !DILocation(line: 277, column: 45, scope: !2045)
!2080 = !DILocation(line: 277, column: 38, scope: !2045)
!2081 = !DILocation(line: 277, column: 9, scope: !2045)
!2082 = !DILocation(line: 0, scope: !2065)
!2083 = !DILocation(line: 282, column: 9, scope: !2065)
!2084 = !DILocation(line: 283, column: 45, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2065, file: !3, line: 282, column: 9)
!2086 = !DILocation(line: 283, column: 27, scope: !2085)
!2087 = !{!2088}
!2088 = distinct !{!2088, !2089}
!2089 = distinct !{!2089, !"LVerDomain"}
!2090 = !DILocation(line: 283, column: 40, scope: !2085)
!2091 = !DILocation(line: 283, column: 54, scope: !2085)
!2092 = !{!2093}
!2093 = distinct !{!2093, !2089}
!2094 = !DILocation(line: 283, column: 67, scope: !2085)
!2095 = !DILocation(line: 283, column: 62, scope: !2085)
!2096 = !DILocation(line: 283, column: 77, scope: !2085)
!2097 = !DILocation(line: 283, column: 84, scope: !2085)
!2098 = !DILocation(line: 283, column: 22, scope: !2085)
!2099 = !DILocation(line: 283, column: 13, scope: !2085)
!2100 = !DILocation(line: 283, column: 20, scope: !2085)
!2101 = !{!2102}
!2102 = distinct !{!2102, !2089}
!2103 = !{!2093, !2088}
!2104 = distinct !{!2104, !2083, !2105, !1633, !1634}
!2105 = !DILocation(line: 283, column: 87, scope: !2065)
!2106 = !{!2107}
!2107 = distinct !{!2107, !2108}
!2108 = distinct !{!2108, !"LVerDomain"}
!2109 = !{!2110}
!2110 = distinct !{!2110, !2108}
!2111 = !{!2112}
!2112 = distinct !{!2112, !2108}
!2113 = !{!2110, !2107}
!2114 = distinct !{!2114, !2083, !2105, !1633, !1634}
!2115 = !DILocation(line: 282, column: 27, scope: !2085)
!2116 = distinct !{!2116, !2083, !2105, !1633}
!2117 = !DILocation(line: 284, column: 14, scope: !2066)
!2118 = !DILocation(line: 280, column: 36, scope: !2067)
!2119 = distinct !{!2119, !2072, !2120}
!2120 = !DILocation(line: 287, column: 5, scope: !2063)
!2121 = !DILocation(line: 288, column: 1, scope: !2045)
!2122 = distinct !DISubprogram(name: "pixel_avg_16x16", scope: !3, file: !3, line: 105, type: !1145, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2123)
!2123 = !{!2124, !2125, !2126, !2127, !2128, !2129, !2130}
!2124 = !DILocalVariable(name: "pix1", arg: 1, scope: !2122, file: !3, line: 105, type: !46)
!2125 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2122, file: !3, line: 105, type: !47)
!2126 = !DILocalVariable(name: "pix2", arg: 3, scope: !2122, file: !3, line: 105, type: !46)
!2127 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2122, file: !3, line: 105, type: !47)
!2128 = !DILocalVariable(name: "pix3", arg: 5, scope: !2122, file: !3, line: 105, type: !46)
!2129 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2122, file: !3, line: 105, type: !47)
!2130 = !DILocalVariable(name: "weight", arg: 7, scope: !2122, file: !3, line: 105, type: !47)
!2131 = !DILocation(line: 0, scope: !2122)
!2132 = !DILocation(line: 105, column: 1, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2122, file: !3, line: 105, column: 1)
!2134 = !DILocation(line: 105, column: 1, scope: !2122)
!2135 = !DILocalVariable(name: "dst", arg: 1, scope: !2136, file: !3, line: 52, type: !46)
!2136 = distinct !DISubprogram(name: "pixel_avg_wxh", scope: !3, file: !3, line: 52, type: !1590, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2137)
!2137 = !{!2135, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2147}
!2138 = !DILocalVariable(name: "i_dst", arg: 2, scope: !2136, file: !3, line: 52, type: !47)
!2139 = !DILocalVariable(name: "src1", arg: 3, scope: !2136, file: !3, line: 52, type: !46)
!2140 = !DILocalVariable(name: "i_src1", arg: 4, scope: !2136, file: !3, line: 52, type: !47)
!2141 = !DILocalVariable(name: "src2", arg: 5, scope: !2136, file: !3, line: 52, type: !46)
!2142 = !DILocalVariable(name: "i_src2", arg: 6, scope: !2136, file: !3, line: 52, type: !47)
!2143 = !DILocalVariable(name: "width", arg: 7, scope: !2136, file: !3, line: 52, type: !47)
!2144 = !DILocalVariable(name: "height", arg: 8, scope: !2136, file: !3, line: 52, type: !47)
!2145 = !DILocalVariable(name: "y", scope: !2146, file: !3, line: 54, type: !47)
!2146 = distinct !DILexicalBlock(scope: !2136, file: !3, line: 54, column: 5)
!2147 = !DILocalVariable(name: "x", scope: !2148, file: !3, line: 56, type: !47)
!2148 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 56, column: 9)
!2149 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 55, column: 5)
!2150 = distinct !DILexicalBlock(scope: !2146, file: !3, line: 54, column: 5)
!2151 = !DILocation(line: 0, scope: !2136, inlinedAt: !2152)
!2152 = distinct !DILocation(line: 105, column: 1, scope: !2133)
!2153 = !DILocation(line: 0, scope: !2146, inlinedAt: !2152)
!2154 = !DILocation(line: 54, column: 5, scope: !2146, inlinedAt: !2152)
!2155 = !DILocation(line: 0, scope: !2148, inlinedAt: !2152)
!2156 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2152)
!2157 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 56, column: 9)
!2158 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2152)
!2159 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2152)
!2160 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2152)
!2161 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2152)
!2162 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2152)
!2163 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2152)
!2164 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2152)
!2165 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2152)
!2166 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2152)
!2167 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2152)
!2168 = !DILocation(line: 54, column: 34, scope: !2150, inlinedAt: !2152)
!2169 = !DILocation(line: 54, column: 23, scope: !2150, inlinedAt: !2152)
!2170 = distinct !{!2170, !2154, !2171}
!2171 = !DILocation(line: 61, column: 5, scope: !2146, inlinedAt: !2152)
!2172 = distinct !DISubprogram(name: "pixel_avg_16x8", scope: !3, file: !3, line: 106, type: !1145, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180}
!2174 = !DILocalVariable(name: "pix1", arg: 1, scope: !2172, file: !3, line: 106, type: !46)
!2175 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2172, file: !3, line: 106, type: !47)
!2176 = !DILocalVariable(name: "pix2", arg: 3, scope: !2172, file: !3, line: 106, type: !46)
!2177 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2172, file: !3, line: 106, type: !47)
!2178 = !DILocalVariable(name: "pix3", arg: 5, scope: !2172, file: !3, line: 106, type: !46)
!2179 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2172, file: !3, line: 106, type: !47)
!2180 = !DILocalVariable(name: "weight", arg: 7, scope: !2172, file: !3, line: 106, type: !47)
!2181 = !DILocation(line: 0, scope: !2172)
!2182 = !DILocation(line: 106, column: 1, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2172, file: !3, line: 106, column: 1)
!2184 = !DILocation(line: 106, column: 1, scope: !2172)
!2185 = !DILocation(line: 0, scope: !2136, inlinedAt: !2186)
!2186 = distinct !DILocation(line: 106, column: 1, scope: !2183)
!2187 = !DILocation(line: 0, scope: !2146, inlinedAt: !2186)
!2188 = !DILocation(line: 54, column: 5, scope: !2146, inlinedAt: !2186)
!2189 = !DILocation(line: 0, scope: !2148, inlinedAt: !2186)
!2190 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2186)
!2191 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2186)
!2192 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2186)
!2193 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2186)
!2194 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2186)
!2195 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2186)
!2196 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2186)
!2197 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2186)
!2198 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2186)
!2199 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2186)
!2200 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2186)
!2201 = !DILocation(line: 54, column: 34, scope: !2150, inlinedAt: !2186)
!2202 = !DILocation(line: 54, column: 23, scope: !2150, inlinedAt: !2186)
!2203 = distinct !{!2203, !2188, !2204}
!2204 = !DILocation(line: 61, column: 5, scope: !2146, inlinedAt: !2186)
!2205 = distinct !DISubprogram(name: "pixel_avg_8x16", scope: !3, file: !3, line: 107, type: !1145, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213}
!2207 = !DILocalVariable(name: "pix1", arg: 1, scope: !2205, file: !3, line: 107, type: !46)
!2208 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2205, file: !3, line: 107, type: !47)
!2209 = !DILocalVariable(name: "pix2", arg: 3, scope: !2205, file: !3, line: 107, type: !46)
!2210 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2205, file: !3, line: 107, type: !47)
!2211 = !DILocalVariable(name: "pix3", arg: 5, scope: !2205, file: !3, line: 107, type: !46)
!2212 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2205, file: !3, line: 107, type: !47)
!2213 = !DILocalVariable(name: "weight", arg: 7, scope: !2205, file: !3, line: 107, type: !47)
!2214 = !DILocation(line: 0, scope: !2205)
!2215 = !DILocation(line: 107, column: 1, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2205, file: !3, line: 107, column: 1)
!2217 = !DILocation(line: 107, column: 1, scope: !2205)
!2218 = !DILocation(line: 0, scope: !2136, inlinedAt: !2219)
!2219 = distinct !DILocation(line: 107, column: 1, scope: !2216)
!2220 = !DILocation(line: 0, scope: !2146, inlinedAt: !2219)
!2221 = !DILocation(line: 54, column: 5, scope: !2146, inlinedAt: !2219)
!2222 = !DILocation(line: 0, scope: !2148, inlinedAt: !2219)
!2223 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2219)
!2224 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2219)
!2225 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2219)
!2226 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2219)
!2227 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2219)
!2228 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2219)
!2229 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2219)
!2230 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2219)
!2231 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2219)
!2232 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2219)
!2233 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2219)
!2234 = !DILocation(line: 54, column: 34, scope: !2150, inlinedAt: !2219)
!2235 = !DILocation(line: 54, column: 23, scope: !2150, inlinedAt: !2219)
!2236 = distinct !{!2236, !2221, !2237}
!2237 = !DILocation(line: 61, column: 5, scope: !2146, inlinedAt: !2219)
!2238 = distinct !DISubprogram(name: "pixel_avg_8x8", scope: !3, file: !3, line: 108, type: !1145, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2239)
!2239 = !{!2240, !2241, !2242, !2243, !2244, !2245, !2246}
!2240 = !DILocalVariable(name: "pix1", arg: 1, scope: !2238, file: !3, line: 108, type: !46)
!2241 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2238, file: !3, line: 108, type: !47)
!2242 = !DILocalVariable(name: "pix2", arg: 3, scope: !2238, file: !3, line: 108, type: !46)
!2243 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2238, file: !3, line: 108, type: !47)
!2244 = !DILocalVariable(name: "pix3", arg: 5, scope: !2238, file: !3, line: 108, type: !46)
!2245 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2238, file: !3, line: 108, type: !47)
!2246 = !DILocalVariable(name: "weight", arg: 7, scope: !2238, file: !3, line: 108, type: !47)
!2247 = !DILocation(line: 0, scope: !2238)
!2248 = !DILocation(line: 108, column: 1, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2238, file: !3, line: 108, column: 1)
!2250 = !DILocation(line: 108, column: 1, scope: !2238)
!2251 = !DILocation(line: 0, scope: !2136, inlinedAt: !2252)
!2252 = distinct !DILocation(line: 108, column: 1, scope: !2249)
!2253 = !DILocation(line: 0, scope: !2146, inlinedAt: !2252)
!2254 = !DILocation(line: 54, column: 5, scope: !2146, inlinedAt: !2252)
!2255 = !DILocation(line: 0, scope: !2148, inlinedAt: !2252)
!2256 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2252)
!2257 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2252)
!2258 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2252)
!2259 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2252)
!2260 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2252)
!2261 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2252)
!2262 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2252)
!2263 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2252)
!2264 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2252)
!2265 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2252)
!2266 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2252)
!2267 = !DILocation(line: 54, column: 34, scope: !2150, inlinedAt: !2252)
!2268 = !DILocation(line: 54, column: 23, scope: !2150, inlinedAt: !2252)
!2269 = distinct !{!2269, !2254, !2270}
!2270 = !DILocation(line: 61, column: 5, scope: !2146, inlinedAt: !2252)
!2271 = distinct !DISubprogram(name: "pixel_avg_8x4", scope: !3, file: !3, line: 109, type: !1145, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279}
!2273 = !DILocalVariable(name: "pix1", arg: 1, scope: !2271, file: !3, line: 109, type: !46)
!2274 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2271, file: !3, line: 109, type: !47)
!2275 = !DILocalVariable(name: "pix2", arg: 3, scope: !2271, file: !3, line: 109, type: !46)
!2276 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2271, file: !3, line: 109, type: !47)
!2277 = !DILocalVariable(name: "pix3", arg: 5, scope: !2271, file: !3, line: 109, type: !46)
!2278 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2271, file: !3, line: 109, type: !47)
!2279 = !DILocalVariable(name: "weight", arg: 7, scope: !2271, file: !3, line: 109, type: !47)
!2280 = !DILocation(line: 0, scope: !2271)
!2281 = !DILocation(line: 109, column: 1, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2271, file: !3, line: 109, column: 1)
!2283 = !DILocation(line: 109, column: 1, scope: !2271)
!2284 = !DILocation(line: 0, scope: !2136, inlinedAt: !2285)
!2285 = distinct !DILocation(line: 109, column: 1, scope: !2282)
!2286 = !DILocation(line: 0, scope: !2146, inlinedAt: !2285)
!2287 = !DILocation(line: 0, scope: !2148, inlinedAt: !2285)
!2288 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2285)
!2289 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2285)
!2290 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2285)
!2291 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2285)
!2292 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2285)
!2293 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2285)
!2294 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2285)
!2295 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2285)
!2296 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2285)
!2297 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2285)
!2298 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2285)
!2299 = distinct !DISubprogram(name: "pixel_avg_4x8", scope: !3, file: !3, line: 110, type: !1145, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2301 = !DILocalVariable(name: "pix1", arg: 1, scope: !2299, file: !3, line: 110, type: !46)
!2302 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2299, file: !3, line: 110, type: !47)
!2303 = !DILocalVariable(name: "pix2", arg: 3, scope: !2299, file: !3, line: 110, type: !46)
!2304 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2299, file: !3, line: 110, type: !47)
!2305 = !DILocalVariable(name: "pix3", arg: 5, scope: !2299, file: !3, line: 110, type: !46)
!2306 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2299, file: !3, line: 110, type: !47)
!2307 = !DILocalVariable(name: "weight", arg: 7, scope: !2299, file: !3, line: 110, type: !47)
!2308 = !DILocation(line: 0, scope: !2299)
!2309 = !DILocation(line: 110, column: 1, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2299, file: !3, line: 110, column: 1)
!2311 = !DILocation(line: 110, column: 1, scope: !2299)
!2312 = !DILocation(line: 0, scope: !2136, inlinedAt: !2313)
!2313 = distinct !DILocation(line: 110, column: 1, scope: !2310)
!2314 = !DILocation(line: 0, scope: !2146, inlinedAt: !2313)
!2315 = !DILocation(line: 0, scope: !2148, inlinedAt: !2313)
!2316 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2313)
!2317 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2313)
!2318 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2313)
!2319 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2313)
!2320 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2313)
!2321 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2313)
!2322 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2313)
!2323 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2313)
!2324 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2313)
!2325 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2313)
!2326 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2313)
!2327 = !DILocalVariable(name: "dst", arg: 1, scope: !2328, file: !3, line: 67, type: !46)
!2328 = distinct !DISubprogram(name: "pixel_avg_weight_wxh", scope: !3, file: !3, line: 67, type: !2329, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2331)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{null, !46, !47, !46, !47, !46, !47, !47, !47, !47}
!2331 = !{!2327, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2342}
!2332 = !DILocalVariable(name: "i_dst", arg: 2, scope: !2328, file: !3, line: 67, type: !47)
!2333 = !DILocalVariable(name: "src1", arg: 3, scope: !2328, file: !3, line: 67, type: !46)
!2334 = !DILocalVariable(name: "i_src1", arg: 4, scope: !2328, file: !3, line: 67, type: !47)
!2335 = !DILocalVariable(name: "src2", arg: 5, scope: !2328, file: !3, line: 67, type: !46)
!2336 = !DILocalVariable(name: "i_src2", arg: 6, scope: !2328, file: !3, line: 67, type: !47)
!2337 = !DILocalVariable(name: "width", arg: 7, scope: !2328, file: !3, line: 67, type: !47)
!2338 = !DILocalVariable(name: "height", arg: 8, scope: !2328, file: !3, line: 67, type: !47)
!2339 = !DILocalVariable(name: "i_weight1", arg: 9, scope: !2328, file: !3, line: 67, type: !47)
!2340 = !DILocalVariable(name: "i_weight2", scope: !2328, file: !3, line: 69, type: !2341)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!2342 = !DILocalVariable(name: "y", scope: !2343, file: !3, line: 70, type: !47)
!2343 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 70, column: 5)
!2344 = !DILocation(line: 0, scope: !2328, inlinedAt: !2345)
!2345 = distinct !DILocation(line: 110, column: 1, scope: !2310)
!2346 = !DILocation(line: 69, column: 30, scope: !2328, inlinedAt: !2345)
!2347 = !DILocation(line: 0, scope: !2343, inlinedAt: !2345)
!2348 = !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2345)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 71, column: 5)
!2350 = distinct !DILexicalBlock(scope: !2343, file: !3, line: 70, column: 5)
!2351 = !DILocation(line: 0, scope: !1698, inlinedAt: !2352)
!2352 = distinct !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2345)
!2353 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2352)
!2354 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2352)
!2355 = !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2345)
!2356 = !DILocation(line: 0, scope: !1698, inlinedAt: !2357)
!2357 = distinct !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2345)
!2358 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2357)
!2359 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2357)
!2360 = !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2345)
!2361 = !DILocation(line: 0, scope: !1698, inlinedAt: !2362)
!2362 = distinct !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2345)
!2363 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2362)
!2364 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2362)
!2365 = !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2345)
!2366 = !DILocation(line: 0, scope: !1698, inlinedAt: !2367)
!2367 = distinct !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2345)
!2368 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2367)
!2369 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2367)
!2370 = !DILocation(line: 70, column: 32, scope: !2350, inlinedAt: !2345)
!2371 = !DILocation(line: 70, column: 40, scope: !2350, inlinedAt: !2345)
!2372 = !DILocation(line: 70, column: 55, scope: !2350, inlinedAt: !2345)
!2373 = !DILocation(line: 70, column: 71, scope: !2350, inlinedAt: !2345)
!2374 = !DILocation(line: 70, column: 22, scope: !2350, inlinedAt: !2345)
!2375 = !DILocation(line: 70, column: 5, scope: !2343, inlinedAt: !2345)
!2376 = distinct !{!2376, !2375, !2377}
!2377 = !DILocation(line: 91, column: 5, scope: !2343, inlinedAt: !2345)
!2378 = distinct !DISubprogram(name: "pixel_avg_4x4", scope: !3, file: !3, line: 111, type: !1145, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2380 = !DILocalVariable(name: "pix1", arg: 1, scope: !2378, file: !3, line: 111, type: !46)
!2381 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2378, file: !3, line: 111, type: !47)
!2382 = !DILocalVariable(name: "pix2", arg: 3, scope: !2378, file: !3, line: 111, type: !46)
!2383 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2378, file: !3, line: 111, type: !47)
!2384 = !DILocalVariable(name: "pix3", arg: 5, scope: !2378, file: !3, line: 111, type: !46)
!2385 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2378, file: !3, line: 111, type: !47)
!2386 = !DILocalVariable(name: "weight", arg: 7, scope: !2378, file: !3, line: 111, type: !47)
!2387 = !DILocation(line: 0, scope: !2378)
!2388 = !DILocation(line: 111, column: 1, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2378, file: !3, line: 111, column: 1)
!2390 = !DILocation(line: 111, column: 1, scope: !2378)
!2391 = !DILocation(line: 0, scope: !2136, inlinedAt: !2392)
!2392 = distinct !DILocation(line: 111, column: 1, scope: !2389)
!2393 = !DILocation(line: 0, scope: !2146, inlinedAt: !2392)
!2394 = !DILocation(line: 0, scope: !2148, inlinedAt: !2392)
!2395 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2392)
!2396 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2392)
!2397 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2392)
!2398 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2392)
!2399 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2392)
!2400 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2392)
!2401 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2392)
!2402 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2392)
!2403 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2392)
!2404 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2392)
!2405 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2392)
!2406 = !DILocation(line: 0, scope: !2328, inlinedAt: !2407)
!2407 = distinct !DILocation(line: 111, column: 1, scope: !2389)
!2408 = !DILocation(line: 69, column: 30, scope: !2328, inlinedAt: !2407)
!2409 = !DILocation(line: 0, scope: !2343, inlinedAt: !2407)
!2410 = !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2407)
!2411 = !DILocation(line: 0, scope: !1698, inlinedAt: !2412)
!2412 = distinct !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2407)
!2413 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2412)
!2414 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2412)
!2415 = !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2407)
!2416 = !DILocation(line: 0, scope: !1698, inlinedAt: !2417)
!2417 = distinct !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2407)
!2418 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2417)
!2419 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2417)
!2420 = !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2407)
!2421 = !DILocation(line: 0, scope: !1698, inlinedAt: !2422)
!2422 = distinct !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2407)
!2423 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2422)
!2424 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2422)
!2425 = !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2407)
!2426 = !DILocation(line: 0, scope: !1698, inlinedAt: !2427)
!2427 = distinct !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2407)
!2428 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2427)
!2429 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2427)
!2430 = !DILocation(line: 70, column: 40, scope: !2350, inlinedAt: !2407)
!2431 = !DILocation(line: 70, column: 55, scope: !2350, inlinedAt: !2407)
!2432 = !DILocation(line: 70, column: 71, scope: !2350, inlinedAt: !2407)
!2433 = distinct !DISubprogram(name: "pixel_avg_4x2", scope: !3, file: !3, line: 112, type: !1145, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441}
!2435 = !DILocalVariable(name: "pix1", arg: 1, scope: !2433, file: !3, line: 112, type: !46)
!2436 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2433, file: !3, line: 112, type: !47)
!2437 = !DILocalVariable(name: "pix2", arg: 3, scope: !2433, file: !3, line: 112, type: !46)
!2438 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2433, file: !3, line: 112, type: !47)
!2439 = !DILocalVariable(name: "pix3", arg: 5, scope: !2433, file: !3, line: 112, type: !46)
!2440 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2433, file: !3, line: 112, type: !47)
!2441 = !DILocalVariable(name: "weight", arg: 7, scope: !2433, file: !3, line: 112, type: !47)
!2442 = !DILocation(line: 0, scope: !2433)
!2443 = !DILocation(line: 112, column: 1, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 112, column: 1)
!2445 = !DILocation(line: 112, column: 1, scope: !2433)
!2446 = !DILocation(line: 0, scope: !2136, inlinedAt: !2447)
!2447 = distinct !DILocation(line: 112, column: 1, scope: !2444)
!2448 = !DILocation(line: 0, scope: !2146, inlinedAt: !2447)
!2449 = !DILocation(line: 0, scope: !2148, inlinedAt: !2447)
!2450 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2447)
!2451 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2447)
!2452 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2447)
!2453 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2447)
!2454 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2447)
!2455 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2447)
!2456 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2447)
!2457 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2447)
!2458 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2447)
!2459 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2447)
!2460 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2447)
!2461 = !DILocation(line: 0, scope: !2328, inlinedAt: !2462)
!2462 = distinct !DILocation(line: 112, column: 1, scope: !2444)
!2463 = !DILocation(line: 69, column: 30, scope: !2328, inlinedAt: !2462)
!2464 = !DILocation(line: 0, scope: !2343, inlinedAt: !2462)
!2465 = !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2462)
!2466 = !DILocation(line: 0, scope: !1698, inlinedAt: !2467)
!2467 = distinct !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2462)
!2468 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2467)
!2469 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2467)
!2470 = !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2462)
!2471 = !DILocation(line: 0, scope: !1698, inlinedAt: !2472)
!2472 = distinct !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2462)
!2473 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2472)
!2474 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2472)
!2475 = !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2462)
!2476 = !DILocation(line: 0, scope: !1698, inlinedAt: !2477)
!2477 = distinct !DILocation(line: 75, column: 9, scope: !2349, inlinedAt: !2462)
!2478 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2477)
!2479 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2477)
!2480 = !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2462)
!2481 = !DILocation(line: 0, scope: !1698, inlinedAt: !2482)
!2482 = distinct !DILocation(line: 76, column: 9, scope: !2349, inlinedAt: !2462)
!2483 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2482)
!2484 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2482)
!2485 = !DILocation(line: 70, column: 40, scope: !2350, inlinedAt: !2462)
!2486 = !DILocation(line: 70, column: 55, scope: !2350, inlinedAt: !2462)
!2487 = !DILocation(line: 70, column: 71, scope: !2350, inlinedAt: !2462)
!2488 = distinct !DISubprogram(name: "pixel_avg_2x4", scope: !3, file: !3, line: 113, type: !1145, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2489)
!2489 = !{!2490, !2491, !2492, !2493, !2494, !2495, !2496}
!2490 = !DILocalVariable(name: "pix1", arg: 1, scope: !2488, file: !3, line: 113, type: !46)
!2491 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2488, file: !3, line: 113, type: !47)
!2492 = !DILocalVariable(name: "pix2", arg: 3, scope: !2488, file: !3, line: 113, type: !46)
!2493 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2488, file: !3, line: 113, type: !47)
!2494 = !DILocalVariable(name: "pix3", arg: 5, scope: !2488, file: !3, line: 113, type: !46)
!2495 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2488, file: !3, line: 113, type: !47)
!2496 = !DILocalVariable(name: "weight", arg: 7, scope: !2488, file: !3, line: 113, type: !47)
!2497 = !DILocation(line: 0, scope: !2488)
!2498 = !DILocation(line: 113, column: 1, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 113, column: 1)
!2500 = !DILocation(line: 113, column: 1, scope: !2488)
!2501 = !DILocation(line: 0, scope: !2136, inlinedAt: !2502)
!2502 = distinct !DILocation(line: 113, column: 1, scope: !2499)
!2503 = !DILocation(line: 0, scope: !2146, inlinedAt: !2502)
!2504 = !DILocation(line: 0, scope: !2148, inlinedAt: !2502)
!2505 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2502)
!2506 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2502)
!2507 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2502)
!2508 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2502)
!2509 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2502)
!2510 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2502)
!2511 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2502)
!2512 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2502)
!2513 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2502)
!2514 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2502)
!2515 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2502)
!2516 = !DILocation(line: 0, scope: !2328, inlinedAt: !2517)
!2517 = distinct !DILocation(line: 113, column: 1, scope: !2499)
!2518 = !DILocation(line: 69, column: 30, scope: !2328, inlinedAt: !2517)
!2519 = !DILocation(line: 0, scope: !2343, inlinedAt: !2517)
!2520 = !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2517)
!2521 = !DILocation(line: 0, scope: !1698, inlinedAt: !2522)
!2522 = distinct !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2517)
!2523 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2522)
!2524 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2522)
!2525 = !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2517)
!2526 = !DILocation(line: 0, scope: !1698, inlinedAt: !2527)
!2527 = distinct !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2517)
!2528 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2527)
!2529 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2527)
!2530 = !DILocation(line: 70, column: 40, scope: !2350, inlinedAt: !2517)
!2531 = !DILocation(line: 70, column: 55, scope: !2350, inlinedAt: !2517)
!2532 = !DILocation(line: 70, column: 71, scope: !2350, inlinedAt: !2517)
!2533 = distinct !DISubprogram(name: "pixel_avg_2x2", scope: !3, file: !3, line: 114, type: !1145, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2540, !2541}
!2535 = !DILocalVariable(name: "pix1", arg: 1, scope: !2533, file: !3, line: 114, type: !46)
!2536 = !DILocalVariable(name: "i_stride_pix1", arg: 2, scope: !2533, file: !3, line: 114, type: !47)
!2537 = !DILocalVariable(name: "pix2", arg: 3, scope: !2533, file: !3, line: 114, type: !46)
!2538 = !DILocalVariable(name: "i_stride_pix2", arg: 4, scope: !2533, file: !3, line: 114, type: !47)
!2539 = !DILocalVariable(name: "pix3", arg: 5, scope: !2533, file: !3, line: 114, type: !46)
!2540 = !DILocalVariable(name: "i_stride_pix3", arg: 6, scope: !2533, file: !3, line: 114, type: !47)
!2541 = !DILocalVariable(name: "weight", arg: 7, scope: !2533, file: !3, line: 114, type: !47)
!2542 = !DILocation(line: 0, scope: !2533)
!2543 = !DILocation(line: 114, column: 1, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 114, column: 1)
!2545 = !DILocation(line: 114, column: 1, scope: !2533)
!2546 = !DILocation(line: 0, scope: !2136, inlinedAt: !2547)
!2547 = distinct !DILocation(line: 114, column: 1, scope: !2544)
!2548 = !DILocation(line: 0, scope: !2146, inlinedAt: !2547)
!2549 = !DILocation(line: 0, scope: !2148, inlinedAt: !2547)
!2550 = !DILocation(line: 57, column: 24, scope: !2157, inlinedAt: !2547)
!2551 = !DILocation(line: 57, column: 34, scope: !2157, inlinedAt: !2547)
!2552 = !DILocation(line: 57, column: 32, scope: !2157, inlinedAt: !2547)
!2553 = !DILocation(line: 57, column: 42, scope: !2157, inlinedAt: !2547)
!2554 = !DILocation(line: 57, column: 48, scope: !2157, inlinedAt: !2547)
!2555 = !DILocation(line: 57, column: 22, scope: !2157, inlinedAt: !2547)
!2556 = !DILocation(line: 57, column: 20, scope: !2157, inlinedAt: !2547)
!2557 = !DILocation(line: 57, column: 13, scope: !2157, inlinedAt: !2547)
!2558 = !DILocation(line: 58, column: 14, scope: !2149, inlinedAt: !2547)
!2559 = !DILocation(line: 59, column: 14, scope: !2149, inlinedAt: !2547)
!2560 = !DILocation(line: 60, column: 13, scope: !2149, inlinedAt: !2547)
!2561 = !DILocation(line: 0, scope: !2328, inlinedAt: !2562)
!2562 = distinct !DILocation(line: 114, column: 1, scope: !2544)
!2563 = !DILocation(line: 69, column: 30, scope: !2328, inlinedAt: !2562)
!2564 = !DILocation(line: 0, scope: !2343, inlinedAt: !2562)
!2565 = !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2562)
!2566 = !DILocation(line: 0, scope: !1698, inlinedAt: !2567)
!2567 = distinct !DILocation(line: 72, column: 9, scope: !2349, inlinedAt: !2562)
!2568 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2567)
!2569 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2567)
!2570 = !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2562)
!2571 = !DILocation(line: 0, scope: !1698, inlinedAt: !2572)
!2572 = distinct !DILocation(line: 73, column: 9, scope: !2349, inlinedAt: !2562)
!2573 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2572)
!2574 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2572)
!2575 = !DILocation(line: 70, column: 40, scope: !2350, inlinedAt: !2562)
!2576 = !DILocation(line: 70, column: 55, scope: !2350, inlinedAt: !2562)
!2577 = !DILocation(line: 70, column: 71, scope: !2350, inlinedAt: !2562)
!2578 = distinct !DISubprogram(name: "x264_weight_cache", scope: !3, file: !3, line: 116, type: !1200, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2579)
!2579 = !{!2580, !2581}
!2580 = !DILocalVariable(name: "h", arg: 1, scope: !2578, file: !3, line: 116, type: !107)
!2581 = !DILocalVariable(name: "w", arg: 2, scope: !2578, file: !3, line: 116, type: !1202)
!2582 = !DILocation(line: 0, scope: !2578)
!2583 = !DILocation(line: 118, column: 25, scope: !2578)
!2584 = !DILocation(line: 118, column: 8, scope: !2578)
!2585 = !DILocation(line: 118, column: 17, scope: !2578)
!2586 = !DILocation(line: 119, column: 1, scope: !2578)
!2587 = distinct !DISubprogram(name: "mc_copy_w16", scope: !3, file: !3, line: 295, type: !1152, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2588)
!2588 = !{!2589, !2590, !2591, !2592, !2593}
!2589 = !DILocalVariable(name: "dst", arg: 1, scope: !2587, file: !3, line: 295, type: !46)
!2590 = !DILocalVariable(name: "i_dst", arg: 2, scope: !2587, file: !3, line: 295, type: !47)
!2591 = !DILocalVariable(name: "src", arg: 3, scope: !2587, file: !3, line: 295, type: !46)
!2592 = !DILocalVariable(name: "i_src", arg: 4, scope: !2587, file: !3, line: 295, type: !47)
!2593 = !DILocalVariable(name: "i_height", arg: 5, scope: !2587, file: !3, line: 295, type: !47)
!2594 = !DILocation(line: 0, scope: !2587)
!2595 = !DILocation(line: 0, scope: !1807, inlinedAt: !2596)
!2596 = distinct !DILocation(line: 295, column: 1, scope: !2587)
!2597 = !DILocation(line: 0, scope: !1815, inlinedAt: !2596)
!2598 = !DILocation(line: 174, column: 23, scope: !1820, inlinedAt: !2596)
!2599 = !DILocation(line: 174, column: 5, scope: !1815, inlinedAt: !2596)
!2600 = !DILocation(line: 176, column: 9, scope: !1823, inlinedAt: !2596)
!2601 = !DILocation(line: 178, column: 13, scope: !1823, inlinedAt: !2596)
!2602 = !DILocation(line: 179, column: 13, scope: !1823, inlinedAt: !2596)
!2603 = distinct !{!2603, !2599, !2604}
!2604 = !DILocation(line: 180, column: 5, scope: !1815, inlinedAt: !2596)
!2605 = distinct !{!2605, !100}
!2606 = !DILocation(line: 295, column: 1, scope: !2587)
!2607 = distinct !DISubprogram(name: "mc_copy_w8", scope: !3, file: !3, line: 296, type: !1152, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2608)
!2608 = !{!2609, !2610, !2611, !2612, !2613}
!2609 = !DILocalVariable(name: "dst", arg: 1, scope: !2607, file: !3, line: 296, type: !46)
!2610 = !DILocalVariable(name: "i_dst", arg: 2, scope: !2607, file: !3, line: 296, type: !47)
!2611 = !DILocalVariable(name: "src", arg: 3, scope: !2607, file: !3, line: 296, type: !46)
!2612 = !DILocalVariable(name: "i_src", arg: 4, scope: !2607, file: !3, line: 296, type: !47)
!2613 = !DILocalVariable(name: "i_height", arg: 5, scope: !2607, file: !3, line: 296, type: !47)
!2614 = !DILocation(line: 0, scope: !2607)
!2615 = !DILocation(line: 0, scope: !1807, inlinedAt: !2616)
!2616 = distinct !DILocation(line: 296, column: 1, scope: !2607)
!2617 = !DILocation(line: 0, scope: !1815, inlinedAt: !2616)
!2618 = !DILocation(line: 174, column: 23, scope: !1820, inlinedAt: !2616)
!2619 = !DILocation(line: 174, column: 5, scope: !1815, inlinedAt: !2616)
!2620 = !DILocation(line: 176, column: 9, scope: !1823, inlinedAt: !2616)
!2621 = !DILocation(line: 178, column: 13, scope: !1823, inlinedAt: !2616)
!2622 = !DILocation(line: 179, column: 13, scope: !1823, inlinedAt: !2616)
!2623 = distinct !{!2623, !2619, !2624}
!2624 = !DILocation(line: 180, column: 5, scope: !1815, inlinedAt: !2616)
!2625 = distinct !{!2625, !100}
!2626 = !DILocation(line: 296, column: 1, scope: !2607)
!2627 = distinct !DISubprogram(name: "mc_copy_w4", scope: !3, file: !3, line: 297, type: !1152, scopeLine: 297, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633}
!2629 = !DILocalVariable(name: "dst", arg: 1, scope: !2627, file: !3, line: 297, type: !46)
!2630 = !DILocalVariable(name: "i_dst", arg: 2, scope: !2627, file: !3, line: 297, type: !47)
!2631 = !DILocalVariable(name: "src", arg: 3, scope: !2627, file: !3, line: 297, type: !46)
!2632 = !DILocalVariable(name: "i_src", arg: 4, scope: !2627, file: !3, line: 297, type: !47)
!2633 = !DILocalVariable(name: "i_height", arg: 5, scope: !2627, file: !3, line: 297, type: !47)
!2634 = !DILocation(line: 0, scope: !2627)
!2635 = !DILocation(line: 0, scope: !1807, inlinedAt: !2636)
!2636 = distinct !DILocation(line: 297, column: 1, scope: !2627)
!2637 = !DILocation(line: 0, scope: !1815, inlinedAt: !2636)
!2638 = !DILocation(line: 174, column: 23, scope: !1820, inlinedAt: !2636)
!2639 = !DILocation(line: 174, column: 5, scope: !1815, inlinedAt: !2636)
!2640 = !DILocation(line: 176, column: 9, scope: !1823, inlinedAt: !2636)
!2641 = !DILocation(line: 178, column: 13, scope: !1823, inlinedAt: !2636)
!2642 = !DILocation(line: 179, column: 13, scope: !1823, inlinedAt: !2636)
!2643 = distinct !{!2643, !2639, !2644}
!2644 = !DILocation(line: 180, column: 5, scope: !1815, inlinedAt: !2636)
!2645 = distinct !{!2645, !100}
!2646 = !DILocation(line: 297, column: 1, scope: !2627)
!2647 = distinct !DISubprogram(name: "hpel_filter", scope: !3, file: !3, line: 184, type: !1159, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2659, !2663, !2666, !2668}
!2649 = !DILocalVariable(name: "dsth", arg: 1, scope: !2647, file: !3, line: 184, type: !46)
!2650 = !DILocalVariable(name: "dstv", arg: 2, scope: !2647, file: !3, line: 184, type: !46)
!2651 = !DILocalVariable(name: "dstc", arg: 3, scope: !2647, file: !3, line: 184, type: !46)
!2652 = !DILocalVariable(name: "src", arg: 4, scope: !2647, file: !3, line: 184, type: !46)
!2653 = !DILocalVariable(name: "stride", arg: 5, scope: !2647, file: !3, line: 185, type: !47)
!2654 = !DILocalVariable(name: "width", arg: 6, scope: !2647, file: !3, line: 185, type: !47)
!2655 = !DILocalVariable(name: "height", arg: 7, scope: !2647, file: !3, line: 185, type: !47)
!2656 = !DILocalVariable(name: "buf", arg: 8, scope: !2647, file: !3, line: 185, type: !796)
!2657 = !DILocalVariable(name: "y", scope: !2658, file: !3, line: 187, type: !47)
!2658 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 187, column: 5)
!2659 = !DILocalVariable(name: "x", scope: !2660, file: !3, line: 189, type: !47)
!2660 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 189, column: 9)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 188, column: 5)
!2662 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 187, column: 5)
!2663 = !DILocalVariable(name: "v", scope: !2664, file: !3, line: 191, type: !47)
!2664 = distinct !DILexicalBlock(scope: !2665, file: !3, line: 190, column: 9)
!2665 = distinct !DILexicalBlock(scope: !2660, file: !3, line: 189, column: 9)
!2666 = !DILocalVariable(name: "x", scope: !2667, file: !3, line: 195, type: !47)
!2667 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 195, column: 9)
!2668 = !DILocalVariable(name: "x", scope: !2669, file: !3, line: 197, type: !47)
!2669 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 197, column: 9)
!2670 = !DILocation(line: 0, scope: !2647)
!2671 = !DILocation(line: 0, scope: !2658)
!2672 = !DILocation(line: 187, column: 23, scope: !2662)
!2673 = !DILocation(line: 187, column: 5, scope: !2658)
!2674 = !DILocation(line: 0, scope: !2660)
!2675 = !DILocation(line: 189, column: 9, scope: !2660)
!2676 = !DILocation(line: 191, column: 21, scope: !2664)
!2677 = !{!2678}
!2678 = distinct !{!2678, !2679}
!2679 = distinct !{!2679, !"LVerDomain"}
!2680 = !{!2681}
!2681 = distinct !{!2681, !2679}
!2682 = !{!2683}
!2683 = distinct !{!2683, !2679}
!2684 = !{!2685}
!2685 = distinct !{!2685, !2679}
!2686 = !{!2687}
!2687 = distinct !{!2687, !2679}
!2688 = !{!2689}
!2689 = distinct !{!2689, !2679}
!2690 = !DILocation(line: 192, column: 43, scope: !2664)
!2691 = !DILocation(line: 192, column: 49, scope: !2664)
!2692 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2693)
!2693 = distinct !DILocation(line: 192, column: 23, scope: !2664)
!2694 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2693)
!2695 = !DILocation(line: 192, column: 13, scope: !2664)
!2696 = !DILocation(line: 192, column: 21, scope: !2664)
!2697 = !{!2698}
!2698 = distinct !{!2698, !2679}
!2699 = !{!2700, !2689, !2687, !2685, !2683, !2681, !2678}
!2700 = distinct !{!2700, !2679}
!2701 = !DILocation(line: 193, column: 24, scope: !2664)
!2702 = !DILocation(line: 193, column: 13, scope: !2664)
!2703 = !DILocation(line: 193, column: 22, scope: !2664)
!2704 = !{!2700}
!2705 = !{!2689, !2687, !2685, !2683, !2681, !2678}
!2706 = distinct !{!2706, !2675, !2707, !1633, !1634}
!2707 = !DILocation(line: 194, column: 9, scope: !2660)
!2708 = !DILocation(line: 204, column: 1, scope: !2647)
!2709 = !DILocation(line: 0, scope: !2667)
!2710 = !DILocation(line: 195, column: 9, scope: !2667)
!2711 = !DILocation(line: 196, column: 41, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 195, column: 9)
!2713 = !{!2714}
!2714 = distinct !{!2714, !2715}
!2715 = distinct !{!2715, !"LVerDomain"}
!2716 = !DILocation(line: 196, column: 60, scope: !2712)
!2717 = !DILocation(line: 196, column: 67, scope: !2712)
!2718 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2719)
!2719 = distinct !DILocation(line: 196, column: 23, scope: !2712)
!2720 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2719)
!2721 = !DILocation(line: 196, column: 13, scope: !2712)
!2722 = !DILocation(line: 196, column: 21, scope: !2712)
!2723 = !{!2724}
!2724 = distinct !{!2724, !2715}
!2725 = distinct !{!2725, !2710, !2726, !1633, !1634}
!2726 = !DILocation(line: 196, column: 73, scope: !2667)
!2727 = !DILocation(line: 0, scope: !2664)
!2728 = !DILocation(line: 0, scope: !1698, inlinedAt: !2693)
!2729 = !DILocation(line: 189, column: 40, scope: !2665)
!2730 = !DILocation(line: 189, column: 28, scope: !2665)
!2731 = distinct !{!2731, !2675, !2707, !1633}
!2732 = !DILocation(line: 0, scope: !2669)
!2733 = !DILocation(line: 197, column: 9, scope: !2669)
!2734 = !DILocation(line: 198, column: 41, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2669, file: !3, line: 197, column: 9)
!2736 = !{!2737}
!2737 = distinct !{!2737, !2738}
!2738 = distinct !{!2738, !"LVerDomain"}
!2739 = !DILocation(line: 198, column: 58, scope: !2735)
!2740 = !DILocation(line: 198, column: 64, scope: !2735)
!2741 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !2742)
!2742 = distinct !DILocation(line: 198, column: 23, scope: !2735)
!2743 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !2742)
!2744 = !DILocation(line: 198, column: 13, scope: !2735)
!2745 = !DILocation(line: 198, column: 21, scope: !2735)
!2746 = !{!2747}
!2747 = distinct !{!2747, !2738}
!2748 = distinct !{!2748, !2733, !2749, !1633, !1634}
!2749 = !DILocation(line: 198, column: 69, scope: !2669)
!2750 = !{!2751}
!2751 = distinct !{!2751, !2752}
!2752 = distinct !{!2752, !"LVerDomain"}
!2753 = !{!2754}
!2754 = distinct !{!2754, !2752}
!2755 = distinct !{!2755, !2733, !2749, !1633, !1634}
!2756 = !DILocation(line: 0, scope: !1698, inlinedAt: !2719)
!2757 = !DILocation(line: 195, column: 27, scope: !2712)
!2758 = distinct !{!2758, !2710, !2726, !1633}
!2759 = !DILocation(line: 199, column: 14, scope: !2661)
!2760 = !DILocation(line: 200, column: 14, scope: !2661)
!2761 = !DILocation(line: 201, column: 14, scope: !2661)
!2762 = !DILocation(line: 202, column: 13, scope: !2661)
!2763 = !DILocation(line: 187, column: 34, scope: !2662)
!2764 = distinct !{!2764, !2673, !2765}
!2765 = !DILocation(line: 203, column: 5, scope: !2658)
!2766 = !DILocation(line: 0, scope: !1698, inlinedAt: !2742)
!2767 = !DILocation(line: 197, column: 27, scope: !2735)
!2768 = distinct !{!2768, !2733, !2749, !1633}
!2769 = distinct !DISubprogram(name: "prefetch_fenc_null", scope: !3, file: !3, line: 310, type: !1152, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2770)
!2770 = !{!2771, !2772, !2773, !2774, !2775}
!2771 = !DILocalVariable(name: "pix_y", arg: 1, scope: !2769, file: !3, line: 310, type: !46)
!2772 = !DILocalVariable(name: "stride_y", arg: 2, scope: !2769, file: !3, line: 310, type: !47)
!2773 = !DILocalVariable(name: "pix_uv", arg: 3, scope: !2769, file: !3, line: 311, type: !46)
!2774 = !DILocalVariable(name: "stride_uv", arg: 4, scope: !2769, file: !3, line: 311, type: !47)
!2775 = !DILocalVariable(name: "mb_x", arg: 5, scope: !2769, file: !3, line: 311, type: !47)
!2776 = !DILocation(line: 0, scope: !2769)
!2777 = !DILocation(line: 312, column: 2, scope: !2769)
!2778 = distinct !DISubprogram(name: "prefetch_ref_null", scope: !3, file: !3, line: 314, type: !1164, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2779)
!2779 = !{!2780, !2781, !2782}
!2780 = !DILocalVariable(name: "pix", arg: 1, scope: !2778, file: !3, line: 314, type: !46)
!2781 = !DILocalVariable(name: "stride", arg: 2, scope: !2778, file: !3, line: 314, type: !47)
!2782 = !DILocalVariable(name: "parity", arg: 3, scope: !2778, file: !3, line: 314, type: !47)
!2783 = !DILocation(line: 0, scope: !2778)
!2784 = !DILocation(line: 315, column: 2, scope: !2778)
!2785 = distinct !DISubprogram(name: "memzero_aligned", scope: !3, file: !3, line: 317, type: !1176, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2786)
!2786 = !{!2787, !2788}
!2787 = !DILocalVariable(name: "dst", arg: 1, scope: !2785, file: !3, line: 317, type: !174)
!2788 = !DILocalVariable(name: "n", arg: 2, scope: !2785, file: !3, line: 317, type: !47)
!2789 = !DILocation(line: 0, scope: !2785)
!2790 = !DILocation(line: 319, column: 21, scope: !2785)
!2791 = !DILocation(line: 319, column: 5, scope: !2785)
!2792 = !DILocation(line: 320, column: 1, scope: !2785)
!2793 = distinct !DISubprogram(name: "frame_init_lowres_core", scope: !3, file: !3, line: 382, type: !1193, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2806, !2809, !2810}
!2795 = !DILocalVariable(name: "src0", arg: 1, scope: !2793, file: !3, line: 382, type: !46)
!2796 = !DILocalVariable(name: "dst0", arg: 2, scope: !2793, file: !3, line: 382, type: !46)
!2797 = !DILocalVariable(name: "dsth", arg: 3, scope: !2793, file: !3, line: 382, type: !46)
!2798 = !DILocalVariable(name: "dstv", arg: 4, scope: !2793, file: !3, line: 382, type: !46)
!2799 = !DILocalVariable(name: "dstc", arg: 5, scope: !2793, file: !3, line: 382, type: !46)
!2800 = !DILocalVariable(name: "src_stride", arg: 6, scope: !2793, file: !3, line: 383, type: !47)
!2801 = !DILocalVariable(name: "dst_stride", arg: 7, scope: !2793, file: !3, line: 383, type: !47)
!2802 = !DILocalVariable(name: "width", arg: 8, scope: !2793, file: !3, line: 383, type: !47)
!2803 = !DILocalVariable(name: "height", arg: 9, scope: !2793, file: !3, line: 383, type: !47)
!2804 = !DILocalVariable(name: "y", scope: !2805, file: !3, line: 385, type: !47)
!2805 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 385, column: 5)
!2806 = !DILocalVariable(name: "src1", scope: !2807, file: !3, line: 387, type: !46)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 386, column: 5)
!2808 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 385, column: 5)
!2809 = !DILocalVariable(name: "src2", scope: !2807, file: !3, line: 388, type: !46)
!2810 = !DILocalVariable(name: "x", scope: !2811, file: !3, line: 389, type: !47)
!2811 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 389, column: 9)
!2812 = !DILocation(line: 0, scope: !2793)
!2813 = !DILocation(line: 0, scope: !2805)
!2814 = !DILocation(line: 385, column: 23, scope: !2808)
!2815 = !DILocation(line: 385, column: 5, scope: !2805)
!2816 = !DILocation(line: 387, column: 29, scope: !2807)
!2817 = !DILocation(line: 0, scope: !2807)
!2818 = !DILocation(line: 388, column: 29, scope: !2807)
!2819 = !DILocation(line: 0, scope: !2811)
!2820 = !DILocation(line: 389, column: 9, scope: !2811)
!2821 = !DILocation(line: 389, column: 35, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 389, column: 9)
!2823 = !DILocation(line: 393, column: 23, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 390, column: 9)
!2825 = !{!2826}
!2826 = distinct !{!2826, !2827}
!2827 = distinct !{!2827, !"LVerDomain"}
!2828 = !{!2829}
!2829 = distinct !{!2829, !2827}
!2830 = !DILocation(line: 393, column: 13, scope: !2824)
!2831 = !DILocation(line: 393, column: 21, scope: !2824)
!2832 = !{!2833}
!2833 = distinct !{!2833, !2827}
!2834 = !{!2835, !2836, !2837, !2838, !2829, !2826}
!2835 = distinct !{!2835, !2827}
!2836 = distinct !{!2836, !2827}
!2837 = distinct !{!2837, !2827}
!2838 = distinct !{!2838, !2827}
!2839 = !DILocation(line: 394, column: 23, scope: !2824)
!2840 = !DILocation(line: 394, column: 13, scope: !2824)
!2841 = !DILocation(line: 394, column: 21, scope: !2824)
!2842 = !{!2835}
!2843 = !{!2836, !2837, !2838, !2829, !2826}
!2844 = !DILocation(line: 395, column: 23, scope: !2824)
!2845 = !{!2838}
!2846 = !DILocation(line: 395, column: 13, scope: !2824)
!2847 = !DILocation(line: 395, column: 21, scope: !2824)
!2848 = !{!2836}
!2849 = !{!2837, !2838, !2829, !2826}
!2850 = !DILocation(line: 396, column: 23, scope: !2824)
!2851 = !DILocation(line: 396, column: 13, scope: !2824)
!2852 = !DILocation(line: 396, column: 21, scope: !2824)
!2853 = !{!2837}
!2854 = !{!2838, !2829, !2826}
!2855 = distinct !{!2855, !2820, !2856, !1633, !1634}
!2856 = !DILocation(line: 398, column: 9, scope: !2811)
!2857 = !DILocation(line: 389, column: 26, scope: !2822)
!2858 = distinct !{!2858, !2820, !2856, !1633}
!2859 = !DILocation(line: 399, column: 14, scope: !2807)
!2860 = !DILocation(line: 400, column: 14, scope: !2807)
!2861 = !DILocation(line: 401, column: 14, scope: !2807)
!2862 = !DILocation(line: 402, column: 14, scope: !2807)
!2863 = !DILocation(line: 403, column: 14, scope: !2807)
!2864 = !DILocation(line: 385, column: 34, scope: !2808)
!2865 = distinct !{!2865, !2815, !2866}
!2866 = !DILocation(line: 404, column: 5, scope: !2805)
!2867 = !DILocation(line: 405, column: 1, scope: !2793)
!2868 = distinct !DISubprogram(name: "integral_init4h", scope: !3, file: !3, line: 322, type: !1180, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2869)
!2869 = !{!2870, !2871, !2872, !2873, !2874}
!2870 = !DILocalVariable(name: "sum", arg: 1, scope: !2868, file: !3, line: 322, type: !484)
!2871 = !DILocalVariable(name: "pix", arg: 2, scope: !2868, file: !3, line: 322, type: !46)
!2872 = !DILocalVariable(name: "stride", arg: 3, scope: !2868, file: !3, line: 322, type: !47)
!2873 = !DILocalVariable(name: "v", scope: !2868, file: !3, line: 324, type: !47)
!2874 = !DILocalVariable(name: "x", scope: !2875, file: !3, line: 325, type: !47)
!2875 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 325, column: 5)
!2876 = !DILocation(line: 0, scope: !2868)
!2877 = !DILocation(line: 0, scope: !2875)
!2878 = !DILocation(line: 325, column: 23, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 325, column: 5)
!2880 = !DILocation(line: 325, column: 5, scope: !2875)
!2881 = !DILocation(line: 324, column: 13, scope: !2868)
!2882 = !DILocation(line: 324, column: 20, scope: !2868)
!2883 = !DILocation(line: 324, column: 33, scope: !2868)
!2884 = !DILocation(line: 327, column: 27, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 326, column: 5)
!2886 = !DILocation(line: 327, column: 22, scope: !2885)
!2887 = !DILocation(line: 327, column: 18, scope: !2885)
!2888 = !DILocation(line: 327, column: 9, scope: !2885)
!2889 = !DILocation(line: 327, column: 16, scope: !2885)
!2890 = !DILocation(line: 330, column: 1, scope: !2868)
!2891 = !DILocation(line: 328, column: 14, scope: !2885)
!2892 = !DILocation(line: 328, column: 25, scope: !2885)
!2893 = !DILocation(line: 328, column: 23, scope: !2885)
!2894 = !DILocation(line: 328, column: 11, scope: !2885)
!2895 = !DILocation(line: 325, column: 36, scope: !2879)
!2896 = distinct !{!2896, !2880, !2897}
!2897 = !DILocation(line: 329, column: 5, scope: !2875)
!2898 = distinct !DISubprogram(name: "integral_init8h", scope: !3, file: !3, line: 332, type: !1180, scopeLine: 333, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2899)
!2899 = !{!2900, !2901, !2902, !2903, !2904}
!2900 = !DILocalVariable(name: "sum", arg: 1, scope: !2898, file: !3, line: 332, type: !484)
!2901 = !DILocalVariable(name: "pix", arg: 2, scope: !2898, file: !3, line: 332, type: !46)
!2902 = !DILocalVariable(name: "stride", arg: 3, scope: !2898, file: !3, line: 332, type: !47)
!2903 = !DILocalVariable(name: "v", scope: !2898, file: !3, line: 334, type: !47)
!2904 = !DILocalVariable(name: "x", scope: !2905, file: !3, line: 335, type: !47)
!2905 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 335, column: 5)
!2906 = !DILocation(line: 0, scope: !2898)
!2907 = !DILocation(line: 0, scope: !2905)
!2908 = !DILocation(line: 335, column: 23, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 335, column: 5)
!2910 = !DILocation(line: 335, column: 5, scope: !2905)
!2911 = !DILocation(line: 334, column: 13, scope: !2898)
!2912 = !DILocation(line: 334, column: 20, scope: !2898)
!2913 = !DILocation(line: 334, column: 61, scope: !2898)
!2914 = !DILocation(line: 337, column: 27, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2909, file: !3, line: 336, column: 5)
!2916 = !DILocation(line: 337, column: 22, scope: !2915)
!2917 = !DILocation(line: 337, column: 18, scope: !2915)
!2918 = !DILocation(line: 337, column: 9, scope: !2915)
!2919 = !DILocation(line: 337, column: 16, scope: !2915)
!2920 = !DILocation(line: 340, column: 1, scope: !2898)
!2921 = !DILocation(line: 338, column: 14, scope: !2915)
!2922 = !DILocation(line: 338, column: 25, scope: !2915)
!2923 = !DILocation(line: 338, column: 23, scope: !2915)
!2924 = !DILocation(line: 338, column: 11, scope: !2915)
!2925 = !DILocation(line: 335, column: 36, scope: !2909)
!2926 = distinct !{!2926, !2910, !2927}
!2927 = !DILocation(line: 339, column: 5, scope: !2905)
!2928 = distinct !DISubprogram(name: "integral_init4v", scope: !3, file: !3, line: 342, type: !1185, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2935}
!2930 = !DILocalVariable(name: "sum8", arg: 1, scope: !2928, file: !3, line: 342, type: !484)
!2931 = !DILocalVariable(name: "sum4", arg: 2, scope: !2928, file: !3, line: 342, type: !484)
!2932 = !DILocalVariable(name: "stride", arg: 3, scope: !2928, file: !3, line: 342, type: !47)
!2933 = !DILocalVariable(name: "x", scope: !2934, file: !3, line: 344, type: !47)
!2934 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 344, column: 5)
!2935 = !DILocalVariable(name: "x", scope: !2936, file: !3, line: 346, type: !47)
!2936 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 346, column: 5)
!2937 = !DILocation(line: 0, scope: !2928)
!2938 = !DILocation(line: 0, scope: !2934)
!2939 = !DILocation(line: 344, column: 23, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2934, file: !3, line: 344, column: 5)
!2941 = !DILocation(line: 344, column: 5, scope: !2934)
!2942 = !DILocation(line: 345, column: 19, scope: !2940)
!2943 = !DILocation(line: 345, column: 38, scope: !2940)
!2944 = !DILocation(line: 345, column: 36, scope: !2940)
!2945 = !DILocation(line: 345, column: 9, scope: !2940)
!2946 = !DILocation(line: 345, column: 17, scope: !2940)
!2947 = !DILocation(line: 344, column: 36, scope: !2940)
!2948 = distinct !{!2948, !100}
!2949 = distinct !{!2949, !2941, !2950, !1633, !1634}
!2950 = !DILocation(line: 345, column: 44, scope: !2934)
!2951 = !DILocation(line: 0, scope: !2936)
!2952 = !DILocation(line: 346, column: 5, scope: !2936)
!2953 = !DILocation(line: 346, column: 23, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 346, column: 5)
!2955 = !DILocation(line: 346, column: 36, scope: !2954)
!2956 = !DILocation(line: 347, column: 19, scope: !2954)
!2957 = !DILocation(line: 347, column: 38, scope: !2954)
!2958 = !DILocation(line: 347, column: 59, scope: !2954)
!2959 = !DILocation(line: 347, column: 69, scope: !2954)
!2960 = !DILocation(line: 347, column: 67, scope: !2954)
!2961 = !DILocation(line: 347, column: 17, scope: !2954)
!2962 = distinct !{!2962, !2952, !2963, !1633, !1634}
!2963 = !DILocation(line: 347, column: 77, scope: !2936)
!2964 = distinct !{!2964, !2941, !2950, !1633}
!2965 = !DILocation(line: 348, column: 1, scope: !2928)
!2966 = distinct !{!2966, !2952, !2963, !1634, !1633}
!2967 = distinct !DISubprogram(name: "integral_init8v", scope: !3, file: !3, line: 350, type: !1189, scopeLine: 351, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2968)
!2968 = !{!2969, !2970, !2971}
!2969 = !DILocalVariable(name: "sum8", arg: 1, scope: !2967, file: !3, line: 350, type: !484)
!2970 = !DILocalVariable(name: "stride", arg: 2, scope: !2967, file: !3, line: 350, type: !47)
!2971 = !DILocalVariable(name: "x", scope: !2972, file: !3, line: 352, type: !47)
!2972 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 352, column: 5)
!2973 = !DILocation(line: 0, scope: !2967)
!2974 = !DILocation(line: 0, scope: !2972)
!2975 = !DILocation(line: 352, column: 23, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 352, column: 5)
!2977 = !DILocation(line: 352, column: 5, scope: !2972)
!2978 = !DILocation(line: 352, column: 36, scope: !2976)
!2979 = !DILocation(line: 353, column: 19, scope: !2976)
!2980 = !DILocation(line: 353, column: 38, scope: !2976)
!2981 = !DILocation(line: 353, column: 36, scope: !2976)
!2982 = !DILocation(line: 353, column: 17, scope: !2976)
!2983 = distinct !{!2983, !2977, !2984, !1633, !1634}
!2984 = !DILocation(line: 353, column: 44, scope: !2972)
!2985 = !DILocation(line: 354, column: 1, scope: !2967)
!2986 = distinct !{!2986, !2977, !2984, !1634, !1633}
!2987 = distinct !DISubprogram(name: "mbtree_propagate_cost", scope: !3, file: !3, line: 424, type: !1205, scopeLine: 426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2997}
!2989 = !DILocalVariable(name: "dst", arg: 1, scope: !2987, file: !3, line: 424, type: !639)
!2990 = !DILocalVariable(name: "propagate_in", arg: 2, scope: !2987, file: !3, line: 424, type: !484)
!2991 = !DILocalVariable(name: "intra_costs", arg: 3, scope: !2987, file: !3, line: 424, type: !484)
!2992 = !DILocalVariable(name: "inter_costs", arg: 4, scope: !2987, file: !3, line: 425, type: !484)
!2993 = !DILocalVariable(name: "inv_qscales", arg: 5, scope: !2987, file: !3, line: 425, type: !484)
!2994 = !DILocalVariable(name: "len", arg: 6, scope: !2987, file: !3, line: 425, type: !47)
!2995 = !DILocalVariable(name: "i", scope: !2996, file: !3, line: 427, type: !47)
!2996 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 427, column: 5)
!2997 = !DILocalVariable(name: "propagate_amount", scope: !2998, file: !3, line: 429, type: !47)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !3, line: 428, column: 5)
!2999 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 427, column: 5)
!3000 = !DILocation(line: 0, scope: !2987)
!3001 = !DILocation(line: 0, scope: !2996)
!3002 = !DILocation(line: 427, column: 23, scope: !2999)
!3003 = !DILocation(line: 427, column: 5, scope: !2996)
!3004 = !DILocation(line: 427, column: 31, scope: !2999)
!3005 = !DILocation(line: 429, column: 32, scope: !2998)
!3006 = !{!3007}
!3007 = distinct !{!3007, !3008}
!3008 = distinct !{!3008, !"LVerDomain"}
!3009 = !DILocation(line: 429, column: 52, scope: !2998)
!3010 = !{!3011}
!3011 = distinct !{!3011, !3008}
!3012 = !DILocation(line: 429, column: 69, scope: !2998)
!3013 = !{!3014}
!3014 = distinct !{!3014, !3008}
!3015 = !DILocation(line: 429, column: 67, scope: !2998)
!3016 = !DILocation(line: 429, column: 84, scope: !2998)
!3017 = !DILocation(line: 429, column: 90, scope: !2998)
!3018 = !DILocation(line: 429, column: 48, scope: !2998)
!3019 = !DILocation(line: 430, column: 18, scope: !2998)
!3020 = !{!3021}
!3021 = distinct !{!3021, !3008}
!3022 = !DILocation(line: 430, column: 9, scope: !2998)
!3023 = !DILocation(line: 430, column: 16, scope: !2998)
!3024 = !{!3025}
!3025 = distinct !{!3025, !3008}
!3026 = !{!3007, !3011, !3014, !3021}
!3027 = distinct !{!3027, !3003, !3028, !1633, !1634}
!3028 = !DILocation(line: 431, column: 5, scope: !2996)
!3029 = !DILocation(line: 432, column: 1, scope: !2987)
!3030 = !DILocation(line: 0, scope: !2998)
!3031 = distinct !{!3031, !3003, !3028, !1633}
!3032 = distinct !DISubprogram(name: "x264_frame_filter", scope: !3, file: !3, line: 489, type: !3033, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3035)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{null, !107, !565, !47, !47}
!3035 = !{!3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3048, !3052, !3055, !3056}
!3036 = !DILocalVariable(name: "h", arg: 1, scope: !3032, file: !3, line: 489, type: !107)
!3037 = !DILocalVariable(name: "frame", arg: 2, scope: !3032, file: !3, line: 489, type: !565)
!3038 = !DILocalVariable(name: "mb_y", arg: 3, scope: !3032, file: !3, line: 489, type: !47)
!3039 = !DILocalVariable(name: "b_end", arg: 4, scope: !3032, file: !3, line: 489, type: !47)
!3040 = !DILocalVariable(name: "b_interlaced", scope: !3032, file: !3, line: 491, type: !2341)
!3041 = !DILocalVariable(name: "stride", scope: !3032, file: !3, line: 492, type: !2341)
!3042 = !DILocalVariable(name: "width", scope: !3032, file: !3, line: 493, type: !2341)
!3043 = !DILocalVariable(name: "start", scope: !3032, file: !3, line: 494, type: !47)
!3044 = !DILocalVariable(name: "height", scope: !3032, file: !3, line: 495, type: !47)
!3045 = !DILocalVariable(name: "offs", scope: !3032, file: !3, line: 496, type: !47)
!3046 = !DILocalVariable(name: "y", scope: !3047, file: !3, line: 501, type: !47)
!3047 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 501, column: 5)
!3048 = !DILocalVariable(name: "y", scope: !3049, file: !3, line: 526, type: !47)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 526, column: 9)
!3050 = distinct !DILexicalBlock(scope: !3051, file: !3, line: 518, column: 5)
!3051 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 517, column: 9)
!3052 = !DILocalVariable(name: "pix", scope: !3053, file: !3, line: 528, type: !46)
!3053 = distinct !DILexicalBlock(scope: !3054, file: !3, line: 527, column: 9)
!3054 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 526, column: 9)
!3055 = !DILocalVariable(name: "sum8", scope: !3053, file: !3, line: 529, type: !484)
!3056 = !DILocalVariable(name: "sum4", scope: !3053, file: !3, line: 530, type: !484)
!3057 = !DILocation(line: 0, scope: !3032)
!3058 = !DILocation(line: 491, column: 36, scope: !3032)
!3059 = !DILocation(line: 492, column: 31, scope: !3032)
!3060 = !DILocation(line: 492, column: 24, scope: !3032)
!3061 = !DILocation(line: 492, column: 43, scope: !3032)
!3062 = !DILocation(line: 493, column: 30, scope: !3032)
!3063 = !DILocation(line: 493, column: 23, scope: !3032)
!3064 = !DILocation(line: 494, column: 22, scope: !3032)
!3065 = !DILocation(line: 494, column: 26, scope: !3032)
!3066 = !DILocation(line: 494, column: 43, scope: !3032)
!3067 = !DILocation(line: 495, column: 20, scope: !3032)
!3068 = !DILocation(line: 495, column: 35, scope: !3032)
!3069 = !DILocation(line: 495, column: 28, scope: !3032)
!3070 = !DILocation(line: 495, column: 57, scope: !3032)
!3071 = !DILocation(line: 495, column: 74, scope: !3032)
!3072 = !DILocation(line: 498, column: 14, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 498, column: 9)
!3074 = !DILocation(line: 498, column: 9, scope: !3032)
!3075 = !DILocation(line: 0, scope: !3047)
!3076 = !DILocation(line: 501, column: 23, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 501, column: 5)
!3078 = !DILocation(line: 501, column: 5, scope: !3047)
!3079 = !DILocation(line: 496, column: 21, scope: !3032)
!3080 = !DILocation(line: 496, column: 29, scope: !3032)
!3081 = !DILocation(line: 517, column: 16, scope: !3051)
!3082 = !DILocation(line: 517, column: 9, scope: !3051)
!3083 = !DILocation(line: 517, column: 9, scope: !3032)
!3084 = !DILocation(line: 503, column: 15, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 502, column: 5)
!3086 = !DILocation(line: 504, column: 13, scope: !3085)
!3087 = !DILocation(line: 504, column: 32, scope: !3085)
!3088 = !DILocation(line: 505, column: 13, scope: !3085)
!3089 = !DILocation(line: 505, column: 32, scope: !3085)
!3090 = !DILocation(line: 506, column: 13, scope: !3085)
!3091 = !DILocation(line: 506, column: 32, scope: !3085)
!3092 = !DILocation(line: 507, column: 13, scope: !3085)
!3093 = !DILocation(line: 507, column: 29, scope: !3085)
!3094 = !DILocation(line: 509, column: 16, scope: !3085)
!3095 = !DILocation(line: 503, column: 9, scope: !3085)
!3096 = !DILocation(line: 501, column: 41, scope: !3077)
!3097 = !DILocation(line: 501, column: 53, scope: !3077)
!3098 = !DILocation(line: 501, column: 50, scope: !3077)
!3099 = distinct !{!3099, !3078, !3100}
!3100 = !DILocation(line: 510, column: 5, scope: !3047)
!3101 = !DILocation(line: 519, column: 19, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 519, column: 13)
!3103 = !DILocation(line: 519, column: 13, scope: !3050)
!3104 = !DILocation(line: 521, column: 44, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3102, file: !3, line: 520, column: 9)
!3106 = !DILocation(line: 521, column: 37, scope: !3105)
!3107 = !DILocation(line: 521, column: 53, scope: !3105)
!3108 = !DILocation(line: 521, column: 64, scope: !3105)
!3109 = !DILocation(line: 521, column: 71, scope: !3105)
!3110 = !DILocation(line: 521, column: 13, scope: !3105)
!3111 = !DILocation(line: 523, column: 9, scope: !3105)
!3112 = !DILocation(line: 524, column: 13, scope: !3050)
!3113 = !DILocation(line: 0, scope: !3049)
!3114 = !DILocation(line: 526, column: 31, scope: !3054)
!3115 = !DILocation(line: 526, column: 9, scope: !3049)
!3116 = !DILocation(line: 528, column: 30, scope: !3053)
!3117 = !DILocation(line: 528, column: 50, scope: !3053)
!3118 = !DILocation(line: 528, column: 46, scope: !3053)
!3119 = !DILocation(line: 528, column: 59, scope: !3053)
!3120 = !DILocation(line: 0, scope: !3053)
!3121 = !DILocation(line: 529, column: 37, scope: !3053)
!3122 = !DILocation(line: 529, column: 50, scope: !3053)
!3123 = !DILocation(line: 529, column: 54, scope: !3053)
!3124 = !DILocation(line: 529, column: 46, scope: !3053)
!3125 = !DILocation(line: 529, column: 63, scope: !3053)
!3126 = !DILocation(line: 531, column: 27, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3053, file: !3, line: 531, column: 17)
!3128 = !DILocation(line: 531, column: 17, scope: !3127)
!3129 = !DILocation(line: 0, scope: !3127)
!3130 = !DILocation(line: 531, column: 17, scope: !3053)
!3131 = !DILocation(line: 533, column: 23, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 532, column: 13)
!3133 = !DILocation(line: 533, column: 17, scope: !3132)
!3134 = !DILocation(line: 536, column: 21, scope: !3132)
!3135 = !DILocation(line: 534, column: 22, scope: !3132)
!3136 = !DILocation(line: 535, column: 41, scope: !3132)
!3137 = !DILocation(line: 535, column: 59, scope: !3132)
!3138 = !DILocation(line: 535, column: 38, scope: !3132)
!3139 = !DILocation(line: 535, column: 29, scope: !3132)
!3140 = !DILocation(line: 537, column: 27, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 536, column: 21)
!3142 = !DILocation(line: 537, column: 21, scope: !3141)
!3143 = !DILocation(line: 541, column: 23, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 540, column: 13)
!3145 = !DILocation(line: 541, column: 17, scope: !3144)
!3146 = !DILocation(line: 542, column: 21, scope: !3144)
!3147 = !DILocation(line: 543, column: 27, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 542, column: 21)
!3149 = !DILocation(line: 543, column: 48, scope: !3148)
!3150 = !DILocation(line: 543, column: 21, scope: !3148)
!3151 = distinct !{!3151, !3115, !3152}
!3152 = !DILocation(line: 545, column: 9, scope: !3049)
!3153 = !DILocation(line: 547, column: 1, scope: !3032)
!3154 = !DILocation(line: 0, scope: !2328)
!3155 = !DILocation(line: 69, column: 30, scope: !2328)
!3156 = !DILocation(line: 0, scope: !2343)
!3157 = !DILocation(line: 70, column: 22, scope: !2350)
!3158 = !DILocation(line: 70, column: 5, scope: !2343)
!3159 = !DILocation(line: 72, column: 9, scope: !2349)
!3160 = !DILocation(line: 0, scope: !1698, inlinedAt: !3161)
!3161 = distinct !DILocation(line: 72, column: 9, scope: !2349)
!3162 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3161)
!3163 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3161)
!3164 = !DILocation(line: 73, column: 9, scope: !2349)
!3165 = !DILocation(line: 0, scope: !1698, inlinedAt: !3166)
!3166 = distinct !DILocation(line: 73, column: 9, scope: !2349)
!3167 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3166)
!3168 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3166)
!3169 = !DILocation(line: 70, column: 32, scope: !2350)
!3170 = !DILocation(line: 70, column: 40, scope: !2350)
!3171 = !DILocation(line: 70, column: 55, scope: !2350)
!3172 = !DILocation(line: 70, column: 71, scope: !2350)
!3173 = distinct !{!3173, !3158, !3174}
!3174 = !DILocation(line: 91, column: 5, scope: !2343)
!3175 = !DILocation(line: 92, column: 1, scope: !2328)
!3176 = !DILocation(line: 75, column: 9, scope: !2349)
!3177 = !DILocation(line: 0, scope: !1698, inlinedAt: !3178)
!3178 = distinct !DILocation(line: 75, column: 9, scope: !2349)
!3179 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3178)
!3180 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3178)
!3181 = !DILocation(line: 76, column: 9, scope: !2349)
!3182 = !DILocation(line: 0, scope: !1698, inlinedAt: !3183)
!3183 = distinct !DILocation(line: 76, column: 9, scope: !2349)
!3184 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3183)
!3185 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3183)
!3186 = !DILocation(line: 77, column: 12, scope: !2349)
!3187 = !DILocation(line: 78, column: 9, scope: !2349)
!3188 = !DILocation(line: 0, scope: !1698, inlinedAt: !3189)
!3189 = distinct !DILocation(line: 78, column: 9, scope: !2349)
!3190 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3189)
!3191 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3189)
!3192 = !DILocation(line: 79, column: 9, scope: !2349)
!3193 = !DILocation(line: 0, scope: !1698, inlinedAt: !3194)
!3194 = distinct !DILocation(line: 79, column: 9, scope: !2349)
!3195 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3194)
!3196 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3194)
!3197 = !DILocation(line: 80, column: 9, scope: !2349)
!3198 = !DILocation(line: 0, scope: !1698, inlinedAt: !3199)
!3199 = distinct !DILocation(line: 80, column: 9, scope: !2349)
!3200 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3199)
!3201 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3199)
!3202 = !DILocation(line: 81, column: 9, scope: !2349)
!3203 = !DILocation(line: 0, scope: !1698, inlinedAt: !3204)
!3204 = distinct !DILocation(line: 81, column: 9, scope: !2349)
!3205 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3204)
!3206 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3204)
!3207 = !DILocation(line: 82, column: 12, scope: !2349)
!3208 = !DILocation(line: 83, column: 9, scope: !2349)
!3209 = !DILocation(line: 0, scope: !1698, inlinedAt: !3210)
!3210 = distinct !DILocation(line: 83, column: 9, scope: !2349)
!3211 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3210)
!3212 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3210)
!3213 = !DILocation(line: 84, column: 9, scope: !2349)
!3214 = !DILocation(line: 0, scope: !1698, inlinedAt: !3215)
!3215 = distinct !DILocation(line: 84, column: 9, scope: !2349)
!3216 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3215)
!3217 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3215)
!3218 = !DILocation(line: 85, column: 9, scope: !2349)
!3219 = !DILocation(line: 0, scope: !1698, inlinedAt: !3220)
!3220 = distinct !DILocation(line: 85, column: 9, scope: !2349)
!3221 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3220)
!3222 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3220)
!3223 = !DILocation(line: 86, column: 9, scope: !2349)
!3224 = !DILocation(line: 0, scope: !1698, inlinedAt: !3225)
!3225 = distinct !DILocation(line: 86, column: 9, scope: !2349)
!3226 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3225)
!3227 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3225)
!3228 = !DILocation(line: 87, column: 9, scope: !2349)
!3229 = !DILocation(line: 0, scope: !1698, inlinedAt: !3230)
!3230 = distinct !DILocation(line: 87, column: 9, scope: !2349)
!3231 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3230)
!3232 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3230)
!3233 = !DILocation(line: 88, column: 9, scope: !2349)
!3234 = !DILocation(line: 0, scope: !1698, inlinedAt: !3235)
!3235 = distinct !DILocation(line: 88, column: 9, scope: !2349)
!3236 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3235)
!3237 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3235)
!3238 = !DILocation(line: 89, column: 9, scope: !2349)
!3239 = !DILocation(line: 0, scope: !1698, inlinedAt: !3240)
!3240 = distinct !DILocation(line: 89, column: 9, scope: !2349)
!3241 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3240)
!3242 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3240)
!3243 = !DILocation(line: 90, column: 9, scope: !2349)
!3244 = !DILocation(line: 0, scope: !1698, inlinedAt: !3245)
!3245 = distinct !DILocation(line: 90, column: 9, scope: !2349)
!3246 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3245)
!3247 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3245)
!3248 = !DILocation(line: 91, column: 5, scope: !2349)
!3249 = distinct !DISubprogram(name: "mc_weight_w2", scope: !3, file: !3, line: 160, type: !3250, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3252)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{null, !46, !47, !46, !47, !1133, !47}
!3252 = !{!3253, !3254, !3255, !3256, !3257, !3258, !3259, !3263, !3266, !3269}
!3253 = !DILocalVariable(name: "dst", arg: 1, scope: !3249, file: !3, line: 160, type: !46)
!3254 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3249, file: !3, line: 160, type: !47)
!3255 = !DILocalVariable(name: "src", arg: 3, scope: !3249, file: !3, line: 160, type: !46)
!3256 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3249, file: !3, line: 160, type: !47)
!3257 = !DILocalVariable(name: "weight", arg: 5, scope: !3249, file: !3, line: 160, type: !1133)
!3258 = !DILocalVariable(name: "height", arg: 6, scope: !3249, file: !3, line: 160, type: !47)
!3259 = !DILocalVariable(name: "y", scope: !3260, file: !3, line: 160, type: !47)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 160, column: 1)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 160, column: 1)
!3262 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 160, column: 1)
!3263 = !DILocalVariable(name: "x", scope: !3264, file: !3, line: 160, type: !47)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 160, column: 1)
!3265 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 160, column: 1)
!3266 = !DILocalVariable(name: "y", scope: !3267, file: !3, line: 160, type: !47)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 160, column: 1)
!3268 = distinct !DILexicalBlock(scope: !3262, file: !3, line: 160, column: 1)
!3269 = !DILocalVariable(name: "x", scope: !3270, file: !3, line: 160, type: !47)
!3270 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 160, column: 1)
!3271 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 160, column: 1)
!3272 = !DILocation(line: 0, scope: !3249)
!3273 = !DILocation(line: 160, column: 1, scope: !3262)
!3274 = !DILocation(line: 160, column: 1, scope: !3249)
!3275 = !DILocation(line: 0, scope: !3267)
!3276 = !DILocation(line: 160, column: 1, scope: !3267)
!3277 = !DILocation(line: 0, scope: !3260)
!3278 = !DILocation(line: 160, column: 1, scope: !3260)
!3279 = !DILocation(line: 0, scope: !3264)
!3280 = !DILocation(line: 160, column: 1, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 160, column: 1)
!3282 = !DILocation(line: 0, scope: !1698, inlinedAt: !3283)
!3283 = distinct !DILocation(line: 160, column: 1, scope: !3281)
!3284 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3283)
!3285 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3283)
!3286 = !DILocation(line: 160, column: 1, scope: !3265)
!3287 = distinct !{!3287, !3278, !3278}
!3288 = !DILocation(line: 0, scope: !3270)
!3289 = !DILocation(line: 160, column: 1, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 160, column: 1)
!3291 = !DILocation(line: 0, scope: !1698, inlinedAt: !3292)
!3292 = distinct !DILocation(line: 160, column: 1, scope: !3290)
!3293 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3292)
!3294 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3292)
!3295 = !DILocation(line: 160, column: 1, scope: !3271)
!3296 = distinct !{!3296, !3276, !3276}
!3297 = distinct !DISubprogram(name: "mc_weight_w4", scope: !3, file: !3, line: 159, type: !3250, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3303, !3304, !3305, !3309, !3312, !3315}
!3299 = !DILocalVariable(name: "dst", arg: 1, scope: !3297, file: !3, line: 159, type: !46)
!3300 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3297, file: !3, line: 159, type: !47)
!3301 = !DILocalVariable(name: "src", arg: 3, scope: !3297, file: !3, line: 159, type: !46)
!3302 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3297, file: !3, line: 159, type: !47)
!3303 = !DILocalVariable(name: "weight", arg: 5, scope: !3297, file: !3, line: 159, type: !1133)
!3304 = !DILocalVariable(name: "height", arg: 6, scope: !3297, file: !3, line: 159, type: !47)
!3305 = !DILocalVariable(name: "y", scope: !3306, file: !3, line: 159, type: !47)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 159, column: 1)
!3307 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 159, column: 1)
!3308 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 159, column: 1)
!3309 = !DILocalVariable(name: "x", scope: !3310, file: !3, line: 159, type: !47)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !3, line: 159, column: 1)
!3311 = distinct !DILexicalBlock(scope: !3306, file: !3, line: 159, column: 1)
!3312 = !DILocalVariable(name: "y", scope: !3313, file: !3, line: 159, type: !47)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 159, column: 1)
!3314 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 159, column: 1)
!3315 = !DILocalVariable(name: "x", scope: !3316, file: !3, line: 159, type: !47)
!3316 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 159, column: 1)
!3317 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 159, column: 1)
!3318 = !DILocation(line: 0, scope: !3297)
!3319 = !DILocation(line: 159, column: 1, scope: !3308)
!3320 = !DILocation(line: 159, column: 1, scope: !3297)
!3321 = !DILocation(line: 0, scope: !3313)
!3322 = !DILocation(line: 159, column: 1, scope: !3313)
!3323 = !DILocation(line: 0, scope: !3306)
!3324 = !DILocation(line: 159, column: 1, scope: !3306)
!3325 = !DILocation(line: 0, scope: !3310)
!3326 = !DILocation(line: 159, column: 1, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3310, file: !3, line: 159, column: 1)
!3328 = !DILocation(line: 0, scope: !1698, inlinedAt: !3329)
!3329 = distinct !DILocation(line: 159, column: 1, scope: !3327)
!3330 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3329)
!3331 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3329)
!3332 = !DILocation(line: 159, column: 1, scope: !3311)
!3333 = distinct !{!3333, !3324, !3324}
!3334 = !DILocation(line: 0, scope: !3316)
!3335 = !DILocation(line: 159, column: 1, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3316, file: !3, line: 159, column: 1)
!3337 = !DILocation(line: 0, scope: !1698, inlinedAt: !3338)
!3338 = distinct !DILocation(line: 159, column: 1, scope: !3336)
!3339 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3338)
!3340 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3338)
!3341 = !DILocation(line: 159, column: 1, scope: !3317)
!3342 = distinct !{!3342, !3322, !3322}
!3343 = distinct !DISubprogram(name: "mc_weight_w8", scope: !3, file: !3, line: 158, type: !3250, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3344)
!3344 = !{!3345, !3346, !3347, !3348, !3349, !3350, !3351, !3355, !3358, !3361}
!3345 = !DILocalVariable(name: "dst", arg: 1, scope: !3343, file: !3, line: 158, type: !46)
!3346 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3343, file: !3, line: 158, type: !47)
!3347 = !DILocalVariable(name: "src", arg: 3, scope: !3343, file: !3, line: 158, type: !46)
!3348 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3343, file: !3, line: 158, type: !47)
!3349 = !DILocalVariable(name: "weight", arg: 5, scope: !3343, file: !3, line: 158, type: !1133)
!3350 = !DILocalVariable(name: "height", arg: 6, scope: !3343, file: !3, line: 158, type: !47)
!3351 = !DILocalVariable(name: "y", scope: !3352, file: !3, line: 158, type: !47)
!3352 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 158, column: 1)
!3353 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 158, column: 1)
!3354 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 158, column: 1)
!3355 = !DILocalVariable(name: "x", scope: !3356, file: !3, line: 158, type: !47)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 158, column: 1)
!3357 = distinct !DILexicalBlock(scope: !3352, file: !3, line: 158, column: 1)
!3358 = !DILocalVariable(name: "y", scope: !3359, file: !3, line: 158, type: !47)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !3, line: 158, column: 1)
!3360 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 158, column: 1)
!3361 = !DILocalVariable(name: "x", scope: !3362, file: !3, line: 158, type: !47)
!3362 = distinct !DILexicalBlock(scope: !3363, file: !3, line: 158, column: 1)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 158, column: 1)
!3364 = !DILocation(line: 0, scope: !3343)
!3365 = !DILocation(line: 158, column: 1, scope: !3354)
!3366 = !DILocation(line: 158, column: 1, scope: !3343)
!3367 = !DILocation(line: 0, scope: !3359)
!3368 = !DILocation(line: 158, column: 1, scope: !3359)
!3369 = !DILocation(line: 0, scope: !3352)
!3370 = !DILocation(line: 158, column: 1, scope: !3352)
!3371 = !DILocation(line: 0, scope: !3356)
!3372 = !DILocation(line: 158, column: 1, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3356, file: !3, line: 158, column: 1)
!3374 = !DILocation(line: 0, scope: !1698, inlinedAt: !3375)
!3375 = distinct !DILocation(line: 158, column: 1, scope: !3373)
!3376 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3375)
!3377 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3375)
!3378 = !DILocation(line: 158, column: 1, scope: !3357)
!3379 = distinct !{!3379, !3370, !3370}
!3380 = !DILocation(line: 0, scope: !3362)
!3381 = !DILocation(line: 158, column: 1, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 158, column: 1)
!3383 = !DILocation(line: 0, scope: !1698, inlinedAt: !3384)
!3384 = distinct !DILocation(line: 158, column: 1, scope: !3382)
!3385 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3384)
!3386 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3384)
!3387 = !DILocation(line: 158, column: 1, scope: !3363)
!3388 = distinct !{!3388, !3368, !3368}
!3389 = distinct !DISubprogram(name: "mc_weight_w12", scope: !3, file: !3, line: 157, type: !3250, scopeLine: 157, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3390)
!3390 = !{!3391, !3392, !3393, !3394, !3395, !3396, !3397, !3401, !3404, !3407}
!3391 = !DILocalVariable(name: "dst", arg: 1, scope: !3389, file: !3, line: 157, type: !46)
!3392 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3389, file: !3, line: 157, type: !47)
!3393 = !DILocalVariable(name: "src", arg: 3, scope: !3389, file: !3, line: 157, type: !46)
!3394 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3389, file: !3, line: 157, type: !47)
!3395 = !DILocalVariable(name: "weight", arg: 5, scope: !3389, file: !3, line: 157, type: !1133)
!3396 = !DILocalVariable(name: "height", arg: 6, scope: !3389, file: !3, line: 157, type: !47)
!3397 = !DILocalVariable(name: "y", scope: !3398, file: !3, line: 157, type: !47)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 157, column: 1)
!3399 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 157, column: 1)
!3400 = distinct !DILexicalBlock(scope: !3389, file: !3, line: 157, column: 1)
!3401 = !DILocalVariable(name: "x", scope: !3402, file: !3, line: 157, type: !47)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 157, column: 1)
!3403 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 157, column: 1)
!3404 = !DILocalVariable(name: "y", scope: !3405, file: !3, line: 157, type: !47)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !3, line: 157, column: 1)
!3406 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 157, column: 1)
!3407 = !DILocalVariable(name: "x", scope: !3408, file: !3, line: 157, type: !47)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !3, line: 157, column: 1)
!3409 = distinct !DILexicalBlock(scope: !3405, file: !3, line: 157, column: 1)
!3410 = !DILocation(line: 0, scope: !3389)
!3411 = !DILocation(line: 157, column: 1, scope: !3400)
!3412 = !DILocation(line: 157, column: 1, scope: !3389)
!3413 = !DILocation(line: 0, scope: !3405)
!3414 = !DILocation(line: 157, column: 1, scope: !3405)
!3415 = !DILocation(line: 0, scope: !3398)
!3416 = !DILocation(line: 157, column: 1, scope: !3398)
!3417 = !DILocation(line: 0, scope: !3402)
!3418 = !DILocation(line: 157, column: 1, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 157, column: 1)
!3420 = !DILocation(line: 0, scope: !1698, inlinedAt: !3421)
!3421 = distinct !DILocation(line: 157, column: 1, scope: !3419)
!3422 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3421)
!3423 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3421)
!3424 = !DILocation(line: 157, column: 1, scope: !3403)
!3425 = distinct !{!3425, !3416, !3416}
!3426 = !DILocation(line: 0, scope: !3408)
!3427 = !DILocation(line: 157, column: 1, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3408, file: !3, line: 157, column: 1)
!3429 = !DILocation(line: 0, scope: !1698, inlinedAt: !3430)
!3430 = distinct !DILocation(line: 157, column: 1, scope: !3428)
!3431 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3430)
!3432 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3430)
!3433 = !DILocation(line: 157, column: 1, scope: !3409)
!3434 = distinct !{!3434, !3414, !3414}
!3435 = distinct !DISubprogram(name: "mc_weight_w16", scope: !3, file: !3, line: 156, type: !3250, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3436)
!3436 = !{!3437, !3438, !3439, !3440, !3441, !3442, !3443, !3447, !3450, !3453}
!3437 = !DILocalVariable(name: "dst", arg: 1, scope: !3435, file: !3, line: 156, type: !46)
!3438 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3435, file: !3, line: 156, type: !47)
!3439 = !DILocalVariable(name: "src", arg: 3, scope: !3435, file: !3, line: 156, type: !46)
!3440 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3435, file: !3, line: 156, type: !47)
!3441 = !DILocalVariable(name: "weight", arg: 5, scope: !3435, file: !3, line: 156, type: !1133)
!3442 = !DILocalVariable(name: "height", arg: 6, scope: !3435, file: !3, line: 156, type: !47)
!3443 = !DILocalVariable(name: "y", scope: !3444, file: !3, line: 156, type: !47)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 156, column: 1)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 156, column: 1)
!3446 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 156, column: 1)
!3447 = !DILocalVariable(name: "x", scope: !3448, file: !3, line: 156, type: !47)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 156, column: 1)
!3449 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 156, column: 1)
!3450 = !DILocalVariable(name: "y", scope: !3451, file: !3, line: 156, type: !47)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 156, column: 1)
!3452 = distinct !DILexicalBlock(scope: !3446, file: !3, line: 156, column: 1)
!3453 = !DILocalVariable(name: "x", scope: !3454, file: !3, line: 156, type: !47)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 156, column: 1)
!3455 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 156, column: 1)
!3456 = !DILocation(line: 0, scope: !3435)
!3457 = !DILocation(line: 156, column: 1, scope: !3446)
!3458 = !DILocation(line: 156, column: 1, scope: !3435)
!3459 = !DILocation(line: 0, scope: !3451)
!3460 = !DILocation(line: 156, column: 1, scope: !3451)
!3461 = !DILocation(line: 0, scope: !3444)
!3462 = !DILocation(line: 156, column: 1, scope: !3444)
!3463 = !DILocation(line: 0, scope: !3448)
!3464 = !DILocation(line: 156, column: 1, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3448, file: !3, line: 156, column: 1)
!3466 = !DILocation(line: 0, scope: !1698, inlinedAt: !3467)
!3467 = distinct !DILocation(line: 156, column: 1, scope: !3465)
!3468 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3467)
!3469 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3467)
!3470 = !DILocation(line: 156, column: 1, scope: !3449)
!3471 = distinct !{!3471, !3462, !3462}
!3472 = !DILocation(line: 0, scope: !3454)
!3473 = !DILocation(line: 156, column: 1, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 156, column: 1)
!3475 = !DILocation(line: 0, scope: !1698, inlinedAt: !3476)
!3476 = distinct !DILocation(line: 156, column: 1, scope: !3474)
!3477 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3476)
!3478 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3476)
!3479 = !DILocation(line: 156, column: 1, scope: !3455)
!3480 = distinct !{!3480, !3460, !3460}
!3481 = distinct !DISubprogram(name: "mc_weight_w20", scope: !3, file: !3, line: 155, type: !3250, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3482)
!3482 = !{!3483, !3484, !3485, !3486, !3487, !3488, !3489, !3493, !3496, !3499}
!3483 = !DILocalVariable(name: "dst", arg: 1, scope: !3481, file: !3, line: 155, type: !46)
!3484 = !DILocalVariable(name: "i_dst_stride", arg: 2, scope: !3481, file: !3, line: 155, type: !47)
!3485 = !DILocalVariable(name: "src", arg: 3, scope: !3481, file: !3, line: 155, type: !46)
!3486 = !DILocalVariable(name: "i_src_stride", arg: 4, scope: !3481, file: !3, line: 155, type: !47)
!3487 = !DILocalVariable(name: "weight", arg: 5, scope: !3481, file: !3, line: 155, type: !1133)
!3488 = !DILocalVariable(name: "height", arg: 6, scope: !3481, file: !3, line: 155, type: !47)
!3489 = !DILocalVariable(name: "y", scope: !3490, file: !3, line: 155, type: !47)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 155, column: 1)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 155, column: 1)
!3492 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 155, column: 1)
!3493 = !DILocalVariable(name: "x", scope: !3494, file: !3, line: 155, type: !47)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 155, column: 1)
!3495 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 155, column: 1)
!3496 = !DILocalVariable(name: "y", scope: !3497, file: !3, line: 155, type: !47)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !3, line: 155, column: 1)
!3498 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 155, column: 1)
!3499 = !DILocalVariable(name: "x", scope: !3500, file: !3, line: 155, type: !47)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 155, column: 1)
!3501 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 155, column: 1)
!3502 = !DILocation(line: 0, scope: !3481)
!3503 = !DILocation(line: 155, column: 1, scope: !3492)
!3504 = !DILocation(line: 155, column: 1, scope: !3481)
!3505 = !DILocation(line: 0, scope: !3497)
!3506 = !DILocation(line: 155, column: 1, scope: !3497)
!3507 = !DILocation(line: 0, scope: !3490)
!3508 = !DILocation(line: 155, column: 1, scope: !3490)
!3509 = !DILocation(line: 0, scope: !3494)
!3510 = !DILocation(line: 155, column: 1, scope: !3494)
!3511 = !DILocation(line: 155, column: 1, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 155, column: 1)
!3513 = !{!3514}
!3514 = distinct !{!3514, !3515}
!3515 = distinct !{!3515, !"LVerDomain"}
!3516 = !{!3517}
!3517 = distinct !{!3517, !3515}
!3518 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3519)
!3519 = distinct !DILocation(line: 155, column: 1, scope: !3512)
!3520 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3519)
!3521 = !{!3522}
!3522 = distinct !{!3522, !3515}
!3523 = !{!3514, !3517}
!3524 = !DILocation(line: 155, column: 1, scope: !3495)
!3525 = distinct !{!3525, !3508, !3508}
!3526 = !DILocation(line: 0, scope: !1698, inlinedAt: !3519)
!3527 = distinct !{!3527, !3510, !3510, !1633}
!3528 = !DILocation(line: 0, scope: !3500)
!3529 = !DILocation(line: 155, column: 1, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3500, file: !3, line: 155, column: 1)
!3531 = !DILocation(line: 0, scope: !1698, inlinedAt: !3532)
!3532 = distinct !DILocation(line: 155, column: 1, scope: !3530)
!3533 = !DILocation(line: 197, column: 13, scope: !1698, inlinedAt: !3532)
!3534 = !DILocation(line: 197, column: 12, scope: !1698, inlinedAt: !3532)
!3535 = !DILocation(line: 155, column: 1, scope: !3501)
!3536 = distinct !{!3536, !3506, !3506}
