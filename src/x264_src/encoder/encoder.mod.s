	.text
	.file	"encoder.c"
	.file	0 "/home/yjs/workspace/x264-test/src" "x264_src/encoder/encoder.c" md5 0x11d332f3cd54995855f9b0a3c96f40a5
	.file	1 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	2 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h" md5 0x2bf2ae53c58c01b1a1b9383b5195125c
	.file	3 "x264_src/common" "macroblock.h" md5 0x15f4a9c1d53f4196a5f2b80807bb8b1a
	.file	4 "x264_src/common" "bs.h" md5 0x5e3e135f4389fadb006d4bc4f2055a86
	.file	5 "x264_src/common" "common.h" md5 0x5afac7bf2f5673f1628c455d7d320ad7
	.file	6 "x264_src/common" "predict.h" md5 0x5f9c3dfea82ca04aa9f99900c2f3609a
	.file	7 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h" md5 0x55bcbdc3159515ebd91d351a70d505f4
	.file	8 "x264_src/common" "set.h" md5 0x36bc2db0356ac829288e85d371259e00
	.file	9 "x264_src" "x264.h" md5 0x0b04871e4f52d5a4d8833c501cba2584
	.file	10 "x264_src/common" "pixel.h" md5 0xe9056d80edbb4dc2514d271d596c298e
	.file	11 "/usr/include" "stdint.h" md5 0xa48e64edacc5b19f56c99745232c963c
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function x264_encoder_open_96
.LCPI0_0:
	.long	0                               # 0x0
	.long	4294967295                      # 0xffffffff
	.long	0                               # 0x0
	.long	0                               # 0x0
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0
.LCPI0_1:
	.quad	0x3fee666666666666              # double 0.94999999999999996
.LCPI0_3:
	.quad	0x412e848000000000              # double 1.0E+6
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI0_2:
	.long	0x3f800000                      # float 1
	.text
	.globl	x264_encoder_open_96
	.p2align	4, 0x90
	.type	x264_encoder_open_96,@function
x264_encoder_open_96:                   # @x264_encoder_open_96
.Lfunc_begin0:
	.loc	0 884 0                         # x264_src/encoder/encoder.c:884:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_open_96:param <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1032, %rsp                     # imm = 0x408
	.cfi_def_cfa_offset 1088
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
.Ltmp0:
	.loc	0 889 5 prologue_end            # x264_src/encoder/encoder.c:889:5
	movl	$33344, %edi                    # imm = 0x8240
.Ltmp1:
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	callq	x264_malloc@PLT
.Ltmp2:
	movq	%rax, %rbx
.Ltmp3:
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 889 5 is_stmt 0               # x264_src/encoder/encoder.c:889:5
	testq	%rax, %rax
.Ltmp4:
	.loc	0 889 5                         # x264_src/encoder/encoder.c:889:5
	je	.LBB0_69
.Ltmp5:
# %bb.1:                                # %do.end
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 889 5                         # x264_src/encoder/encoder.c:889:5
	movl	$33344, %edx                    # imm = 0x8240
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp6:
	.loc	0 892 5 is_stmt 1               # x264_src/encoder/encoder.c:892:5
	movl	$704, %edx                      # imm = 0x2C0
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
.Ltmp7:
	.loc	0 894 16                        # x264_src/encoder/encoder.c:894:16
	movq	696(%r14), %rax
	.loc	0 894 9 is_stmt 0               # x264_src/encoder/encoder.c:894:9
	testq	%rax, %rax
.Ltmp8:
	.loc	0 894 9                         # x264_src/encoder/encoder.c:894:9
	je	.LBB0_3
.Ltmp9:
# %bb.2:                                # %if.then6
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 895 9 is_stmt 1               # x264_src/encoder/encoder.c:895:9
	movq	%r14, %rdi
	callq	*%rax
.Ltmp10:
.LBB0_3:                                # %if.end8
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 897 9                         # x264_src/encoder/encoder.c:897:9
	movq	%rbx, %rdi
	callq	x264_validate_parameters
.Ltmp11:
	.loc	0 897 39 is_stmt 0              # x264_src/encoder/encoder.c:897:39
	testl	%eax, %eax
.Ltmp12:
	.loc	0 897 9                         # x264_src/encoder/encoder.c:897:9
	js	.LBB0_69
.Ltmp13:
# %bb.4:                                # %if.end11
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 900 18 is_stmt 1              # x264_src/encoder/encoder.c:900:18
	movq	152(%rbx), %rsi
	.loc	0 900 9 is_stmt 0               # x264_src/encoder/encoder.c:900:9
	testq	%rsi, %rsi
.Ltmp14:
	.loc	0 900 9                         # x264_src/encoder/encoder.c:900:9
	je	.LBB0_6
.Ltmp15:
# %bb.5:                                # %if.then14
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 901 13 is_stmt 1              # x264_src/encoder/encoder.c:901:13
	movq	%rbx, %rdi
	callq	x264_cqm_parse_file@PLT
.Ltmp16:
	.loc	0 901 61 is_stmt 0              # x264_src/encoder/encoder.c:901:61
	testl	%eax, %eax
.Ltmp17:
	.loc	0 901 13                        # x264_src/encoder/encoder.c:901:13
	js	.LBB0_69
.Ltmp18:
.LBB0_6:                                # %if.end21
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 904 21 is_stmt 1              # x264_src/encoder/encoder.c:904:21
	movq	568(%rbx), %rdi
	.loc	0 904 9 is_stmt 0               # x264_src/encoder/encoder.c:904:9
	testq	%rdi, %rdi
.Ltmp19:
	.loc	0 904 9                         # x264_src/encoder/encoder.c:904:9
	je	.LBB0_8
.Ltmp20:
# %bb.7:                                # %if.then24
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 905 36 is_stmt 1              # x264_src/encoder/encoder.c:905:36
	callq	spec_strdup@PLT
.Ltmp21:
	.loc	0 905 34 is_stmt 0              # x264_src/encoder/encoder.c:905:34
	movq	%rax, 568(%rbx)
.Ltmp22:
.LBB0_8:                                # %if.end32
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 906 21 is_stmt 1              # x264_src/encoder/encoder.c:906:21
	movq	584(%rbx), %rdi
	.loc	0 906 9 is_stmt 0               # x264_src/encoder/encoder.c:906:9
	testq	%rdi, %rdi
.Ltmp23:
	.loc	0 906 9                         # x264_src/encoder/encoder.c:906:9
	je	.LBB0_10
.Ltmp24:
# %bb.9:                                # %if.then36
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 907 35 is_stmt 1              # x264_src/encoder/encoder.c:907:35
	callq	spec_strdup@PLT
.Ltmp25:
	.loc	0 907 33 is_stmt 0              # x264_src/encoder/encoder.c:907:33
	movq	%rax, 584(%rbx)
.Ltmp26:
.LBB0_10:                               # %if.end44
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 909 5 is_stmt 1               # x264_src/encoder/encoder.c:909:5
	movq	%rbx, %rdi
	movq	%rbx, %rsi
	movl	$1, %edx
	callq	x264_set_aspect_ratio
.Ltmp27:
	.loc	0 911 37                        # x264_src/encoder/encoder.c:911:37
	leaq	652(%rbx), %rdi
	.loc	0 911 58 is_stmt 0              # x264_src/encoder/encoder.c:911:58
	leaq	656(%rbx), %rsi
	.loc	0 911 5                         # x264_src/encoder/encoder.c:911:5
	callq	x264_reduce_fraction@PLT
.Ltmp28:
	.loc	0 912 37 is_stmt 1              # x264_src/encoder/encoder.c:912:37
	leaq	660(%rbx), %rdi
	.loc	0 912 63 is_stmt 0              # x264_src/encoder/encoder.c:912:63
	leaq	664(%rbx), %rsi
	.loc	0 912 5                         # x264_src/encoder/encoder.c:912:5
	callq	x264_reduce_fraction@PLT
.Ltmp29:
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$4294967295, %eax               # imm = 0xFFFFFFFF
	.loc	0 915 16 is_stmt 1              # x264_src/encoder/encoder.c:915:16
	movq	%rax, 1844(%rbx)
	.loc	0 917 21                        # x264_src/encoder/encoder.c:917:21
	movl	$0, 3336(%rbx)
	.loc	0 918 42                        # x264_src/encoder/encoder.c:918:42
	movl	664(%rbx), %r8d
.Ltmp30:
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8d
	.loc	0 919 9                         # x264_src/encoder/encoder.c:919:9
	cmpl	$0, 668(%rbx)
.Ltmp31:
	.loc	0 919 9 is_stmt 0               # x264_src/encoder/encoder.c:919:9
	je	.LBB0_13
.Ltmp32:
# %bb.11:                               # %if.then54
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8d
	.loc	0 922 40 is_stmt 1              # x264_src/encoder/encoder.c:922:40
	cmpl	$0, 100(%rbx)
	je	.LBB0_13
.Ltmp33:
# %bb.12:                               # %cond.end
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8d
	.loc	0 922 61 is_stmt 0              # x264_src/encoder/encoder.c:922:61
	cmpl	$1, 112(%rbx)
	movl	$3, %r14d
.Ltmp34:
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	sbbl	$0, %r14d
	.loc	0 922 38                        # x264_src/encoder/encoder.c:922:38
	movl	%r14d, 3340(%rbx)
.Ltmp35:
	.loc	0 925 56 is_stmt 1              # x264_src/encoder/encoder.c:925:56
	imull	%r8d, %r14d
.Ltmp36:
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r14d
	.loc	0 927 32                        # x264_src/encoder/encoder.c:927:32
	movl	660(%rbx), %ecx
	.loc	0 926 13                        # x264_src/encoder/encoder.c:926:13
	movq	%r14, (%rsp)
	movl	$.L.str, %edx
	movq	%rbx, %rdi
	movl	$3, %esi
                                        # kill: def $r8d killed $r8d killed $r8
	movl	%ecx, %r9d
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp37:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	%r14, %r8
.Ltmp38:
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r14
	.loc	0 934 30 is_stmt 1              # x264_src/encoder/encoder.c:934:30
	testl	$-2147483648, %r8d              # imm = 0x80000000
.Ltmp39:
	.loc	0 934 9 is_stmt 0               # x264_src/encoder/encoder.c:934:9
	jne	.LBB0_15
.Ltmp40:
.LBB0_17:                               # %if.end81
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8
	.loc	0 939 29 is_stmt 1              # x264_src/encoder/encoder.c:939:29
	movl	%r8d, 664(%rbx)
	.loc	0 941 18                        # x264_src/encoder/encoder.c:941:18
	leaq	1896(%rbx), %rdi
	.loc	0 941 12 is_stmt 0              # x264_src/encoder/encoder.c:941:12
	movq	%rdi, 3200(%rbx)
	.loc	0 942 37 is_stmt 1              # x264_src/encoder/encoder.c:942:37
	movl	644(%rbx), %esi
	.loc	0 942 5 is_stmt 0               # x264_src/encoder/encoder.c:942:5
	movq	%rbx, %rdx
	callq	x264_sps_init@PLT
.Ltmp41:
	.loc	0 944 18 is_stmt 1              # x264_src/encoder/encoder.c:944:18
	leaq	3208(%rbx), %rdi
	.loc	0 944 12 is_stmt 0              # x264_src/encoder/encoder.c:944:12
	movq	%rdi, 3328(%rbx)
	.loc	0 945 37 is_stmt 1              # x264_src/encoder/encoder.c:945:37
	movl	644(%rbx), %esi
	.loc	0 945 61 is_stmt 0              # x264_src/encoder/encoder.c:945:61
	movq	3200(%rbx), %rcx
	.loc	0 945 5                         # x264_src/encoder/encoder.c:945:5
	movq	%rbx, %rdx
	callq	x264_pps_init@PLT
.Ltmp42:
	.loc	0 947 5 is_stmt 1               # x264_src/encoder/encoder.c:947:5
	movq	%rbx, %rdi
	movl	$1, %esi
	callq	x264_validate_levels@PLT
.Ltmp43:
	.loc	0 949 54                        # x264_src/encoder/encoder.c:949:54
	movq	3328(%rbx), %rax
	.loc	0 949 59 is_stmt 0              # x264_src/encoder/encoder.c:949:59
	movslq	44(%rax), %rax
	.loc	0 949 49                        # x264_src/encoder/encoder.c:949:49
	leaq	i_chroma_qp_table+12(%rax), %rax
	.loc	0 949 24                        # x264_src/encoder/encoder.c:949:24
	movq	%rax, 7216(%rbx)
.Ltmp44:
	.loc	0 951 9 is_stmt 1               # x264_src/encoder/encoder.c:951:9
	movq	%rbx, %rdi
	callq	x264_cqm_init@PLT
.Ltmp45:
	.loc	0 951 28 is_stmt 0              # x264_src/encoder/encoder.c:951:28
	testl	%eax, %eax
.Ltmp46:
	.loc	0 951 9                         # x264_src/encoder/encoder.c:951:9
	js	.LBB0_69
.Ltmp47:
# %bb.18:                               # %if.end100
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 954 27 is_stmt 1              # x264_src/encoder/encoder.c:954:27
	movq	3200(%rbx), %rdx
	.loc	0 954 53 is_stmt 0              # x264_src/encoder/encoder.c:954:53
	movl	1088(%rdx), %eax
	.loc	0 954 43                        # x264_src/encoder/encoder.c:954:43
	imull	1084(%rdx), %eax
	.loc	0 954 22                        # x264_src/encoder/encoder.c:954:22
	movl	%eax, 16368(%rbx)
.Ltmp48:
	.loc	0 957 18 is_stmt 1              # x264_src/encoder/encoder.c:957:18
	movl	104(%rbx), %ecx
	.loc	0 957 36 is_stmt 0              # x264_src/encoder/encoder.c:957:36
	cmpl	$2, %ecx
	.loc	0 957 60                        # x264_src/encoder/encoder.c:957:60
	jne	.LBB0_21
.Ltmp49:
# %bb.19:                               # %land.lhs.true
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 957 64                        # x264_src/encoder/encoder.c:957:64
	cmpl	$0, 576(%rbx)
.Ltmp50:
	.loc	0 957 9                         # x264_src/encoder/encoder.c:957:9
	je	.LBB0_20
.Ltmp51:
.LBB0_21:                               # %if.else122
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 960 38 is_stmt 1              # x264_src/encoder/encoder.c:960:38
	movl	100(%rbx), %edi
	movl	%edi, %ebp
.Ltmp52:
	.loc	0 961 21                        # x264_src/encoder/encoder.c:961:21
	movl	552(%rbx), %esi
	.loc	0 961 9 is_stmt 0               # x264_src/encoder/encoder.c:961:9
	testl	%esi, %esi
	.loc	0 961 31                        # x264_src/encoder/encoder.c:961:31
	jne	.LBB0_24
.Ltmp53:
.LBB0_23:                               # %lor.lhs.false
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 961 34                        # x264_src/encoder/encoder.c:961:34
	cmpl	$0, 528(%rbx)
.Ltmp54:
	.loc	0 961 9                         # x264_src/encoder/encoder.c:961:9
	jne	.LBB0_24
	jmp	.LBB0_25
.Ltmp55:
.LBB0_13:                               # %if.else
	#DEBUG_VALUE: x264_encoder_open_96:param <- $r14
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8d
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movl	$1, 3340(%rbx)
.Ltmp56:
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8
	.loc	0 934 30 is_stmt 1              # x264_src/encoder/encoder.c:934:30
	testl	$-2147483648, %r8d              # imm = 0x80000000
.Ltmp57:
	.loc	0 934 9 is_stmt 0               # x264_src/encoder/encoder.c:934:9
	je	.LBB0_17
.Ltmp58:
.LBB0_15:                               # %if.then80
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:new_timebase_den <- $r8
	.loc	0 936 9 is_stmt 1               # x264_src/encoder/encoder.c:936:9
	movl	$.L.str.1, %edx
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movq	%r8, %rcx
.Ltmp59:
.LBB0_16:                               # %fail
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp60:
.LBB0_69:                               # %fail
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_LABEL: x264_encoder_open_96:fail
	.loc	0 1141 5 is_stmt 1              # x264_src/encoder/encoder.c:1141:5
	movq	%rbx, %rdi
	callq	x264_free@PLT
.Ltmp61:
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	xorl	%ebx, %ebx
.Ltmp62:
.LBB0_117:                              # %cleanup869
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1143 1 is_stmt 1              # x264_src/encoder/encoder.c:1143:1
	movq	%rbx, %rax
	.loc	0 1143 1 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:1143:1
	addq	$1032, %rsp                     # imm = 0x408
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp63:
.LBB0_20:                               # %if.then110
	.cfi_def_cfa_offset 1088
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 958 29 is_stmt 1              # x264_src/encoder/encoder.c:958:29
	movl	100(%rbx), %edi
	cmpl	$4, %edi
	movl	$3, %ebp
	cmovgel	%edi, %ebp
	.loc	0 958 58 is_stmt 0              # x264_src/encoder/encoder.c:958:58
	shll	$2, %ebp
.Ltmp64:
	.loc	0 961 21 is_stmt 1              # x264_src/encoder/encoder.c:961:21
	movl	552(%rbx), %esi
	.loc	0 961 9 is_stmt 0               # x264_src/encoder/encoder.c:961:9
	testl	%esi, %esi
	.loc	0 961 31                        # x264_src/encoder/encoder.c:961:31
	je	.LBB0_23
.Ltmp65:
.LBB0_24:                               # %if.then134
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 962 29 is_stmt 1              # x264_src/encoder/encoder.c:962:29
	movl	556(%rbx), %eax
	cmpl	%eax, %ebp
	cmovlel	%eax, %ebp
.Ltmp66:
.LBB0_25:                               # %if.end152
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 0 29 is_stmt 0                # x264_src/encoder/encoder.c:0:29
	movl	1852(%rbx), %eax
	.loc	0 964 45 is_stmt 1              # x264_src/encoder/encoder.c:964:45
	addl	%ebp, %eax
	.loc	0 965 35                        # x264_src/encoder/encoder.c:965:35
	movl	16(%rbx), %r8d
	.loc	0 965 23 is_stmt 0              # x264_src/encoder/encoder.c:965:23
	addl	%r8d, %eax
	decl	%eax
	xorl	%r8d, %r8d
	.loc	0 966 26 is_stmt 1              # x264_src/encoder/encoder.c:966:26
	cmpl	$0, 648(%rbx)
	.loc	0 966 47 is_stmt 0              # x264_src/encoder/encoder.c:966:47
	je	.LBB0_26
.Ltmp67:
# %bb.27:                               # %land.rhs
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 0 47                          # x264_src/encoder/encoder.c:0:47
	movb	$1, %r9b
	.loc	0 966 75                        # x264_src/encoder/encoder.c:966:75
	cmpl	$2, 488(%rbx)
	.loc	0 966 90                        # x264_src/encoder/encoder.c:966:90
	je	.LBB0_30
.Ltmp68:
# %bb.28:                               # %lor.lhs.false167
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 966 93                        # x264_src/encoder/encoder.c:966:93
	cmpl	$0, 560(%rbx)
	.loc	0 967 50 is_stmt 1              # x264_src/encoder/encoder.c:967:50
	jne	.LBB0_30
.Ltmp69:
# %bb.29:                               # %lor.rhs
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	cmpl	$0, 528(%rbx)
	setne	%r9b
	jmp	.LBB0_30
.Ltmp70:
.LBB0_26:
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 0 50 is_stmt 0                # x264_src/encoder/encoder.c:0:50
	xorl	%r9d, %r9d
.Ltmp71:
.LBB0_30:                               # %land.end
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 966 47 is_stmt 1              # x264_src/encoder/encoder.c:966:47
	movzbl	%r9b, %r9d
	.loc	0 966 23 is_stmt 0              # x264_src/encoder/encoder.c:966:23
	addl	%r9d, %eax
	movl	%eax, 14612(%rbx)
	.loc	0 968 32 is_stmt 1              # x264_src/encoder/encoder.c:968:32
	testl	%edi, %edi
	je	.LBB0_32
.Ltmp72:
# %bb.31:                               # %cond.true181
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 968 53 is_stmt 0              # x264_src/encoder/encoder.c:968:53
	cmpl	$1, 112(%rbx)
	movl	$2, %r8d
	sbbl	$0, %r8d
.Ltmp73:
.LBB0_32:                               # %cond.end187
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 968 30                        # x264_src/encoder/encoder.c:968:30
	movl	%r8d, 14616(%rbx)
	.loc	0 970 37 is_stmt 1              # x264_src/encoder/encoder.c:970:37
	movl	80(%rbx), %edi
	.loc	0 970 26 is_stmt 0              # x264_src/encoder/encoder.c:970:26
	movl	%edi, 14604(%rbx)
	.loc	0 971 28 is_stmt 1              # x264_src/encoder/encoder.c:971:28
	movl	1288(%rdx), %r8d
	cmpl	%edi, %r8d
	cmovll	%r8d, %edi
	.loc	0 971 26 is_stmt 0              # x264_src/encoder/encoder.c:971:26
	movl	%edi, 14608(%rbx)
	.loc	0 972 40 is_stmt 1              # x264_src/encoder/encoder.c:972:40
	movl	1292(%rdx), %edx
	.loc	0 972 26 is_stmt 0              # x264_src/encoder/encoder.c:972:26
	movl	%edx, 14600(%rbx)
	.loc	0 973 32 is_stmt 1              # x264_src/encoder/encoder.c:973:32
	cmpl	$0, 576(%rbx)
	.loc	0 974 9                         # x264_src/encoder/encoder.c:974:9
	je	.LBB0_33
.Ltmp74:
# %bb.37:                               # %land.rhs250
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 980 89                        # x264_src/encoder/encoder.c:980:89
	cmpl	$0, 528(%rbx)
	setg	%dl
	xorl	%ecx, %ecx
	jmp	.LBB0_38
.Ltmp75:
.LBB0_33:                               # %land.rhs214
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 974 26                        # x264_src/encoder/encoder.c:974:26
	movl	488(%rbx), %edx
	.loc	0 975 11                        # x264_src/encoder/encoder.c:975:11
	addl	$-3, %edx
	cmpl	$-2, %edx
	setae	%dl
	testl	%ecx, %ecx
	setne	%dil
	movb	$1, %cl
	orb	%dl, %dil
	jne	.LBB0_36
.Ltmp76:
# %bb.34:                               # %lor.lhs.false230
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 978 11                        # x264_src/encoder/encoder.c:978:11
	orl	92(%rbx), %esi
	jne	.LBB0_36
.Ltmp77:
# %bb.35:                               # %lor.rhs238
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 979 47                        # x264_src/encoder/encoder.c:979:47
	cmpl	$2, 396(%rbx)
	sete	%cl
.Ltmp78:
.LBB0_36:                               # %land.end243.thread
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 974 9                         # x264_src/encoder/encoder.c:974:9
	movzbl	%cl, %ecx
	xorl	%edx, %edx
.Ltmp79:
.LBB0_38:                               # %land.end256
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 980 56                        # x264_src/encoder/encoder.c:980:56
	movzbl	%dl, %edx
	.loc	0 980 29 is_stmt 0              # x264_src/encoder/encoder.c:980:29
	orl	%ecx, %edx
	movl	%edx, 14672(%rbx)
	.loc	0 981 55 is_stmt 1              # x264_src/encoder/encoder.c:981:55
	movl	388(%rbx), %ecx
	.loc	0 981 35 is_stmt 0              # x264_src/encoder/encoder.c:981:35
	shrl	$5, %ecx
	andl	$1, %ecx
	.loc	0 981 33                        # x264_src/encoder/encoder.c:981:33
	movl	%ecx, 14676(%rbx)
	xorl	%ecx, %ecx
	.loc	0 983 33 is_stmt 1              # x264_src/encoder/encoder.c:983:33
	subl	84(%rbx), %ecx
	.loc	0 983 31 is_stmt 0              # x264_src/encoder/encoder.c:983:31
	movl	%ecx, 14592(%rbx)
	.loc	0 984 26 is_stmt 1              # x264_src/encoder/encoder.c:984:26
	movl	$0, 14596(%rbx)
.Ltmp80:
	.loc	0 987 5                         # x264_src/encoder/encoder.c:987:5
	leal	24(,%rax,8), %edi
.Ltmp81:
	.loc	0 985 29                        # x264_src/encoder/encoder.c:985:29
	pcmpeqd	%xmm0, %xmm0
	movdqa	%xmm0, 14656(%rbx)
.Ltmp82:
	.loc	0 987 5                         # x264_src/encoder/encoder.c:987:5
	callq	x264_malloc@PLT
.Ltmp83:
	movq	%rax, 14424(%rbx)
.Ltmp84:
	.loc	0 987 5 is_stmt 0               # x264_src/encoder/encoder.c:987:5
	testq	%rax, %rax
.Ltmp85:
	.loc	0 987 5                         # x264_src/encoder/encoder.c:987:5
	je	.LBB0_69
.Ltmp86:
# %bb.39:                               # %do.end289
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 987 5                         # x264_src/encoder/encoder.c:987:5
	movslq	14612(%rbx), %rcx
	leaq	24(,%rcx,8), %rdx
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp87:
	.loc	0 989 5 is_stmt 1               # x264_src/encoder/encoder.c:989:5
	movl	1852(%rbx), %eax
	leal	160(,%rax,8), %edi
	callq	x264_malloc@PLT
.Ltmp88:
	movq	%rax, 14432(%rbx)
.Ltmp89:
	.loc	0 989 5 is_stmt 0               # x264_src/encoder/encoder.c:989:5
	testq	%rax, %rax
.Ltmp90:
	.loc	0 989 5                         # x264_src/encoder/encoder.c:989:5
	je	.LBB0_69
.Ltmp91:
# %bb.40:                               # %do.end318
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 989 5                         # x264_src/encoder/encoder.c:989:5
	movslq	1852(%rbx), %rcx
	leaq	160(,%rcx,8), %rdx
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp92:
	.loc	0 990 5 is_stmt 1               # x264_src/encoder/encoder.c:990:5
	movl	100(%rbx), %eax
	addl	16(%rbx), %eax
	addl	1852(%rbx), %eax
	leal	24(,%rax,8), %edi
	callq	x264_malloc@PLT
.Ltmp93:
	movq	%rax, 14416(%rbx)
.Ltmp94:
	.loc	0 990 5 is_stmt 0               # x264_src/encoder/encoder.c:990:5
	testq	%rax, %rax
.Ltmp95:
	.loc	0 990 5                         # x264_src/encoder/encoder.c:990:5
	je	.LBB0_69
.Ltmp96:
# %bb.41:                               # %do.end349
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 990 5                         # x264_src/encoder/encoder.c:990:5
	movl	16(%rbx), %ecx
	addl	100(%rbx), %ecx
	movl	1852(%rbx), %edx
	addl	%edx, %ecx
	addl	$3, %ecx
	movslq	%ecx, %rdx
	shlq	$3, %rdx
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp97:
	.loc	0 992 42 is_stmt 1              # x264_src/encoder/encoder.c:992:42
	cmpl	$0, 396(%rbx)
.Ltmp98:
	.loc	0 992 9 is_stmt 0               # x264_src/encoder/encoder.c:992:9
	jle	.LBB0_44
.Ltmp99:
# %bb.42:                               # %do.body371
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 993 9 is_stmt 1               # x264_src/encoder/encoder.c:993:9
	movl	1852(%rbx), %edi
	shll	$5, %edi
	callq	x264_malloc@PLT
.Ltmp100:
	movq	%rax, 14440(%rbx)
.Ltmp101:
	.loc	0 993 9 is_stmt 0               # x264_src/encoder/encoder.c:993:9
	testq	%rax, %rax
.Ltmp102:
	.loc	0 993 9                         # x264_src/encoder/encoder.c:993:9
	je	.LBB0_69
.Ltmp103:
# %bb.43:                               # %do.end385
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 993 9                         # x264_src/encoder/encoder.c:993:9
	movslq	1852(%rbx), %rdx
	shlq	$5, %rdx
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp104:
.LBB0_44:                               # %if.end394
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 994 15 is_stmt 1              # x264_src/encoder/encoder.c:994:15
	movl	$0, 14696(%rbx)
	.loc	0 995 15                        # x264_src/encoder/encoder.c:995:15
	movl	$0, 14856(%rbx)
	.loc	0 996 20                        # x264_src/encoder/encoder.c:996:20
	movl	$0, 1880(%rbx)
	.loc	0 996 59 is_stmt 0              # x264_src/encoder/encoder.c:996:59
	movsd	.LCPI0_0(%rip), %xmm0           # xmm0 = [0,4294967295,0,0]
	movups	%xmm0, 1864(%rbx)
	.loc	0 998 5 is_stmt 1               # x264_src/encoder/encoder.c:998:5
	callq	x264_rdo_init@PLT
.Ltmp105:
	.loc	0 1001 39                       # x264_src/encoder/encoder.c:1001:39
	movl	(%rbx), %edi
	.loc	0 1001 47 is_stmt 0             # x264_src/encoder/encoder.c:1001:47
	leaq	31248(%rbx), %rsi
	.loc	0 1001 5                        # x264_src/encoder/encoder.c:1001:5
	callq	x264_predict_16x16_init@PLT
.Ltmp106:
	.loc	0 1002 38 is_stmt 1             # x264_src/encoder/encoder.c:1002:38
	movl	(%rbx), %edi
	.loc	0 1002 46 is_stmt 0             # x264_src/encoder/encoder.c:1002:46
	leaq	31304(%rbx), %rsi
	.loc	0 1002 5                        # x264_src/encoder/encoder.c:1002:5
	callq	x264_predict_8x8c_init@PLT
.Ltmp107:
	.loc	0 1003 37 is_stmt 1             # x264_src/encoder/encoder.c:1003:37
	movl	(%rbx), %edi
	.loc	0 1003 45 is_stmt 0             # x264_src/encoder/encoder.c:1003:45
	leaq	31360(%rbx), %rsi
	.loc	0 1003 62                       # x264_src/encoder/encoder.c:1003:62
	leaq	31552(%rbx), %rdx
	.loc	0 1003 5                        # x264_src/encoder/encoder.c:1003:5
	callq	x264_predict_8x8_init@PLT
.Ltmp108:
	.loc	0 1004 37 is_stmt 1             # x264_src/encoder/encoder.c:1004:37
	movl	(%rbx), %edi
	.loc	0 1004 45 is_stmt 0             # x264_src/encoder/encoder.c:1004:45
	leaq	31456(%rbx), %rsi
	.loc	0 1004 5                        # x264_src/encoder/encoder.c:1004:5
	callq	x264_predict_4x4_init@PLT
.Ltmp109:
	.loc	0 1005 10 is_stmt 1             # x264_src/encoder/encoder.c:1005:10
	cmpl	$0, 128(%rbx)
.Ltmp110:
	.loc	0 1005 9 is_stmt 0              # x264_src/encoder/encoder.c:1005:9
	jne	.LBB0_46
.Ltmp111:
# %bb.45:                               # %if.then407
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 1006 9 is_stmt 1              # x264_src/encoder/encoder.c:1006:9
	xorl	%eax, %eax
	callq	x264_init_vlc_tables@PLT
.Ltmp112:
.LBB0_46:                               # %if.end408
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 1007 31                       # x264_src/encoder/encoder.c:1007:31
	movl	(%rbx), %edi
	.loc	0 1007 40 is_stmt 0             # x264_src/encoder/encoder.c:1007:40
	leaq	31560(%rbx), %rsi
	.loc	0 1007 5                        # x264_src/encoder/encoder.c:1007:5
	callq	x264_pixel_init@PLT
.Ltmp113:
	.loc	0 1008 29 is_stmt 1             # x264_src/encoder/encoder.c:1008:29
	movl	(%rbx), %edi
	.loc	0 1008 38 is_stmt 0             # x264_src/encoder/encoder.c:1008:38
	leaq	32912(%rbx), %rsi
	.loc	0 1008 5                        # x264_src/encoder/encoder.c:1008:5
	callq	x264_dct_init@PLT
.Ltmp114:
	.loc	0 1009 41 is_stmt 1             # x264_src/encoder/encoder.c:1009:41
	leaq	33032(%rbx), %rsi
	.loc	0 1009 32 is_stmt 0             # x264_src/encoder/encoder.c:1009:32
	movl	(%rbx), %edi
	.loc	0 1009 59                       # x264_src/encoder/encoder.c:1009:59
	movl	136(%rbx), %edx
	.loc	0 1009 5                        # x264_src/encoder/encoder.c:1009:5
	callq	x264_zigzag_init@PLT
.Ltmp115:
	.loc	0 1010 28 is_stmt 1             # x264_src/encoder/encoder.c:1010:28
	movl	(%rbx), %edi
	.loc	0 1010 37 is_stmt 0             # x264_src/encoder/encoder.c:1010:37
	leaq	32616(%rbx), %rsi
	.loc	0 1010 5                        # x264_src/encoder/encoder.c:1010:5
	callq	x264_mc_init@PLT
.Ltmp116:
	.loc	0 1011 34 is_stmt 1             # x264_src/encoder/encoder.c:1011:34
	movl	(%rbx), %esi
	.loc	0 1011 43 is_stmt 0             # x264_src/encoder/encoder.c:1011:43
	leaq	33080(%rbx), %rdx
	.loc	0 1011 5                        # x264_src/encoder/encoder.c:1011:5
	movq	%rbx, %rdi
	callq	x264_quant_init@PLT
.Ltmp117:
	.loc	0 1012 33 is_stmt 1             # x264_src/encoder/encoder.c:1012:33
	movl	(%rbx), %edi
	.loc	0 1012 42 is_stmt 0             # x264_src/encoder/encoder.c:1012:42
	movq	%rbx, %rsi
	addq	$33256, %rsi                    # imm = 0x81E8
	.loc	0 1012 5                        # x264_src/encoder/encoder.c:1012:5
	callq	x264_deblock_init@PLT
.Ltmp118:
	.loc	0 1013 5 is_stmt 1              # x264_src/encoder/encoder.c:1013:5
	callq	x264_dct_init_weights@PLT
.Ltmp119:
	.loc	0 1015 5                        # x264_src/encoder/encoder.c:1015:5
	movq	%rbx, %rdi
	callq	mbcmp_init
.Ltmp120:
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	movabsq	$16452428047346028, %rax        # imm = 0x3A73656974696C
	.loc	0 1017 15 is_stmt 1             # x264_src/encoder/encoder.c:1017:15
	movq	%rax, 48(%rsp)
	movdqu	.L.str.2(%rip), %xmm0
	movdqa	%xmm0, 32(%rsp)
	.loc	0 1017 13 is_stmt 0             # x264_src/encoder/encoder.c:1017:13
	leaq	55(%rsp), %rcx
.Ltmp121:
	#DEBUG_VALUE: x264_encoder_open_96:p <- $rcx
	#DEBUG_VALUE: i <- 0
	.loc	0 1018 39 is_stmt 1             # x264_src/encoder/encoder.c:1018:39
	movq	x264_cpu_names@GOTPCREL(%rip), %rax
	movl	16(%rax), %r13d
.Ltmp122:
	.loc	0 1034 19                       # x264_src/encoder/encoder.c:1034:19
	movl	(%rbx), %r12d
.Ltmp123:
	.loc	0 1018 5                        # x264_src/encoder/encoder.c:1018:5
	testl	%r13d, %r13d
	je	.LBB0_60
.Ltmp124:
# %bb.47:                               # %for.body.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- $rcx
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_encoder_open_96:p <- $rcx
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
.Ltmp125:
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1020 14 is_stmt 1             # x264_src/encoder/encoder.c:1020:14
	movq	x264_cpu_names@GOTPCREL(%rip), %r15
	movl	$.L.str.3, %esi
	movq	%r15, %rdi
	callq	strcmp@PLT
.Ltmp126:
	testl	%eax, %eax
	setne	%al
	testl	$384, %r12d                     # imm = 0x180
	sete	%cl
	.loc	0 1021 13                       # x264_src/encoder/encoder.c:1021:13
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB0_51
.Ltmp127:
# %bb.48:                               # %if.end440.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1023 14                       # x264_src/encoder/encoder.c:1023:14
	movq	x264_cpu_names@GOTPCREL(%rip), %rdi
	movl	$.L.str.4, %esi
	callq	strcmp@PLT
.Ltmp128:
	testl	%eax, %eax
	setne	%al
	movl	%r12d, %ecx
	andl	$1026, %ecx                     # imm = 0x402
	cmpl	$2, %ecx
	sete	%cl
	.loc	0 1024 13                       # x264_src/encoder/encoder.c:1024:13
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB0_51
.Ltmp129:
# %bb.49:                               # %if.end458.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1026 14                       # x264_src/encoder/encoder.c:1026:14
	movq	x264_cpu_names@GOTPCREL(%rip), %rdi
	movl	$.L.str.5, %esi
	callq	strcmp@PLT
.Ltmp130:
	testl	%eax, %eax
	setne	%al
	testl	$16384, %r12d                   # imm = 0x4000
	sete	%cl
	.loc	0 1027 13                       # x264_src/encoder/encoder.c:1027:13
	orb	%al, %cl
	notl	%r12d
	testl	%r12d, %r13d
	sete	%al
	andb	%cl, %al
	cmpb	$1, %al
	jne	.LBB0_51
.Ltmp131:
# %bb.50:                               # %if.then495.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1032 18                       # x264_src/encoder/encoder.c:1032:18
	movq	x264_cpu_names@GOTPCREL(%rip), %rdx
	movl	$.L.str.6, %esi
	leaq	55(%rsp), %r14
	movq	%r14, %rdi
	xorl	%eax, %eax
	callq	sprintf@PLT
.Ltmp132:
	.loc	0 1032 15 is_stmt 0             # x264_src/encoder/encoder.c:1032:15
	cltq
	addq	%rax, %r14
.Ltmp133:
	#DEBUG_VALUE: x264_encoder_open_96:p <- $r14
	.loc	0 0 15                          # x264_src/encoder/encoder.c:0:15
	movq	%r14, 16(%rsp)                  # 8-byte Spill
.Ltmp134:
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
.LBB0_51:                               # %for.inc.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	.loc	0 1018 39 is_stmt 1             # x264_src/encoder/encoder.c:1018:39
	movl	36(%r15), %r13d
.Ltmp135:
	.loc	0 1018 5 is_stmt 0              # x264_src/encoder/encoder.c:1018:5
	testl	%r13d, %r13d
	je	.LBB0_59
.Ltmp136:
# %bb.52:                               # %for.body.preheader4
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	addq	$56, %r15
	jmp	.LBB0_53
.Ltmp137:
	.p2align	4, 0x90
.LBB0_58:                               # %for.inc
                                        #   in Loop: Header=BB0_53 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 56, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_minus, DW_OP_consts 20, DW_OP_div, DW_OP_consts 2, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1018 39                       # x264_src/encoder/encoder.c:1018:39
	movl	(%r15), %r13d
.Ltmp138:
	.loc	0 1018 5                        # x264_src/encoder/encoder.c:1018:5
	addq	$20, %r15
	testl	%r13d, %r13d
	je	.LBB0_59
.Ltmp139:
.LBB0_53:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 56, DW_OP_LLVM_arg 0, DW_OP_plus, DW_OP_minus, DW_OP_consts 20, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1020 14 is_stmt 1             # x264_src/encoder/encoder.c:1020:14
	leaq	-36(%r15), %r12
	movl	$.L.str.3, %esi
	movq	%r12, %rdi
	callq	strcmp@PLT
.Ltmp140:
	testl	%eax, %eax
	setne	%al
.Ltmp141:
	.loc	0 1029 29                       # x264_src/encoder/encoder.c:1029:29
	movl	(%rbx), %r14d
	testl	$384, %r14d                     # imm = 0x180
	sete	%cl
.Ltmp142:
	.loc	0 1021 13                       # x264_src/encoder/encoder.c:1021:13
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB0_58
.Ltmp143:
# %bb.54:                               # %if.end440
                                        #   in Loop: Header=BB0_53 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1023 14                       # x264_src/encoder/encoder.c:1023:14
	movl	$.L.str.4, %esi
	movq	%r12, %rdi
	callq	strcmp@PLT
.Ltmp144:
	testl	%eax, %eax
	setne	%al
	movl	%r14d, %ecx
	andl	$1026, %ecx                     # imm = 0x402
	cmpl	$2, %ecx
	sete	%cl
	.loc	0 1024 13                       # x264_src/encoder/encoder.c:1024:13
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB0_58
.Ltmp145:
# %bb.55:                               # %if.end458
                                        #   in Loop: Header=BB0_53 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1026 14                       # x264_src/encoder/encoder.c:1026:14
	movl	$.L.str.5, %esi
	movq	%r12, %rdi
	callq	strcmp@PLT
.Ltmp146:
	testl	%eax, %eax
	setne	%al
	testl	$16384, %r14d                   # imm = 0x4000
	sete	%cl
	.loc	0 1027 13                       # x264_src/encoder/encoder.c:1027:13
	orb	%al, %cl
	notl	%r14d
	testl	%r14d, %r13d
	sete	%al
	andb	%cl, %al
	cmpb	$1, %al
	jne	.LBB0_58
.Ltmp147:
# %bb.56:                               # %lor.lhs.false485
                                        #   in Loop: Header=BB0_53 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1031 43                       # x264_src/encoder/encoder.c:1031:43
	cmpl	-40(%r15), %r13d
	je	.LBB0_58
.Ltmp148:
# %bb.57:                               # %if.then495
                                        #   in Loop: Header=BB0_53 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1032 18                       # x264_src/encoder/encoder.c:1032:18
	movl	$.L.str.6, %esi
	movq	16(%rsp), %r14                  # 8-byte Reload
	movq	%r14, %rdi
	movq	%r12, %rdx
	xorl	%eax, %eax
	callq	sprintf@PLT
.Ltmp149:
	.loc	0 1032 15 is_stmt 0             # x264_src/encoder/encoder.c:1032:15
	cltq
	addq	%rax, %r14
.Ltmp150:
	#DEBUG_VALUE: x264_encoder_open_96:p <- $r14
	.loc	0 0 15                          # x264_src/encoder/encoder.c:0:15
	movq	%r14, 16(%rsp)                  # 8-byte Spill
.Ltmp151:
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	jmp	.LBB0_58
.Ltmp152:
.LBB0_59:                               # %for.cond.cleanup.loopexit
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 1034 19 is_stmt 1             # x264_src/encoder/encoder.c:1034:19
	movl	(%rbx), %r12d
	movq	16(%rsp), %rcx                  # 8-byte Reload
.Ltmp153:
.LBB0_60:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- $rcx
	.loc	0 1034 10 is_stmt 0             # x264_src/encoder/encoder.c:1034:10
	testl	%r12d, %r12d
.Ltmp154:
	.loc	0 1034 9                        # x264_src/encoder/encoder.c:1034:9
	jne	.LBB0_62
.Ltmp155:
# %bb.61:                               # %if.then507
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:p <- $rcx
	.loc	0 1035 14 is_stmt 1             # x264_src/encoder/encoder.c:1035:14
	movl	$2188654, 3(%rcx)               # imm = 0x21656E
	movl	$1852796448, (%rcx)             # imm = 0x6E6F6E20
.Ltmp156:
	#DEBUG_VALUE: x264_encoder_open_96:p <- undef
.LBB0_62:                               # %if.end511
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 0 14 is_stmt 0                # x264_src/encoder/encoder.c:0:14
	leaq	32(%rsp), %rcx
	.loc	0 1036 5 is_stmt 1              # x264_src/encoder/encoder.c:1036:5
	movl	$.L.str.8, %edx
	movq	%rbx, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp157:
	.loc	0 1038 27                       # x264_src/encoder/encoder.c:1038:27
	movl	496(%rbx), %r14d
.Ltmp158:
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1038 40 is_stmt 0             # x264_src/encoder/encoder.c:1038:40
	cmpl	500(%rbx), %r14d
.Ltmp159:
	.loc	0 1038 5                        # x264_src/encoder/encoder.c:1038:5
	jg	.LBB0_63
.Ltmp160:
.LBB0_68:                               # %for.body520
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1039 13 is_stmt 1             # x264_src/encoder/encoder.c:1039:13
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	x264_analyse_init_costs@PLT
.Ltmp161:
	testl	%eax, %eax
.Ltmp162:
	#DEBUG_VALUE: x264_encoder_open_96:qp <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14d
	.loc	0 1039 13 is_stmt 0             # x264_src/encoder/encoder.c:1039:13
	jne	.LBB0_69
.Ltmp163:
# %bb.67:                               # %for.cond515
                                        #   in Loop: Header=BB0_68 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14d
	.loc	0 1038 67 is_stmt 1             # x264_src/encoder/encoder.c:1038:67
	leal	1(%r14), %eax
.Ltmp164:
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $eax
	.loc	0 1038 40 is_stmt 0             # x264_src/encoder/encoder.c:1038:40
	cmpl	500(%rbx), %r14d
	movl	%eax, %r14d
.Ltmp165:
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1038 5                        # x264_src/encoder/encoder.c:1038:5
	jl	.LBB0_68
.Ltmp166:
.LBB0_63:                               # %for.end527
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1041 9 is_stmt 1              # x264_src/encoder/encoder.c:1041:9
	movq	%rbx, %rdi
	movl	$12, %esi
	callq	x264_analyse_init_costs@PLT
.Ltmp167:
	testl	%eax, %eax
.Ltmp168:
	.loc	0 1041 9 is_stmt 0              # x264_src/encoder/encoder.c:1041:9
	jne	.LBB0_69
.Ltmp169:
# %bb.64:                               # %if.end531
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1045 9 is_stmt 1              # x264_src/encoder/encoder.c:1045:9
	movq	3544(%rbx), %rax
	.loc	0 1045 29 is_stmt 0             # x264_src/encoder/encoder.c:1045:29
	cmpw	$24, 4026(%rax)
.Ltmp170:
	.loc	0 1045 9                        # x264_src/encoder/encoder.c:1045:9
	jne	.LBB0_65
.Ltmp171:
# %bb.70:                               # %if.end538
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1052 18 is_stmt 1             # x264_src/encoder/encoder.c:1052:18
	movl	$392, 28(%rsp)                  # imm = 0x188
	movl	$-256, %eax
.Ltmp172:
	.loc	0 1053 26                       # x264_src/encoder/encoder.c:1053:26
	andl	28(%rsp), %eax
	cmpl	$256, %eax                      # imm = 0x100
.Ltmp173:
	.loc	0 1053 9 is_stmt 0              # x264_src/encoder/encoder.c:1053:9
	jne	.LBB0_71
.Ltmp174:
# %bb.72:                               # %if.end542
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1063 18 is_stmt 1             # x264_src/encoder/encoder.c:1063:18
	movl	$0, 1760(%rbx)
	.loc	0 1064 26                       # x264_src/encoder/encoder.c:1064:26
	movl	20(%rbx), %eax
	imull	24(%rbx), %eax
	shll	$2, %eax
	xorps	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movsd	%xmm0, 16(%rsp)                 # 8-byte Spill
	cmpl	$2, 488(%rbx)
	jne	.LBB0_74
.Ltmp175:
# %bb.73:                               # %cond.true553
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	cvtsi2sdl	496(%rbx), %xmm1
	movsd	.LCPI0_1(%rip), %xmm0           # xmm0 = [9.4999999999999996E-1,0.0E+0]
	callq	pow@PLT
.Ltmp176:
	jmp	.LBB0_75
.Ltmp177:
.LBB0_65:                               # %if.then537
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1047 9                        # x264_src/encoder/encoder.c:1047:9
	movl	$.L.str.9, %edx
	jmp	.LBB0_66
.Ltmp178:
.LBB0_71:                               # %if.then541
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1055 9                        # x264_src/encoder/encoder.c:1055:9
	movl	$.L.str.10, %edx
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp179:
	.loc	0 1057 9                        # x264_src/encoder/encoder.c:1057:9
	movl	$.L.str.11, %edx
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp180:
	.loc	0 1058 9                        # x264_src/encoder/encoder.c:1058:9
	movl	$.L.str.12, %edx
.Ltmp181:
.LBB0_66:                               # %fail
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp182:
	.loc	0 1048 9 is_stmt 1              # x264_src/encoder/encoder.c:1048:9
	jmp	.LBB0_69
.Ltmp183:
.LBB0_74:                               # %cond.false559
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1064 26                       # x264_src/encoder/encoder.c:1064:26
	cvtsi2sdl	492(%rbx), %xmm1
	movsd	.LCPI0_1(%rip), %xmm0           # xmm0 = [9.4999999999999996E-1,0.0E+0]
	callq	pow@PLT
.Ltmp184:
	movapd	%xmm0, %xmm1
	movss	.LCPI0_2(%rip), %xmm0           # xmm0 = [1.0E+0,0.0E+0,0.0E+0,0.0E+0]
	maxss	536(%rbx), %xmm0
	cvtss2sd	%xmm0, %xmm0
	mulsd	%xmm1, %xmm0
.Ltmp185:
.LBB0_75:                               # %cond.end577
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	mulsd	16(%rsp), %xmm0                 # 8-byte Folded Reload
	movl	$1000000, %eax                  # imm = 0xF4240
	movsd	.LCPI0_3(%rip), %xmm1           # xmm1 = [1.0E+6,0.0E+0]
	ucomisd	%xmm0, %xmm1
	ja	.LBB0_80
.Ltmp186:
# %bb.76:                               # %cond.false583
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	movl	20(%rbx), %eax
	imull	24(%rbx), %eax
	shll	$2, %eax
	xorps	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	movsd	%xmm0, 16(%rsp)                 # 8-byte Spill
	cmpl	$2, 488(%rbx)
	jne	.LBB0_78
.Ltmp187:
# %bb.77:                               # %cond.true596
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	xorps	%xmm1, %xmm1
	cvtsi2sdl	496(%rbx), %xmm1
	movsd	.LCPI0_1(%rip), %xmm0           # xmm0 = [9.4999999999999996E-1,0.0E+0]
	callq	pow@PLT
.Ltmp188:
	jmp	.LBB0_79
.Ltmp189:
.LBB0_78:                               # %cond.false602
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	xorps	%xmm1, %xmm1
	cvtsi2sdl	492(%rbx), %xmm1
	movsd	.LCPI0_1(%rip), %xmm0           # xmm0 = [9.4999999999999996E-1,0.0E+0]
	callq	pow@PLT
.Ltmp190:
	movapd	%xmm0, %xmm1
	movss	.LCPI0_2(%rip), %xmm0           # xmm0 = [1.0E+0,0.0E+0,0.0E+0,0.0E+0]
	maxss	536(%rbx), %xmm0
	cvtss2sd	%xmm0, %xmm0
	mulsd	%xmm1, %xmm0
.Ltmp191:
.LBB0_79:                               # %cond.end622
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	mulsd	16(%rsp), %xmm0                 # 8-byte Folded Reload
	cvttsd2si	%xmm0, %eax
.Ltmp192:
.LBB0_80:                               # %cond.end625
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1064 24 is_stmt 0             # x264_src/encoder/encoder.c:1064:24
	movl	%eax, 1776(%rbx)
.Ltmp193:
	.loc	0 1068 5 is_stmt 1              # x264_src/encoder/encoder.c:1068:5
	leal	(%rax,%rax,2), %eax
	movl	%eax, %edi
	shrl	$31, %edi
	addl	%eax, %edi
	sarl	%edi
	addl	$4, %edi
	callq	x264_malloc@PLT
.Ltmp194:
	movq	%rax, 1832(%rbx)
.Ltmp195:
	.loc	0 1068 5 is_stmt 0              # x264_src/encoder/encoder.c:1068:5
	testq	%rax, %rax
.Ltmp196:
	.loc	0 1068 5                        # x264_src/encoder/encoder.c:1068:5
	je	.LBB0_69
.Ltmp197:
# %bb.81:                               # %do.end640
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	.loc	0 1069 33 is_stmt 1             # x264_src/encoder/encoder.c:1069:33
	movl	1776(%rbx), %eax
	.loc	0 1069 45 is_stmt 0             # x264_src/encoder/encoder.c:1069:45
	leal	(%rax,%rax,2), %eax
	.loc	0 1069 48                       # x264_src/encoder/encoder.c:1069:48
	movl	%eax, %ecx
	shrl	$31, %ecx
	addl	%eax, %ecx
	sarl	%ecx
	.loc	0 1069 51                       # x264_src/encoder/encoder.c:1069:51
	addl	$4, %ecx
	.loc	0 1069 24                       # x264_src/encoder/encoder.c:1069:24
	movl	%ecx, 1840(%rbx)
	.loc	0 1071 18 is_stmt 1             # x264_src/encoder/encoder.c:1071:18
	movq	%rbx, 704(%rbx)
.Ltmp198:
	#DEBUG_VALUE: i <- 1
	.loc	0 1072 44                       # x264_src/encoder/encoder.c:1072:44
	cmpl	$1, 16(%rbx)
	.loc	0 1072 34 is_stmt 0             # x264_src/encoder/encoder.c:1072:34
	movl	4(%rbx), %eax
	.loc	0 1072 44                       # x264_src/encoder/encoder.c:1072:44
	sbbl	$-1, %eax
	.loc	0 1072 23                       # x264_src/encoder/encoder.c:1072:23
	cmpl	$2, %eax
.Ltmp199:
	.loc	0 1072 5                        # x264_src/encoder/encoder.c:1072:5
	jl	.LBB0_85
.Ltmp200:
# %bb.82:                               # %do.body662.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: x264_encoder_open_96:qp <- $r14d
	#DEBUG_VALUE: i <- 1
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$89, %r14d
.Ltmp201:
.LBB0_84:                               # %do.body662
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1073 9 is_stmt 1              # x264_src/encoder/encoder.c:1073:9
	movl	$33344, %edi                    # imm = 0x8240
	callq	x264_malloc@PLT
.Ltmp202:
	movq	%rax, (%rbx,%r14,8)
.Ltmp203:
	.loc	0 1073 9 is_stmt 0              # x264_src/encoder/encoder.c:1073:9
	testq	%rax, %rax
.Ltmp204:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	.loc	0 1073 9                        # x264_src/encoder/encoder.c:1073:9
	je	.LBB0_69
.Ltmp205:
# %bb.83:                               # %for.cond648
                                        #   in Loop: Header=BB0_84 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- [DW_OP_constu 87, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1072 34 is_stmt 1             # x264_src/encoder/encoder.c:1072:34
	movslq	4(%rbx), %rax
	.loc	0 1072 44 is_stmt 0             # x264_src/encoder/encoder.c:1072:44
	cmpl	$1, 16(%rbx)
	sbbq	$-1, %rax
	.loc	0 1072 23                       # x264_src/encoder/encoder.c:1072:23
	leaq	1(%r14), %rcx
	addq	$-87, %r14
.Ltmp206:
	cmpq	%rax, %r14
	movq	%rcx, %r14
.Ltmp207:
	.loc	0 1072 5                        # x264_src/encoder/encoder.c:1072:5
	jl	.LBB0_84
.Ltmp208:
.LBB0_85:                               # %for.end677
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	.loc	0 1075 9 is_stmt 1              # x264_src/encoder/encoder.c:1075:9
	movq	%rbx, %rdi
	movl	%ebp, %esi
	callq	x264_lookahead_init@PLT
.Ltmp209:
	testl	%eax, %eax
.Ltmp210:
	.loc	0 1075 9 is_stmt 0              # x264_src/encoder/encoder.c:1075:9
	jne	.LBB0_69
.Ltmp211:
# %bb.86:                               # %for.cond683.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	.loc	0 1078 23 is_stmt 1             # x264_src/encoder/encoder.c:1078:23
	cmpl	$0, 4(%rbx)
.Ltmp212:
	.loc	0 1078 5 is_stmt 0              # x264_src/encoder/encoder.c:1078:5
	jle	.LBB0_105
.Ltmp213:
# %bb.87:                               # %if.then707.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1080 39 is_stmt 1             # x264_src/encoder/encoder.c:1080:39
	movl	692(%rbx), %r14d
.Ltmp214:
	#DEBUG_VALUE: init_nal_count <- undef
	#DEBUG_VALUE: allocate_threadlocal_data <- [DW_OP_stack_value] 1
	.loc	0 1087 34                       # x264_src/encoder/encoder.c:1087:34
	movq	%rbx, %rdi
	movl	$1, %esi
	callq	x264_frame_pop_unused@PLT
.Ltmp215:
	.loc	0 1087 13 is_stmt 0             # x264_src/encoder/encoder.c:1087:13
	movq	704(%rbx), %rcx
	.loc	0 1087 32                       # x264_src/encoder/encoder.c:1087:32
	movq	%rax, 14688(%rcx)
.Ltmp216:
	.loc	0 1088 18 is_stmt 1             # x264_src/encoder/encoder.c:1088:18
	movq	704(%rbx), %rax
	cmpq	$0, 14688(%rax)
.Ltmp217:
	.loc	0 1088 17 is_stmt 0             # x264_src/encoder/encoder.c:1088:17
	je	.LBB0_69
.Ltmp218:
# %bb.88:                               # %do.body728.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: allocate_threadlocal_data <- [DW_OP_stack_value] 1
	.loc	0 1094 9 is_stmt 1              # x264_src/encoder/encoder.c:1094:9
	movl	1776(%rbx), %edi
	callq	x264_malloc@PLT
.Ltmp219:
	movq	704(%rbx), %rcx
	movq	%rax, 1784(%rcx)
.Ltmp220:
	.loc	0 1094 9 is_stmt 0              # x264_src/encoder/encoder.c:1094:9
	movq	704(%rbx), %rax
	cmpq	$0, 1784(%rax)
.Ltmp221:
	.loc	0 1094 9                        # x264_src/encoder/encoder.c:1094:9
	je	.LBB0_69
.Ltmp222:
# %bb.89:                               # %do.body746.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: allocate_threadlocal_data <- [DW_OP_stack_value] 1
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	addl	$3, %r14d
.Ltmp223:
	#DEBUG_VALUE: init_nal_count <- $r14d
	.loc	0 1096 9 is_stmt 1              # x264_src/encoder/encoder.c:1096:9
	leal	(,%r14,8), %eax
	leal	(%rax,%rax,2), %edi
	callq	x264_malloc@PLT
.Ltmp224:
	movq	704(%rbx), %rcx
	movq	%rax, 1768(%rcx)
.Ltmp225:
	.loc	0 1096 9 is_stmt 0              # x264_src/encoder/encoder.c:1096:9
	movq	704(%rbx), %rax
	cmpq	$0, 1768(%rax)
.Ltmp226:
	.loc	0 1096 9                        # x264_src/encoder/encoder.c:1096:9
	je	.LBB0_69
.Ltmp227:
# %bb.90:                               # %land.lhs.true770.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: init_nal_count <- $r14d
	#DEBUG_VALUE: allocate_threadlocal_data <- [DW_OP_stack_value] 1
	.loc	0 1097 44 is_stmt 1             # x264_src/encoder/encoder.c:1097:44
	movl	%r14d, 1764(%rax)
.Ltmp228:
	.loc	0 1099 74                       # x264_src/encoder/encoder.c:1099:74
	movq	704(%rbx), %rdi
	.loc	0 1099 42 is_stmt 0             # x264_src/encoder/encoder.c:1099:42
	callq	x264_macroblock_cache_allocate@PLT
.Ltmp229:
	.loc	0 1099 89                       # x264_src/encoder/encoder.c:1099:89
	testl	%eax, %eax
.Ltmp230:
	.loc	0 1099 13                       # x264_src/encoder/encoder.c:1099:13
	js	.LBB0_69
.Ltmp231:
# %bb.91:                               # %for.inc782.peel
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 1078 34 is_stmt 1             # x264_src/encoder/encoder.c:1078:34
	movl	4(%rbx), %eax
	.loc	0 1078 23 is_stmt 0             # x264_src/encoder/encoder.c:1078:23
	cmpl	$2, %eax
.Ltmp232:
	.loc	0 1078 5                        # x264_src/encoder/encoder.c:1078:5
	jl	.LBB0_95
.Ltmp233:
# %bb.92:                               # %if.end705.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: x264_encoder_open_96:i_slicetype_length <- $ebp
	#DEBUG_VALUE: i <- 1
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$89, %r14d
	jmp	.LBB0_93
.Ltmp234:
.LBB0_102:                              # %for.inc782
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- [DW_OP_constu 87, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1078 34                       # x264_src/encoder/encoder.c:1078:34
	movslq	4(%rbx), %rax
	.loc	0 1078 23                       # x264_src/encoder/encoder.c:1078:23
	leaq	1(%r14), %rcx
	addq	$-87, %r14
.Ltmp235:
	cmpq	%rax, %r14
	movq	%rcx, %r14
.Ltmp236:
	.loc	0 1078 5                        # x264_src/encoder/encoder.c:1078:5
	jge	.LBB0_95
.Ltmp237:
.LBB0_93:                               # %if.end705
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1080 39 is_stmt 1             # x264_src/encoder/encoder.c:1080:39
	movl	692(%rbx), %r15d
.Ltmp238:
	#DEBUG_VALUE: init_nal_count <- undef
	.loc	0 1081 51                       # x264_src/encoder/encoder.c:1081:51
	movl	8(%rbx), %ebp
.Ltmp239:
	#DEBUG_VALUE: allocate_threadlocal_data <- undef
	.loc	0 1083 14                       # x264_src/encoder/encoder.c:1083:14
	movq	(%rbx,%r14,8), %rdi
	.loc	0 1083 29 is_stmt 0             # x264_src/encoder/encoder.c:1083:29
	movl	$33344, %edx                    # imm = 0x8240
	movq	%rbx, %rsi
	callq	memcpy@PLT
.Ltmp240:
	.loc	0 1081 42 is_stmt 1             # x264_src/encoder/encoder.c:1081:42
	testl	%ebp, %ebp
	.loc	0 1085 13                       # x264_src/encoder/encoder.c:1085:13
	je	.LBB0_94
.Ltmp241:
# %bb.97:                               # %if.else719
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1092 34                       # x264_src/encoder/encoder.c:1092:34
	movq	704(%rbx), %rax
	.loc	0 1092 48 is_stmt 0             # x264_src/encoder/encoder.c:1092:48
	movq	14688(%rax), %rax
	.loc	0 1092 13                       # x264_src/encoder/encoder.c:1092:13
	movq	(%rbx,%r14,8), %rcx
	.loc	0 1092 32                       # x264_src/encoder/encoder.c:1092:32
	movq	%rax, 14688(%rcx)
	jmp	.LBB0_98
.Ltmp242:
.LBB0_94:                               # %if.then707
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1087 34 is_stmt 1             # x264_src/encoder/encoder.c:1087:34
	movq	%rbx, %rdi
	movl	$1, %esi
	callq	x264_frame_pop_unused@PLT
.Ltmp243:
	.loc	0 1087 13 is_stmt 0             # x264_src/encoder/encoder.c:1087:13
	movq	(%rbx,%r14,8), %rcx
	.loc	0 1087 32                       # x264_src/encoder/encoder.c:1087:32
	movq	%rax, 14688(%rcx)
.Ltmp244:
	.loc	0 1088 18 is_stmt 1             # x264_src/encoder/encoder.c:1088:18
	movq	(%rbx,%r14,8), %rax
	cmpq	$0, 14688(%rax)
.Ltmp245:
	.loc	0 1088 17 is_stmt 0             # x264_src/encoder/encoder.c:1088:17
	je	.LBB0_69
.Ltmp246:
.LBB0_98:                               # %do.body728
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 1094 9 is_stmt 1              # x264_src/encoder/encoder.c:1094:9
	movl	1776(%rbx), %edi
	callq	x264_malloc@PLT
.Ltmp247:
	movq	(%rbx,%r14,8), %rcx
	movq	%rax, 1784(%rcx)
.Ltmp248:
	.loc	0 1094 9 is_stmt 0              # x264_src/encoder/encoder.c:1094:9
	movq	(%rbx,%r14,8), %rax
	cmpq	$0, 1784(%rax)
.Ltmp249:
	.loc	0 1094 9                        # x264_src/encoder/encoder.c:1094:9
	je	.LBB0_69
.Ltmp250:
# %bb.99:                               # %do.body746
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	addl	$3, %r15d
.Ltmp251:
	#DEBUG_VALUE: init_nal_count <- $r15d
	.loc	0 1096 9 is_stmt 1              # x264_src/encoder/encoder.c:1096:9
	leal	(,%r15,8), %eax
	leal	(%rax,%rax,2), %edi
	callq	x264_malloc@PLT
.Ltmp252:
	movq	(%rbx,%r14,8), %rcx
	movq	%rax, 1768(%rcx)
.Ltmp253:
	.loc	0 1096 9 is_stmt 0              # x264_src/encoder/encoder.c:1096:9
	movq	(%rbx,%r14,8), %rax
	cmpq	$0, 1768(%rax)
.Ltmp254:
	.loc	0 1096 9                        # x264_src/encoder/encoder.c:1096:9
	je	.LBB0_69
.Ltmp255:
# %bb.100:                              # %do.end764
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: init_nal_count <- $r15d
	.loc	0 1097 44 is_stmt 1             # x264_src/encoder/encoder.c:1097:44
	movl	%r15d, 1764(%rax)
	.loc	0 1081 42                       # x264_src/encoder/encoder.c:1081:42
	testl	%ebp, %ebp
.Ltmp256:
	.loc	0 1099 39                       # x264_src/encoder/encoder.c:1099:39
	jne	.LBB0_102
.Ltmp257:
# %bb.101:                              # %land.lhs.true770
                                        #   in Loop: Header=BB0_93 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: init_nal_count <- $r15d
	.loc	0 1099 74 is_stmt 0             # x264_src/encoder/encoder.c:1099:74
	movq	(%rbx,%r14,8), %rdi
	.loc	0 1099 42                       # x264_src/encoder/encoder.c:1099:42
	callq	x264_macroblock_cache_allocate@PLT
.Ltmp258:
	.loc	0 1099 89                       # x264_src/encoder/encoder.c:1099:89
	testl	%eax, %eax
	jns	.LBB0_102
	jmp	.LBB0_69
.Ltmp259:
.LBB0_95:                               # %for.cond788.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1103 23 is_stmt 1             # x264_src/encoder/encoder.c:1103:23
	testl	%eax, %eax
.Ltmp260:
	#DEBUG_VALUE: i <- 0
	.loc	0 1103 5 is_stmt 0              # x264_src/encoder/encoder.c:1103:5
	jle	.LBB0_105
.Ltmp261:
# %bb.96:                               # %for.body794.preheader
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%r14d, %r14d
.Ltmp262:
.LBB0_104:                              # %for.body794
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- $r14
	.loc	0 1104 46 is_stmt 1             # x264_src/encoder/encoder.c:1104:46
	movq	704(%rbx,%r14,8), %rdi
	.loc	0 1104 13 is_stmt 0             # x264_src/encoder/encoder.c:1104:13
	xorl	%esi, %esi
	callq	x264_macroblock_thread_allocate@PLT
.Ltmp263:
	.loc	0 1104 64                       # x264_src/encoder/encoder.c:1104:64
	testl	%eax, %eax
.Ltmp264:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	.loc	0 1104 13                       # x264_src/encoder/encoder.c:1104:13
	js	.LBB0_69
.Ltmp265:
# %bb.103:                              # %for.cond788
                                        #   in Loop: Header=BB0_104 Depth=1
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	.loc	0 1103 46 is_stmt 1             # x264_src/encoder/encoder.c:1103:46
	incq	%r14
.Ltmp266:
	#DEBUG_VALUE: i <- $r14
	.loc	0 1103 34 is_stmt 0             # x264_src/encoder/encoder.c:1103:34
	movslq	4(%rbx), %rax
	.loc	0 1103 23                       # x264_src/encoder/encoder.c:1103:23
	cmpq	%rax, %r14
.Ltmp267:
	.loc	0 1103 5                        # x264_src/encoder/encoder.c:1103:5
	jl	.LBB0_104
.Ltmp268:
.LBB0_105:                              # %for.end807
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1107 9 is_stmt 1              # x264_src/encoder/encoder.c:1107:9
	movq	%rbx, %rdi
	callq	x264_ratecontrol_new@PLT
.Ltmp269:
	.loc	0 1107 35 is_stmt 0             # x264_src/encoder/encoder.c:1107:35
	testl	%eax, %eax
.Ltmp270:
	.loc	0 1107 9                        # x264_src/encoder/encoder.c:1107:9
	js	.LBB0_69
.Ltmp271:
# %bb.106:                              # %if.end812
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1110 9 is_stmt 1              # x264_src/encoder/encoder.c:1110:9
	cmpl	$0, 40(%rbx)
.Ltmp272:
	.loc	0 1110 9 is_stmt 0              # x264_src/encoder/encoder.c:1110:9
	je	.LBB0_108
.Ltmp273:
# %bb.107:                              # %if.then815
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1112 71 is_stmt 1             # x264_src/encoder/encoder.c:1112:71
	movq	3200(%rbx), %rax
	.loc	0 1112 84 is_stmt 0             # x264_src/encoder/encoder.c:1112:84
	movl	1232(%rax), %ecx
	.loc	0 1112 9                        # x264_src/encoder/encoder.c:1112:9
	movl	$.L.str.13, %edx
	movq	%rbx, %rdi
	movl	$3, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp274:
	.loc	0 1113 64 is_stmt 1             # x264_src/encoder/encoder.c:1113:64
	movq	3200(%rbx), %rax
	.loc	0 1113 77 is_stmt 0             # x264_src/encoder/encoder.c:1113:77
	movl	1236(%rax), %ecx
	.loc	0 1113 9                        # x264_src/encoder/encoder.c:1113:9
	movl	$.L.str.14, %edx
	movq	%rbx, %rdi
	movl	$3, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp275:
.LBB0_108:                              # %if.end821
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1116 18 is_stmt 1             # x264_src/encoder/encoder.c:1116:18
	movq	376(%rbx), %rdi
	.loc	0 1116 9 is_stmt 0              # x264_src/encoder/encoder.c:1116:9
	testq	%rdi, %rdi
.Ltmp276:
	.loc	0 1116 9                        # x264_src/encoder/encoder.c:1116:9
	je	.LBB0_111
.Ltmp277:
# %bb.109:                              # %if.then824
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1119 19 is_stmt 1             # x264_src/encoder/encoder.c:1119:19
	movl	$.L.str.15, %esi
	callq	fopen@PLT
.Ltmp278:
	#DEBUG_VALUE: f <- $rax
	.loc	0 1120 14                       # x264_src/encoder/encoder.c:1120:14
	testq	%rax, %rax
.Ltmp279:
	.loc	0 1120 13 is_stmt 0             # x264_src/encoder/encoder.c:1120:13
	je	.LBB0_118
.Ltmp280:
# %bb.110:                              # %cleanup841.thread
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: f <- $rax
	.loc	0 1130 9 is_stmt 1              # x264_src/encoder/encoder.c:1130:9
	movq	%rax, %rdi
	callq	fclose@PLT
.Ltmp281:
.LBB0_111:                              # %if.end844
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1134 12                       # x264_src/encoder/encoder.c:1134:12
	movq	3200(%rbx), %rax
	.loc	0 1134 17 is_stmt 0             # x264_src/encoder/encoder.c:1134:17
	movl	4(%rax), %ecx
	.loc	0 1134 9                        # x264_src/encoder/encoder.c:1134:9
	cmpl	$66, %ecx
	je	.LBB0_112
.Ltmp282:
# %bb.113:                              # %if.end844
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	cmpl	$77, %ecx
	jne	.LBB0_114
.Ltmp283:
# %bb.115:                              # %cond.end863.fold.split
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	$.L.str.20, %ecx
	jmp	.LBB0_116
.Ltmp284:
.LBB0_112:
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	movl	$.L.str.19, %ecx
	jmp	.LBB0_116
.Ltmp285:
.LBB0_114:                              # %cond.false855
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1136 31 is_stmt 1             # x264_src/encoder/encoder.c:1136:31
	cmpl	$100, %ecx
	.loc	0 1136 9 is_stmt 0              # x264_src/encoder/encoder.c:1136:9
	movl	$.L.str.21, %edx
	movl	$.L.str.22, %ecx
	cmoveq	%rdx, %rcx
.Ltmp286:
.LBB0_116:                              # %cond.end863
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	.loc	0 1137 42 is_stmt 1             # x264_src/encoder/encoder.c:1137:42
	movslq	8(%rax), %r9
	.loc	0 1137 77 is_stmt 0             # x264_src/encoder/encoder.c:1137:77
	imulq	$1717986919, %r9, %r8           # imm = 0x66666667
	movq	%r8, %rax
	shrq	$63, %rax
	sarq	$34, %r8
	addl	%eax, %r8d
	leal	(%r8,%r8), %eax
	leal	(%rax,%rax,4), %eax
	subl	%eax, %r9d
	.loc	0 1133 5 is_stmt 1              # x264_src/encoder/encoder.c:1133:5
	movl	$.L.str.18, %edx
	movq	%rbx, %rdi
	movl	$2, %esi
                                        # kill: def $r8d killed $r8d killed $r8
                                        # kill: def $r9d killed $r9d killed $r9
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp287:
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	jmp	.LBB0_117
.Ltmp288:
.LBB0_118:                              # %cleanup841
	#DEBUG_VALUE: x264_encoder_open_96:param <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_open_96:h <- $rbx
	#DEBUG_VALUE: f <- $rax
	.loc	0 1122 84 is_stmt 1             # x264_src/encoder/encoder.c:1122:84
	movq	376(%rbx), %rcx
	.loc	0 1122 13 is_stmt 0             # x264_src/encoder/encoder.c:1122:13
	movl	$.L.str.16, %edx
	movq	%rbx, %rdi
	xorl	%esi, %esi
	jmp	.LBB0_16
.Ltmp289:
.Lfunc_end0:
	.size	x264_encoder_open_96, .Lfunc_end0-x264_encoder_open_96
	.cfi_endproc
	.file	12 "x264_src/common" "mc.h" md5 0x04d0fbb98b637fe4174e4cc20d723861
	.file	13 "x264_src/common" "cabac.h" md5 0x22d062fb0f207ca9dcf17e0003a54ffb
	.file	14 "x264_src/common" "frame.h" md5 0x4a274a9291201f03b4af1f57e6a86f6f
	.file	15 "/home/yjs/workspace" "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h" md5 0x2c44e821a2b1951cde2eb0fb2e656867
	.file	16 "x264_src/common" "dct.h" md5 0xd983c98245ed7221137d0c4902e9385f
	.file	17 "x264_src/common" "quant.h" md5 0xd1558a6947b2031223cf5868b45335f7
	.file	18 "x264_src/encoder" "set.h" md5 0xc5157994f90d08c22a1bca39dbc9140e
	.file	19 "x264_src/encoder" "macroblock.h" md5 0x18b1d8cf424109157590a0769f6470b5
	.file	20 "/usr/include" "string.h" md5 0xf443da8025a0b7c1498fb6c554ec788d
	.file	21 "/usr/include" "stdio.h" md5 0xf31eefcc3f15835fc5a4023a625cf609
	.file	22 "x264_src/encoder" "analyse.h" md5 0xbcc4e1839a8c83d6cd319084cb483d0b
	.file	23 "/usr/include/x86_64-linux-gnu/bits" "mathcalls.h" md5 0x8c6e2d0d2bda65bc5ba1ca02b65383b7
	.file	24 "x264_src/encoder" "ratecontrol.h" md5 0xea8157999cd85ff61f807951cc1cb1cd
	.file	25 "/usr/include/x86_64-linux-gnu/bits/types" "struct_FILE.h" md5 0x1bad07471b7974df4ecc1d1c2ca207e6
	.file	26 "/usr/include/x86_64-linux-gnu/bits/types" "FILE.h" md5 0x571f9fb6223c42439075fdde11a0de5d
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0                          # -- Begin function x264_validate_parameters
.LCPI1_0:
	.long	0x3f000000                      # float 0.5
.LCPI1_4:
	.long	0x424c0000                      # float 51
.LCPI1_6:
	.long	0x3f800000                      # float 1
.LCPI1_9:
	.long	0x41c80000                      # float 25
.LCPI1_14:
	.long	0x3e800000                      # float 0.25
.LCPI1_17:
	.long	0x40400000                      # float 3
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
.LCPI1_1:
	.quad	0xbff4000000000000              # double -1.25
	.quad	0xbff4000000000000              # double -1.25
.LCPI1_2:
	.quad	0x7fffffffffffffff              # double NaN
	.quad	0x7fffffffffffffff              # double NaN
.LCPI1_3:
	.quad	0x3f847ae147ae147b              # double 0.01
	.quad	0x3f847ae147ae147b              # double 0.01
.LCPI1_5:
	.long	0x3f800000                      # float 1
	.long	0x3f800000                      # float 1
	.zero	4
	.zero	4
.LCPI1_7:
	.long	0xc0c00000                      # float -6
	.long	0x40c00000                      # float 6
	.zero	4
	.zero	4
.LCPI1_10:
	.long	6                               # 0x6
	.long	6                               # 0x6
	.zero	4
	.zero	4
.LCPI1_11:
	.long	4294967290                      # 0xfffffffa
	.long	4294967290                      # 0xfffffffa
	.zero	4
	.zero	4
.LCPI1_12:
	.long	32                              # 0x20
	.long	32                              # 0x20
	.zero	4
	.zero	4
.LCPI1_13:
	.long	0x41200000                      # float 10
	.long	0x41200000                      # float 10
	.zero	4
	.zero	4
.LCPI1_15:
	.long	0x43800000                      # float 256
	.long	0x43800000                      # float 256
	.zero	4
	.zero	4
.LCPI1_16:
	.quad	0x3fe0000000000000              # double 0.5
	.quad	0x3fe0000000000000              # double 0.5
.LCPI1_18:
	.long	1                               # 0x1
	.long	1                               # 0x1
	.zero	4
	.zero	4
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0
.LCPI1_8:
	.quad	0x3feff7ced916872b              # double 0.99899999999999999
	.text
	.p2align	4, 0x90
	.type	x264_validate_parameters,@function
x264_validate_parameters:               # @x264_validate_parameters
.Lfunc_begin1:
	.loc	0 380 0 is_stmt 1               # x264_src/encoder/encoder.c:380:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	0 395 18 prologue_end           # x264_src/encoder/encoder.c:395:18
	movl	20(%rdi), %ecx
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movl	24(%rdi), %r8d
	.loc	0 395 26                        # x264_src/encoder/encoder.c:395:26
	testl	%ecx, %ecx
	setle	%al
	testl	%r8d, %r8d
	setle	%dl
	.loc	0 395 31                        # x264_src/encoder/encoder.c:395:31
	orb	%al, %dl
	cmpb	$1, %dl
	jne	.LBB1_2
.Ltmp290:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 397 9 is_stmt 1               # x264_src/encoder/encoder.c:397:9
	movl	$.L.str.50, %edx
	jmp	.LBB1_13
.Ltmp291:
.LBB1_2:                                # %if.end
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 402 30                        # x264_src/encoder/encoder.c:402:30
	movl	%r8d, %eax
	orl	%ecx, %eax
	testb	$1, %al
	jne	.LBB1_12
.Ltmp292:
# %bb.3:                                # %if.end19
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 408 26                        # x264_src/encoder/encoder.c:408:26
	movzbl	28(%rdi), %eax
	cmpl	$1, %eax
.Ltmp293:
	#DEBUG_VALUE: x264_validate_parameters:i_csp <- undef
	.loc	0 409 32                        # x264_src/encoder/encoder.c:409:32
	je	.LBB1_5
.Ltmp294:
# %bb.4:                                # %if.end19
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	cmpl	$4, %eax
	jne	.LBB1_24
.Ltmp295:
.LBB1_5:                                # %if.end25
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 415 18                        # x264_src/encoder/encoder.c:415:18
	movl	4(%rdi), %eax
	.loc	0 415 28 is_stmt 0              # x264_src/encoder/encoder.c:415:28
	testl	%eax, %eax
	movq	%rdi, %rbx
.Ltmp296:
	.loc	0 415 9                         # x264_src/encoder/encoder.c:415:9
	jne	.LBB1_7
.Ltmp297:
# %bb.6:                                # %if.then28
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 416 30 is_stmt 1              # x264_src/encoder/encoder.c:416:30
	callq	x264_cpu_num_processors@PLT
.Ltmp298:
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/encoder.c:0:30
	movq	%rbx, %rdi
	xorl	%ecx, %ecx
	.loc	0 416 59                        # x264_src/encoder/encoder.c:416:59
	cmpl	$1, 8(%rbx)
	adcl	$2, %ecx
	.loc	0 416 56                        # x264_src/encoder/encoder.c:416:56
	imull	%eax, %ecx
	.loc	0 416 89                        # x264_src/encoder/encoder.c:416:89
	movl	%ecx, %eax
	shrl	$31, %eax
	addl	%ecx, %eax
	sarl	%eax
.Ltmp299:
.LBB1_7:                                # %if.end33
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 1
	#DEBUG_VALUE: x264_clip3:i_max <- 128
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	$128, %eax
	movl	$128, %ecx
	cmovll	%eax, %ecx
	cmpl	$2, %ecx
	movl	$1, %ebp
	cmovll	%ebp, %ecx
.Ltmp300:
	.loc	0 417 24                        # x264_src/encoder/encoder.c:417:24
	movl	%ecx, 4(%rdi)
.Ltmp301:
	.loc	0 418 28                        # x264_src/encoder/encoder.c:418:28
	cmpl	$2, %eax
.Ltmp302:
	.loc	0 418 9 is_stmt 0               # x264_src/encoder/encoder.c:418:9
	jl	.LBB1_14
.Ltmp303:
# %bb.8:                                # %if.then42
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 421 9 is_stmt 1               # x264_src/encoder/encoder.c:421:9
	movl	$.L.str.53, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp304:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 422 28 is_stmt 1              # x264_src/encoder/encoder.c:422:28
	movl	$1, 4(%rbx)
.Ltmp305:
	.loc	0 426 13                        # x264_src/encoder/encoder.c:426:13
	cmpl	$0, 8(%rbx)
.Ltmp306:
	.loc	0 426 13 is_stmt 0              # x264_src/encoder/encoder.c:426:13
	je	.LBB1_15
.Ltmp307:
# %bb.9:                                # %if.then48
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 428 41 is_stmt 1              # x264_src/encoder/encoder.c:428:41
	movl	24(%rdi), %eax
.Ltmp308:
	#DEBUG_VALUE: max_threads <- [DW_OP_plus_uconst 15, DW_OP_constu 64, DW_OP_div, DW_OP_stack_value] $eax
	.loc	0 0 41 is_stmt 0                # x264_src/encoder/encoder.c:0:41
	movl	$1, %ebp
	movl	$1, %ecx
	.loc	0 429 34 is_stmt 1              # x264_src/encoder/encoder.c:429:34
	cmpl	$112, %eax
	jg	.LBB1_11
.Ltmp309:
# %bb.10:                               # %cond.false
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: max_threads <- [DW_OP_plus_uconst 15, DW_OP_constu 64, DW_OP_div, DW_OP_stack_value] $eax
	.loc	0 428 49                        # x264_src/encoder/encoder.c:428:49
	leal	15(%rax), %ecx
.Ltmp310:
	#DEBUG_VALUE: max_threads <- [DW_OP_constu 64, DW_OP_div, DW_OP_stack_value] $ecx
	.loc	0 428 57 is_stmt 0              # x264_src/encoder/encoder.c:428:57
	addl	$78, %eax
	testl	%ecx, %ecx
	cmovnsl	%ecx, %eax
	sarl	$6, %eax
.Ltmp311:
	#DEBUG_VALUE: max_threads <- $eax
	.loc	0 0 57                          # x264_src/encoder/encoder.c:0:57
	movl	%eax, %ecx
.Ltmp312:
.LBB1_11:                               # %if.end64
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 429 32 is_stmt 1              # x264_src/encoder/encoder.c:429:32
	movl	%ecx, 4(%rdi)
	jmp	.LBB1_15
.Ltmp313:
.LBB1_12:                               # %if.then14
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 404 9                         # x264_src/encoder/encoder.c:404:9
	movl	$.L.str.51, %edx
.Ltmp314:
.LBB1_13:                               # %return
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp315:
	#DEBUG_VALUE: x264_validate_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	jmp	.LBB1_28
.Ltmp316:
.LBB1_14:                               # %if.else
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 433 35 is_stmt 1              # x264_src/encoder/encoder.c:433:35
	movl	$0, 8(%rdi)
	movl	%ecx, %ebp
.Ltmp317:
.LBB1_15:                               # %cond.end72
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 434 24                        # x264_src/encoder/encoder.c:434:24
	movl	%ebp, 1852(%rdi)
.Ltmp318:
	.loc	0 436 9                         # x264_src/encoder/encoder.c:436:9
	cmpl	$0, 136(%rdi)
.Ltmp319:
	.loc	0 436 9 is_stmt 0               # x264_src/encoder/encoder.c:436:9
	je	.LBB1_20
.Ltmp320:
# %bb.16:                               # %if.then76
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 438 42 is_stmt 1              # x264_src/encoder/encoder.c:438:42
	cmpl	$3, 412(%rdi)
.Ltmp321:
	.loc	0 438 13 is_stmt 0              # x264_src/encoder/encoder.c:438:13
	jl	.LBB1_18
.Ltmp322:
# %bb.17:                               # %if.then79
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 440 13 is_stmt 1              # x264_src/encoder/encoder.c:440:13
	movl	$.L.str.54, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp323:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	%rbx, %rdi
	.loc	0 441 42 is_stmt 1              # x264_src/encoder/encoder.c:441:42
	movl	$2, 412(%rbx)
.Ltmp324:
.LBB1_18:                               # %if.end83
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 443 46                        # x264_src/encoder/encoder.c:443:46
	cmpl	$0, 396(%rdi)
.Ltmp325:
	.loc	0 443 13 is_stmt 0              # x264_src/encoder/encoder.c:443:13
	jle	.LBB1_20
.Ltmp326:
# %bb.19:                               # %if.then87
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 445 13 is_stmt 1              # x264_src/encoder/encoder.c:445:13
	movl	$.L.str.55, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp327:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	%rbx, %rdi
	.loc	0 446 46 is_stmt 1              # x264_src/encoder/encoder.c:446:46
	movl	$0, 396(%rbx)
.Ltmp328:
.LBB1_20:                               # %if.end92
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: score <- 0
	#DEBUG_VALUE: score <- undef
	.loc	0 454 40                        # x264_src/encoder/encoder.c:454:40
	xorl	%eax, %eax
	cmpl	$3, 504(%rdi)
	sete	%al
	.loc	0 455 40                        # x264_src/encoder/encoder.c:455:40
	xorl	%esi, %esi
	cmpl	$12, 84(%rdi)
	sete	%sil
	.loc	0 454 15                        # x264_src/encoder/encoder.c:454:15
	cmpl	$1, 416(%rdi)
	adcl	%eax, %esi
.Ltmp329:
	#DEBUG_VALUE: score <- $esi
	.loc	0 456 30                        # x264_src/encoder/encoder.c:456:30
	movl	496(%rdi), %eax
	.loc	0 456 39 is_stmt 0              # x264_src/encoder/encoder.c:456:39
	xorl	%r8d, %r8d
	cmpl	$2, %eax
	sete	%r8b
.Ltmp330:
	#DEBUG_VALUE: score <- undef
	.loc	0 457 30 is_stmt 1              # x264_src/encoder/encoder.c:457:30
	movl	500(%rdi), %ecx
	.loc	0 457 39 is_stmt 0              # x264_src/encoder/encoder.c:457:39
	xorl	%edx, %edx
	cmpl	$31, %ecx
	sete	%dl
	.loc	0 456 15 is_stmt 1              # x264_src/encoder/encoder.c:456:15
	addl	%r8d, %edx
	.loc	0 457 15                        # x264_src/encoder/encoder.c:457:15
	addl	%esi, %edx
.Ltmp331:
	#DEBUG_VALUE: score <- $edx
	.loc	0 0 15 is_stmt 0                # x264_src/encoder/encoder.c:0:15
	movss	.LCPI1_0(%rip), %xmm0           # xmm0 = [5.0E-1,0.0E+0,0.0E+0,0.0E+0]
	.loc	0 458 42 is_stmt 1              # x264_src/encoder/encoder.c:458:42
	cmpeqss	592(%rdi), %xmm0
	movd	%xmm0, %esi
.Ltmp332:
	#DEBUG_VALUE: score <- undef
	.loc	0 459 35                        # x264_src/encoder/encoder.c:459:35
	movsd	536(%rdi), %xmm0                # xmm0 = mem[0],zero
	.loc	0 460 23                        # x264_src/encoder/encoder.c:460:23
	cvtps2pd	%xmm0, %xmm1
	.loc	0 460 47 is_stmt 0              # x264_src/encoder/encoder.c:460:47
	addpd	.LCPI1_1(%rip), %xmm1
	.loc	0 460 18                        # x264_src/encoder/encoder.c:460:18
	andpd	.LCPI1_2(%rip), %xmm1
	.loc	0 458 15 is_stmt 1              # x264_src/encoder/encoder.c:458:15
	subl	%esi, %edx
.Ltmp333:
	#DEBUG_VALUE: score <- $edx
	.loc	0 460 55                        # x264_src/encoder/encoder.c:460:55
	cmpltpd	.LCPI1_3(%rip), %xmm1
	movmskpd	%xmm1, %esi
	movl	%esi, %r8d
	shrb	%r8b
	.loc	0 459 55                        # x264_src/encoder/encoder.c:459:55
	andl	$1, %esi
	.loc	0 459 15 is_stmt 0              # x264_src/encoder/encoder.c:459:15
	addl	%edx, %esi
.Ltmp334:
	#DEBUG_VALUE: score <- $esi
	.loc	0 460 55 is_stmt 1              # x264_src/encoder/encoder.c:460:55
	movzbl	%r8b, %edx
	.loc	0 460 15 is_stmt 0              # x264_src/encoder/encoder.c:460:15
	addl	%esi, %edx
.Ltmp335:
	#DEBUG_VALUE: score <- $edx
	.loc	0 461 41 is_stmt 1              # x264_src/encoder/encoder.c:461:41
	cmpl	$0, 388(%rdi)
	.loc	0 461 46 is_stmt 0              # x264_src/encoder/encoder.c:461:46
	je	.LBB1_25
.Ltmp336:
# %bb.21:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: score <- $edx
	.loc	0 0 46                          # x264_src/encoder/encoder.c:0:46
	xorl	%esi, %esi
	.loc	0 461 46                        # x264_src/encoder/encoder.c:461:46
	movzbl	%sil, %esi
	.loc	0 461 15                        # x264_src/encoder/encoder.c:461:15
	addl	%esi, %edx
.Ltmp337:
	#DEBUG_VALUE: score <- $edx
	.loc	0 462 19 is_stmt 1              # x264_src/encoder/encoder.c:462:19
	cmpl	$5, %edx
.Ltmp338:
	.loc	0 462 13 is_stmt 0              # x264_src/encoder/encoder.c:462:13
	jae	.LBB1_26
.Ltmp339:
.LBB1_22:                               # %cleanup.cont
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 470 21 is_stmt 1              # x264_src/encoder/encoder.c:470:21
	movl	488(%rdi), %esi
	.loc	0 470 37 is_stmt 0              # x264_src/encoder/encoder.c:470:37
	cmpl	$3, %esi
	jb	.LBB1_30
.Ltmp340:
# %bb.23:                               # %if.then157
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 472 9 is_stmt 1               # x264_src/encoder/encoder.c:472:9
	movl	$.L.str.58, %edx
	jmp	.LBB1_27
.Ltmp341:
.LBB1_24:                               # %if.then24
	#DEBUG_VALUE: x264_validate_parameters:h <- $rdi
	.loc	0 411 9                         # x264_src/encoder/encoder.c:411:9
	movl	$.L.str.52, %edx
.Ltmp342:
	.loc	0 472 9                         # x264_src/encoder/encoder.c:472:9
	jmp	.LBB1_27
.Ltmp343:
.LBB1_25:                               # %land.rhs
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: score <- $edx
	.loc	0 461 82                        # x264_src/encoder/encoder.c:461:82
	cmpl	$8, 428(%rdi)
	sete	%sil
	.loc	0 461 46 is_stmt 0              # x264_src/encoder/encoder.c:461:46
	movzbl	%sil, %esi
	.loc	0 461 15                        # x264_src/encoder/encoder.c:461:15
	addl	%esi, %edx
.Ltmp344:
	#DEBUG_VALUE: score <- undef
	.loc	0 462 19 is_stmt 1              # x264_src/encoder/encoder.c:462:19
	cmpl	$5, %edx
.Ltmp345:
	.loc	0 462 13 is_stmt 0              # x264_src/encoder/encoder.c:462:13
	jb	.LBB1_22
.Ltmp346:
.LBB1_26:                               # %if.then145
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 464 13 is_stmt 1              # x264_src/encoder/encoder.c:464:13
	movl	$.L.str.56, %edx
	movq	%rdi, %rbx
.Ltmp347:
	#DEBUG_VALUE: x264_validate_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp348:
	.loc	0 465 13                        # x264_src/encoder/encoder.c:465:13
	movl	$.L.str.57, %edx
	movq	%rbx, %rdi
.Ltmp349:
.LBB1_27:                               # %return
	#DEBUG_VALUE: x264_validate_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp350:
.LBB1_28:                               # %return
	#DEBUG_VALUE: x264_validate_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	movl	$-1, %eax
.Ltmp351:
.LBB1_29:                               # %return
	#DEBUG_VALUE: x264_validate_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 828 1 epilogue_begin is_stmt 1 # x264_src/encoder/encoder.c:828:1
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp352:
.LBB1_30:                               # %if.end158
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 475 58                        # x264_src/encoder/encoder.c:475:58
	movss	512(%rdi), %xmm1                # xmm1 = mem[0],zero,zero,zero
	movss	.LCPI1_4(%rip), %xmm2           # xmm2 = [5.1E+1,0.0E+0,0.0E+0,0.0E+0]
.Ltmp353:
	#DEBUG_VALUE: x264_clip3f:v <- undef
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 5.100000e+01
	.loc	0 475 33 is_stmt 0              # x264_src/encoder/encoder.c:475:33
	minss	%xmm1, %xmm2
	xorps	%xmm3, %xmm3
	cmpltss	%xmm3, %xmm1
	andnps	%xmm2, %xmm1
	.loc	0 475 31                        # x264_src/encoder/encoder.c:475:31
	movss	%xmm1, 512(%rdi)
	.loc	0 476 57 is_stmt 1              # x264_src/encoder/encoder.c:476:57
	movl	492(%rdi), %edx
.Ltmp354:
	#DEBUG_VALUE: x264_clip3:v <- $edx
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 51
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$51, %edx
	movl	$51, %ebp
	cmovgel	%ebp, %edx
.Ltmp355:
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	xorl	%r14d, %r14d
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	testl	%edx, %edx
	cmovlel	%r14d, %edx
.Ltmp356:
	.loc	0 476 31 is_stmt 1              # x264_src/encoder/encoder.c:476:31
	movl	%edx, 492(%rdi)
	.loc	0 477 9                         # x264_src/encoder/encoder.c:477:9
	cmpl	$2, %esi
	je	.LBB1_38
.Ltmp357:
# %bb.31:                               # %if.end158
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	cmpl	$1, %esi
	jne	.LBB1_33
.Ltmp358:
# %bb.32:                               # %if.end188.thread
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 479 37                        # x264_src/encoder/encoder.c:479:37
	cvttss2si	%xmm1, %edx
	.loc	0 479 35 is_stmt 0              # x264_src/encoder/encoder.c:479:35
	movl	%edx, 492(%rdi)
	.loc	0 480 31 is_stmt 1              # x264_src/encoder/encoder.c:480:31
	movl	$0, 508(%rdi)
.Ltmp359:
.LBB1_33:                               # %land.lhs.true200
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 483 38                        # x264_src/encoder/encoder.c:483:38
	testl	%edx, %edx
.Ltmp360:
	.loc	0 482 9                         # x264_src/encoder/encoder.c:482:9
	je	.LBB1_35
.Ltmp361:
# %bb.34:                               # %if.end239
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 503 33                        # x264_src/encoder/encoder.c:503:33
	testl	%esi, %esi
	jne	.LBB1_38
	jmp	.LBB1_37
.Ltmp362:
.LBB1_35:                               # %if.then206
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 485 26                        # x264_src/encoder/encoder.c:485:26
	movl	$1, 25812(%rdi)
	.loc	0 486 31                        # x264_src/encoder/encoder.c:486:31
	movl	$0, 144(%rdi)
	.loc	0 487 31                        # x264_src/encoder/encoder.c:487:31
	movq	$0, 152(%rdi)
	.loc	0 488 33                        # x264_src/encoder/encoder.c:488:33
	movl	$0, 488(%rdi)
	.loc	0 489 33                        # x264_src/encoder/encoder.c:489:33
	movsd	.LCPI1_5(%rip), %xmm0           # xmm0 = [1.0E+0,1.0E+0,0.0E+0,0.0E+0]
	movsd	%xmm0, 536(%rdi)
	.loc	0 491 33                        # x264_src/encoder/encoder.c:491:33
	movq	$0, 476(%rdi)
	.loc	0 493 45                        # x264_src/encoder/encoder.c:493:45
	movl	$0, 408(%rdi)
	.loc	0 494 36                        # x264_src/encoder/encoder.c:494:36
	movq	$0, 440(%rdi)
	.loc	0 496 44                        # x264_src/encoder/encoder.c:496:44
	movl	$0, 452(%rdi)
	.loc	0 497 32                        # x264_src/encoder/encoder.c:497:32
	movl	$0, 464(%rdi)
	.loc	0 498 27                        # x264_src/encoder/encoder.c:498:27
	movl	$0, 100(%rdi)
	movss	.LCPI1_6(%rip), %xmm0           # xmm0 = [1.0E+0,0.0E+0,0.0E+0,0.0E+0]
	xorl	%edx, %edx
.Ltmp363:
	.loc	0 500 14                        # x264_src/encoder/encoder.c:500:14
	cmpl	$0, 128(%rdi)
.Ltmp364:
	.loc	0 500 13 is_stmt 0              # x264_src/encoder/encoder.c:500:13
	jne	.LBB1_37
.Ltmp365:
# %bb.36:                               # %if.then235
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 501 46 is_stmt 1              # x264_src/encoder/encoder.c:501:46
	movl	$0, 392(%rdi)
.Ltmp366:
.LBB1_37:                               # %if.then245
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 505 22                        # x264_src/encoder/encoder.c:505:22
	xorps	%xmm1, %xmm1
	cvtsi2ss	%edx, %xmm1
.Ltmp367:
	#DEBUG_VALUE: qp_p <- $xmm1
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/encoder.c:0:22
	movaps	%xmm1, 16(%rsp)                 # 16-byte Spill
.Ltmp368:
	#DEBUG_VALUE: qp_p <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 506 31 is_stmt 1              # x264_src/encoder/encoder.c:506:31
	callq	log2f@PLT
.Ltmp369:
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/encoder.c:0:31
	movapd	%xmm0, (%rsp)                   # 16-byte Spill
.Ltmp370:
	#DEBUG_VALUE: qp_i <- undef
	.loc	0 507 50 is_stmt 1              # x264_src/encoder/encoder.c:507:50
	movss	540(%rbx), %xmm0                # xmm0 = mem[0],zero,zero,zero
	.loc	0 507 31 is_stmt 0              # x264_src/encoder/encoder.c:507:31
	callq	log2f@PLT
.Ltmp371:
	.loc	0 0 31                          # x264_src/encoder/encoder.c:0:31
	movq	%rbx, %rdi
	movaps	(%rsp), %xmm2                   # 16-byte Reload
	.loc	0 506 27 is_stmt 1              # x264_src/encoder/encoder.c:506:27
	unpcklps	%xmm0, %xmm2                    # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movaps	16(%rsp), %xmm3                 # 16-byte Reload
	movaps	%xmm3, %xmm0
	shufps	$0, %xmm3, %xmm0                # xmm0 = xmm0[0,0],xmm3[0,0]
	mulps	.LCPI1_7(%rip), %xmm2
	addps	%xmm0, %xmm2
.Ltmp372:
	#DEBUG_VALUE: qp_b <- undef
	.loc	0 508 50                        # x264_src/encoder/encoder.c:508:50
	movaps	%xmm2, %xmm0
	shufps	$85, %xmm2, %xmm0               # xmm0 = xmm0[1,1],xmm2[1,1]
	movaps	%xmm2, %xmm1
	movaps	%xmm2, %xmm4
	minss	%xmm0, %xmm1
	movaps	%xmm3, %xmm2
	minss	%xmm1, %xmm2
	.loc	0 508 44 is_stmt 0              # x264_src/encoder/encoder.c:508:44
	cvttss2si	%xmm2, %eax
.Ltmp373:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 51
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	$51, %eax
	movl	$51, %ecx
	cmovgel	%ecx, %eax
.Ltmp374:
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	xorl	%edx, %edx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	testl	%eax, %eax
	cmovlel	%edx, %eax
.Ltmp375:
	.loc	0 509 50 is_stmt 1              # x264_src/encoder/encoder.c:509:50
	maxss	%xmm0, %xmm4
	movaps	%xmm3, %xmm0
	maxss	%xmm4, %xmm0
	cvtss2sd	%xmm0, %xmm0
	.loc	0 509 80 is_stmt 0              # x264_src/encoder/encoder.c:509:80
	addsd	.LCPI1_8(%rip), %xmm0
	.loc	0 509 44                        # x264_src/encoder/encoder.c:509:44
	cvttsd2si	%xmm0, %esi
.Ltmp376:
	#DEBUG_VALUE: x264_clip3:v <- $esi
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 51
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	$51, %esi
	cmovll	%esi, %ecx
	testl	%ecx, %ecx
	cmovlel	%edx, %ecx
.Ltmp377:
	.loc	0 510 31                        # x264_src/encoder/encoder.c:510:31
	movl	$0, 544(%rbx)
	.loc	0 511 31                        # x264_src/encoder/encoder.c:511:31
	movl	$0, 552(%rbx)
.Ltmp378:
.LBB1_38:                               # %if.end312
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 51
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$51, %ecx
	cmovll	%ecx, %ebp
	testl	%ebp, %ebp
	cmovlel	%r14d, %ebp
.Ltmp379:
	#DEBUG_VALUE: x264_clip3:i_max <- $ebp
	.loc	0 513 26                        # x264_src/encoder/encoder.c:513:26
	movl	%ebp, 500(%rdi)
.Ltmp380:
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	%ebp, %eax
	cmovll	%eax, %ebp
.Ltmp381:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	testl	%eax, %eax
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovsl	%r14d, %ebp
.Ltmp382:
	.loc	0 514 26 is_stmt 1              # x264_src/encoder/encoder.c:514:26
	movl	%ebp, 496(%rdi)
.Ltmp383:
	.loc	0 515 9                         # x264_src/encoder/encoder.c:515:9
	cmpl	$0, 528(%rdi)
.Ltmp384:
	.loc	0 515 9 is_stmt 0               # x264_src/encoder/encoder.c:515:9
	je	.LBB1_44
.Ltmp385:
# %bb.39:                               # %if.then333
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 517 25 is_stmt 1              # x264_src/encoder/encoder.c:517:25
	movl	488(%rdi), %eax
	.loc	0 517 37 is_stmt 0              # x264_src/encoder/encoder.c:517:37
	testl	%eax, %eax
.Ltmp386:
	.loc	0 517 13                        # x264_src/encoder/encoder.c:517:13
	je	.LBB1_46
.Ltmp387:
# %bb.40:                               # %if.else345
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 523 30 is_stmt 1              # x264_src/encoder/encoder.c:523:30
	movl	524(%rdi), %ecx
	.loc	0 523 48 is_stmt 0              # x264_src/encoder/encoder.c:523:48
	testl	%ecx, %ecx
.Ltmp388:
	.loc	0 523 18                        # x264_src/encoder/encoder.c:523:18
	je	.LBB1_47
.Ltmp389:
# %bb.41:                               # %if.else369
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 18                          # x264_src/encoder/encoder.c:0:18
	cmpl	$2, %eax
.Ltmp390:
	.loc	0 536 72 is_stmt 1              # x264_src/encoder/encoder.c:536:72
	jne	.LBB1_51
.Ltmp391:
# %bb.42:                               # %if.else369
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	cmpl	508(%rdi), %ecx
	jge	.LBB1_51
.Ltmp392:
# %bb.43:                               # %if.then384
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 539 13                        # x264_src/encoder/encoder.c:539:13
	movl	$.L.str.62, %edx
	jmp	.LBB1_49
.Ltmp393:
.LBB1_44:                               # %if.else394
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 543 14                        # x264_src/encoder/encoder.c:543:14
	cmpl	$0, 524(%rdi)
.Ltmp394:
	.loc	0 543 14 is_stmt 0              # x264_src/encoder/encoder.c:543:14
	je	.LBB1_51
.Ltmp395:
# %bb.45:                               # %if.then399
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 545 9 is_stmt 1               # x264_src/encoder/encoder.c:545:9
	movl	$.L.str.63, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp396:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 546 39 is_stmt 1              # x264_src/encoder/encoder.c:546:39
	movl	$0, 524(%rbx)
	jmp	.LBB1_51
.Ltmp397:
.LBB1_46:                               # %if.then339
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 519 13                        # x264_src/encoder/encoder.c:519:13
	movl	$.L.str.59, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp398:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	%rbx, %rdi
	.loc	0 520 43 is_stmt 1              # x264_src/encoder/encoder.c:520:43
	movq	$0, 524(%rbx)
	.loc	0 522 9                         # x264_src/encoder/encoder.c:522:9
	jmp	.LBB1_51
.Ltmp399:
.LBB1_47:                               # %if.then351
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 525 41                        # x264_src/encoder/encoder.c:525:41
	cmpl	$2, %eax
.Ltmp400:
	.loc	0 525 17 is_stmt 0              # x264_src/encoder/encoder.c:525:17
	jne	.LBB1_50
.Ltmp401:
# %bb.48:                               # %if.then357
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 527 17 is_stmt 1              # x264_src/encoder/encoder.c:527:17
	movl	$.L.str.60, %edx
.Ltmp402:
.LBB1_49:                               # %if.end404
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp403:
	movq	%rbx, %rdi
	movl	508(%rbx), %eax
	movl	%eax, 524(%rbx)
.Ltmp404:
	.loc	0 529 13 is_stmt 1              # x264_src/encoder/encoder.c:529:13
	jmp	.LBB1_51
.Ltmp405:
.LBB1_50:                               # %if.else364
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 532 17                        # x264_src/encoder/encoder.c:532:17
	movl	$.L.str.61, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp406:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movq	%rbx, %rdi
	.loc	0 533 47 is_stmt 1              # x264_src/encoder/encoder.c:533:47
	movl	$0, 528(%rbx)
.Ltmp407:
.LBB1_51:                               # %if.end404
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 549 18                        # x264_src/encoder/encoder.c:549:18
	movl	136(%rdi), %eax
	.loc	0 549 9 is_stmt 0               # x264_src/encoder/encoder.c:549:9
	testl	%eax, %eax
	.loc	0 549 31                        # x264_src/encoder/encoder.c:549:31
	je	.LBB1_56
.Ltmp408:
# %bb.52:                               # %land.lhs.true408
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 549 34                        # x264_src/encoder/encoder.c:549:34
	cmpl	$0, 684(%rdi)
.Ltmp409:
	.loc	0 549 9                         # x264_src/encoder/encoder.c:549:9
	je	.LBB1_54
.Ltmp410:
# %bb.53:                               # %if.end414
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%ebp, %ebp
.Ltmp411:
	.loc	0 551 9 is_stmt 1               # x264_src/encoder/encoder.c:551:9
	movl	$.L.str.64, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp412:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 552 35 is_stmt 1              # x264_src/encoder/encoder.c:552:35
	movl	$0, 684(%rbx)
.Ltmp413:
	.loc	0 554 18                        # x264_src/encoder/encoder.c:554:18
	movl	136(%rbx), %eax
	.loc	0 554 9 is_stmt 0               # x264_src/encoder/encoder.c:554:9
	testl	%eax, %eax
	.loc	0 554 31                        # x264_src/encoder/encoder.c:554:31
	je	.LBB1_57
.Ltmp414:
.LBB1_54:                               # %land.lhs.true418
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 554 34                        # x264_src/encoder/encoder.c:554:34
	cmpl	$0, 688(%rdi)
	movl	%eax, %ebp
.Ltmp415:
	.loc	0 554 9                         # x264_src/encoder/encoder.c:554:9
	je	.LBB1_57
.Ltmp416:
# %bb.55:                               # %if.then421
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 556 9 is_stmt 1               # x264_src/encoder/encoder.c:556:9
	movl	$.L.str.65, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp417:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 557 34 is_stmt 1              # x264_src/encoder/encoder.c:557:34
	movl	$0, 688(%rbx)
.Ltmp418:
	.loc	0 559 56                        # x264_src/encoder/encoder.c:559:56
	movl	136(%rbx), %ebp
	jmp	.LBB1_57
.Ltmp419:
.LBB1_56:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 56 is_stmt 0                # x264_src/encoder/encoder.c:0:56
	xorl	%ebp, %ebp
.Ltmp420:
.LBB1_57:                               # %if.end424
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	movl	$16, %esi
	.loc	0 559 45                        # x264_src/encoder/encoder.c:559:45
	movl	%ebp, %ecx
	shll	%cl, %esi
	.loc	0 559 32                        # x264_src/encoder/encoder.c:559:32
	movl	24(%rdi), %eax
	.loc	0 559 40                        # x264_src/encoder/encoder.c:559:40
	addl	%esi, %eax
	decl	%eax
	.loc	0 559 73                        # x264_src/encoder/encoder.c:559:73
	cltd
	idivl	%esi
.Ltmp421:
	#DEBUG_VALUE: x264_validate_parameters:max_slices <- $eax
	.loc	0 560 9 is_stmt 1               # x264_src/encoder/encoder.c:560:9
	cmpl	$0, 8(%rdi)
.Ltmp422:
	.loc	0 560 9 is_stmt 0               # x264_src/encoder/encoder.c:560:9
	je	.LBB1_59
.Ltmp423:
# %bb.58:                               # %if.then438
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_validate_parameters:max_slices <- $eax
	.loc	0 561 55 is_stmt 1              # x264_src/encoder/encoder.c:561:55
	movl	4(%rdi), %ecx
.Ltmp424:
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	%eax, %ecx
	cmovll	%ecx, %eax
.Ltmp425:
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	xorl	%edx, %edx
.Ltmp426:
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- undef
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	testl	%ecx, %ecx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovnsl	%eax, %edx
.Ltmp427:
	.loc	0 561 32 is_stmt 1              # x264_src/encoder/encoder.c:561:32
	movl	%edx, 692(%rdi)
	.loc	0 561 9 is_stmt 0               # x264_src/encoder/encoder.c:561:9
	jmp	.LBB1_61
.Ltmp428:
.LBB1_59:                               # %if.else443
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_validate_parameters:max_slices <- $eax
	.loc	0 564 55 is_stmt 1              # x264_src/encoder/encoder.c:564:55
	movl	692(%rdi), %ecx
.Ltmp429:
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	%eax, %ecx
	cmovll	%ecx, %eax
.Ltmp430:
	.loc	5 0 14 is_stmt 0                # x264_src/common/common.h:0:14
	xorl	%edx, %edx
.Ltmp431:
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- undef
	.loc	5 202 17                        # x264_src/common/common.h:202:17
	testl	%ecx, %ecx
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovsl	%edx, %eax
.Ltmp432:
	.loc	0 564 32 is_stmt 1              # x264_src/encoder/encoder.c:564:32
	movl	%eax, 692(%rdi)
	.loc	0 565 37                        # x264_src/encoder/encoder.c:565:37
	movl	684(%rdi), %eax
	.loc	0 566 36                        # x264_src/encoder/encoder.c:566:36
	movl	688(%rdi), %ecx
.Ltmp433:
	testl	%ecx, %ecx
	cmovlel	%edx, %ecx
.Ltmp434:
	.loc	0 567 13                        # x264_src/encoder/encoder.c:567:13
	setle	%sil
.Ltmp435:
	.loc	0 565 37                        # x264_src/encoder/encoder.c:565:37
	testl	%eax, %eax
	cmovgl	%eax, %edx
	.loc	0 565 35 is_stmt 0              # x264_src/encoder/encoder.c:565:35
	movl	%edx, 684(%rdi)
	.loc	0 566 34 is_stmt 1              # x264_src/encoder/encoder.c:566:34
	movl	%ecx, 688(%rdi)
	setle	%al
.Ltmp436:
	.loc	0 567 38                        # x264_src/encoder/encoder.c:567:38
	testb	%al, %sil
	jne	.LBB1_61
.Ltmp437:
# %bb.60:                               # %if.then480
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 568 36                        # x264_src/encoder/encoder.c:568:36
	movl	$0, 692(%rdi)
.Ltmp438:
.LBB1_61:                               # %if.end484
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 571 55                        # x264_src/encoder/encoder.c:571:55
	movl	80(%rdi), %ecx
.Ltmp439:
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	.loc	0 572 18                        # x264_src/encoder/encoder.c:572:18
	movl	84(%rdi), %eax
.Ltmp440:
	#DEBUG_VALUE: x264_clip3:i_min <- 1
	#DEBUG_VALUE: x264_clip3:i_max <- 16
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$16, %ecx
	movl	$16, %edx
	cmovll	%ecx, %edx
	cmpl	$2, %edx
	movl	$1, %ecx
.Ltmp441:
	cmovll	%ecx, %edx
.Ltmp442:
	.loc	0 571 32                        # x264_src/encoder/encoder.c:571:32
	movl	%edx, 80(%rdi)
.Ltmp443:
	.loc	0 572 31                        # x264_src/encoder/encoder.c:572:31
	testl	%eax, %eax
.Ltmp444:
	.loc	0 572 9 is_stmt 0               # x264_src/encoder/encoder.c:572:9
	jle	.LBB1_64
.Ltmp445:
# %bb.62:                               # %if.end496
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 574 39 is_stmt 1              # x264_src/encoder/encoder.c:574:39
	cmpl	$0, 92(%rdi)
.Ltmp446:
	.loc	0 574 9 is_stmt 0               # x264_src/encoder/encoder.c:574:9
	js	.LBB1_65
.Ltmp447:
.LBB1_63:                               # %if.end503
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 576 10 is_stmt 1              # x264_src/encoder/encoder.c:576:10
	cmpl	$0, 428(%rdi)
	jne	.LBB1_68
	jmp	.LBB1_66
.Ltmp448:
.LBB1_64:                               # %if.then493
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 573 31                        # x264_src/encoder/encoder.c:573:31
	movl	$1, 84(%rdi)
	movl	$1, %eax
.Ltmp449:
	.loc	0 574 39                        # x264_src/encoder/encoder.c:574:39
	cmpl	$0, 92(%rdi)
.Ltmp450:
	.loc	0 574 9 is_stmt 0               # x264_src/encoder/encoder.c:574:9
	jns	.LBB1_63
.Ltmp451:
.LBB1_65:                               # %if.then500
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 575 39 is_stmt 1              # x264_src/encoder/encoder.c:575:39
	movl	$0, 92(%rdi)
.Ltmp452:
	.loc	0 576 10                        # x264_src/encoder/encoder.c:576:10
	cmpl	$0, 428(%rdi)
	.loc	0 576 43 is_stmt 0              # x264_src/encoder/encoder.c:576:43
	jne	.LBB1_68
.Ltmp453:
.LBB1_66:                               # %land.lhs.true508
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 576 80                        # x264_src/encoder/encoder.c:576:80
	cmpl	$2, 404(%rdi)
.Ltmp454:
	.loc	0 576 9                         # x264_src/encoder/encoder.c:576:9
	jl	.LBB1_68
.Ltmp455:
# %bb.67:                               # %if.then513
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 578 9 is_stmt 1               # x264_src/encoder/encoder.c:578:9
	movl	$.L.str.66, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp456:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 579 43 is_stmt 1              # x264_src/encoder/encoder.c:579:43
	movl	$1, 404(%rbx)
.Ltmp457:
	.loc	0 582 18                        # x264_src/encoder/encoder.c:582:18
	movl	84(%rbx), %eax
.Ltmp458:
.LBB1_68:                               # %if.end517
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 581 46                        # x264_src/encoder/encoder.c:581:46
	movl	100(%rdi), %edx
.Ltmp459:
	#DEBUG_VALUE: x264_clip3:v <- $edx
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 16
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$16, %edx
	movl	$16, %ecx
	cmovll	%edx, %ecx
	xorl	%edx, %edx
.Ltmp460:
	testl	%ecx, %ecx
	cmovlel	%edx, %ecx
.Ltmp461:
	.loc	0 581 23                        # x264_src/encoder/encoder.c:581:23
	movl	%ecx, 100(%rdi)
.Ltmp462:
	.loc	0 582 31                        # x264_src/encoder/encoder.c:582:31
	cmpl	$1, %eax
.Ltmp463:
	.loc	0 582 9 is_stmt 0               # x264_src/encoder/encoder.c:582:9
	jne	.LBB1_70
.Ltmp464:
# %bb.69:                               # %if.then527
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 585 34 is_stmt 1              # x264_src/encoder/encoder.c:585:34
	movq	$0, 96(%rdi)
	xorl	%ecx, %ecx
.Ltmp465:
.LBB1_70:                               # %if.end531
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 587 51                        # x264_src/encoder/encoder.c:587:51
	movl	108(%rdi), %eax
.Ltmp466:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- -90
	#DEBUG_VALUE: x264_clip3:i_max <- 100
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$100, %eax
	movl	$100, %edx
	cmovll	%eax, %edx
	cmpl	$-89, %edx
	movl	$-90, %eax
.Ltmp467:
	cmovgel	%edx, %eax
.Ltmp468:
	.loc	0 587 28                        # x264_src/encoder/encoder.c:587:28
	movl	%eax, 108(%rdi)
.Ltmp469:
	.loc	0 588 27                        # x264_src/encoder/encoder.c:588:27
	cmpl	$2, %ecx
.Ltmp470:
	.loc	0 588 9 is_stmt 0               # x264_src/encoder/encoder.c:588:9
	jae	.LBB1_73
.Ltmp471:
# %bb.71:                               # %if.end542
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:v <- 0
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	0 590 31 is_stmt 1              # x264_src/encoder/encoder.c:590:31
	movl	$0, 112(%rdi)
	xorl	%eax, %eax
.Ltmp472:
	.loc	0 591 10                        # x264_src/encoder/encoder.c:591:10
	testl	%ecx, %ecx
.Ltmp473:
	.loc	0 591 9 is_stmt 0               # x264_src/encoder/encoder.c:591:9
	jne	.LBB1_74
.Ltmp474:
# %bb.72:                               # %if.then551
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 593 36 is_stmt 1              # x264_src/encoder/encoder.c:593:36
	movl	$0, 104(%rdi)
	.loc	0 595 44                        # x264_src/encoder/encoder.c:595:44
	movq	$0, 400(%rdi)
	jmp	.LBB1_74
.Ltmp475:
.LBB1_73:                               # %if.end542.thread
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 590 54                        # x264_src/encoder/encoder.c:590:54
	movl	112(%rdi), %eax
.Ltmp476:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$2, %eax
	movl	$2, %ecx
	cmovll	%eax, %ecx
	xorl	%edx, %edx
	testl	%ecx, %ecx
	cmovgl	%ecx, %edx
.Ltmp477:
	.loc	0 590 31                        # x264_src/encoder/encoder.c:590:31
	movl	%edx, 112(%rdi)
.Ltmp478:
.LBB1_74:                               # %if.end558
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 597 9                         # x264_src/encoder/encoder.c:597:9
	cmpl	$0, 96(%rdi)
	.loc	0 597 34 is_stmt 0              # x264_src/encoder/encoder.c:597:34
	je	.LBB1_79
.Ltmp479:
# %bb.75:                               # %land.lhs.true562
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 597 63                        # x264_src/encoder/encoder.c:597:63
	cmpl	$2, %eax
.Ltmp480:
	.loc	0 597 9                         # x264_src/encoder/encoder.c:597:9
	jl	.LBB1_77
.Ltmp481:
# %bb.76:                               # %if.end570
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 599 9 is_stmt 1               # x264_src/encoder/encoder.c:599:9
	movl	$.L.str.67, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp482:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 600 35 is_stmt 1              # x264_src/encoder/encoder.c:600:35
	movl	$1, 112(%rbx)
.Ltmp483:
	.loc	0 602 9                         # x264_src/encoder/encoder.c:602:9
	cmpl	$0, 96(%rbx)
	.loc	0 602 34 is_stmt 0              # x264_src/encoder/encoder.c:602:34
	je	.LBB1_79
.Ltmp484:
.LBB1_77:                               # %land.lhs.true574
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 602 64                        # x264_src/encoder/encoder.c:602:64
	cmpl	$2, 80(%rdi)
.Ltmp485:
	.loc	0 602 9                         # x264_src/encoder/encoder.c:602:9
	jl	.LBB1_79
.Ltmp486:
# %bb.78:                               # %if.then579
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 604 9 is_stmt 1               # x264_src/encoder/encoder.c:604:9
	movl	$.L.str.68, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp487:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 605 36 is_stmt 1              # x264_src/encoder/encoder.c:605:36
	movl	$1, 80(%rbx)
.Ltmp488:
.LBB1_79:                               # %if.end582
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 609 76                        # x264_src/encoder/encoder.c:609:76
	movl	84(%rdi), %ecx
.Ltmp489:
	.loc	0 607 18                        # x264_src/encoder/encoder.c:607:18
	movl	88(%rdi), %eax
	.loc	0 607 31 is_stmt 0              # x264_src/encoder/encoder.c:607:31
	testl	%eax, %eax
.Ltmp490:
	.loc	0 607 9                         # x264_src/encoder/encoder.c:607:9
	jne	.LBB1_81
.Ltmp491:
# %bb.80:                               # %select.true.sink
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	movslq	%ecx, %rax
	imulq	$1717986919, %rax, %rax         # imm = 0x66666667
	movq	%rax, %rdx
	shrq	$63, %rdx
	sarq	$34, %rax
	addl	%edx, %eax
.Ltmp492:
.LBB1_81:                               # %select.end
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 609 88 is_stmt 1              # x264_src/encoder/encoder.c:609:88
	movl	%ecx, %edx
	shrl	$31, %edx
	addl	%ecx, %edx
	sarl	%edx
	.loc	0 609 90 is_stmt 0              # x264_src/encoder/encoder.c:609:90
	incl	%edx
.Ltmp493:
	#DEBUG_VALUE: x264_clip3:i_max <- $edx
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%edx, %eax
	cmovll	%eax, %edx
.Ltmp494:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 1
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	testl	%eax, %eax
	movl	$1, %eax
.Ltmp495:
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovgl	%edx, %eax
.Ltmp496:
	.loc	0 609 27 is_stmt 1              # x264_src/encoder/encoder.c:609:27
	movl	%eax, 88(%rdi)
	.loc	0 610 55                        # x264_src/encoder/encoder.c:610:55
	movl	556(%rdi), %eax
.Ltmp497:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 250
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$250, %eax
	movl	$250, %esi
	cmovll	%eax, %esi
	xorl	%edx, %edx
	testl	%esi, %esi
	cmovgl	%esi, %edx
.Ltmp498:
	.loc	0 612 23                        # x264_src/encoder/encoder.c:612:23
	movl	508(%rdi), %eax
.Ltmp499:
	movl	524(%rdi), %ebp
	cmpl	%eax, %ebp
	movl	%eax, %esi
	cmovgl	%ebp, %esi
.Ltmp500:
	#DEBUG_VALUE: maxrate <- $esi
	.loc	0 613 25                        # x264_src/encoder/encoder.c:613:25
	testl	%esi, %esi
	je	.LBB1_83
.Ltmp501:
# %bb.82:                               # %cond.true627
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate <- $esi
	.loc	0 613 35 is_stmt 0              # x264_src/encoder/encoder.c:613:35
	cvtsi2ssl	528(%rdi), %xmm0
	.loc	0 613 74                        # x264_src/encoder/encoder.c:613:74
	cvtsi2ss	%esi, %xmm1
	.loc	0 613 72                        # x264_src/encoder/encoder.c:613:72
	divss	%xmm1, %xmm0
	jmp	.LBB1_84
.Ltmp502:
.LBB1_83:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:i_min <- 1
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 250
	#DEBUG_VALUE: maxrate <- $esi
	.loc	0 0 72                          # x264_src/encoder/encoder.c:0:72
	xorpd	%xmm0, %xmm0
.Ltmp503:
.LBB1_84:                               # %cond.end635
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate <- $esi
	#DEBUG_VALUE: bufsize <- $xmm0
	.loc	0 614 30 is_stmt 1              # x264_src/encoder/encoder.c:614:30
	movl	652(%rdi), %esi
.Ltmp504:
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/encoder.c:0:30
	movss	.LCPI1_9(%rip), %xmm1           # xmm1 = [2.5E+1,0.0E+0,0.0E+0,0.0E+0]
	.loc	0 614 40                        # x264_src/encoder/encoder.c:614:40
	testl	%esi, %esi
	.loc	0 614 44                        # x264_src/encoder/encoder.c:614:44
	je	.LBB1_87
.Ltmp505:
# %bb.85:                               # %land.lhs.true640
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: bufsize <- $xmm0
	.loc	0 614 56                        # x264_src/encoder/encoder.c:614:56
	movl	656(%rdi), %r8d
	.loc	0 614 66                        # x264_src/encoder/encoder.c:614:66
	testl	%r8d, %r8d
	.loc	0 614 21                        # x264_src/encoder/encoder.c:614:21
	je	.LBB1_87
.Ltmp506:
# %bb.86:                               # %cond.true644
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: bufsize <- $xmm0
	.loc	0 614 72                        # x264_src/encoder/encoder.c:614:72
	movl	%esi, %r9d
	xorps	%xmm1, %xmm1
	cvtsi2ss	%r9, %xmm1
	.loc	0 614 101                       # x264_src/encoder/encoder.c:614:101
	movl	%r8d, %r8d
	cvtsi2ss	%r8, %xmm2
	.loc	0 614 99                        # x264_src/encoder/encoder.c:614:99
	divss	%xmm2, %xmm1
.Ltmp507:
.LBB1_87:                               # %cond.end654
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: bufsize <- $xmm0
	#DEBUG_VALUE: fps <- $xmm1
	.loc	0 615 35 is_stmt 1              # x264_src/encoder/encoder.c:615:35
	xorps	%xmm2, %xmm2
	cvtsi2ss	%edx, %xmm2
	mulss	%xmm1, %xmm0
.Ltmp508:
	xorps	%xmm1, %xmm1
.Ltmp509:
	cvtsi2ss	%ecx, %xmm1
	maxss	%xmm0, %xmm1
	minss	%xmm1, %xmm2
	cvttss2si	%xmm2, %edx
	.loc	0 615 33 is_stmt 0              # x264_src/encoder/encoder.c:615:33
	movl	%edx, 556(%rdi)
.Ltmp510:
	.loc	0 618 10 is_stmt 1              # x264_src/encoder/encoder.c:618:10
	cmpl	$0, 660(%rdi)
	.loc	0 618 34 is_stmt 0              # x264_src/encoder/encoder.c:618:34
	je	.LBB1_89
.Ltmp511:
# %bb.88:                               # %lor.lhs.false705
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 618 38                        # x264_src/encoder/encoder.c:618:38
	cmpl	$0, 664(%rdi)
.Ltmp512:
	.loc	0 618 9                         # x264_src/encoder/encoder.c:618:9
	jne	.LBB1_90
.Ltmp513:
.LBB1_89:                               # %if.then708
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 620 44 is_stmt 1              # x264_src/encoder/encoder.c:620:44
	movl	656(%rdi), %r8d
	.loc	0 620 33 is_stmt 0              # x264_src/encoder/encoder.c:620:33
	movl	%r8d, 660(%rdi)
	.loc	0 621 33 is_stmt 1              # x264_src/encoder/encoder.c:621:33
	movl	%esi, 664(%rdi)
.Ltmp514:
.LBB1_90:                               # %if.end717
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 624 56                        # x264_src/encoder/encoder.c:624:56
	movss	592(%rdi), %xmm0                # xmm0 = mem[0],zero,zero,zero
	movss	.LCPI1_6(%rip), %xmm1           # xmm1 = [1.0E+0,0.0E+0,0.0E+0,0.0E+0]
.Ltmp515:
	#DEBUG_VALUE: x264_clip3f:v <- undef
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 1.000000e+00
	.loc	0 624 31 is_stmt 0              # x264_src/encoder/encoder.c:624:31
	minss	%xmm0, %xmm1
	xorps	%xmm2, %xmm2
	cmpltss	%xmm2, %xmm0
	andnps	%xmm1, %xmm0
	.loc	0 624 29                        # x264_src/encoder/encoder.c:624:29
	movss	%xmm0, 592(%rdi)
.Ltmp516:
	.loc	0 625 10 is_stmt 1              # x264_src/encoder/encoder.c:625:10
	testl	%edx, %edx
	.loc	0 625 34 is_stmt 0              # x264_src/encoder/encoder.c:625:34
	je	.LBB1_93
.Ltmp517:
# %bb.91:                               # %lor.lhs.false731
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 625 59                        # x264_src/encoder/encoder.c:625:59
	cmpl	$1, %ecx
	.loc	0 625 64                        # x264_src/encoder/encoder.c:625:64
	je	.LBB1_93
.Ltmp518:
# %bb.92:                               # %lor.lhs.false731
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	ucomiss	.LCPI1_6(%rip), %xmm0
	jne	.LBB1_94
	jp	.LBB1_94
.Ltmp519:
.LBB1_93:                               # %if.then742
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 626 31 is_stmt 1              # x264_src/encoder/encoder.c:626:31
	movl	$0, 552(%rdi)
.Ltmp520:
.LBB1_94:                               # %if.end746
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 627 9                         # x264_src/encoder/encoder.c:627:9
	cmpl	$0, 576(%rdi)
.Ltmp521:
	.loc	0 627 9 is_stmt 0               # x264_src/encoder/encoder.c:627:9
	je	.LBB1_96
.Ltmp522:
# %bb.95:                               # %if.then750
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 628 33 is_stmt 1              # x264_src/encoder/encoder.c:628:33
	movl	$0, 556(%rdi)
.Ltmp523:
.LBB1_96:                               # %if.end754
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 636 31                        # x264_src/encoder/encoder.c:636:31
	movl	$0, 16(%rdi)
.Ltmp524:
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- -6
	#DEBUG_VALUE: x264_clip3:i_max <- 6
	.loc	0 639 65                        # x264_src/encoder/encoder.c:639:65
	movq	120(%rdi), %xmm0                # xmm0 = mem[0],zero
.Ltmp525:
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- -6
	#DEBUG_VALUE: x264_clip3:i_max <- 6
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	movdqa	.LCPI1_10(%rip), %xmm1          # xmm1 = [6,6,u,u]
	movdqa	%xmm1, %xmm2
	pcmpgtd	%xmm0, %xmm2
	pand	%xmm2, %xmm0
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	movdqa	.LCPI1_11(%rip), %xmm0          # xmm0 = [4294967290,4294967290,u,u]
	movdqa	%xmm2, %xmm1
	pcmpgtd	%xmm0, %xmm1
	pand	%xmm1, %xmm2
	pandn	%xmm0, %xmm1
	por	%xmm2, %xmm1
.Ltmp526:
	.loc	0 639 42                        # x264_src/encoder/encoder.c:639:42
	movq	%xmm1, 120(%rdi)
.Ltmp527:
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 32
	.loc	0 641 55                        # x264_src/encoder/encoder.c:641:55
	movq	468(%rdi), %xmm0                # xmm0 = mem[0],zero
.Ltmp528:
	#DEBUG_VALUE: x264_clip3:v <- undef
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 32
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	movdqa	.LCPI1_12(%rip), %xmm1          # xmm1 = [32,32,u,u]
	movdqa	%xmm1, %xmm2
	pcmpgtd	%xmm0, %xmm2
	pand	%xmm2, %xmm0
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pxor	%xmm0, %xmm0
	movdqa	%xmm2, %xmm1
	pcmpgtd	%xmm0, %xmm1
	pand	%xmm2, %xmm1
.Ltmp529:
	.loc	0 641 41                        # x264_src/encoder/encoder.c:641:41
	movq	%xmm1, 468(%rdi)
	.loc	0 644 54                        # x264_src/encoder/encoder.c:644:54
	movl	132(%rdi), %ecx
.Ltmp530:
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	.loc	0 646 18                        # x264_src/encoder/encoder.c:646:18
	movl	144(%rdi), %edx
.Ltmp531:
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$2, %ecx
	movl	$2, %esi
	cmovll	%ecx, %esi
	xorl	%ecx, %ecx
.Ltmp532:
	testl	%esi, %esi
	cmovgl	%esi, %ecx
.Ltmp533:
	.loc	0 644 31                        # x264_src/encoder/encoder.c:644:31
	movl	%ecx, 132(%rdi)
.Ltmp534:
	.loc	0 646 47                        # x264_src/encoder/encoder.c:646:47
	cmpl	$3, %edx
	jb	.LBB1_97
.Ltmp535:
# %bb.100:                              # %if.then793
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 647 31                        # x264_src/encoder/encoder.c:647:31
	movl	$0, 144(%rdi)
.Ltmp536:
	.loc	0 649 26                        # x264_src/encoder/encoder.c:649:26
	movl	412(%rdi), %ecx
	.loc	0 649 52 is_stmt 0              # x264_src/encoder/encoder.c:649:52
	cmpl	$5, %ecx
	jae	.LBB1_101
.Ltmp537:
.LBB1_98:                               # %if.end812
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 652 26 is_stmt 1              # x264_src/encoder/encoder.c:652:26
	movl	416(%rdi), %edx
	.loc	0 652 37 is_stmt 0              # x264_src/encoder/encoder.c:652:37
	cmpl	$3, %edx
.Ltmp538:
	.loc	0 652 9                         # x264_src/encoder/encoder.c:652:9
	jg	.LBB1_102
.Ltmp539:
.LBB1_99:                               # %if.end822.thread
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 653 37 is_stmt 1              # x264_src/encoder/encoder.c:653:37
	movl	$4, 416(%rdi)
	jmp	.LBB1_104
.Ltmp540:
.LBB1_97:                               # %if.end796
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 649 26                        # x264_src/encoder/encoder.c:649:26
	movl	412(%rdi), %ecx
	.loc	0 649 52 is_stmt 0              # x264_src/encoder/encoder.c:649:52
	cmpl	$5, %ecx
	jb	.LBB1_98
.Ltmp541:
.LBB1_101:                              # %if.then808
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 651 38 is_stmt 1              # x264_src/encoder/encoder.c:651:38
	movl	$1, 412(%rdi)
	movl	$1, %ecx
.Ltmp542:
	.loc	0 652 26                        # x264_src/encoder/encoder.c:652:26
	movl	416(%rdi), %edx
	.loc	0 652 37 is_stmt 0              # x264_src/encoder/encoder.c:652:37
	cmpl	$3, %edx
.Ltmp543:
	.loc	0 652 9                         # x264_src/encoder/encoder.c:652:9
	jle	.LBB1_99
.Ltmp544:
.LBB1_102:                              # %if.end822
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 654 37 is_stmt 1              # x264_src/encoder/encoder.c:654:37
	cmpl	$17, %edx
	setb	%dl
	cmpl	$2, %ecx
	setae	%sil
	.loc	0 654 42 is_stmt 0              # x264_src/encoder/encoder.c:654:42
	orb	%dl, %sil
	jne	.LBB1_104
.Ltmp545:
# %bb.103:                              # %if.end838.thread
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 655 37 is_stmt 1              # x264_src/encoder/encoder.c:655:37
	movl	$16, 416(%rdi)
	jmp	.LBB1_108
.Ltmp546:
.LBB1_104:                              # %if.end838
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 656 38                        # x264_src/encoder/encoder.c:656:38
	cmpl	$4, %ecx
	.loc	0 656 54 is_stmt 0              # x264_src/encoder/encoder.c:656:54
	jne	.LBB1_108
.Ltmp547:
# %bb.105:                              # %land.lhs.true844
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 657 10 is_stmt 1              # x264_src/encoder/encoder.c:657:10
	cmpl	$0, 25812(%rdi)
	.loc	0 657 27 is_stmt 0              # x264_src/encoder/encoder.c:657:27
	jne	.LBB1_107
.Ltmp548:
# %bb.106:                              # %lor.lhs.false848
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 657 47                        # x264_src/encoder/encoder.c:657:47
	movl	428(%rdi), %ecx
	.loc	0 657 63                        # x264_src/encoder/encoder.c:657:63
	cmpl	$1, %ecx
.Ltmp549:
	.loc	0 656 9 is_stmt 1               # x264_src/encoder/encoder.c:656:9
	jg	.LBB1_109
.Ltmp550:
.LBB1_107:                              # %if.then854
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 658 38                        # x264_src/encoder/encoder.c:658:38
	movl	$3, 412(%rdi)
.Ltmp551:
.LBB1_108:                              # %if.end858thread-pre-split
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 659 69                        # x264_src/encoder/encoder.c:659:69
	movl	428(%rdi), %ecx
.Ltmp552:
.LBB1_109:                              # %if.end858
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:v <- $ecx
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 10
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$10, %ecx
	movl	$10, %esi
	cmovll	%ecx, %esi
	xorl	%edx, %edx
	testl	%esi, %esi
	cmovlel	%edx, %esi
.Ltmp553:
	.loc	0 659 38                        # x264_src/encoder/encoder.c:659:38
	movl	%esi, 428(%rdi)
	.loc	0 660 43                        # x264_src/encoder/encoder.c:660:43
	cmpl	$0, 436(%rdi)
	.loc	0 660 79 is_stmt 0              # x264_src/encoder/encoder.c:660:79
	je	.LBB1_111
.Ltmp554:
# %bb.110:                              # %land.rhs869
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 660 109                       # x264_src/encoder/encoder.c:660:109
	cmpl	$2, 80(%rdi)
	setge	%dl
.Ltmp555:
.LBB1_111:                              # %land.end874
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 660 79                        # x264_src/encoder/encoder.c:660:79
	movzbl	%dl, %edx
	.loc	0 660 41                        # x264_src/encoder/encoder.c:660:41
	movl	%edx, 436(%rdi)
	.loc	0 663 28 is_stmt 1              # x264_src/encoder/encoder.c:663:28
	movl	384(%rdi), %edx
	.loc	0 661 28                        # x264_src/encoder/encoder.c:661:28
	movl	388(%rdi), %r8d
	movl	%r8d, %esi
	andl	$307, %esi                      # imm = 0x133
	movl	%esi, 388(%rdi)
	.loc	0 663 28                        # x264_src/encoder/encoder.c:663:28
	movl	%edx, %r9d
	andl	$3, %r9d
	movl	%r9d, 384(%rdi)
.Ltmp556:
	.loc	0 664 34                        # x264_src/encoder/encoder.c:664:34
	testb	$16, %r8b
.Ltmp557:
	.loc	0 664 9 is_stmt 0               # x264_src/encoder/encoder.c:664:9
	jne	.LBB1_113
.Ltmp558:
# %bb.112:                              # %if.then891
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 665 32 is_stmt 1              # x264_src/encoder/encoder.c:665:32
	andl	$259, %r8d                      # imm = 0x103
	movl	%r8d, 388(%rdi)
	movl	%r8d, %esi
.Ltmp559:
.LBB1_113:                              # %if.end896
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 666 10                        # x264_src/encoder/encoder.c:666:10
	cmpl	$0, 392(%rdi)
.Ltmp560:
	.loc	0 666 9 is_stmt 0               # x264_src/encoder/encoder.c:666:9
	jne	.LBB1_115
.Ltmp561:
# %bb.114:                              # %if.then901
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 668 32 is_stmt 1              # x264_src/encoder/encoder.c:668:32
	andl	$305, %esi                      # imm = 0x131
	movl	%esi, 388(%rdi)
	.loc	0 669 32                        # x264_src/encoder/encoder.c:669:32
	andl	$1, %edx
	movl	%edx, 384(%rdi)
.Ltmp562:
.LBB1_115:                              # %if.end910
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 671 71                        # x264_src/encoder/encoder.c:671:71
	movl	408(%rdi), %edx
.Ltmp563:
	#DEBUG_VALUE: x264_clip3:v <- $edx
	#DEBUG_VALUE: x264_clip3:i_min <- -12
	#DEBUG_VALUE: x264_clip3:i_max <- 12
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$12, %edx
	movl	$12, %r8d
	cmovll	%edx, %r8d
	cmpl	$-11, %r8d
	movl	$-12, %esi
	cmovgel	%r8d, %esi
.Ltmp564:
	.loc	0 671 41                        # x264_src/encoder/encoder.c:671:41
	movl	%esi, 408(%rdi)
	xorl	%r8d, %r8d
.Ltmp565:
	.loc	0 672 10                        # x264_src/encoder/encoder.c:672:10
	cmpl	$0, 128(%rdi)
	movl	$0, %edx
.Ltmp566:
	.loc	0 672 9 is_stmt 0               # x264_src/encoder/encoder.c:672:9
	je	.LBB1_117
.Ltmp567:
# %bb.116:                              # %if.end910.if.end925_crit_edge
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 674 63 is_stmt 1              # x264_src/encoder/encoder.c:674:63
	movl	440(%rdi), %edx
.Ltmp568:
.LBB1_117:                              # %if.end925
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3:v <- $edx
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$2, %edx
	movl	$2, %r9d
	cmovll	%edx, %r9d
	testl	%r9d, %r9d
	cmovgl	%r9d, %r8d
.Ltmp569:
	.loc	0 674 32                        # x264_src/encoder/encoder.c:674:32
	movl	%r8d, 440(%rdi)
.Ltmp570:
	.loc	0 675 10                        # x264_src/encoder/encoder.c:675:10
	cmpl	$0, 464(%rdi)
.Ltmp571:
	.loc	0 675 9 is_stmt 0               # x264_src/encoder/encoder.c:675:9
	jne	.LBB1_119
.Ltmp572:
# %bb.118:                              # %if.then937
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 677 35 is_stmt 1              # x264_src/encoder/encoder.c:677:35
	movq	$0, 456(%rdi)
.Ltmp573:
.LBB1_119:                              # %if.end942
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 680 10                        # x264_src/encoder/encoder.c:680:10
	testl	%edx, %edx
.Ltmp574:
	.loc	0 680 9 is_stmt 0               # x264_src/encoder/encoder.c:680:9
	jle	.LBB1_121
.Ltmp575:
# %bb.120:                              # %if.end942.if.end951_crit_edge
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 683 68 is_stmt 1              # x264_src/encoder/encoder.c:683:68
	movd	460(%rdi), %xmm1                # xmm1 = mem[0],zero,zero,zero
	jmp	.LBB1_122
.Ltmp576:
.LBB1_121:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 68 is_stmt 0                # x264_src/encoder/encoder.c:0:68
	pxor	%xmm1, %xmm1
.Ltmp577:
.LBB1_122:                              # %if.end951
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3f:v <- undef
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 1.000000e+01
	#DEBUG_VALUE: x264_clip3f:v <- undef
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 1.000000e+01
	.loc	5 207 17 is_stmt 1              # x264_src/common/common.h:207:17
	movd	456(%rdi), %xmm0                # xmm0 = mem[0],zero,zero,zero
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	pxor	%xmm1, %xmm1
	.loc	5 207 14 is_stmt 0              # x264_src/common/common.h:207:14
	movaps	.LCPI1_13(%rip), %xmm2          # xmm2 = [1.0E+1,1.0E+1,u,u]
.Ltmp578:
	.loc	0 682 33 is_stmt 1              # x264_src/encoder/encoder.c:682:33
	minps	%xmm0, %xmm2
	cmpnltps	%xmm1, %xmm0
	andps	%xmm2, %xmm0
	.loc	0 682 31 is_stmt 0              # x264_src/encoder/encoder.c:682:31
	movlps	%xmm0, 456(%rdi)
.Ltmp579:
	.loc	0 684 42 is_stmt 1              # x264_src/encoder/encoder.c:684:42
	cmpl	$5, %ecx
.Ltmp580:
	.loc	0 684 9 is_stmt 0               # x264_src/encoder/encoder.c:684:9
	jg	.LBB1_124
.Ltmp581:
# %bb.123:                              # %if.then975
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 685 35 is_stmt 1              # x264_src/encoder/encoder.c:685:35
	movl	$0, 456(%rdi)
	xorps	%xmm3, %xmm3
	jmp	.LBB1_125
.Ltmp582:
.LBB1_124:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 1.000000e+01
	.loc	0 0 35 is_stmt 0                # x264_src/encoder/encoder.c:0:35
	movaps	%xmm0, %xmm3
.Ltmp583:
.LBB1_125:                              # %if.end979
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	movss	.LCPI1_14(%rip), %xmm2          # xmm2 = [2.5E-1,0.0E+0,0.0E+0,0.0E+0]
	.loc	0 691 9 is_stmt 1               # x264_src/encoder/encoder.c:691:9
	xorl	%r8d, %r8d
	ucomiss	%xmm3, %xmm2
	seta	%r8b
	.loc	0 693 27                        # x264_src/encoder/encoder.c:693:27
	shufps	$85, %xmm0, %xmm0               # xmm0 = xmm0[1,1,1,1]
	movaps	%xmm0, %xmm4
	mulss	%xmm2, %xmm4
	.loc	0 686 22                        # x264_src/encoder/encoder.c:686:22
	unpcklps	%xmm4, %xmm3                    # xmm3 = xmm3[0],xmm4[0],xmm3[1],xmm4[1]
	mulps	.LCPI1_15(%rip), %xmm3
	cvtps2pd	%xmm3, %xmm3
	addpd	.LCPI1_16(%rip), %xmm3
	cvttpd2dq	%xmm3, %xmm3
	.loc	0 691 9                         # x264_src/encoder/encoder.c:691:9
	orl	$-2, %r8d
.Ltmp584:
	.loc	0 695 9                         # x264_src/encoder/encoder.c:695:9
	pshufd	$80, %xmm3, %xmm4               # xmm4 = xmm3[0,0,1,1]
	pcmpeqd	%xmm1, %xmm4
	movmskpd	%xmm4, %r10d
	xorl	%r9d, %r9d
.Ltmp585:
	.loc	0 691 9                         # x264_src/encoder/encoder.c:691:9
	testb	$1, %r10b
	cmovnel	%r9d, %r8d
	addl	%r8d, %esi
	.loc	0 695 9                         # x264_src/encoder/encoder.c:695:9
	xorl	%r8d, %r8d
	ucomiss	%xmm0, %xmm2
	seta	%r8b
	orl	$-2, %r8d
	testb	$2, %r10b
	cmovnel	%r9d, %r8d
	addl	%esi, %r8d
.Ltmp586:
	#DEBUG_VALUE: x264_clip3:v <- $r8d
	#DEBUG_VALUE: x264_clip3:i_min <- -12
	#DEBUG_VALUE: x264_clip3:i_max <- 12
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$-11, %r8d
	movl	$-12, %esi
	cmovgel	%r8d, %esi
.Ltmp587:
	.loc	0 686 20                        # x264_src/encoder/encoder.c:686:20
	movq	%xmm3, 16428(%rdi)
	.loc	0 697 41                        # x264_src/encoder/encoder.c:697:41
	movl	%esi, 408(%rdi)
	.loc	0 698 53                        # x264_src/encoder/encoder.c:698:53
	movl	544(%rdi), %r8d
.Ltmp588:
	#DEBUG_VALUE: x264_clip3:v <- $r8d
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$2, %r8d
	movl	$2, %esi
	cmovll	%r8d, %esi
	testl	%esi, %esi
	cmovlel	%r9d, %esi
.Ltmp589:
	.loc	0 698 27                        # x264_src/encoder/encoder.c:698:27
	movl	%esi, 544(%rdi)
	.loc	0 699 58                        # x264_src/encoder/encoder.c:699:58
	movss	548(%rdi), %xmm0                # xmm0 = mem[0],zero,zero,zero
	movss	.LCPI1_17(%rip), %xmm1          # xmm1 = [3.0E+0,0.0E+0,0.0E+0,0.0E+0]
.Ltmp590:
	#DEBUG_VALUE: x264_clip3f:v <- undef
	#DEBUG_VALUE: x264_clip3f:f_min <- 0.000000e+00
	#DEBUG_VALUE: x264_clip3f:f_max <- 3.000000e+00
	.loc	0 699 33 is_stmt 0              # x264_src/encoder/encoder.c:699:33
	minss	%xmm0, %xmm1
	xorps	%xmm2, %xmm2
	cmpltss	%xmm2, %xmm0
	andnps	%xmm1, %xmm0
	.loc	0 699 31                        # x264_src/encoder/encoder.c:699:31
	movss	%xmm0, 548(%rdi)
.Ltmp591:
	.loc	0 700 35 is_stmt 1              # x264_src/encoder/encoder.c:700:35
	ucomiss	%xmm2, %xmm0
.Ltmp592:
	.loc	0 700 9 is_stmt 0               # x264_src/encoder/encoder.c:700:9
	jne	.LBB1_129
	jp	.LBB1_129
.Ltmp593:
# %bb.126:                              # %if.end1060.thread
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 701 31 is_stmt 1              # x264_src/encoder/encoder.c:701:31
	movl	$0, 544(%rdi)
.Ltmp594:
.LBB1_127:                              # %land.lhs.true1065
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 703 35                        # x264_src/encoder/encoder.c:703:35
	cmpl	$0, 552(%rdi)
.Ltmp595:
	.loc	0 703 9 is_stmt 0               # x264_src/encoder/encoder.c:703:9
	je	.LBB1_130
.Ltmp596:
# %bb.128:                              # %if.then1070
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 705 31 is_stmt 1              # x264_src/encoder/encoder.c:705:31
	movq	$1, 544(%rdi)
	movl	$1, %esi
	jmp	.LBB1_131
.Ltmp597:
.LBB1_129:                              # %if.end1060
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 703 10                        # x264_src/encoder/encoder.c:703:10
	testl	%r8d, %r8d
	jg	.LBB1_131
	jmp	.LBB1_127
.Ltmp598:
.LBB1_130:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 10 is_stmt 0                # x264_src/encoder/encoder.c:0:10
	xorl	%esi, %esi
.Ltmp599:
.LBB1_131:                              # %if.end1077
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 708 71 is_stmt 1              # x264_src/encoder/encoder.c:708:71
	movl	452(%rdi), %r8d
.Ltmp600:
	#DEBUG_VALUE: x264_clip3:v <- $r8d
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 65536
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$65536, %r8d                    # imm = 0x10000
	movl	$65536, %r9d                    # imm = 0x10000
	cmovll	%r8d, %r9d
	xorl	%r8d, %r8d
.Ltmp601:
	testl	%r9d, %r9d
	cmovgl	%r9d, %r8d
.Ltmp602:
	.loc	0 708 40                        # x264_src/encoder/encoder.c:708:40
	movl	%r8d, 452(%rdi)
.Ltmp603:
	.loc	0 709 42                        # x264_src/encoder/encoder.c:709:42
	cmpl	$10, %ecx
	.loc	0 709 48 is_stmt 0              # x264_src/encoder/encoder.c:709:48
	jl	.LBB1_135
.Ltmp604:
# %bb.132:                              # %land.lhs.true1090
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 709 79                        # x264_src/encoder/encoder.c:709:79
	cmpl	$2, %edx
	.loc	0 709 84                        # x264_src/encoder/encoder.c:709:84
	jl	.LBB1_134
.Ltmp605:
# %bb.133:                              # %land.lhs.true1090
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	testl	%esi, %esi
	jne	.LBB1_135
.Ltmp606:
.LBB1_134:                              # %if.then1101
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 710 42 is_stmt 1              # x264_src/encoder/encoder.c:710:42
	movl	$9, 428(%rdi)
.Ltmp607:
.LBB1_135:                              # %if.end1105
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 714 22                        # x264_src/encoder/encoder.c:714:22
	movl	32(%rdi), %ecx
	.loc	0 714 34 is_stmt 0              # x264_src/encoder/encoder.c:714:34
	testl	%ecx, %ecx
.Ltmp608:
	#DEBUG_VALUE: l <- undef
	.loc	0 714 13                        # x264_src/encoder/encoder.c:714:13
	js	.LBB1_140
.Ltmp609:
# %bb.136:                              # %while.cond.preheader
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 727 23 is_stmt 1              # x264_src/encoder/encoder.c:727:23
	movq	x264_levels@GOTPCREL(%rip), %r14
.Ltmp610:
	#DEBUG_VALUE: l <- $r14
	movl	(%r14), %eax
	.loc	0 727 20 is_stmt 0              # x264_src/encoder/encoder.c:727:20
	testl	%eax, %eax
	.loc	0 727 33                        # x264_src/encoder/encoder.c:727:33
	je	.LBB1_139
.Ltmp611:
	.p2align	4, 0x90
.LBB1_137:                              # %land.rhs1154
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	#DEBUG_VALUE: l <- $r14
	.loc	0 727 49                        # x264_src/encoder/encoder.c:727:49
	cmpl	%ecx, %eax
	je	.LBB1_147
.Ltmp612:
# %bb.138:                              # %while.body
                                        #   in Loop: Header=BB1_137 Depth=1
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	.loc	0 727 23                        # x264_src/encoder/encoder.c:727:23
	movl	52(%r14), %eax
	.loc	0 728 18 is_stmt 1              # x264_src/encoder/encoder.c:728:18
	addq	$52, %r14
.Ltmp613:
	#DEBUG_VALUE: l <- $r14
	.loc	0 727 20                        # x264_src/encoder/encoder.c:727:20
	testl	%eax, %eax
	.loc	0 727 33 is_stmt 0              # x264_src/encoder/encoder.c:727:33
	jne	.LBB1_137
.Ltmp614:
.LBB1_139:                              # %if.then1166
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	.loc	0 731 17 is_stmt 1              # x264_src/encoder/encoder.c:731:17
	movl	$.L.str.69, %edx
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp615:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB1_28
.Ltmp616:
.LBB1_140:                              # %if.then1109
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 717 41 is_stmt 1              # x264_src/encoder/encoder.c:717:41
	cmpl	$2, 488(%rdi)
	.loc	0 717 56 is_stmt 0              # x264_src/encoder/encoder.c:717:56
	jne	.LBB1_143
.Ltmp617:
# %bb.141:                              # %land.lhs.true1118
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 717 89                        # x264_src/encoder/encoder.c:717:89
	cmpl	$0, 528(%rdi)
.Ltmp618:
	.loc	0 717 17                        # x264_src/encoder/encoder.c:717:17
	jg	.LBB1_143
.Ltmp619:
# %bb.142:                              # %if.then1124
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 718 71 is_stmt 1              # x264_src/encoder/encoder.c:718:71
	addl	%eax, %eax
	.loc	0 718 47 is_stmt 0              # x264_src/encoder/encoder.c:718:47
	movl	%eax, 524(%rdi)
.Ltmp620:
.LBB1_143:                              # %if.end1132
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 719 25 is_stmt 1              # x264_src/encoder/encoder.c:719:25
	leaq	1896(%rdi), %rax
	.loc	0 719 20 is_stmt 0              # x264_src/encoder/encoder.c:719:20
	movq	%rax, 3200(%rdi)
	.loc	0 720 45 is_stmt 1              # x264_src/encoder/encoder.c:720:45
	movl	644(%rdi), %esi
	.loc	0 720 13 is_stmt 0              # x264_src/encoder/encoder.c:720:13
	movq	%rax, %rdi
	movq	%rbx, %rdx
	callq	x264_sps_init@PLT
.Ltmp621:
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	%rbx, %rdi
	.loc	0 721 42 is_stmt 1              # x264_src/encoder/encoder.c:721:42
	movq	x264_levels@GOTPCREL(%rip), %r12
	movl	(%r12), %r15d
.Ltmp622:
	.p2align	4, 0x90
.LBB1_144:                              # %do.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movq	%r12, %r14
.Ltmp623:
	#DEBUG_VALUE: l <- $r12
	.loc	0 721 37                        # x264_src/encoder/encoder.c:721:37
	movl	%r15d, 32(%rdi)
	.loc	0 722 29 is_stmt 1              # x264_src/encoder/encoder.c:722:29
	movl	52(%r12), %r15d
	.loc	0 722 24 is_stmt 0              # x264_src/encoder/encoder.c:722:24
	testl	%r15d, %r15d
	.loc	0 722 39                        # x264_src/encoder/encoder.c:722:39
	je	.LBB1_146
.Ltmp624:
# %bb.145:                              # %land.lhs.true1141
                                        #   in Loop: Header=BB1_144 Depth=1
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r12
	#DEBUG_VALUE: maxrate_bak <- $ebp
	.loc	0 722 0                         # x264_src/encoder/encoder.c:722:0
	leaq	52(%r14), %r12
.Ltmp625:
	#DEBUG_VALUE: l <- $r14
	.loc	0 722 42                        # x264_src/encoder/encoder.c:722:42
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	x264_validate_levels@PLT
.Ltmp626:
	.loc	0 0 42                          # x264_src/encoder/encoder.c:0:42
	movq	%rbx, %rdi
	.loc	0 722 42                        # x264_src/encoder/encoder.c:722:42
	testl	%eax, %eax
	.loc	0 722 71                        # x264_src/encoder/encoder.c:722:71
	jne	.LBB1_144
.Ltmp627:
.LBB1_146:                              # %do.end
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	#DEBUG_VALUE: maxrate_bak <- $ebp
	#DEBUG_VALUE: l <- $r14
	.loc	0 723 43 is_stmt 1              # x264_src/encoder/encoder.c:723:43
	movl	%ebp, 524(%rdi)
.Ltmp628:
.LBB1_147:                              # %if.end1170
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	#DEBUG_VALUE: l <- $r14
	.loc	0 735 30                        # x264_src/encoder/encoder.c:735:30
	movl	420(%rdi), %eax
	.loc	0 735 41 is_stmt 0              # x264_src/encoder/encoder.c:735:41
	testl	%eax, %eax
.Ltmp629:
	.loc	0 735 13                        # x264_src/encoder/encoder.c:735:13
	jle	.LBB1_149
.Ltmp630:
# %bb.148:                              # %if.else1181
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	.loc	0 738 103 is_stmt 1             # x264_src/encoder/encoder.c:738:103
	movl	136(%rdi), %ecx
	movl	$512, %edx                      # imm = 0x200
	.loc	0 738 91 is_stmt 0              # x264_src/encoder/encoder.c:738:91
	shrl	%cl, %edx
.Ltmp631:
	#DEBUG_VALUE: x264_clip3:i_max <- $edx
	.loc	5 202 14 is_stmt 1              # x264_src/common/common.h:202:14
	cmpl	%edx, %eax
	cmovbl	%eax, %edx
.Ltmp632:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 32
	.loc	5 202 17 is_stmt 0              # x264_src/common/common.h:202:17
	cmpl	$32, %eax
	movl	$32, %esi
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmovael	%edx, %esi
	jmp	.LBB1_150
.Ltmp633:
.LBB1_149:                              # %if.then1175
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	.loc	0 736 46 is_stmt 1              # x264_src/encoder/encoder.c:736:46
	movl	24(%r14), %esi
	.loc	0 736 67 is_stmt 0              # x264_src/encoder/encoder.c:736:67
	movl	136(%rdi), %ecx
	.loc	0 736 55                        # x264_src/encoder/encoder.c:736:55
	sarl	%cl, %esi
.Ltmp634:
.LBB1_150:                              # %if.end1192
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: l <- $r14
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movl	%esi, 420(%rdi)
.Ltmp635:
	.loc	0 741 69 is_stmt 1              # x264_src/encoder/encoder.c:741:69
	movl	396(%rdi), %eax
.Ltmp636:
	#DEBUG_VALUE: x264_clip3:v <- $eax
	#DEBUG_VALUE: x264_clip3:i_min <- 0
	#DEBUG_VALUE: x264_clip3:i_max <- 2
	.loc	5 202 14                        # x264_src/common/common.h:202:14
	cmpl	$2, %eax
	movl	$2, %edx
	cmovll	%eax, %edx
	xorl	%r8d, %r8d
	testl	%edx, %edx
	cmovgl	%edx, %r8d
.Ltmp637:
	.loc	0 741 38                        # x264_src/encoder/encoder.c:741:38
	movl	%r8d, 396(%rdi)
.Ltmp638:
	.loc	0 742 10                        # x264_src/encoder/encoder.c:742:10
	testl	%eax, %eax
	.loc	0 742 43 is_stmt 0              # x264_src/encoder/encoder.c:742:43
	jle	.LBB1_168
.Ltmp639:
.LBB1_151:                              # %if.end1225
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 745 12 is_stmt 1              # x264_src/encoder/encoder.c:745:12
	movl	1852(%rdi), %ecx
	.loc	0 745 28 is_stmt 0              # x264_src/encoder/encoder.c:745:28
	cmpl	$2, %ecx
.Ltmp640:
	.loc	0 745 9                         # x264_src/encoder/encoder.c:745:9
	jl	.LBB1_152
.Ltmp641:
# %bb.162:                              # %if.then1229
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 747 34 is_stmt 1              # x264_src/encoder/encoder.c:747:34
	movl	424(%rdi), %eax
.Ltmp642:
	#DEBUG_VALUE: r <- $eax
	.loc	0 749 15                        # x264_src/encoder/encoder.c:749:15
	testl	%eax, %eax
.Ltmp643:
	.loc	0 749 13 is_stmt 0              # x264_src/encoder/encoder.c:749:13
	jg	.LBB1_164
.Ltmp644:
# %bb.163:                              # %if.then1234
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: r <- $eax
	.loc	0 755 39 is_stmt 1              # x264_src/encoder/encoder.c:755:39
	movl	24(%rdi), %eax
.Ltmp645:
	.loc	0 755 48 is_stmt 0              # x264_src/encoder/encoder.c:755:48
	addl	$24, %eax
	.loc	0 755 70                        # x264_src/encoder/encoder.c:755:70
	cltd
	idivl	%ecx
                                        # kill: def $eax killed $eax def $rax
	.loc	0 755 91                        # x264_src/encoder/encoder.c:755:91
	movl	%eax, %ecx
	addl	$-24, %ecx
.Ltmp646:
	#DEBUG_VALUE: max_range <- $ecx
	.loc	0 756 27 is_stmt 1              # x264_src/encoder/encoder.c:756:27
	shrl	$31, %ecx
.Ltmp647:
	addl	%ecx, %eax
	addl	$-24, %eax
	sarl	%eax
.Ltmp648:
	#DEBUG_VALUE: r <- $eax
.LBB1_164:                              # %if.end1242
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	#DEBUG_VALUE: r <- $eax
	#DEBUG_VALUE: r <- $eax
	.loc	0 758 13                        # x264_src/encoder/encoder.c:758:13
	movl	416(%rdi), %ecx
	cmpl	%ecx, %eax
	cmovgl	%eax, %ecx
.Ltmp649:
	#DEBUG_VALUE: r <- $ecx
	.loc	0 759 13                        # x264_src/encoder/encoder.c:759:13
	cmpl	%esi, %ecx
	cmovgel	%esi, %ecx
.Ltmp650:
	#DEBUG_VALUE: r <- $ecx
	.loc	0 761 17                        # x264_src/encoder/encoder.c:761:17
	movl	%ecx, %r14d
	andl	$-16, %r14d
	.loc	0 761 24 is_stmt 0              # x264_src/encoder/encoder.c:761:24
	leal	8(%r14), %eax
.Ltmp651:
	#DEBUG_VALUE: r2 <- $eax
	.loc	0 762 13 is_stmt 1              # x264_src/encoder/encoder.c:762:13
	addl	$24, %r14d
.Ltmp652:
	.loc	0 762 16 is_stmt 0              # x264_src/encoder/encoder.c:762:16
	cmpl	%ecx, %eax
.Ltmp653:
	.loc	0 762 13                        # x264_src/encoder/encoder.c:762:13
	cmovgel	%eax, %r14d
.Ltmp654:
	#DEBUG_VALUE: r2 <- $r14d
	.loc	0 764 9 is_stmt 1               # x264_src/encoder/encoder.c:764:9
	movl	$.L.str.70, %edx
	movq	%rbx, %rdi
	movl	$3, %esi
	movl	%r14d, %ecx
.Ltmp655:
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp656:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%rbx, %rdi
	.loc	0 765 44 is_stmt 1              # x264_src/encoder/encoder.c:765:44
	movl	%r14d, 424(%rbx)
	xorps	%xmm0, %xmm0
.Ltmp657:
	.loc	0 768 29                        # x264_src/encoder/encoder.c:768:29
	ucomiss	596(%rdi), %xmm0
.Ltmp658:
	.loc	0 768 9 is_stmt 0               # x264_src/encoder/encoder.c:768:9
	ja	.LBB1_165
.Ltmp659:
.LBB1_153:                              # %if.end1286
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 770 39 is_stmt 1              # x264_src/encoder/encoder.c:770:39
	ucomiss	600(%rdi), %xmm0
.Ltmp660:
	.loc	0 770 9 is_stmt 0               # x264_src/encoder/encoder.c:770:9
	jbe	.LBB1_154
.Ltmp661:
.LBB1_166:                              # %if.then1291
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 771 39 is_stmt 1              # x264_src/encoder/encoder.c:771:39
	movl	$0, 600(%rdi)
.Ltmp662:
	.loc	0 773 23                        # x264_src/encoder/encoder.c:773:23
	andl	$31, 644(%rdi)
.Ltmp663:
	.loc	0 775 30                        # x264_src/encoder/encoder.c:775:30
	cmpl	$1, 368(%rdi)
.Ltmp664:
	.loc	0 775 9 is_stmt 0               # x264_src/encoder/encoder.c:775:9
	jle	.LBB1_167
.Ltmp665:
.LBB1_155:                              # %if.end1309
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 781 9 is_stmt 1               # x264_src/encoder/encoder.c:781:9
	cmpl	$0, 136(%rdi)
.Ltmp666:
	.loc	0 781 9 is_stmt 0               # x264_src/encoder/encoder.c:781:9
	je	.LBB1_157
.Ltmp667:
.LBB1_156:                              # %if.then1313
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 782 31 is_stmt 1              # x264_src/encoder/encoder.c:782:31
	movl	$1, 676(%rdi)
.Ltmp668:
.LBB1_157:                              # %if.end1315
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 784 18                        # x264_src/encoder/encoder.c:784:18
	movl	40(%rdi), %eax
	.loc	0 784 9 is_stmt 0               # x264_src/encoder/encoder.c:784:9
	testl	%eax, %eax
	.loc	0 784 28                        # x264_src/encoder/encoder.c:784:28
	je	.LBB1_173
.Ltmp669:
# %bb.158:                              # %land.lhs.true1318
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 784 32                        # x264_src/encoder/encoder.c:784:32
	cmpl	$0, 528(%rdi)
.Ltmp670:
	.loc	0 784 9                         # x264_src/encoder/encoder.c:784:9
	je	.LBB1_171
.Ltmp671:
# %bb.159:                              # %if.end1326
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 790 28 is_stmt 1              # x264_src/encoder/encoder.c:790:28
	cmpl	$2, %eax
	.loc	0 790 48 is_stmt 0              # x264_src/encoder/encoder.c:790:48
	jne	.LBB1_173
.Ltmp672:
# %bb.160:                              # %land.lhs.true1331
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 791 46 is_stmt 1              # x264_src/encoder/encoder.c:791:46
	movl	524(%rdi), %eax
	.loc	0 791 31 is_stmt 0              # x264_src/encoder/encoder.c:791:31
	cmpl	%eax, 508(%rdi)
	sete	%cl
	testl	%eax, %eax
	setne	%al
	.loc	0 791 64                        # x264_src/encoder/encoder.c:791:64
	testb	%al, %cl
	jne	.LBB1_173
.Ltmp673:
# %bb.161:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 64                          # x264_src/encoder/encoder.c:0:64
	movl	$1, %ebp
	movl	$.L.str.72, %edx
	jmp	.LBB1_172
.Ltmp674:
.LBB1_152:                              # %if.end1277
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	xorps	%xmm0, %xmm0
.Ltmp675:
	.loc	0 768 29 is_stmt 1              # x264_src/encoder/encoder.c:768:29
	ucomiss	596(%rdi), %xmm0
.Ltmp676:
	.loc	0 768 9 is_stmt 0               # x264_src/encoder/encoder.c:768:9
	jbe	.LBB1_153
.Ltmp677:
.LBB1_165:                              # %if.then1282
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 769 29 is_stmt 1              # x264_src/encoder/encoder.c:769:29
	movl	$0, 596(%rdi)
.Ltmp678:
	.loc	0 770 39                        # x264_src/encoder/encoder.c:770:39
	ucomiss	600(%rdi), %xmm0
.Ltmp679:
	.loc	0 770 9 is_stmt 0               # x264_src/encoder/encoder.c:770:9
	ja	.LBB1_166
.Ltmp680:
.LBB1_154:                              # %if.end1295
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 773 23 is_stmt 1              # x264_src/encoder/encoder.c:773:23
	andl	$31, 644(%rdi)
.Ltmp681:
	.loc	0 775 30                        # x264_src/encoder/encoder.c:775:30
	cmpl	$1, 368(%rdi)
.Ltmp682:
	.loc	0 775 9 is_stmt 0               # x264_src/encoder/encoder.c:775:9
	jg	.LBB1_155
.Ltmp683:
.LBB1_167:                              # %if.then1302
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 777 33 is_stmt 1              # x264_src/encoder/encoder.c:777:33
	movq	$0, 476(%rdi)
.Ltmp684:
	.loc	0 781 9                         # x264_src/encoder/encoder.c:781:9
	cmpl	$0, 136(%rdi)
.Ltmp685:
	.loc	0 781 9 is_stmt 0               # x264_src/encoder/encoder.c:781:9
	jne	.LBB1_156
	jmp	.LBB1_157
.Ltmp686:
.LBB1_168:                              # %land.lhs.true1207
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 742 46 is_stmt 1              # x264_src/encoder/encoder.c:742:46
	cmpl	$0, 552(%rdi)
	.loc	0 742 68 is_stmt 0              # x264_src/encoder/encoder.c:742:68
	je	.LBB1_151
.Ltmp687:
# %bb.169:                              # %land.lhs.true1212
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 742 71                        # x264_src/encoder/encoder.c:742:71
	cmpl	$0, 464(%rdi)
	setne	%al
	testl	%ecx, %ecx
	sete	%cl
	.loc	0 742 94                        # x264_src/encoder/encoder.c:742:94
	andb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB1_151
.Ltmp688:
# %bb.170:                              # %if.then1221
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 743 42 is_stmt 1              # x264_src/encoder/encoder.c:743:42
	movl	$-1, 396(%rdi)
	jmp	.LBB1_151
.Ltmp689:
.LBB1_171:
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 0 42 is_stmt 0                # x264_src/encoder/encoder.c:0:42
	xorl	%ebp, %ebp
	movl	$.L.str.71, %edx
.Ltmp690:
.LBB1_172:                              # %if.end1348.sink.split
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp691:
	movq	%rbx, %rdi
	movl	%ebp, 40(%rbx)
.Ltmp692:
.LBB1_173:                              # %if.end1348
	#DEBUG_VALUE: x264_validate_parameters:h <- $rbx
	.loc	0 799 5 is_stmt 1               # x264_src/encoder/encoder.c:799:5
	xorl	%eax, %eax
	cmpl	$0, 128(%rdi)
	setne	%al
	movl	%eax, 128(%rdi)
	.loc	0 801 5                         # x264_src/encoder/encoder.c:801:5
	xorl	%eax, %eax
	cmpl	$0, 116(%rdi)
	setne	%al
	movl	%eax, 116(%rdi)
	.loc	0 803 5                         # x264_src/encoder/encoder.c:803:5
	movq	8(%rdi), %xmm2                  # xmm2 = mem[0],zero
	xorps	%xmm0, %xmm0
	pcmpeqd	%xmm0, %xmm2
	movdqa	.LCPI1_18(%rip), %xmm1          # xmm1 = [1,1,u,u]
	pandn	%xmm1, %xmm2
	movq	%xmm2, 8(%rdi)
	.loc	0 804 5                         # x264_src/encoder/encoder.c:804:5
	movq	136(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 136(%rdi)
	.loc	0 805 5                         # x264_src/encoder/encoder.c:805:5
	xorl	%eax, %eax
	cmpl	$0, 96(%rdi)
	setne	%al
	movl	%eax, 96(%rdi)
	.loc	0 806 5                         # x264_src/encoder/encoder.c:806:5
	xorl	%eax, %eax
	cmpl	$0, 372(%rdi)
	setne	%al
	movl	%eax, 372(%rdi)
	.loc	0 807 5                         # x264_src/encoder/encoder.c:807:5
	movq	632(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 632(%rdi)
	.loc	0 809 5                         # x264_src/encoder/encoder.c:809:5
	xorl	%eax, %eax
	cmpl	$0, 640(%rdi)
	setne	%al
	movl	%eax, 640(%rdi)
	.loc	0 810 5                         # x264_src/encoder/encoder.c:810:5
	xorl	%eax, %eax
	cmpl	$0, 648(%rdi)
	setne	%al
	movl	%eax, 648(%rdi)
	.loc	0 811 5                         # x264_src/encoder/encoder.c:811:5
	movq	676(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 676(%rdi)
	.loc	0 813 5                         # x264_src/encoder/encoder.c:813:5
	xorl	%eax, %eax
	cmpl	$0, 392(%rdi)
	setne	%al
	movl	%eax, 392(%rdi)
	.loc	0 814 5                         # x264_src/encoder/encoder.c:814:5
	xorl	%eax, %eax
	cmpl	$0, 400(%rdi)
	setne	%al
	movl	%eax, 400(%rdi)
	.loc	0 815 5                         # x264_src/encoder/encoder.c:815:5
	movq	432(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 432(%rdi)
	.loc	0 817 5                         # x264_src/encoder/encoder.c:817:5
	movq	444(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 444(%rdi)
	.loc	0 819 5                         # x264_src/encoder/encoder.c:819:5
	xorl	%eax, %eax
	cmpl	$0, 464(%rdi)
	setne	%al
	movl	%eax, 464(%rdi)
	.loc	0 820 5                         # x264_src/encoder/encoder.c:820:5
	movq	476(%rdi), %xmm2                # xmm2 = mem[0],zero
	pcmpeqd	%xmm0, %xmm2
	pandn	%xmm1, %xmm2
	movq	%xmm2, 476(%rdi)
	.loc	0 822 5                         # x264_src/encoder/encoder.c:822:5
	xorl	%eax, %eax
	cmpl	$0, 560(%rdi)
	setne	%al
	movl	%eax, 560(%rdi)
	.loc	0 823 5                         # x264_src/encoder/encoder.c:823:5
	xorl	%eax, %eax
	cmpl	$0, 576(%rdi)
	setne	%al
	movl	%eax, 576(%rdi)
	.loc	0 824 5                         # x264_src/encoder/encoder.c:824:5
	xorl	%eax, %eax
	cmpl	$0, 552(%rdi)
	setne	%al
	movl	%eax, 552(%rdi)
	xorl	%eax, %eax
	jmp	.LBB1_29
.Ltmp693:
.Lfunc_end1:
	.size	x264_validate_parameters, .Lfunc_end1-x264_validate_parameters
	.cfi_endproc
	.file	27 "x264_src/common" "cpu.h" md5 0x0beb41363cc0e5253fa85a15dbb3a435
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_set_aspect_ratio
	.type	x264_set_aspect_ratio,@function
x264_set_aspect_ratio:                  # @x264_set_aspect_ratio
.Lfunc_begin2:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $rdi
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $edx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	.loc	0 847 20 prologue_end           # x264_src/encoder/encoder.c:847:20
	movl	48(%rsi), %eax
	.loc	0 847 32 is_stmt 0              # x264_src/encoder/encoder.c:847:32
	testl	%eax, %eax
	.loc	0 847 36                        # x264_src/encoder/encoder.c:847:36
	jle	.LBB2_12
.Ltmp694:
# %bb.1:                                # %land.lhs.true
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $rdi
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $edx
	.loc	0 847 50                        # x264_src/encoder/encoder.c:847:50
	movl	44(%rsi), %ecx
	.loc	0 847 63                        # x264_src/encoder/encoder.c:847:63
	testl	%ecx, %ecx
.Ltmp695:
	.loc	0 847 9                         # x264_src/encoder/encoder.c:847:9
	jle	.LBB2_12
.Ltmp696:
# %bb.2:                                # %if.then
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $rdi
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $edx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebx
.Ltmp697:
	.loc	0 849 18 is_stmt 1              # x264_src/encoder/encoder.c:849:18
	movl	%eax, 4(%rsp)
.Ltmp698:
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	.loc	0 850 18                        # x264_src/encoder/encoder.c:850:18
	movl	%ecx, (%rsp)
	.loc	0 852 39                        # x264_src/encoder/encoder.c:852:39
	movl	44(%rdi), %ebp
.Ltmp699:
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/encoder.c:0:39
	movq	%rdi, %r14
	.loc	0 851 39 is_stmt 1              # x264_src/encoder/encoder.c:851:39
	movl	48(%rdi), %r15d
.Ltmp700:
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 39 is_stmt 0                # x264_src/encoder/encoder.c:0:39
	leaq	4(%rsp), %rdi
.Ltmp701:
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	movq	%rsp, %rsi
.Ltmp702:
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 854 9 is_stmt 1               # x264_src/encoder/encoder.c:854:9
	callq	x264_reduce_fraction@PLT
.Ltmp703:
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	4(%rsp), %eax
	movl	(%rsp), %ecx
	.loc	0 856 20 is_stmt 1              # x264_src/encoder/encoder.c:856:20
	cmpl	$65536, %eax                    # imm = 0x10000
	setae	%dl
	.loc	0 856 28 is_stmt 0              # x264_src/encoder/encoder.c:856:28
	cmpl	$65536, %ecx                    # imm = 0x10000
	setae	%sil
	orb	%dl, %sil
	.loc	0 856 9                         # x264_src/encoder/encoder.c:856:9
	cmpb	$1, %sil
	jne	.LBB2_5
.Ltmp704:
	.p2align	4, 0x90
.LBB2_3:                                # %while.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	%ecx, %edx
	movl	%eax, %esi
.Ltmp705:
	.loc	0 858 17 is_stmt 1              # x264_src/encoder/encoder.c:858:17
	shrl	%eax
.Ltmp706:
	#DEBUG_VALUE: i_w <- $eax
	.loc	0 859 17                        # x264_src/encoder/encoder.c:859:17
	shrl	%ecx
.Ltmp707:
	#DEBUG_VALUE: i_h <- $ecx
	.loc	0 856 20                        # x264_src/encoder/encoder.c:856:20
	cmpl	$131072, %esi                   # imm = 0x20000
	setae	%sil
	.loc	0 856 28 is_stmt 0              # x264_src/encoder/encoder.c:856:28
	cmpl	$131072, %edx                   # imm = 0x20000
	setae	%dl
	orb	%sil, %dl
	.loc	0 856 9                         # x264_src/encoder/encoder.c:856:9
	jne	.LBB2_3
.Ltmp708:
# %bb.4:                                # %while.cond.while.end_crit_edge
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- $eax
	#DEBUG_VALUE: i_h <- $ecx
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 858 17 is_stmt 1              # x264_src/encoder/encoder.c:858:17
	movl	%eax, 4(%rsp)
.Ltmp709:
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	.loc	0 859 17                        # x264_src/encoder/encoder.c:859:17
	movl	%ecx, (%rsp)
.Ltmp710:
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
.LBB2_5:                                # %while.end
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	leaq	4(%rsp), %rdi
	movq	%rsp, %rsi
	.loc	0 862 9 is_stmt 1               # x264_src/encoder/encoder.c:862:9
	callq	x264_reduce_fraction@PLT
.Ltmp711:
	.loc	0 864 13                        # x264_src/encoder/encoder.c:864:13
	movl	4(%rsp), %ecx
	movl	(%rsp), %r8d
	.loc	0 864 17 is_stmt 0              # x264_src/encoder/encoder.c:864:17
	cmpl	%r15d, %ecx
	.loc	0 864 26                        # x264_src/encoder/encoder.c:864:26
	jne	.LBB2_8
.Ltmp712:
# %bb.6:                                # %lor.lhs.false
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 26                          # x264_src/encoder/encoder.c:0:26
	testl	%ebx, %ebx
	.loc	0 864 42                        # x264_src/encoder/encoder.c:864:42
	jne	.LBB2_8
.Ltmp713:
# %bb.7:                                # %lor.lhs.false
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	cmpl	%ebp, %r8d
	je	.LBB2_11
.Ltmp714:
.LBB2_8:                                # %if.then19
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 42                          # x264_src/encoder/encoder.c:0:42
	movq	%r14, %rdi
.Ltmp715:
	.loc	0 867 39 is_stmt 1              # x264_src/encoder/encoder.c:867:39
	movq	$0, 44(%r14)
.Ltmp716:
	.loc	0 868 21                        # x264_src/encoder/encoder.c:868:21
	testl	%ecx, %ecx
	sete	%al
	testl	%r8d, %r8d
	sete	%dl
	.loc	0 868 26 is_stmt 0              # x264_src/encoder/encoder.c:868:26
	orb	%al, %dl
	cmpb	$1, %dl
	jne	.LBB2_10
.Ltmp717:
# %bb.9:                                # %if.then29
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 869 17 is_stmt 1              # x264_src/encoder/encoder.c:869:17
	movl	$.L.str.73, %edx
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp718:
	jmp	.LBB2_11
.Ltmp719:
.LBB2_10:                               # %if.else
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- $ebx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 872 30                        # x264_src/encoder/encoder.c:872:30
	cmpl	$1, %ebx
	movl	$0, %esi
	adcl	$2, %esi
	.loc	0 872 17 is_stmt 0              # x264_src/encoder/encoder.c:872:17
	movl	$.L.str.74, %edx
	movq	%rdi, %rbx
.Ltmp720:
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- [DW_OP_LLVM_entry_value 1] $edx
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp721:
	.loc	0 873 44 is_stmt 1              # x264_src/encoder/encoder.c:873:44
	movl	4(%rsp), %eax
	.loc	0 873 42 is_stmt 0              # x264_src/encoder/encoder.c:873:42
	movl	%eax, 48(%rbx)
	.loc	0 874 45 is_stmt 1              # x264_src/encoder/encoder.c:874:45
	movl	(%rsp), %eax
	.loc	0 874 43 is_stmt 0              # x264_src/encoder/encoder.c:874:43
	movl	%eax, 44(%rbx)
.Ltmp722:
.LBB2_11:                               # %if.end37
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- $r14
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: i_w <- [DW_OP_plus_uconst 4, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_h <- [DW_OP_deref] $rsp
	#DEBUG_VALUE: old_h <- $ebp
	#DEBUG_VALUE: old_w <- $r15d
	.loc	0 0 43                          # x264_src/encoder/encoder.c:0:43
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp723:
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
.Ltmp724:
.LBB2_12:                               # %if.end38
	#DEBUG_VALUE: x264_set_aspect_ratio:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_set_aspect_ratio:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_set_aspect_ratio:initial <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 878 1 is_stmt 1               # x264_src/encoder/encoder.c:878:1
	retq
.Ltmp725:
.Lfunc_end2:
	.size	x264_set_aspect_ratio, .Lfunc_end2-x264_set_aspect_ratio
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mbcmp_init
	.type	mbcmp_init,@function
mbcmp_init:                             # @mbcmp_init
.Lfunc_begin3:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	.loc	0 832 17 prologue_end           # x264_src/encoder/encoder.c:832:17
	cmpl	$0, 25812(%rdi)
	.loc	0 832 34 is_stmt 0              # x264_src/encoder/encoder.c:832:34
	je	.LBB3_2
.Ltmp726:
# %bb.1:                                # %.thread174
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	#DEBUG_VALUE: mbcmp_init:satd <- [DW_OP_stack_value] 0
	.loc	0 833 16 is_stmt 1              # x264_src/encoder/encoder.c:833:16
	leaq	31560(%rdi), %r9
	.loc	0 833 28 is_stmt 0              # x264_src/encoder/encoder.c:833:28
	leaq	31672(%rdi), %rax
	.loc	0 833 5                         # x264_src/encoder/encoder.c:833:5
	movq	32144(%rdi), %rcx
	movq	%rcx, 31864(%rdi)
	movups	32096(%rdi), %xmm0
	movups	32112(%rdi), %xmm1
	movups	32128(%rdi), %xmm2
	movups	%xmm2, 31848(%rdi)
	movups	%xmm1, 31832(%rdi)
	movups	%xmm0, 31816(%rdi)
	movl	$32584, %esi                    # imm = 0x7F48
	movl	$32560, %r8d                    # imm = 0x7F30
	movl	$32536, %r10d                   # imm = 0x7F18
	xorl	%edx, %edx
	movq	%r9, %rcx
	.loc	0 837 34 is_stmt 1              # x264_src/encoder/encoder.c:837:34
	jmp	.LBB3_5
.Ltmp727:
.LBB3_2:                                # %land.end
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	#DEBUG_VALUE: mbcmp_init:satd <- undef
	.loc	0 833 16                        # x264_src/encoder/encoder.c:833:16
	leaq	31560(%rdi), %rcx
	.loc	0 833 21 is_stmt 0              # x264_src/encoder/encoder.c:833:21
	leaq	31816(%rdi), %rdx
	.loc	0 833 28                        # x264_src/encoder/encoder.c:833:28
	leaq	31672(%rdi), %rax
	.loc	0 832 70 is_stmt 1              # x264_src/encoder/encoder.c:832:70
	cmpl	$2, 428(%rdi)
	.loc	0 833 28                        # x264_src/encoder/encoder.c:833:28
	jl	.LBB3_4
.Ltmp728:
# %bb.3:
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	.loc	0 833 5 is_stmt 0               # x264_src/encoder/encoder.c:833:5
	movq	48(%rax), %rsi
	movq	%rsi, 48(%rdx)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movups	%xmm2, 32(%rdx)
	movups	%xmm1, 16(%rdx)
	movups	%xmm0, (%rdx)
	movb	$1, %dl
	movl	$32576, %esi                    # imm = 0x7F40
	movl	$32552, %r8d                    # imm = 0x7F28
	movl	$32528, %r10d                   # imm = 0x7F10
	movq	%rax, %r9
	.loc	0 837 34 is_stmt 1              # x264_src/encoder/encoder.c:837:34
	jmp	.LBB3_5
.Ltmp729:
.LBB3_4:
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	.loc	0 833 5                         # x264_src/encoder/encoder.c:833:5
	movq	32144(%rdi), %rsi
	movq	%rsi, 48(%rdx)
	movups	32096(%rdi), %xmm0
	movups	32112(%rdi), %xmm1
	movups	32128(%rdi), %xmm2
	movups	%xmm2, 32(%rdx)
	movups	%xmm1, 16(%rdx)
	movups	%xmm0, (%rdx)
	movl	$32584, %esi                    # imm = 0x7F48
	movl	$32560, %r8d                    # imm = 0x7F30
	movl	$32536, %r10d                   # imm = 0x7F18
	xorl	%edx, %edx
	movq	%rcx, %r9
.Ltmp730:
.LBB3_5:
	#DEBUG_VALUE: mbcmp_init:h <- $rdi
	.loc	0 834 5                         # x264_src/encoder/encoder.c:834:5
	movq	48(%r9), %r11
	movq	%r11, 31920(%rdi)
	movups	(%r9), %xmm0
	movups	16(%r9), %xmm1
	movups	32(%r9), %xmm2
	movups	%xmm2, 31904(%rdi)
	movups	%xmm1, 31888(%rdi)
	movups	%xmm0, 31872(%rdi)
	.loc	0 835 36                        # x264_src/encoder/encoder.c:835:36
	movq	(%rdi,%r10), %r9
	.loc	0 835 34 is_stmt 0              # x264_src/encoder/encoder.c:835:34
	movq	%r9, 32520(%rdi)
	.loc	0 836 35 is_stmt 1              # x264_src/encoder/encoder.c:836:35
	movq	(%rdi,%r8), %r8
	.loc	0 836 33 is_stmt 0              # x264_src/encoder/encoder.c:836:33
	movq	%r8, 32544(%rdi)
	.loc	0 837 34 is_stmt 1              # x264_src/encoder/encoder.c:837:34
	movq	(%rdi,%rsi), %rsi
.Ltmp731:
	#DEBUG_VALUE: mbcmp_init:satd <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $dl
	.loc	0 837 32 is_stmt 0              # x264_src/encoder/encoder.c:837:32
	movq	%rsi, 32568(%rdi)
	.loc	0 838 42 is_stmt 1              # x264_src/encoder/encoder.c:838:42
	cmpl	$4, 412(%rdi)
	sete	%sil
	.loc	0 840 33                        # x264_src/encoder/encoder.c:840:33
	leaq	32240(%rdi), %r8
	leaq	32352(%rdi), %r9
	.loc	0 841 33                        # x264_src/encoder/encoder.c:841:33
	leaq	32296(%rdi), %r10
	leaq	32408(%rdi), %r11
.Ltmp732:
	#DEBUG_VALUE: mbcmp_init:satd <- undef
	.loc	0 839 30                        # x264_src/encoder/encoder.c:839:30
	testb	%sil, %dl
	cmoveq	%rcx, %rax
	.loc	0 839 5 is_stmt 0               # x264_src/encoder/encoder.c:839:5
	movq	48(%rax), %rcx
	movq	%rcx, 31976(%rdi)
	movups	(%rax), %xmm0
	movups	16(%rax), %xmm1
	movups	32(%rax), %xmm2
	movups	%xmm2, 31960(%rdi)
	movups	%xmm1, 31944(%rdi)
	movups	%xmm0, 31928(%rdi)
	.loc	0 840 33 is_stmt 1              # x264_src/encoder/encoder.c:840:33
	cmovneq	%r9, %r8
	.loc	0 840 5 is_stmt 0               # x264_src/encoder/encoder.c:840:5
	movq	48(%r8), %rax
	movq	%rax, 32032(%rdi)
	movups	(%r8), %xmm0
	movups	16(%r8), %xmm1
	movups	32(%r8), %xmm2
	movups	%xmm2, 32016(%rdi)
	movups	%xmm1, 32000(%rdi)
	movups	%xmm0, 31984(%rdi)
	.loc	0 841 33 is_stmt 1              # x264_src/encoder/encoder.c:841:33
	cmoveq	%r10, %r11
	.loc	0 841 5 is_stmt 0               # x264_src/encoder/encoder.c:841:5
	movq	48(%r11), %rax
	movq	%rax, 32088(%rdi)
	movups	(%r11), %xmm0
	movups	16(%r11), %xmm1
	movups	32(%r11), %xmm2
	movups	%xmm2, 32072(%rdi)
	movups	%xmm1, 32056(%rdi)
	movups	%xmm0, 32040(%rdi)
	.loc	0 842 1 is_stmt 1               # x264_src/encoder/encoder.c:842:1
	retq
.Ltmp733:
.Lfunc_end3:
	.size	mbcmp_init, .Lfunc_end3-mbcmp_init
	.cfi_endproc
                                        # -- End function
	.globl	x264_encoder_reconfig           # -- Begin function x264_encoder_reconfig
	.p2align	4, 0x90
	.type	x264_encoder_reconfig,@function
x264_encoder_reconfig:                  # @x264_encoder_reconfig
.Lfunc_begin4:
	.loc	0 1149 0                        # x264_src/encoder/encoder.c:1149:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rdi
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $rsi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
.Ltmp734:
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1151 19 prologue_end          # x264_src/encoder/encoder.c:1151:19
	movq	704(%rdi), %rax
	.loc	0 1151 33 is_stmt 0             # x264_src/encoder/encoder.c:1151:33
	movslq	1744(%rax), %rax
	.loc	0 1151 9                        # x264_src/encoder/encoder.c:1151:9
	movq	704(%rdi,%rax,8), %rbx
.Ltmp735:
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	.loc	0 1152 5 is_stmt 1              # x264_src/encoder/encoder.c:1152:5
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	x264_set_aspect_ratio
.Ltmp736:
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	.loc	0 1154 5                        # x264_src/encoder/encoder.c:1154:5
	movl	80(%r14), %eax
	movl	%eax, 80(%rbx)
	.loc	0 1155 5                        # x264_src/encoder/encoder.c:1155:5
	movl	108(%r14), %eax
	movl	%eax, 108(%rbx)
.Ltmp737:
	.loc	0 1156 9                        # x264_src/encoder/encoder.c:1156:9
	cmpl	$0, 92(%rbx)
.Ltmp738:
	.loc	0 1156 9 is_stmt 0              # x264_src/encoder/encoder.c:1156:9
	je	.LBB4_2
.Ltmp739:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1157 9 is_stmt 1              # x264_src/encoder/encoder.c:1157:9
	movl	92(%r14), %eax
	movl	%eax, 92(%rbx)
.Ltmp740:
.LBB4_2:                                # %if.end
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1158 5                        # x264_src/encoder/encoder.c:1158:5
	movl	116(%r14), %eax
	movl	%eax, 116(%rbx)
	.loc	0 1159 5                        # x264_src/encoder/encoder.c:1159:5
	movl	120(%r14), %eax
	movl	%eax, 120(%rbx)
	.loc	0 1160 5                        # x264_src/encoder/encoder.c:1160:5
	movl	124(%r14), %eax
	movl	%eax, 124(%rbx)
	.loc	0 1161 5                        # x264_src/encoder/encoder.c:1161:5
	movl	388(%r14), %edx
	movl	%edx, 388(%rbx)
	.loc	0 1162 5                        # x264_src/encoder/encoder.c:1162:5
	movl	384(%r14), %eax
	movl	%eax, 384(%rbx)
	.loc	0 1163 5                        # x264_src/encoder/encoder.c:1163:5
	movl	404(%r14), %eax
	movl	%eax, 404(%rbx)
.Ltmp741:
	.loc	0 1165 26                       # x264_src/encoder/encoder.c:1165:26
	movl	412(%rbx), %eax
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movl	416(%r14), %ecx
	.loc	0 1165 38                       # x264_src/encoder/encoder.c:1165:38
	cmpl	$3, %eax
	.loc	0 1165 52                       # x264_src/encoder/encoder.c:1165:52
	jl	.LBB4_4
.Ltmp742:
# %bb.3:                                # %lor.lhs.false
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1165 81                       # x264_src/encoder/encoder.c:1165:81
	cmpl	416(%rbx), %ecx
.Ltmp743:
	.loc	0 1165 9                        # x264_src/encoder/encoder.c:1165:9
	jge	.LBB4_5
.Ltmp744:
.LBB4_4:                                # %if.then35
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1166 9 is_stmt 1              # x264_src/encoder/encoder.c:1166:9
	movl	%ecx, 416(%rbx)
.Ltmp745:
.LBB4_5:                                # %if.end41
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1167 5                        # x264_src/encoder/encoder.c:1167:5
	movl	452(%r14), %ecx
	movl	%ecx, 452(%rbx)
.Ltmp746:
	.loc	0 1169 9                        # x264_src/encoder/encoder.c:1169:9
	cmpl	$0, 428(%rbx)
.Ltmp747:
	.loc	0 1169 9 is_stmt 0              # x264_src/encoder/encoder.c:1169:9
	je	.LBB4_6
.Ltmp748:
# %bb.7:                                # %if.then49
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1170 9 is_stmt 1              # x264_src/encoder/encoder.c:1170:9
	movl	428(%r14), %ecx
	movl	%ecx, 428(%rbx)
.Ltmp749:
	.loc	0 832 70                        # x264_src/encoder/encoder.c:832:70
	cmpl	$2, %ecx
	setge	%cl
	jmp	.LBB4_8
.Ltmp750:
.LBB4_6:
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 0 70 is_stmt 0                # x264_src/encoder/encoder.c:0:70
	xorl	%ecx, %ecx
.Ltmp751:
.LBB4_8:                                # %if.end55
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1171 5 is_stmt 1              # x264_src/encoder/encoder.c:1171:5
	movl	440(%r14), %esi
	movl	%esi, 440(%rbx)
	.loc	0 1172 5                        # x264_src/encoder/encoder.c:1172:5
	movl	432(%r14), %esi
	movl	%esi, 432(%rbx)
	.loc	0 1173 5                        # x264_src/encoder/encoder.c:1173:5
	movl	448(%r14), %esi
	movl	%esi, 448(%rbx)
	.loc	0 1174 5                        # x264_src/encoder/encoder.c:1174:5
	movl	444(%r14), %esi
	movl	%esi, 444(%rbx)
	.loc	0 1175 5                        # x264_src/encoder/encoder.c:1175:5
	movl	436(%r14), %esi
	movl	%esi, 436(%rbx)
	.loc	0 1176 5                        # x264_src/encoder/encoder.c:1176:5
	movss	456(%r14), %xmm0                # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 456(%rbx)
	.loc	0 1177 5                        # x264_src/encoder/encoder.c:1177:5
	movss	460(%r14), %xmm0                # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, 460(%rbx)
.Ltmp752:
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movl	412(%r14), %esi
	.loc	0 1179 38 is_stmt 1             # x264_src/encoder/encoder.c:1179:38
	cmpl	$2, %eax
	.loc	0 1179 53 is_stmt 0             # x264_src/encoder/encoder.c:1179:53
	jle	.LBB4_9
.Ltmp753:
# %bb.11:                               # %if.end98
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1180 9 is_stmt 1              # x264_src/encoder/encoder.c:1180:9
	movl	%esi, 412(%rbx)
.Ltmp754:
	.loc	0 1181 38                       # x264_src/encoder/encoder.c:1181:38
	cmpl	$3, %esi
	.loc	0 1181 53 is_stmt 0             # x264_src/encoder/encoder.c:1181:53
	jl	.LBB4_14
.Ltmp755:
# %bb.12:                               # %land.lhs.true
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1181 57                       # x264_src/encoder/encoder.c:1181:57
	cmpl	$0, 14676(%rbx)
.Ltmp756:
	.loc	0 1181 9                        # x264_src/encoder/encoder.c:1181:9
	jne	.LBB4_14
.Ltmp757:
# %bb.13:                               # %if.then104
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1182 32 is_stmt 1             # x264_src/encoder/encoder.c:1182:32
	andl	$-33, %edx
	movl	%edx, 388(%rbx)
	jmp	.LBB4_14
.Ltmp758:
.LBB4_9:                                # %lor.lhs.false88
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1179 83                       # x264_src/encoder/encoder.c:1179:83
	cmpl	$2, %esi
.Ltmp759:
	.loc	0 1179 9 is_stmt 0              # x264_src/encoder/encoder.c:1179:9
	jg	.LBB4_15
.Ltmp760:
# %bb.10:                               # %if.end98.thread277
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1180 9 is_stmt 1              # x264_src/encoder/encoder.c:1180:9
	movl	%esi, 412(%rbx)
.Ltmp761:
.LBB4_14:                               # %if.end108
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	%esi, %eax
.Ltmp762:
.LBB4_15:                               # %if.end108
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1183 12 is_stmt 1             # x264_src/encoder/encoder.c:1183:12
	movq	3328(%rbx), %rdx
	.loc	0 1183 9 is_stmt 0              # x264_src/encoder/encoder.c:1183:9
	cmpl	$0, 60(%rdx)
.Ltmp763:
	.loc	0 1183 9                        # x264_src/encoder/encoder.c:1183:9
	je	.LBB4_17
.Ltmp764:
# %bb.16:                               # %if.then110
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1184 9 is_stmt 1              # x264_src/encoder/encoder.c:1184:9
	movl	392(%r14), %edx
	movl	%edx, 392(%rbx)
.Ltmp765:
.LBB4_17:                               # %if.end115
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1185 30                       # x264_src/encoder/encoder.c:1185:30
	cmpl	$2, 14608(%rbx)
.Ltmp766:
	.loc	0 1185 9 is_stmt 0              # x264_src/encoder/encoder.c:1185:9
	jl	.LBB4_19
.Ltmp767:
# %bb.18:                               # %if.then118
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1186 9 is_stmt 1              # x264_src/encoder/encoder.c:1186:9
	movl	112(%r14), %edx
	movl	%edx, 112(%rbx)
.Ltmp768:
.LBB4_19:                               # %if.end121
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1187 5                        # x264_src/encoder/encoder.c:1187:5
	movl	684(%r14), %edx
	movl	%edx, 684(%rbx)
	.loc	0 1188 5                        # x264_src/encoder/encoder.c:1188:5
	movl	688(%r14), %edx
	movl	%edx, 688(%rbx)
	.loc	0 1189 5                        # x264_src/encoder/encoder.c:1189:5
	movl	692(%r14), %edx
	movl	%edx, 692(%rbx)
	xorl	%ebp, %ebp
.Ltmp769:
	.loc	0 1192 39                       # x264_src/encoder/encoder.c:1192:39
	cmpl	$0, 524(%rbx)
	.loc	0 1192 43 is_stmt 0             # x264_src/encoder/encoder.c:1192:43
	jle	.LBB4_24
.Ltmp770:
# %bb.20:                               # %land.lhs.true130
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1192 76                       # x264_src/encoder/encoder.c:1192:76
	cmpl	$0, 528(%rbx)
	.loc	0 1192 80                       # x264_src/encoder/encoder.c:1192:80
	jle	.LBB4_24
.Ltmp771:
# %bb.21:                               # %land.lhs.true134
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1193 21 is_stmt 1             # x264_src/encoder/encoder.c:1193:21
	movl	524(%r14), %edx
	.loc	0 1193 39 is_stmt 0             # x264_src/encoder/encoder.c:1193:39
	testl	%edx, %edx
	.loc	0 1193 43                       # x264_src/encoder/encoder.c:1193:43
	jle	.LBB4_24
.Ltmp772:
# %bb.22:                               # %land.lhs.true138
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1193 76                       # x264_src/encoder/encoder.c:1193:76
	cmpl	$0, 528(%r14)
.Ltmp773:
	.loc	0 1192 9 is_stmt 1              # x264_src/encoder/encoder.c:1192:9
	jle	.LBB4_24
.Ltmp774:
# %bb.23:                               # %if.then142
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 0
	.loc	0 1195 9                        # x264_src/encoder/encoder.c:1195:9
	movl	%edx, 524(%rbx)
	.loc	0 1196 9                        # x264_src/encoder/encoder.c:1196:9
	movl	528(%r14), %edx
	movl	%edx, 528(%rbx)
	.loc	0 1197 9                        # x264_src/encoder/encoder.c:1197:9
	movl	508(%r14), %edx
	movl	%edx, 508(%rbx)
	movl	$1, %ebp
.Ltmp775:
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 1
.LBB4_24:                               # %if.end157
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	.loc	0 1200 21                       # x264_src/encoder/encoder.c:1200:21
	movss	512(%rbx), %xmm1                # xmm1 = mem[0],zero,zero,zero
	.loc	0 1200 48 is_stmt 0             # x264_src/encoder/encoder.c:1200:48
	movss	512(%r14), %xmm0                # xmm0 = mem[0],zero,zero,zero
	.loc	0 1200 35                       # x264_src/encoder/encoder.c:1200:35
	ucomiss	%xmm0, %xmm1
.Ltmp776:
	.loc	0 1200 9                        # x264_src/encoder/encoder.c:1200:9
	jne	.LBB4_25
	jnp	.LBB4_26
.Ltmp777:
.LBB4_25:                               # %if.then163
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	.loc	0 1202 9 is_stmt 1              # x264_src/encoder/encoder.c:1202:9
	movss	%xmm0, 512(%rbx)
	movl	$1, %ebp
.Ltmp778:
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 1
.LBB4_26:                               # %if.end169
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	.loc	0 1205 21                       # x264_src/encoder/encoder.c:1205:21
	movss	516(%rbx), %xmm1                # xmm1 = mem[0],zero,zero,zero
	.loc	0 1205 52 is_stmt 0             # x264_src/encoder/encoder.c:1205:52
	movss	516(%r14), %xmm0                # xmm0 = mem[0],zero,zero,zero
	.loc	0 1205 39                       # x264_src/encoder/encoder.c:1205:39
	ucomiss	%xmm0, %xmm1
.Ltmp779:
	.loc	0 1205 9                        # x264_src/encoder/encoder.c:1205:9
	jne	.LBB4_27
	jnp	.LBB4_28
.Ltmp780:
.LBB4_27:                               # %if.then175
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	.loc	0 1207 9 is_stmt 1              # x264_src/encoder/encoder.c:1207:9
	movss	%xmm0, 516(%rbx)
	movl	$1, %ebp
.Ltmp781:
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- 1
.LBB4_28:                               # %if.end181
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: mbcmp_init:h <- $rbx
	.loc	0 833 16                        # x264_src/encoder/encoder.c:833:16
	leaq	31560(%rbx), %rdx
	.loc	0 833 21 is_stmt 0              # x264_src/encoder/encoder.c:833:21
	leaq	31816(%rbx), %rdi
	.loc	0 833 28                        # x264_src/encoder/encoder.c:833:28
	leaq	31672(%rbx), %rsi
	.loc	0 832 17 is_stmt 1              # x264_src/encoder/encoder.c:832:17
	cmpl	$0, 25812(%rbx)
	.loc	0 832 34 is_stmt 0              # x264_src/encoder/encoder.c:832:34
	jne	.LBB4_31
.Ltmp782:
# %bb.29:                               # %land.end.i
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: mbcmp_init:h <- $rbx
	#DEBUG_VALUE: mbcmp_init:satd <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $cl
	.loc	0 833 28 is_stmt 1              # x264_src/encoder/encoder.c:833:28
	testb	%cl, %cl
	je	.LBB4_31
.Ltmp783:
# %bb.30:
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: mbcmp_init:h <- $rbx
	#DEBUG_VALUE: mbcmp_init:satd <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $cl
	.loc	0 0 28 is_stmt 0                # x264_src/encoder/encoder.c:0:28
	movb	$1, %cl
.Ltmp784:
	movl	$32576, %r8d                    # imm = 0x7F40
	movl	$32552, %r9d                    # imm = 0x7F28
	movl	$32528, %r10d                   # imm = 0x7F10
	movq	%rsi, %r11
	movq	%rsi, %r14
.Ltmp785:
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 833 28                        # x264_src/encoder/encoder.c:833:28
	jmp	.LBB4_32
.Ltmp786:
.LBB4_31:
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- $r14
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: mbcmp_init:h <- $rbx
	leaq	32096(%rbx), %r11
	movl	$32584, %r8d                    # imm = 0x7F48
	movl	$32560, %r9d                    # imm = 0x7F30
	movl	$32536, %r10d                   # imm = 0x7F18
	xorl	%ecx, %ecx
	movq	%rdx, %r14
.Ltmp787:
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
.LBB4_32:                               # %mbcmp_init.exit
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: mbcmp_init:h <- $rbx
	.loc	0 833 5                         # x264_src/encoder/encoder.c:833:5
	movq	48(%r11), %r15
	movq	%r15, 48(%rdi)
	movups	(%r11), %xmm0
	movups	16(%r11), %xmm1
	movups	32(%r11), %xmm2
	movups	%xmm2, 32(%rdi)
	movups	%xmm1, 16(%rdi)
	movups	%xmm0, (%rdi)
	.loc	0 834 5 is_stmt 1               # x264_src/encoder/encoder.c:834:5
	movq	48(%r14), %rdi
	movq	%rdi, 31920(%rbx)
	movups	(%r14), %xmm0
	movups	16(%r14), %xmm1
	movups	32(%r14), %xmm2
	movups	%xmm2, 31904(%rbx)
	movups	%xmm1, 31888(%rbx)
	movups	%xmm0, 31872(%rbx)
	.loc	0 835 36                        # x264_src/encoder/encoder.c:835:36
	movq	(%rbx,%r10), %rdi
	.loc	0 835 34 is_stmt 0              # x264_src/encoder/encoder.c:835:34
	movq	%rdi, 32520(%rbx)
	.loc	0 836 35 is_stmt 1              # x264_src/encoder/encoder.c:836:35
	movq	(%rbx,%r9), %rdi
	.loc	0 836 33 is_stmt 0              # x264_src/encoder/encoder.c:836:33
	movq	%rdi, 32544(%rbx)
	.loc	0 837 34 is_stmt 1              # x264_src/encoder/encoder.c:837:34
	movq	(%rbx,%r8), %rdi
.Ltmp788:
	#DEBUG_VALUE: mbcmp_init:satd <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $cl
	.loc	0 837 32 is_stmt 0              # x264_src/encoder/encoder.c:837:32
	movq	%rdi, 32568(%rbx)
	.loc	0 838 42 is_stmt 1              # x264_src/encoder/encoder.c:838:42
	cmpl	$4, %eax
	sete	%al
	.loc	0 840 33                        # x264_src/encoder/encoder.c:840:33
	leaq	32240(%rbx), %rdi
	leaq	32352(%rbx), %r8
	.loc	0 841 33                        # x264_src/encoder/encoder.c:841:33
	leaq	32296(%rbx), %r9
	leaq	32408(%rbx), %r10
.Ltmp789:
	#DEBUG_VALUE: mbcmp_init:satd <- undef
	.loc	0 839 30                        # x264_src/encoder/encoder.c:839:30
	testb	%al, %cl
	cmovneq	%rsi, %rdx
	.loc	0 839 5 is_stmt 0               # x264_src/encoder/encoder.c:839:5
	movq	48(%rdx), %rax
	movq	%rax, 31976(%rbx)
	movups	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movups	32(%rdx), %xmm2
	movups	%xmm2, 31960(%rbx)
	movups	%xmm1, 31944(%rbx)
	movups	%xmm0, 31928(%rbx)
	.loc	0 840 33 is_stmt 1              # x264_src/encoder/encoder.c:840:33
	cmovneq	%r8, %rdi
	.loc	0 840 5 is_stmt 0               # x264_src/encoder/encoder.c:840:5
	movups	(%rdi), %xmm0
	movups	16(%rdi), %xmm1
	movups	32(%rdi), %xmm2
	movups	%xmm0, 31984(%rbx)
	movups	%xmm1, 32000(%rbx)
	movups	%xmm2, 32016(%rbx)
	movq	48(%rdi), %rax
	movq	%rax, 32032(%rbx)
	.loc	0 841 33 is_stmt 1              # x264_src/encoder/encoder.c:841:33
	cmoveq	%r9, %r10
	.loc	0 841 5 is_stmt 0               # x264_src/encoder/encoder.c:841:5
	movups	(%r10), %xmm0
	movups	16(%r10), %xmm1
	movups	32(%r10), %xmm2
	movups	%xmm0, 32040(%rbx)
	movups	%xmm1, 32056(%rbx)
	movups	%xmm2, 32072(%rbx)
	movq	48(%r10), %rax
	movq	%rax, 32088(%rbx)
.Ltmp790:
	.loc	0 1215 15 is_stmt 1             # x264_src/encoder/encoder.c:1215:15
	movq	%rbx, %rdi
	callq	x264_validate_parameters
.Ltmp791:
	#DEBUG_VALUE: x264_encoder_reconfig:ret <- $eax
	.loc	0 0 15 is_stmt 0                # x264_src/encoder/encoder.c:0:15
	testl	%ebp, %ebp
.Ltmp792:
	.loc	0 1222 14 is_stmt 1             # x264_src/encoder/encoder.c:1222:14
	je	.LBB4_35
.Ltmp793:
# %bb.33:                               # %mbcmp_init.exit
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: x264_encoder_reconfig:ret <- $eax
	testl	%eax, %eax
	jne	.LBB4_35
.Ltmp794:
# %bb.34:                               # %if.then185
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rbx
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	#DEBUG_VALUE: x264_encoder_reconfig:ret <- $eax
	.loc	0 1223 9                        # x264_src/encoder/encoder.c:1223:9
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movl	%eax, %ebx
.Ltmp795:
	#DEBUG_VALUE: x264_encoder_reconfig:ret <- $ebx
	#DEBUG_VALUE: x264_encoder_reconfig:h <- $rdi
	callq	x264_ratecontrol_init_reconfigurable@PLT
.Ltmp796:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	%ebx, %eax
.Ltmp797:
.LBB4_35:                               # %if.end186
	#DEBUG_VALUE: x264_encoder_reconfig:param <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_reconfig:rc_reconfig <- $ebp
	.loc	0 1225 5 epilogue_begin is_stmt 1 # x264_src/encoder/encoder.c:1225:5
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp798:
	.cfi_def_cfa_offset 8
	retq
.Ltmp799:
.Lfunc_end4:
	.size	x264_encoder_reconfig, .Lfunc_end4-x264_encoder_reconfig
	.cfi_endproc
                                        # -- End function
	.globl	x264_encoder_parameters         # -- Begin function x264_encoder_parameters
	.p2align	4, 0x90
	.type	x264_encoder_parameters,@function
x264_encoder_parameters:                # @x264_encoder_parameters
.Lfunc_begin5:
	.loc	0 1232 0                        # x264_src/encoder/encoder.c:1232:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_parameters:h <- $rdi
	#DEBUG_VALUE: x264_encoder_parameters:param <- $rsi
	movq	%rsi, %rax
.Ltmp800:
	.loc	0 1233 34 prologue_end          # x264_src/encoder/encoder.c:1233:34
	movslq	1744(%rdi), %rcx
	.loc	0 1233 21 is_stmt 0             # x264_src/encoder/encoder.c:1233:21
	movq	704(%rdi,%rcx,8), %rsi
.Ltmp801:
	#DEBUG_VALUE: x264_encoder_parameters:param <- $rax
	.loc	0 1233 5                        # x264_src/encoder/encoder.c:1233:5
	movl	$704, %edx                      # imm = 0x2C0
	movq	%rax, %rdi
.Ltmp802:
	#DEBUG_VALUE: x264_encoder_parameters:h <- [DW_OP_LLVM_entry_value 1] $rdi
	jmp	memcpy@PLT                      # TAILCALL
.Ltmp803:
.Lfunc_end5:
	.size	x264_encoder_parameters, .Lfunc_end5-x264_encoder_parameters
	.cfi_endproc
                                        # -- End function
	.globl	x264_encoder_headers            # -- Begin function x264_encoder_headers
	.p2align	4, 0x90
	.type	x264_encoder_headers,@function
x264_encoder_headers:                   # @x264_encoder_headers
.Lfunc_begin6:
	.loc	0 1313 0 is_stmt 1              # x264_src/encoder/encoder.c:1313:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_headers:h <- $rdi
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $rsi
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
.Ltmp804:
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	.loc	0 1316 18 prologue_end          # x264_src/encoder/encoder.c:1316:18
	movl	$0, 1760(%rdi)
.Ltmp805:
	#DEBUG_VALUE: x264_nal_start:h <- $rbx
	#DEBUG_VALUE: x264_nal_start:i_type <- 7
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 3
	.loc	0 1239 31                       # x264_src/encoder/encoder.c:1239:31
	movq	1768(%rdi), %rax
.Ltmp806:
	#DEBUG_VALUE: x264_nal_start:nal <- $rax
	.loc	0 1317 33                       # x264_src/encoder/encoder.c:1317:33
	movq	1784(%rdi), %rdi
.Ltmp807:
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	.loc	0 1317 53 is_stmt 0             # x264_src/encoder/encoder.c:1317:53
	movslq	1776(%rbx), %r8
.Ltmp808:
	#DEBUG_VALUE: bs_init:s <- undef
	#DEBUG_VALUE: bs_init:i_data <- undef
	#DEBUG_VALUE: bs_init:p_data <- $rdi
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $rdi
	.loc	4 82 48 is_stmt 1               # x264_src/common/bs.h:82:48
	movq	%rdi, %r9
	.loc	4 83 35                         # x264_src/common/bs.h:83:35
	addq	%rdi, %r8
	#DEBUG_VALUE: endian_fix32:x <- undef
	.loc	4 86 31                         # x264_src/common/bs.h:86:31
	leal	(,%rdi,8), %ecx
                                        # kill: def $edi killed $edi killed $rdi
	.loc	4 82 48                         # x264_src/common/bs.h:82:48
	andl	$3, %edi
.Ltmp809:
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $r9
	#DEBUG_VALUE: bs_init:p_data <- $r9
	andq	$-4, %r9
.Ltmp810:
	.loc	4 82 29 is_stmt 0               # x264_src/common/bs.h:82:29
	movq	%r9, 1792(%rbx)
	.loc	4 82 16                         # x264_src/common/bs.h:82:16
	movq	%r9, 1800(%rbx)
	.loc	4 83 16 is_stmt 1               # x264_src/common/bs.h:83:16
	movq	%r8, 1808(%rbx)
	.loc	4 84 18                         # x264_src/common/bs.h:84:18
	shll	$3, %edi
	movl	$64, %r8d
	subl	%edi, %r8d
	.loc	4 84 16 is_stmt 0               # x264_src/common/bs.h:84:16
	movl	%r8d, 1824(%rbx)
	.loc	4 85 33 is_stmt 1               # x264_src/common/bs.h:85:33
	movl	(%r9), %edi
.Ltmp811:
	#DEBUG_VALUE: endian_fix32:x <- $edi
	.file	28 "x264_src/common" "osdep.h" md5 0xabed2b0134391efe02a749d457632ae9
	.loc	28 264 58                       # x264_src/common/osdep.h:264:58
	bswapl	%edi
.Ltmp812:
	.loc	4 86 17                         # x264_src/common/bs.h:86:17
	andb	$24, %cl
	addb	$32, %cl
	negb	%cl
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rdi
	movq	%rdx, %r14
	movq	%rdi, 1816(%rbx)
	movabsq	$30064771075, %rcx              # imm = 0x700000003
.Ltmp813:
	.loc	0 1241 20                       # x264_src/encoder/encoder.c:1241:20
	movq	%rcx, (%rax)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax)
.Ltmp814:
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %ecx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %ecx
	movq	%rsi, %r15
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %ecx
	subl	1824(%rbx), %ecx
.Ltmp815:
	.loc	0 1317 22 is_stmt 1             # x264_src/encoder/encoder.c:1317:22
	leaq	1792(%rbx), %r12
.Ltmp816:
	#DEBUG_VALUE: bs_pos:s <- $r12
	#DEBUG_VALUE: bs_init:s <- $r12
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	leal	64(%rcx), %edx
.Ltmp817:
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	.loc	0 1245 62                       # x264_src/encoder/encoder.c:1245:62
	addl	$71, %ecx
	testl	%edx, %edx
	cmovnsl	%edx, %ecx
	sarl	$3, %ecx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%ecx, %rcx
	addq	1784(%rbx), %rcx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rcx, 16(%rax)
.Ltmp818:
	.loc	0 1323 36 is_stmt 1             # x264_src/encoder/encoder.c:1323:36
	movq	3200(%rbx), %rsi
.Ltmp819:
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	.loc	0 1323 5 is_stmt 0              # x264_src/encoder/encoder.c:1323:5
	movq	%r12, %rdi
	callq	x264_sps_write@PLT
.Ltmp820:
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1266 31 is_stmt 1             # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rbx), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rbx), %rcx
.Ltmp821:
	#DEBUG_VALUE: bs_pos:s <- $r12
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %esi
.Ltmp822:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp823:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rbx), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rbx), %eax
.Ltmp824:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %ecx
.Ltmp825:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%eax
	movl	%eax, 1760(%rbx)
.Ltmp826:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%ecx, %eax
.Ltmp827:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB6_2
.Ltmp828:
# %bb.1:                                # %entry.if.end_crit_edge
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%rbx), %r13
.Ltmp829:
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB6_4
.Ltmp830:
.LBB6_2:                                # %if.then.i.i
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63                       # x264_src/encoder/encoder.c:1253:63
	shll	$4, %ecx
	leal	(%rcx,%rcx,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp831:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp832:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB6_13
.Ltmp833:
# %bb.3:                                # %cleanup.thread.i.i
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r13
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rax
.Ltmp834:
	#DEBUG_VALUE: new_out <- $r13
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%r13, %rdi
	callq	memcpy@PLT
.Ltmp835:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp836:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r13, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
.Ltmp837:
	.loc	0 1239 42                       # x264_src/encoder/encoder.c:1239:42
	movl	1760(%rbx), %eax
.Ltmp838:
.LBB6_4:                                # %if.end
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_start:h <- $rbx
	#DEBUG_VALUE: x264_nal_start:i_type <- 8
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 3
	.loc	0 1239 24 is_stmt 0             # x264_src/encoder/encoder.c:1239:24
	cltq
	leaq	(%rax,%rax,2), %rax
.Ltmp839:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 0 24                          # x264_src/encoder/encoder.c:0:24
	movabsq	$34359738371, %rcx              # imm = 0x800000003
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rcx, (%r13,%rax,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%r13,%rax,8)
.Ltmp840:
	#DEBUG_VALUE: bs_pos:s <- $r12
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %ecx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %ecx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %ecx
	subl	1824(%rbx), %ecx
	leal	64(%rcx), %edx
.Ltmp841:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %ecx
	testl	%edx, %edx
	cmovnsl	%edx, %ecx
	sarl	$3, %ecx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%ecx, %rcx
	addq	1784(%rbx), %rcx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rcx, 16(%r13,%rax,8)
.Ltmp842:
	.loc	0 1329 36 is_stmt 1             # x264_src/encoder/encoder.c:1329:36
	movq	3328(%rbx), %rsi
	.loc	0 1329 5 is_stmt 0              # x264_src/encoder/encoder.c:1329:5
	movq	%r12, %rdi
	callq	x264_pps_write@PLT
.Ltmp843:
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1266 31 is_stmt 1             # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rbx), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rbx), %rcx
.Ltmp844:
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %esi
.Ltmp845:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp846:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rbx), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rbx), %eax
.Ltmp847:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %ecx
.Ltmp848:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%eax
	movl	%eax, 1760(%rbx)
.Ltmp849:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%ecx, %eax
.Ltmp850:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB6_6
.Ltmp851:
# %bb.5:                                # %if.end.if.end11_crit_edge
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%rbx), %r13
.Ltmp852:
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB6_8
.Ltmp853:
.LBB6_6:                                # %if.then.i.i111
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63                       # x264_src/encoder/encoder.c:1253:63
	shll	$4, %ecx
	leal	(%rcx,%rcx,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp854:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp855:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB6_13
.Ltmp856:
# %bb.7:                                # %cleanup.thread.i.i115
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r13
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rax
.Ltmp857:
	#DEBUG_VALUE: new_out <- $r13
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%r13, %rdi
	callq	memcpy@PLT
.Ltmp858:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp859:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r13, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
.Ltmp860:
	.loc	0 1239 42                       # x264_src/encoder/encoder.c:1239:42
	movl	1760(%rbx), %eax
.Ltmp861:
.LBB6_8:                                # %if.end11
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_start:h <- $rbx
	#DEBUG_VALUE: x264_nal_start:i_type <- 6
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 24 is_stmt 0             # x264_src/encoder/encoder.c:1239:24
	cltq
	leaq	(%rax,%rax,2), %rax
.Ltmp862:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 0 24                          # x264_src/encoder/encoder.c:0:24
	movabsq	$25769803776, %rcx              # imm = 0x600000000
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rcx, (%r13,%rax,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%r13,%rax,8)
.Ltmp863:
	#DEBUG_VALUE: bs_pos:s <- $r12
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %ecx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %ecx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %ecx
	subl	1824(%rbx), %ecx
	leal	64(%rcx), %edx
.Ltmp864:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %ecx
	testl	%edx, %edx
	cmovnsl	%edx, %ecx
	sarl	$3, %ecx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%ecx, %rcx
	addq	1784(%rbx), %rcx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rcx, 16(%r13,%rax,8)
.Ltmp865:
	.loc	0 1335 9 is_stmt 1              # x264_src/encoder/encoder.c:1335:9
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	x264_sei_version_write@PLT
.Ltmp866:
	testl	%eax, %eax
.Ltmp867:
	.loc	0 1335 9 is_stmt 0              # x264_src/encoder/encoder.c:1335:9
	je	.LBB6_9
.Ltmp868:
.LBB6_13:                               # %cleanup
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	.loc	0 1348 1 is_stmt 1              # x264_src/encoder/encoder.c:1348:1
	movl	$-1, %eax
	jmp	.LBB6_14
.Ltmp869:
.LBB6_9:                                # %if.end17
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rbx), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rbx), %rcx
.Ltmp870:
	#DEBUG_VALUE: bs_pos:s <- $r12
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %esi
.Ltmp871:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp872:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rbx), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rbx), %ecx
.Ltmp873:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %eax
.Ltmp874:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%ecx
	movl	%ecx, 1760(%rbx)
.Ltmp875:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %ecx
.Ltmp876:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jl	.LBB6_12
.Ltmp877:
# %bb.10:                               # %if.then.i.i167
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp878:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp879:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB6_13
.Ltmp880:
# %bb.11:                               # %cleanup.thread.i.i171
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rcx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rax, %rdi
	movq	%rax, %r12
.Ltmp881:
	#DEBUG_VALUE: new_out <- $r12
	callq	memcpy@PLT
.Ltmp882:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp883:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r12, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
.Ltmp884:
.LBB6_12:                               # %if.end21
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- 0
	.loc	0 1340 18                       # x264_src/encoder/encoder.c:1340:18
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	x264_encoder_encapsulate_nals
.Ltmp885:
	#DEBUG_VALUE: x264_encoder_headers:frame_size <- $eax
	.loc	0 1343 22                       # x264_src/encoder/encoder.c:1343:22
	movl	1760(%rbx), %ecx
	.loc	0 1343 13 is_stmt 0             # x264_src/encoder/encoder.c:1343:13
	movl	%ecx, (%r14)
	.loc	0 1344 23 is_stmt 1             # x264_src/encoder/encoder.c:1344:23
	movq	1768(%rbx), %rcx
	.loc	0 1344 13 is_stmt 0             # x264_src/encoder/encoder.c:1344:13
	movq	%rcx, (%r15)
	.loc	0 1345 18 is_stmt 1             # x264_src/encoder/encoder.c:1345:18
	movl	$0, 1760(%rbx)
.Ltmp886:
.LBB6_14:                               # %cleanup
	#DEBUG_VALUE: x264_encoder_headers:h <- $rbx
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- $r15
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- $r14
	.loc	0 1348 1 epilogue_begin         # x264_src/encoder/encoder.c:1348:1
	popq	%rbx
.Ltmp887:
	#DEBUG_VALUE: x264_encoder_headers:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp888:
	#DEBUG_VALUE: x264_encoder_headers:pi_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp889:
	#DEBUG_VALUE: x264_encoder_headers:pp_nal <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 8
	retq
.Ltmp890:
.Lfunc_end6:
	.size	x264_encoder_headers, .Lfunc_end6-x264_encoder_headers
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_nal_end
	.type	x264_nal_end,@function
x264_nal_end:                           # @x264_nal_end
.Lfunc_begin7:
	.loc	0 1265 0                        # x264_src/encoder/encoder.c:1265:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_nal_end:h <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	.loc	0 1266 31 prologue_end          # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rdi), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rdi), %rcx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp891:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rdi), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rdi), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rdi), %edx
	leal	64(%rdx), %esi
.Ltmp892:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rdi), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rdi), %ecx
.Ltmp893:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rdi
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rdi), %eax
.Ltmp894:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%ecx
	movl	%ecx, 1760(%rdi)
	xorl	%ebp, %ebp
.Ltmp895:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %ecx
.Ltmp896:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jl	.LBB7_4
.Ltmp897:
# %bb.1:                                # %if.then.i
	#DEBUG_VALUE: x264_nal_end:h <- $rdi
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rdi
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%rdi, %rbx
.Ltmp898:
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
.Ltmp899:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp900:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp901:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB7_2
.Ltmp902:
# %bb.3:                                # %cleanup.thread.i
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rcx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rax, %rdi
	movq	%rax, %r14
.Ltmp903:
	#DEBUG_VALUE: new_out <- $r14
	callq	memcpy@PLT
.Ltmp904:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp905:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r14, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
	jmp	.LBB7_4
.Ltmp906:
.LBB7_2:
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movl	$-1, %ebp
.Ltmp907:
.LBB7_4:                                # %x264_nal_check_buffer.exit
	#DEBUG_VALUE: x264_nal_end:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1270 5 is_stmt 1              # x264_src/encoder/encoder.c:1270:5
	movl	%ebp, %eax
	.loc	0 1270 5 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:1270:5
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp908:
.Lfunc_end7:
	.size	x264_nal_end, .Lfunc_end7-x264_nal_end
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_encoder_encapsulate_nals
	.type	x264_encoder_encapsulate_nals,@function
x264_encoder_encapsulate_nals:          # @x264_encoder_encapsulate_nals
.Lfunc_begin8:
	.loc	0 1274 0 is_stmt 1              # x264_src/encoder/encoder.c:1274:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp909:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	xorl	%eax, %eax
	movl	$0, %r12d
.Ltmp910:
	.loc	0 1277 23 prologue_end          # x264_src/encoder/encoder.c:1277:23
	testl	%esi, %esi
.Ltmp911:
	.loc	0 1277 5 is_stmt 0              # x264_src/encoder/encoder.c:1277:5
	jle	.LBB8_5
.Ltmp912:
# %bb.1:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	1768(%rbx), %rdx
.Ltmp913:
	.loc	0 1277 23                       # x264_src/encoder/encoder.c:1277:23
	movl	%ebp, %ecx
.Ltmp914:
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	cmpl	$16, %ebp
	ja	.LBB8_12
.Ltmp915:
# %bb.2:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%esi, %esi
	xorl	%r12d, %r12d
	jmp	.LBB8_3
.Ltmp916:
.LBB8_12:                               # %vector.ph
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	movl	%ecx, %esi
	andl	$15, %esi
	movl	$16, %edi
	cmovneq	%rsi, %rdi
	movq	%rcx, %rsi
	subq	%rdi, %rsi
	leaq	368(%rdx), %rdi
	pxor	%xmm1, %xmm1
	movq	%rsi, %r8
	pxor	%xmm3, %xmm3
	pxor	%xmm2, %xmm2
	pxor	%xmm0, %xmm0
.Ltmp917:
	.p2align	4, 0x90
.LBB8_13:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1278 44 is_stmt 1             # x264_src/encoder/encoder.c:1278:44
	movd	-288(%rdi), %xmm4               # xmm4 = mem[0],zero,zero,zero
	movd	-312(%rdi), %xmm5               # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-336(%rdi), %xmm4               # xmm4 = mem[0],zero,zero,zero
	movd	-360(%rdi), %xmm6               # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp918:
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	paddd	%xmm6, %xmm1
.Ltmp919:
	.loc	0 1278 44                       # x264_src/encoder/encoder.c:1278:44
	movd	-192(%rdi), %xmm4               # xmm4 = mem[0],zero,zero,zero
	movd	-216(%rdi), %xmm5               # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-240(%rdi), %xmm4               # xmm4 = mem[0],zero,zero,zero
	movd	-264(%rdi), %xmm6               # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp920:
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	paddd	%xmm6, %xmm3
.Ltmp921:
	.loc	0 1278 44                       # x264_src/encoder/encoder.c:1278:44
	movd	-96(%rdi), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-120(%rdi), %xmm5               # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-144(%rdi), %xmm4               # xmm4 = mem[0],zero,zero,zero
	movd	-168(%rdi), %xmm6               # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp922:
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	paddd	%xmm6, %xmm2
	movd	(%rdi), %xmm4                   # xmm4 = mem[0],zero,zero,zero
	movd	-24(%rdi), %xmm5                # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-48(%rdi), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-72(%rdi), %xmm6                # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
	paddd	%xmm6, %xmm0
.Ltmp923:
	.loc	0 1277 33 is_stmt 0             # x264_src/encoder/encoder.c:1277:33
	addq	$384, %rdi                      # imm = 0x180
	addq	$-16, %r8
	jne	.LBB8_13
.Ltmp924:
# %bb.14:                               # %middle.block
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1277 5                        # x264_src/encoder/encoder.c:1277:5
	paddd	%xmm1, %xmm3
	paddd	%xmm3, %xmm2
	paddd	%xmm2, %xmm0
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	paddd	%xmm0, %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %r12d
.Ltmp925:
.LBB8_3:                                # %for.body.preheader
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- 0
	#DEBUG_VALUE: i <- 0
	subq	%rsi, %rcx
	leaq	(%rsi,%rsi,2), %rsi
	leaq	(%rdx,%rsi,8), %rdx
	addq	$8, %rdx
.Ltmp926:
	.p2align	4, 0x90
.LBB8_4:                                # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- $r12d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 1278 27 is_stmt 1             # x264_src/encoder/encoder.c:1278:27
	addl	(%rdx), %r12d
.Ltmp927:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:previous_nal_size <- $r12d
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 1277 23                       # x264_src/encoder/encoder.c:1277:23
	addq	$24, %rdx
	decq	%rcx
.Ltmp928:
	.loc	0 1277 5 is_stmt 0              # x264_src/encoder/encoder.c:1277:5
	jne	.LBB8_4
.Ltmp929:
.LBB8_5:                                # %for.cond2.preheader
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	1760(%rbx), %ecx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
.Ltmp930:
	#DEBUG_VALUE: i <- $ebp
	.loc	0 1280 27 is_stmt 1             # x264_src/encoder/encoder.c:1280:27
	cmpl	%ebp, %ecx
.Ltmp931:
	.loc	0 1280 5 is_stmt 0              # x264_src/encoder/encoder.c:1280:5
	jle	.LBB8_10
.Ltmp932:
# %bb.6:                                # %for.body6.lr.ph
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movslq	%ecx, %rdx
	movq	1768(%rbx), %rsi
	.loc	0 1280 5                        # x264_src/encoder/encoder.c:1280:5
	movslq	%ebp, %r8
	movq	%rdx, %rdi
	subq	%r8, %rdi
	xorl	%eax, %eax
	cmpq	$16, %rdi
	ja	.LBB8_15
.Ltmp933:
# %bb.7:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	%r8, %rdi
	jmp	.LBB8_8
.Ltmp934:
.LBB8_15:                               # %vector.ph159
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	.loc	0 1280 5                        # x264_src/encoder/encoder.c:1280:5
	movl	%edi, %r9d
	andl	$15, %r9d
	movl	$16, %eax
	cmovneq	%r9, %rax
	subq	%rax, %rdi
	addq	%r8, %rdi
	addq	%r8, %rax
	subq	%rdx, %rax
	leaq	(%r8,%r8,2), %r8
	leaq	(%rsi,%r8,8), %r8
	addq	$368, %r8                       # imm = 0x170
	pxor	%xmm1, %xmm1
	pxor	%xmm3, %xmm3
	pxor	%xmm2, %xmm2
	pxor	%xmm0, %xmm0
.Ltmp935:
	.p2align	4, 0x90
.LBB8_16:                               # %vector.body163
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	.loc	0 1281 35 is_stmt 1             # x264_src/encoder/encoder.c:1281:35
	movd	-288(%r8), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-312(%r8), %xmm5                # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-336(%r8), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-360(%r8), %xmm6                # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp936:
	.loc	0 1280 5                        # x264_src/encoder/encoder.c:1280:5
	paddd	%xmm6, %xmm1
.Ltmp937:
	.loc	0 1281 35                       # x264_src/encoder/encoder.c:1281:35
	movd	-192(%r8), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-216(%r8), %xmm5                # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-240(%r8), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-264(%r8), %xmm6                # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp938:
	.loc	0 1280 5                        # x264_src/encoder/encoder.c:1280:5
	paddd	%xmm6, %xmm3
.Ltmp939:
	.loc	0 1281 35                       # x264_src/encoder/encoder.c:1281:35
	movd	-96(%r8), %xmm4                 # xmm4 = mem[0],zero,zero,zero
	movd	-120(%r8), %xmm5                # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-144(%r8), %xmm4                # xmm4 = mem[0],zero,zero,zero
	movd	-168(%r8), %xmm6                # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
.Ltmp940:
	.loc	0 1280 5                        # x264_src/encoder/encoder.c:1280:5
	paddd	%xmm6, %xmm2
	movd	(%r8), %xmm4                    # xmm4 = mem[0],zero,zero,zero
	movd	-24(%r8), %xmm5                 # xmm5 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movd	-48(%r8), %xmm4                 # xmm4 = mem[0],zero,zero,zero
	movd	-72(%r8), %xmm6                 # xmm6 = mem[0],zero,zero,zero
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	punpcklqdq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0]
	paddd	%xmm6, %xmm0
	addq	$384, %r8                       # imm = 0x180
	addq	$16, %rax
	jne	.LBB8_16
.Ltmp941:
# %bb.17:                               # %middle.block156
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	paddd	%xmm1, %xmm3
	paddd	%xmm3, %xmm2
	paddd	%xmm2, %xmm0
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	paddd	%xmm0, %xmm1
	pshufd	$85, %xmm1, %xmm0               # xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %eax
.Ltmp942:
.LBB8_8:                                # %for.body6.preheader
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- 0
	#DEBUG_VALUE: i <- $ebp
	subq	%rdi, %rdx
	leaq	(%rdi,%rdi,2), %rdi
	leaq	(%rsi,%rdi,8), %rsi
	addq	$8, %rsi
.Ltmp943:
	.p2align	4, 0x90
.LBB8_9:                                # %for.body6
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 1281 18                       # x264_src/encoder/encoder.c:1281:18
	addl	(%rsi), %eax
.Ltmp944:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_size <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 1280 27                       # x264_src/encoder/encoder.c:1280:27
	addq	$24, %rsi
	decq	%rdx
.Ltmp945:
	.loc	0 1280 5 is_stmt 0              # x264_src/encoder/encoder.c:1280:5
	jne	.LBB8_9
.Ltmp946:
.LBB8_10:                               # %for.cond.cleanup5
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	.loc	0 1284 39 is_stmt 1             # x264_src/encoder/encoder.c:1284:39
	leal	(%rax,%rax,2), %edx
	.loc	0 1284 42 is_stmt 0             # x264_src/encoder/encoder.c:1284:42
	movl	%edx, %esi
	shrl	$31, %esi
	addl	%edx, %esi
	sarl	%esi
	.loc	0 1284 45                       # x264_src/encoder/encoder.c:1284:45
	leal	(%rsi,%rcx,4), %edx
	movslq	%r12d, %r14
	.loc	0 1284 28                       # x264_src/encoder/encoder.c:1284:28
	cmpl	%edx, 1840(%rbx)
.Ltmp947:
	.loc	0 1284 9                        # x264_src/encoder/encoder.c:1284:9
	jge	.LBB8_11
.Ltmp948:
# %bb.18:                               # %if.then
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	shll	$2, %ecx
.Ltmp949:
	.loc	0 1286 50 is_stmt 1             # x264_src/encoder/encoder.c:1286:50
	leal	(%rcx,%rax,2), %edi
	.loc	0 1286 24 is_stmt 0             # x264_src/encoder/encoder.c:1286:24
	callq	x264_malloc@PLT
.Ltmp950:
	#DEBUG_VALUE: buf <- $rax
	.loc	0 1287 14 is_stmt 1             # x264_src/encoder/encoder.c:1287:14
	testq	%rax, %rax
.Ltmp951:
	.loc	0 1287 13 is_stmt 0             # x264_src/encoder/encoder.c:1287:13
	je	.LBB8_19
.Ltmp952:
# %bb.20:                               # %if.end
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: buf <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r15
.Ltmp953:
	.loc	0 1289 13 is_stmt 1             # x264_src/encoder/encoder.c:1289:13
	testl	%r12d, %r12d
.Ltmp954:
	.loc	0 1289 13 is_stmt 0             # x264_src/encoder/encoder.c:1289:13
	je	.LBB8_22
.Ltmp955:
# %bb.21:                               # %if.then28
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: buf <- $r15
	.loc	0 1290 29 is_stmt 1             # x264_src/encoder/encoder.c:1290:29
	movq	1832(%rbx), %rsi
	.loc	0 1290 13 is_stmt 0             # x264_src/encoder/encoder.c:1290:13
	movq	%r15, %rdi
	movq	%r14, %rdx
	callq	memcpy@PLT
.Ltmp956:
.LBB8_22:                               # %if.end29
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: buf <- $r15
	.loc	0 1291 23 is_stmt 1             # x264_src/encoder/encoder.c:1291:23
	movq	1832(%rbx), %rdi
	.loc	0 1291 9 is_stmt 0              # x264_src/encoder/encoder.c:1291:9
	callq	x264_free@PLT
.Ltmp957:
	.loc	0 1292 23 is_stmt 1             # x264_src/encoder/encoder.c:1292:23
	movq	%r15, 1832(%rbx)
.Ltmp958:
	.loc	0 1297 36                       # x264_src/encoder/encoder.c:1297:36
	movl	1760(%rbx), %ecx
.Ltmp959:
	.loc	0 1295 41                       # x264_src/encoder/encoder.c:1295:41
	addq	%r15, %r14
.Ltmp960:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	#DEBUG_VALUE: i <- $ebp
	.loc	0 1297 27                       # x264_src/encoder/encoder.c:1297:27
	cmpl	%ebp, %ecx
.Ltmp961:
	.loc	0 1297 5 is_stmt 0              # x264_src/encoder/encoder.c:1297:5
	jg	.LBB8_24
	jmp	.LBB8_28
.Ltmp962:
.LBB8_11:                               # %for.cond.cleanup5.if.end32_crit_edge
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	.loc	0 1295 30 is_stmt 1             # x264_src/encoder/encoder.c:1295:30
	movq	1832(%rbx), %r15
	.loc	0 1295 41 is_stmt 0             # x264_src/encoder/encoder.c:1295:41
	addq	%r15, %r14
.Ltmp963:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- undef
	#DEBUG_VALUE: i <- $ebp
	.loc	0 1297 27 is_stmt 1             # x264_src/encoder/encoder.c:1297:27
	cmpl	%ebp, %ecx
.Ltmp964:
	.loc	0 1297 5 is_stmt 0              # x264_src/encoder/encoder.c:1297:5
	jle	.LBB8_28
.Ltmp965:
.LBB8_24:                               # %for.body42.lr.ph
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: i <- $ebp
	movslq	%ebp, %r15
	leaq	(,%r15,8), %rax
	leaq	(%rax,%rax,2), %r13
	jmp	.LBB8_25
.Ltmp966:
	.p2align	4, 0x90
.LBB8_30:                               # %lor.lhs.false
                                        #   in Loop: Header=BB8_25 Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	#DEBUG_VALUE: i <- $r15
	.loc	0 1299 50 is_stmt 1             # x264_src/encoder/encoder.c:1299:50
	movl	4(%rsi,%r13), %eax
	.loc	0 1299 68 is_stmt 0             # x264_src/encoder/encoder.c:1299:68
	addl	$-7, %eax
	cmpl	$2, %eax
	setb	%al
.Ltmp967:
.LBB8_31:                               # %lor.end
                                        #   in Loop: Header=BB8_25 Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	#DEBUG_VALUE: i <- $r15
	movzbl	%al, %ecx
.Ltmp968:
	#DEBUG_VALUE: long_startcode <- $ecx
	.loc	0 1300 74 is_stmt 1             # x264_src/encoder/encoder.c:1300:74
	addq	%r13, %rsi
	movl	640(%rbx), %edx
	.loc	0 1300 20 is_stmt 0             # x264_src/encoder/encoder.c:1300:20
	movq	%r14, %rdi
	callq	x264_nal_encode@PLT
.Ltmp969:
	#DEBUG_VALUE: size <- $eax
	.loc	0 1301 16 is_stmt 1             # x264_src/encoder/encoder.c:1301:16
	movq	1768(%rbx), %rcx
	.loc	0 1301 33 is_stmt 0             # x264_src/encoder/encoder.c:1301:33
	movl	%eax, 8(%rcx,%r13)
	.loc	0 1302 16 is_stmt 1             # x264_src/encoder/encoder.c:1302:16
	movq	1768(%rbx), %rcx
	.loc	0 1302 33 is_stmt 0             # x264_src/encoder/encoder.c:1302:33
	movq	%r14, 16(%rcx,%r13)
	.loc	0 1303 20 is_stmt 1             # x264_src/encoder/encoder.c:1303:20
	cltq
.Ltmp970:
	addq	%rax, %r14
.Ltmp971:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	.loc	0 1297 44                       # x264_src/encoder/encoder.c:1297:44
	incq	%r15
.Ltmp972:
	#DEBUG_VALUE: i <- $r15
	.loc	0 1297 36 is_stmt 0             # x264_src/encoder/encoder.c:1297:36
	movslq	1760(%rbx), %rax
	.loc	0 1297 27                       # x264_src/encoder/encoder.c:1297:27
	addq	$24, %r13
	cmpq	%rax, %r15
.Ltmp973:
	.loc	0 1297 5                        # x264_src/encoder/encoder.c:1297:5
	jge	.LBB8_27
.Ltmp974:
.LBB8_25:                               # %for.body42
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	.loc	0 1300 57 is_stmt 1             # x264_src/encoder/encoder.c:1300:57
	movq	1768(%rbx), %rsi
	.loc	0 1299 31                       # x264_src/encoder/encoder.c:1299:31
	testq	%r15, %r15
	.loc	0 1299 33 is_stmt 0             # x264_src/encoder/encoder.c:1299:33
	jne	.LBB8_30
.Ltmp975:
# %bb.26:                               #   in Loop: Header=BB8_25 Depth=1
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	#DEBUG_VALUE: i <- $r15
	.loc	0 0 33                          # x264_src/encoder/encoder.c:0:33
	movb	$1, %al
	.loc	0 1299 33                       # x264_src/encoder/encoder.c:1299:33
	jmp	.LBB8_31
.Ltmp976:
.LBB8_27:                               # %for.cond.cleanup41.loopexit
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:nal_buffer <- $r14
	.loc	0 1306 29 is_stmt 1             # x264_src/encoder/encoder.c:1306:29
	movq	1832(%rbx), %r15
.Ltmp977:
.LBB8_28:                               # %for.cond.cleanup41
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	.loc	0 1306 40 is_stmt 0             # x264_src/encoder/encoder.c:1306:40
	addl	%r12d, %r15d
	.loc	0 1306 23                       # x264_src/encoder/encoder.c:1306:23
	subl	%r15d, %r14d
.Ltmp978:
.LBB8_29:                               # %cleanup82
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	.loc	0 1307 1 is_stmt 1              # x264_src/encoder/encoder.c:1307:1
	movl	%r14d, %eax
	.loc	0 1307 1 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:1307:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp979:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp980:
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 8
	retq
.Ltmp981:
.LBB8_19:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:h <- $rbx
	#DEBUG_VALUE: x264_encoder_encapsulate_nals:start <- $ebp
	#DEBUG_VALUE: buf <- $rax
	.loc	0 0 1                           # x264_src/encoder/encoder.c:0:1
	movl	$-1, %r14d
.Ltmp982:
	.loc	0 1287 13 is_stmt 1             # x264_src/encoder/encoder.c:1287:13
	jmp	.LBB8_29
.Ltmp983:
.Lfunc_end8:
	.size	x264_encoder_encapsulate_nals, .Lfunc_end8-x264_encoder_encapsulate_nals
	.cfi_endproc
                                        # -- End function
	.globl	x264_weighted_reference_duplicate # -- Begin function x264_weighted_reference_duplicate
	.p2align	4, 0x90
	.type	x264_weighted_reference_duplicate,@function
x264_weighted_reference_duplicate:      # @x264_weighted_reference_duplicate
.Lfunc_begin9:
	.loc	0 1366 0                        # x264_src/encoder/encoder.c:1366:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- $rdi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- $esi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- $rdx
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i <- undef
	movl	$-1, %eax
.Ltmp984:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11 prologue_end          # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, 14696(%rdi)
.Ltmp985:
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jl	.LBB9_4
.Ltmp986:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- $rdi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- $esi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- $rdx
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movl	%esi, %ebp
	movq	%rdi, %r15
	.loc	0 1373 16 is_stmt 1             # x264_src/encoder/encoder.c:1373:16
	callq	x264_frame_pop_blank_unused@PLT
.Ltmp987:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- $r14
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- $ebp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- $r15
	movq	%rax, %rbx
.Ltmp988:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1376 18                       # x264_src/encoder/encoder.c:1376:18
	movslq	%ebp, %r12
	movq	14704(%r15,%r12,8), %rsi
	.loc	0 1376 17 is_stmt 0             # x264_src/encoder/encoder.c:1376:17
	movl	$15632, %edx                    # imm = 0x3D10
	movq	%rax, %rdi
	callq	memcpy@PLT
.Ltmp989:
	.loc	0 1377 33 is_stmt 1             # x264_src/encoder/encoder.c:1377:33
	movl	$1, 15600(%rbx)
	.loc	0 1378 22                       # x264_src/encoder/encoder.c:1378:22
	movq	14704(%r15,%r12,8), %rax
	.loc	0 1378 20 is_stmt 0             # x264_src/encoder/encoder.c:1378:20
	movq	%rax, 3528(%rbx)
	.loc	0 1379 27 is_stmt 1             # x264_src/encoder/encoder.c:1379:27
	movl	$1, 3520(%rbx)
	movl	$512, %edi                      # imm = 0x200
	.loc	0 1380 13                       # x264_src/encoder/encoder.c:1380:13
	addq	14680(%r15), %rdi
	.loc	0 1380 5 is_stmt 0              # x264_src/encoder/encoder.c:1380:5
	movl	$192, %edx
	movq	%r14, %rsi
	callq	memcpy@PLT
.Ltmp990:
	.loc	0 1383 25 is_stmt 1             # x264_src/encoder/encoder.c:1383:25
	movl	$1, 15016(%r15)
.Ltmp991:
	.loc	0 1384 12                       # x264_src/encoder/encoder.c:1384:12
	movl	14696(%r15), %eax
	.loc	0 1384 19 is_stmt 0             # x264_src/encoder/encoder.c:1384:19
	cmpl	$15, %eax
.Ltmp992:
	.loc	0 1384 9                        # x264_src/encoder/encoder.c:1384:9
	jg	.LBB9_3
.Ltmp993:
# %bb.2:                                # %if.then9
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- $r15
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- $ebp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- $r14
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1385 9 is_stmt 1              # x264_src/encoder/encoder.c:1385:9
	incl	%eax
	movl	%eax, 14696(%r15)
.Ltmp994:
.LBB9_3:                                # %if.end11
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- $r15
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- $ebp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- $r14
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1386 18                       # x264_src/encoder/encoder.c:1386:18
	movq	$0, 14824(%r15)
	.loc	0 1387 26                       # x264_src/encoder/encoder.c:1387:26
	addq	$14712, %r15                    # imm = 0x3978
.Ltmp995:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1387 5 is_stmt 0              # x264_src/encoder/encoder.c:1387:5
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	x264_frame_unshift@PLT
.Ltmp996:
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$1, %eax
	popq	%rbx
.Ltmp997:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp998:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp999:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
.LBB9_4:                                # %cleanup
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1390 1 is_stmt 1              # x264_src/encoder/encoder.c:1390:1
	retq
.Ltmp1000:
.Lfunc_end9:
	.size	x264_weighted_reference_duplicate, .Lfunc_end9-x264_weighted_reference_duplicate
	.cfi_endproc
                                        # -- End function
	.globl	x264_encoder_intra_refresh      # -- Begin function x264_encoder_intra_refresh
	.p2align	4, 0x90
	.type	x264_encoder_intra_refresh,@function
x264_encoder_intra_refresh:             # @x264_encoder_intra_refresh
.Lfunc_begin10:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_intra_refresh:h <- $rdi
	.loc	0 2184 22 prologue_end          # x264_src/encoder/encoder.c:2184:22
	movslq	1744(%rdi), %rax
	.loc	0 2184 9 is_stmt 0              # x264_src/encoder/encoder.c:2184:9
	movq	704(%rdi,%rax,8), %rax
.Ltmp1001:
	#DEBUG_VALUE: x264_encoder_intra_refresh:h <- $rax
	.loc	0 2185 31 is_stmt 1             # x264_src/encoder/encoder.c:2185:31
	movl	$1, 1892(%rax)
	.loc	0 2186 1                        # x264_src/encoder/encoder.c:2186:1
	retq
.Ltmp1002:
.Lfunc_end10:
	.size	x264_encoder_intra_refresh, .Lfunc_end10-x264_encoder_intra_refresh
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0                          # -- Begin function x264_encoder_encode
.LCPI11_0:
	.long	0xbf800000                      # float -1
.LCPI11_1:
	.long	0x3f800000                      # float 1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0
.LCPI11_2:
	.quad	0x3fe0000000000000              # double 0.5
	.text
	.globl	x264_encoder_encode
	.p2align	4, 0x90
	.type	x264_encoder_encode,@function
x264_encoder_encode:                    # @x264_encoder_encode
.Lfunc_begin11:
	.loc	0 2205 0                        # x264_src/encoder/encoder.c:2205:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $rsi
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $rdx
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$296, %rsp                      # imm = 0x128
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r15
	movq	%rcx, %rbp
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %r8
.Ltmp1003:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	.loc	0 2210 12 prologue_end          # x264_src/encoder/encoder.c:2210:12
	movl	1852(%rdi), %ecx
.Ltmp1004:
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	.loc	0 2210 28 is_stmt 0             # x264_src/encoder/encoder.c:2210:28
	cmpl	$2, %ecx
.Ltmp1005:
	.loc	0 2210 9                        # x264_src/encoder/encoder.c:2210:9
	jl	.LBB11_25
.Ltmp1006:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	.loc	0 2212 40 is_stmt 1             # x264_src/encoder/encoder.c:2212:40
	movslq	1744(%r8), %rax
	.loc	0 2212 26 is_stmt 0             # x264_src/encoder/encoder.c:2212:26
	movq	704(%r8,%rax,8), %rbx
.Ltmp1007:
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	.loc	0 2213 48 is_stmt 1             # x264_src/encoder/encoder.c:2213:48
	incl	%eax
	.loc	0 2213 53 is_stmt 0             # x264_src/encoder/encoder.c:2213:53
	cltd
	idivl	%ecx
	.loc	0 2213 27                       # x264_src/encoder/encoder.c:2213:27
	movl	%edx, 1744(%r8)
	.loc	0 2214 26 is_stmt 1             # x264_src/encoder/encoder.c:2214:26
	movslq	%edx, %rax
	movq	704(%r8,%rax,8), %r13
.Ltmp1008:
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	.loc	0 2215 56                       # x264_src/encoder/encoder.c:2215:56
	incl	%eax
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 2215 61 is_stmt 0             # x264_src/encoder/encoder.c:2215:61
	cltd
	idivl	%ecx
	.loc	0 2215 26                       # x264_src/encoder/encoder.c:2215:26
	movslq	%edx, %rax
	movq	704(%r8,%rax,8), %r8
.Ltmp1009:
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	.loc	0 2033 13 is_stmt 1             # x264_src/encoder/encoder.c:2033:13
	cmpq	%rbx, %r13
.Ltmp1010:
	.loc	0 2033 9 is_stmt 0              # x264_src/encoder/encoder.c:2033:9
	je	.LBB11_9
.Ltmp1011:
# %bb.2:                                # %if.end.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $rbx
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%r14, 40(%rsp)                  # 8-byte Spill
.Ltmp1012:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	movq	%r12, 64(%rsp)                  # 8-byte Spill
.Ltmp1013:
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%r15, %r12
.Ltmp1014:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r12
	.loc	0 2037 52 is_stmt 1             # x264_src/encoder/encoder.c:2037:52
	movq	14448(%rbx), %rax
.Ltmp1015:
	.loc	0 2037 5 is_stmt 0              # x264_src/encoder/encoder.c:2037:5
	testq	%rax, %rax
	je	.LBB11_5
.Ltmp1016:
# %bb.3:                                # %for.body.i.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $rbx
	leaq	14456(%rbx), %rcx
.Ltmp1017:
	.p2align	4, 0x90
.LBB11_4:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_constu 8, DW_OP_minus, DW_OP_stack_value] $rcx
	.loc	0 2038 32 is_stmt 1             # x264_src/encoder/encoder.c:2038:32
	incl	15600(%rax)
.Ltmp1018:
	#DEBUG_VALUE: f <- $rcx
	.loc	0 2037 52                       # x264_src/encoder/encoder.c:2037:52
	movq	(%rcx), %rax
.Ltmp1019:
	.loc	0 2037 5 is_stmt 0              # x264_src/encoder/encoder.c:2037:5
	addq	$8, %rcx
.Ltmp1020:
	testq	%rax, %rax
	jne	.LBB11_4
.Ltmp1021:
.LBB11_5:                               # %for.cond.cleanup.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $r13
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	%r8, %r15
.Ltmp1022:
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r15
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r12
	.loc	0 2039 52 is_stmt 1             # x264_src/encoder/encoder.c:2039:52
	movq	14448(%r13), %rsi
.Ltmp1023:
	.loc	0 2039 5 is_stmt 0              # x264_src/encoder/encoder.c:2039:5
	testq	%rsi, %rsi
	je	.LBB11_8
.Ltmp1024:
# %bb.6:                                # %for.body8.i.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r12
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $r13
	leaq	14456(%r13), %r14
.Ltmp1025:
	.p2align	4, 0x90
.LBB11_7:                               # %for.body8.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r12
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	#DEBUG_VALUE: f <- [DW_OP_constu 8, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 2040 9 is_stmt 1              # x264_src/encoder/encoder.c:2040:9
	movq	%rbx, %rdi
	callq	x264_frame_push_unused@PLT
.Ltmp1026:
	#DEBUG_VALUE: f <- $r14
	.loc	0 2039 52                       # x264_src/encoder/encoder.c:2039:52
	movq	(%r14), %rsi
.Ltmp1027:
	.loc	0 2039 5 is_stmt 0              # x264_src/encoder/encoder.c:2039:5
	addq	$8, %r14
.Ltmp1028:
	testq	%rsi, %rsi
	jne	.LBB11_7
.Ltmp1029:
.LBB11_8:                               # %for.cond.cleanup7.i
	#DEBUG_VALUE: x264_encoder_encode:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r12
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	#DEBUG_VALUE: x264_thread_sync_context:dst <- $r13
	#DEBUG_VALUE: x264_thread_sync_context:src <- $rbx
	.loc	0 2041 10 is_stmt 1             # x264_src/encoder/encoder.c:2041:10
	movq	14688(%rbx), %rax
	.loc	0 2041 33 is_stmt 0             # x264_src/encoder/encoder.c:2041:33
	incl	15600(%rax)
	.loc	0 2042 39 is_stmt 1             # x264_src/encoder/encoder.c:2042:39
	movq	14688(%r13), %rsi
	.loc	0 2042 5 is_stmt 0              # x264_src/encoder/encoder.c:2042:5
	movq	%rbx, %rdi
	callq	x264_frame_push_unused@PLT
.Ltmp1030:
	.loc	0 2045 19 is_stmt 1             # x264_src/encoder/encoder.c:2045:19
	leaq	1844(%r13), %rdi
	.loc	0 2045 34 is_stmt 0             # x264_src/encoder/encoder.c:2045:34
	leaq	1844(%rbx), %rsi
	.loc	0 2045 5                        # x264_src/encoder/encoder.c:2045:5
	movl	$14772, %edx                    # imm = 0x39B4
	callq	memcpy@PLT
.Ltmp1031:
	.loc	0 2046 23 is_stmt 1             # x264_src/encoder/encoder.c:2046:23
	movl	$704, %edx                      # imm = 0x2C0
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
.Ltmp1032:
	.loc	0 2047 10                       # x264_src/encoder/encoder.c:2047:10
	leaq	26712(%r13), %rdi
	.loc	0 2047 22 is_stmt 0             # x264_src/encoder/encoder.c:2047:22
	leaq	26712(%rbx), %rsi
	movl	$3688, %edx                     # imm = 0xE68
	callq	memcpy@PLT
.Ltmp1033:
	.loc	0 0 22                          # x264_src/encoder/encoder.c:0:22
	movq	%r15, %r8
	movq	%r12, %r15
.Ltmp1034:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- $r8
	movq	64(%rsp), %r12                  # 8-byte Reload
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp1035:
.LBB11_9:                               # %x264_thread_sync_context.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_prev <- $rbx
	.loc	0 2217 9 is_stmt 1              # x264_src/encoder/encoder.c:2217:9
	movq	%r13, %rdi
	movq	%rbx, %rsi
	movq	%r8, 72(%rsp)                   # 8-byte Spill
	movq	%r8, %rdx
	callq	x264_thread_sync_ratecontrol@PLT
.Ltmp1036:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1647 13                       # x264_src/encoder/encoder.c:1647:13
	movq	14688(%r13), %rax
	.loc	0 1647 10 is_stmt 0             # x264_src/encoder/encoder.c:1647:10
	cmpl	$0, 72(%rax)
.Ltmp1037:
	.loc	0 1647 9                        # x264_src/encoder/encoder.c:1647:9
	je	.LBB11_26
.Ltmp1038:
.LBB11_10:                              # %for.cond.preheader.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- 0
	.loc	0 1660 31 is_stmt 1             # x264_src/encoder/encoder.c:1660:31
	movl	13732(%r13), %ecx
	.loc	0 1660 23 is_stmt 0             # x264_src/encoder/encoder.c:1660:23
	testl	%ecx, %ecx
.Ltmp1039:
	.loc	0 1660 5                        # x264_src/encoder/encoder.c:1660:5
	jle	.LBB11_15
.Ltmp1040:
# %bb.11:                               # %for.cond10.preheader.lr.ph.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- 0
	.loc	0 1661 25 is_stmt 1             # x264_src/encoder/encoder.c:1661:25
	movq	14448(%r13), %rdx
.Ltmp1041:
	.loc	0 1661 9 is_stmt 0              # x264_src/encoder/encoder.c:1661:9
	testq	%rdx, %rdx
	je	.LBB11_15
.Ltmp1042:
# %bb.12:                               # %for.cond10.preheader.i.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%r15, 56(%rsp)                  # 8-byte Spill
.Ltmp1043:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	movq	%r14, 40(%rsp)                  # 8-byte Spill
.Ltmp1044:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	leaq	14448(%r13), %r14
	xorl	%r15d, %r15d
.Ltmp1045:
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: j <- 0
	movq	%r14, %rbx
	.loc	0 1661 9                        # x264_src/encoder/encoder.c:1661:9
	testq	%rdx, %rdx
	jne	.LBB11_21
	jmp	.LBB11_13
.Ltmp1046:
.LBB11_24:                              # %for.cond10.preheaderthread-pre-split.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1661 25                       # x264_src/encoder/encoder.c:1661:25
	movq	(%r14), %rdx
.Ltmp1047:
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: j <- 0
	.loc	0 0 25                          # x264_src/encoder/encoder.c:0:25
	movq	%r14, %rbx
.Ltmp1048:
	.loc	0 1661 9                        # x264_src/encoder/encoder.c:1661:9
	testq	%rdx, %rdx
	jne	.LBB11_21
	jmp	.LBB11_13
.Ltmp1049:
	.p2align	4, 0x90
.LBB11_20:                              # %for.inc.i
                                        #   in Loop: Header=BB11_21 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_consts 14448, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] $rbx, $r13
	.loc	0 1661 25                       # x264_src/encoder/encoder.c:1661:25
	movq	8(%rbx), %rdx
.Ltmp1050:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_consts 14448, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rbx, $r13
	addq	$8, %rbx
.Ltmp1051:
	.loc	0 1661 9                        # x264_src/encoder/encoder.c:1661:9
	testq	%rdx, %rdx
	je	.LBB11_23
.Ltmp1052:
.LBB11_21:                              # %for.body13.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_consts 14448, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] $rbx, $r13
	.loc	0 1662 41 is_stmt 1             # x264_src/encoder/encoder.c:1662:41
	movl	(%rdx), %eax
	.loc	0 1662 47 is_stmt 0             # x264_src/encoder/encoder.c:1662:47
	cmpl	13740(%r13,%r15,8), %eax
.Ltmp1053:
	.loc	0 1662 17                       # x264_src/encoder/encoder.c:1662:17
	jne	.LBB11_20
.Ltmp1054:
# %bb.22:                               # %if.then23.i
                                        #   in Loop: Header=BB11_21 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: j <- [DW_OP_LLVM_arg 0, DW_OP_consts 14448, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] $rbx, $r13
	.loc	0 1663 44 is_stmt 1             # x264_src/encoder/encoder.c:1663:44
	movq	%rbx, %rdi
	callq	x264_frame_shift@PLT
.Ltmp1055:
	.loc	0 1663 17 is_stmt 0             # x264_src/encoder/encoder.c:1663:17
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	x264_frame_push_unused@PLT
.Ltmp1056:
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	jmp	.LBB11_20
.Ltmp1057:
.LBB11_23:                              # %for.cond.cleanup12.loopexit.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- $r15
	.loc	0 1660 31 is_stmt 1             # x264_src/encoder/encoder.c:1660:31
	movl	13732(%r13), %ecx
	.loc	0 1660 54 is_stmt 0             # x264_src/encoder/encoder.c:1660:54
	incq	%r15
.Ltmp1058:
	#DEBUG_VALUE: i <- undef
	.loc	0 1660 23                       # x264_src/encoder/encoder.c:1660:23
	movslq	%ecx, %rax
	cmpq	%rax, %r15
	jl	.LBB11_24
	jmp	.LBB11_14
.Ltmp1059:
.LBB11_13:                              # %for.cond.cleanup12.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	#DEBUG_VALUE: i <- $r15
	.loc	0 1660 54                       # x264_src/encoder/encoder.c:1660:54
	incq	%r15
.Ltmp1060:
	#DEBUG_VALUE: i <- $r15
	.loc	0 1660 23                       # x264_src/encoder/encoder.c:1660:23
	movslq	%ecx, %rax
	cmpq	%rax, %r15
.Ltmp1061:
	.loc	0 1660 5                        # x264_src/encoder/encoder.c:1660:5
	jl	.LBB11_24
.Ltmp1062:
.LBB11_14:                              # %for.cond.cleanup.loopexit84.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1666 46 is_stmt 1             # x264_src/encoder/encoder.c:1666:46
	movq	14688(%r13), %rax
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	56(%rsp), %r15                  # 8-byte Reload
.Ltmp1063:
.LBB11_15:                              # %for.cond.cleanup.i984
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1666 32 is_stmt 0             # x264_src/encoder/encoder.c:1666:32
	leaq	14448(%r13), %rbx
	.loc	0 1666 5                        # x264_src/encoder/encoder.c:1666:5
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	x264_frame_push@PLT
.Ltmp1064:
	.loc	0 1667 32 is_stmt 1             # x264_src/encoder/encoder.c:1667:32
	movq	3200(%r13), %rax
	.loc	0 1667 37 is_stmt 0             # x264_src/encoder/encoder.c:1667:37
	movslq	1076(%rax), %rax
	.loc	0 1667 9                        # x264_src/encoder/encoder.c:1667:9
	cmpq	$0, 14448(%r13,%rax,8)
.Ltmp1065:
	.loc	0 1667 9                        # x264_src/encoder/encoder.c:1667:9
	je	.LBB11_18
.Ltmp1066:
# %bb.16:                               # %if.then41.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1668 36 is_stmt 1             # x264_src/encoder/encoder.c:1668:36
	movq	%rbx, %rdi
	callq	x264_frame_shift@PLT
.Ltmp1067:
	.loc	0 0 36 is_stmt 0                # x264_src/encoder/encoder.c:0:36
	jmp	.LBB11_17
.Ltmp1068:
.LBB11_25:
	#DEBUG_VALUE: x264_encoder_encode:h <- $rdi
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	movq	%r8, 72(%rsp)                   # 8-byte Spill
	movq	%r8, %r13
.Ltmp1069:
	#DEBUG_VALUE: x264_encoder_encode:h <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 1647 13 is_stmt 1             # x264_src/encoder/encoder.c:1647:13
	movq	14688(%r13), %rax
	.loc	0 1647 10 is_stmt 0             # x264_src/encoder/encoder.c:1647:10
	cmpl	$0, 72(%rax)
.Ltmp1070:
	.loc	0 1647 9                        # x264_src/encoder/encoder.c:1647:9
	jne	.LBB11_10
.Ltmp1071:
.LBB11_26:                              # %if.then.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 1649 32 is_stmt 1             # x264_src/encoder/encoder.c:1649:32
	cmpl	$2, 1852(%r13)
.Ltmp1072:
	.loc	0 1649 13 is_stmt 0             # x264_src/encoder/encoder.c:1649:13
	jl	.LBB11_28
.Ltmp1073:
.LBB11_17:                              # %x264_reference_update.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	x264_frame_push_unused@PLT
.Ltmp1074:
.LBB11_18:                              # %x264_reference_update.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_update:h <- $r13
	movq	%r13, %rdi
	movl	$1, %esi
	callq	x264_frame_pop_unused@PLT
.Ltmp1075:
	movq	%rax, 14688(%r13)
	testq	%rax, %rax
	je	.LBB11_19
.Ltmp1076:
.LBB11_28:                              # %if.end16
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2229 32 is_stmt 1             # x264_src/encoder/encoder.c:2229:32
	movl	$-1, 15592(%rax)
	.loc	0 2232 13                       # x264_src/encoder/encoder.c:2232:13
	movl	$0, (%r12)
	.loc	0 2233 13                       # x264_src/encoder/encoder.c:2233:13
	movq	$0, (%r14)
.Ltmp1077:
	.loc	0 2236 16                       # x264_src/encoder/encoder.c:2236:16
	testq	%rbp, %rbp
.Ltmp1078:
	.loc	0 2236 9 is_stmt 0              # x264_src/encoder/encoder.c:2236:9
	je	.LBB11_41
.Ltmp1079:
# %bb.29:                               # %if.then18
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%r12, 64(%rsp)                  # 8-byte Spill
.Ltmp1080:
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%r14, %r12
.Ltmp1081:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	.loc	0 2239 30 is_stmt 1             # x264_src/encoder/encoder.c:2239:30
	movq	%r13, %rdi
	xorl	%esi, %esi
	callq	x264_frame_pop_unused@PLT
.Ltmp1082:
	#DEBUG_VALUE: fenc <- $rax
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/encoder.c:0:30
	movl	$-1, %ebx
.Ltmp1083:
	.loc	0 2240 14 is_stmt 1             # x264_src/encoder/encoder.c:2240:14
	testq	%rax, %rax
.Ltmp1084:
	.loc	0 2240 13 is_stmt 0             # x264_src/encoder/encoder.c:2240:13
	je	.LBB11_111
.Ltmp1085:
# %bb.30:                               # %if.end22
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r14
.Ltmp1086:
	.loc	0 2243 13 is_stmt 1             # x264_src/encoder/encoder.c:2243:13
	movq	%r13, %rdi
	movq	%rax, %rsi
	movq	%rbp, %rdx
	callq	x264_frame_copy_picture@PLT
.Ltmp1087:
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2243 56 is_stmt 0             # x264_src/encoder/encoder.c:2243:56
	testl	%eax, %eax
.Ltmp1088:
	.loc	0 2243 13                       # x264_src/encoder/encoder.c:2243:13
	js	.LBB11_111
.Ltmp1089:
# %bb.31:                               # %if.end26
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2246 41 is_stmt 1             # x264_src/encoder/encoder.c:2246:41
	movq	3200(%r13), %rax
	.loc	0 2246 46 is_stmt 0             # x264_src/encoder/encoder.c:2246:46
	movl	1084(%rax), %ecx
	.loc	0 2246 36                       # x264_src/encoder/encoder.c:2246:36
	shll	$4, %ecx
	.loc	0 2246 30                       # x264_src/encoder/encoder.c:2246:30
	cmpl	%ecx, 20(%r13)
	.loc	0 2246 57                       # x264_src/encoder/encoder.c:2246:57
	jne	.LBB11_33
.Ltmp1090:
# %bb.32:                               # %lor.lhs.false
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2247 47 is_stmt 1             # x264_src/encoder/encoder.c:2247:47
	movl	1088(%rax), %eax
	.loc	0 2247 37 is_stmt 0             # x264_src/encoder/encoder.c:2247:37
	shll	$4, %eax
	.loc	0 2247 31                       # x264_src/encoder/encoder.c:2247:31
	cmpl	%eax, 24(%r13)
.Ltmp1091:
	.loc	0 2246 13 is_stmt 1             # x264_src/encoder/encoder.c:2246:13
	je	.LBB11_34
.Ltmp1092:
.LBB11_33:                              # %if.then32
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2248 13                       # x264_src/encoder/encoder.c:2248:13
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_frame_expand_border_mod16@PLT
.Ltmp1093:
.LBB11_34:                              # %if.end33
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2250 42                       # x264_src/encoder/encoder.c:2250:42
	movl	14596(%r13), %eax
	leal	1(%rax), %ecx
	movl	%ecx, 14596(%r13)
	.loc	0 2250 23 is_stmt 0             # x264_src/encoder/encoder.c:2250:23
	movl	%eax, 56(%r14)
.Ltmp1094:
	.loc	0 2252 23 is_stmt 1             # x264_src/encoder/encoder.c:2252:23
	movl	14616(%r13), %ecx
	.loc	0 2252 13 is_stmt 0             # x264_src/encoder/encoder.c:2252:13
	testl	%ecx, %ecx
	setne	%dl
	cmpl	%ecx, %eax
	sete	%al
	.loc	0 2252 38                       # x264_src/encoder/encoder.c:2252:38
	andb	%dl, %al
	cmpb	$1, %al
	jne	.LBB11_36
.Ltmp1095:
# %bb.35:                               # %if.then40
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2253 51 is_stmt 1             # x264_src/encoder/encoder.c:2253:51
	movq	16(%r14), %rax
	.loc	0 2253 43 is_stmt 0             # x264_src/encoder/encoder.c:2253:43
	movq	%rax, 14624(%r13)
.Ltmp1096:
.LBB11_36:                              # %if.end42
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2255 13 is_stmt 1             # x264_src/encoder/encoder.c:2255:13
	cmpl	$0, 648(%r13)
	.loc	0 2255 34 is_stmt 0             # x264_src/encoder/encoder.c:2255:34
	je	.LBB11_39
.Ltmp1097:
# %bb.37:                               # %land.lhs.true45
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2255 43                       # x264_src/encoder/encoder.c:2255:43
	movq	16(%r14), %rax
	.loc	0 2255 49                       # x264_src/encoder/encoder.c:2255:49
	cmpq	14656(%r13), %rax
.Ltmp1098:
	.loc	0 2255 13                       # x264_src/encoder/encoder.c:2255:13
	jg	.LBB11_39
.Ltmp1099:
# %bb.38:                               # %if.then49
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2256 13 is_stmt 1             # x264_src/encoder/encoder.c:2256:13
	movl	$.L.str.23, %edx
	movq	%r13, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp1100:
.LBB11_39:                              # %if.end50
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2258 52                       # x264_src/encoder/encoder.c:2258:52
	movq	14656(%r13), %rax
	.loc	0 2258 40 is_stmt 0             # x264_src/encoder/encoder.c:2258:40
	movq	%rax, 14664(%r13)
	.loc	0 2259 41 is_stmt 1             # x264_src/encoder/encoder.c:2259:41
	movq	16(%r14), %rax
	.loc	0 2259 33 is_stmt 0             # x264_src/encoder/encoder.c:2259:33
	movq	%rax, 14656(%r13)
.Ltmp1101:
	.loc	0 2261 20 is_stmt 1             # x264_src/encoder/encoder.c:2261:20
	movl	76(%r14), %eax
	.loc	0 2261 52 is_stmt 0             # x264_src/encoder/encoder.c:2261:52
	cmpl	$10, %eax
	jb	.LBB11_59
.Ltmp1102:
# %bb.40:                               # %if.end63.thread
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2262 32 is_stmt 1             # x264_src/encoder/encoder.c:2262:32
	movl	$0, 76(%r14)
.Ltmp1103:
	.loc	0 2264 13                       # x264_src/encoder/encoder.c:2264:13
	jmp	.LBB11_60
.Ltmp1104:
.LBB11_41:                              # %if.else131
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2305 12                       # x264_src/encoder/encoder.c:2305:12
	movq	33328(%r13), %rax
	.loc	0 2305 37 is_stmt 0             # x264_src/encoder/encoder.c:2305:37
	movb	$1, (%rax)
.Ltmp1105:
.LBB11_42:                              # %if.end132
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2310 15 is_stmt 1             # x264_src/encoder/encoder.c:2310:15
	incl	1844(%r13)
.Ltmp1106:
	.loc	0 2312 20                       # x264_src/encoder/encoder.c:2312:20
	movq	14416(%r13), %rdi
	.loc	0 2312 10 is_stmt 0             # x264_src/encoder/encoder.c:2312:10
	cmpq	$0, (%rdi)
.Ltmp1107:
	.loc	0 2312 9                        # x264_src/encoder/encoder.c:2312:9
	jne	.LBB11_44
.Ltmp1108:
# %bb.43:                               # %if.end139
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2313 9 is_stmt 1              # x264_src/encoder/encoder.c:2313:9
	movq	%r13, %rdi
	callq	x264_lookahead_get_frames@PLT
.Ltmp1109:
	.loc	0 2315 20                       # x264_src/encoder/encoder.c:2315:20
	movq	14416(%r13), %rdi
	.loc	0 2315 10 is_stmt 0             # x264_src/encoder/encoder.c:2315:10
	cmpq	$0, (%rdi)
	.loc	0 2315 31                       # x264_src/encoder/encoder.c:2315:31
	je	.LBB11_99
.Ltmp1110:
.LBB11_44:                              # %if.end149
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2320 15 is_stmt 1             # x264_src/encoder/encoder.c:2320:15
	callq	x264_frame_shift@PLT
.Ltmp1111:
	.loc	0 2320 13 is_stmt 0             # x264_src/encoder/encoder.c:2320:13
	movq	%rax, 14680(%r13)
.Ltmp1112:
	.loc	0 2321 26 is_stmt 1             # x264_src/encoder/encoder.c:2321:26
	movl	1852(%r13), %ecx
	.loc	0 2321 42 is_stmt 0             # x264_src/encoder/encoder.c:2321:42
	decl	%ecx
	.loc	0 2321 20                       # x264_src/encoder/encoder.c:2321:20
	cmpl	%ecx, 1844(%r13)
.Ltmp1113:
	.loc	0 2321 9                        # x264_src/encoder/encoder.c:2321:9
	jne	.LBB11_46
.Ltmp1114:
# %bb.45:                               # %if.then158
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2322 45 is_stmt 1             # x264_src/encoder/encoder.c:2322:45
	movq	24(%rax), %rcx
	.loc	0 2322 34 is_stmt 0             # x264_src/encoder/encoder.c:2322:34
	movq	%rcx, 15032(%r13)
.Ltmp1115:
.LBB11_46:                              # %if.end160
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2323 18 is_stmt 1             # x264_src/encoder/encoder.c:2323:18
	movq	48(%rax), %rsi
	.loc	0 2323 9 is_stmt 0              # x264_src/encoder/encoder.c:2323:9
	testq	%rsi, %rsi
.Ltmp1116:
	.loc	0 2323 9                        # x264_src/encoder/encoder.c:2323:9
	je	.LBB11_49
.Ltmp1117:
# %bb.47:                               # %if.then164
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2325 9 is_stmt 1              # x264_src/encoder/encoder.c:2325:9
	movq	%r13, %rdi
	callq	x264_encoder_reconfig
.Ltmp1118:
	.loc	0 2326 16                       # x264_src/encoder/encoder.c:2326:16
	movq	14680(%r13), %rax
	.loc	0 2326 22 is_stmt 0             # x264_src/encoder/encoder.c:2326:22
	movq	48(%rax), %rdi
	.loc	0 2326 29                       # x264_src/encoder/encoder.c:2326:29
	movq	696(%rdi), %rcx
	.loc	0 2326 13                       # x264_src/encoder/encoder.c:2326:13
	testq	%rcx, %rcx
.Ltmp1119:
	.loc	0 2326 13                       # x264_src/encoder/encoder.c:2326:13
	je	.LBB11_49
.Ltmp1120:
# %bb.48:                               # %if.then171
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2327 13 is_stmt 1             # x264_src/encoder/encoder.c:2327:13
	callq	*%rcx
.Ltmp1121:
	.loc	0 2330 12                       # x264_src/encoder/encoder.c:2330:12
	movq	14680(%r13), %rax
.Ltmp1122:
.LBB11_49:                              # %if.end178
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2330 9 is_stmt 0              # x264_src/encoder/encoder.c:2330:9
	cmpl	$0, 80(%rax)
.Ltmp1123:
	.loc	0 2330 9                        # x264_src/encoder/encoder.c:2330:9
	je	.LBB11_52
.Ltmp1124:
# %bb.50:                               # %if.then181
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2332 46 is_stmt 1             # x264_src/encoder/encoder.c:2332:46
	movl	56(%rax), %ecx
	.loc	0 2332 35 is_stmt 0             # x264_src/encoder/encoder.c:2332:35
	movl	%ecx, 14592(%r13)
.Ltmp1125:
	.loc	0 2333 29 is_stmt 1             # x264_src/encoder/encoder.c:2333:29
	cmpl	$1, 4(%rax)
.Ltmp1126:
	.loc	0 2333 13 is_stmt 0             # x264_src/encoder/encoder.c:2333:13
	jne	.LBB11_52
.Ltmp1127:
# %bb.51:                               # %if.then188
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2334 28 is_stmt 1             # x264_src/encoder/encoder.c:2334:28
	movl	$0, 1848(%r13)
.Ltmp1128:
.LBB11_52:                              # %if.end190
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2337 34                       # x264_src/encoder/encoder.c:2337:34
	movq	$0, 13728(%r13)
	.loc	0 2338 25                       # x264_src/encoder/encoder.c:2338:25
	movq	$0, 15016(%r13)
.Ltmp1129:
	.loc	0 2343 18                       # x264_src/encoder/encoder.c:2343:18
	movl	4(%rax), %ecx
.Ltmp1130:
	.loc	0 2343 9 is_stmt 0              # x264_src/encoder/encoder.c:2343:9
	decl	%ecx
	cmpl	$3, %ecx
	movq	%r14, 40(%rsp)                  # 8-byte Spill
.Ltmp1131:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	ja	.LBB11_66
.Ltmp1132:
# %bb.53:                               # %if.end190
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	jmpq	*.LJTI11_0(,%rcx,8)
.Ltmp1133:
.LBB11_54:                              # %if.then198
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 5
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 3
	.loc	0 2348 22 is_stmt 1             # x264_src/encoder/encoder.c:2348:22
	movl	$2, 7248(%r13)
.Ltmp1134:
	#DEBUG_VALUE: x264_reference_reset:h <- undef
	.loc	0 1677 5                        # x264_src/encoder/encoder.c:1677:5
	cmpq	$0, 14448(%r13)
	je	.LBB11_58
.Ltmp1135:
# %bb.55:                               # %while.body.i.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 5
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 3
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	leaq	14448(%r13), %rbx
.Ltmp1136:
	.p2align	4, 0x90
.LBB11_56:                              # %while.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 5
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 3
	.loc	0 1678 36 is_stmt 1             # x264_src/encoder/encoder.c:1678:36
	movq	%rbx, %rdi
	callq	x264_frame_pop@PLT
.Ltmp1137:
	.loc	0 1678 9 is_stmt 0              # x264_src/encoder/encoder.c:1678:9
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	x264_frame_push_unused@PLT
.Ltmp1138:
	.loc	0 1677 5 is_stmt 1              # x264_src/encoder/encoder.c:1677:5
	cmpq	$0, 14448(%r13)
	jne	.LBB11_56
.Ltmp1139:
# %bb.57:                               # %x264_reference_reset.exit.loopexit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 5
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 3
	.loc	0 1680 8                        # x264_src/encoder/encoder.c:1680:8
	movq	14680(%r13), %rax
.Ltmp1140:
.LBB11_58:                              # %x264_reference_reset.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 5
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 3
	.loc	0 1680 20 is_stmt 0             # x264_src/encoder/encoder.c:1680:20
	movl	$0, (%rax)
	.loc	0 1679 8 is_stmt 1              # x264_src/encoder/encoder.c:1679:8
	movq	14688(%r13), %rax
	.loc	0 1679 20 is_stmt 0             # x264_src/encoder/encoder.c:1679:20
	movl	$0, (%rax)
	movl	$5, %r14d
	movb	$1, %al
	movl	%eax, 36(%rsp)                  # 4-byte Spill
	movl	$3, %r11d
.Ltmp1141:
	.loc	0 2350 5 is_stmt 1              # x264_src/encoder/encoder.c:2350:5
	jmp	.LBB11_68
.Ltmp1142:
.LBB11_59:                              # %if.end63
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2264 32                       # x264_src/encoder/encoder.c:2264:32
	testl	%eax, %eax
.Ltmp1143:
	.loc	0 2264 13 is_stmt 0             # x264_src/encoder/encoder.c:2264:13
	jne	.LBB11_103
.Ltmp1144:
.LBB11_60:                              # %if.then66
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2266 38 is_stmt 1             # x264_src/encoder/encoder.c:2266:38
	movq	48(%r14), %rcx
	.loc	0 2266 32 is_stmt 0             # x264_src/encoder/encoder.c:2266:32
	testq	%rcx, %rcx
	cmoveq	%r13, %rcx
.Ltmp1145:
	#DEBUG_VALUE: b_interlaced <- undef
	.loc	0 2267 17 is_stmt 1             # x264_src/encoder/encoder.c:2267:17
	cmpl	$0, 136(%rcx)
.Ltmp1146:
	.loc	0 2267 17 is_stmt 0             # x264_src/encoder/encoder.c:2267:17
	je	.LBB11_101
.Ltmp1147:
# %bb.61:                               # %if.then74
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	#DEBUG_VALUE: b_tff <- undef
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	xorl	%eax, %eax
.Ltmp1148:
	.loc	0 2270 38 is_stmt 1             # x264_src/encoder/encoder.c:2270:38
	cmpl	$1, 672(%rcx)
	adcl	$4, %eax
	jmp	.LBB11_102
.Ltmp1149:
.LBB11_62:                              # %if.then212
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 2
	.loc	0 2362 22                       # x264_src/encoder/encoder.c:2362:22
	movl	$0, 7248(%r13)
	.loc	0 2363 9                        # x264_src/encoder/encoder.c:2363:9
	jmp	.LBB11_65
.Ltmp1150:
.LBB11_63:                              # %if.then219
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	.loc	0 2368 25                       # x264_src/encoder/encoder.c:2368:25
	xorl	%ebx, %ebx
	.loc	0 2368 51 is_stmt 0             # x264_src/encoder/encoder.c:2368:51
	cmpl	$1, 112(%r13)
	.loc	0 2368 25                       # x264_src/encoder/encoder.c:2368:25
	setne	%bl
	incl	%ebx
.Ltmp1151:
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- $ebx
	.loc	0 2369 22 is_stmt 1             # x264_src/encoder/encoder.c:2369:22
	movl	$1, 7248(%r13)
	.loc	0 2370 9                        # x264_src/encoder/encoder.c:2370:9
	movq	%r13, %rdi
	callq	x264_reference_hierarchy_reset
.Ltmp1152:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	%ebx, %r11d
	movl	$1, %r14d
	jmp	.LBB11_67
.Ltmp1153:
.LBB11_64:                              # %if.then205
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 2
	.loc	0 2355 22 is_stmt 1             # x264_src/encoder/encoder.c:2355:22
	movl	$2, 7248(%r13)
.Ltmp1154:
.LBB11_65:                              # %if.end231
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 2
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movq	%r13, %rdi
	callq	x264_reference_hierarchy_reset
.Ltmp1155:
	movl	$1, %r14d
	movl	$2, %r11d
	jmp	.LBB11_67
.Ltmp1156:
.LBB11_66:                              # %if.else225
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- 0
	.loc	0 2376 22 is_stmt 1             # x264_src/encoder/encoder.c:2376:22
	movl	$1, 7248(%r13)
	movl	$1, %r14d
	xorl	%r11d, %r11d
.Ltmp1157:
.LBB11_67:                              # %if.end231
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- 1
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/encoder.c:0:22
	movl	$0, 36(%rsp)                    # 4-byte Folded Spill
.Ltmp1158:
.LBB11_68:                              # %if.end231
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- $r11d
	.loc	0 2380 30 is_stmt 1             # x264_src/encoder/encoder.c:2380:30
	movq	14680(%r13), %rax
	.loc	0 2380 36 is_stmt 0             # x264_src/encoder/encoder.c:2380:36
	movl	56(%rax), %ecx
	.loc	0 2380 44                       # x264_src/encoder/encoder.c:2380:44
	subl	14592(%r13), %ecx
	.loc	0 2380 24                       # x264_src/encoder/encoder.c:2380:24
	addl	%ecx, %ecx
	.loc	0 2380 20                       # x264_src/encoder/encoder.c:2380:20
	movl	%ecx, (%rax)
	.loc	0 2379 8 is_stmt 1              # x264_src/encoder/encoder.c:2379:8
	movq	14688(%r13), %rax
	.loc	0 2379 20 is_stmt 0             # x264_src/encoder/encoder.c:2379:20
	movl	%ecx, (%rax)
	.loc	0 2381 26 is_stmt 1             # x264_src/encoder/encoder.c:2381:26
	movq	14680(%r13), %rax
	.loc	0 2381 8 is_stmt 0              # x264_src/encoder/encoder.c:2381:8
	movq	14688(%r13), %rcx
	.loc	0 2381 32                       # x264_src/encoder/encoder.c:2381:32
	movl	4(%rax), %eax
	.loc	0 2381 21                       # x264_src/encoder/encoder.c:2381:21
	movl	%eax, 4(%rcx)
	.loc	0 2382 27 is_stmt 1             # x264_src/encoder/encoder.c:2382:27
	movq	14680(%r13), %rax
	.loc	0 2382 8 is_stmt 0              # x264_src/encoder/encoder.c:2382:8
	movq	14688(%r13), %rcx
	.loc	0 2382 33                       # x264_src/encoder/encoder.c:2382:33
	movl	56(%rax), %eax
	.loc	0 2382 22                       # x264_src/encoder/encoder.c:2382:22
	movl	%eax, 56(%rcx)
	.loc	0 2384 44 is_stmt 1             # x264_src/encoder/encoder.c:2384:44
	testl	%r11d, %r11d
	.loc	0 2384 71 is_stmt 0             # x264_src/encoder/encoder.c:2384:71
	je	.LBB11_70
.Ltmp1159:
# %bb.69:                               # %land.rhs
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- $r11d
	.loc	0 2384 96                       # x264_src/encoder/encoder.c:2384:96
	cmpl	$2, 84(%r13)
	setge	%al
	jmp	.LBB11_71
.Ltmp1160:
.LBB11_70:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- $r11d
	.loc	0 0 96                          # x264_src/encoder/encoder.c:0:96
	xorl	%eax, %eax
.Ltmp1161:
.LBB11_71:                              # %land.end
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- $r11d
	.loc	0 2384 71                       # x264_src/encoder/encoder.c:2384:71
	movzbl	%al, %eax
	.loc	0 2384 8                        # x264_src/encoder/encoder.c:2384:8
	movq	14688(%r13), %rcx
	.loc	0 2384 28                       # x264_src/encoder/encoder.c:2384:28
	movl	%eax, 72(%rcx)
	.loc	0 2383 8 is_stmt 1              # x264_src/encoder/encoder.c:2383:8
	movq	14680(%r13), %rcx
	.loc	0 2383 28 is_stmt 0             # x264_src/encoder/encoder.c:2383:28
	movl	%eax, 72(%rcx)
	.loc	0 2390 38 is_stmt 1             # x264_src/encoder/encoder.c:2390:38
	movq	14688(%r13), %rax
	.loc	0 2390 44 is_stmt 0             # x264_src/encoder/encoder.c:2390:44
	movl	(%rax), %eax
.Ltmp1162:
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: w <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:h <- undef
	.loc	0 1462 30 is_stmt 1             # x264_src/encoder/encoder.c:1462:30
	leaq	14696(%r13), %rbx
	.loc	0 1462 37 is_stmt 0             # x264_src/encoder/encoder.c:1462:37
	movl	$0, 14696(%r13)
	.loc	0 1462 25                       # x264_src/encoder/encoder.c:1462:25
	movq	$0, 21416(%r13)
	.loc	0 1463 37 is_stmt 1             # x264_src/encoder/encoder.c:1463:37
	movl	$0, 14856(%r13)
.Ltmp1163:
	.loc	0 1464 22                       # x264_src/encoder/encoder.c:1464:22
	cmpl	$2, 7248(%r13)
	movl	%r11d, 52(%rsp)                 # 4-byte Spill
.Ltmp1164:
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/encoder.c:0:22
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
.Ltmp1165:
	.loc	0 1464 9                        # x264_src/encoder/encoder.c:1464:9
	je	.LBB11_144
.Ltmp1166:
# %bb.72:                               # %for.cond.preheader.i992
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: i <- 0
	.loc	0 1467 21 is_stmt 1             # x264_src/encoder/encoder.c:1467:21
	movq	14448(%r13), %rcx
.Ltmp1167:
	.loc	0 1467 5 is_stmt 0              # x264_src/encoder/encoder.c:1467:5
	testq	%rcx, %rcx
	je	.LBB11_79
.Ltmp1168:
# %bb.73:                               # %for.body.i994.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: i <- 0
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leaq	14856(%r13), %rdx
.Ltmp1169:
	.loc	0 1467 5                        # x264_src/encoder/encoder.c:1467:5
	leaq	14456(%r13), %rsi
	jmp	.LBB11_76
.Ltmp1170:
	.p2align	4, 0x90
.LBB11_74:                              # %for.inc.sink.split.i
                                        #   in Loop: Header=BB11_76 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	addq	%r13, %rdi
.Ltmp1171:
	movslq	(%r8), %r9
	leal	1(%r9), %r10d
	movl	%r10d, (%r8)
	movq	%rcx, (%rdi,%r9,8)
.Ltmp1172:
.LBB11_75:                              # %for.inc.i996
                                        #   in Loop: Header=BB11_76 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 14456, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 1467 21                       # x264_src/encoder/encoder.c:1467:21
	movq	(%rsi), %rcx
.Ltmp1173:
	.loc	0 1467 5                        # x264_src/encoder/encoder.c:1467:5
	addq	$8, %rsi
	testq	%rcx, %rcx
	je	.LBB11_78
.Ltmp1174:
.LBB11_76:                              # %for.body.i994
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 14456, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] undef, undef
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$14704, %edi                    # imm = 0x3970
	movq	%rbx, %r8
.Ltmp1175:
	.loc	0 1469 43 is_stmt 1             # x264_src/encoder/encoder.c:1469:43
	cmpl	%eax, (%rcx)
.Ltmp1176:
	.loc	0 1469 13 is_stmt 0             # x264_src/encoder/encoder.c:1469:13
	jl	.LBB11_74
.Ltmp1177:
# %bb.77:                               # %if.else.i
                                        #   in Loop: Header=BB11_76 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movl	$14864, %edi                    # imm = 0x3A10
	movq	%rdx, %r8
.Ltmp1178:
	.loc	0 1471 18 is_stmt 1             # x264_src/encoder/encoder.c:1471:18
	jg	.LBB11_74
	jmp	.LBB11_75
.Ltmp1179:
.LBB11_78:                              # %do.body.preheader.loopexit.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	.loc	0 0 18 is_stmt 0                # x264_src/encoder/encoder.c:0:18
	movl	(%rbx), %eax
.Ltmp1180:
	jmp	.LBB11_80
.Ltmp1181:
.LBB11_79:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_build_list:i_poc <- $eax
	#DEBUG_VALUE: i <- 0
	xorl	%eax, %eax
.Ltmp1182:
.LBB11_80:                              # %do.body.preheader.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1476 5 is_stmt 1              # x264_src/encoder/encoder.c:1476:5
	cmpl	$2, %eax
	movl	$1, %ecx
	cmovgel	%eax, %ecx
	decl	%ecx
.Ltmp1183:
	.p2align	4, 0x90
.LBB11_81:                              # %for.cond39.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_82 Depth 2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	xorl	%esi, %esi
.Ltmp1184:
.LBB11_82:                              # %for.cond39.i
                                        #   Parent Loop BB11_81 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1479 27 is_stmt 1             # x264_src/encoder/encoder.c:1479:27
	cmpq	%rcx, %rsi
.Ltmp1185:
	.loc	0 1479 9 is_stmt 0              # x264_src/encoder/encoder.c:1479:9
	je	.LBB11_85
.Ltmp1186:
# %bb.83:                               # %for.body43.i
                                        #   in Loop: Header=BB11_82 Depth=2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rsi, %rdx
.Ltmp1187:
	.loc	0 1481 17 is_stmt 1             # x264_src/encoder/encoder.c:1481:17
	movq	14704(%r13,%rsi,8), %rdi
	.loc	0 1481 38 is_stmt 0             # x264_src/encoder/encoder.c:1481:38
	movq	14712(%r13,%rsi,8), %r8
	.loc	0 1481 30                       # x264_src/encoder/encoder.c:1481:30
	movl	(%rdi), %r9d
	.loc	0 1481 48                       # x264_src/encoder/encoder.c:1481:48
	incq	%rsi
.Ltmp1188:
	#DEBUG_VALUE: i <- $rdx
	.loc	0 1481 36                       # x264_src/encoder/encoder.c:1481:36
	cmpl	(%r8), %r9d
.Ltmp1189:
	.loc	0 1481 17                       # x264_src/encoder/encoder.c:1481:17
	jge	.LBB11_82
.Ltmp1190:
# %bb.84:                               # %do.body54.i
                                        #   in Loop: Header=BB11_81 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rdx
	#DEBUG_VALUE: t <- $rdi
	.loc	0 1483 17 is_stmt 1             # x264_src/encoder/encoder.c:1483:17
	movq	%r8, 14704(%r13,%rdx,8)
	movq	%rdi, 14712(%r13,%rdx,8)
.Ltmp1191:
	#DEBUG_VALUE: x264_reference_build_list:b_ok <- undef
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB11_81
.Ltmp1192:
.LBB11_85:                              # %do.end75.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1490 15 is_stmt 1             # x264_src/encoder/encoder.c:1490:15
	movl	13728(%r13), %ecx
	.loc	0 1490 9 is_stmt 0              # x264_src/encoder/encoder.c:1490:9
	testl	%ecx, %ecx
.Ltmp1193:
	.loc	0 1490 9                        # x264_src/encoder/encoder.c:1490:9
	je	.LBB11_89
.Ltmp1194:
# %bb.86:                               # %for.cond82.preheader.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $eax
	.loc	0 1491 43 is_stmt 1             # x264_src/encoder/encoder.c:1491:43
	movl	(%rbx), %edx
	.loc	0 1491 50 is_stmt 0             # x264_src/encoder/encoder.c:1491:50
	subl	%ecx, %edx
	.loc	0 1491 37                       # x264_src/encoder/encoder.c:1491:37
	cmpl	%edx, %eax
.Ltmp1195:
	.loc	0 1491 9                        # x264_src/encoder/encoder.c:1491:9
	jle	.LBB11_89
.Ltmp1196:
# %bb.87:                               # %for.body89.lr.ph.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $eax
	cltq
.Ltmp1197:
	.loc	0 1494 30 is_stmt 1             # x264_src/encoder/encoder.c:1494:30
	movl	13732(%r13), %ecx
.Ltmp1198:
	.p2align	4, 0x90
.LBB11_88:                              # %for.body89.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1493 27                       # x264_src/encoder/encoder.c:1493:27
	movl	1848(%r13), %edx
	.loc	0 1493 41 is_stmt 0             # x264_src/encoder/encoder.c:1493:41
	movq	14696(%r13,%rax,8), %rsi
.Ltmp1199:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rax
	#DEBUG_VALUE: i <- undef
	.loc	0 1493 39                       # x264_src/encoder/encoder.c:1493:39
	subl	68(%rsi), %edx
.Ltmp1200:
	#DEBUG_VALUE: diff <- $edx
	.loc	0 1491 0 is_stmt 1              # x264_src/encoder/encoder.c:1491:0
	decq	%rax
.Ltmp1201:
	#DEBUG_VALUE: i <- $rax
	.loc	0 1494 73                       # x264_src/encoder/encoder.c:1494:73
	movl	(%rsi), %esi
	.loc	0 1494 13 is_stmt 0             # x264_src/encoder/encoder.c:1494:13
	movslq	%ecx, %rcx
	.loc	0 1494 58                       # x264_src/encoder/encoder.c:1494:58
	movl	%esi, 13740(%r13,%rcx,8)
	.loc	0 1495 50 is_stmt 1             # x264_src/encoder/encoder.c:1495:50
	movslq	13732(%r13), %rsi
	leal	1(%rsi), %ecx
	movl	%ecx, 13732(%r13)
	.loc	0 1495 79 is_stmt 0             # x264_src/encoder/encoder.c:1495:79
	movl	%edx, 13736(%r13,%rsi,8)
.Ltmp1202:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rax
	.loc	0 1491 43 is_stmt 1             # x264_src/encoder/encoder.c:1491:43
	movslq	14696(%r13), %rdx
.Ltmp1203:
	.loc	0 1491 58 is_stmt 0             # x264_src/encoder/encoder.c:1491:58
	movslq	13728(%r13), %rsi
	.loc	0 1491 50                       # x264_src/encoder/encoder.c:1491:50
	subq	%rsi, %rdx
	.loc	0 1491 37                       # x264_src/encoder/encoder.c:1491:37
	cmpq	%rdx, %rax
.Ltmp1204:
	.loc	0 1491 9                        # x264_src/encoder/encoder.c:1491:9
	jg	.LBB11_88
.Ltmp1205:
.LBB11_89:                              # %if.end114.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	14856(%r13), %eax
	.loc	0 1499 5 is_stmt 1              # x264_src/encoder/encoder.c:1499:5
	cmpl	$2, %eax
	movl	$1, %ecx
	cmovgel	%eax, %ecx
	decl	%ecx
.Ltmp1206:
	.p2align	4, 0x90
.LBB11_90:                              # %for.cond117.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB11_91 Depth 2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	xorl	%esi, %esi
.Ltmp1207:
.LBB11_91:                              # %for.cond117.i
                                        #   Parent Loop BB11_90 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1502 27 is_stmt 1             # x264_src/encoder/encoder.c:1502:27
	cmpq	%rcx, %rsi
.Ltmp1208:
	.loc	0 1502 9 is_stmt 0              # x264_src/encoder/encoder.c:1502:9
	je	.LBB11_94
.Ltmp1209:
# %bb.92:                               # %for.body122.i
                                        #   in Loop: Header=BB11_91 Depth=2
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rsi, %rdx
.Ltmp1210:
	.loc	0 1504 17 is_stmt 1             # x264_src/encoder/encoder.c:1504:17
	movq	14864(%r13,%rsi,8), %rdi
	.loc	0 1504 38 is_stmt 0             # x264_src/encoder/encoder.c:1504:38
	movq	14872(%r13,%rsi,8), %r8
	.loc	0 1504 30                       # x264_src/encoder/encoder.c:1504:30
	movl	(%rdi), %r9d
	.loc	0 1504 48                       # x264_src/encoder/encoder.c:1504:48
	incq	%rsi
.Ltmp1211:
	#DEBUG_VALUE: i <- $rdx
	.loc	0 1504 36                       # x264_src/encoder/encoder.c:1504:36
	cmpl	(%r8), %r9d
.Ltmp1212:
	.loc	0 1504 17                       # x264_src/encoder/encoder.c:1504:17
	jle	.LBB11_91
.Ltmp1213:
# %bb.93:                               # %do.body134.i
                                        #   in Loop: Header=BB11_90 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rdx
	#DEBUG_VALUE: t <- $rdi
	.loc	0 1506 17 is_stmt 1             # x264_src/encoder/encoder.c:1506:17
	movq	%r8, 14864(%r13,%rdx,8)
	movq	%rdi, 14872(%r13,%rdx,8)
.Ltmp1214:
	#DEBUG_VALUE: x264_reference_build_list:b_ok <- undef
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB11_90
.Ltmp1215:
.LBB11_94:                              # %do.end160.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_reference_check_reorder:h <- undef
	#DEBUG_VALUE: i <- 0
	movl	(%rbx), %ecx
.Ltmp1216:
	.loc	0 1354 23 is_stmt 1             # x264_src/encoder/encoder.c:1354:23
	cmpl	$2, %ecx
.Ltmp1217:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jl	.LBB11_120
.Ltmp1218:
# %bb.95:                               # %for.body.lr.ph.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leal	-1(%rcx), %edx
	cmpl	$0, 7248(%r13)
.Ltmp1219:
	movq	14704(%r13), %rsi
	je	.LBB11_116
.Ltmp1220:
# %bb.96:                               # %for.body.preheader.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1357 57 is_stmt 1             # x264_src/encoder/encoder.c:1357:57
	movl	(%rsi), %edi
	xorl	%esi, %esi
.Ltmp1221:
	.p2align	4, 0x90
.LBB11_97:                              # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	movl	%edi, %r8d
.Ltmp1222:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1357 65 is_stmt 0             # x264_src/encoder/encoder.c:1357:65
	movq	14712(%r13,%rsi,8), %rdi
	.loc	0 1357 80                       # x264_src/encoder/encoder.c:1357:80
	movl	(%rdi), %edi
	.loc	0 1357 63                       # x264_src/encoder/encoder.c:1357:63
	cmpl	%edi, %r8d
.Ltmp1223:
	.loc	0 1356 13 is_stmt 1             # x264_src/encoder/encoder.c:1356:13
	jl	.LBB11_119
.Ltmp1224:
# %bb.98:                               # %for.inc.i.i
                                        #   in Loop: Header=BB11_97 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	incq	%rsi
.Ltmp1225:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1354 23 is_stmt 1             # x264_src/encoder/encoder.c:1354:23
	cmpq	%rsi, %rdx
.Ltmp1226:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jne	.LBB11_97
	jmp	.LBB11_120
.Ltmp1227:
.LBB11_99:                              # %land.lhs.true144
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2315 34 is_stmt 1             # x264_src/encoder/encoder.c:2315:34
	movq	%r13, %rdi
	callq	x264_lookahead_is_empty@PLT
.Ltmp1228:
	testl	%eax, %eax
.Ltmp1229:
	.loc	0 2315 9 is_stmt 0              # x264_src/encoder/encoder.c:2315:9
	je	.LBB11_130
.Ltmp1230:
# %bb.100:                              # %if.then147
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	72(%rsp), %rdi                  # 8-byte Reload
.Ltmp1231:
	.loc	0 2316 16 is_stmt 1             # x264_src/encoder/encoder.c:2316:16
	movq	%r13, %rsi
	movq	%r14, %rdx
	movq	%r12, %rcx
	movq	%r15, %r8
	.loc	0 2316 16 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:2316:16
	addq	$296, %rsp                      # imm = 0x128
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp1232:
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $rcx
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1233:
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $rsi
	#DEBUG_VALUE: x264_encoder_encode:h <- $rsi
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1234:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $rdx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1235:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r8
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1236:
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	.cfi_def_cfa_offset 8
	jmp	x264_encoder_frame_end          # TAILCALL
.Ltmp1237:
.LBB11_101:
	.cfi_def_cfa_offset 352
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 0 16                          # x264_src/encoder/encoder.c:0:16
	movl	$1, %eax
.Ltmp1238:
.LBB11_102:                             # %if.end90
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	movl	%eax, 76(%r14)
.Ltmp1239:
.LBB11_103:                             # %if.end91
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2276 13 is_stmt 1             # x264_src/encoder/encoder.c:2276:13
	cmpl	$0, 14672(%r13)
.Ltmp1240:
	.loc	0 2276 13 is_stmt 0             # x264_src/encoder/encoder.c:2276:13
	je	.LBB11_108
.Ltmp1241:
# %bb.104:                              # %if.then94
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2278 34 is_stmt 1             # x264_src/encoder/encoder.c:2278:34
	movl	396(%r13), %eax
	.loc	0 2278 71 is_stmt 0             # x264_src/encoder/encoder.c:2278:71
	cmpl	$2, %eax
	je	.LBB11_106
.Ltmp1242:
# %bb.105:                              # %if.then94
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	cmpl	$-1, %eax
	jne	.LBB11_107
.Ltmp1243:
.LBB11_106:                             # %if.then102
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2279 17 is_stmt 1             # x264_src/encoder/encoder.c:2279:17
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_weight_plane_analyse@PLT
.Ltmp1244:
.LBB11_107:                             # %if.end103
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2280 13                       # x264_src/encoder/encoder.c:2280:13
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_frame_init_lowres@PLT
.Ltmp1245:
.LBB11_108:                             # %if.end104
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2283 13                       # x264_src/encoder/encoder.c:2283:13
	cmpl	$0, 552(%r13)
	.loc	0 2283 35 is_stmt 0             # x264_src/encoder/encoder.c:2283:35
	je	.LBB11_112
.Ltmp1246:
# %bb.109:                              # %land.lhs.true107
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2283 38                       # x264_src/encoder/encoder.c:2283:38
	cmpl	$0, 576(%r13)
.Ltmp1247:
	.loc	0 2283 13                       # x264_src/encoder/encoder.c:2283:13
	je	.LBB11_112
.Ltmp1248:
# %bb.110:                              # %if.then111
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2285 17 is_stmt 1             # x264_src/encoder/encoder.c:2285:17
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_macroblock_tree_read@PLT
.Ltmp1249:
	testl	%eax, %eax
	jne	.LBB11_111
	jmp	.LBB11_114
.Ltmp1250:
.LBB11_112:                             # %if.else116
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2288 18                       # x264_src/encoder/encoder.c:2288:18
	cmpl	$0, 544(%r13)
.Ltmp1251:
	.loc	0 2288 18 is_stmt 0             # x264_src/encoder/encoder.c:2288:18
	je	.LBB11_114
.Ltmp1252:
# %bb.113:                              # %if.then120
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2289 13 is_stmt 1             # x264_src/encoder/encoder.c:2289:13
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_adaptive_quant_frame@PLT
.Ltmp1253:
.LBB11_114:                             # %if.end122
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: fenc <- $r14
	.loc	0 2292 9                        # x264_src/encoder/encoder.c:2292:9
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_lookahead_put_frame@PLT
.Ltmp1254:
	.loc	0 2294 44                       # x264_src/encoder/encoder.c:2294:44
	movl	14612(%r13), %eax
	.loc	0 2294 56 is_stmt 0             # x264_src/encoder/encoder.c:2294:56
	subl	1852(%r13), %eax
	incl	%eax
	.loc	0 2294 31                       # x264_src/encoder/encoder.c:2294:31
	cmpl	%eax, 14596(%r13)
	movq	%r12, %r14
.Ltmp1255:
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	.loc	0 0 31                          # x264_src/encoder/encoder.c:0:31
	movq	64(%rsp), %r12                  # 8-byte Reload
.Ltmp1256:
	.loc	0 2294 13                       # x264_src/encoder/encoder.c:2294:13
	jg	.LBB11_42
.Ltmp1257:
# %bb.115:                              # %if.then129
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2297 29 is_stmt 1             # x264_src/encoder/encoder.c:2297:29
	movl	$0, (%r15)
	xorl	%ebx, %ebx
	.loc	0 2298 13                       # x264_src/encoder/encoder.c:2298:13
	jmp	.LBB11_111
.Ltmp1258:
.LBB11_116:                             # %for.body.us.preheader.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1356 57                       # x264_src/encoder/encoder.c:1356:57
	movl	68(%rsi), %edi
	xorl	%esi, %esi
.Ltmp1259:
	.p2align	4, 0x90
.LBB11_117:                             # %for.body.us.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	movl	%edi, %r8d
.Ltmp1260:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1356 71 is_stmt 0             # x264_src/encoder/encoder.c:1356:71
	movq	14712(%r13,%rsi,8), %rdi
	.loc	0 1356 86                       # x264_src/encoder/encoder.c:1356:86
	movl	68(%rdi), %edi
	.loc	0 1356 69                       # x264_src/encoder/encoder.c:1356:69
	cmpl	%edi, %r8d
	.loc	0 1356 13                       # x264_src/encoder/encoder.c:1356:13
	jl	.LBB11_119
.Ltmp1261:
# %bb.118:                              # %for.inc.us.i.i
                                        #   in Loop: Header=BB11_117 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	incq	%rsi
.Ltmp1262:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1354 23 is_stmt 1             # x264_src/encoder/encoder.c:1354:23
	cmpq	%rsi, %rdx
.Ltmp1263:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jne	.LBB11_117
	jmp	.LBB11_120
.Ltmp1264:
.LBB11_119:                             # %if.then.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rsi
	.loc	0 1359 33 is_stmt 1             # x264_src/encoder/encoder.c:1359:33
	movl	$1, 15016(%r13)
.Ltmp1265:
.LBB11_120:                             # %x264_reference_check_reorder.exit.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1515 17                       # x264_src/encoder/encoder.c:1515:17
	movl	14608(%r13), %edx
	cmpl	%edx, %eax
	cmovll	%eax, %edx
	.loc	0 1515 15 is_stmt 0             # x264_src/encoder/encoder.c:1515:15
	movl	%edx, 14856(%r13)
	.loc	0 1516 17 is_stmt 1             # x264_src/encoder/encoder.c:1516:17
	movl	14604(%r13), %eax
	cmpl	%eax, %ecx
	cmovll	%ecx, %eax
	.loc	0 1517 17                       # x264_src/encoder/encoder.c:1517:17
	movl	80(%r13), %ecx
	cmpl	%ecx, %eax
	cmovgel	%ecx, %eax
	.loc	0 1517 15 is_stmt 0             # x264_src/encoder/encoder.c:1517:15
	movl	%eax, 14696(%r13)
.Ltmp1266:
	.loc	0 1520 12 is_stmt 1             # x264_src/encoder/encoder.c:1520:12
	movq	14680(%r13), %rsi
	.loc	0 1520 25 is_stmt 0             # x264_src/encoder/encoder.c:1520:25
	cmpl	$3, 4(%rsi)
.Ltmp1267:
	.loc	0 1520 9                        # x264_src/encoder/encoder.c:1520:9
	jne	.LBB11_143
.Ltmp1268:
# %bb.121:                              # %if.then191.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1523 30 is_stmt 1             # x264_src/encoder/encoder.c:1523:30
	movl	396(%r13), %eax
.Ltmp1269:
	.loc	0 1523 13 is_stmt 0             # x264_src/encoder/encoder.c:1523:13
	cmpl	$1, %eax
	je	.LBB11_129
.Ltmp1270:
# %bb.122:                              # %if.then191.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movl	$-1, %ebx
	.loc	0 1523 13                       # x264_src/encoder/encoder.c:1523:13
	cmpl	$2, %eax
	jne	.LBB11_142
.Ltmp1271:
# %bb.123:                              # %if.then194.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1526 43 is_stmt 1             # x264_src/encoder/encoder.c:1526:43
	movq	$0, 272(%rsp)
	.loc	0 1526 27 is_stmt 0             # x264_src/encoder/encoder.c:1526:27
	movq	$0, 208(%rsp)
.Ltmp1272:
	.loc	0 1527 17 is_stmt 1             # x264_src/encoder/encoder.c:1527:17
	cmpl	$0, 576(%r13)
.Ltmp1273:
	.loc	0 1527 17 is_stmt 0             # x264_src/encoder/encoder.c:1527:17
	je	.LBB11_125
.Ltmp1274:
# %bb.124:                              # %if.then200.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1528 17 is_stmt 1             # x264_src/encoder/encoder.c:1528:17
	movq	%r13, %rdi
	callq	x264_ratecontrol_set_weights@PLT
.Ltmp1275:
	.loc	0 1530 21                       # x264_src/encoder/encoder.c:1530:21
	movq	14680(%r13), %rsi
.Ltmp1276:
.LBB11_125:                             # %if.end202.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/encoder.c:0:21
	movq	24(%rsp), %rbx                  # 8-byte Reload
	.loc	0 1530 18                       # x264_src/encoder/encoder.c:1530:18
	cmpq	$0, 368(%rsi)
.Ltmp1277:
	.loc	0 1530 17                       # x264_src/encoder/encoder.c:1530:17
	je	.LBB11_131
.Ltmp1278:
# %bb.126:                              # %if.else218.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1538 79 is_stmt 1             # x264_src/encoder/encoder.c:1538:79
	movzbl	352(%rsi), %ecx
	movl	$1, %eax
	.loc	0 1538 55 is_stmt 0             # x264_src/encoder/encoder.c:1538:55
	shll	%cl, %eax
	.loc	0 1538 51                       # x264_src/encoder/encoder.c:1538:51
	cmpl	%eax, 356(%rsi)
.Ltmp1279:
	.loc	0 1538 21                       # x264_src/encoder/encoder.c:1538:21
	jne	.LBB11_127
.Ltmp1280:
# %bb.133:                              # %if.then230.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1540 21 is_stmt 1             # x264_src/encoder/encoder.c:1540:21
	movl	$1, 356(%rsi)
	movq	14680(%r13), %rax
	movl	$0, 352(%rax)
	movl	$320, %esi                      # imm = 0x140
	addq	14680(%r13), %rsi
.Ltmp1281:
	.loc	0 1540 21 is_stmt 0             # x264_src/encoder/encoder.c:1540:21
	movq	%r13, %rdi
	callq	*32896(%r13)
.Ltmp1282:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- undef
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i <- undef
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11 is_stmt 1             # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, (%rbx)
.Ltmp1283:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- undef
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jl	.LBB11_128
.Ltmp1284:
.LBB11_134:                             # %if.end.i448.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1373 16 is_stmt 1             # x264_src/encoder/encoder.c:1373:16
	movq	%r13, %rdi
	callq	x264_frame_pop_blank_unused@PLT
.Ltmp1285:
	movq	%rax, %rbx
.Ltmp1286:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1376 18                       # x264_src/encoder/encoder.c:1376:18
	movq	14704(%r13), %rsi
	.loc	0 1376 17 is_stmt 0             # x264_src/encoder/encoder.c:1376:17
	movl	$15632, %edx                    # imm = 0x3D10
	movq	%rax, %rdi
	callq	memcpy@PLT
.Ltmp1287:
	.loc	0 1377 33 is_stmt 1             # x264_src/encoder/encoder.c:1377:33
	movl	$1, 15600(%rbx)
	.loc	0 1378 22                       # x264_src/encoder/encoder.c:1378:22
	movq	14704(%r13), %rax
	.loc	0 1378 20 is_stmt 0             # x264_src/encoder/encoder.c:1378:20
	movq	%rax, 3528(%rbx)
	.loc	0 1379 27 is_stmt 1             # x264_src/encoder/encoder.c:1379:27
	movl	$1, 3520(%rbx)
	movl	$512, %edi                      # imm = 0x200
	.loc	0 1380 13                       # x264_src/encoder/encoder.c:1380:13
	addq	14680(%r13), %rdi
	.loc	0 1380 5 is_stmt 0              # x264_src/encoder/encoder.c:1380:5
	movq	weight_none@GOTPCREL(%rip), %rsi
	movl	$192, %edx
	callq	memcpy@PLT
.Ltmp1288:
	.loc	0 1383 25 is_stmt 1             # x264_src/encoder/encoder.c:1383:25
	movl	$1, 15016(%r13)
.Ltmp1289:
	.loc	0 1384 12                       # x264_src/encoder/encoder.c:1384:12
	movl	14696(%r13), %eax
	.loc	0 1384 19 is_stmt 0             # x264_src/encoder/encoder.c:1384:19
	cmpl	$15, %eax
.Ltmp1290:
	.loc	0 1384 9                        # x264_src/encoder/encoder.c:1384:9
	jg	.LBB11_136
.Ltmp1291:
# %bb.135:                              # %if.then9.i462.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1385 9 is_stmt 1              # x264_src/encoder/encoder.c:1385:9
	incl	%eax
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movl	%eax, (%rcx)
.Ltmp1292:
.LBB11_136:                             # %if.end11.i458.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1386 18                       # x264_src/encoder/encoder.c:1386:18
	movq	$0, 14824(%r13)
	.loc	0 1387 26                       # x264_src/encoder/encoder.c:1387:26
	leaq	14712(%r13), %rdi
	.loc	0 1387 5 is_stmt 0              # x264_src/encoder/encoder.c:1387:5
	movq	%rbx, %rsi
	callq	x264_frame_unshift@PLT
.Ltmp1293:
	.loc	0 1543 24 is_stmt 1             # x264_src/encoder/encoder.c:1543:24
	movq	14680(%r13), %rax
	movl	$-1, %ebx
.Ltmp1294:
	.loc	0 1543 52 is_stmt 0             # x264_src/encoder/encoder.c:1543:52
	cmpl	$-127, 360(%rax)
.Ltmp1295:
	.loc	0 1543 21                       # x264_src/encoder/encoder.c:1543:21
	jl	.LBB11_141
	jmp	.LBB11_137
.Ltmp1296:
.LBB11_129:                             # %if.then286.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 0 21                          # x264_src/encoder/encoder.c:0:21
	movabsq	$4294967296, %rax               # imm = 0x100000000
.Ltmp1297:
	#DEBUG_VALUE: w <- [DW_OP_plus_uconst 96, DW_OP_deref] $rsp
	.loc	0 1556 13 is_stmt 1             # x264_src/encoder/encoder.c:1556:13
	movq	%rax, 128(%rsp)
	movl	$-1, 136(%rsp)
	leaq	96(%rsp), %rsi
.Ltmp1298:
	.loc	0 1556 13 is_stmt 0             # x264_src/encoder/encoder.c:1556:13
	movq	%r13, %rdi
	callq	*32896(%r13)
.Ltmp1299:
	.loc	0 1557 16 is_stmt 1             # x264_src/encoder/encoder.c:1557:16
	movq	14680(%r13), %rax
	.loc	0 1557 43 is_stmt 0             # x264_src/encoder/encoder.c:1557:43
	movl	$0, 352(%rax)
	.loc	0 1558 43 is_stmt 1             # x264_src/encoder/encoder.c:1558:43
	movq	$0, 272(%rsp)
	.loc	0 1558 27 is_stmt 0             # x264_src/encoder/encoder.c:1558:27
	movq	$0, 208(%rsp)
.Ltmp1300:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	.loc	0 0 27                          # x264_src/encoder/encoder.c:0:27
	movl	$-1, %ebx
.Ltmp1301:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11 is_stmt 1             # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, 14696(%r13)
.Ltmp1302:
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jge	.LBB11_138
	jmp	.LBB11_141
.Ltmp1303:
.LBB11_130:                             # %land.lhs.true144.if.end149_crit_edge
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- $r14
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2320 43 is_stmt 1             # x264_src/encoder/encoder.c:2320:43
	movq	14416(%r13), %rdi
	jmp	.LBB11_44
.Ltmp1304:
.LBB11_127:                             # %if.end257.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- undef
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i <- undef
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11                       # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, (%rbx)
.Ltmp1305:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- undef
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jge	.LBB11_134
.Ltmp1306:
.LBB11_128:                             # %x264_weighted_reference_duplicate.exit464.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1543 24 is_stmt 1             # x264_src/encoder/encoder.c:1543:24
	movq	14680(%r13), %rax
	movl	$-1, %ebx
	.loc	0 1543 52 is_stmt 0             # x264_src/encoder/encoder.c:1543:52
	cmpl	$-127, 360(%rax)
.Ltmp1307:
	.loc	0 1543 21                       # x264_src/encoder/encoder.c:1543:21
	jl	.LBB11_141
.Ltmp1308:
.LBB11_137:                             # %if.then265.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1545 28 is_stmt 1             # x264_src/encoder/encoder.c:1545:28
	movapd	320(%rax), %xmm0
	movaps	336(%rax), %xmm1
	movapd	352(%rax), %xmm2
	movaps	368(%rax), %xmm3
	movapd	%xmm2, 128(%rsp)
	movaps	%xmm3, 144(%rsp)
	movaps	%xmm1, 112(%rsp)
	movapd	%xmm0, 96(%rsp)
	.loc	0 1546 34                       # x264_src/encoder/encoder.c:1546:34
	decl	136(%rsp)
	leaq	96(%rsp), %rsi
	.loc	0 1547 21                       # x264_src/encoder/encoder.c:1547:21
	movq	%r13, %rdi
	callq	*32896(%r13)
.Ltmp1309:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11                       # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, 14696(%r13)
.Ltmp1310:
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jl	.LBB11_141
.Ltmp1311:
.LBB11_138:                             # %if.end.i486.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1373 16 is_stmt 1             # x264_src/encoder/encoder.c:1373:16
	movq	%r13, %rdi
	callq	x264_frame_pop_blank_unused@PLT
.Ltmp1312:
	movq	%rax, %rbx
	.loc	0 1376 18                       # x264_src/encoder/encoder.c:1376:18
	movq	14704(%r13), %rsi
	.loc	0 1376 17 is_stmt 0             # x264_src/encoder/encoder.c:1376:17
	movl	$15632, %edx                    # imm = 0x3D10
	movq	%rax, %rdi
	callq	memcpy@PLT
.Ltmp1313:
	.loc	0 1377 33 is_stmt 1             # x264_src/encoder/encoder.c:1377:33
	movl	$1, 15600(%rbx)
	.loc	0 1378 22                       # x264_src/encoder/encoder.c:1378:22
	movq	14704(%r13), %rax
	.loc	0 1378 20 is_stmt 0             # x264_src/encoder/encoder.c:1378:20
	movq	%rax, 3528(%rbx)
	.loc	0 1379 27 is_stmt 1             # x264_src/encoder/encoder.c:1379:27
	movl	$1, 3520(%rbx)
	movl	$512, %edi                      # imm = 0x200
	.loc	0 1380 13                       # x264_src/encoder/encoder.c:1380:13
	addq	14680(%r13), %rdi
	leaq	96(%rsp), %rsi
	.loc	0 1380 5 is_stmt 0              # x264_src/encoder/encoder.c:1380:5
	movl	$192, %edx
	callq	memcpy@PLT
.Ltmp1314:
	.loc	0 1383 25 is_stmt 1             # x264_src/encoder/encoder.c:1383:25
	movl	$1, 15016(%r13)
.Ltmp1315:
	.loc	0 1384 12                       # x264_src/encoder/encoder.c:1384:12
	movl	14696(%r13), %eax
	.loc	0 1384 19 is_stmt 0             # x264_src/encoder/encoder.c:1384:19
	cmpl	$15, %eax
.Ltmp1316:
	.loc	0 1384 9                        # x264_src/encoder/encoder.c:1384:9
	jg	.LBB11_140
.Ltmp1317:
.LBB11_139:                             # %if.then9.i500.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1385 9 is_stmt 1              # x264_src/encoder/encoder.c:1385:9
	incl	%eax
	movq	24(%rsp), %rcx                  # 8-byte Reload
	movl	%eax, (%rcx)
.Ltmp1318:
.LBB11_140:                             # %if.end11.i496.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1386 18                       # x264_src/encoder/encoder.c:1386:18
	movq	$0, 14824(%r13)
	.loc	0 1387 26                       # x264_src/encoder/encoder.c:1387:26
	leaq	14712(%r13), %rdi
	.loc	0 1387 5 is_stmt 0              # x264_src/encoder/encoder.c:1387:5
	movq	%rbx, %rsi
	callq	x264_frame_unshift@PLT
.Ltmp1319:
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$1, %ebx
.Ltmp1320:
.LBB11_141:                             # %x264_weighted_reference_duplicate.exit502.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: idx <- $ebx
	movl	52(%rsp), %r11d                 # 4-byte Reload
.Ltmp1321:
.LBB11_142:                             # %if.end309.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- $ebx
	.loc	0 1561 30 is_stmt 1             # x264_src/encoder/encoder.c:1561:30
	movl	%ebx, 26652(%r13)
.Ltmp1322:
	.loc	0 1565 30                       # x264_src/encoder/encoder.c:1565:30
	movl	14696(%r13), %eax
	.loc	0 1566 30                       # x264_src/encoder/encoder.c:1566:30
	movl	14856(%r13), %edx
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1323:
.LBB11_143:                             # %if.end311.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1565 25                       # x264_src/encoder/encoder.c:1565:25
	movl	%eax, 21416(%r13)
	.loc	0 1566 25                       # x264_src/encoder/encoder.c:1566:25
	movl	%edx, 21420(%r13)
.Ltmp1324:
.LBB11_144:                             # %x264_reference_build_list.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2394 9                        # x264_src/encoder/encoder.c:2394:9
	cmpl	$0, 8(%r13)
.Ltmp1325:
	.loc	0 2394 9 is_stmt 0              # x264_src/encoder/encoder.c:2394:9
	je	.LBB11_155
.Ltmp1326:
# %bb.145:                              # %for.cond.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 2396 27 is_stmt 1             # x264_src/encoder/encoder.c:2396:27
	cmpl	$0, 4(%r13)
.Ltmp1327:
	.loc	0 2396 9 is_stmt 0              # x264_src/encoder/encoder.c:2396:9
	jle	.LBB11_148
.Ltmp1328:
# %bb.146:                              # %for.body.lr.ph
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%eax, %eax
.Ltmp1329:
	.p2align	4, 0x90
.LBB11_147:                             # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- $rax
	.loc	0 2398 23 is_stmt 1             # x264_src/encoder/encoder.c:2398:23
	movq	704(%r13,%rax,8), %rdx
	.loc	0 2398 63 is_stmt 0             # x264_src/encoder/encoder.c:2398:63
	movq	1784(%rdx), %rsi
	.loc	0 2398 94                       # x264_src/encoder/encoder.c:2398:94
	movslq	1776(%rdx), %rdi
.Ltmp1330:
	#DEBUG_VALUE: bs_init:p_data <- $rsi
	#DEBUG_VALUE: bs_init:i_data <- undef
	#DEBUG_VALUE: bs_init:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $rsi
	.loc	4 82 48 is_stmt 1               # x264_src/common/bs.h:82:48
	movq	%rsi, %r8
	.loc	4 83 35                         # x264_src/common/bs.h:83:35
	addq	%rsi, %rdi
	#DEBUG_VALUE: endian_fix32:x <- undef
	.loc	4 86 31                         # x264_src/common/bs.h:86:31
	leal	(,%rsi,8), %ecx
                                        # kill: def $esi killed $esi killed $rsi
	.loc	4 82 48                         # x264_src/common/bs.h:82:48
	andl	$3, %esi
.Ltmp1331:
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $r8
	#DEBUG_VALUE: bs_init:p_data <- $r8
	andq	$-4, %r8
.Ltmp1332:
	.loc	4 82 29 is_stmt 0               # x264_src/common/bs.h:82:29
	movq	%r8, 1792(%rdx)
	.loc	4 82 16                         # x264_src/common/bs.h:82:16
	movq	%r8, 1800(%rdx)
	.loc	4 83 16 is_stmt 1               # x264_src/common/bs.h:83:16
	movq	%rdi, 1808(%rdx)
	.loc	4 84 18                         # x264_src/common/bs.h:84:18
	shll	$3, %esi
	movl	$64, %edi
	subl	%esi, %edi
	.loc	4 84 16 is_stmt 0               # x264_src/common/bs.h:84:16
	movl	%edi, 1824(%rdx)
	.loc	4 85 33 is_stmt 1               # x264_src/common/bs.h:85:33
	movl	(%r8), %esi
.Ltmp1333:
	#DEBUG_VALUE: endian_fix32:x <- $esi
	.loc	28 264 58                       # x264_src/common/osdep.h:264:58
	bswapl	%esi
.Ltmp1334:
	.loc	4 86 17                         # x264_src/common/bs.h:86:17
	andb	$24, %cl
	addb	$32, %cl
	negb	%cl
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rsi
	movq	%rsi, 1816(%rdx)
.Ltmp1335:
	.loc	0 2399 13                       # x264_src/encoder/encoder.c:2399:13
	movq	704(%r13,%rax,8), %rcx
	.loc	0 2399 37 is_stmt 0             # x264_src/encoder/encoder.c:2399:37
	movl	$0, 1760(%rcx)
.Ltmp1336:
	.loc	0 2396 50 is_stmt 1             # x264_src/encoder/encoder.c:2396:50
	incq	%rax
.Ltmp1337:
	#DEBUG_VALUE: i <- $rax
	.loc	0 2396 38 is_stmt 0             # x264_src/encoder/encoder.c:2396:38
	movslq	4(%r13), %rcx
	.loc	0 2396 27                       # x264_src/encoder/encoder.c:2396:27
	cmpq	%rcx, %rax
.Ltmp1338:
	.loc	0 2396 9                        # x264_src/encoder/encoder.c:2396:9
	jl	.LBB11_147
.Ltmp1339:
.LBB11_148:                             # %if.end288
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2408 9 is_stmt 1              # x264_src/encoder/encoder.c:2408:9
	cmpl	$0, 632(%r13)
.Ltmp1340:
	.loc	0 2408 9 is_stmt 0              # x264_src/encoder/encoder.c:2408:9
	je	.LBB11_156
.Ltmp1341:
.LBB11_149:                             # %if.then291
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2412 19 is_stmt 1             # x264_src/encoder/encoder.c:2412:19
	movl	7248(%r13), %ecx
	movl	$7, %eax
	cmpq	$2, %rcx
.Ltmp1342:
	.loc	0 2412 13 is_stmt 0             # x264_src/encoder/encoder.c:2412:13
	ja	.LBB11_151
.Ltmp1343:
# %bb.150:                              # %switch.lookup
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	movq	.Lswitch.table.x264_encoder_encode(,%rcx,8), %rax
.Ltmp1344:
.LBB11_151:                             # %if.end309
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: pic_type <- $rax
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 9
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%r13), %rcx
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%r13), %rdx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rdx,%rdx,2), %rdx
	movabsq	$38654705664, %rsi              # imm = 0x900000000
.Ltmp1345:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rsi, (%rcx,%rdx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rcx,%rdx,8)
.Ltmp1346:
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %esi
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %esi
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %esi
	subl	1824(%r13), %esi
	leal	64(%rsi), %edi
.Ltmp1347:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %esi
	testl	%edi, %edi
	cmovnsl	%edi, %esi
	sarl	$3, %esi
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%esi, %rsi
	addq	1784(%r13), %rsi
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rsi, 16(%rcx,%rdx,8)
.Ltmp1348:
	#DEBUG_VALUE: bs_write:s <- undef
	#DEBUG_VALUE: bs_write:i_count <- 3
	#DEBUG_VALUE: bs_write:i_bits <- $rax
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r13), %rcx
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	leaq	(%rax,%rcx,8), %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r13)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	movl	1824(%r13), %ecx
	leal	-3(%rcx), %eax
.Ltmp1349:
	movl	%eax, 1824(%r13)
.Ltmp1350:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$35, %ecx
.Ltmp1351:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB11_153
.Ltmp1352:
# %bb.152:                              # %if.then.i1028
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 3
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp1353:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp1354:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	1800(%r13), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	1824(%r13), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, 1800(%r13)
.Ltmp1355:
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r13), %rdx
.Ltmp1356:
.LBB11_153:                             # %bs_write.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 1
	#DEBUG_VALUE: bs_rbsp_trailing:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	leaq	1(,%rdx,2), %rsi
	movq	%rsi, 1816(%r13)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
.Ltmp1357:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp1358:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB11_157
.Ltmp1359:
# %bb.154:                              # %bs_write1.exit.thread.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 1
	#DEBUG_VALUE: endian_fix32:x <- $esi
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%esi
.Ltmp1360:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r13), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%esi, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	movq	1800(%r13), %rdx
	addq	$4, %rdx
	movq	%rdx, 1800(%r13)
.Ltmp1361:
	#DEBUG_VALUE: bs_write:i_count <- 0
	#DEBUG_VALUE: bs_write:i_bits <- 0
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	.loc	4 118 19                        # x264_src/common/bs.h:118:19
	movl	$64, 1824(%r13)
	movl	$64, %eax
	.loc	4 119 13                        # x264_src/common/bs.h:119:13
	jmp	.LBB11_159
.Ltmp1362:
.LBB11_155:                             # %if.else279
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2404 37                       # x264_src/encoder/encoder.c:2404:37
	movq	1784(%r13), %rax
	.loc	0 2404 57 is_stmt 0             # x264_src/encoder/encoder.c:2404:57
	movslq	1776(%r13), %rdx
.Ltmp1363:
	#DEBUG_VALUE: bs_init:p_data <- $rax
	#DEBUG_VALUE: bs_init:i_data <- undef
	#DEBUG_VALUE: bs_init:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $rax
	.loc	4 82 48 is_stmt 1               # x264_src/common/bs.h:82:48
	movq	%rax, %rsi
	.loc	4 83 35                         # x264_src/common/bs.h:83:35
	addq	%rax, %rdx
	#DEBUG_VALUE: endian_fix32:x <- undef
	.loc	4 86 31                         # x264_src/common/bs.h:86:31
	leal	(,%rax,8), %ecx
                                        # kill: def $eax killed $eax killed $rax
	.loc	4 82 48                         # x264_src/common/bs.h:82:48
	andl	$3, %eax
.Ltmp1364:
	#DEBUG_VALUE: bs_init:offset <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 3, DW_OP_and, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: bs_init:p_data <- $rsi
	andq	$-4, %rsi
.Ltmp1365:
	.loc	4 82 29 is_stmt 0               # x264_src/common/bs.h:82:29
	movq	%rsi, 1792(%r13)
	.loc	4 82 16                         # x264_src/common/bs.h:82:16
	movq	%rsi, 1800(%r13)
	.loc	4 83 16 is_stmt 1               # x264_src/common/bs.h:83:16
	movq	%rdx, 1808(%r13)
	.loc	4 84 18                         # x264_src/common/bs.h:84:18
	shll	$3, %eax
	movl	$64, %edx
	subl	%eax, %edx
	.loc	4 84 16 is_stmt 0               # x264_src/common/bs.h:84:16
	movl	%edx, 1824(%r13)
	.loc	4 85 33 is_stmt 1               # x264_src/common/bs.h:85:33
	movl	(%rsi), %eax
.Ltmp1366:
	#DEBUG_VALUE: endian_fix32:x <- $eax
	.loc	28 264 58                       # x264_src/common/osdep.h:264:58
	bswapl	%eax
.Ltmp1367:
	.loc	4 86 17                         # x264_src/common/bs.h:86:17
	andb	$24, %cl
	addb	$32, %cl
	negb	%cl
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rax
	movq	%rax, 1816(%r13)
.Ltmp1368:
	.loc	0 2405 22                       # x264_src/encoder/encoder.c:2405:22
	movl	$0, 1760(%r13)
.Ltmp1369:
	.loc	0 2408 9                        # x264_src/encoder/encoder.c:2408:9
	cmpl	$0, 632(%r13)
.Ltmp1370:
	.loc	0 2408 9 is_stmt 0              # x264_src/encoder/encoder.c:2408:9
	jne	.LBB11_149
.Ltmp1371:
.LBB11_156:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	$5, %ebp
.Ltmp1372:
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2429 19 is_stmt 1             # x264_src/encoder/encoder.c:2429:19
	movl	%r14d, 1856(%r13)
	.loc	0 2430 22                       # x264_src/encoder/encoder.c:2430:22
	movl	%r11d, 1860(%r13)
.Ltmp1373:
	.loc	0 2432 9                        # x264_src/encoder/encoder.c:2432:9
	cmpl	$0, 96(%r13)
.Ltmp1374:
	.loc	0 2432 9 is_stmt 0              # x264_src/encoder/encoder.c:2432:9
	jne	.LBB11_164
	jmp	.LBB11_172
.Ltmp1375:
.LBB11_157:                             # %bs_write1.exit.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- undef
	#DEBUG_VALUE: bs_write:i_bits <- 0
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	movl	%eax, %ecx
	andb	$7, %cl
	shlq	%cl, %rsi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rsi, 1816(%r13)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	andl	$-8, %eax
	movl	%eax, 1824(%r13)
.Ltmp1376:
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movq	1800(%r13), %rdx
.Ltmp1377:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp1378:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB11_159
.Ltmp1379:
# %bb.158:                              # %if.then.i8.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	#DEBUG_VALUE: endian_fix:x <- undef
	#DEBUG_VALUE: endian_fix64:x <- undef
	.loc	28 277 32 is_stmt 1             # x264_src/common/osdep.h:277:32
	bswapq	%rsi
	movl	%eax, %ecx
	shrq	%cl, %rsi
.Ltmp1380:
	.loc	4 124 25                        # x264_src/common/bs.h:124:25
	movl	%esi, (%rdx)
	.loc	4 126 23                        # x264_src/common/bs.h:126:23
	movl	1824(%r13), %eax
	addl	$32, %eax
	movl	%eax, 1824(%r13)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	movq	1800(%r13), %rdx
	addq	$4, %rdx
	movq	%rdx, 1800(%r13)
.Ltmp1381:
.LBB11_159:                             # %bs_rbsp_trailing.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_nal_end:h <- undef
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%r13), %rcx
.Ltmp1382:
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 1792, DW_OP_stack_value] undef
	.loc	4 90 23                         # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edx
.Ltmp1383:
	.loc	0 1266 42                       # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%r13), %rsi
.Ltmp1384:
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	%eax, %edx
	leal	64(%rdx), %eax
.Ltmp1385:
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%eax, %eax
	cmovnsl	%eax, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rsi,%rsi,2), %rax
.Ltmp1386:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%r13), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rcx,%rax,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rcx,%rax,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%r13), %eax
.Ltmp1387:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- undef
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%r13), %ecx
.Ltmp1388:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%eax
	movl	%eax, 1760(%r13)
.Ltmp1389:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%ecx, %eax
.Ltmp1390:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB11_161
.Ltmp1391:
# %bb.160:                              # %bs_rbsp_trailing.exit.cleanup336.thread_crit_edge
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2426 28 is_stmt 1             # x264_src/encoder/encoder.c:2426:28
	movq	1768(%r13), %rbx
.Ltmp1392:
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB11_163
.Ltmp1393:
.LBB11_161:                             # %if.then.i.i1054
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1253 63                       # x264_src/encoder/encoder.c:1253:63
	shll	$4, %ecx
	leal	(%rcx,%rcx,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp1394:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp1395:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB11_19
.Ltmp1396:
# %bb.162:                              # %cleanup.thread.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %rbx
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%r13), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%r13), %rax
.Ltmp1397:
	#DEBUG_VALUE: new_out <- $rbx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rbx, %rdi
	callq	memcpy@PLT
.Ltmp1398:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%r13), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp1399:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%rbx, 1768(%r13)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%r13)
.Ltmp1400:
	.loc	0 2426 39                       # x264_src/encoder/encoder.c:2426:39
	movl	1760(%r13), %eax
	movl	52(%rsp), %r11d                 # 4-byte Reload
.Ltmp1401:
.LBB11_163:                             # %cleanup336.thread
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2426 44 is_stmt 0             # x264_src/encoder/encoder.c:2426:44
	decl	%eax
	.loc	0 2426 21                       # x264_src/encoder/encoder.c:2426:21
	cltq
	.loc	0 2426 48                       # x264_src/encoder/encoder.c:2426:48
	leaq	(%rax,%rax,2), %rcx
	.loc	0 2426 77                       # x264_src/encoder/encoder.c:2426:77
	cmpl	$0, 640(%r13)
	.loc	0 2426 48                       # x264_src/encoder/encoder.c:2426:48
	movl	8(%rbx,%rcx,8), %ebp
.Ltmp1402:
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	.loc	0 2426 77                       # x264_src/encoder/encoder.c:2426:77
	setne	%cl
	testl	%eax, %eax
	setne	%al
	.loc	0 2426 95                       # x264_src/encoder/encoder.c:2426:95
	andb	%cl, %al
	.loc	0 2426 74                       # x264_src/encoder/encoder.c:2426:74
	movzbl	%al, %eax
	subl	%eax, %ebp
	.loc	0 2426 18                       # x264_src/encoder/encoder.c:2426:18
	addl	$10, %ebp
.Ltmp1403:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 0 18                          # x264_src/encoder/encoder.c:0:18
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1404:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2429 19 is_stmt 1             # x264_src/encoder/encoder.c:2429:19
	movl	%r14d, 1856(%r13)
	.loc	0 2430 22                       # x264_src/encoder/encoder.c:2430:22
	movl	%r11d, 1860(%r13)
.Ltmp1405:
	.loc	0 2432 9                        # x264_src/encoder/encoder.c:2432:9
	cmpl	$0, 96(%r13)
.Ltmp1406:
	.loc	0 2432 9 is_stmt 0              # x264_src/encoder/encoder.c:2432:9
	je	.LBB11_172
.Ltmp1407:
.LBB11_164:                             # %if.then344
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2434 13 is_stmt 1             # x264_src/encoder/encoder.c:2434:13
	movq	14680(%r13), %rax
	movl	4(%rax), %eax
	leal	-1(%rax), %ecx
	cmpl	$2, %ecx
	jae	.LBB11_166
.Ltmp1408:
# %bb.165:                              # %if.then352
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2436 16                       # x264_src/encoder/encoder.c:2436:16
	movq	14688(%r13), %rax
	.loc	0 2436 41 is_stmt 0             # x264_src/encoder/encoder.c:2436:41
	movl	$0, 15624(%rax)
	.loc	0 2437 39 is_stmt 1             # x264_src/encoder/encoder.c:2437:39
	movl	$0, 1892(%r13)
	.loc	0 2440 42                       # x264_src/encoder/encoder.c:2440:42
	movq	3200(%r13), %rax
	.loc	0 2440 39 is_stmt 0             # x264_src/encoder/encoder.c:2440:39
	xorps	%xmm0, %xmm0
	cvtsi2ssl	1084(%rax), %xmm0
	.loc	0 2440 16                       # x264_src/encoder/encoder.c:2440:16
	movq	14688(%r13), %rax
	.loc	0 2440 37                       # x264_src/encoder/encoder.c:2440:37
	movss	%xmm0, 15612(%rax)
	.loc	0 2441 9 is_stmt 1              # x264_src/encoder/encoder.c:2441:9
	jmp	.LBB11_172
.Ltmp1409:
.LBB11_166:                             # %if.then344
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2434 13                       # x264_src/encoder/encoder.c:2434:13
	cmpl	$3, %eax
	jne	.LBB11_172
.Ltmp1410:
# %bb.167:                              # %if.then362
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2444 31                       # x264_src/encoder/encoder.c:2444:31
	movq	14688(%r13), %rcx
	.loc	0 2444 37 is_stmt 0             # x264_src/encoder/encoder.c:2444:37
	movl	(%rcx), %edx
	.loc	0 2444 45                       # x264_src/encoder/encoder.c:2444:45
	movq	14704(%r13), %rsi
	.loc	0 2444 43                       # x264_src/encoder/encoder.c:2444:43
	subl	(%rsi), %edx
.Ltmp1411:
	#DEBUG_VALUE: pocdiff <- undef
	.loc	0 2445 31 is_stmt 1             # x264_src/encoder/encoder.c:2445:31
	movq	3200(%r13), %rax
	xorps	%xmm0, %xmm0
	cvtsi2ssl	1084(%rax), %xmm0
	.loc	0 2444 64                       # x264_src/encoder/encoder.c:2444:64
	movl	%edx, %eax
	.loc	0 2445 31                       # x264_src/encoder/encoder.c:2445:31
	addss	.LCPI11_0(%rip), %xmm0
	.loc	0 2444 64                       # x264_src/encoder/encoder.c:2444:64
	shrl	$31, %eax
	.loc	0 2445 31                       # x264_src/encoder/encoder.c:2445:31
	xorps	%xmm1, %xmm1
	cvtsi2ssl	84(%r13), %xmm1
	.loc	0 2444 64                       # x264_src/encoder/encoder.c:2444:64
	addl	%edx, %eax
	.loc	0 2445 31                       # x264_src/encoder/encoder.c:2445:31
	divss	%xmm1, %xmm0
	maxss	.LCPI11_1(%rip), %xmm0
.Ltmp1412:
	#DEBUG_VALUE: increment <- $xmm0
	.loc	0 2444 64                       # x264_src/encoder/encoder.c:2444:64
	sarl	%eax
.Ltmp1413:
	#DEBUG_VALUE: pocdiff <- $eax
	.loc	0 2446 52                       # x264_src/encoder/encoder.c:2446:52
	movss	15612(%rsi), %xmm1              # xmm1 = mem[0],zero,zero,zero
	.loc	0 2446 37 is_stmt 0             # x264_src/encoder/encoder.c:2446:37
	movss	%xmm1, 15612(%rcx)
	.loc	0 2447 16 is_stmt 1             # x264_src/encoder/encoder.c:2447:16
	movq	14688(%r13), %rcx
	.loc	0 2447 43 is_stmt 0             # x264_src/encoder/encoder.c:2447:43
	movq	14704(%r13), %rdx
	movl	15624(%rdx), %edx
	.loc	0 2447 75                       # x264_src/encoder/encoder.c:2447:75
	addl	%eax, %edx
	.loc	0 2447 41                       # x264_src/encoder/encoder.c:2447:41
	movl	%edx, 15624(%rcx)
.Ltmp1414:
	.loc	0 2448 20 is_stmt 1             # x264_src/encoder/encoder.c:2448:20
	movq	14688(%r13), %rcx
	.loc	0 2448 26 is_stmt 0             # x264_src/encoder/encoder.c:2448:26
	movl	15624(%rcx), %edx
	.loc	0 2448 45                       # x264_src/encoder/encoder.c:2448:45
	cmpl	84(%r13), %edx
	.loc	0 2448 70                       # x264_src/encoder/encoder.c:2448:70
	jge	.LBB11_170
.Ltmp1415:
# %bb.168:                              # %lor.lhs.false407
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: pocdiff <- $eax
	#DEBUG_VALUE: increment <- $xmm0
	.loc	0 2449 18 is_stmt 1             # x264_src/encoder/encoder.c:2449:18
	cmpl	$0, 1892(%r13)
	.loc	0 2449 44 is_stmt 0             # x264_src/encoder/encoder.c:2449:44
	je	.LBB11_171
.Ltmp1416:
# %bb.169:                              # %land.lhs.true410
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: pocdiff <- $eax
	#DEBUG_VALUE: increment <- $xmm0
	.loc	0 2449 56                       # x264_src/encoder/encoder.c:2449:56
	movss	15612(%rcx), %xmm1              # xmm1 = mem[0],zero,zero,zero
	.loc	0 2449 47                       # x264_src/encoder/encoder.c:2449:47
	cvtss2sd	%xmm1, %xmm1
	.loc	0 2449 71                       # x264_src/encoder/encoder.c:2449:71
	addsd	.LCPI11_2(%rip), %xmm1
	.loc	0 2449 83                       # x264_src/encoder/encoder.c:2449:83
	movq	3200(%r13), %rdx
	.loc	0 2449 80                       # x264_src/encoder/encoder.c:2449:80
	cvtsi2sdl	1084(%rdx), %xmm2
	.loc	0 2449 77                       # x264_src/encoder/encoder.c:2449:77
	ucomisd	%xmm2, %xmm1
.Ltmp1417:
	.loc	0 2448 17 is_stmt 1             # x264_src/encoder/encoder.c:2448:17
	jb	.LBB11_171
.Ltmp1418:
.LBB11_170:                             # %if.then420
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: pocdiff <- $eax
	#DEBUG_VALUE: increment <- $xmm0
	.loc	0 2451 41                       # x264_src/encoder/encoder.c:2451:41
	movl	$0, 15612(%rcx)
	.loc	0 2452 20                       # x264_src/encoder/encoder.c:2452:20
	movq	14688(%r13), %rcx
	.loc	0 2452 45 is_stmt 0             # x264_src/encoder/encoder.c:2452:45
	movl	$0, 15624(%rcx)
	.loc	0 2453 43 is_stmt 1             # x264_src/encoder/encoder.c:2453:43
	movl	$0, 1892(%r13)
	.loc	0 2454 20                       # x264_src/encoder/encoder.c:2454:20
	movq	14680(%r13), %rcx
	.loc	0 2454 37 is_stmt 0             # x264_src/encoder/encoder.c:2454:37
	movl	$1, 80(%rcx)
.Ltmp1419:
	.loc	0 2456 43 is_stmt 1             # x264_src/encoder/encoder.c:2456:43
	movq	14688(%r13), %rcx
.Ltmp1420:
.LBB11_171:                             # %if.end428
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: pocdiff <- $eax
	#DEBUG_VALUE: increment <- $xmm0
	.loc	0 2456 49 is_stmt 0             # x264_src/encoder/encoder.c:2456:49
	movss	15612(%rcx), %xmm1              # xmm1 = mem[0],zero,zero,zero
	.loc	0 2456 40                       # x264_src/encoder/encoder.c:2456:40
	cvtss2sd	%xmm1, %xmm1
	movsd	.LCPI11_2(%rip), %xmm2          # xmm2 = [5.0E-1,0.0E+0]
	.loc	0 2456 63                       # x264_src/encoder/encoder.c:2456:63
	addsd	%xmm2, %xmm1
	.loc	0 2456 40                       # x264_src/encoder/encoder.c:2456:40
	cvttsd2si	%xmm1, %edx
	.loc	0 2456 38                       # x264_src/encoder/encoder.c:2456:38
	movl	%edx, 15616(%rcx)
	.loc	0 2457 52 is_stmt 1             # x264_src/encoder/encoder.c:2457:52
	xorps	%xmm1, %xmm1
	cvtsi2ss	%eax, %xmm1
	.loc	0 2457 37 is_stmt 0             # x264_src/encoder/encoder.c:2457:37
	mulss	%xmm1, %xmm0
.Ltmp1421:
	.loc	0 2457 16                       # x264_src/encoder/encoder.c:2457:16
	movq	14688(%r13), %rax
.Ltmp1422:
	.loc	0 2457 37                       # x264_src/encoder/encoder.c:2457:37
	addss	15612(%rax), %xmm0
	movss	%xmm0, 15612(%rax)
	.loc	0 2458 41 is_stmt 1             # x264_src/encoder/encoder.c:2458:41
	movq	14688(%r13), %rax
	.loc	0 2458 47 is_stmt 0             # x264_src/encoder/encoder.c:2458:47
	movss	15612(%rax), %xmm0              # xmm0 = mem[0],zero,zero,zero
	.loc	0 2458 38                       # x264_src/encoder/encoder.c:2458:38
	cvtss2sd	%xmm0, %xmm0
	.loc	0 2458 61                       # x264_src/encoder/encoder.c:2458:61
	addsd	%xmm2, %xmm0
	.loc	0 2458 38                       # x264_src/encoder/encoder.c:2458:38
	cvttsd2si	%xmm0, %ecx
	.loc	0 2458 36                       # x264_src/encoder/encoder.c:2458:36
	movl	%ecx, 15620(%rax)
.Ltmp1423:
.LBB11_172:                             # %if.end447
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2462 12 is_stmt 1             # x264_src/encoder/encoder.c:2462:12
	movq	14680(%r13), %rax
	.loc	0 2462 9 is_stmt 0              # x264_src/encoder/encoder.c:2462:9
	cmpl	$0, 80(%rax)
.Ltmp1424:
	.loc	0 2462 9                        # x264_src/encoder/encoder.c:2462:9
	je	.LBB11_176
.Ltmp1425:
# %bb.173:                              # %if.then451
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2465 13 is_stmt 1             # x264_src/encoder/encoder.c:2465:13
	cmpl	$0, 636(%r13)
.Ltmp1426:
	.loc	0 2465 13 is_stmt 0             # x264_src/encoder/encoder.c:2465:13
	je	.LBB11_177
.Ltmp1427:
# %bb.174:                              # %if.then454
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 7
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 3
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%r13), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%r13), %rcx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
	movabsq	$30064771075, %rdx              # imm = 0x700000003
.Ltmp1428:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rdx, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
.Ltmp1429:
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%r13), %edx
.Ltmp1430:
	.loc	0 1245 57 is_stmt 1             # x264_src/encoder/encoder.c:1245:57
	leaq	1792(%r13), %r14
.Ltmp1431:
	#DEBUG_VALUE: bs_pos:s <- $r14
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	leal	64(%rdx), %esi
.Ltmp1432:
	.loc	0 1245 62                       # x264_src/encoder/encoder.c:1245:62
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	sarl	$3, %edx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%edx, %rdx
	addq	1784(%r13), %rdx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rdx, 16(%rax,%rcx,8)
.Ltmp1433:
	.loc	0 2469 44 is_stmt 1             # x264_src/encoder/encoder.c:2469:44
	movq	3200(%r13), %rsi
	.loc	0 2469 13 is_stmt 0             # x264_src/encoder/encoder.c:2469:13
	movq	%r14, %rdi
	callq	x264_sps_write@PLT
.Ltmp1434:
	#DEBUG_VALUE: x264_nal_end:h <- undef
	.loc	0 1266 31 is_stmt 1             # x264_src/encoder/encoder.c:1266:31
	movq	1768(%r13), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%r13), %rcx
.Ltmp1435:
	#DEBUG_VALUE: bs_pos:s <- $r14
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%r13), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%r13), %edx
	leal	64(%rdx), %esi
.Ltmp1436:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp1437:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%r13), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%r13), %eax
.Ltmp1438:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- undef
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%r13), %ecx
.Ltmp1439:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%eax
	movl	%eax, 1760(%r13)
.Ltmp1440:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%ecx, %eax
.Ltmp1441:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB11_199
.Ltmp1442:
# %bb.175:                              # %if.then454.if.end461_crit_edge
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%r15, 56(%rsp)                  # 8-byte Spill
.Ltmp1443:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	0 2472 32 is_stmt 1             # x264_src/encoder/encoder.c:2472:32
	movq	1768(%r13), %rbx
.Ltmp1444:
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB11_201
.Ltmp1445:
.LBB11_176:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp1446:
	.loc	0 2462 9 is_stmt 1              # x264_src/encoder/encoder.c:2462:9
	jmp	.LBB11_179
.Ltmp1447:
.LBB11_177:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp1448:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2495 29 is_stmt 1             # x264_src/encoder/encoder.c:2495:29
	cmpl	$1, 4(%rax)
.Ltmp1449:
	.loc	0 2495 13 is_stmt 0             # x264_src/encoder/encoder.c:2495:13
	je	.LBB11_179
.Ltmp1450:
.LBB11_178:                             # %if.then534
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2497 36 is_stmt 1             # x264_src/encoder/encoder.c:2497:36
	movq	3200(%r13), %rax
	movl	1084(%rax), %eax
	movl	84(%r13), %ecx
	leal	-1(%rax), %edx
	cmpl	%ecx, %eax
	cmovgl	%ecx, %edx
	.loc	0 2497 94 is_stmt 0             # x264_src/encoder/encoder.c:2497:94
	addl	100(%r13), %edx
.Ltmp1451:
	#DEBUG_VALUE: time_to_recovery <- $edx
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 6
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%r13), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%r13), %rcx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
	movabsq	$25769803776, %rsi              # imm = 0x600000000
.Ltmp1452:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rsi, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
	.loc	0 1245 57                       # x264_src/encoder/encoder.c:1245:57
	leaq	1792(%r13), %rsi
.Ltmp1453:
	#DEBUG_VALUE: bs_pos:s <- $rsi
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %edi
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edi
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edi
	subl	1824(%r13), %edi
	leal	64(%rdi), %r8d
.Ltmp1454:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %edi
	testl	%r8d, %r8d
	cmovnsl	%r8d, %edi
	sarl	$3, %edi
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%edi, %rdi
	addq	1784(%r13), %rdi
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rdi, 16(%rax,%rcx,8)
.Ltmp1455:
	.loc	0 2499 13 is_stmt 1             # x264_src/encoder/encoder.c:2499:13
	movq	%r13, %rdi
	callq	x264_sei_recovery_point_write@PLT
.Ltmp1456:
	.loc	0 2500 13                       # x264_src/encoder/encoder.c:2500:13
	movq	%r13, %rdi
	callq	x264_nal_end
.Ltmp1457:
	.loc	0 2501 32                       # x264_src/encoder/encoder.c:2501:32
	movq	1768(%r13), %rax
	.loc	0 2501 43 is_stmt 0             # x264_src/encoder/encoder.c:2501:43
	movslq	1760(%r13), %rcx
	cmpq	$1, %rcx
	setne	%dl
	.loc	0 2501 81                       # x264_src/encoder/encoder.c:2501:81
	cmpl	$0, 640(%r13)
	setne	%sil
	leaq	(%rcx,%rcx,2), %rcx
	.loc	0 2501 62                       # x264_src/encoder/encoder.c:2501:62
	addl	-16(%rax,%rcx,8), %ebp
.Ltmp1458:
	.loc	0 2501 99                       # x264_src/encoder/encoder.c:2501:99
	andb	%dl, %sil
	.loc	0 2501 22                       # x264_src/encoder/encoder.c:2501:22
	movzbl	%sil, %eax
	subl	%eax, %ebp
	addl	$5, %ebp
.Ltmp1459:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
.LBB11_179:                             # %if.end578
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2506 12 is_stmt 1             # x264_src/encoder/encoder.c:2506:12
	movq	3200(%r13), %rax
	.loc	0 2506 9 is_stmt 0              # x264_src/encoder/encoder.c:2506:9
	cmpl	$0, 1260(%rax)
	.loc	0 2506 42                       # x264_src/encoder/encoder.c:2506:42
	jne	.LBB11_181
.Ltmp1460:
# %bb.180:                              # %lor.lhs.false581
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2506 45                       # x264_src/encoder/encoder.c:2506:45
	cmpl	$0, 1204(%rax)
.Ltmp1461:
	.loc	0 2506 9                        # x264_src/encoder/encoder.c:2506:9
	je	.LBB11_186
.Ltmp1462:
.LBB11_181:                             # %if.then585
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 6
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%r13), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%r13), %rcx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
	movabsq	$25769803776, %rdx              # imm = 0x600000000
.Ltmp1463:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rdx, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
	.loc	0 1245 57                       # x264_src/encoder/encoder.c:1245:57
	leaq	1792(%r13), %rsi
.Ltmp1464:
	#DEBUG_VALUE: bs_pos:s <- $rsi
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%r13), %edx
	leal	64(%rdx), %edi
.Ltmp1465:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %edx
	testl	%edi, %edi
	cmovnsl	%edi, %edx
	sarl	$3, %edx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%edx, %rdx
	addq	1784(%r13), %rdx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rdx, 16(%rax,%rcx,8)
.Ltmp1466:
	.loc	0 2509 9 is_stmt 1              # x264_src/encoder/encoder.c:2509:9
	movq	%r13, %rdi
	callq	x264_sei_pic_timing_write@PLT
.Ltmp1467:
	#DEBUG_VALUE: x264_nal_end:h <- undef
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%r13), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%r13), %rcx
.Ltmp1468:
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%r13), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%r13), %edx
	leal	64(%rdx), %esi
.Ltmp1469:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp1470:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%r13), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%r13), %eax
.Ltmp1471:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- undef
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%r13), %ecx
.Ltmp1472:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%eax
	movl	%eax, 1760(%r13)
.Ltmp1473:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%ecx, %eax
.Ltmp1474:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB11_183
.Ltmp1475:
# %bb.182:                              # %if.then585.if.end591_crit_edge
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2512 28 is_stmt 1             # x264_src/encoder/encoder.c:2512:28
	movq	1768(%r13), %rbx
.Ltmp1476:
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB11_185
.Ltmp1477:
.LBB11_183:                             # %if.then.i.i1218
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1253 63                       # x264_src/encoder/encoder.c:1253:63
	shll	$4, %ecx
	leal	(%rcx,%rcx,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp1478:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp1479:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB11_19
.Ltmp1480:
# %bb.184:                              # %cleanup.thread.i.i1222
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %rbx
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%r13), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%r13), %rax
.Ltmp1481:
	#DEBUG_VALUE: new_out <- $rbx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rbx, %rdi
	callq	memcpy@PLT
.Ltmp1482:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%r13), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp1483:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%rbx, 1768(%r13)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%r13)
.Ltmp1484:
	.loc	0 2512 39                       # x264_src/encoder/encoder.c:2512:39
	movl	1760(%r13), %eax
.Ltmp1485:
.LBB11_185:                             # %if.end591
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2512 44 is_stmt 0             # x264_src/encoder/encoder.c:2512:44
	decl	%eax
	.loc	0 2512 21                       # x264_src/encoder/encoder.c:2512:21
	cltq
	.loc	0 2512 48                       # x264_src/encoder/encoder.c:2512:48
	leaq	(%rax,%rax,2), %rcx
	.loc	0 2512 77                       # x264_src/encoder/encoder.c:2512:77
	cmpl	$0, 640(%r13)
	setne	%dl
	.loc	0 2512 95                       # x264_src/encoder/encoder.c:2512:95
	testl	%eax, %eax
	setne	%al
	.loc	0 2512 58                       # x264_src/encoder/encoder.c:2512:58
	addl	8(%rbx,%rcx,8), %ebp
.Ltmp1486:
	.loc	0 2512 95                       # x264_src/encoder/encoder.c:2512:95
	andb	%dl, %al
	.loc	0 2512 18                       # x264_src/encoder/encoder.c:2512:18
	movzbl	%al, %eax
	subl	%eax, %ebp
	addl	$5, %ebp
.Ltmp1487:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 0 18                          # x264_src/encoder/encoder.c:0:18
	movq	24(%rsp), %rbx                  # 8-byte Reload
.Ltmp1488:
.LBB11_186:                             # %if.end613
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2517 35 is_stmt 1             # x264_src/encoder/encoder.c:2517:35
	movq	14680(%r13), %rax
	.loc	0 2517 41 is_stmt 0             # x264_src/encoder/encoder.c:2517:41
	movl	8(%rax), %esi
	.loc	0 2517 60                       # x264_src/encoder/encoder.c:2517:60
	shll	$3, %ebp
.Ltmp1489:
	.loc	0 2517 5                        # x264_src/encoder/encoder.c:2517:5
	movq	%r13, %rdi
	movl	%ebp, %edx
	callq	x264_ratecontrol_start@PLT
.Ltmp1490:
	.loc	0 2518 19 is_stmt 1             # x264_src/encoder/encoder.c:2518:19
	movq	%r13, %rdi
	callq	x264_ratecontrol_qp@PLT
.Ltmp1491:
	movl	%eax, %ebp
.Ltmp1492:
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2521 38                       # x264_src/encoder/encoder.c:2521:38
	leal	1(%rbp), %eax
	.loc	0 2521 8 is_stmt 0              # x264_src/encoder/encoder.c:2521:8
	movq	14688(%r13), %rcx
	.loc	0 2521 24                       # x264_src/encoder/encoder.c:2521:24
	movl	%eax, 8(%rcx)
	.loc	0 2520 24 is_stmt 1             # x264_src/encoder/encoder.c:2520:24
	movl	%eax, 4(%r15)
.Ltmp1493:
	.loc	0 2523 9                        # x264_src/encoder/encoder.c:2523:9
	cmpl	$0, 576(%r13)
	.loc	0 2523 33 is_stmt 0             # x264_src/encoder/encoder.c:2523:33
	je	.LBB11_189
.Ltmp1494:
# %bb.187:                              # %land.lhs.true625
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2523 49                       # x264_src/encoder/encoder.c:2523:49
	cmpl	$2, 7248(%r13)
.Ltmp1495:
	.loc	0 2523 9                        # x264_src/encoder/encoder.c:2523:9
	je	.LBB11_189
.Ltmp1496:
# %bb.188:                              # %if.then630
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2525 9 is_stmt 1              # x264_src/encoder/encoder.c:2525:9
	movq	%r13, %rdi
	callq	x264_reference_build_list_optimal@PLT
.Ltmp1497:
	.loc	0 2526 9                        # x264_src/encoder/encoder.c:2526:9
	movq	%r13, %rdi
	callq	x264_reference_check_reorder
.Ltmp1498:
.LBB11_189:                             # %if.end632
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2529 9                        # x264_src/encoder/encoder.c:2529:9
	cmpl	$0, (%rbx)
.Ltmp1499:
	.loc	0 2529 9 is_stmt 0              # x264_src/encoder/encoder.c:2529:9
	je	.LBB11_191
.Ltmp1500:
# %bb.190:                              # %if.then634
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2530 12 is_stmt 1             # x264_src/encoder/encoder.c:2530:12
	movq	14688(%r13), %rax
	.loc	0 2530 33 is_stmt 0             # x264_src/encoder/encoder.c:2530:33
	movq	14704(%r13), %rcx
	.loc	0 2530 46                       # x264_src/encoder/encoder.c:2530:46
	movl	(%rcx), %ecx
	.loc	0 2530 31                       # x264_src/encoder/encoder.c:2530:31
	movl	%ecx, 96(%rax)
.Ltmp1501:
.LBB11_191:                             # %if.end639
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2532 22 is_stmt 1             # x264_src/encoder/encoder.c:2532:22
	cmpl	$1, 7248(%r13)
.Ltmp1502:
	.loc	0 2532 9 is_stmt 0              # x264_src/encoder/encoder.c:2532:9
	jne	.LBB11_193
.Ltmp1503:
# %bb.192:                              # %if.then644
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2533 9 is_stmt 1              # x264_src/encoder/encoder.c:2533:9
	movq	%r13, %rdi
	callq	x264_macroblock_bipred_init@PLT
.Ltmp1504:
.LBB11_193:                             # %if.end645
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_weighted_pred_init:h <- undef
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 1395 31                       # x264_src/encoder/encoder.c:1395:31
	cmpl	$0, (%rbx)
.Ltmp1505:
	.loc	0 1395 5 is_stmt 0              # x264_src/encoder/encoder.c:1395:5
	jle	.LBB11_196
.Ltmp1506:
# %bb.194:                              # %for.body.lr.ph.i1247
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%eax, %eax
.Ltmp1507:
	.p2align	4, 0x90
.LBB11_195:                             # %for.body.i1249
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- $rax
	.loc	0 1396 36 is_stmt 1             # x264_src/encoder/encoder.c:1396:36
	movq	14704(%r13,%rax,8), %rcx
	movq	176(%rcx), %rcx
	.loc	0 1396 12 is_stmt 0             # x264_src/encoder/encoder.c:1396:12
	movq	14680(%r13), %rdx
	.loc	0 1396 34                       # x264_src/encoder/encoder.c:1396:34
	movq	%rcx, 3392(%rdx,%rax,8)
	.loc	0 1395 49 is_stmt 1             # x264_src/encoder/encoder.c:1395:49
	incq	%rax
.Ltmp1508:
	#DEBUG_VALUE: i_ref <- $rax
	.loc	0 1395 36 is_stmt 0             # x264_src/encoder/encoder.c:1395:36
	movslq	14696(%r13), %rcx
	.loc	0 1395 31                       # x264_src/encoder/encoder.c:1395:31
	cmpq	%rcx, %rax
.Ltmp1509:
	.loc	0 1395 5                        # x264_src/encoder/encoder.c:1395:5
	jl	.LBB11_195
.Ltmp1510:
.LBB11_196:                             # %for.cond.cleanup.i1229
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1400 8 is_stmt 1              # x264_src/encoder/encoder.c:1400:8
	movq	14680(%r13), %rax
	.loc	0 1400 31 is_stmt 0             # x264_src/encoder/encoder.c:1400:31
	movl	$0, 15596(%rax)
.Ltmp1511:
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 0 31                          # x264_src/encoder/encoder.c:0:31
	movl	14696(%r13), %eax
	movzbl	7268(%r13), %ecx
	movl	%eax, %edx
	shll	%cl, %edx
.Ltmp1512:
	.loc	0 1402 31 is_stmt 1             # x264_src/encoder/encoder.c:1402:31
	testl	%edx, %edx
.Ltmp1513:
	.loc	0 1402 5 is_stmt 0              # x264_src/encoder/encoder.c:1402:5
	jle	.LBB11_213
.Ltmp1514:
# %bb.197:                              # %for.cond11.preheader.lr.ph.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 1402 31                       # x264_src/encoder/encoder.c:1402:31
	movl	%edx, %ecx
.Ltmp1515:
	.loc	0 1402 5                        # x264_src/encoder/encoder.c:1402:5
	cmpl	$3, %edx
	ja	.LBB11_205
.Ltmp1516:
# %bb.198:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%edx, %edx
	jmp	.LBB11_208
.Ltmp1517:
.LBB11_199:                             # %if.then.i.i1102
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %ecx
	leal	(%rcx,%rcx,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp1518:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp1519:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB11_19
.Ltmp1520:
# %bb.200:                              # %cleanup.thread.i.i1106
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	%rax, %rbx
	movq	%r15, 56(%rsp)                  # 8-byte Spill
.Ltmp1521:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%r13), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%r13), %rax
.Ltmp1522:
	#DEBUG_VALUE: new_out <- $rbx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rbx, %rdi
	callq	memcpy@PLT
.Ltmp1523:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%r13), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp1524:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%rbx, 1768(%r13)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%r13)
.Ltmp1525:
	.loc	0 2472 43                       # x264_src/encoder/encoder.c:2472:43
	movl	1760(%r13), %eax
.Ltmp1526:
.LBB11_201:                             # %if.end461
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2472 25 is_stmt 0             # x264_src/encoder/encoder.c:2472:25
	cltq
	leaq	(%rax,%rax,2), %rax
.Ltmp1527:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 2472 52                       # x264_src/encoder/encoder.c:2472:52
	movl	-16(%rbx,%rax,8), %r15d
.Ltmp1528:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 5, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 0 52                          # x264_src/encoder/encoder.c:0:52
	movabsq	$34359738371, %rcx              # imm = 0x800000003
.Ltmp1529:
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 8
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 3
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rcx, (%rbx,%rax,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rbx,%rax,8)
.Ltmp1530:
	#DEBUG_VALUE: bs_pos:s <- $r14
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %ecx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %ecx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %ecx
	subl	1824(%r13), %ecx
	leal	64(%rcx), %edx
.Ltmp1531:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %ecx
	testl	%edx, %edx
	cmovnsl	%edx, %ecx
	sarl	$3, %ecx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%ecx, %rcx
	addq	1784(%r13), %rcx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rcx, 16(%rbx,%rax,8)
.Ltmp1532:
	.loc	0 2476 44 is_stmt 1             # x264_src/encoder/encoder.c:2476:44
	movq	3328(%r13), %rsi
	.loc	0 2476 13 is_stmt 0             # x264_src/encoder/encoder.c:2476:13
	movq	%r14, %rdi
	callq	x264_pps_write@PLT
.Ltmp1533:
	.loc	0 2477 17 is_stmt 1             # x264_src/encoder/encoder.c:2477:17
	movq	%r13, %rdi
	callq	x264_nal_end
.Ltmp1534:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movl	$-1, %ebx
	.loc	0 2477 17                       # x264_src/encoder/encoder.c:2477:17
	testl	%eax, %eax
.Ltmp1535:
	.loc	0 2477 17                       # x264_src/encoder/encoder.c:2477:17
	jne	.LBB11_111
.Ltmp1536:
# %bb.202:                              # %if.end488
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:overhead <- undef
	.loc	0 2479 32 is_stmt 1             # x264_src/encoder/encoder.c:2479:32
	movq	1768(%r13), %rcx
	.loc	0 2479 43 is_stmt 0             # x264_src/encoder/encoder.c:2479:43
	movslq	1760(%r13), %rax
	.loc	0 2479 25                       # x264_src/encoder/encoder.c:2479:25
	leaq	(%rax,%rax,2), %rdx
	.loc	0 2479 52                       # x264_src/encoder/encoder.c:2479:52
	movl	-16(%rcx,%rdx,8), %eax
	.loc	0 2472 62 is_stmt 1             # x264_src/encoder/encoder.c:2472:62
	addl	%r15d, %ebp
	.loc	0 2479 22                       # x264_src/encoder/encoder.c:2479:22
	addl	%eax, %ebp
	addl	$10, %ebp
.Ltmp1537:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2484 13                       # x264_src/encoder/encoder.c:2484:13
	cmpl	$0, 636(%r13)
.Ltmp1538:
	.loc	0 2495 16                       # x264_src/encoder/encoder.c:2495:16
	movq	14680(%r13), %rax
.Ltmp1539:
	.loc	0 2484 39                       # x264_src/encoder/encoder.c:2484:39
	je	.LBB11_249
.Ltmp1540:
# %bb.203:                              # %land.lhs.true492
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2484 59 is_stmt 0             # x264_src/encoder/encoder.c:2484:59
	cmpl	$0, 56(%rax)
	movq	56(%rsp), %r15                  # 8-byte Reload
.Ltmp1541:
	.loc	0 2484 13                       # x264_src/encoder/encoder.c:2484:13
	je	.LBB11_250
.Ltmp1542:
# %bb.204:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	24(%rsp), %rbx                  # 8-byte Reload
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
.Ltmp1543:
	.loc	0 2495 29 is_stmt 1             # x264_src/encoder/encoder.c:2495:29
	cmpl	$1, 4(%rax)
.Ltmp1544:
	.loc	0 2495 13 is_stmt 0             # x264_src/encoder/encoder.c:2495:13
	jne	.LBB11_178
	jmp	.LBB11_179
.Ltmp1545:
.LBB11_19:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movl	$-1, %ebx
	jmp	.LBB11_111
.Ltmp1546:
.LBB11_205:                             # %vector.ph
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 1402 5 is_stmt 1              # x264_src/encoder/encoder.c:1402:5
	movl	%ecx, %edx
	andl	$2147483644, %edx               # imm = 0x7FFFFFFC
	movl	%ecx, %esi
	shrl	$2, %esi
	andl	$536870911, %esi                # imm = 0x1FFFFFFF
	shlq	$8, %rsi
	leaq	(%rsi,%rsi,2), %rsi
	xorl	%edi, %edi
.Ltmp1547:
	.p2align	4, 0x90
.LBB11_206:                             # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 1404 45                       # x264_src/encoder/encoder.c:1404:45
	movq	$0, 7632(%r13,%rdi)
	movq	$0, 7824(%r13,%rdi)
	movq	$0, 8016(%r13,%rdi)
	movq	$0, 8208(%r13,%rdi)
	movq	$0, 7696(%r13,%rdi)
	movq	$0, 7888(%r13,%rdi)
	movq	$0, 8080(%r13,%rdi)
	movq	$0, 8272(%r13,%rdi)
	movq	$0, 7760(%r13,%rdi)
	movq	$0, 7952(%r13,%rdi)
	movq	$0, 8144(%r13,%rdi)
	movq	$0, 8336(%r13,%rdi)
.Ltmp1548:
	.loc	0 1402 68                       # x264_src/encoder/encoder.c:1402:68
	addq	$768, %rdi                      # imm = 0x300
	cmpq	%rdi, %rsi
	jne	.LBB11_206
.Ltmp1549:
# %bb.207:                              # %middle.block
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 1402 5 is_stmt 0              # x264_src/encoder/encoder.c:1402:5
	cmpl	%ecx, %edx
	je	.LBB11_213
.Ltmp1550:
.LBB11_208:                             # %for.cond11.preheader.i.preheader
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	%rdx, %rsi
	.loc	0 1402 5                        # x264_src/encoder/encoder.c:1402:5
	testb	$1, %cl
	je	.LBB11_210
.Ltmp1551:
# %bb.209:                              # %for.cond11.preheader.i.prol
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leaq	7584(%r13), %rsi
.Ltmp1552:
	#DEBUG_VALUE: i_ref <- undef
	#DEBUG_VALUE: i <- 0
	.loc	0 1404 36 is_stmt 1             # x264_src/encoder/encoder.c:1404:36
	leaq	(%rdx,%rdx,2), %rdi
	shlq	$6, %rdi
	.loc	0 1404 45 is_stmt 0             # x264_src/encoder/encoder.c:1404:45
	movq	$0, 48(%rsi,%rdi)
.Ltmp1553:
	#DEBUG_VALUE: i <- 1
	movq	$0, 112(%rsi,%rdi)
.Ltmp1554:
	#DEBUG_VALUE: i <- 2
	movq	$0, 176(%rsi,%rdi)
.Ltmp1555:
	#DEBUG_VALUE: i <- 3
	.loc	0 1402 68 is_stmt 1             # x264_src/encoder/encoder.c:1402:68
	movq	%rdx, %rsi
	orq	$1, %rsi
.Ltmp1556:
	#DEBUG_VALUE: i_ref <- $rsi
.LBB11_210:                             # %for.cond11.preheader.i.prol.loopexit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1402 5 is_stmt 0              # x264_src/encoder/encoder.c:1402:5
	leaq	-1(%rcx), %rdi
	cmpq	%rdi, %rdx
	je	.LBB11_213
.Ltmp1557:
# %bb.211:                              # %for.cond11.preheader.i.preheader1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	subq	%rsi, %rcx
	leaq	(%rsi,%rsi,2), %rdx
	shlq	$6, %rdx
	addq	%r13, %rdx
	addq	$7952, %rdx                     # imm = 0x1F10
.Ltmp1558:
	.p2align	4, 0x90
.LBB11_212:                             # %for.cond11.preheader.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551614, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: i <- 0
	.loc	0 1404 45 is_stmt 1             # x264_src/encoder/encoder.c:1404:45
	movq	$0, -320(%rdx)
.Ltmp1559:
	#DEBUG_VALUE: i <- 1
	movq	$0, -256(%rdx)
.Ltmp1560:
	#DEBUG_VALUE: i <- 2
	movq	$0, -192(%rdx)
.Ltmp1561:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551614, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 1, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: i <- 0
	movq	$0, -128(%rdx)
.Ltmp1562:
	#DEBUG_VALUE: i <- 1
	movq	$0, -64(%rdx)
.Ltmp1563:
	#DEBUG_VALUE: i <- 2
	movq	$0, (%rdx)
.Ltmp1564:
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 7, DW_OP_consts 18446744073709551615, DW_OP_LLVM_arg 2, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_consts 18446744073709551614, DW_OP_div, DW_OP_consts 2, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 1402 31                       # x264_src/encoder/encoder.c:1402:31
	addq	$384, %rdx                      # imm = 0x180
	addq	$-2, %rcx
	jne	.LBB11_212
.Ltmp1565:
.LBB11_213:                             # %for.cond.cleanup9.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1407 22                       # x264_src/encoder/encoder.c:1407:22
	cmpl	$0, 7248(%r13)
	.loc	0 1407 38 is_stmt 0             # x264_src/encoder/encoder.c:1407:38
	je	.LBB11_228
.Ltmp1566:
.LBB11_214:                             # %x264_weighted_pred_init.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:h <- undef
	#DEBUG_VALUE: x264_slice_init:i_nal_type <- undef
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leaq	7232(%r13), %rsi
	movq	3200(%r13), %rdx
	movq	3328(%r13), %rcx
.Ltmp1567:
	.loc	0 1721 9 is_stmt 1              # x264_src/encoder/encoder.c:1721:9
	cmpb	$0, 36(%rsp)                    # 1-byte Folded Reload
	je	.LBB11_216
.Ltmp1568:
# %bb.215:                              # %if.then.i1266
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1723 63                       # x264_src/encoder/encoder.c:1723:63
	movl	3336(%r13), %r8d
	.loc	0 1723 80 is_stmt 0             # x264_src/encoder/encoder.c:1723:80
	movl	1848(%r13), %r9d
	.loc	0 1723 9                        # x264_src/encoder/encoder.c:1723:9
	movl	%ebp, (%rsp)
	movq	%r13, %rdi
	callq	x264_slice_header_init
.Ltmp1569:
	.loc	0 1726 32 is_stmt 1             # x264_src/encoder/encoder.c:1726:32
	movl	3336(%r13), %eax
	.loc	0 1726 45 is_stmt 0             # x264_src/encoder/encoder.c:1726:45
	leal	1(%rax), %ecx
	.loc	0 1726 51                       # x264_src/encoder/encoder.c:1726:51
	leal	65536(%rax), %edx
	testl	%ecx, %ecx
	cmovnsl	%ecx, %edx
	andl	$-65536, %edx                   # imm = 0xFFFF0000
	negl	%edx
	addl	%edx, %eax
	incl	%eax
	.loc	0 1726 25                       # x264_src/encoder/encoder.c:1726:25
	movl	%eax, 3336(%r13)
	.loc	0 1727 5 is_stmt 1              # x264_src/encoder/encoder.c:1727:5
	jmp	.LBB11_220
.Ltmp1570:
.LBB11_216:                             # %if.else.i1256
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1730 67                       # x264_src/encoder/encoder.c:1730:67
	movl	1848(%r13), %r9d
	.loc	0 1730 9 is_stmt 0              # x264_src/encoder/encoder.c:1730:9
	movl	%ebp, (%rsp)
	movq	%r13, %rdi
	movl	$-1, %r8d
	callq	x264_slice_header_init
.Ltmp1571:
	.loc	0 1732 44 is_stmt 1             # x264_src/encoder/encoder.c:1732:44
	movl	14696(%r13), %edx
	.loc	0 1732 41 is_stmt 0             # x264_src/encoder/encoder.c:1732:41
	cmpl	$2, %edx
	movl	$1, %eax
	cmovll	%eax, %edx
	.loc	0 1732 39                       # x264_src/encoder/encoder.c:1732:39
	movl	%edx, 7312(%r13)
	.loc	0 1733 44 is_stmt 1             # x264_src/encoder/encoder.c:1733:44
	movl	14856(%r13), %ecx
	.loc	0 1733 41 is_stmt 0             # x264_src/encoder/encoder.c:1733:41
	cmpl	$2, %ecx
	cmovgel	%ecx, %eax
	.loc	0 1733 39                       # x264_src/encoder/encoder.c:1733:39
	movl	%eax, 7316(%r13)
.Ltmp1572:
	.loc	0 1734 49 is_stmt 1             # x264_src/encoder/encoder.c:1734:49
	movq	3328(%r13), %rcx
	.loc	0 1734 43 is_stmt 0             # x264_src/encoder/encoder.c:1734:43
	cmpl	20(%rcx), %edx
	.loc	0 1734 86                       # x264_src/encoder/encoder.c:1734:86
	jne	.LBB11_219
.Ltmp1573:
# %bb.217:                              # %lor.lhs.false.i1262
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1735 27 is_stmt 1             # x264_src/encoder/encoder.c:1735:27
	cmpl	$1, 7248(%r13)
	.loc	0 1735 43 is_stmt 0             # x264_src/encoder/encoder.c:1735:43
	jne	.LBB11_220
.Ltmp1574:
# %bb.218:                              # %land.lhs.true.i1265
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1735 76                       # x264_src/encoder/encoder.c:1735:76
	cmpl	24(%rcx), %eax
.Ltmp1575:
	.loc	0 1734 13 is_stmt 1             # x264_src/encoder/encoder.c:1734:13
	je	.LBB11_220
.Ltmp1576:
.LBB11_219:                             # %if.then27.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1737 42                       # x264_src/encoder/encoder.c:1737:42
	movl	$1, 7308(%r13)
.Ltmp1577:
.LBB11_220:                             # %if.end29.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1741 34                       # x264_src/encoder/encoder.c:1741:34
	movl	7264(%r13), %eax
	.loc	0 1741 8 is_stmt 0              # x264_src/encoder/encoder.c:1741:8
	movq	14688(%r13), %rcx
	.loc	0 1741 26                       # x264_src/encoder/encoder.c:1741:26
	movl	%eax, 68(%rcx)
.Ltmp1578:
	.loc	0 1743 12 is_stmt 1             # x264_src/encoder/encoder.c:1743:12
	movq	3200(%r13), %rax
	.loc	0 1743 28 is_stmt 0             # x264_src/encoder/encoder.c:1743:28
	cmpl	$0, 28(%rax)
.Ltmp1579:
	.loc	0 1743 9                        # x264_src/encoder/encoder.c:1743:9
	je	.LBB11_242
.Ltmp1580:
.LBB11_221:                             # %x264_slice_init.exit
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1764 5 is_stmt 1              # x264_src/encoder/encoder.c:1764:5
	movq	%r13, %rdi
	callq	x264_macroblock_slice_init@PLT
.Ltmp1581:
	.loc	0 2384 44                       # x264_src/encoder/encoder.c:2384:44
	cmpl	$0, 52(%rsp)                    # 4-byte Folded Reload
	.loc	0 2541 9                        # x264_src/encoder/encoder.c:2541:9
	je	.LBB11_223
.Ltmp1582:
# %bb.222:                              # %if.then648
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2542 23                       # x264_src/encoder/encoder.c:2542:23
	incl	1848(%r13)
.Ltmp1583:
.LBB11_223:                             # %if.end651
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2545 28                       # x264_src/encoder/encoder.c:2545:28
	movl	$0, 1748(%r13)
	.loc	0 2546 31                       # x264_src/encoder/encoder.c:2546:31
	movq	3200(%r13), %rax
	.loc	0 2546 36 is_stmt 0             # x264_src/encoder/encoder.c:2546:36
	movl	1088(%rax), %eax
	.loc	0 2546 26                       # x264_src/encoder/encoder.c:2546:26
	movl	%eax, 1752(%r13)
.Ltmp1584:
	.loc	0 2547 28 is_stmt 1             # x264_src/encoder/encoder.c:2547:28
	cmpl	$2, 1852(%r13)
.Ltmp1585:
	.loc	0 2547 9 is_stmt 0              # x264_src/encoder/encoder.c:2547:9
	jl	.LBB11_225
.Ltmp1586:
# %bb.224:                              # %if.then657
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2551 28 is_stmt 1             # x264_src/encoder/encoder.c:2551:28
	movl	$1, 1740(%r13)
	.loc	0 2552 5                        # x264_src/encoder/encoder.c:2552:5
	jmp	.LBB11_227
.Ltmp1587:
.LBB11_225:                             # %if.else658
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2553 14                       # x264_src/encoder/encoder.c:2553:14
	cmpl	$0, 8(%r13)
.Ltmp1588:
	.loc	0 2553 14 is_stmt 0             # x264_src/encoder/encoder.c:2553:14
	je	.LBB11_245
.Ltmp1589:
# %bb.226:                              # %if.then662
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2555 13 is_stmt 1             # x264_src/encoder/encoder.c:2555:13
	movq	%r13, %rdi
	callq	x264_threaded_slices_write
.Ltmp1590:
.LBB11_227:                             # %if.end673
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	72(%rsp), %rdi                  # 8-byte Reload
	.loc	0 2562 12 is_stmt 1             # x264_src/encoder/encoder.c:2562:12
	movq	%r13, %rsi
	movq	%r14, %rdx
	movq	%r12, %rcx
	movq	%r15, %r8
	callq	x264_encoder_frame_end
.Ltmp1591:
	movl	%eax, %ebx
.Ltmp1592:
.LBB11_111:                             # %cleanup675
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2563 1                        # x264_src/encoder/encoder.c:2563:1
	movl	%ebx, %eax
	.loc	0 2563 1 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:2563:1
	addq	$296, %rsp                      # imm = 0x128
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp1593:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1594:
.LBB11_228:                             # %lor.lhs.false.i
	.cfi_def_cfa_offset 352
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1407 74 is_stmt 1             # x264_src/encoder/encoder.c:1407:74
	cmpl	$0, 396(%r13)
.Ltmp1595:
	.loc	0 1407 9 is_stmt 0              # x264_src/encoder/encoder.c:1407:9
	jle	.LBB11_214
.Ltmp1596:
# %bb.229:                              # %if.end.i1233
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1410 35 is_stmt 1             # x264_src/encoder/encoder.c:1410:35
	movl	136(%r13), %ecx
	movl	$32, %edx
	.loc	0 1410 23 is_stmt 0             # x264_src/encoder/encoder.c:1410:23
	shll	%cl, %edx
.Ltmp1597:
	#DEBUG_VALUE: x264_weighted_pred_init:i_padv <- $edx
	#DEBUG_VALUE: x264_weighted_pred_init:denom <- -1
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- 0
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- 0
	.loc	0 1415 63 is_stmt 1             # x264_src/encoder/encoder.c:1415:63
	movq	$0, 7760(%r13)
	.loc	0 1415 33 is_stmt 0             # x264_src/encoder/encoder.c:1415:33
	movq	$0, 7696(%r13)
	.loc	0 1416 61 is_stmt 1             # x264_src/encoder/encoder.c:1416:61
	movl	$0, 7744(%r13)
	.loc	0 1416 32 is_stmt 0             # x264_src/encoder/encoder.c:1416:32
	movl	$0, 7680(%r13)
.Ltmp1598:
	#DEBUG_VALUE: j <- 0
	.loc	0 1417 23 is_stmt 1             # x264_src/encoder/encoder.c:1417:23
	testl	%eax, %eax
.Ltmp1599:
	.loc	0 1417 5 is_stmt 0              # x264_src/encoder/encoder.c:1417:5
	jle	.LBB11_247
.Ltmp1600:
# %bb.230:                              # %for.body54.lr.ph.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_weighted_pred_init:i_padv <- $edx
	#DEBUG_VALUE: x264_weighted_pred_init:denom <- -1
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- 0
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- 0
	#DEBUG_VALUE: j <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	%rbp, 88(%rsp)                  # 8-byte Spill
.Ltmp1601:
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	movq	%r12, 64(%rsp)                  # 8-byte Spill
.Ltmp1602:
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	movq	%r15, 56(%rsp)                  # 8-byte Spill
.Ltmp1603:
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	movl	$64, %eax
                                        # kill: def $cl killed $cl killed $ecx
	shll	%cl, %eax
	movl	%eax, 80(%rsp)                  # 4-byte Spill
	xorl	%r14d, %r14d
	movl	$7584, %ebp                     # imm = 0x1DA0
	movslq	%edx, %r15
	xorl	%edi, %edi
	xorl	%r12d, %r12d
	jmp	.LBB11_233
.Ltmp1604:
	.p2align	4, 0x90
.LBB11_232:                             # %for.inc178.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: j <- $r14
	.loc	0 1417 37                       # x264_src/encoder/encoder.c:1417:37
	incq	%r14
.Ltmp1605:
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- undef
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- undef
	.loc	0 1417 28                       # x264_src/encoder/encoder.c:1417:28
	movslq	(%rbx), %rax
	.loc	0 1417 23                       # x264_src/encoder/encoder.c:1417:23
	addq	$192, %rbp
	cmpq	%rax, %r14
.Ltmp1606:
	.loc	0 1417 5                        # x264_src/encoder/encoder.c:1417:5
	jge	.LBB11_246
.Ltmp1607:
.LBB11_233:                             # %for.body54.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	.loc	0 1419 16 is_stmt 1             # x264_src/encoder/encoder.c:1419:16
	movq	14680(%r13), %rax
	.loc	0 1419 13 is_stmt 0             # x264_src/encoder/encoder.c:1419:13
	cmpq	$0, -7216(%rax,%rbp)
.Ltmp1608:
	.loc	0 1419 13                       # x264_src/encoder/encoder.c:1419:13
	je	.LBB11_239
.Ltmp1609:
# %bb.234:                              # %if.then61.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leaq	(%rax,%rbp), %rcx
	addq	$-7264, %rcx                    # imm = 0xE3A0
.Ltmp1610:
	.loc	0 1421 34 is_stmt 1             # x264_src/encoder/encoder.c:1421:34
	movapd	(%rcx), %xmm0
	movaps	16(%rcx), %xmm1
	movapd	32(%rcx), %xmm2
	movaps	48(%rcx), %xmm3
	movapd	%xmm2, 32(%r13,%rbp)
	movaps	%xmm3, 48(%r13,%rbp)
	movaps	%xmm1, 16(%r13,%rbp)
	movapd	%xmm0, (%r13,%rbp)
.Ltmp1611:
	.loc	0 1423 69                       # x264_src/encoder/encoder.c:1423:69
	movl	32(%r13,%rbp), %ecx
	.loc	0 1423 48 is_stmt 0             # x264_src/encoder/encoder.c:1423:48
	movl	$1, %edx
	shll	%cl, %edx
	.loc	0 1423 44                       # x264_src/encoder/encoder.c:1423:44
	cmpl	%edx, 36(%r13,%rbp)
	.loc	0 1423 77                       # x264_src/encoder/encoder.c:1423:77
	jne	.LBB11_236
.Ltmp1612:
# %bb.235:                              # %land.lhs.true.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 1423 108                      # x264_src/encoder/encoder.c:1423:108
	cmpl	$0, 40(%r13,%rbp)
.Ltmp1613:
	.loc	0 1423 17                       # x264_src/encoder/encoder.c:1423:17
	je	.LBB11_231
.Ltmp1614:
.LBB11_236:                             # %if.else.i1237
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 1427 22 is_stmt 1             # x264_src/encoder/encoder.c:1427:22
	testl	%r12d, %r12d
.Ltmp1615:
	.loc	0 1427 21 is_stmt 0             # x264_src/encoder/encoder.c:1427:21
	jne	.LBB11_238
.Ltmp1616:
# %bb.237:                              # %if.then99.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- 1
	#DEBUG_VALUE: x264_weighted_pred_init:denom <- $ecx
	.loc	0 1430 48 is_stmt 1             # x264_src/encoder/encoder.c:1430:48
	movl	%ecx, 7616(%r13)
.Ltmp1617:
.LBB11_238:                             # %if.end111.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 1436 40                       # x264_src/encoder/encoder.c:1436:40
	movslq	%edi, %rcx
.Ltmp1618:
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- 1
	.loc	0 1436 70 is_stmt 0             # x264_src/encoder/encoder.c:1436:70
	incl	%edi
.Ltmp1619:
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	.loc	0 1436 40                       # x264_src/encoder/encoder.c:1436:40
	movq	17256(%r13,%rcx,8), %rcx
	.loc	0 1437 21 is_stmt 1             # x264_src/encoder/encoder.c:1437:21
	movslq	104(%rax), %rdx
	.loc	0 1437 42 is_stmt 0             # x264_src/encoder/encoder.c:1437:42
	imulq	%r15, %rdx
	.loc	0 1437 51                       # x264_src/encoder/encoder.c:1437:51
	addq	%rdx, %rcx
	addq	$32, %rcx
	.loc	0 1436 38 is_stmt 1             # x264_src/encoder/encoder.c:1436:38
	movq	%rcx, 3392(%rax,%r14,8)
	movl	$1, %r12d
.Ltmp1620:
.LBB11_239:                             # %if.end123.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	.loc	0 1442 13                       # x264_src/encoder/encoder.c:1442:13
	cmpq	$0, 48(%r13,%rbp)
	.loc	0 1442 41 is_stmt 0             # x264_src/encoder/encoder.c:1442:41
	je	.LBB11_232
.Ltmp1621:
.LBB11_240:                             # %land.lhs.true131.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 1442 63                       # x264_src/encoder/encoder.c:1442:63
	cmpl	$1, 4(%r13)
.Ltmp1622:
	.loc	0 1442 13                       # x264_src/encoder/encoder.c:1442:13
	jne	.LBB11_232
.Ltmp1623:
# %bb.241:                              # %if.then134.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%r13, %rax
	addq	%rbp, %rax
.Ltmp1624:
	.loc	0 1444 28 is_stmt 1             # x264_src/encoder/encoder.c:1444:28
	movq	14704(%r13,%r14,8), %rcx
	movq	176(%rcx), %rdx
	.loc	0 1444 55 is_stmt 0             # x264_src/encoder/encoder.c:1444:55
	movslq	104(%rcx), %rcx
	.loc	0 1444 79                       # x264_src/encoder/encoder.c:1444:79
	imulq	%r15, %rcx
	.loc	0 1444 87                       # x264_src/encoder/encoder.c:1444:87
	negq	%rcx
	addq	%rdx, %rcx
	addq	$-32, %rcx
.Ltmp1625:
	#DEBUG_VALUE: src <- $rcx
	.loc	0 0 87                          # x264_src/encoder/encoder.c:0:87
	movl	%edi, 84(%rsp)                  # 4-byte Spill
.Ltmp1626:
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- [DW_OP_plus_uconst 84, DW_OP_deref] $rsp
	.loc	0 1445 31 is_stmt 1             # x264_src/encoder/encoder.c:1445:31
	movq	14680(%r13), %rdi
	.loc	0 1445 28 is_stmt 0             # x264_src/encoder/encoder.c:1445:28
	movq	3392(%rdi,%r14,8), %rsi
	.loc	0 1445 51                       # x264_src/encoder/encoder.c:1445:51
	movl	104(%rdi), %edx
.Ltmp1627:
	#DEBUG_VALUE: stride <- $edx
	.loc	0 1447 25 is_stmt 1             # x264_src/encoder/encoder.c:1447:25
	movl	116(%rdi), %r9d
	.loc	0 1445 71                       # x264_src/encoder/encoder.c:1445:71
	movl	%r15d, %r8d
	imull	%edx, %r8d
	.loc	0 1445 49 is_stmt 0             # x264_src/encoder/encoder.c:1445:49
	movslq	%r8d, %r8
	.loc	0 1445 79                       # x264_src/encoder/encoder.c:1445:79
	negq	%r8
	addq	%r8, %rsi
	addq	$-32, %rsi
.Ltmp1628:
	#DEBUG_VALUE: dst <- $rsi
	.loc	0 1447 45 is_stmt 1             # x264_src/encoder/encoder.c:1447:45
	addl	$64, %r9d
.Ltmp1629:
	#DEBUG_VALUE: width <- $r9d
	.loc	0 0 45 is_stmt 0                # x264_src/encoder/encoder.c:0:45
	movl	128(%rdi), %ebx
	.loc	0 1448 46 is_stmt 1             # x264_src/encoder/encoder.c:1448:46
	addl	80(%rsp), %ebx                  # 4-byte Folded Reload
.Ltmp1630:
	#DEBUG_VALUE: height <- undef
	.loc	0 1449 13                       # x264_src/encoder/encoder.c:1449:13
	movq	%rax, 8(%rsp)
	movl	%ebx, (%rsp)
	movq	%r13, %rdi
	movl	%edx, %r8d
	callq	x264_weight_scale_plane@PLT
.Ltmp1631:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movl	84(%rsp), %edi                  # 4-byte Reload
	.loc	0 1450 16 is_stmt 1             # x264_src/encoder/encoder.c:1450:16
	movq	14680(%r13), %rax
	.loc	0 1450 39 is_stmt 0             # x264_src/encoder/encoder.c:1450:39
	movl	%ebx, 15596(%rax)
	movq	24(%rsp), %rbx                  # 8-byte Reload
	jmp	.LBB11_232
.Ltmp1632:
.LBB11_231:                             # %if.then91.i
                                        #   in Loop: Header=BB11_233 Depth=1
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: j <- $r14
	.loc	0 1424 45 is_stmt 1             # x264_src/encoder/encoder.c:1424:45
	movq	$0, 48(%r13,%rbp)
.Ltmp1633:
	#DEBUG_VALUE: x264_weighted_pred_init:buffer_next <- $edi
	#DEBUG_VALUE: x264_weighted_pred_init:weightluma <- $r12d
	.loc	0 1442 13                       # x264_src/encoder/encoder.c:1442:13
	cmpq	$0, 48(%r13,%rbp)
	.loc	0 1442 41 is_stmt 0             # x264_src/encoder/encoder.c:1442:41
	jne	.LBB11_240
	jmp	.LBB11_232
.Ltmp1634:
.LBB11_242:                             # %if.then35.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1745 26 is_stmt 1             # x264_src/encoder/encoder.c:1745:26
	movq	14688(%r13), %rax
	.loc	0 1745 32 is_stmt 0             # x264_src/encoder/encoder.c:1745:32
	movl	(%rax), %ecx
	.loc	0 1745 21                       # x264_src/encoder/encoder.c:1745:21
	movl	%ecx, 7284(%r13)
.Ltmp1635:
	.loc	0 1746 13 is_stmt 1             # x264_src/encoder/encoder.c:1746:13
	cmpl	$0, 136(%r13)
.Ltmp1636:
	.loc	0 1746 13 is_stmt 0             # x264_src/encoder/encoder.c:1746:13
	je	.LBB11_248
.Ltmp1637:
# %bb.243:                              # %if.then39.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1748 40 is_stmt 1             # x264_src/encoder/encoder.c:1748:40
	xorl	%ecx, %ecx
	cmpl	$0, 672(%r13)
	setne	%cl
	leal	-1(%rcx,%rcx), %ecx
	.loc	0 1748 38 is_stmt 0             # x264_src/encoder/encoder.c:1748:38
	movl	%ecx, 7288(%r13)
	.loc	0 1749 17 is_stmt 1             # x264_src/encoder/encoder.c:1749:17
	jne	.LBB11_221
.Ltmp1638:
# %bb.244:                              # %if.then47.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1750 40                       # x264_src/encoder/encoder.c:1750:40
	movl	(%rax), %eax
	.loc	0 1750 46 is_stmt 0             # x264_src/encoder/encoder.c:1750:46
	incl	%eax
	.loc	0 1750 29                       # x264_src/encoder/encoder.c:1750:29
	movl	%eax, 7284(%r13)
	.loc	0 1750 17                       # x264_src/encoder/encoder.c:1750:17
	jmp	.LBB11_221
.Ltmp1639:
.LBB11_245:                             # %if.else667
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 2559 23 is_stmt 1             # x264_src/encoder/encoder.c:2559:23
	movq	%r13, %rdi
	callq	x264_slices_write
.Ltmp1640:
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/encoder.c:0:23
	movl	$-1, %ebx
	.loc	0 2559 13                       # x264_src/encoder/encoder.c:2559:13
	testq	%rax, %rax
.Ltmp1641:
	.loc	0 2559 13                       # x264_src/encoder/encoder.c:2559:13
	jne	.LBB11_111
	jmp	.LBB11_227
.Ltmp1642:
.LBB11_246:                             # %for.cond.cleanup53.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	.loc	0 1453 10 is_stmt 1             # x264_src/encoder/encoder.c:1453:10
	testl	%r12d, %r12d
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	64(%rsp), %r12                  # 8-byte Reload
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	88(%rsp), %rbp                  # 8-byte Reload
.Ltmp1643:
	.loc	0 1453 9 is_stmt 0              # x264_src/encoder/encoder.c:1453:9
	jne	.LBB11_214
.Ltmp1644:
.LBB11_247:                             # %if.then182.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	.loc	0 1454 36 is_stmt 1             # x264_src/encoder/encoder.c:1454:36
	movl	$0, 7616(%r13)
	jmp	.LBB11_214
.Ltmp1645:
.LBB11_248:                             # %if.else54.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_global_qp <- $ebp
	#DEBUG_VALUE: x264_slice_init:i_global_qp <- $ebp
	.loc	0 1753 38                       # x264_src/encoder/encoder.c:1753:38
	movl	$0, 7288(%r13)
	jmp	.LBB11_221
.Ltmp1646:
.LBB11_249:
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 38 is_stmt 0                # x264_src/encoder/encoder.c:0:38
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	24(%rsp), %rbx                  # 8-byte Reload
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
.Ltmp1647:
	.loc	0 2495 29 is_stmt 1             # x264_src/encoder/encoder.c:2495:29
	cmpl	$1, 4(%rax)
.Ltmp1648:
	.loc	0 2495 13 is_stmt 0             # x264_src/encoder/encoder.c:2495:13
	jne	.LBB11_178
	jmp	.LBB11_179
.Ltmp1649:
.LBB11_131:                             # %if.then208.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	.loc	0 1532 47 is_stmt 1             # x264_src/encoder/encoder.c:1532:47
	movl	$0, 352(%rsi)
	movabsq	$4294967296, %rax               # imm = 0x100000000
.Ltmp1650:
	.loc	0 1533 17                       # x264_src/encoder/encoder.c:1533:17
	movq	%rax, 128(%rsp)
	movl	$-1, 136(%rsp)
	leaq	96(%rsp), %rsi
.Ltmp1651:
	.loc	0 1533 17 is_stmt 0             # x264_src/encoder/encoder.c:1533:17
	movq	%r13, %rdi
	callq	*32896(%r13)
.Ltmp1652:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:h <- undef
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i <- undef
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movl	$-1, %ebx
.Ltmp1653:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1370 11 is_stmt 1             # x264_src/encoder/encoder.c:1370:11
	cmpl	$2, 14696(%r13)
.Ltmp1654:
	.loc	0 1370 9 is_stmt 0              # x264_src/encoder/encoder.c:1370:9
	jl	.LBB11_141
.Ltmp1655:
# %bb.132:                              # %if.end.i.i
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- $rbp
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- $r15
	#DEBUG_VALUE: x264_encoder_encode:overhead <- 5
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_type <- $r14d
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: idx <- -1
	#DEBUG_VALUE: x264_weighted_reference_duplicate:i_ref <- 0
	#DEBUG_VALUE: x264_weighted_reference_duplicate:w <- [DW_OP_plus_uconst 96, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_weighted_reference_duplicate:j <- 1
	.loc	0 1373 16 is_stmt 1             # x264_src/encoder/encoder.c:1373:16
	movq	%r13, %rdi
	callq	x264_frame_pop_blank_unused@PLT
.Ltmp1656:
	movq	%rax, %rbx
.Ltmp1657:
	#DEBUG_VALUE: x264_weighted_reference_duplicate:newframe <- $rbx
	.loc	0 1376 18                       # x264_src/encoder/encoder.c:1376:18
	movq	14704(%r13), %rsi
	.loc	0 1376 17 is_stmt 0             # x264_src/encoder/encoder.c:1376:17
	movl	$15632, %edx                    # imm = 0x3D10
	movq	%rax, %rdi
	callq	memcpy@PLT
.Ltmp1658:
	.loc	0 1377 33 is_stmt 1             # x264_src/encoder/encoder.c:1377:33
	movl	$1, 15600(%rbx)
	.loc	0 1378 22                       # x264_src/encoder/encoder.c:1378:22
	movq	14704(%r13), %rax
	.loc	0 1378 20 is_stmt 0             # x264_src/encoder/encoder.c:1378:20
	movq	%rax, 3528(%rbx)
	.loc	0 1379 27 is_stmt 1             # x264_src/encoder/encoder.c:1379:27
	movl	$1, 3520(%rbx)
	movl	$512, %edi                      # imm = 0x200
	.loc	0 1380 13                       # x264_src/encoder/encoder.c:1380:13
	addq	14680(%r13), %rdi
	leaq	96(%rsp), %rsi
	.loc	0 1380 5 is_stmt 0              # x264_src/encoder/encoder.c:1380:5
	movl	$192, %edx
	callq	memcpy@PLT
.Ltmp1659:
	.loc	0 1383 25 is_stmt 1             # x264_src/encoder/encoder.c:1383:25
	movl	$1, 15016(%r13)
.Ltmp1660:
	.loc	0 1384 12                       # x264_src/encoder/encoder.c:1384:12
	movl	14696(%r13), %eax
	.loc	0 1384 19 is_stmt 0             # x264_src/encoder/encoder.c:1384:19
	cmpl	$16, %eax
.Ltmp1661:
	.loc	0 1384 9                        # x264_src/encoder/encoder.c:1384:9
	jl	.LBB11_139
	jmp	.LBB11_140
.Ltmp1662:
.LBB11_250:                             # %if.then497
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leaq	(%rcx,%rdx,8), %rax
.Ltmp1663:
	#DEBUG_VALUE: x264_nal_start:h <- undef
	#DEBUG_VALUE: x264_nal_start:i_type <- 6
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	#DEBUG_VALUE: x264_nal_start:nal <- $rax
	movabsq	$25769803776, %rcx              # imm = 0x600000000
.Ltmp1664:
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rcx, (%rax)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax)
.Ltmp1665:
	#DEBUG_VALUE: bs_pos:s <- $r14
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r13), %ecx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r13), %ecx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %ecx
	subl	1824(%r13), %ecx
	leal	64(%rcx), %edx
.Ltmp1666:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %ecx
	testl	%edx, %edx
	cmovnsl	%edx, %ecx
	sarl	$3, %ecx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%ecx, %rcx
	addq	1784(%r13), %rcx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rcx, 16(%rax)
.Ltmp1667:
	.loc	0 2488 17 is_stmt 1             # x264_src/encoder/encoder.c:2488:17
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	x264_sei_version_write@PLT
.Ltmp1668:
	testl	%eax, %eax
	movq	40(%rsp), %r14                  # 8-byte Reload
.Ltmp1669:
	.loc	0 2488 17 is_stmt 0             # x264_src/encoder/encoder.c:2488:17
	jne	.LBB11_111
.Ltmp1670:
# %bb.251:                              # %if.end503
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2490 17 is_stmt 1             # x264_src/encoder/encoder.c:2490:17
	movq	%r13, %rdi
	callq	x264_nal_end
.Ltmp1671:
	testl	%eax, %eax
.Ltmp1672:
	.loc	0 2490 17 is_stmt 0             # x264_src/encoder/encoder.c:2490:17
	jne	.LBB11_111
.Ltmp1673:
# %bb.252:                              # %if.end507
	#DEBUG_VALUE: x264_encoder_encode:h <- $r13
	#DEBUG_VALUE: x264_encoder_encode:pp_nal <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:pi_nal <- $r12
	#DEBUG_VALUE: x264_encoder_encode:pic_in <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_encode:pic_out <- [DW_OP_plus_uconst 56] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	#DEBUG_VALUE: x264_encoder_encode:thread_current <- $r13
	#DEBUG_VALUE: x264_encoder_encode:thread_oldest <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_encode:i_nal_ref_idc <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2492 32 is_stmt 1             # x264_src/encoder/encoder.c:2492:32
	movq	1768(%r13), %rax
	.loc	0 2492 43 is_stmt 0             # x264_src/encoder/encoder.c:2492:43
	movslq	1760(%r13), %rcx
	cmpq	$1, %rcx
	setne	%dl
	.loc	0 2492 81                       # x264_src/encoder/encoder.c:2492:81
	cmpl	$0, 640(%r13)
	setne	%sil
	.loc	0 2492 99                       # x264_src/encoder/encoder.c:2492:99
	andb	%dl, %sil
	leaq	(%rcx,%rcx,2), %rcx
	.loc	0 2492 62                       # x264_src/encoder/encoder.c:2492:62
	addl	-16(%rax,%rcx,8), %ebp
.Ltmp1674:
	.loc	0 2492 22                       # x264_src/encoder/encoder.c:2492:22
	movzbl	%sil, %eax
	subl	%eax, %ebp
	addl	$5, %ebp
.Ltmp1675:
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2495 16 is_stmt 1             # x264_src/encoder/encoder.c:2495:16
	movq	14680(%r13), %rax
	movq	24(%rsp), %rbx                  # 8-byte Reload
	#DEBUG_VALUE: x264_encoder_encode:overhead <- $ebp
	.loc	0 2495 29 is_stmt 0             # x264_src/encoder/encoder.c:2495:29
	cmpl	$1, 4(%rax)
.Ltmp1676:
	.loc	0 2495 13                       # x264_src/encoder/encoder.c:2495:13
	jne	.LBB11_178
	jmp	.LBB11_179
.Ltmp1677:
.Lfunc_end11:
	.size	x264_encoder_encode, .Lfunc_end11-x264_encoder_encode
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.LJTI11_0:
	.quad	.LBB11_54
	.quad	.LBB11_64
	.quad	.LBB11_62
	.quad	.LBB11_63
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0                          # -- Begin function x264_encoder_frame_end
.LCPI12_0:
	.quad	0x40efc02000000000              # double 65025
.LCPI12_2:
	.quad	0x3ddb7cdfd9d7bdbb              # double 1.0E-10
.LCPI12_3:
	.quad	0xc024000000000000              # double -10
.LCPI12_4:
	.quad	0x4059000000000000              # double 100
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI12_1:
	.long	0x42c80000                      # float 100
	.text
	.p2align	4, 0x90
	.type	x264_encoder_frame_end,@function
x264_encoder_frame_end:                 # @x264_encoder_frame_end
.Lfunc_begin12:
	.loc	0 2568 0 is_stmt 1              # x264_src/encoder/encoder.c:2568:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rdi
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $rsi
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$392, %rsp                      # imm = 0x188
	.cfi_def_cfa_offset 448
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %rbp
	movq	%rdx, %r13
	movq	%rsi, %r12
	movq	%rdi, %rbx
.Ltmp1678:
	.loc	0 2571 9 prologue_end           # x264_src/encoder/encoder.c:2571:9
	cmpl	$0, 1740(%rdi)
.Ltmp1679:
	.loc	0 2571 9 is_stmt 0              # x264_src/encoder/encoder.c:2571:9
	je	.LBB12_2
.Ltmp1680:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: ret <- 0
	.loc	0 2575 28 is_stmt 1             # x264_src/encoder/encoder.c:2575:28
	movl	$0, 1740(%rbx)
.Ltmp1681:
.LBB12_2:                               # %if.end4
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2579 10                       # x264_src/encoder/encoder.c:2579:10
	cmpl	$0, 1760(%rbx)
.Ltmp1682:
	.loc	0 2579 9 is_stmt 0              # x264_src/encoder/encoder.c:2579:9
	je	.LBB12_7
.Ltmp1683:
# %bb.3:                                # %if.end7
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
.Ltmp1684:
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	.loc	0 2587 12 is_stmt 1             # x264_src/encoder/encoder.c:2587:12
	movq	14680(%rbx), %rax
	.loc	0 2587 9 is_stmt 0              # x264_src/encoder/encoder.c:2587:9
	cmpl	$0, 80(%rax)
	.loc	0 2587 29                       # x264_src/encoder/encoder.c:2587:29
	je	.LBB12_13
.Ltmp1685:
# %bb.4:                                # %land.lhs.true
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2587 35                       # x264_src/encoder/encoder.c:2587:35
	movq	3200(%rbx), %rax
	.loc	0 2587 32                       # x264_src/encoder/encoder.c:2587:32
	cmpl	$0, 1204(%rax)
.Ltmp1686:
	.loc	0 2587 9                        # x264_src/encoder/encoder.c:2587:9
	je	.LBB12_13
.Ltmp1687:
# %bb.5:                                # %if.then10
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2589 40 is_stmt 1             # x264_src/encoder/encoder.c:2589:40
	movq	%rbx, %rdi
	callq	x264_hrd_fullness@PLT
.Ltmp1688:
	.loc	0 2589 38 is_stmt 0             # x264_src/encoder/encoder.c:2589:38
	movl	%eax, 15024(%rbx)
.Ltmp1689:
	#DEBUG_VALUE: x264_nal_start:h <- $rbx
	#DEBUG_VALUE: x264_nal_start:i_type <- 6
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 31 is_stmt 1             # x264_src/encoder/encoder.c:1239:31
	movq	1768(%rbx), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%rbx), %rcx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
	movabsq	$25769803776, %rdx              # imm = 0x600000000
.Ltmp1690:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%rdx, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
	.loc	0 1245 57                       # x264_src/encoder/encoder.c:1245:57
	leaq	1792(%rbx), %rsi
.Ltmp1691:
	#DEBUG_VALUE: bs_pos:s <- $rsi
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %edi
.Ltmp1692:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %edx
	testl	%edi, %edi
	cmovnsl	%edi, %edx
	sarl	$3, %edx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%edx, %rdx
	addq	1784(%rbx), %rdx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rdx, 16(%rax,%rcx,8)
.Ltmp1693:
	.loc	0 2592 9 is_stmt 1              # x264_src/encoder/encoder.c:2592:9
	movq	%rbx, %rdi
	callq	x264_sei_buffering_period_write@PLT
.Ltmp1694:
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rbx), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rbx), %rcx
.Ltmp1695:
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %esi
.Ltmp1696:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp1697:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rbx), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rbx), %ecx
.Ltmp1698:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %eax
.Ltmp1699:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%ecx
	movl	%ecx, 1760(%rbx)
.Ltmp1700:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %ecx
.Ltmp1701:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jge	.LBB12_8
.Ltmp1702:
# %bb.6:                                # %if.then10.x264_nal_end.exit_crit_edge
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	1768(%rbx), %r14
	.loc	0 1251 9                        # x264_src/encoder/encoder.c:1251:9
	jmp	.LBB12_10
.Ltmp1703:
.LBB12_7:                               # %if.then6
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2581 25 is_stmt 1             # x264_src/encoder/encoder.c:2581:25
	movl	$0, (%rbp)
	xorl	%r14d, %r14d
	.loc	0 2582 9                        # x264_src/encoder/encoder.c:2582:9
	jmp	.LBB12_109
.Ltmp1704:
.LBB12_8:                               # %if.then.i.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63                       # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp1705:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp1706:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB12_108
.Ltmp1707:
# %bb.9:                                # %cleanup.thread.i.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r14
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rax
.Ltmp1708:
	#DEBUG_VALUE: new_out <- $r14
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%r14, %rdi
	callq	memcpy@PLT
.Ltmp1709:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp1710:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r14, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
.Ltmp1711:
.LBB12_10:                              # %x264_nal_end.exit
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	xorl	%eax, %eax
	xorl	%r15d, %r15d
.Ltmp1712:
	.p2align	4, 0x90
.LBB12_11:                              # %while.cond
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: idx <- [DW_OP_consts 24, DW_OP_div, DW_OP_stack_value] $r15
	.loc	0 2597 32 is_stmt 1             # x264_src/encoder/encoder.c:2597:32
	movl	4(%r14,%r15), %ecx
	.loc	0 2597 50 is_stmt 0             # x264_src/encoder/encoder.c:2597:50
	addl	$-7, %ecx
.Ltmp1713:
	#DEBUG_VALUE: idx <- [DW_OP_consts 24, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $r15
	addq	$24, %r15
.Ltmp1714:
	decl	%eax
	cmpl	$3, %ecx
	jb	.LBB12_11
.Ltmp1715:
# %bb.12:                               # %while.end
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2601 48 is_stmt 1             # x264_src/encoder/encoder.c:2601:48
	movslq	1760(%rbx), %rcx
	.loc	0 2601 30 is_stmt 0             # x264_src/encoder/encoder.c:2601:30
	leaq	(%rcx,%rcx,2), %rdx
	movq	-8(%r14,%rdx,8), %rsi
	movq	%rsi, 144(%rsp)
	movups	-24(%r14,%rdx,8), %xmm0
	movaps	%xmm0, 128(%rsp)
	.loc	0 2602 19 is_stmt 1             # x264_src/encoder/encoder.c:2602:19
	leaq	(%r14,%r15), %rsi
	addq	$-24, %rsi
	addq	%r15, %r14
	.loc	0 2602 56 is_stmt 0             # x264_src/encoder/encoder.c:2602:56
	addl	%ecx, %eax
	cltq
	.loc	0 2602 76                       # x264_src/encoder/encoder.c:2602:76
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 2602 9                        # x264_src/encoder/encoder.c:2602:9
	movq	%r14, %rdi
	callq	memmove@PLT
.Ltmp1716:
	.loc	0 2603 16 is_stmt 1             # x264_src/encoder/encoder.c:2603:16
	movq	1768(%rbx), %rax
	.loc	0 2603 27 is_stmt 0             # x264_src/encoder/encoder.c:2603:27
	movaps	128(%rsp), %xmm0
	movups	%xmm0, -24(%rax,%r15)
	movq	144(%rsp), %rcx
	movq	%rcx, -8(%rax,%r15)
.Ltmp1717:
.LBB12_13:                              # %if.end56
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	.loc	0 2606 22 is_stmt 1             # x264_src/encoder/encoder.c:2606:22
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	x264_encoder_encapsulate_nals
.Ltmp1718:
	movl	%eax, %r14d
.Ltmp1719:
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2609 26                       # x264_src/encoder/encoder.c:2609:26
	movq	14680(%rbx), %rax
	.loc	0 2609 32 is_stmt 0             # x264_src/encoder/encoder.c:2609:32
	movl	4(%rax), %eax
	.loc	0 2609 21                       # x264_src/encoder/encoder.c:2609:21
	movl	%eax, (%rbp)
	.loc	0 2611 30 is_stmt 1             # x264_src/encoder/encoder.c:2611:30
	movq	14680(%rbx), %rax
	.loc	0 2611 36 is_stmt 0             # x264_src/encoder/encoder.c:2611:36
	movl	80(%rax), %eax
	.loc	0 2611 25                       # x264_src/encoder/encoder.c:2611:25
	movl	%eax, 12(%rbp)
	.loc	0 2613 43 is_stmt 1             # x264_src/encoder/encoder.c:2613:43
	movslq	3340(%rbx), %rax
	.loc	0 2613 25 is_stmt 0             # x264_src/encoder/encoder.c:2613:25
	movq	14680(%rbx), %rcx
	.loc	0 2613 37                       # x264_src/encoder/encoder.c:2613:37
	imulq	16(%rcx), %rax
	movq	%rax, 16(%rcx)
	.loc	0 2613 20                       # x264_src/encoder/encoder.c:2613:20
	movq	%rax, 16(%rbp)
.Ltmp1720:
	.loc	0 2614 19 is_stmt 1             # x264_src/encoder/encoder.c:2614:19
	movl	14616(%rbx), %ecx
	.loc	0 2614 9 is_stmt 0              # x264_src/encoder/encoder.c:2614:9
	testl	%ecx, %ecx
.Ltmp1721:
	.loc	0 2614 9                        # x264_src/encoder/encoder.c:2614:9
	je	.LBB12_16
.Ltmp1722:
# %bb.14:                               # %if.then69
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2617 16 is_stmt 1             # x264_src/encoder/encoder.c:2617:16
	movl	1844(%rbx), %edx
	.loc	0 2617 24 is_stmt 0             # x264_src/encoder/encoder.c:2617:24
	movl	%edx, %eax
	subl	%ecx, %eax
.Ltmp1723:
	.loc	0 2617 13                       # x264_src/encoder/encoder.c:2617:13
	jle	.LBB12_17
.Ltmp1724:
# %bb.15:                               # %if.else103
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2630 90 is_stmt 1             # x264_src/encoder/encoder.c:2630:90
	cltd
	idivl	%ecx
	.loc	0 2630 30 is_stmt 0             # x264_src/encoder/encoder.c:2630:30
	movslq	%edx, %rax
	movq	14640(%r12,%rax,8), %rax
	jmp	.LBB12_26
.Ltmp1725:
.LBB12_16:                              # %if.else125
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2634 29 is_stmt 1             # x264_src/encoder/encoder.c:2634:29
	movq	14680(%rbx), %rcx
	.loc	0 2634 35 is_stmt 0             # x264_src/encoder/encoder.c:2634:35
	movq	24(%rcx), %rcx
	.loc	0 2634 24                       # x264_src/encoder/encoder.c:2634:24
	movq	%rcx, 24(%rbp)
.Ltmp1726:
	.loc	0 2635 24 is_stmt 1             # x264_src/encoder/encoder.c:2635:24
	cmpq	%rcx, %rax
.Ltmp1727:
	.loc	0 2635 9 is_stmt 0              # x264_src/encoder/encoder.c:2635:9
	jl	.LBB12_27
	jmp	.LBB12_28
.Ltmp1728:
.LBB12_17:                              # %if.then75
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2619 20 is_stmt 1             # x264_src/encoder/encoder.c:2619:20
	movslq	3340(%rbx), %rcx
	cmpq	$1, %rcx
.Ltmp1729:
	.loc	0 2619 17 is_stmt 0             # x264_src/encoder/encoder.c:2619:17
	jne	.LBB12_19
.Ltmp1730:
# %bb.18:                               # %if.then79
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2620 37 is_stmt 1             # x264_src/encoder/encoder.c:2620:37
	movq	14680(%rbx), %rax
	.loc	0 2620 43 is_stmt 0             # x264_src/encoder/encoder.c:2620:43
	movq	24(%rax), %rax
	.loc	0 2620 59                       # x264_src/encoder/encoder.c:2620:59
	subq	14624(%rbx), %rax
	.loc	0 2620 17                       # x264_src/encoder/encoder.c:2620:17
	jmp	.LBB12_26
.Ltmp1731:
.LBB12_19:                              # %if.else
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2624 32 is_stmt 1             # x264_src/encoder/encoder.c:2624:32
	cmpl	$1, %edx
.Ltmp1732:
	.loc	0 2624 21 is_stmt 0             # x264_src/encoder/encoder.c:2624:21
	jne	.LBB12_22
.Ltmp1733:
# %bb.20:                               # %if.then86
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2625 62 is_stmt 1             # x264_src/encoder/encoder.c:2625:62
	movq	14680(%rbx), %rax
	.loc	0 2625 84 is_stmt 0             # x264_src/encoder/encoder.c:2625:84
	movq	%rcx, %rsi
	imulq	24(%rax), %rsi
	.loc	0 2625 57                       # x264_src/encoder/encoder.c:2625:57
	movq	%rsi, 14632(%r12)
.Ltmp1734:
	.loc	0 2626 37 is_stmt 1             # x264_src/encoder/encoder.c:2626:37
	movl	1844(%rbx), %edx
	.loc	0 2626 88 is_stmt 0             # x264_src/encoder/encoder.c:2626:88
	movl	3340(%rbx), %ecx
	jmp	.LBB12_23
.Ltmp1735:
.LBB12_22:                              # %if.else.if.end93_crit_edge
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2626 70                       # x264_src/encoder/encoder.c:2626:70
	movq	14632(%r12), %rsi
.Ltmp1736:
.LBB12_23:                              # %if.end93
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 2626 34                       # x264_src/encoder/encoder.c:2626:34
	movslq	%edx, %rax
	.loc	0 2626 45                       # x264_src/encoder/encoder.c:2626:45
	imulq	%rsi, %rax
	.loc	0 2626 85                       # x264_src/encoder/encoder.c:2626:85
	movslq	%ecx, %rsi
	.loc	0 2626 83                       # x264_src/encoder/encoder.c:2626:83
	movq	%rax, %rdx
	orq	%rsi, %rdx
	shrq	$32, %rdx
	je	.LBB12_25
.Ltmp1737:
# %bb.24:
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	cqto
	idivq	%rsi
	jmp	.LBB12_26
.Ltmp1738:
.LBB12_25:
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ecx
.Ltmp1739:
                                        # kill: def $eax killed $eax def $rax
.LBB12_26:                              # %if.end113
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: prev_reordered_pts <- [DW_OP_plus_uconst 14640, DW_OP_stack_value] $r12
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, 24(%rbp)
.Ltmp1740:
	.loc	0 2631 74 is_stmt 1             # x264_src/encoder/encoder.c:2631:74
	movq	14680(%rbx), %rax
	.loc	0 2631 101 is_stmt 0            # x264_src/encoder/encoder.c:2631:101
	movslq	3340(%rbx), %rcx
	.loc	0 2631 96                       # x264_src/encoder/encoder.c:2631:96
	imulq	24(%rax), %rcx
	.loc	0 2631 32                       # x264_src/encoder/encoder.c:2631:32
	movl	1844(%rbx), %eax
	.loc	0 2631 40                       # x264_src/encoder/encoder.c:2631:40
	cltd
	idivl	14616(%rbx)
	.loc	0 2631 9                        # x264_src/encoder/encoder.c:2631:9
	movslq	%edx, %rax
	.loc	0 2631 69                       # x264_src/encoder/encoder.c:2631:69
	movq	%rcx, 14640(%r12,%rax,8)
.Ltmp1741:
	.loc	0 2635 18 is_stmt 1             # x264_src/encoder/encoder.c:2635:18
	movq	16(%rbp), %rax
	.loc	0 2635 35 is_stmt 0             # x264_src/encoder/encoder.c:2635:35
	movq	24(%rbp), %rcx
	.loc	0 2635 24                       # x264_src/encoder/encoder.c:2635:24
	cmpq	%rcx, %rax
.Ltmp1742:
	.loc	0 2635 9                        # x264_src/encoder/encoder.c:2635:9
	jge	.LBB12_28
.Ltmp1743:
.LBB12_27:                              # %if.then134
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2636 9 is_stmt 1              # x264_src/encoder/encoder.c:2636:9
	movl	$.L.str.75, %edx
	movq	%rbx, %rdi
	movl	$1, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp1744:
.LBB12_28:                              # %if.end135
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2638 31                       # x264_src/encoder/encoder.c:2638:31
	movq	14688(%rbx), %rax
	.loc	0 2638 37 is_stmt 0             # x264_src/encoder/encoder.c:2638:37
	movl	100(%rax), %eax
	.loc	0 2638 26                       # x264_src/encoder/encoder.c:2638:26
	movl	%eax, 44(%rbp)
.Ltmp1745:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2641 39 is_stmt 1             # x264_src/encoder/encoder.c:2641:39
	movq	14688(%rbx), %rax
	.loc	0 2641 36 is_stmt 0             # x264_src/encoder/encoder.c:2641:36
	movl	104(%rax), %eax
	.loc	0 2641 34                       # x264_src/encoder/encoder.c:2641:34
	movl	%eax, 48(%rbp)
	.loc	0 2642 36 is_stmt 1             # x264_src/encoder/encoder.c:2642:36
	movq	14688(%rbx), %rax
	.loc	0 2642 33 is_stmt 0             # x264_src/encoder/encoder.c:2642:33
	movq	152(%rax), %rax
	.loc	0 2642 31                       # x264_src/encoder/encoder.c:2642:31
	movq	%rax, 64(%rbp)
.Ltmp1746:
	#DEBUG_VALUE: i <- 1
	.loc	0 2641 39 is_stmt 1             # x264_src/encoder/encoder.c:2641:39
	movq	14688(%rbx), %rax
	.loc	0 2641 36 is_stmt 0             # x264_src/encoder/encoder.c:2641:36
	movl	108(%rax), %eax
	.loc	0 2641 34                       # x264_src/encoder/encoder.c:2641:34
	movl	%eax, 52(%rbp)
	.loc	0 2642 36 is_stmt 1             # x264_src/encoder/encoder.c:2642:36
	movq	14688(%rbx), %rax
	.loc	0 2642 33 is_stmt 0             # x264_src/encoder/encoder.c:2642:33
	movq	160(%rax), %rax
	.loc	0 2642 31                       # x264_src/encoder/encoder.c:2642:31
	movq	%rax, 72(%rbp)
.Ltmp1747:
	#DEBUG_VALUE: i <- 2
	.loc	0 2641 39 is_stmt 1             # x264_src/encoder/encoder.c:2641:39
	movq	14688(%rbx), %rax
	.loc	0 2641 36 is_stmt 0             # x264_src/encoder/encoder.c:2641:36
	movl	112(%rax), %eax
	.loc	0 2641 34                       # x264_src/encoder/encoder.c:2641:34
	movl	%eax, 56(%rbp)
	.loc	0 2642 36 is_stmt 1             # x264_src/encoder/encoder.c:2642:36
	movq	14688(%rbx), %rax
	.loc	0 2642 33 is_stmt 0             # x264_src/encoder/encoder.c:2642:33
	movq	168(%rax), %rax
	.loc	0 2642 31                       # x264_src/encoder/encoder.c:2642:31
	movq	%rax, 80(%rbp)
.Ltmp1748:
	#DEBUG_VALUE: i <- 3
	.loc	0 2645 48 is_stmt 1             # x264_src/encoder/encoder.c:2645:48
	movq	14680(%rbx), %rsi
	.loc	0 2645 5 is_stmt 0              # x264_src/encoder/encoder.c:2645:5
	movq	%r12, %rdi
	callq	x264_frame_push_unused@PLT
.Ltmp1749:
	.loc	0 2650 9 is_stmt 1              # x264_src/encoder/encoder.c:2650:9
	movl	$0, 12(%rsp)
.Ltmp1750:
	.loc	0 2651 45                       # x264_src/encoder/encoder.c:2651:45
	leal	(,%r14,8), %esi
	leaq	12(%rsp), %rdx
	.loc	0 2651 9 is_stmt 0              # x264_src/encoder/encoder.c:2651:9
	movq	%rbx, %rdi
	callq	x264_ratecontrol_end@PLT
.Ltmp1751:
	.loc	0 2651 60                       # x264_src/encoder/encoder.c:2651:60
	testl	%eax, %eax
.Ltmp1752:
	.loc	0 2651 9                        # x264_src/encoder/encoder.c:2651:9
	js	.LBB12_108
.Ltmp1753:
# %bb.29:                               # %if.end161
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- $r12
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- $r13
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	%r13, 24(%rsp)                  # 8-byte Spill
.Ltmp1754:
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	movq	%r12, 40(%rsp)                  # 8-byte Spill
.Ltmp1755:
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	.loc	0 2654 30 is_stmt 1             # x264_src/encoder/encoder.c:2654:30
	movq	14680(%rbx), %rax
	.loc	0 2654 36 is_stmt 0             # x264_src/encoder/encoder.c:2654:36
	movups	12288(%rax), %xmm0
	movdqu	12304(%rax), %xmm1
	movdqu	%xmm1, 112(%rbp)
	movups	%xmm0, 96(%rbp)
	.loc	0 2656 12 is_stmt 1             # x264_src/encoder/encoder.c:2656:12
	movl	12(%rsp), %edx
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2656 19 is_stmt 0             # x264_src/encoder/encoder.c:2656:19
	testl	%edx, %edx
	.loc	0 2656 5                        # x264_src/encoder/encoder.c:2656:5
	jle	.LBB12_39
.Ltmp1756:
# %bb.30:                               # %while.body167.lr.ph
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- $rbp
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leaq	1792(%rbx), %rbp
.Ltmp1757:
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	xorl	%r12d, %r12d
	movabsq	$51539607552, %r13              # imm = 0xC00000000
	jmp	.LBB12_32
.Ltmp1758:
	.p2align	4, 0x90
.LBB12_31:                              # %cleanup210
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2673 72 is_stmt 1             # x264_src/encoder/encoder.c:2673:72
	decl	%esi
	.loc	0 2673 26 is_stmt 0             # x264_src/encoder/encoder.c:2673:26
	movq	%rbx, %rdi
	callq	x264_encoder_encapsulate_nals
.Ltmp1759:
	#DEBUG_VALUE: total_size <- $eax
	.loc	0 2674 20 is_stmt 1             # x264_src/encoder/encoder.c:2674:20
	addl	%eax, %r14d
.Ltmp1760:
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2675 16                       # x264_src/encoder/encoder.c:2675:16
	movl	12(%rsp), %edx
.Ltmp1761:
	.loc	0 2656 19                       # x264_src/encoder/encoder.c:2656:19
	subl	%eax, %edx
.Ltmp1762:
	.loc	0 2675 16                       # x264_src/encoder/encoder.c:2675:16
	movl	%edx, 12(%rsp)
.Ltmp1763:
	.loc	0 2656 5                        # x264_src/encoder/encoder.c:2656:5
	jle	.LBB12_39
.Ltmp1764:
.LBB12_32:                              # %while.body167
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2659 48                       # x264_src/encoder/encoder.c:2659:48
	movl	640(%rbx), %eax
.Ltmp1765:
	.loc	0 2660 22                       # x264_src/encoder/encoder.c:2660:22
	movl	684(%rbx), %esi
.Ltmp1766:
	.loc	0 2659 37                       # x264_src/encoder/encoder.c:2659:37
	movl	$6, %ecx
	subl	%eax, %ecx
.Ltmp1767:
	#DEBUG_VALUE: overhead <- $ecx
	.loc	0 2660 13                       # x264_src/encoder/encoder.c:2660:13
	testl	%esi, %esi
	.loc	0 2660 39 is_stmt 0             # x264_src/encoder/encoder.c:2660:39
	je	.LBB12_35
.Ltmp1768:
# %bb.33:                               # %while.body167
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: overhead <- $ecx
	movl	%esi, %edi
	subl	%edx, %edi
	jge	.LBB12_35
.Ltmp1769:
# %bb.34:                               # %if.then176
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: overhead <- $ecx
	.loc	0 2659 37 is_stmt 1             # x264_src/encoder/encoder.c:2659:37
	addl	%esi, %eax
.Ltmp1770:
	#DEBUG_VALUE: next_size <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_stack_value] $edx, $esi
	.loc	0 2663 28                       # x264_src/encoder/encoder.c:2663:28
	addl	%ecx, %edi
	testl	%edi, %edi
	cmovlel	%r12d, %edi
.Ltmp1771:
	#DEBUG_VALUE: overflow <- $edi
	.loc	0 2664 54                       # x264_src/encoder/encoder.c:2664:54
	subl	%edi, %eax
	addl	$-6, %eax
.Ltmp1772:
	#DEBUG_VALUE: f <- $eax
	.loc	0 0 54 is_stmt 0                # x264_src/encoder/encoder.c:0:54
	movl	%eax, %edx
.Ltmp1773:
	.loc	0 2665 9 is_stmt 1              # x264_src/encoder/encoder.c:2665:9
	jmp	.LBB12_36
.Ltmp1774:
	.p2align	4, 0x90
.LBB12_35:                              # %if.else188
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: overhead <- $ecx
	.loc	0 2667 17                       # x264_src/encoder/encoder.c:2667:17
	subl	%ecx, %edx
	testl	%edx, %edx
	cmovlel	%r12d, %edx
.Ltmp1775:
	#DEBUG_VALUE: f <- $edx
.LBB12_36:                              # %if.end197
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: overhead <- $ecx
	#DEBUG_VALUE: f <- $edx
	#DEBUG_VALUE: f <- $edx
	#DEBUG_VALUE: x264_nal_start:h <- $rbx
	#DEBUG_VALUE: x264_nal_start:i_type <- 12
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- 0
	.loc	0 1239 31                       # x264_src/encoder/encoder.c:1239:31
	movq	1768(%rbx), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%rbx), %rcx
.Ltmp1776:
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp1777:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1241 20 is_stmt 1             # x264_src/encoder/encoder.c:1241:20
	movq	%r13, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
.Ltmp1778:
	#DEBUG_VALUE: bs_pos:s <- $rbp
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %esi
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %esi
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %esi
	subl	1824(%rbx), %esi
	leal	64(%rsi), %edi
.Ltmp1779:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %esi
	testl	%edi, %edi
	cmovnsl	%edi, %esi
	sarl	$3, %esi
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%esi, %rsi
	addq	1784(%rbx), %rsi
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rsi, 16(%rax,%rcx,8)
.Ltmp1780:
	.loc	0 2670 9 is_stmt 1              # x264_src/encoder/encoder.c:2670:9
	movq	%rbx, %rdi
	movq	%rbp, %rsi
	callq	x264_filler_write@PLT
.Ltmp1781:
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%rbx), %rax
	.loc	0 1266 42 is_stmt 0             # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%rbx), %rcx
.Ltmp1782:
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%rbx), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%rbx), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%rbx), %edx
	leal	64(%rdx), %esi
.Ltmp1783:
	.loc	0 1267 63 is_stmt 1             # x264_src/encoder/encoder.c:1267:63
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp1784:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	#DEBUG_VALUE: bs_pos:s <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %edx
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%rbx), %edx
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rax,%rcx,8), %edx
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%edx, 8(%rax,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%rbx), %esi
.Ltmp1785:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %eax
.Ltmp1786:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%esi
	movl	%esi, 1760(%rbx)
.Ltmp1787:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %esi
.Ltmp1788:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jl	.LBB12_31
.Ltmp1789:
# %bb.37:                               # %if.then.i.i1092
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp1790:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp1791:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB12_108
.Ltmp1792:
# %bb.38:                               # %cleanup.thread.i.i1096
                                        #   in Loop: Header=BB12_32 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_nal_end:h <- $rbx
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r15
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rax
.Ltmp1793:
	#DEBUG_VALUE: new_out <- $r15
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%r15, %rdi
	callq	memcpy@PLT
.Ltmp1794:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp1795:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r15, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
.Ltmp1796:
	.loc	0 2673 67                       # x264_src/encoder/encoder.c:2673:67
	movl	1760(%rbx), %esi
	jmp	.LBB12_31
.Ltmp1797:
.LBB12_108:
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	.loc	0 0 67 is_stmt 0                # x264_src/encoder/encoder.c:0:67
	movl	$-1, %r14d
	jmp	.LBB12_109
.Ltmp1798:
.LBB12_39:                              # %while.end214
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2679 22 is_stmt 1             # x264_src/encoder/encoder.c:2679:22
	movl	1760(%rbx), %eax
	movq	16(%rsp), %rcx                  # 8-byte Reload
	.loc	0 2679 13 is_stmt 0             # x264_src/encoder/encoder.c:2679:13
	movl	%eax, (%rcx)
	.loc	0 2680 22 is_stmt 1             # x264_src/encoder/encoder.c:2680:22
	movq	1768(%rbx), %rax
	movq	24(%rsp), %rcx                  # 8-byte Reload
	.loc	0 2680 13 is_stmt 0             # x264_src/encoder/encoder.c:2680:13
	movq	%rax, (%rcx)
	.loc	0 2682 18 is_stmt 1             # x264_src/encoder/encoder.c:2682:18
	movl	$0, 1760(%rbx)
	.loc	0 2684 5                        # x264_src/encoder/encoder.c:2684:5
	movq	%rbx, %rdi
	callq	x264_noise_reduction_update@PLT
.Ltmp1799:
	.loc	0 2687 31                       # x264_src/encoder/encoder.c:2687:31
	movq	704(%rbx), %rsi
.Ltmp1800:
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rsi
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- $rbx
	.loc	0 2052 13                       # x264_src/encoder/encoder.c:2052:13
	cmpq	%rbx, %rsi
.Ltmp1801:
	.loc	0 2052 9 is_stmt 0              # x264_src/encoder/encoder.c:2052:9
	je	.LBB12_41
.Ltmp1802:
# %bb.40:                               # %if.end.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rsi
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- $rbx
	.loc	0 2054 24 is_stmt 1             # x264_src/encoder/encoder.c:2054:24
	leaq	27416(%rbx), %rdi
	.loc	0 2054 50 is_stmt 0             # x264_src/encoder/encoder.c:2054:50
	addq	$27416, %rsi                    # imm = 0x6B18
.Ltmp1803:
	.loc	0 2054 5                        # x264_src/encoder/encoder.c:2054:5
	movl	$2984, %edx                     # imm = 0xBA8
	callq	memcpy@PLT
.Ltmp1804:
.LBB12_41:                              # %x264_thread_sync_stat.exit
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2690 33 is_stmt 1             # x264_src/encoder/encoder.c:2690:33
	movslq	7248(%rbx), %rax
	.loc	0 2690 40 is_stmt 0             # x264_src/encoder/encoder.c:2690:40
	incl	27416(%rbx,%rax,4)
	.loc	0 2691 43 is_stmt 1             # x264_src/encoder/encoder.c:2691:43
	movslq	%r14d, %rax
	.loc	0 2691 32 is_stmt 0             # x264_src/encoder/encoder.c:2691:32
	movslq	7248(%rbx), %rcx
	.loc	0 2691 40                       # x264_src/encoder/encoder.c:2691:40
	addq	%rax, 27440(%rbx,%rcx,8)
	.loc	0 2692 44 is_stmt 1             # x264_src/encoder/encoder.c:2692:44
	movq	14688(%rbx), %rax
	.loc	0 2692 50 is_stmt 0             # x264_src/encoder/encoder.c:2692:50
	movss	92(%rax), %xmm0                 # xmm0 = mem[0],zero,zero,zero
	.loc	0 2692 41                       # x264_src/encoder/encoder.c:2692:41
	cvtss2sd	%xmm0, %xmm0
	.loc	0 2692 30                       # x264_src/encoder/encoder.c:2692:30
	movslq	7248(%rbx), %rax
	.loc	0 2692 38                       # x264_src/encoder/encoder.c:2692:38
	addsd	27480(%rbx,%rax,8), %xmm0
	movsd	%xmm0, 27480(%rbx,%rax,8)
.Ltmp1805:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2695 34 is_stmt 1             # x264_src/encoder/encoder.c:2695:34
	movslq	7248(%rbx), %rax
	.loc	0 2695 9 is_stmt 0              # x264_src/encoder/encoder.c:2695:9
	imulq	$152, %rax, %rax
.Ltmp1806:
	#DEBUG_VALUE: i <- 1
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26724(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	movdqu	27832(%rbx,%rax), %xmm1
	paddq	%xmm0, %xmm1
	movdqu	27848(%rbx,%rax), %xmm0
	movdqu	27864(%rbx,%rax), %xmm2
	movdqu	27880(%rbx,%rax), %xmm3
	movdqu	%xmm1, 27832(%rbx,%rax)
.Ltmp1807:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26732(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm4, %xmm4
	pcmpgtd	%xmm1, %xmm4
	punpckldq	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	paddq	%xmm0, %xmm1
	movdqu	%xmm1, 27848(%rbx,%rax)
.Ltmp1808:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26740(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	paddq	%xmm2, %xmm0
	movdqu	%xmm0, 27864(%rbx,%rax)
.Ltmp1809:
	#DEBUG_VALUE: i <- 6
	#DEBUG_VALUE: i <- 7
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26748(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	paddq	%xmm3, %xmm0
	movdqu	%xmm0, 27880(%rbx,%rax)
.Ltmp1810:
	#DEBUG_VALUE: i <- 8
	#DEBUG_VALUE: i <- 9
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26756(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	movdqu	27896(%rbx,%rax), %xmm1
	paddq	%xmm0, %xmm1
	movdqu	%xmm1, 27896(%rbx,%rax)
.Ltmp1811:
	#DEBUG_VALUE: i <- 10
	#DEBUG_VALUE: i <- 11
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26764(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	movdqu	27912(%rbx,%rax), %xmm1
	paddq	%xmm0, %xmm1
	movdqu	%xmm1, 27912(%rbx,%rax)
.Ltmp1812:
	#DEBUG_VALUE: i <- 12
	.loc	0 2695 34                       # x264_src/encoder/encoder.c:2695:34
	movslq	7248(%rbx), %rax
	.loc	0 2695 9                        # x264_src/encoder/encoder.c:2695:9
	imulq	$152, %rax, %rcx
.Ltmp1813:
	#DEBUG_VALUE: i <- 13
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26772(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	movdqu	27928(%rbx,%rcx), %xmm1
	paddq	%xmm0, %xmm1
	movdqu	27944(%rbx,%rcx), %xmm0
	movdqu	27960(%rbx,%rcx), %xmm2
	movdqu	%xmm1, 27928(%rbx,%rcx)
.Ltmp1814:
	#DEBUG_VALUE: i <- 14
	#DEBUG_VALUE: i <- 15
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26780(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm3, %xmm3
	pcmpgtd	%xmm1, %xmm3
	punpckldq	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0],xmm1[1],xmm3[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	paddq	%xmm0, %xmm1
	movdqu	%xmm1, 27944(%rbx,%rcx)
.Ltmp1815:
	#DEBUG_VALUE: i <- 16
	#DEBUG_VALUE: i <- 17
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movq	26788(%rbx), %xmm0              # xmm0 = mem[0],zero
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm0, %xmm1
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	paddq	%xmm2, %xmm0
	movdqu	%xmm0, 27960(%rbx,%rcx)
.Ltmp1816:
	#DEBUG_VALUE: i <- 18
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	movslq	26796(%rbx), %rdx
	.loc	0 2695 45                       # x264_src/encoder/encoder.c:2695:45
	addq	%rdx, 27976(%rbx,%rcx)
.Ltmp1817:
	#DEBUG_VALUE: i <- 19
	#DEBUG_VALUE: i <- 0
	.loc	0 2695 48                       # x264_src/encoder/encoder.c:2695:48
	pxor	%xmm0, %xmm0
.Ltmp1818:
	.loc	0 2697 9 is_stmt 1              # x264_src/encoder/encoder.c:2697:9
	movq	%rax, %rcx
	shlq	$7, %rcx
	leaq	(%rcx,%rax,8), %rax
.Ltmp1819:
	#DEBUG_VALUE: i <- 1
	.loc	0 2697 52 is_stmt 0             # x264_src/encoder/encoder.c:2697:52
	movq	27076(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	movdqu	28592(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28592(%rbx,%rax)
.Ltmp1820:
	#DEBUG_VALUE: i <- 2
	.loc	0 2697 38                       # x264_src/encoder/encoder.c:2697:38
	movslq	7248(%rbx), %rax
	.loc	0 2697 9                        # x264_src/encoder/encoder.c:2697:9
	movq	%rax, %rcx
	shlq	$7, %rcx
	leaq	(%rcx,%rax,8), %rax
.Ltmp1821:
	#DEBUG_VALUE: i <- 3
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27084(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	movdqu	28608(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	28624(%rbx,%rax), %xmm1
	movdqu	28640(%rbx,%rax), %xmm3
	movdqu	28656(%rbx,%rax), %xmm4
	movdqu	%xmm2, 28608(%rbx,%rax)
.Ltmp1822:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27092(%rbx), %xmm2              # xmm2 = mem[0],zero
	pxor	%xmm5, %xmm5
	pcmpgtd	%xmm2, %xmm5
	punpckldq	%xmm5, %xmm2            # xmm2 = xmm2[0],xmm5[0],xmm2[1],xmm5[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28624(%rbx,%rax)
.Ltmp1823:
	#DEBUG_VALUE: i <- 6
	#DEBUG_VALUE: i <- 7
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27100(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	paddq	%xmm3, %xmm1
	movdqu	%xmm1, 28640(%rbx,%rax)
.Ltmp1824:
	#DEBUG_VALUE: i <- 8
	#DEBUG_VALUE: i <- 9
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27108(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	paddq	%xmm4, %xmm1
	movdqu	%xmm1, 28656(%rbx,%rax)
.Ltmp1825:
	#DEBUG_VALUE: i <- 10
	#DEBUG_VALUE: i <- 11
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27116(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	movdqu	28672(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28672(%rbx,%rax)
.Ltmp1826:
	#DEBUG_VALUE: i <- 12
	#DEBUG_VALUE: i <- 13
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27124(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	movdqu	28688(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28688(%rbx,%rax)
.Ltmp1827:
	#DEBUG_VALUE: i <- 14
	#DEBUG_VALUE: i <- 15
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movq	27132(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	movdqu	28704(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28704(%rbx,%rax)
.Ltmp1828:
	#DEBUG_VALUE: i <- 16
	.loc	0 2697 52                       # x264_src/encoder/encoder.c:2697:52
	movslq	27140(%rbx), %rax
	.loc	0 2697 38                       # x264_src/encoder/encoder.c:2697:38
	movslq	7248(%rbx), %rcx
	.loc	0 2697 9                        # x264_src/encoder/encoder.c:2697:9
	movq	%rcx, %rdx
	shlq	$7, %rdx
	leaq	(%rdx,%rcx,8), %rcx
	.loc	0 2697 49                       # x264_src/encoder/encoder.c:2697:49
	addq	%rax, 28720(%rbx,%rcx)
.Ltmp1829:
	#DEBUG_VALUE: i <- 17
	#DEBUG_VALUE: i <- 1
	.loc	0 2699 41 is_stmt 1             # x264_src/encoder/encoder.c:2699:41
	movq	26812(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2699 38 is_stmt 0             # x264_src/encoder/encoder.c:2699:38
	movdqu	28864(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28864(%rbx)
.Ltmp1830:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 1
	.loc	0 2701 32 is_stmt 1             # x264_src/encoder/encoder.c:2701:32
	movq	27144(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2701 29 is_stmt 0             # x264_src/encoder/encoder.c:2701:29
	movdqu	29904(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29904(%rbx)
.Ltmp1831:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 2701 32                       # x264_src/encoder/encoder.c:2701:32
	movq	27152(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2701 29                       # x264_src/encoder/encoder.c:2701:29
	movdqu	29920(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29920(%rbx)
.Ltmp1832:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2701 32                       # x264_src/encoder/encoder.c:2701:32
	movq	27160(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2701 29                       # x264_src/encoder/encoder.c:2701:29
	movdqu	29936(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29936(%rbx)
.Ltmp1833:
	#DEBUG_VALUE: i <- 6
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: j <- 1
	.loc	0 2704 45 is_stmt 1             # x264_src/encoder/encoder.c:2704:45
	movq	27168(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42 is_stmt 0             # x264_src/encoder/encoder.c:2704:42
	movdqu	29952(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29952(%rbx)
.Ltmp1834:
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: j <- 3
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27176(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	29968(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29968(%rbx)
.Ltmp1835:
	#DEBUG_VALUE: j <- 4
	#DEBUG_VALUE: j <- 5
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27184(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	29984(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29984(%rbx)
.Ltmp1836:
	#DEBUG_VALUE: j <- 6
	#DEBUG_VALUE: j <- 7
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27192(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30000(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30000(%rbx)
.Ltmp1837:
	#DEBUG_VALUE: j <- 8
	#DEBUG_VALUE: j <- 9
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27200(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30016(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30016(%rbx)
.Ltmp1838:
	#DEBUG_VALUE: j <- 10
	#DEBUG_VALUE: j <- 11
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27208(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30032(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30032(%rbx)
.Ltmp1839:
	#DEBUG_VALUE: j <- 12
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 0
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27216(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30048(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30048(%rbx)
.Ltmp1840:
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: j <- 2
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27224(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30064(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30064(%rbx)
.Ltmp1841:
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: j <- 4
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27232(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30080(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30080(%rbx)
.Ltmp1842:
	#DEBUG_VALUE: j <- 5
	#DEBUG_VALUE: j <- 6
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27240(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30096(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30096(%rbx)
.Ltmp1843:
	#DEBUG_VALUE: j <- 7
	#DEBUG_VALUE: j <- 8
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27248(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30112(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30112(%rbx)
.Ltmp1844:
	#DEBUG_VALUE: j <- 9
	#DEBUG_VALUE: j <- 10
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27256(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30128(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30128(%rbx)
.Ltmp1845:
	#DEBUG_VALUE: j <- 11
	#DEBUG_VALUE: j <- 12
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27264(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30144(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30144(%rbx)
.Ltmp1846:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: j <- 1
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27272(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30160(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30160(%rbx)
.Ltmp1847:
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: j <- 3
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27280(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30176(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30176(%rbx)
.Ltmp1848:
	#DEBUG_VALUE: j <- 4
	#DEBUG_VALUE: j <- 5
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27288(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30192(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30192(%rbx)
.Ltmp1849:
	#DEBUG_VALUE: j <- 6
	#DEBUG_VALUE: j <- 7
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27296(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30208(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30208(%rbx)
.Ltmp1850:
	#DEBUG_VALUE: j <- 8
	#DEBUG_VALUE: j <- 9
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27304(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30224(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30224(%rbx)
.Ltmp1851:
	#DEBUG_VALUE: j <- 10
	#DEBUG_VALUE: j <- 11
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27312(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30240(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30240(%rbx)
.Ltmp1852:
	#DEBUG_VALUE: j <- 12
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: j <- 0
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27320(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30256(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30256(%rbx)
.Ltmp1853:
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: j <- 2
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27328(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30272(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30272(%rbx)
.Ltmp1854:
	#DEBUG_VALUE: j <- 3
	#DEBUG_VALUE: j <- 4
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27336(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30288(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30288(%rbx)
.Ltmp1855:
	#DEBUG_VALUE: j <- 5
	#DEBUG_VALUE: j <- 6
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27344(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30304(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30304(%rbx)
.Ltmp1856:
	#DEBUG_VALUE: j <- 7
	#DEBUG_VALUE: j <- 8
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27352(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30320(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30320(%rbx)
.Ltmp1857:
	#DEBUG_VALUE: j <- 9
	#DEBUG_VALUE: j <- 10
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27360(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30336(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30336(%rbx)
.Ltmp1858:
	#DEBUG_VALUE: j <- 11
	#DEBUG_VALUE: j <- 12
	.loc	0 2704 45                       # x264_src/encoder/encoder.c:2704:45
	movq	27368(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2704 42                       # x264_src/encoder/encoder.c:2704:42
	movdqu	30352(%rbx), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 30352(%rbx)
.Ltmp1859:
	#DEBUG_VALUE: j <- 13
	#DEBUG_VALUE: i <- 4
	.loc	0 2705 15 is_stmt 1             # x264_src/encoder/encoder.c:2705:15
	movslq	7248(%rbx), %rax
	cmpq	$2, %rax
.Ltmp1860:
	.loc	0 2705 9 is_stmt 0              # x264_src/encoder/encoder.c:2705:9
	je	.LBB12_57
.Ltmp1861:
# %bb.42:                               # %for.cond366.preheader
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2708 17 is_stmt 1             # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
.Ltmp1862:
	#DEBUG_VALUE: i <- 1
	.loc	0 2708 68 is_stmt 0             # x264_src/encoder/encoder.c:2708:68
	movq	26820(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	28880(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	28896(%rbx,%rax), %xmm1
	movdqu	28912(%rbx,%rax), %xmm3
	movdqu	28928(%rbx,%rax), %xmm4
	movdqu	%xmm2, 28880(%rbx,%rax)
.Ltmp1863:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26828(%rbx), %xmm2              # xmm2 = mem[0],zero
	pxor	%xmm5, %xmm5
	pcmpgtd	%xmm2, %xmm5
	punpckldq	%xmm5, %xmm2            # xmm2 = xmm2[0],xmm5[0],xmm2[1],xmm5[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28896(%rbx,%rax)
.Ltmp1864:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26836(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm3, %xmm1
	movdqu	%xmm1, 28912(%rbx,%rax)
.Ltmp1865:
	#DEBUG_VALUE: i <- 6
	#DEBUG_VALUE: i <- 7
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26844(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm4, %xmm1
	movdqu	%xmm1, 28928(%rbx,%rax)
.Ltmp1866:
	#DEBUG_VALUE: i <- 8
	#DEBUG_VALUE: i <- 9
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26852(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	28944(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28944(%rbx,%rax)
.Ltmp1867:
	#DEBUG_VALUE: i <- 10
	#DEBUG_VALUE: i <- 11
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26860(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	28960(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28960(%rbx,%rax)
.Ltmp1868:
	#DEBUG_VALUE: i <- 12
	#DEBUG_VALUE: i <- 13
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26868(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	28976(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28976(%rbx,%rax)
.Ltmp1869:
	#DEBUG_VALUE: i <- 14
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
.Ltmp1870:
	#DEBUG_VALUE: i <- 15
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26876(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	28992(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 28992(%rbx,%rax)
.Ltmp1871:
	#DEBUG_VALUE: i <- 16
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	26884(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29008(%rbx,%rax)
.Ltmp1872:
	#DEBUG_VALUE: i <- 17
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
.Ltmp1873:
	#DEBUG_VALUE: i <- 18
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26888(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29016(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	29032(%rbx,%rax), %xmm1
	movdqu	29048(%rbx,%rax), %xmm3
	movdqu	29064(%rbx,%rax), %xmm4
	movdqu	%xmm2, 29016(%rbx,%rax)
.Ltmp1874:
	#DEBUG_VALUE: i <- 19
	#DEBUG_VALUE: i <- 20
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26896(%rbx), %xmm2              # xmm2 = mem[0],zero
	pxor	%xmm5, %xmm5
	pcmpgtd	%xmm2, %xmm5
	punpckldq	%xmm5, %xmm2            # xmm2 = xmm2[0],xmm5[0],xmm2[1],xmm5[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29032(%rbx,%rax)
.Ltmp1875:
	#DEBUG_VALUE: i <- 21
	#DEBUG_VALUE: i <- 22
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26904(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm3, %xmm1
	movdqu	%xmm1, 29048(%rbx,%rax)
.Ltmp1876:
	#DEBUG_VALUE: i <- 23
	#DEBUG_VALUE: i <- 24
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26912(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm4, %xmm1
	movdqu	%xmm1, 29064(%rbx,%rax)
.Ltmp1877:
	#DEBUG_VALUE: i <- 25
	#DEBUG_VALUE: i <- 26
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26920(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29080(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29080(%rbx,%rax)
.Ltmp1878:
	#DEBUG_VALUE: i <- 27
	#DEBUG_VALUE: i <- 28
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26928(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29096(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29096(%rbx,%rax)
.Ltmp1879:
	#DEBUG_VALUE: i <- 29
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	26936(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29112(%rbx,%rax)
.Ltmp1880:
	#DEBUG_VALUE: i <- 30
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	26940(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29120(%rbx,%rax)
.Ltmp1881:
	#DEBUG_VALUE: i <- 31
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	26944(%rbx), %rcx
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29128(%rbx,%rax)
.Ltmp1882:
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26948(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29136(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	29152(%rbx,%rax), %xmm1
	movdqu	29168(%rbx,%rax), %xmm3
	movdqu	29184(%rbx,%rax), %xmm4
	movdqu	%xmm2, 29136(%rbx,%rax)
.Ltmp1883:
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26956(%rbx), %xmm2              # xmm2 = mem[0],zero
	pxor	%xmm5, %xmm5
	pcmpgtd	%xmm2, %xmm5
	punpckldq	%xmm5, %xmm2            # xmm2 = xmm2[0],xmm5[0],xmm2[1],xmm5[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29152(%rbx,%rax)
.Ltmp1884:
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26964(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm3, %xmm1
	movdqu	%xmm1, 29168(%rbx,%rax)
.Ltmp1885:
	#DEBUG_VALUE: i <- 6
	#DEBUG_VALUE: i <- 7
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26972(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm4, %xmm1
	movdqu	%xmm1, 29184(%rbx,%rax)
.Ltmp1886:
	#DEBUG_VALUE: i <- 8
	#DEBUG_VALUE: i <- 9
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26980(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29200(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29200(%rbx,%rax)
.Ltmp1887:
	#DEBUG_VALUE: i <- 10
	#DEBUG_VALUE: i <- 11
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26988(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29216(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29216(%rbx,%rax)
.Ltmp1888:
	#DEBUG_VALUE: i <- 12
	#DEBUG_VALUE: i <- 13
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	26996(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29232(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29232(%rbx,%rax)
.Ltmp1889:
	#DEBUG_VALUE: i <- 14
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
.Ltmp1890:
	#DEBUG_VALUE: i <- 15
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27004(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29248(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29248(%rbx,%rax)
.Ltmp1891:
	#DEBUG_VALUE: i <- 16
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	27012(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29264(%rbx,%rax)
.Ltmp1892:
	#DEBUG_VALUE: i <- 17
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	shlq	$9, %rax
.Ltmp1893:
	#DEBUG_VALUE: i <- 18
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27016(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29272(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	29288(%rbx,%rax), %xmm1
	movdqu	29304(%rbx,%rax), %xmm3
	movdqu	29320(%rbx,%rax), %xmm4
	movdqu	%xmm2, 29272(%rbx,%rax)
.Ltmp1894:
	#DEBUG_VALUE: i <- 19
	#DEBUG_VALUE: i <- 20
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27024(%rbx), %xmm2              # xmm2 = mem[0],zero
	pxor	%xmm5, %xmm5
	pcmpgtd	%xmm2, %xmm5
	punpckldq	%xmm5, %xmm2            # xmm2 = xmm2[0],xmm5[0],xmm2[1],xmm5[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29288(%rbx,%rax)
.Ltmp1895:
	#DEBUG_VALUE: i <- 21
	#DEBUG_VALUE: i <- 22
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27032(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm3, %xmm1
	movdqu	%xmm1, 29304(%rbx,%rax)
.Ltmp1896:
	#DEBUG_VALUE: i <- 23
	#DEBUG_VALUE: i <- 24
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27040(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	paddq	%xmm4, %xmm1
	movdqu	%xmm1, 29320(%rbx,%rax)
.Ltmp1897:
	#DEBUG_VALUE: i <- 25
	#DEBUG_VALUE: i <- 26
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27048(%rbx), %xmm1              # xmm1 = mem[0],zero
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm1, %xmm2
	punpckldq	%xmm2, %xmm1            # xmm1 = xmm1[0],xmm2[0],xmm1[1],xmm2[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29336(%rbx,%rax), %xmm2
	paddq	%xmm1, %xmm2
	movdqu	%xmm2, 29336(%rbx,%rax)
.Ltmp1898:
	#DEBUG_VALUE: i <- 27
	#DEBUG_VALUE: i <- 28
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movq	27056(%rbx), %xmm1              # xmm1 = mem[0],zero
	pcmpgtd	%xmm1, %xmm0
	punpckldq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	movdqu	29352(%rbx,%rax), %xmm0
	paddq	%xmm1, %xmm0
	movdqu	%xmm0, 29352(%rbx,%rax)
.Ltmp1899:
	#DEBUG_VALUE: i <- 29
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	27064(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29368(%rbx,%rax)
.Ltmp1900:
	#DEBUG_VALUE: i <- 30
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	27068(%rbx), %rcx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29376(%rbx,%rax)
.Ltmp1901:
	#DEBUG_VALUE: i <- 31
	.loc	0 2708 68                       # x264_src/encoder/encoder.c:2708:68
	movslq	27072(%rbx), %rcx
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	movslq	7248(%rbx), %rax
	.loc	0 2708 17                       # x264_src/encoder/encoder.c:2708:17
	movq	%rax, %rdx
	shlq	$9, %rdx
	.loc	0 2708 65                       # x264_src/encoder/encoder.c:2708:65
	addq	%rcx, 29384(%rbx,%rdx)
	.loc	0 2708 46                       # x264_src/encoder/encoder.c:2708:46
	testq	%rax, %rax
.Ltmp1902:
	#DEBUG_VALUE: i <- 32
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 1, DW_OP_stack_value] 1
	.loc	0 2709 9 is_stmt 1              # x264_src/encoder/encoder.c:2709:9
	jne	.LBB12_52
.Ltmp1903:
# %bb.43:                               # %if.then408
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2711 42                       # x264_src/encoder/encoder.c:2711:42
	movq	14688(%rbx), %rax
	.loc	0 2711 58 is_stmt 0             # x264_src/encoder/encoder.c:2711:58
	movq	14704(%rbx), %rcx
	.loc	0 2711 71                       # x264_src/encoder/encoder.c:2711:71
	movl	56(%rcx), %ecx
	.loc	0 2711 79                       # x264_src/encoder/encoder.c:2711:79
	notl	%ecx
	addl	56(%rax), %ecx
	.loc	0 2711 9                        # x264_src/encoder/encoder.c:2711:9
	movslq	%ecx, %rax
	.loc	0 2711 83                       # x264_src/encoder/encoder.c:2711:83
	incl	27520(%rbx,%rax,4)
.Ltmp1904:
	.loc	0 2712 46 is_stmt 1             # x264_src/encoder/encoder.c:2712:46
	cmpl	$2, 396(%rbx)
.Ltmp1905:
	.loc	0 2712 13 is_stmt 0             # x264_src/encoder/encoder.c:2712:13
	jne	.LBB12_51
.Ltmp1906:
# %bb.44:                               # %for.cond424.preheader
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	cmpl	$0, 14696(%rbx)
	#DEBUG_VALUE: i <- 0
	jle	.LBB12_51
.Ltmp1907:
# %bb.45:                               # %for.cond430.preheader.us.preheader
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: j <- 0
	cmpl	$0, 7616(%rbx)
.Ltmp1908:
	.loc	0 2715 25 is_stmt 1             # x264_src/encoder/encoder.c:2715:25
	je	.LBB12_47
.Ltmp1909:
# %bb.46:                               # %if.then441.us
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: j <- 0
	.loc	0 2717 43                       # x264_src/encoder/encoder.c:2717:43
	incl	30384(%rbx)
.Ltmp1910:
.LBB12_47:                              # %cleanup449.us
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 0
	.loc	0 0 43 is_stmt 0                # x264_src/encoder/encoder.c:0:43
	cmpl	$0, 7680(%rbx)
	.loc	0 2715 25 is_stmt 1             # x264_src/encoder/encoder.c:2715:25
	je	.LBB12_49
.Ltmp1911:
# %bb.48:                               # %if.then441.us.1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 0
	.loc	0 2717 43                       # x264_src/encoder/encoder.c:2717:43
	incl	30388(%rbx)
.Ltmp1912:
.LBB12_49:                              # %cleanup449.us.1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: j <- 0
	.loc	0 0 43 is_stmt 0                # x264_src/encoder/encoder.c:0:43
	cmpl	$0, 7744(%rbx)
	.loc	0 2715 25 is_stmt 1             # x264_src/encoder/encoder.c:2715:25
	je	.LBB12_51
.Ltmp1913:
# %bb.50:                               # %if.then441.us.2
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: j <- 0
	.loc	0 2717 43                       # x264_src/encoder/encoder.c:2717:43
	incl	30392(%rbx)
.Ltmp1914:
.LBB12_51:                              # %if.end456thread-pre-split
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2721 15                       # x264_src/encoder/encoder.c:2721:15
	movl	7248(%rbx), %eax
.Ltmp1915:
.LBB12_52:                              # %if.end456
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2721 22 is_stmt 0             # x264_src/encoder/encoder.c:2721:22
	cmpl	$1, %eax
.Ltmp1916:
	.loc	0 2721 9                        # x264_src/encoder/encoder.c:2721:9
	jne	.LBB12_57
.Ltmp1917:
# %bb.53:                               # %if.then461
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2723 40 is_stmt 1             # x264_src/encoder/encoder.c:2723:40
	movslq	7304(%rbx), %rax
	.loc	0 2723 67 is_stmt 0             # x264_src/encoder/encoder.c:2723:67
	incl	30376(%rbx,%rax,4)
.Ltmp1918:
	.loc	0 2724 13 is_stmt 1             # x264_src/encoder/encoder.c:2724:13
	cmpl	$0, 25820(%rbx)
.Ltmp1919:
	.loc	0 2724 13 is_stmt 0             # x264_src/encoder/encoder.c:2724:13
	je	.LBB12_57
.Ltmp1920:
# %bb.54:                               # %if.then468
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2727 17 is_stmt 1             # x264_src/encoder/encoder.c:2727:17
	movl	30368(%rbx), %ecx
	.loc	0 2727 45 is_stmt 0             # x264_src/encoder/encoder.c:2727:45
	movl	30372(%rbx), %eax
	.loc	0 2727 43                       # x264_src/encoder/encoder.c:2727:43
	leal	(%rax,%rcx), %edx
	.loc	0 2727 71                       # x264_src/encoder/encoder.c:2727:71
	cmpl	16368(%rbx), %edx
.Ltmp1921:
	.loc	0 2727 17                       # x264_src/encoder/encoder.c:2727:17
	jle	.LBB12_56
.Ltmp1922:
# %bb.55:                               # %for.body485.preheader
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	.loc	0 2729 75 is_stmt 1             # x264_src/encoder/encoder.c:2729:75
	leal	(%rcx,%rcx,8), %ecx
	.loc	0 2729 78 is_stmt 0             # x264_src/encoder/encoder.c:2729:78
	movslq	%ecx, %rcx
	imulq	$1717986919, %rcx, %rcx         # imm = 0x66666667
	movq	%rcx, %rdx
	shrq	$63, %rdx
	sarq	$34, %rcx
	addl	%edx, %ecx
.Ltmp1923:
	#DEBUG_VALUE: i <- 1
	.loc	0 2729 75                       # x264_src/encoder/encoder.c:2729:75
	leal	(%rax,%rax,8), %eax
	.loc	0 2729 78                       # x264_src/encoder/encoder.c:2729:78
	cltq
	imulq	$1717986919, %rax, %rax         # imm = 0x66666667
	movq	%rax, %rdx
	shrq	$63, %rdx
	sarq	$34, %rax
	addl	%edx, %eax
.Ltmp1924:
	#DEBUG_VALUE: i <- 2
.LBB12_56:                              # %if.end500
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2731 43 is_stmt 1             # x264_src/encoder/encoder.c:2731:43
	addl	27376(%rbx), %ecx
	movl	%ecx, 30368(%rbx)
.Ltmp1925:
	#DEBUG_VALUE: i <- 1
	addl	27380(%rbx), %eax
	movl	%eax, 30372(%rbx)
.Ltmp1926:
	#DEBUG_VALUE: i <- 2
.LBB12_57:                              # %if.end522
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2735 20                       # x264_src/encoder/encoder.c:2735:20
	movb	$0, 48(%rsp)
.Ltmp1927:
	.loc	0 2736 9                        # x264_src/encoder/encoder.c:2736:9
	cmpl	$0, 476(%rbx)
.Ltmp1928:
	.loc	0 2771 21                       # x264_src/encoder/encoder.c:2771:21
	movl	7248(%rbx), %eax
	.loc	0 2736 9                        # x264_src/encoder/encoder.c:2736:9
	je	.LBB12_73
.Ltmp1929:
# %bb.58:                               # %if.then527
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	cltq
	.loc	0 2739 13 is_stmt 1             # x264_src/encoder/encoder.c:2739:13
	movq	27384(%rbx), %r13
.Ltmp1930:
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	.loc	0 2740 13                       # x264_src/encoder/encoder.c:2740:13
	movq	27392(%rbx), %r12
.Ltmp1931:
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	.loc	0 2741 13                       # x264_src/encoder/encoder.c:2741:13
	movq	27400(%rbx), %r15
.Ltmp1932:
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2744 54                       # x264_src/encoder/encoder.c:2744:54
	leaq	(%r12,%r13), %rcx
	.loc	0 2744 63 is_stmt 0             # x264_src/encoder/encoder.c:2744:63
	addq	%r15, %rcx
	.loc	0 2744 44                       # x264_src/encoder/encoder.c:2744:44
	addq	%rcx, 27592(%rbx,%rax,8)
	.loc	0 2745 99 is_stmt 1             # x264_src/encoder/encoder.c:2745:99
	movl	20(%rbx), %eax
	.loc	0 2745 88 is_stmt 0             # x264_src/encoder/encoder.c:2745:88
	imull	24(%rbx), %eax
	.loc	0 2745 107                      # x264_src/encoder/encoder.c:2745:107
	leal	(%rax,%rax,2), %eax
	.loc	0 2745 127                      # x264_src/encoder/encoder.c:2745:127
	movl	%eax, %edx
	shrl	$31, %edx
	addl	%eax, %edx
	sarl	%edx
.Ltmp1933:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $edx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $rcx
	.loc	0 58 20 is_stmt 1               # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sd	%rcx, %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm1, %xmm1
	cvtsi2sd	%edx, %xmm1
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm1
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm1, %xmm0
.Ltmp1934:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movss	.LCPI12_1(%rip), %xmm3          # xmm3 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
.Ltmp1935:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
	movaps	%xmm3, %xmm1
.Ltmp1936:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_60
.Ltmp1937:
# %bb.59:                               # %if.end.i1105
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $edx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $rcx
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1938:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movss	.LCPI12_1(%rip), %xmm3          # xmm3 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	xorps	%xmm1, %xmm1
	cvtsd2ss	%xmm0, %xmm1
.Ltmp1939:
.LBB12_60:                              # %x264_psnr.exit
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2745 49 is_stmt 1             # x264_src/encoder/encoder.c:2745:49
	xorps	%xmm0, %xmm0
	cvtss2sd	%xmm1, %xmm0
	.loc	0 2745 38 is_stmt 0             # x264_src/encoder/encoder.c:2745:38
	movslq	7248(%rbx), %rax
	.loc	0 2745 46                       # x264_src/encoder/encoder.c:2745:46
	addsd	27632(%rbx,%rax,8), %xmm0
	movsd	%xmm0, 27632(%rbx,%rax,8)
	.loc	0 2746 95 is_stmt 1             # x264_src/encoder/encoder.c:2746:95
	movl	24(%rbx), %eax
	.loc	0 2746 84 is_stmt 0             # x264_src/encoder/encoder.c:2746:84
	imull	20(%rbx), %eax
.Ltmp1940:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $eax
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r13
	.loc	0 58 20 is_stmt 1               # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r13, %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm1, %xmm1
	cvtsi2sd	%eax, %xmm1
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm1
	movsd	%xmm0, 16(%rsp)                 # 8-byte Spill
.Ltmp1941:
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- undef
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm1, %xmm0
.Ltmp1942:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
	movaps	%xmm3, %xmm1
.Ltmp1943:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_62
.Ltmp1944:
# %bb.61:                               # %if.end.i1112
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $eax
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r13
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1945:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movss	.LCPI12_1(%rip), %xmm3          # xmm3 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	xorps	%xmm1, %xmm1
	cvtsd2ss	%xmm0, %xmm1
.Ltmp1946:
.LBB12_62:                              # %x264_psnr.exit1116
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_plus_uconst 24] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2746 48 is_stmt 1             # x264_src/encoder/encoder.c:2746:48
	xorps	%xmm0, %xmm0
	cvtss2sd	%xmm1, %xmm0
	.loc	0 2746 37 is_stmt 0             # x264_src/encoder/encoder.c:2746:37
	movslq	7248(%rbx), %rax
	.loc	0 2746 45                       # x264_src/encoder/encoder.c:2746:45
	addsd	27672(%rbx,%rax,8), %xmm0
	movsd	%xmm0, 27672(%rbx,%rax,8)
	.loc	0 2747 95 is_stmt 1             # x264_src/encoder/encoder.c:2747:95
	movl	24(%rbx), %eax
	.loc	0 2747 84 is_stmt 0             # x264_src/encoder/encoder.c:2747:84
	imull	20(%rbx), %eax
	.loc	0 2747 104                      # x264_src/encoder/encoder.c:2747:104
	leal	3(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$2, %ecx
.Ltmp1947:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r12
	.loc	0 58 20 is_stmt 1               # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r12, %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm1, %xmm1
	cvtsi2sd	%ecx, %xmm1
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm1
	movsd	%xmm0, 24(%rsp)                 # 8-byte Spill
.Ltmp1948:
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- undef
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm1, %xmm0
.Ltmp1949:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
	movaps	%xmm3, %xmm1
.Ltmp1950:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_64
.Ltmp1951:
# %bb.63:                               # %if.end.i1123
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r12
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1952:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movss	.LCPI12_1(%rip), %xmm3          # xmm3 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	xorps	%xmm1, %xmm1
	cvtsd2ss	%xmm0, %xmm1
.Ltmp1953:
.LBB12_64:                              # %x264_psnr.exit1127
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2747 48 is_stmt 1             # x264_src/encoder/encoder.c:2747:48
	xorps	%xmm0, %xmm0
	cvtss2sd	%xmm1, %xmm0
	.loc	0 2747 37 is_stmt 0             # x264_src/encoder/encoder.c:2747:37
	movslq	7248(%rbx), %rax
	.loc	0 2747 45                       # x264_src/encoder/encoder.c:2747:45
	addsd	27712(%rbx,%rax,8), %xmm0
	movsd	%xmm0, 27712(%rbx,%rax,8)
	.loc	0 2748 95 is_stmt 1             # x264_src/encoder/encoder.c:2748:95
	movl	24(%rbx), %eax
	.loc	0 2748 84 is_stmt 0             # x264_src/encoder/encoder.c:2748:84
	imull	20(%rbx), %eax
	.loc	0 2748 104                      # x264_src/encoder/encoder.c:2748:104
	leal	3(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$2, %ecx
.Ltmp1954:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r15
	.loc	0 58 20 is_stmt 1               # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r15, %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm1, %xmm1
	cvtsi2sd	%ecx, %xmm1
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm1
	movsd	%xmm0, 32(%rsp)                 # 8-byte Spill
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm1, %xmm0
.Ltmp1955:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
.Ltmp1956:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_66
.Ltmp1957:
# %bb.65:                               # %if.end.i1134
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r15
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1958:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	xorps	%xmm3, %xmm3
	cvtsd2ss	%xmm0, %xmm3
.Ltmp1959:
.LBB12_66:                              # %x264_psnr.exit1138
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2748 48 is_stmt 1             # x264_src/encoder/encoder.c:2748:48
	xorps	%xmm0, %xmm0
	cvtss2sd	%xmm3, %xmm0
	.loc	0 2748 37 is_stmt 0             # x264_src/encoder/encoder.c:2748:37
	movslq	7248(%rbx), %rax
	.loc	0 2748 45                       # x264_src/encoder/encoder.c:2748:45
	addsd	27752(%rbx,%rax,8), %xmm0
	movsd	%xmm0, 27752(%rbx,%rax,8)
	.loc	0 2751 66 is_stmt 1             # x264_src/encoder/encoder.c:2751:66
	movl	24(%rbx), %eax
	.loc	0 2751 55 is_stmt 0             # x264_src/encoder/encoder.c:2751:55
	imull	20(%rbx), %eax
.Ltmp1960:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $eax
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r13
	.loc	0 58 55 is_stmt 1               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm0, %xmm0
	cvtsi2sd	%eax, %xmm0
	.loc	0 58 53 is_stmt 0               # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm0
	movsd	16(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm0, %xmm1
.Ltmp1961:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm1
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI12_4(%rip), %xmm4          # xmm4 = [1.0E+2,0.0E+0]
.Ltmp1962:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm1, %xmm2
	movaps	%xmm4, %xmm5
.Ltmp1963:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_68
.Ltmp1964:
# %bb.67:                               # %if.end.i1145
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $eax
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r13
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm1
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movapd	%xmm1, %xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1965:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	.LCPI12_4(%rip), %xmm4          # xmm4 = [1.0E+2,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
.Ltmp1966:
	.loc	0 2752 66 is_stmt 1             # x264_src/encoder/encoder.c:2752:66
	movl	24(%rbx), %eax
	.loc	0 2752 55 is_stmt 0             # x264_src/encoder/encoder.c:2752:55
	imull	20(%rbx), %eax
	.loc	0 2751 19 is_stmt 1             # x264_src/encoder/encoder.c:2751:19
	xorps	%xmm5, %xmm5
	cvtss2sd	%xmm0, %xmm5
.Ltmp1967:
.LBB12_68:                              # %x264_psnr.exit1149
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 2752 75                       # x264_src/encoder/encoder.c:2752:75
	leal	3(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$2, %ecx
.Ltmp1968:
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r12
	.loc	0 58 55                         # x264_src/encoder/encoder.c:58:55
	xorps	%xmm3, %xmm3
	cvtsi2sd	%ecx, %xmm3
	.loc	0 58 53 is_stmt 0               # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm3
	movsd	24(%rsp), %xmm0                 # 8-byte Reload
                                        # xmm0 = mem[0],zero
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm3, %xmm0
.Ltmp1969:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
	movaps	%xmm4, %xmm1
	movsd	%xmm5, 16(%rsp)                 # 8-byte Spill
.Ltmp1970:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_70
.Ltmp1971:
# %bb.69:                               # %if.end.i1156
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_size <- [DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r12
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1972:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	.LCPI12_4(%rip), %xmm4          # xmm4 = [1.0E+2,0.0E+0]
	movsd	.LCPI12_2(%rip), %xmm2          # xmm2 = [1.0E-10,0.0E+0]
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	xorps	%xmm1, %xmm1
	cvtsd2ss	%xmm0, %xmm1
.Ltmp1973:
	.loc	0 2753 66 is_stmt 1             # x264_src/encoder/encoder.c:2753:66
	movl	24(%rbx), %eax
	.loc	0 2753 55 is_stmt 0             # x264_src/encoder/encoder.c:2753:55
	imull	20(%rbx), %eax
	.loc	0 2753 75                       # x264_src/encoder/encoder.c:2753:75
	leal	3(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$2, %ecx
.Ltmp1974:
	.loc	0 58 55 is_stmt 1               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm3, %xmm3
	cvtsi2sd	%ecx, %xmm3
	.loc	0 58 53 is_stmt 0               # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI12_0(%rip), %xmm3
.Ltmp1975:
	.loc	0 2752 19 is_stmt 1             # x264_src/encoder/encoder.c:2752:19
	cvtss2sd	%xmm1, %xmm1
	movsd	16(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
.Ltmp1976:
.LBB12_70:                              # %x264_psnr.exit1160
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r15
	#DEBUG_VALUE: x264_psnr:i_size <- undef
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/encoder.c:0:19
	movsd	32(%rsp), %xmm0                 # 8-byte Reload
                                        # xmm0 = mem[0],zero
.Ltmp1977:
	.loc	0 58 34 is_stmt 1               # x264_src/encoder/encoder.c:58:34
	divsd	%xmm3, %xmm0
.Ltmp1978:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 59 15                         # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm2
.Ltmp1979:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB12_72
.Ltmp1980:
# %bb.71:                               # %if.end.i1167
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	#DEBUG_VALUE: x264_psnr:i_sqe <- $r15
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm1, 24(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp1981:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	24(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	16(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI12_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
.Ltmp1982:
	.loc	0 2753 19 is_stmt 1             # x264_src/encoder/encoder.c:2753:19
	xorps	%xmm4, %xmm4
	cvtss2sd	%xmm0, %xmm4
.Ltmp1983:
.LBB12_72:                              # %x264_psnr.exit1171
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 0 64] $r13
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 64 64] $r12
	#DEBUG_VALUE: ssd <- [DW_OP_LLVM_fragment 128 64] $r15
	.loc	0 0 19 is_stmt 0                # x264_src/encoder/encoder.c:0:19
	leaq	48(%rsp), %rdi
	.loc	0 2750 9 is_stmt 1              # x264_src/encoder/encoder.c:2750:9
	movl	$80, %esi
	movl	$.L.str.76, %edx
	movaps	%xmm5, %xmm0
	movaps	%xmm4, %xmm2
	movb	$3, %al
	callq	snprintf@PLT
.Ltmp1984:
	.loc	0 2771 21                       # x264_src/encoder/encoder.c:2771:21
	movl	7248(%rbx), %eax
.Ltmp1985:
.LBB12_73:                              # %if.end648
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2756 9                        # x264_src/encoder/encoder.c:2756:9
	cmpl	$0, 480(%rbx)
.Ltmp1986:
	.loc	0 2756 9 is_stmt 0              # x264_src/encoder/encoder.c:2756:9
	je	.LBB12_75
.Ltmp1987:
# %bb.74:                               # %if.then652
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2758 39 is_stmt 1             # x264_src/encoder/encoder.c:2758:39
	movsd	27408(%rbx), %xmm1              # xmm1 = mem[0],zero
	.loc	0 2759 37                       # x264_src/encoder/encoder.c:2759:37
	movl	20(%rbx), %ecx
	.loc	0 2759 65 is_stmt 0             # x264_src/encoder/encoder.c:2759:65
	movl	24(%rbx), %edx
	.loc	0 2759 44                       # x264_src/encoder/encoder.c:2759:44
	addl	$-6, %ecx
	.loc	0 2759 47                       # x264_src/encoder/encoder.c:2759:47
	sarl	$2, %ecx
	.loc	0 2759 73                       # x264_src/encoder/encoder.c:2759:73
	addl	$-6, %edx
	.loc	0 2759 76                       # x264_src/encoder/encoder.c:2759:76
	sarl	$2, %edx
	.loc	0 2759 52                       # x264_src/encoder/encoder.c:2759:52
	imull	%ecx, %edx
	.loc	0 2759 25                       # x264_src/encoder/encoder.c:2759:25
	xorps	%xmm0, %xmm0
	cvtsi2sd	%edx, %xmm0
	.loc	0 2759 23                       # x264_src/encoder/encoder.c:2759:23
	divsd	%xmm0, %xmm1
.Ltmp1988:
	#DEBUG_VALUE: ssim_y <- $xmm1
	.loc	0 0 23                          # x264_src/encoder/encoder.c:0:23
	movsd	%xmm1, 16(%rsp)                 # 8-byte Spill
.Ltmp1989:
	#DEBUG_VALUE: ssim_y <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 2760 9 is_stmt 1              # x264_src/encoder/encoder.c:2760:9
	cltq
	movsd	27792(%rbx,%rax,8), %xmm0       # xmm0 = mem[0],zero
	.loc	0 2760 45 is_stmt 0             # x264_src/encoder/encoder.c:2760:45
	addsd	%xmm1, %xmm0
	movsd	%xmm0, 27792(%rbx,%rax,8)
	leaq	48(%rsp), %rdi
	.loc	0 2761 33 is_stmt 1             # x264_src/encoder/encoder.c:2761:33
	callq	strlen@PLT
.Ltmp1990:
	.loc	0 2761 31 is_stmt 0             # x264_src/encoder/encoder.c:2761:31
	leaq	(%rsp,%rax), %rdi
	addq	$48, %rdi
	movl	$80, %esi
	.loc	0 2761 57                       # x264_src/encoder/encoder.c:2761:57
	subq	%rax, %rsi
	.loc	0 2761 9                        # x264_src/encoder/encoder.c:2761:9
	movl	$.L.str.77, %edx
	movsd	16(%rsp), %xmm0                 # 8-byte Reload
                                        # xmm0 = mem[0],zero
	movb	$1, %al
	callq	snprintf@PLT
.Ltmp1991:
	.loc	0 2771 21 is_stmt 1             # x264_src/encoder/encoder.c:2771:21
	movl	7248(%rbx), %eax
.Ltmp1992:
.LBB12_75:                              # %if.end678
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	leaq	27416(%rbx), %r12
	.loc	0 2764 21 is_stmt 1             # x264_src/encoder/encoder.c:2764:21
	movb	$0, 127(%rsp)
	.loc	0 2769 18                       # x264_src/encoder/encoder.c:2769:18
	movq	14688(%rbx), %rdx
	.loc	0 2769 24 is_stmt 0             # x264_src/encoder/encoder.c:2769:24
	movss	92(%rdx), %xmm0                 # xmm0 = mem[0],zero,zero,zero
	.loc	0 2769 15                       # x264_src/encoder/encoder.c:2769:15
	cvtss2sd	%xmm0, %xmm0
	.loc	0 2768 18 is_stmt 1             # x264_src/encoder/encoder.c:2768:18
	movl	1844(%rbx), %ecx
	.loc	0 2770 18                       # x264_src/encoder/encoder.c:2770:18
	movl	1860(%rbx), %r8d
	.loc	0 2771 15                       # x264_src/encoder/encoder.c:2771:15
	testl	%eax, %eax
	movl	$80, %esi
	movl	$66, %edi
	cmovel	%esi, %edi
	.loc	0 2771 28 is_stmt 0             # x264_src/encoder/encoder.c:2771:28
	cmpl	$2, %eax
	movl	$73, %r9d
	.loc	0 2771 15                       # x264_src/encoder/encoder.c:2771:15
	cmovnel	%edi, %r9d
	.loc	0 2772 24 is_stmt 1             # x264_src/encoder/encoder.c:2772:24
	movl	(%rdx), %r10d
	.loc	0 2773 29                       # x264_src/encoder/encoder.c:2773:29
	movl	26800(%rbx), %r11d
	.loc	0 2774 29                       # x264_src/encoder/encoder.c:2774:29
	movl	26804(%rbx), %r15d
	.loc	0 2775 29                       # x264_src/encoder/encoder.c:2775:29
	movl	26808(%rbx), %r13d
	leaq	48(%rsp), %rbp
	.loc	0 2766 5                        # x264_src/encoder/encoder.c:2766:5
	movl	$.L.str.78, %edx
	movq	%rbx, %rdi
	movl	$3, %esi
	movb	$1, %al
	pushq	%rbp
.Ltmp1993:
	.cfi_adjust_cfa_offset 8
	pushq	%r14
	.cfi_adjust_cfa_offset 8
	pushq	%r13
	.cfi_adjust_cfa_offset 8
	pushq	%r15
	.cfi_adjust_cfa_offset 8
	pushq	%r11
	.cfi_adjust_cfa_offset 8
	pushq	%r10
	.cfi_adjust_cfa_offset 8
	callq	x264_log@PLT
.Ltmp1994:
	addq	$48, %rsp
	.cfi_adjust_cfa_offset -48
	.loc	0 2780 28                       # x264_src/encoder/encoder.c:2780:28
	movq	704(%rbx), %rdi
.Ltmp1995:
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- $rdi
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rbx
	.loc	0 2052 13                       # x264_src/encoder/encoder.c:2052:13
	cmpq	%rbx, %rdi
.Ltmp1996:
	.loc	0 2052 9 is_stmt 0              # x264_src/encoder/encoder.c:2052:9
	je	.LBB12_77
.Ltmp1997:
# %bb.76:                               # %if.end.i1173
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- $rdi
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rbx
	.loc	0 2054 24 is_stmt 1             # x264_src/encoder/encoder.c:2054:24
	addq	$27416, %rdi                    # imm = 0x6B18
.Ltmp1998:
	.loc	0 2054 5 is_stmt 0              # x264_src/encoder/encoder.c:2054:5
	movl	$2984, %edx                     # imm = 0xBA8
	movq	%r12, %rsi
	callq	memcpy@PLT
.Ltmp1999:
.LBB12_77:                              # %x264_thread_sync_stat.exit1176
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rbx
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movq	40(%rsp), %rdi                  # 8-byte Reload
.Ltmp2000:
	.loc	0 2052 13 is_stmt 1             # x264_src/encoder/encoder.c:2052:13
	cmpq	%rbx, %rdi
.Ltmp2001:
	.loc	0 2052 9 is_stmt 0              # x264_src/encoder/encoder.c:2052:9
	je	.LBB12_79
.Ltmp2002:
# %bb.78:                               # %if.end.i1178
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_thread_sync_stat:dst <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_thread_sync_stat:src <- $rbx
	.loc	0 2054 24 is_stmt 1             # x264_src/encoder/encoder.c:2054:24
	addq	$27416, %rdi                    # imm = 0x6B18
	.loc	0 2054 5 is_stmt 0              # x264_src/encoder/encoder.c:2054:5
	movl	$2984, %edx                     # imm = 0xBA8
	movq	%r12, %rsi
	callq	memcpy@PLT
.Ltmp2003:
.LBB12_79:                              # %x264_thread_sync_stat.exit1181
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	.loc	0 2803 29 is_stmt 1             # x264_src/encoder/encoder.c:2803:29
	movl	14696(%rbx), %eax
	.loc	0 2803 24 is_stmt 0             # x264_src/encoder/encoder.c:2803:24
	testl	%eax, %eax
.Ltmp2004:
	.loc	0 2803 6                        # x264_src/encoder/encoder.c:2803:6
	jle	.LBB12_85
.Ltmp2005:
# %bb.80:                               # %for.body713.lr.ph
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- 0
	.loc	0 0 6                           # x264_src/encoder/encoder.c:0:6
	xorl	%r15d, %r15d
	jmp	.LBB12_82
.Ltmp2006:
	.p2align	4, 0x90
.LBB12_81:                              # %for.inc731
                                        #   in Loop: Header=BB12_82 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- $r15
	.loc	0 2803 38                       # x264_src/encoder/encoder.c:2803:38
	incq	%r15
.Ltmp2007:
	#DEBUG_VALUE: i <- $r15
	.loc	0 2803 24                       # x264_src/encoder/encoder.c:2803:24
	movslq	%eax, %rcx
	cmpq	%rcx, %r15
.Ltmp2008:
	.loc	0 2803 6                        # x264_src/encoder/encoder.c:2803:6
	jge	.LBB12_85
.Ltmp2009:
.LBB12_82:                              # %for.body713
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- $r15
	.loc	0 2804 14 is_stmt 1             # x264_src/encoder/encoder.c:2804:14
	movq	14704(%rbx,%r15,8), %rsi
	testq	%rsi, %rsi
	.loc	0 2804 26 is_stmt 0             # x264_src/encoder/encoder.c:2804:26
	je	.LBB12_81
.Ltmp2010:
# %bb.83:                               # %land.lhs.true718
                                        #   in Loop: Header=BB12_82 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- $r15
	.loc	0 2804 29                       # x264_src/encoder/encoder.c:2804:29
	cmpl	$0, 3520(%rsi)
.Ltmp2011:
	.loc	0 2804 14                       # x264_src/encoder/encoder.c:2804:14
	je	.LBB12_81
.Ltmp2012:
# %bb.84:                               # %if.then723
                                        #   in Loop: Header=BB12_82 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: i <- $r15
	.loc	0 2806 14 is_stmt 1             # x264_src/encoder/encoder.c:2806:14
	movq	%rbx, %rdi
	callq	x264_frame_push_blank_unused@PLT
.Ltmp2013:
	.loc	0 2807 26                       # x264_src/encoder/encoder.c:2807:26
	movq	$0, 14704(%rbx,%r15,8)
.Ltmp2014:
	.loc	0 2803 29                       # x264_src/encoder/encoder.c:2803:29
	movl	14696(%rbx), %eax
	jmp	.LBB12_81
.Ltmp2015:
.LBB12_85:                              # %for.cond.cleanup712
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2812 10                       # x264_src/encoder/encoder.c:2812:10
	movl	tga_dump_rate(%rip), %esi
	.loc	0 2812 24 is_stmt 0             # x264_src/encoder/encoder.c:2812:24
	testl	%esi, %esi
.Ltmp2016:
	.loc	0 2812 10                       # x264_src/encoder/encoder.c:2812:10
	jle	.LBB12_98
.Ltmp2017:
# %bb.86:                               # %if.then737
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2813 15 is_stmt 1             # x264_src/encoder/encoder.c:2813:15
	movq	14688(%rbx), %rax
	.loc	0 2813 21 is_stmt 0             # x264_src/encoder/encoder.c:2813:21
	movl	56(%rax), %ecx
	.loc	0 2813 29                       # x264_src/encoder/encoder.c:2813:29
	movl	%ecx, %eax
	cltd
	idivl	%esi
	.loc	0 2813 45                       # x264_src/encoder/encoder.c:2813:45
	testl	%edx, %edx
	.loc	0 2813 50                       # x264_src/encoder/encoder.c:2813:50
	je	.LBB12_88
.Ltmp2018:
# %bb.87:                               # %lor.lhs.false743
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2813 84                       # x264_src/encoder/encoder.c:2813:84
	movl	36(%rbx), %eax
	.loc	0 2813 97                       # x264_src/encoder/encoder.c:2813:97
	decl	%eax
	.loc	0 2813 71                       # x264_src/encoder/encoder.c:2813:71
	cmpl	%eax, %ecx
.Ltmp2019:
	.loc	0 2813 10                       # x264_src/encoder/encoder.c:2813:10
	jne	.LBB12_98
.Ltmp2020:
.LBB12_88:                              # %if.then750
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	.loc	0 85 55 is_stmt 1               # x264_src/encoder/encoder.c:85:55
	movq	seek_val@GOTPCREL(%rip), %rax
	.loc	0 85 54 is_stmt 0               # x264_src/encoder/encoder.c:85:54
	addl	(%rax), %ecx
	leaq	128(%rsp), %r15
	.loc	0 85 7                          # x264_src/encoder/encoder.c:85:7
	movl	$.L.str.79, %esi
	movq	%r15, %rdi
	movl	%ecx, %edx
	xorl	%eax, %eax
	callq	sprintf@PLT
.Ltmp2021:
	.loc	0 86 12 is_stmt 1               # x264_src/encoder/encoder.c:86:12
	movl	$.L.str.80, %esi
	movq	%r15, %rdi
	callq	fopen@PLT
.Ltmp2022:
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $rax
	.loc	0 87 12                         # x264_src/encoder/encoder.c:87:12
	testq	%rax, %rax
.Ltmp2023:
	.loc	0 87 11 is_stmt 0               # x264_src/encoder/encoder.c:87:11
	je	.LBB12_98
.Ltmp2024:
# %bb.89:                               # %for.cond.preheader.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r15
.Ltmp2025:
	#DEBUG_VALUE: i <- 0
	.loc	0 90 30 is_stmt 1               # x264_src/encoder/encoder.c:90:30
	movq	14688(%rbx), %rdx
	.loc	0 90 25 is_stmt 0               # x264_src/encoder/encoder.c:90:25
	cmpl	$0, 100(%rdx)
.Ltmp2026:
	.loc	0 90 7                          # x264_src/encoder/encoder.c:90:7
	jle	.LBB12_97
.Ltmp2027:
# %bb.90:                               # %for.cond4.preheader.lr.ph.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- 0
	.loc	0 91 31 is_stmt 1               # x264_src/encoder/encoder.c:91:31
	movl	24(%rbx), %eax
	xorl	%r12d, %r12d
	jmp	.LBB12_92
.Ltmp2028:
	.p2align	4, 0x90
.LBB12_91:                              # %for.cond.cleanup8.i
                                        #   in Loop: Header=BB12_92 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 90 46                         # x264_src/encoder/encoder.c:90:46
	incq	%r12
.Ltmp2029:
	#DEBUG_VALUE: i <- $r12
	.loc	0 90 36 is_stmt 0               # x264_src/encoder/encoder.c:90:36
	movslq	100(%rdx), %rcx
	.loc	0 90 25                         # x264_src/encoder/encoder.c:90:25
	cmpq	%rcx, %r12
.Ltmp2030:
	.loc	0 90 7                          # x264_src/encoder/encoder.c:90:7
	jge	.LBB12_97
.Ltmp2031:
.LBB12_92:                              # %for.cond4.preheader.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB12_94 Depth 2
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 0 7                           # x264_src/encoder/encoder.c:0:7
	testq	%r12, %r12
	setne	%bpl
.Ltmp2032:
	#DEBUG_VALUE: y <- 0
	.loc	0 91 40 is_stmt 1               # x264_src/encoder/encoder.c:91:40
	movl	%eax, %esi
	movl	%ebp, %ecx
	sarl	%cl, %esi
	.loc	0 91 20 is_stmt 0               # x264_src/encoder/encoder.c:91:20
	testl	%esi, %esi
.Ltmp2033:
	.loc	0 91 2                          # x264_src/encoder/encoder.c:91:2
	jle	.LBB12_91
.Ltmp2034:
# %bb.93:                               # %for.body9.i.preheader
                                        #   in Loop: Header=BB12_92 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: y <- 0
	.loc	0 0 2                           # x264_src/encoder/encoder.c:0:2
	xorl	%r13d, %r13d
.Ltmp2035:
	.p2align	4, 0x90
.LBB12_94:                              # %for.body9.i
                                        #   Parent Loop BB12_92 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: y <- $r13d
	.loc	0 92 16 is_stmt 1               # x264_src/encoder/encoder.c:92:16
	movq	14688(%rbx), %rax
	.loc	0 92 33 is_stmt 0               # x264_src/encoder/encoder.c:92:33
	movslq	104(%rax,%r12,4), %rdi
	.loc	0 92 32                         # x264_src/encoder/encoder.c:92:32
	movslq	%r13d, %r13
.Ltmp2036:
	imulq	%r13, %rdi
	.loc	0 92 13                         # x264_src/encoder/encoder.c:92:13
	addq	152(%rax,%r12,8), %rdi
	.loc	0 92 68                         # x264_src/encoder/encoder.c:92:68
	movl	20(%rbx), %eax
	.loc	0 92 76                         # x264_src/encoder/encoder.c:92:76
	movl	%ebp, %ecx
	sarl	%cl, %eax
	.loc	0 92 59                         # x264_src/encoder/encoder.c:92:59
	movslq	%eax, %rdx
	.loc	0 92 4                          # x264_src/encoder/encoder.c:92:4
	movl	$1, %esi
	movq	%r15, %rcx
	callq	fwrite@PLT
.Ltmp2037:
	.loc	0 91 49 is_stmt 1               # x264_src/encoder/encoder.c:91:49
	incl	%r13d
.Ltmp2038:
	#DEBUG_VALUE: y <- $r13d
	.loc	0 91 31 is_stmt 0               # x264_src/encoder/encoder.c:91:31
	movl	24(%rbx), %eax
	.loc	0 91 40                         # x264_src/encoder/encoder.c:91:40
	movl	%eax, %edx
	movl	%ebp, %ecx
	sarl	%cl, %edx
	.loc	0 91 20                         # x264_src/encoder/encoder.c:91:20
	cmpl	%edx, %r13d
.Ltmp2039:
	.loc	0 91 2                          # x264_src/encoder/encoder.c:91:2
	jl	.LBB12_94
.Ltmp2040:
# %bb.95:                               # %for.cond.cleanup8.loopexit.i
                                        #   in Loop: Header=BB12_92 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 90 30 is_stmt 1               # x264_src/encoder/encoder.c:90:30
	movq	14688(%rbx), %rdx
	jmp	.LBB12_91
.Ltmp2041:
.LBB12_97:                              # %for.cond.cleanup.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump_to_file:yuvfile <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_frame_dump_to_file:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump_to_file:ff <- $r15
	.loc	0 94 7                          # x264_src/encoder/encoder.c:94:7
	movq	%r15, %rdi
	callq	fclose@PLT
.Ltmp2042:
.LBB12_98:                              # %if.end752
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	.loc	0 2818 18                       # x264_src/encoder/encoder.c:2818:18
	movq	376(%rbx), %rdi
	.loc	0 2818 9 is_stmt 0              # x264_src/encoder/encoder.c:2818:9
	testq	%rdi, %rdi
.Ltmp2043:
	.loc	0 2818 9                        # x264_src/encoder/encoder.c:2818:9
	je	.LBB12_109
.Ltmp2044:
# %bb.99:                               # %if.then755
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	.loc	0 67 15 is_stmt 1               # x264_src/encoder/encoder.c:67:15
	movl	$.L.str.81, %esi
	callq	fopen@PLT
.Ltmp2045:
	#DEBUG_VALUE: x264_frame_dump:f <- $rax
	.loc	0 68 10                         # x264_src/encoder/encoder.c:68:10
	testq	%rax, %rax
.Ltmp2046:
	.loc	0 68 9 is_stmt 0                # x264_src/encoder/encoder.c:68:9
	je	.LBB12_109
.Ltmp2047:
# %bb.100:                              # %if.end.i1190
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %r15
	.loc	0 71 28 is_stmt 1               # x264_src/encoder/encoder.c:71:28
	movq	14688(%rbx), %rax
.Ltmp2048:
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	.loc	0 71 34 is_stmt 0               # x264_src/encoder/encoder.c:71:34
	movslq	56(%rax), %rax
	.loc	0 71 53                         # x264_src/encoder/encoder.c:71:53
	movslq	24(%rbx), %rcx
	.loc	0 71 73                         # x264_src/encoder/encoder.c:71:73
	movslq	20(%rbx), %rdx
	.loc	0 71 42                         # x264_src/encoder/encoder.c:71:42
	imulq	%rcx, %rdx
	.loc	0 71 62                         # x264_src/encoder/encoder.c:71:62
	imulq	%rax, %rdx
	.loc	0 71 81                         # x264_src/encoder/encoder.c:71:81
	leaq	(%rdx,%rdx,2), %rsi
	.loc	0 71 84                         # x264_src/encoder/encoder.c:71:84
	shrq	%rsi
	.loc	0 71 5                          # x264_src/encoder/encoder.c:71:5
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	fseek@PLT
.Ltmp2049:
	#DEBUG_VALUE: i <- 0
	.loc	0 72 28 is_stmt 1               # x264_src/encoder/encoder.c:72:28
	movq	14688(%rbx), %rdx
	.loc	0 72 23 is_stmt 0               # x264_src/encoder/encoder.c:72:23
	cmpl	$0, 100(%rdx)
.Ltmp2050:
	.loc	0 72 5                          # x264_src/encoder/encoder.c:72:5
	jle	.LBB12_107
.Ltmp2051:
# %bb.101:                              # %for.cond10.preheader.preheader.i
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- 0
	.loc	0 73 38 is_stmt 1               # x264_src/encoder/encoder.c:73:38
	movl	24(%rbx), %eax
	xorl	%r12d, %r12d
	jmp	.LBB12_104
.Ltmp2052:
	.p2align	4, 0x90
.LBB12_102:                             # %for.cond.cleanup17.loopexit.i
                                        #   in Loop: Header=BB12_104 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 72 28                         # x264_src/encoder/encoder.c:72:28
	movq	14688(%rbx), %rdx
.Ltmp2053:
.LBB12_103:                             # %for.cond.cleanup17.i
                                        #   in Loop: Header=BB12_104 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 72 44 is_stmt 0               # x264_src/encoder/encoder.c:72:44
	incq	%r12
.Ltmp2054:
	#DEBUG_VALUE: i <- $r12
	.loc	0 72 34                         # x264_src/encoder/encoder.c:72:34
	movslq	100(%rdx), %rcx
	.loc	0 72 23                         # x264_src/encoder/encoder.c:72:23
	cmpq	%rcx, %r12
.Ltmp2055:
	.loc	0 72 5                          # x264_src/encoder/encoder.c:72:5
	jge	.LBB12_107
.Ltmp2056:
.LBB12_104:                             # %for.cond10.preheader.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB12_106 Depth 2
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- $r12
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	testq	%r12, %r12
	setne	%bpl
.Ltmp2057:
	#DEBUG_VALUE: y <- 0
	.loc	0 73 47 is_stmt 1               # x264_src/encoder/encoder.c:73:47
	movl	%eax, %esi
	movl	%ebp, %ecx
	sarl	%cl, %esi
	.loc	0 73 27 is_stmt 0               # x264_src/encoder/encoder.c:73:27
	testl	%esi, %esi
.Ltmp2058:
	.loc	0 73 9                          # x264_src/encoder/encoder.c:73:9
	jle	.LBB12_103
.Ltmp2059:
# %bb.105:                              # %for.body18.i.preheader
                                        #   in Loop: Header=BB12_104 Depth=1
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: y <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%r13d, %r13d
.Ltmp2060:
	.p2align	4, 0x90
.LBB12_106:                             # %for.body18.i
                                        #   Parent Loop BB12_104 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: y <- $r13d
	.loc	0 74 25 is_stmt 1               # x264_src/encoder/encoder.c:74:25
	movq	14688(%rbx), %rax
	.loc	0 74 42 is_stmt 0               # x264_src/encoder/encoder.c:74:42
	movslq	104(%rax,%r12,4), %rdi
	.loc	0 74 41                         # x264_src/encoder/encoder.c:74:41
	movslq	%r13d, %r13
.Ltmp2061:
	imulq	%r13, %rdi
	.loc	0 74 22                         # x264_src/encoder/encoder.c:74:22
	addq	152(%rax,%r12,8), %rdi
	.loc	0 74 77                         # x264_src/encoder/encoder.c:74:77
	movl	20(%rbx), %eax
	.loc	0 74 85                         # x264_src/encoder/encoder.c:74:85
	movl	%ebp, %ecx
	sarl	%cl, %eax
	.loc	0 74 68                         # x264_src/encoder/encoder.c:74:68
	movslq	%eax, %rdx
	.loc	0 74 13                         # x264_src/encoder/encoder.c:74:13
	movl	$1, %esi
	movq	%r15, %rcx
	callq	fwrite@PLT
.Ltmp2062:
	.loc	0 73 56 is_stmt 1               # x264_src/encoder/encoder.c:73:56
	incl	%r13d
.Ltmp2063:
	#DEBUG_VALUE: y <- $r13d
	.loc	0 73 38 is_stmt 0               # x264_src/encoder/encoder.c:73:38
	movl	24(%rbx), %eax
	.loc	0 73 47                         # x264_src/encoder/encoder.c:73:47
	movl	%eax, %edx
	movl	%ebp, %ecx
	sarl	%cl, %edx
	.loc	0 73 27                         # x264_src/encoder/encoder.c:73:27
	cmpl	%edx, %r13d
.Ltmp2064:
	.loc	0 73 9                          # x264_src/encoder/encoder.c:73:9
	jl	.LBB12_106
	jmp	.LBB12_102
.Ltmp2065:
.LBB12_107:                             # %for.cond.cleanup.i1198
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_plus_uconst 40] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: x264_encoder_frame_end:frame_size <- $r14d
	#DEBUG_VALUE: x264_frame_dump:h <- $rbx
	#DEBUG_VALUE: x264_frame_dump:f <- $r15
	.loc	0 75 5 is_stmt 1                # x264_src/encoder/encoder.c:75:5
	movq	%r15, %rdi
	callq	fclose@PLT
.Ltmp2066:
.LBB12_109:                             # %cleanup759
	#DEBUG_VALUE: x264_encoder_frame_end:h <- $rbx
	#DEBUG_VALUE: x264_encoder_frame_end:thread_current <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: x264_encoder_frame_end:pp_nal <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_encoder_frame_end:pi_nal <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_encoder_frame_end:pic_out <- [DW_OP_LLVM_entry_value 1] $r8
	.loc	0 2822 1                        # x264_src/encoder/encoder.c:2822:1
	movl	%r14d, %eax
	.loc	0 2822 1 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:2822:1
	addq	$392, %rsp                      # imm = 0x188
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2067:
	#DEBUG_VALUE: x264_encoder_frame_end:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2068:
.Lfunc_end12:
	.size	x264_encoder_frame_end, .Lfunc_end12-x264_encoder_frame_end
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_reference_hierarchy_reset
	.type	x264_reference_hierarchy_reset,@function
x264_reference_hierarchy_reset:         # @x264_reference_hierarchy_reset
.Lfunc_begin13:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- 0
	.loc	0 1687 19 prologue_end is_stmt 1 # x264_src/encoder/encoder.c:1687:19
	movl	112(%rdi), %eax
	.loc	0 1687 10 is_stmt 0             # x264_src/encoder/encoder.c:1687:10
	testl	%eax, %eax
.Ltmp2069:
	.loc	0 1687 9                        # x264_src/encoder/encoder.c:1687:9
	je	.LBB13_22
.Ltmp2070:
# %bb.1:                                # %for.cond.preheader
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- 0
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	14416(%rdi), %rdx
.Ltmp2071:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- 0
	.loc	0 1691 21 is_stmt 1             # x264_src/encoder/encoder.c:1691:21
	movq	(%rdx), %rsi
	xorl	%ecx, %ecx
	testq	%rsi, %rsi
	.loc	0 1691 42 is_stmt 0             # x264_src/encoder/encoder.c:1691:42
	je	.LBB13_5
.Ltmp2072:
# %bb.2:                                # %land.rhs.lr.ph
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- 0
	#DEBUG_VALUE: i <- 0
	addq	$8, %rdx
.Ltmp2073:
	.p2align	4, 0x90
.LBB13_3:                               # %land.rhs
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- $ecx
	.loc	0 1691 45                       # x264_src/encoder/encoder.c:1691:45
	cmpl	$5, 4(%rsi)
.Ltmp2074:
	.loc	0 1691 5                        # x264_src/encoder/encoder.c:1691:5
	jne	.LBB13_4
.Ltmp2075:
# %bb.17:                               # %for.body
                                        #   in Loop: Header=BB13_3 Depth=1
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- $ecx
	.loc	0 1693 63 is_stmt 1             # x264_src/encoder/encoder.c:1693:63
	movq	3200(%rdi), %r8
	.loc	0 1693 72 is_stmt 0             # x264_src/encoder/encoder.c:1693:72
	movl	1288(%r8), %r8d
	.loc	0 1693 58                       # x264_src/encoder/encoder.c:1693:58
	addl	56(%rsi), %r8d
	.loc	0 1693 25                       # x264_src/encoder/encoder.c:1693:25
	xorl	%r9d, %r9d
	cmpl	%r8d, 60(%rsi)
	setne	%r9b
	.loc	0 1692 25 is_stmt 1             # x264_src/encoder/encoder.c:1692:25
	orl	%r9d, %ecx
.Ltmp2076:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- $ecx
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 1691 21                       # x264_src/encoder/encoder.c:1691:21
	movq	(%rdx), %rsi
	.loc	0 1691 42 is_stmt 0             # x264_src/encoder/encoder.c:1691:42
	addq	$8, %rdx
	.loc	0 1691 21                       # x264_src/encoder/encoder.c:1691:21
	testq	%rsi, %rsi
	.loc	0 1691 42                       # x264_src/encoder/encoder.c:1691:42
	jne	.LBB13_3
.Ltmp2077:
.LBB13_4:                               # %for.cond.cleanup.loopexit
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:b_hasdelayframe <- $ecx
	.loc	0 0 42                          # x264_src/encoder/encoder.c:0:42
	testl	%ecx, %ecx
	setne	%cl
.Ltmp2078:
.LBB13_5:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	.loc	0 1695 35 is_stmt 1             # x264_src/encoder/encoder.c:1695:35
	cmpl	$1, %eax
	.loc	0 1695 60 is_stmt 0             # x264_src/encoder/encoder.c:1695:60
	je	.LBB13_7
.Ltmp2079:
# %bb.6:                                # %for.cond.cleanup
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	testb	%cl, %cl
	je	.LBB13_21
.Ltmp2080:
.LBB13_7:                               # %for.cond22.preheader
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 1700 19 is_stmt 1             # x264_src/encoder/encoder.c:1700:19
	movq	14448(%rdi), %rdx
	xorl	%ebp, %ebp
	movl	$0, %r14d
.Ltmp2081:
	.loc	0 1700 5 is_stmt 0              # x264_src/encoder/encoder.c:1700:5
	testq	%rdx, %rdx
	je	.LBB13_20
.Ltmp2082:
# %bb.8:                                # %for.body27.lr.ph
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 1695 35 is_stmt 1             # x264_src/encoder/encoder.c:1695:35
	cmpl	$1, %eax
	jne	.LBB13_9
.Ltmp2083:
# %bb.11:                               # %for.body27.lr.ph.split.us
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 1703 49                       # x264_src/encoder/encoder.c:1703:49
	cmpl	$4, 4(%rdx)
.Ltmp2084:
	.loc	0 1702 13                       # x264_src/encoder/encoder.c:1702:13
	jne	.LBB13_13
.Ltmp2085:
# %bb.12:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	xorl	%ecx, %ecx
	xorl	%r14d, %r14d
	.loc	0 1702 13                       # x264_src/encoder/encoder.c:1702:13
	jmp	.LBB13_19
.Ltmp2086:
.LBB13_9:                               # %for.body27.preheader
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	xorl	%r14d, %r14d
.Ltmp2087:
	.p2align	4, 0x90
.LBB13_10:                              # %for.body27
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $r14
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- undef
	.loc	0 1700 5 is_stmt 1              # x264_src/encoder/encoder.c:1700:5
	cmpq	$0, 14456(%rdi,%r14,8)
.Ltmp2088:
	.loc	0 1700 48 is_stmt 0             # x264_src/encoder/encoder.c:1700:48
	leaq	1(%r14), %r14
.Ltmp2089:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $r14
	.loc	0 1700 5                        # x264_src/encoder/encoder.c:1700:5
	jne	.LBB13_10
	jmp	.LBB13_20
.Ltmp2090:
.LBB13_13:                              # %for.inc65.us.preheader
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%ecx, %ecx
.Ltmp2091:
	.p2align	4, 0x90
.LBB13_15:                              # %for.inc65.us
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $rcx
	.loc	0 1700 19                       # x264_src/encoder/encoder.c:1700:19
	movq	14456(%rdi,%rcx,8), %rdx
.Ltmp2092:
	.loc	0 1700 5                        # x264_src/encoder/encoder.c:1700:5
	testq	%rdx, %rdx
	je	.LBB13_16
.Ltmp2093:
# %bb.14:                               # %for.body27.us
                                        #   in Loop: Header=BB13_15 Depth=1
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $rcx
	.loc	0 1700 48                       # x264_src/encoder/encoder.c:1700:48
	incq	%rcx
.Ltmp2094:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $rcx
	.loc	0 1703 49 is_stmt 1             # x264_src/encoder/encoder.c:1703:49
	cmpl	$4, 4(%rdx)
.Ltmp2095:
	.loc	0 1702 13                       # x264_src/encoder/encoder.c:1702:13
	jne	.LBB13_15
.Ltmp2096:
# %bb.18:                               # %if.then40.loopexit
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $rcx
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movl	%ecx, %r14d
.Ltmp2097:
.LBB13_19:                              # %if.then40
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	.loc	0 1705 27 is_stmt 1             # x264_src/encoder/encoder.c:1705:27
	movl	1848(%rdi), %esi
	.loc	0 1705 39 is_stmt 0             # x264_src/encoder/encoder.c:1705:39
	subl	68(%rdx), %esi
.Ltmp2098:
	#DEBUG_VALUE: diff <- $esi
	.loc	0 0 39                          # x264_src/encoder/encoder.c:0:39
	leaq	14448(%rdi), %rax
	.loc	0 1706 30 is_stmt 1             # x264_src/encoder/encoder.c:1706:30
	movslq	13732(%rdi), %rdx
	.loc	0 1706 77 is_stmt 0             # x264_src/encoder/encoder.c:1706:77
	movl	%esi, 13736(%rdi,%rdx,8)
	.loc	0 1707 62 is_stmt 1             # x264_src/encoder/encoder.c:1707:62
	movq	14448(%rdi,%rcx,8), %rcx
	.loc	0 1707 88 is_stmt 0             # x264_src/encoder/encoder.c:1707:88
	movl	(%rcx), %ecx
	.loc	0 1707 50                       # x264_src/encoder/encoder.c:1707:50
	leal	1(%rdx), %esi
.Ltmp2099:
	movl	%esi, 13732(%rdi)
	.loc	0 1707 60                       # x264_src/encoder/encoder.c:1707:60
	movl	%ecx, 13740(%rdi,%rdx,8)
	movq	%rdi, %rbx
.Ltmp2100:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rbx
	.loc	0 1708 40 is_stmt 1             # x264_src/encoder/encoder.c:1708:40
	movq	%rax, %rdi
	callq	x264_frame_pop@PLT
.Ltmp2101:
	.loc	0 1708 13 is_stmt 0             # x264_src/encoder/encoder.c:1708:13
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	x264_frame_push_unused@PLT
.Ltmp2102:
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	%rbx, %rdi
	.loc	0 1709 33 is_stmt 1             # x264_src/encoder/encoder.c:1709:33
	movl	$1, 15016(%rbx)
	jmp	.LBB13_20
.Ltmp2103:
.LBB13_16:                              # %for.end67.loopexit
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- $rdi
	#DEBUG_VALUE: x264_reference_hierarchy_reset:ref <- $rcx
	.loc	0 1715 36                       # x264_src/encoder/encoder.c:1715:36
	incl	%ecx
.Ltmp2104:
	.loc	0 0 36 is_stmt 0                # x264_src/encoder/encoder.c:0:36
	movl	%ecx, %r14d
.Ltmp2105:
.LBB13_20:                              # %for.end67
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1715 36                       # x264_src/encoder/encoder.c:1715:36
	subl	14600(%rdi), %r14d
	addl	$2, %r14d
	testl	%r14d, %r14d
	cmovgl	%r14d, %ebp
	.loc	0 1715 34                       # x264_src/encoder/encoder.c:1715:34
	movl	%ebp, 13728(%rdi)
.Ltmp2106:
.LBB13_21:
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %rbp
.Ltmp2107:
.LBB13_22:                              # %cleanup
	#DEBUG_VALUE: x264_reference_hierarchy_reset:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 1716 1 is_stmt 1              # x264_src/encoder/encoder.c:1716:1
	retq
.Ltmp2108:
.Lfunc_end13:
	.size	x264_reference_hierarchy_reset, .Lfunc_end13-x264_reference_hierarchy_reset
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_reference_check_reorder
	.type	x264_reference_check_reorder,@function
x264_reference_check_reorder:           # @x264_reference_check_reorder
.Lfunc_begin14:
	.loc	0 1353 0                        # x264_src/encoder/encoder.c:1353:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- 0
	movl	14696(%rdi), %eax
.Ltmp2109:
	.loc	0 1354 23 prologue_end          # x264_src/encoder/encoder.c:1354:23
	cmpl	$2, %eax
.Ltmp2110:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jl	.LBB14_9
.Ltmp2111:
# %bb.1:                                # %for.body.lr.ph
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	decl	%eax
	cmpl	$0, 7248(%rdi)
.Ltmp2112:
	movq	14704(%rdi), %rcx
	je	.LBB14_5
.Ltmp2113:
# %bb.2:                                # %for.body.preheader
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- 0
	.loc	0 1357 57 is_stmt 1             # x264_src/encoder/encoder.c:1357:57
	movl	(%rcx), %edx
	xorl	%ecx, %ecx
.Ltmp2114:
	.p2align	4, 0x90
.LBB14_3:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	movl	%edx, %esi
.Ltmp2115:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 1357 65 is_stmt 0             # x264_src/encoder/encoder.c:1357:65
	movq	14712(%rdi,%rcx,8), %rdx
	.loc	0 1357 80                       # x264_src/encoder/encoder.c:1357:80
	movl	(%rdx), %edx
	.loc	0 1357 63                       # x264_src/encoder/encoder.c:1357:63
	cmpl	%edx, %esi
.Ltmp2116:
	.loc	0 1356 13 is_stmt 1             # x264_src/encoder/encoder.c:1356:13
	jl	.LBB14_4
.Ltmp2117:
# %bb.8:                                # %for.inc
                                        #   in Loop: Header=BB14_3 Depth=1
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- $rcx
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	incq	%rcx
.Ltmp2118:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 1354 23 is_stmt 1             # x264_src/encoder/encoder.c:1354:23
	cmpq	%rcx, %rax
.Ltmp2119:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jne	.LBB14_3
	jmp	.LBB14_9
.Ltmp2120:
.LBB14_5:                               # %for.body.us.preheader
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- 0
	.loc	0 1356 57 is_stmt 1             # x264_src/encoder/encoder.c:1356:57
	movl	68(%rcx), %edx
	xorl	%ecx, %ecx
.Ltmp2121:
	.p2align	4, 0x90
.LBB14_6:                               # %for.body.us
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	movl	%edx, %esi
.Ltmp2122:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 1356 71 is_stmt 0             # x264_src/encoder/encoder.c:1356:71
	movq	14712(%rdi,%rcx,8), %rdx
	.loc	0 1356 86                       # x264_src/encoder/encoder.c:1356:86
	movl	68(%rdx), %edx
	.loc	0 1356 69                       # x264_src/encoder/encoder.c:1356:69
	cmpl	%edx, %esi
	.loc	0 1356 13                       # x264_src/encoder/encoder.c:1356:13
	jl	.LBB14_4
.Ltmp2123:
# %bb.7:                                # %for.inc.us
                                        #   in Loop: Header=BB14_6 Depth=1
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- $rcx
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	incq	%rcx
.Ltmp2124:
	#DEBUG_VALUE: i <- $rcx
	.loc	0 1354 23 is_stmt 1             # x264_src/encoder/encoder.c:1354:23
	cmpq	%rcx, %rax
.Ltmp2125:
	.loc	0 1354 5 is_stmt 0              # x264_src/encoder/encoder.c:1354:5
	jne	.LBB14_6
.Ltmp2126:
.LBB14_9:                               # %cleanup
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	.loc	0 1362 1 is_stmt 1              # x264_src/encoder/encoder.c:1362:1
	retq
.Ltmp2127:
.LBB14_4:                               # %if.then
	#DEBUG_VALUE: x264_reference_check_reorder:h <- $rdi
	#DEBUG_VALUE: i <- $rcx
	.loc	0 1359 33                       # x264_src/encoder/encoder.c:1359:33
	movl	$1, 15016(%rdi)
.Ltmp2128:
	.loc	0 1362 1                        # x264_src/encoder/encoder.c:1362:1
	retq
.Ltmp2129:
.Lfunc_end14:
	.size	x264_reference_check_reorder, .Lfunc_end14-x264_reference_check_reorder
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_threaded_slices_write
	.type	x264_threaded_slices_write,@function
x264_threaded_slices_write:             # @x264_threaded_slices_write
.Lfunc_begin15:
	.loc	0 2109 0                        # x264_src/encoder/encoder.c:2109:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
.Ltmp2130:
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2116 34 prologue_end          # x264_src/encoder/encoder.c:2116:34
	movl	4(%rdi), %esi
	.loc	0 2116 23 is_stmt 0             # x264_src/encoder/encoder.c:2116:23
	testl	%esi, %esi
.Ltmp2131:
	.loc	0 2116 5                        # x264_src/encoder/encoder.c:2116:5
	jle	.LBB15_4
.Ltmp2132:
# %bb.1:                                # %if.end.peel
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2118 21 is_stmt 1             # x264_src/encoder/encoder.c:2118:21
	movq	704(%rbx), %rdi
.Ltmp2133:
	#DEBUG_VALUE: t <- $rdi
	.loc	0 2125 62                       # x264_src/encoder/encoder.c:2125:62
	movl	692(%rbx), %edx
	.loc	0 2124 54                       # x264_src/encoder/encoder.c:2124:54
	movzbl	136(%rbx), %ecx
	.loc	0 2124 25 is_stmt 0             # x264_src/encoder/encoder.c:2124:25
	movq	3200(%rbx), %rax
	.loc	0 2124 30                       # x264_src/encoder/encoder.c:2124:30
	movl	1088(%rax), %r8d
	.loc	0 2124 42                       # x264_src/encoder/encoder.c:2124:42
	sarl	%cl, %r8d
.Ltmp2134:
	#DEBUG_VALUE: height <- $r8d
	.loc	0 2125 75 is_stmt 1             # x264_src/encoder/encoder.c:2125:75
	movl	%edx, %eax
	shrl	$31, %eax
	addl	%edx, %eax
	sarl	%eax
	.loc	0 2125 79 is_stmt 0             # x264_src/encoder/encoder.c:2125:79
	cltd
	idivl	%esi
	movl	%eax, %esi
	.loc	0 2125 101                      # x264_src/encoder/encoder.c:2125:101
	shll	%cl, %esi
	.loc	0 2125 32                       # x264_src/encoder/encoder.c:2125:32
	movl	%esi, 1748(%rdi)
	.loc	0 2126 62 is_stmt 1             # x264_src/encoder/encoder.c:2126:62
	movl	692(%rbx), %ecx
	.loc	0 2126 75 is_stmt 0             # x264_src/encoder/encoder.c:2126:75
	movl	%ecx, %eax
	shrl	$31, %eax
	addl	%ecx, %eax
	sarl	%eax
	.loc	0 2126 51                       # x264_src/encoder/encoder.c:2126:51
	addl	%r8d, %eax
	.loc	0 2126 79                       # x264_src/encoder/encoder.c:2126:79
	cltd
	idivl	4(%rbx)
	.loc	0 2126 113                      # x264_src/encoder/encoder.c:2126:113
	movzbl	136(%rbx), %ecx
	.loc	0 2126 101                      # x264_src/encoder/encoder.c:2126:101
	shll	%cl, %eax
	.loc	0 2126 32                       # x264_src/encoder/encoder.c:2126:32
	movl	%eax, 1752(%rdi)
	.loc	0 2127 56 is_stmt 1             # x264_src/encoder/encoder.c:2127:56
	movq	3200(%rbx), %rcx
	.loc	0 2127 51 is_stmt 0             # x264_src/encoder/encoder.c:2127:51
	imull	1084(%rcx), %esi
	.loc	0 2127 26                       # x264_src/encoder/encoder.c:2127:26
	movl	%esi, 7252(%rdi)
	.loc	0 2128 56 is_stmt 1             # x264_src/encoder/encoder.c:2128:56
	movq	3200(%rbx), %rcx
	.loc	0 2128 51 is_stmt 0             # x264_src/encoder/encoder.c:2128:51
	imull	1084(%rcx), %eax
	.loc	0 2128 72                       # x264_src/encoder/encoder.c:2128:72
	decl	%eax
	.loc	0 2128 26                       # x264_src/encoder/encoder.c:2128:26
	movl	%eax, 7256(%rdi)
.Ltmp2135:
	#DEBUG_VALUE: i <- 1
	.loc	0 2116 23 is_stmt 1             # x264_src/encoder/encoder.c:2116:23
	cmpl	$2, 4(%rbx)
.Ltmp2136:
	.loc	0 2116 5 is_stmt 0              # x264_src/encoder/encoder.c:2116:5
	jl	.LBB15_4
.Ltmp2137:
# %bb.2:                                # %if.end.preheader
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: t <- $rdi
	#DEBUG_VALUE: height <- $r8d
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leaq	1844(%rbx), %r14
	movl	$1, %r12d
	movl	$89, %r13d
.Ltmp2138:
	.p2align	4, 0x90
.LBB15_3:                               # %if.end
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	.loc	0 2118 21 is_stmt 1             # x264_src/encoder/encoder.c:2118:21
	movq	(%rbx,%r13,8), %r15
.Ltmp2139:
	#DEBUG_VALUE: t <- $r15
	.loc	0 2121 27                       # x264_src/encoder/encoder.c:2121:27
	movl	$704, %edx                      # imm = 0x2C0
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
.Ltmp2140:
	.loc	0 2122 25                       # x264_src/encoder/encoder.c:2122:25
	leaq	1844(%r15), %rdi
	.loc	0 2122 13 is_stmt 0             # x264_src/encoder/encoder.c:2122:13
	movl	$24860, %edx                    # imm = 0x611C
	movq	%r14, %rsi
	callq	memcpy@PLT
.Ltmp2141:
	.loc	0 2124 25 is_stmt 1             # x264_src/encoder/encoder.c:2124:25
	movq	3200(%rbx), %rax
	.loc	0 2124 30 is_stmt 0             # x264_src/encoder/encoder.c:2124:30
	movl	1088(%rax), %edi
	.loc	0 2124 54                       # x264_src/encoder/encoder.c:2124:54
	movzbl	136(%rbx), %ecx
.Ltmp2142:
	#DEBUG_VALUE: height <- undef
	.loc	0 2125 43 is_stmt 1             # x264_src/encoder/encoder.c:2125:43
	movl	%r12d, %edx
	.loc	0 2124 42                       # x264_src/encoder/encoder.c:2124:42
	sarl	%cl, %edi
.Ltmp2143:
	#DEBUG_VALUE: height <- $edi
	.loc	0 2125 62                       # x264_src/encoder/encoder.c:2125:62
	movl	692(%rbx), %esi
	.loc	0 2125 75 is_stmt 0             # x264_src/encoder/encoder.c:2125:75
	movl	%esi, %eax
	shrl	$31, %eax
	.loc	0 2125 43                       # x264_src/encoder/encoder.c:2125:43
	imull	%edi, %edx
	.loc	0 2125 75                       # x264_src/encoder/encoder.c:2125:75
	addl	%esi, %eax
	sarl	%eax
	.loc	0 2125 51                       # x264_src/encoder/encoder.c:2125:51
	addl	%edx, %eax
	.loc	0 2125 79                       # x264_src/encoder/encoder.c:2125:79
	cltd
	idivl	4(%rbx)
	movl	%eax, %esi
	.loc	0 2125 101                      # x264_src/encoder/encoder.c:2125:101
	shll	%cl, %esi
	.loc	0 2125 32                       # x264_src/encoder/encoder.c:2125:32
	movl	%esi, 1748(%r15)
	.loc	0 2126 43 is_stmt 1             # x264_src/encoder/encoder.c:2126:43
	leal	-87(%r13), %ecx
	imull	%edi, %ecx
	.loc	0 2126 62 is_stmt 0             # x264_src/encoder/encoder.c:2126:62
	movl	692(%rbx), %edx
	.loc	0 2126 75                       # x264_src/encoder/encoder.c:2126:75
	movl	%edx, %eax
	shrl	$31, %eax
	addl	%edx, %eax
	sarl	%eax
	.loc	0 2126 51                       # x264_src/encoder/encoder.c:2126:51
	addl	%ecx, %eax
	.loc	0 2126 79                       # x264_src/encoder/encoder.c:2126:79
	cltd
	idivl	4(%rbx)
	.loc	0 2126 113                      # x264_src/encoder/encoder.c:2126:113
	movzbl	136(%rbx), %ecx
	.loc	0 2126 101                      # x264_src/encoder/encoder.c:2126:101
	shll	%cl, %eax
	.loc	0 2126 32                       # x264_src/encoder/encoder.c:2126:32
	movl	%eax, 1752(%r15)
	.loc	0 2127 56 is_stmt 1             # x264_src/encoder/encoder.c:2127:56
	movq	3200(%rbx), %rcx
	.loc	0 2127 51 is_stmt 0             # x264_src/encoder/encoder.c:2127:51
	imull	1084(%rcx), %esi
	.loc	0 2127 26                       # x264_src/encoder/encoder.c:2127:26
	movl	%esi, 7252(%r15)
	.loc	0 2128 56 is_stmt 1             # x264_src/encoder/encoder.c:2128:56
	movq	3200(%rbx), %rcx
	.loc	0 2128 51 is_stmt 0             # x264_src/encoder/encoder.c:2128:51
	imull	1084(%rcx), %eax
	.loc	0 2128 72                       # x264_src/encoder/encoder.c:2128:72
	decl	%eax
	.loc	0 2126 47 is_stmt 1             # x264_src/encoder/encoder.c:2126:47
	incq	%r12
.Ltmp2144:
	.loc	0 2128 26                       # x264_src/encoder/encoder.c:2128:26
	movl	%eax, 7256(%r15)
.Ltmp2145:
	#DEBUG_VALUE: i <- $r12
	.loc	0 2116 34                       # x264_src/encoder/encoder.c:2116:34
	movslq	4(%rbx), %rax
	.loc	0 2116 23 is_stmt 0             # x264_src/encoder/encoder.c:2116:23
	incq	%r13
	cmpq	%rax, %r12
.Ltmp2146:
	.loc	0 2116 5                        # x264_src/encoder/encoder.c:2116:5
	jl	.LBB15_3
.Ltmp2147:
.LBB15_4:                               # %for.cond.cleanup
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	.loc	0 2131 5 is_stmt 1              # x264_src/encoder/encoder.c:2131:5
	movq	3200(%rbx), %rax
	movl	1088(%rax), %esi
	shll	$4, %esi
	addl	$16, %esi
	movq	%rbx, %rdi
	callq	x264_analyse_weight_frame@PLT
.Ltmp2148:
	.loc	0 2133 5                        # x264_src/encoder/encoder.c:2133:5
	movq	%rbx, %rdi
	callq	x264_threads_distribute_ratecontrol@PLT
.Ltmp2149:
	#DEBUG_VALUE: i <- 0
	.loc	0 2136 23                       # x264_src/encoder/encoder.c:2136:23
	cmpl	$0, 4(%rbx)
.Ltmp2150:
	.loc	0 2136 5 is_stmt 0              # x264_src/encoder/encoder.c:2136:5
	jle	.LBB15_15
.Ltmp2151:
# %bb.5:                                # %for.body41.lr.ph
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%eax, %eax
.Ltmp2152:
	.p2align	4, 0x90
.LBB15_6:                               # %for.body41
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $rax
	.loc	0 2140 9 is_stmt 1              # x264_src/encoder/encoder.c:2140:9
	movq	704(%rbx,%rax,8), %rcx
	.loc	0 2140 39 is_stmt 0             # x264_src/encoder/encoder.c:2140:39
	movl	$1, 1740(%rcx)
.Ltmp2153:
	.loc	0 2136 46 is_stmt 1             # x264_src/encoder/encoder.c:2136:46
	incq	%rax
.Ltmp2154:
	#DEBUG_VALUE: i <- $rax
	.loc	0 2136 34 is_stmt 0             # x264_src/encoder/encoder.c:2136:34
	movslq	4(%rbx), %rcx
	.loc	0 2136 23                       # x264_src/encoder/encoder.c:2136:23
	cmpq	%rcx, %rax
.Ltmp2155:
	.loc	0 2136 5                        # x264_src/encoder/encoder.c:2136:5
	jl	.LBB15_6
.Ltmp2156:
# %bb.7:                                # %for.cond49.preheader
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	.loc	0 2142 23 is_stmt 1             # x264_src/encoder/encoder.c:2142:23
	testl	%ecx, %ecx
.Ltmp2157:
	#DEBUG_VALUE: i <- 0
	.loc	0 2142 5 is_stmt 0              # x264_src/encoder/encoder.c:2142:5
	jle	.LBB15_15
.Ltmp2158:
# %bb.8:                                # %for.body54.lr.ph
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	xorl	%eax, %eax
.Ltmp2159:
	.p2align	4, 0x90
.LBB15_9:                               # %for.body54
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $rax
	.loc	0 2145 9 is_stmt 1              # x264_src/encoder/encoder.c:2145:9
	movq	704(%rbx,%rax,8), %rcx
	.loc	0 2145 39 is_stmt 0             # x264_src/encoder/encoder.c:2145:39
	movl	$0, 1740(%rcx)
.Ltmp2160:
	.loc	0 2142 46 is_stmt 1             # x264_src/encoder/encoder.c:2142:46
	incq	%rax
.Ltmp2161:
	#DEBUG_VALUE: i <- $rax
	.loc	0 2142 34 is_stmt 0             # x264_src/encoder/encoder.c:2142:34
	movslq	4(%rbx), %rcx
	.loc	0 2142 23                       # x264_src/encoder/encoder.c:2142:23
	cmpq	%rcx, %rax
.Ltmp2162:
	.loc	0 2142 5                        # x264_src/encoder/encoder.c:2142:5
	jl	.LBB15_9
.Ltmp2163:
# %bb.10:                               # %for.cond66.preheader
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	.loc	0 2151 23 is_stmt 1             # x264_src/encoder/encoder.c:2151:23
	cmpl	$2, %ecx
.Ltmp2164:
	#DEBUG_VALUE: i <- 1
	.loc	0 2151 5 is_stmt 0              # x264_src/encoder/encoder.c:2151:5
	jl	.LBB15_15
.Ltmp2165:
# %bb.11:                               # %for.body72.lr.ph
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	movl	$89, %r14d
	jmp	.LBB15_12
.Ltmp2166:
	.p2align	4, 0x90
.LBB15_14:                              # %for.inc93
                                        #   in Loop: Header=BB15_12 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- [DW_OP_constu 87, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 2151 34                       # x264_src/encoder/encoder.c:2151:34
	movslq	4(%rbx), %rax
	.loc	0 2151 23                       # x264_src/encoder/encoder.c:2151:23
	leaq	1(%r14), %rcx
	addq	$-87, %r14
.Ltmp2167:
	cmpq	%rax, %r14
	movq	%rcx, %r14
.Ltmp2168:
	.loc	0 2151 5                        # x264_src/encoder/encoder.c:2151:5
	jge	.LBB15_15
.Ltmp2169:
.LBB15_12:                              # %for.body72
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 2153 31 is_stmt 1             # x264_src/encoder/encoder.c:2153:31
	movq	(%rbx,%r14,8), %rdi
	.loc	0 2153 59 is_stmt 0             # x264_src/encoder/encoder.c:2153:59
	movl	1748(%rdi), %esi
	.loc	0 2153 79                       # x264_src/encoder/encoder.c:2153:79
	incl	%esi
	.loc	0 2153 9                        # x264_src/encoder/encoder.c:2153:9
	xorl	%edx, %edx
	callq	x264_fdec_filter_row
.Ltmp2170:
	.loc	0 2154 13 is_stmt 1             # x264_src/encoder/encoder.c:2154:13
	cmpl	$0, 7268(%rbx)
.Ltmp2171:
	.loc	0 2154 13 is_stmt 0             # x264_src/encoder/encoder.c:2154:13
	je	.LBB15_14
.Ltmp2172:
# %bb.13:                               # %if.then83
                                        #   in Loop: Header=BB15_12 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- [DW_OP_constu 88, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 2155 35 is_stmt 1             # x264_src/encoder/encoder.c:2155:35
	movq	(%rbx,%r14,8), %rdi
	.loc	0 2155 63 is_stmt 0             # x264_src/encoder/encoder.c:2155:63
	movl	1748(%rdi), %esi
	.loc	0 2155 83                       # x264_src/encoder/encoder.c:2155:83
	addl	$2, %esi
	.loc	0 2155 13                       # x264_src/encoder/encoder.c:2155:13
	xorl	%edx, %edx
	callq	x264_fdec_filter_row
.Ltmp2173:
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	jmp	.LBB15_14
.Ltmp2174:
.LBB15_15:                              # %for.cond.cleanup71
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	.loc	0 2158 5 is_stmt 1              # x264_src/encoder/encoder.c:2158:5
	movq	%rbx, %rdi
	callq	x264_threads_merge_ratecontrol@PLT
.Ltmp2175:
	#DEBUG_VALUE: i <- 1
	.loc	0 2160 23                       # x264_src/encoder/encoder.c:2160:23
	cmpl	$2, 4(%rbx)
.Ltmp2176:
	.loc	0 2160 5 is_stmt 0              # x264_src/encoder/encoder.c:2160:5
	jl	.LBB15_28
.Ltmp2177:
# %bb.16:                               # %for.body104.lr.ph
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leaq	26712(%rbx), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	leaq	27384(%rbx), %rax
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	movl	$1, %r12d
.Ltmp2178:
	.p2align	4, 0x90
.LBB15_17:                              # %for.body104
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_19 Depth 2
                                        #     Child Loop BB15_26 Depth 2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	.loc	0 2162 21 is_stmt 1             # x264_src/encoder/encoder.c:2162:21
	movq	704(%rbx,%r12,8), %r13
.Ltmp2179:
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- 0
	.loc	0 2163 27                       # x264_src/encoder/encoder.c:2163:27
	cmpl	$0, 1760(%r13)
.Ltmp2180:
	.loc	0 2163 9 is_stmt 0              # x264_src/encoder/encoder.c:2163:9
	jle	.LBB15_23
.Ltmp2181:
# %bb.18:                               # %for.body113.lr.ph
                                        #   in Loop: Header=BB15_17 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%ebp, %ebp
	xorl	%r14d, %r14d
	jmp	.LBB15_19
.Ltmp2182:
	.p2align	4, 0x90
.LBB15_22:                              # %x264_nal_check_buffer.exit
                                        #   in Loop: Header=BB15_19 Depth=2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- $r14
	.loc	0 2163 44                       # x264_src/encoder/encoder.c:2163:44
	incq	%r14
.Ltmp2183:
	#DEBUG_VALUE: j <- $r14
	.loc	0 2163 36                       # x264_src/encoder/encoder.c:2163:36
	movslq	1760(%r13), %rax
	.loc	0 2163 27                       # x264_src/encoder/encoder.c:2163:27
	addq	$24, %rbp
	cmpq	%rax, %r14
.Ltmp2184:
	.loc	0 2163 9                        # x264_src/encoder/encoder.c:2163:9
	jge	.LBB15_23
.Ltmp2185:
.LBB15_19:                              # %for.body113
                                        #   Parent Loop BB15_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- $r14
	.loc	0 2165 20 is_stmt 1             # x264_src/encoder/encoder.c:2165:20
	movq	1768(%rbx), %rax
	.loc	0 2165 31 is_stmt 0             # x264_src/encoder/encoder.c:2165:31
	movslq	1760(%rbx), %rcx
	.loc	0 2165 13                       # x264_src/encoder/encoder.c:2165:13
	leaq	(%rcx,%rcx,2), %rcx
	.loc	0 2165 47                       # x264_src/encoder/encoder.c:2165:47
	movq	1768(%r13), %rdx
	.loc	0 2165 40                       # x264_src/encoder/encoder.c:2165:40
	movq	16(%rdx,%rbp), %rsi
	movq	%rsi, 16(%rax,%rcx,8)
	movdqu	(%rdx,%rbp), %xmm0
	movdqu	%xmm0, (%rax,%rcx,8)
	.loc	0 2166 25 is_stmt 1             # x264_src/encoder/encoder.c:2166:25
	movl	1760(%rbx), %ecx
.Ltmp2186:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%rbx), %eax
.Ltmp2187:
	.loc	0 2166 25                       # x264_src/encoder/encoder.c:2166:25
	incl	%ecx
	movl	%ecx, 1760(%rbx)
.Ltmp2188:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %ecx
.Ltmp2189:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jl	.LBB15_22
.Ltmp2190:
# %bb.20:                               # %if.then.i
                                        #   in Loop: Header=BB15_19 Depth=2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp2191:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp2192:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB15_22
.Ltmp2193:
# %bb.21:                               # %cleanup.thread.i
                                        #   in Loop: Header=BB15_19 Depth=2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- $r14
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $rbx
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%rbx), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%rbx), %rcx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rax, %rdi
	movq	%rax, %r15
.Ltmp2194:
	#DEBUG_VALUE: new_out <- $r15
	callq	memcpy@PLT
.Ltmp2195:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%rbx), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp2196:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%r15, 1768(%rbx)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%rbx)
	jmp	.LBB15_22
.Ltmp2197:
	.p2align	4, 0x90
.LBB15_23:                              # %for.cond131.preheader
                                        #   in Loop: Header=BB15_17 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	leaq	26712(%r13), %rax
.Ltmp2198:
	#DEBUG_VALUE: j <- 0
	.loc	0 2170 9 is_stmt 1              # x264_src/encoder/encoder.c:2170:9
	leaq	27384(%r13), %rcx
	cmpq	%rcx, 16(%rsp)                  # 8-byte Folded Reload
	setae	%cl
	cmpq	8(%rsp), %rax                   # 8-byte Folded Reload
	setae	%al
	orb	%cl, %al
	jne	.LBB15_25
.Ltmp2199:
# %bb.24:                               #   in Loop: Header=BB15_17 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	xorl	%eax, %eax
	jmp	.LBB15_26
.Ltmp2200:
	.p2align	4, 0x90
.LBB15_25:                              # %vector.body
                                        #   in Loop: Header=BB15_17 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- 0
	.loc	0 2173 42 is_stmt 1             # x264_src/encoder/encoder.c:2173:42
	movdqu	26712(%r13), %xmm0
	movdqu	26728(%r13), %xmm1
	movdqu	26744(%r13), %xmm2
	movdqu	26760(%r13), %xmm3
	.loc	0 2173 39 is_stmt 0             # x264_src/encoder/encoder.c:2173:39
	movdqu	26712(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	26728(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	26744(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	26760(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 26712(%rbx)
	movdqu	%xmm0, 26728(%rbx)
	movdqu	%xmm1, 26744(%rbx)
	movdqu	%xmm2, 26760(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	26776(%r13), %xmm0
	movdqu	26792(%r13), %xmm1
	movdqu	26808(%r13), %xmm2
	movdqu	26824(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	26776(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	26792(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	26808(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	26824(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 26776(%rbx)
	movdqu	%xmm0, 26792(%rbx)
	movdqu	%xmm1, 26808(%rbx)
	movdqu	%xmm2, 26824(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	26840(%r13), %xmm0
	movdqu	26856(%r13), %xmm1
	movdqu	26872(%r13), %xmm2
	movdqu	26888(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	26840(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	26856(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	26872(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	26888(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 26840(%rbx)
	movdqu	%xmm0, 26856(%rbx)
	movdqu	%xmm1, 26872(%rbx)
	movdqu	%xmm2, 26888(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	26904(%r13), %xmm0
	movdqu	26920(%r13), %xmm1
	movdqu	26936(%r13), %xmm2
	movdqu	26952(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	26904(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	26920(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	26936(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	26952(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 26904(%rbx)
	movdqu	%xmm0, 26920(%rbx)
	movdqu	%xmm1, 26936(%rbx)
	movdqu	%xmm2, 26952(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	26968(%r13), %xmm0
	movdqu	26984(%r13), %xmm1
	movdqu	27000(%r13), %xmm2
	movdqu	27016(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	26968(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	26984(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27000(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27016(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 26968(%rbx)
	movdqu	%xmm0, 26984(%rbx)
	movdqu	%xmm1, 27000(%rbx)
	movdqu	%xmm2, 27016(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	27032(%r13), %xmm0
	movdqu	27048(%r13), %xmm1
	movdqu	27064(%r13), %xmm2
	movdqu	27080(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	27032(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	27048(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27064(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27080(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 27032(%rbx)
	movdqu	%xmm0, 27048(%rbx)
	movdqu	%xmm1, 27064(%rbx)
	movdqu	%xmm2, 27080(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	27096(%r13), %xmm0
	movdqu	27112(%r13), %xmm1
	movdqu	27128(%r13), %xmm2
	movdqu	27144(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	27096(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	27112(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27128(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27144(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 27096(%rbx)
	movdqu	%xmm0, 27112(%rbx)
	movdqu	%xmm1, 27128(%rbx)
	movdqu	%xmm2, 27144(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	27160(%r13), %xmm0
	movdqu	27176(%r13), %xmm1
	movdqu	27192(%r13), %xmm2
	movdqu	27208(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	27160(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	27176(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27192(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27208(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 27160(%rbx)
	movdqu	%xmm0, 27176(%rbx)
	movdqu	%xmm1, 27192(%rbx)
	movdqu	%xmm2, 27208(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	27224(%r13), %xmm0
	movdqu	27240(%r13), %xmm1
	movdqu	27256(%r13), %xmm2
	movdqu	27272(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	27224(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	27240(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27256(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27272(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 27224(%rbx)
	movdqu	%xmm0, 27240(%rbx)
	movdqu	%xmm1, 27256(%rbx)
	movdqu	%xmm2, 27272(%rbx)
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movdqu	27288(%r13), %xmm0
	movdqu	27304(%r13), %xmm1
	movdqu	27320(%r13), %xmm2
	movdqu	27336(%r13), %xmm3
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	movdqu	27288(%rbx), %xmm4
	paddd	%xmm0, %xmm4
	movdqu	27304(%rbx), %xmm0
	paddd	%xmm1, %xmm0
	movdqu	27320(%rbx), %xmm1
	paddd	%xmm2, %xmm1
	movdqu	27336(%rbx), %xmm2
	paddd	%xmm3, %xmm2
	movdqu	%xmm4, 27288(%rbx)
	movdqu	%xmm0, 27304(%rbx)
	movdqu	%xmm1, 27320(%rbx)
	movdqu	%xmm2, 27336(%rbx)
	movl	$160, %eax
.Ltmp2201:
	.p2align	4, 0x90
.LBB15_26:                              # %for.body135
                                        #   Parent Loop BB15_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- $rax
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movl	26712(%r13,%rax,4), %ecx
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	addl	%ecx, 26712(%rbx,%rax,4)
.Ltmp2202:
	#DEBUG_VALUE: j <- [DW_OP_constu 1, DW_OP_or, DW_OP_stack_value] $rax
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movl	26716(%r13,%rax,4), %ecx
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	addl	%ecx, 26716(%rbx,%rax,4)
.Ltmp2203:
	#DEBUG_VALUE: j <- [DW_OP_constu 2, DW_OP_or, DW_OP_stack_value] $rax
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movl	26720(%r13,%rax,4), %ecx
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	addl	%ecx, 26720(%rbx,%rax,4)
.Ltmp2204:
	#DEBUG_VALUE: j <- [DW_OP_constu 3, DW_OP_or, DW_OP_stack_value] $rax
	.loc	0 2173 42                       # x264_src/encoder/encoder.c:2173:42
	movl	26724(%r13,%rax,4), %ecx
	.loc	0 2173 39                       # x264_src/encoder/encoder.c:2173:39
	addl	%ecx, 26724(%rbx,%rax,4)
	.loc	0 2172 9 is_stmt 1              # x264_src/encoder/encoder.c:2172:9
	addq	$4, %rax
.Ltmp2205:
	#DEBUG_VALUE: j <- $rax
	.loc	0 2171 10                       # x264_src/encoder/encoder.c:2171:10
	cmpq	$168, %rax
.Ltmp2206:
	.loc	0 2170 9                        # x264_src/encoder/encoder.c:2170:9
	jne	.LBB15_26
.Ltmp2207:
# %bb.27:                               # %for.cond148.preheader
                                        #   in Loop: Header=BB15_17 Depth=1
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	#DEBUG_VALUE: i <- $r12
	#DEBUG_VALUE: t <- $r13
	#DEBUG_VALUE: j <- 0
	.loc	0 2175 39                       # x264_src/encoder/encoder.c:2175:39
	movq	27384(%r13), %rax
	.loc	0 2175 36 is_stmt 0             # x264_src/encoder/encoder.c:2175:36
	addq	%rax, 27384(%rbx)
.Ltmp2208:
	#DEBUG_VALUE: j <- 1
	.loc	0 2175 39                       # x264_src/encoder/encoder.c:2175:39
	movq	27392(%r13), %rax
	.loc	0 2175 36                       # x264_src/encoder/encoder.c:2175:36
	addq	%rax, 27392(%rbx)
.Ltmp2209:
	#DEBUG_VALUE: j <- 2
	.loc	0 2175 39                       # x264_src/encoder/encoder.c:2175:39
	movq	27400(%r13), %rax
	.loc	0 2175 36                       # x264_src/encoder/encoder.c:2175:36
	addq	%rax, 27400(%rbx)
.Ltmp2210:
	#DEBUG_VALUE: j <- 3
	.loc	0 2176 47 is_stmt 1             # x264_src/encoder/encoder.c:2176:47
	movsd	27408(%r13), %xmm0              # xmm0 = mem[0],zero
	.loc	0 2176 30 is_stmt 0             # x264_src/encoder/encoder.c:2176:30
	addsd	27408(%rbx), %xmm0
	movsd	%xmm0, 27408(%rbx)
.Ltmp2211:
	.loc	0 2160 46 is_stmt 1             # x264_src/encoder/encoder.c:2160:46
	incq	%r12
.Ltmp2212:
	#DEBUG_VALUE: i <- $r12
	.loc	0 2160 34 is_stmt 0             # x264_src/encoder/encoder.c:2160:34
	movslq	4(%rbx), %rax
	.loc	0 2160 23                       # x264_src/encoder/encoder.c:2160:23
	cmpq	%rax, %r12
.Ltmp2213:
	.loc	0 2160 5                        # x264_src/encoder/encoder.c:2160:5
	jl	.LBB15_17
.Ltmp2214:
.LBB15_28:                              # %cleanup177
	#DEBUG_VALUE: x264_threaded_slices_write:h <- $rbx
	#DEBUG_VALUE: x264_threaded_slices_write:ret <- 0
	.loc	0 2180 1 epilogue_begin is_stmt 1 # x264_src/encoder/encoder.c:2180:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2215:
	#DEBUG_VALUE: x264_threaded_slices_write:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2216:
.Lfunc_end15:
	.size	x264_threaded_slices_write, .Lfunc_end15-x264_threaded_slices_write
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function x264_slices_write
.LCPI16_0:
	.zero	16,3
	.text
	.p2align	4, 0x90
	.type	x264_slices_write,@function
x264_slices_write:                      # @x264_slices_write
.Lfunc_begin16:
	.loc	0 2058 0                        # x264_src/encoder/encoder.c:2058:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_slices_write:h <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$776, %rsp                      # imm = 0x308
	.cfi_def_cfa_offset 832
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
.Ltmp2217:
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- 0
	.loc	0 2060 32 prologue_end          # x264_src/encoder/encoder.c:2060:32
	movl	7256(%rdi), %r12d
.Ltmp2218:
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- $r12d
	.loc	0 2077 17                       # x264_src/encoder/encoder.c:2077:17
	addq	$26712, %rdi                    # imm = 0x6858
.Ltmp2219:
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	xorl	%r13d, %r13d
	.loc	0 2077 5                        # x264_src/encoder/encoder.c:2077:5
	movl	$704, %edx                      # imm = 0x2C0
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp2220:
	.loc	0 2078 25 is_stmt 1             # x264_src/encoder/encoder.c:2078:25
	movl	$0, 17424(%r14)
	.loc	0 2079 18                       # x264_src/encoder/encoder.c:2079:18
	movl	7252(%r14), %eax
	.loc	0 2079 29 is_stmt 0             # x264_src/encoder/encoder.c:2079:29
	cmpl	%r12d, %eax
	.loc	0 2079 5                        # x264_src/encoder/encoder.c:2079:5
	jg	.LBB16_332
.Ltmp2221:
# %bb.1:                                # %while.body.lr.ph
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- 0
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- $r12d
	.loc	0 0 5                           # x264_src/encoder/encoder.c:0:5
	leaq	1792(%r14), %rcx
	movq	%rcx, 120(%rsp)                 # 8-byte Spill
	leaq	1800(%r14), %rbx
	leaq	1824(%r14), %r11
	leaq	1816(%r14), %rcx
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	leaq	13904(%r14), %rcx
	movq	%rcx, 64(%rsp)                  # 8-byte Spill
	leaq	25120(%r14), %rcx
	movq	%rcx, 184(%rsp)                 # 8-byte Spill
	leaq	26820(%r14), %rcx
	movq	%rcx, 32(%rsp)                  # 8-byte Spill
	leaq	26816(%r14), %rcx
	movq	%rcx, 192(%rsp)                 # 8-byte Spill
	leaq	27220(%r14), %rcx
	movq	%rcx, 152(%rsp)                 # 8-byte Spill
	leaq	27168(%r14), %rcx
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	leaq	27272(%r14), %rcx
	movq	%rcx, 136(%rsp)                 # 8-byte Spill
	leaq	27324(%r14), %rcx
	movq	%rcx, 160(%rsp)                 # 8-byte Spill
	leaq	25072(%r14), %rcx
	movq	%rcx, 176(%rsp)                 # 8-byte Spill
	leaq	25200(%r14), %rcx
	movq	%rcx, 168(%rsp)                 # 8-byte Spill
.Ltmp2222:
	.loc	0 2083 48 is_stmt 1             # x264_src/encoder/encoder.c:2083:48
	decl	%eax
.Ltmp2223:
	.loc	0 2079 5                        # x264_src/encoder/encoder.c:2079:5
	leaq	7760(%r14), %rcx
	movq	%rcx, 128(%rsp)                 # 8-byte Spill
	movl	$0, 72(%rsp)                    # 4-byte Folded Spill
	movl	%r12d, 52(%rsp)                 # 4-byte Spill
.Ltmp2224:
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 5 is_stmt 0                 # x264_src/encoder/encoder.c:0:5
	movq	%rbx, 56(%rsp)                  # 8-byte Spill
	movq	%r11, 16(%rsp)                  # 8-byte Spill
	jmp	.LBB16_3
.Ltmp2225:
	.p2align	4, 0x90
.LBB16_2:                               # %if.end43
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2094 44 is_stmt 1             # x264_src/encoder/encoder.c:2094:44
	leal	1(%rax), %ecx
	.loc	0 2094 26 is_stmt 0             # x264_src/encoder/encoder.c:2094:26
	movl	%ecx, 7252(%r14)
.Ltmp2226:
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2079 29 is_stmt 1             # x264_src/encoder/encoder.c:2079:29
	cmpl	%r12d, %eax
	jge	.LBB16_332
.Ltmp2227:
.LBB16_3:                               # %while.body
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB16_90 Depth 2
                                        #     Child Loop BB16_110 Depth 2
                                        #     Child Loop BB16_137 Depth 2
                                        #     Child Loop BB16_166 Depth 2
                                        #     Child Loop BB16_214 Depth 2
                                        #       Child Loop BB16_227 Depth 3
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2081 25                       # x264_src/encoder/encoder.c:2081:25
	movl	%r12d, 7256(%r14)
.Ltmp2228:
	.loc	0 2082 22                       # x264_src/encoder/encoder.c:2082:22
	movl	688(%r14), %ecx
	.loc	0 2082 13 is_stmt 0             # x264_src/encoder/encoder.c:2082:13
	testl	%ecx, %ecx
.Ltmp2229:
	.loc	0 2082 13                       # x264_src/encoder/encoder.c:2082:13
	je	.LBB16_7
.Ltmp2230:
# %bb.4:                                # %if.then6
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2083 75 is_stmt 1             # x264_src/encoder/encoder.c:2083:75
	addl	%ecx, %eax
	jmp	.LBB16_5
.Ltmp2231:
	.p2align	4, 0x90
.LBB16_7:                               # %if.else
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2084 27                       # x264_src/encoder/encoder.c:2084:27
	movl	692(%r14), %esi
	.loc	0 2084 18 is_stmt 0             # x264_src/encoder/encoder.c:2084:18
	testl	%esi, %esi
	.loc	0 2084 41                       # x264_src/encoder/encoder.c:2084:41
	je	.LBB16_312
.Ltmp2232:
# %bb.8:                                # %land.lhs.true
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2084 45                       # x264_src/encoder/encoder.c:2084:45
	cmpl	$0, 8(%r14)
.Ltmp2233:
	.loc	0 2084 18                       # x264_src/encoder/encoder.c:2084:18
	je	.LBB16_313
.Ltmp2234:
.LBB16_312:                             #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 0 18                          # x264_src/encoder/encoder.c:0:18
	movl	%r12d, %eax
	.loc	0 2084 18                       # x264_src/encoder/encoder.c:2084:18
	jmp	.LBB16_5
.Ltmp2235:
.LBB16_313:                             # %if.then17
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	.loc	0 2086 29 is_stmt 1             # x264_src/encoder/encoder.c:2086:29
	movq	3200(%r14), %rax
	.loc	0 2087 33                       # x264_src/encoder/encoder.c:2087:33
	movl	1084(%rax), %edi
	.loc	0 2086 34                       # x264_src/encoder/encoder.c:2086:34
	movl	1088(%rax), %edx
	.loc	0 2086 58 is_stmt 0             # x264_src/encoder/encoder.c:2086:58
	movzbl	136(%r14), %ecx
	.loc	0 2086 46                       # x264_src/encoder/encoder.c:2086:46
	sarl	%cl, %edx
.Ltmp2236:
	#DEBUG_VALUE: height <- $edx
	.loc	0 2087 44 is_stmt 1             # x264_src/encoder/encoder.c:2087:44
	shll	%cl, %edi
.Ltmp2237:
	#DEBUG_VALUE: width <- $edi
	.loc	0 0 44 is_stmt 0                # x264_src/encoder/encoder.c:0:44
	movl	72(%rsp), %eax                  # 4-byte Reload
	.loc	0 2088 24 is_stmt 1             # x264_src/encoder/encoder.c:2088:24
	incl	%eax
.Ltmp2238:
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- $eax
	.loc	0 0 24 is_stmt 0                # x264_src/encoder/encoder.c:0:24
	movl	%eax, 72(%rsp)                  # 4-byte Spill
.Ltmp2239:
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2089 39 is_stmt 1             # x264_src/encoder/encoder.c:2089:39
	imull	%eax, %edx
.Ltmp2240:
	.loc	0 2089 77 is_stmt 0             # x264_src/encoder/encoder.c:2089:77
	movl	%esi, %eax
	shrl	$31, %eax
	addl	%esi, %eax
	sarl	%eax
	.loc	0 2089 53                       # x264_src/encoder/encoder.c:2089:53
	addl	%edx, %eax
	.loc	0 2089 81                       # x264_src/encoder/encoder.c:2089:81
	cltd
	idivl	%esi
                                        # kill: def $eax killed $eax def $rax
	.loc	0 2089 106                      # x264_src/encoder/encoder.c:2089:106
	imull	%edi, %eax
	.loc	0 2089 114                      # x264_src/encoder/encoder.c:2089:114
	decl	%eax
.Ltmp2241:
	.p2align	4, 0x90
.LBB16_5:                               # %if.end33
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	.loc	0 2091 27 is_stmt 1             # x264_src/encoder/encoder.c:2091:27
	cmpl	%r12d, %eax
	cmovgel	%r12d, %eax
	.loc	0 2091 25 is_stmt 0             # x264_src/encoder/encoder.c:2091:25
	movl	%eax, 7256(%r14)
.Ltmp2242:
	#DEBUG_VALUE: x264_slice_write:cabac_bak <- undef
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1777 44 is_stmt 1             # x264_src/encoder/encoder.c:1777:44
	cmpl	$0, 640(%r14)
	.loc	0 1777 62 is_stmt 0             # x264_src/encoder/encoder.c:1777:62
	je	.LBB16_10
.Ltmp2243:
# %bb.6:                                # %land.rhs.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1777 80                       # x264_src/encoder/encoder.c:1777:80
	cmpl	$1, 1760(%r14)
	movl	$-7, %eax
	sbbl	$0, %eax
	movl	%eax, 44(%rsp)                  # 4-byte Spill
	jmp	.LBB16_11
.Ltmp2244:
	.p2align	4, 0x90
.LBB16_10:                              #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 0 80                          # x264_src/encoder/encoder.c:0:80
	movl	$-8, 44(%rsp)                   # 4-byte Folded Spill
.Ltmp2245:
.LBB16_11:                              # %land.end.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_write:overhead_guess <- undef
	.loc	0 1778 35 is_stmt 1             # x264_src/encoder/encoder.c:1778:35
	movl	684(%r14), %eax
.Ltmp2246:
	#DEBUG_VALUE: x264_slice_write:slice_max_size <- undef
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	0 0 35 is_stmt 0                # x264_src/encoder/encoder.c:0:35
	movl	%eax, 84(%rsp)                  # 4-byte Spill
.Ltmp2247:
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movq	1800(%r14), %rbp
	.loc	4 90 28 is_stmt 0               # x264_src/common/bs.h:90:28
	movl	1792(%r14), %ecx
	.loc	4 90 58                         # x264_src/common/bs.h:90:58
	movl	1824(%r14), %edx
.Ltmp2248:
	#DEBUG_VALUE: x264_slice_write:starting_bits <- undef
	.loc	0 1780 27 is_stmt 1             # x264_src/encoder/encoder.c:1780:27
	movl	13884(%r14), %eax
.Ltmp2249:
	#DEBUG_VALUE: x264_slice_write:b_deblock <- undef
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/encoder.c:0:27
	movl	%eax, 48(%rsp)                  # 4-byte Spill
	.loc	0 1781 21 is_stmt 1             # x264_src/encoder/encoder.c:1781:21
	movq	14688(%r14), %rax
.Ltmp2250:
	#DEBUG_VALUE: x264_slice_write:b_hpel <- undef
	.loc	0 1782 18                       # x264_src/encoder/encoder.c:1782:18
	cmpl	$0, 72(%rax)
	movq	%rcx, 104(%rsp)                 # 8-byte Spill
	movq	%rdx, 96(%rsp)                  # 8-byte Spill
	.loc	0 1782 25 is_stmt 0             # x264_src/encoder/encoder.c:1782:25
	je	.LBB16_44
.Ltmp2251:
# %bb.12:                               #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 0 25                          # x264_src/encoder/encoder.c:0:25
	movl	$0, 88(%rsp)                    # 4-byte Folded Spill
.Ltmp2252:
	#DEBUG_VALUE: x264_slice_write:b_deblock <- undef
	#DEBUG_VALUE: bs_realign:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 104 9 is_stmt 1               # x264_src/common/bs.h:104:9
	movl	%ebp, %eax
	andl	$3, %eax
.Ltmp2253:
	#DEBUG_VALUE: bs_realign:offset <- $eax
	.loc	4 104 9 is_stmt 0               # x264_src/common/bs.h:104:9
	je	.LBB16_14
.Ltmp2254:
.LBB16_13:                              # %if.then.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: bs_realign:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 106 37 is_stmt 1              # x264_src/common/bs.h:106:37
	movl	%ebp, %ecx
	andl	$3, %ecx
	movq	%rbp, %rdx
	andq	$-4, %rdx
	.loc	4 106 20 is_stmt 0              # x264_src/common/bs.h:106:20
	movq	%rdx, (%rbx)
	.loc	4 107 22 is_stmt 1              # x264_src/common/bs.h:107:22
	shll	$3, %ecx
	movl	$64, %esi
	subl	%ecx, %esi
	.loc	4 107 20 is_stmt 0              # x264_src/common/bs.h:107:20
	movl	%esi, (%r11)
	.loc	4 108 37 is_stmt 1              # x264_src/common/bs.h:108:37
	movl	(%rdx), %edx
.Ltmp2255:
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58                       # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2256:
	.loc	4 109 21                        # x264_src/common/bs.h:109:21
	leal	32(,%rax,8), %ecx
	negl	%ecx
                                        # kill: def $cl killed $cl killed $ecx
	shrq	%cl, %rdx
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rdx, (%rax)
.Ltmp2257:
.LBB16_14:                              # %bs_realign.exit.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_nal_start:h <- $r14
	#DEBUG_VALUE: x264_nal_start:i_type <- undef
	#DEBUG_VALUE: x264_nal_start:i_ref_idc <- undef
	.loc	0 1239 31                       # x264_src/encoder/encoder.c:1239:31
	movq	1768(%r14), %rax
	.loc	0 1239 42 is_stmt 0             # x264_src/encoder/encoder.c:1239:42
	movslq	1760(%r14), %rcx
	.loc	0 1239 24                       # x264_src/encoder/encoder.c:1239:24
	leaq	(%rcx,%rcx,2), %rcx
.Ltmp2258:
	#DEBUG_VALUE: x264_nal_start:nal <- undef
	.loc	0 1786 27 is_stmt 1             # x264_src/encoder/encoder.c:1786:27
	movq	1856(%r14), %xmm0               # xmm0 = mem[0],zero
.Ltmp2259:
	.loc	0 1241 20                       # x264_src/encoder/encoder.c:1241:20
	pshufd	$225, %xmm0, %xmm0              # xmm0 = xmm0[1,0,2,3]
	movq	%xmm0, (%rax,%rcx,8)
	.loc	0 1244 19                       # x264_src/encoder/encoder.c:1244:19
	movl	$0, 8(%rax,%rcx,8)
.Ltmp2260:
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 90 21                         # x264_src/common/bs.h:90:21
	movl	1800(%r14), %edx
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r14), %edx
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %edx
	subl	1824(%r14), %edx
	leal	64(%rdx), %esi
.Ltmp2261:
	.loc	0 1245 62 is_stmt 1             # x264_src/encoder/encoder.c:1245:62
	addl	$71, %edx
	testl	%esi, %esi
	cmovnsl	%esi, %edx
	sarl	$3, %edx
	.loc	0 1245 22 is_stmt 0             # x264_src/encoder/encoder.c:1245:22
	movslq	%edx, %rdx
	addq	1784(%r14), %rdx
	.loc	0 1245 19                       # x264_src/encoder/encoder.c:1245:19
	movq	%rdx, 16(%rax,%rcx,8)
.Ltmp2262:
	.loc	0 1789 5 is_stmt 1              # x264_src/encoder/encoder.c:1789:5
	movq	%r14, %rdi
	callq	x264_macroblock_thread_init@PLT
.Ltmp2263:
	.loc	0 1794 15                       # x264_src/encoder/encoder.c:1794:15
	movl	7252(%r14), %edi
	.loc	0 1794 57 is_stmt 0             # x264_src/encoder/encoder.c:1794:57
	movq	3200(%r14), %rax
	.loc	0 1794 62                       # x264_src/encoder/encoder.c:1794:62
	movl	1084(%rax), %eax
	.loc	0 1794 52                       # x264_src/encoder/encoder.c:1794:52
	imull	1748(%r14), %eax
	.loc	0 1794 26                       # x264_src/encoder/encoder.c:1794:26
	cmpl	%eax, %edi
.Ltmp2264:
	.loc	0 1794 9                        # x264_src/encoder/encoder.c:1794:9
	je	.LBB16_16
.Ltmp2265:
# %bb.15:                               # %if.then.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1796 28 is_stmt 1             # x264_src/encoder/encoder.c:1796:28
	movl	25800(%r14), %eax
	.loc	0 1796 20 is_stmt 0             # x264_src/encoder/encoder.c:1796:20
	movl	%eax, 13868(%r14)
	.loc	0 1797 44 is_stmt 1             # x264_src/encoder/encoder.c:1797:44
	movq	3328(%r14), %rcx
	.loc	0 1797 39 is_stmt 0             # x264_src/encoder/encoder.c:1797:39
	subl	36(%rcx), %eax
	.loc	0 1797 26                       # x264_src/encoder/encoder.c:1797:26
	movl	%eax, 13872(%r14)
.Ltmp2266:
.LBB16_16:                              # %if.end.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1800 53 is_stmt 1             # x264_src/encoder/encoder.c:1800:53
	movl	1860(%r14), %eax
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- $eax
.Ltmp2267:
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 0 53 is_stmt 0                # x264_src/encoder/encoder.c:0:53
	movl	%eax, 112(%rsp)                 # 4-byte Spill
.Ltmp2268:
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	.loc	0 191 9 is_stmt 1               # x264_src/encoder/encoder.c:191:9
	cmpl	$0, 7268(%r14)
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r15                   # 8-byte Reload
.Ltmp2269:
	.loc	0 191 9 is_stmt 0               # x264_src/encoder/encoder.c:191:9
	je	.LBB16_45
.Ltmp2270:
# %bb.17:                               # %if.then.i874.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 194 40 is_stmt 1              # x264_src/encoder/encoder.c:194:40
	sarl	%edi
.Ltmp2271:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	leal	1(%rdi), %r8d
.Ltmp2272:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r8d, %eax
	shrl	$16, %eax
.Ltmp2273:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%ecx, %ecx
	cmpl	$65535, %edi                    # imm = 0xFFFF
	setge	%cl
.Ltmp2274:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %eax
.Ltmp2275:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $eax
	shll	$5, %ecx
.Ltmp2276:
	#DEBUG_VALUE: bs_write_ue_big:size <- $ecx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%eax, %edx
	shrl	$8, %edx
	leal	16(%rcx), %edi
.Ltmp2277:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %eax                      # imm = 0x100
.Ltmp2278:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%eax, %edx
.Ltmp2279:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edx
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edx, %rax
	movzbl	x264_ue_size_tab(%rax), %eax
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%dil, %edx
.Ltmp2280:
	cmovll	%ecx, %edx
	movzbl	%dl, %edx
	addl	%eax, %edx
	shrl	%edx
.Ltmp2281:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	movl	(%r11), %eax
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2282:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2283:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_19
.Ltmp2284:
# %bb.18:                               # %if.then.i.i.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r9
.Ltmp2285:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2286:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2287:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
.Ltmp2288:
.LBB16_19:                              # %bs_write.exit.i.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2289:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r8d, %edi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r9, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2290:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$33, %eax
.Ltmp2291:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jge	.LBB16_21
.Ltmp2292:
.LBB16_20:                              # %if.end.sink.split.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2293:
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2294:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2295:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdi
.Ltmp2296:
.LBB16_21:                              # %if.end.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 199 25                        # x264_src/encoder/encoder.c:199:25
	movl	7248(%r14), %r8d
.Ltmp2297:
	#DEBUG_VALUE: bs_write_ue_big:val <- [DW_OP_plus_uconst 5, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	addl	$6, %r8d
.Ltmp2298:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r8d, %ecx
	shrl	$16, %ecx
.Ltmp2299:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r8d                    # imm = 0x10000
.Ltmp2300:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %ecx
.Ltmp2301:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2302:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2303:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2304:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2305:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2306:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2307:
	cmovll	%edx, %r9d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2308:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rdi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2309:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2310:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_23
.Ltmp2311:
# %bb.22:                               # %if.then.i.i482.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2312:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2313:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2314:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdi
.Ltmp2315:
.LBB16_23:                              # %bs_write.exit.i466.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2316:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r8d, %r8d
.Ltmp2317:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2318:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2319:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_25
.Ltmp2320:
# %bb.24:                               # %if.then.i25.i474.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2321:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2322:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2323:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2324:
.LBB16_25:                              # %bs_write_ue_big.exit491.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 200 25                        # x264_src/encoder/encoder.c:200:25
	movl	7260(%r14), %edi
.Ltmp2325:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%edi
.Ltmp2326:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2327:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
.Ltmp2328:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2329:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2330:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2331:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2332:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2333:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2334:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2335:
	cmovll	%edx, %r9d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2336:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2337:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2338:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_27
.Ltmp2339:
# %bb.26:                               # %if.then.i.i529.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2340:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2341:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2342:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2343:
.LBB16_27:                              # %bs_write.exit.i513.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2344:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%edi, %edi
.Ltmp2345:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2346:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2347:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_29
.Ltmp2348:
# %bb.28:                               # %if.then.i25.i521.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2349:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2350:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2351:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdi
.Ltmp2352:
.LBB16_29:                              # %bs_write_ue_big.exit538.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 201 22                        # x264_src/encoder/encoder.c:201:22
	movq	7232(%r14), %rdx
	.loc	0 201 27 is_stmt 0              # x264_src/encoder/encoder.c:201:27
	movl	24(%rdx), %ecx
	.loc	0 201 102                       # x264_src/encoder/encoder.c:201:102
	movl	$-1, %r8d
	shll	%cl, %r8d
	notl	%r8d
	.loc	0 201 65                        # x264_src/encoder/encoder.c:201:65
	andl	7264(%r14), %r8d
.Ltmp2353:
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdi
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
.Ltmp2354:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2355:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2356:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_31
.Ltmp2357:
# %bb.30:                               # %if.then.i.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2358:
	shlq	%cl, %r8
.Ltmp2359:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2360:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	1800(%r14), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	1824(%r14), %eax
	addl	$32, %eax
	movl	%eax, 1824(%r14)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, 1800(%r14)
.Ltmp2361:
	.loc	0 203 14                        # x264_src/encoder/encoder.c:203:14
	movq	7232(%r14), %rdx
.Ltmp2362:
.LBB16_31:                              # %bs_write.exit.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 203 10 is_stmt 0              # x264_src/encoder/encoder.c:203:10
	cmpl	$0, 1092(%rdx)
.Ltmp2363:
	.loc	0 203 9                         # x264_src/encoder/encoder.c:203:9
	je	.LBB16_48
.Ltmp2364:
.LBB16_32:                              # %if.end11.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 210 13 is_stmt 1              # x264_src/encoder/encoder.c:210:13
	movl	7280(%r14), %edi
	.loc	0 210 26 is_stmt 0              # x264_src/encoder/encoder.c:210:26
	testl	%edi, %edi
.Ltmp2365:
	.loc	0 210 9                         # x264_src/encoder/encoder.c:210:9
	js	.LBB16_37
.Ltmp2366:
# %bb.33:                               # %if.then12.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15 is_stmt 1              # x264_src/common/bs.h:211:15
	incq	%rdi
.Ltmp2367:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2368:
	#DEBUG_VALUE: bs_write_ue_big:val <- undef
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%dl
.Ltmp2369:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2370:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2371:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r8d
	shrl	$8, %r8d
	leal	16(%rdx), %r9d
.Ltmp2372:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2373:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r8d
.Ltmp2374:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r8d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %r8d
.Ltmp2375:
	cmovll	%edx, %r8d
	movzbl	%r8b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2376:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2377:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2378:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_35
.Ltmp2379:
# %bb.34:                               # %if.then.i.i601.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2380:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2381:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2382:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2383:
.LBB16_35:                              # %bs_write.exit.i585.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2384:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2385:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2386:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_37
.Ltmp2387:
# %bb.36:                               # %if.then.i25.i593.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2388:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2389:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2390:
.LBB16_37:                              # %if.end14.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 213 13                        # x264_src/encoder/encoder.c:213:13
	movq	7232(%r14), %rcx
	.loc	0 213 18 is_stmt 0              # x264_src/encoder/encoder.c:213:18
	movl	28(%rcx), %edx
.Ltmp2391:
	.loc	0 213 9                         # x264_src/encoder/encoder.c:213:9
	cmpl	$1, %edx
	je	.LBB16_53
.Ltmp2392:
# %bb.38:                               # %if.end14.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	testl	%edx, %edx
	jne	.LBB16_60
.Ltmp2393:
# %bb.39:                               # %if.then17.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 215 31 is_stmt 1              # x264_src/encoder/encoder.c:215:31
	movl	32(%rcx), %ecx
	.loc	0 215 96 is_stmt 0              # x264_src/encoder/encoder.c:215:96
	movl	$-1, %edx
	shll	%cl, %edx
	notl	%edx
	.loc	0 215 61                        # x264_src/encoder/encoder.c:215:61
	andl	7284(%r14), %edx
.Ltmp2394:
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rdx
.Ltmp2395:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2396:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2397:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_41
.Ltmp2398:
# %bb.40:                               # %if.then.i619.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2399:
	shlq	%cl, %rdx
.Ltmp2400:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2401:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2402:
.LBB16_41:                              # %bs_write.exit627.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 216 17                        # x264_src/encoder/encoder.c:216:17
	movq	7240(%r14), %rcx
	.loc	0 216 13 is_stmt 0              # x264_src/encoder/encoder.c:216:13
	cmpl	$0, 12(%rcx)
	.loc	0 216 34                        # x264_src/encoder/encoder.c:216:34
	je	.LBB16_60
.Ltmp2403:
# %bb.42:                               # %land.lhs.true.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 216 38                        # x264_src/encoder/encoder.c:216:38
	cmpl	$0, 7272(%r14)
.Ltmp2404:
	.loc	0 216 13                        # x264_src/encoder/encoder.c:216:13
	jne	.LBB16_60
.Ltmp2405:
# %bb.43:                               # %if.then27.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 217 33 is_stmt 1              # x264_src/encoder/encoder.c:217:33
	movl	7288(%r14), %ecx
.Ltmp2406:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %edi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %edx
	subl	%edi, %edx
.Ltmp2407:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2408:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%edi, %edx
.Ltmp2409:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	#DEBUG_VALUE: bs_write_se:val <- $edx
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%edx, %ecx
	shrl	$8, %ecx
.Ltmp2410:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%edi, %edi
	cmpl	$256, %edx                      # imm = 0x100
	setge	%dil
.Ltmp2411:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%edx, %ecx
.Ltmp2412:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %edi
.Ltmp2413:
	#DEBUG_VALUE: bs_write_se:size <- $edi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2414:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%edi, %ecx
.Ltmp2415:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rdx
.Ltmp2416:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2417:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$33, %eax
.Ltmp2418:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jl	.LBB16_59
	jmp	.LBB16_60
.Ltmp2419:
	.p2align	4, 0x90
.LBB16_44:                              # %lor.rhs.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1782 25 is_stmt 1             # x264_src/encoder/encoder.c:1782:25
	cmpq	$0, 376(%r14)
	sete	%al
	movl	%eax, 88(%rsp)                  # 4-byte Spill
.Ltmp2420:
	#DEBUG_VALUE: x264_slice_write:b_deblock <- undef
	#DEBUG_VALUE: bs_realign:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 104 9                         # x264_src/common/bs.h:104:9
	movl	%ebp, %eax
	andl	$3, %eax
.Ltmp2421:
	#DEBUG_VALUE: bs_realign:offset <- undef
	.loc	4 104 9 is_stmt 0               # x264_src/common/bs.h:104:9
	jne	.LBB16_13
	jmp	.LBB16_14
.Ltmp2422:
	.p2align	4, 0x90
.LBB16_45:                              # %if.else.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15 is_stmt 1              # x264_src/common/bs.h:211:15
	incl	%edi
.Ltmp2423:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %eax
	shrl	$16, %eax
.Ltmp2424:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%ecx, %ecx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%cl
.Ltmp2425:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %eax
.Ltmp2426:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $eax
	shll	$5, %ecx
.Ltmp2427:
	#DEBUG_VALUE: bs_write_ue_big:size <- $ecx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%eax, %edx
	shrl	$8, %edx
	leal	16(%rcx), %r8d
.Ltmp2428:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %eax                      # imm = 0x100
.Ltmp2429:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%eax, %edx
.Ltmp2430:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edx
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edx, %rax
	movzbl	x264_ue_size_tab(%rax), %eax
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r8b, %edx
.Ltmp2431:
	cmovll	%ecx, %edx
	movzbl	%dl, %edx
	addl	%eax, %edx
	shrl	%edx
.Ltmp2432:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	movl	(%r11), %eax
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2433:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2434:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_47
.Ltmp2435:
# %bb.46:                               # %if.then.i.i435.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2436:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2437:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2438:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2439:
.LBB16_47:                              # %bs_write.exit.i419.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2440:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%edi, %edi
.Ltmp2441:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2442:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2443:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jle	.LBB16_20
	jmp	.LBB16_21
.Ltmp2444:
	.p2align	4, 0x90
.LBB16_48:                              # %if.then6.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 205 27 is_stmt 1              # x264_src/encoder/encoder.c:205:27
	movl	7272(%r14), %ecx
.Ltmp2445:
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rdx
	addq	%rdx, %rdx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rcx, %rdx
	movq	%rdx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2446:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2447:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_50
.Ltmp2448:
# %bb.49:                               # %if.then.i548.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2449:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2450:
	.loc	0 206 17                        # x264_src/encoder/encoder.c:206:17
	movl	7272(%r14), %ecx
.Ltmp2451:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movl	$64, %eax
.Ltmp2452:
.LBB16_50:                              # %bs_write1.exit.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 206 13                        # x264_src/encoder/encoder.c:206:13
	testl	%ecx, %ecx
.Ltmp2453:
	.loc	0 206 13                        # x264_src/encoder/encoder.c:206:13
	je	.LBB16_32
.Ltmp2454:
# %bb.51:                               # %if.then9.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 207 31 is_stmt 1              # x264_src/encoder/encoder.c:207:31
	movl	7276(%r14), %edx
.Ltmp2455:
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- undef
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rcx
	addq	%rcx, %rcx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rdx, %rcx
	movq	%rcx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2456:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2457:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_32
.Ltmp2458:
# %bb.52:                               # %if.then.i558.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $ecx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%ecx
.Ltmp2459:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%ecx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, (%rbx)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, (%r11)
	movl	$64, %eax
	jmp	.LBB16_32
.Ltmp2460:
	.p2align	4, 0x90
.LBB16_53:                              # %land.lhs.true33.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 219 43                        # x264_src/encoder/encoder.c:219:43
	cmpl	$0, 36(%rcx)
.Ltmp2461:
	.loc	0 219 14 is_stmt 0              # x264_src/encoder/encoder.c:219:14
	jne	.LBB16_60
.Ltmp2462:
# %bb.54:                               # %if.then36.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 221 25 is_stmt 1              # x264_src/encoder/encoder.c:221:25
	movl	7292(%r14), %ecx
.Ltmp2463:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %edi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %edx
	subl	%edi, %edx
.Ltmp2464:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2465:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%edi, %edx
.Ltmp2466:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	#DEBUG_VALUE: bs_write_se:val <- $edx
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%edx, %ecx
	shrl	$8, %ecx
.Ltmp2467:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%edi, %edi
	cmpl	$256, %edx                      # imm = 0x100
	setge	%dil
.Ltmp2468:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%edx, %ecx
.Ltmp2469:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %edi
.Ltmp2470:
	#DEBUG_VALUE: bs_write_se:size <- $edi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2471:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%edi, %ecx
.Ltmp2472:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rdx
.Ltmp2473:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2474:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2475:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_56
.Ltmp2476:
# %bb.55:                               # %if.then.i.i675.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2477:
	shlq	%cl, %rdx
.Ltmp2478:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2479:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2480:
.LBB16_56:                              # %bs_write_se.exit683.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 222 17                        # x264_src/encoder/encoder.c:222:17
	movq	7240(%r14), %rcx
	.loc	0 222 13 is_stmt 0              # x264_src/encoder/encoder.c:222:13
	cmpl	$0, 12(%rcx)
	.loc	0 222 34                        # x264_src/encoder/encoder.c:222:34
	je	.LBB16_60
.Ltmp2481:
# %bb.57:                               # %land.lhs.true40.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 222 38                        # x264_src/encoder/encoder.c:222:38
	cmpl	$0, 7272(%r14)
.Ltmp2482:
	.loc	0 222 13                        # x264_src/encoder/encoder.c:222:13
	jne	.LBB16_60
.Ltmp2483:
# %bb.58:                               # %if.then43.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 223 29 is_stmt 1              # x264_src/encoder/encoder.c:223:29
	movl	7296(%r14), %ecx
.Ltmp2484:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %edi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %edx
	subl	%edi, %edx
.Ltmp2485:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2486:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%edi, %edx
.Ltmp2487:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	#DEBUG_VALUE: bs_write_se:val <- $edx
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%edx, %ecx
	shrl	$8, %ecx
.Ltmp2488:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%edi, %edi
	cmpl	$256, %edx                      # imm = 0x100
	setge	%dil
.Ltmp2489:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%edx, %ecx
.Ltmp2490:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %edi
.Ltmp2491:
	#DEBUG_VALUE: bs_write_se:size <- $edi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2492:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%edi, %ecx
.Ltmp2493:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rdx
.Ltmp2494:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2495:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2496:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_60
.Ltmp2497:
.LBB16_59:                              # %if.end48.sink.split.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp2498:
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2499:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2500:
	.p2align	4, 0x90
.LBB16_60:                              # %if.end48.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 226 13                        # x264_src/encoder/encoder.c:226:13
	movq	7240(%r14), %rcx
	.loc	0 226 9 is_stmt 0               # x264_src/encoder/encoder.c:226:9
	cmpl	$0, 56(%rcx)
.Ltmp2501:
	.loc	0 226 9                         # x264_src/encoder/encoder.c:226:9
	je	.LBB16_65
.Ltmp2502:
# %bb.61:                               # %if.then51.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 227 29 is_stmt 1              # x264_src/encoder/encoder.c:227:29
	movl	7300(%r14), %edi
.Ltmp2503:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%edi
.Ltmp2504:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2505:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%dl
.Ltmp2506:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2507:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2508:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r8d
	shrl	$8, %r8d
	leal	16(%rdx), %r9d
.Ltmp2509:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2510:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r8d
.Ltmp2511:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r8d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %r8d
.Ltmp2512:
	cmovll	%edx, %r8d
	movzbl	%r8b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2513:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2514:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2515:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_63
.Ltmp2516:
# %bb.62:                               # %if.then.i.i751.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2517:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2518:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2519:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2520:
.LBB16_63:                              # %bs_write.exit.i735.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2521:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%edi, %edi
.Ltmp2522:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2523:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2524:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_65
.Ltmp2525:
# %bb.64:                               # %if.then.i25.i743.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2526:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2527:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2528:
.LBB16_65:                              # %if.end52.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 229 13                        # x264_src/encoder/encoder.c:229:13
	movl	7248(%r14), %ecx
	.loc	0 229 20 is_stmt 0              # x264_src/encoder/encoder.c:229:20
	cmpl	$1, %ecx
.Ltmp2529:
	.loc	0 229 9                         # x264_src/encoder/encoder.c:229:9
	jne	.LBB16_68
.Ltmp2530:
# %bb.66:                               # %if.then55.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 230 27 is_stmt 1              # x264_src/encoder/encoder.c:230:27
	movl	7304(%r14), %edx
.Ltmp2531:
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- undef
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rcx
	addq	%rcx, %rcx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rdx, %rcx
	movq	%rcx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2532:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2533:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_70
.Ltmp2534:
# %bb.67:                               # %if.then.i768.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $ecx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%ecx
.Ltmp2535:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%ecx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2536:
	.loc	0 232 13                        # x264_src/encoder/encoder.c:232:13
	movl	7248(%r14), %ecx
	movl	$64, %eax
.Ltmp2537:
.LBB16_68:                              # %if.end56.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 232 36 is_stmt 0              # x264_src/encoder/encoder.c:232:36
	cmpl	$3, %ecx
	ja	.LBB16_83
.Ltmp2538:
# %bb.69:                               # %if.end56.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 0 36                          # x264_src/encoder/encoder.c:0:36
	cmpl	$2, %ecx
	je	.LBB16_83
.Ltmp2539:
.LBB16_70:                              # %if.then64.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 234 27 is_stmt 1              # x264_src/encoder/encoder.c:234:27
	movl	7308(%r14), %ecx
.Ltmp2540:
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rdx
	addq	%rdx, %rdx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rcx, %rdx
	movq	%rdx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2541:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2542:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_72
.Ltmp2543:
# %bb.71:                               # %if.then.i781.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2544:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2545:
	.loc	0 235 17                        # x264_src/encoder/encoder.c:235:17
	movl	7308(%r14), %ecx
.Ltmp2546:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movl	$64, %eax
.Ltmp2547:
.LBB16_72:                              # %bs_write1.exit786.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 235 13                        # x264_src/encoder/encoder.c:235:13
	testl	%ecx, %ecx
.Ltmp2548:
	.loc	0 235 13                        # x264_src/encoder/encoder.c:235:13
	je	.LBB16_83
.Ltmp2549:
# %bb.73:                               # %if.then67.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 237 33 is_stmt 1              # x264_src/encoder/encoder.c:237:33
	movl	7312(%r14), %edi
.Ltmp2550:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2551:
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%dl
.Ltmp2552:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2553:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2554:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r8d
	shrl	$8, %r8d
	leal	16(%rdx), %r9d
.Ltmp2555:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2556:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r8d
.Ltmp2557:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r8d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %r8d
.Ltmp2558:
	cmovll	%edx, %r8d
	movzbl	%r8b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2559:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2560:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2561:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_75
.Ltmp2562:
# %bb.74:                               # %if.then.i.i824.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2563:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2564:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2565:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2566:
.LBB16_75:                              # %bs_write.exit.i808.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2567:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2568:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2569:
	#DEBUG_VALUE: bs_write:i_bits <- undef
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_76
.Ltmp2570:
# %bb.78:                               # %if.then.i25.i816.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2571:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2572:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2573:
	.loc	0 238 21                        # x264_src/encoder/encoder.c:238:21
	movl	7248(%r14), %ecx
	.loc	0 238 28 is_stmt 0              # x264_src/encoder/encoder.c:238:28
	cmpl	$1, %ecx
.Ltmp2574:
	.loc	0 238 17                        # x264_src/encoder/encoder.c:238:17
	je	.LBB16_79
.Ltmp2575:
	.p2align	4, 0x90
.LBB16_77:                              # %if.end75.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 244 20 is_stmt 1              # x264_src/encoder/encoder.c:244:20
	cmpl	$2, %ecx
.Ltmp2576:
	.loc	0 244 9 is_stmt 0               # x264_src/encoder/encoder.c:244:9
	jne	.LBB16_84
	jmp	.LBB16_103
.Ltmp2577:
	.p2align	4, 0x90
.LBB16_76:                              # %bs_write_ue_big.exit833.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 238 21 is_stmt 1              # x264_src/encoder/encoder.c:238:21
	movl	7248(%r14), %ecx
	.loc	0 238 28 is_stmt 0              # x264_src/encoder/encoder.c:238:28
	cmpl	$1, %ecx
.Ltmp2578:
	.loc	0 238 17                        # x264_src/encoder/encoder.c:238:17
	jne	.LBB16_77
.Ltmp2579:
.LBB16_79:                              # %if.then71.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 239 37 is_stmt 1              # x264_src/encoder/encoder.c:239:37
	movl	7316(%r14), %edi
.Ltmp2580:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	0 0 37 is_stmt 0                # x264_src/encoder/encoder.c:0:37
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2581:
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%dl
.Ltmp2582:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2583:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2584:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r8d
	shrl	$8, %r8d
	leal	16(%rdx), %r9d
.Ltmp2585:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2586:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r8d
.Ltmp2587:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r8d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %r8d
.Ltmp2588:
	cmovll	%edx, %r8d
	movzbl	%r8b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2589:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2590:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2591:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_81
.Ltmp2592:
# %bb.80:                               # %if.then.i.i871.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2593:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2594:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2595:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2596:
.LBB16_81:                              # %bs_write.exit.i855.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2597:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2598:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2599:
	#DEBUG_VALUE: bs_write:i_bits <- undef
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_83
.Ltmp2600:
# %bb.82:                               # %if.then.i25.i863.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2601:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2602:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2603:
	.p2align	4, 0x90
.LBB16_83:                              # %if.end75thread-pre-split.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 244 13                        # x264_src/encoder/encoder.c:244:13
	movl	7248(%r14), %ecx
	.loc	0 244 20 is_stmt 0              # x264_src/encoder/encoder.c:244:20
	cmpl	$2, %ecx
.Ltmp2604:
	.loc	0 244 9                         # x264_src/encoder/encoder.c:244:9
	je	.LBB16_103
.Ltmp2605:
.LBB16_84:                              # %if.then78.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 246 27 is_stmt 1              # x264_src/encoder/encoder.c:246:27
	movl	7320(%r14), %ecx
.Ltmp2606:
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rdx
	addq	%rdx, %rdx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rcx, %rdx
	movq	%rdx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2607:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2608:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_86
.Ltmp2609:
# %bb.85:                               # %if.then.i888.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2610:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2611:
	.loc	0 247 17                        # x264_src/encoder/encoder.c:247:17
	movl	7320(%r14), %ecx
.Ltmp2612:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movl	$64, %eax
.Ltmp2613:
.LBB16_86:                              # %bs_write1.exit893.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 247 13                        # x264_src/encoder/encoder.c:247:13
	testl	%ecx, %ecx
.Ltmp2614:
	.loc	0 247 13                        # x264_src/encoder/encoder.c:247:13
	je	.LBB16_103
.Ltmp2615:
# %bb.87:                               # %for.cond.preheader.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 249 31 is_stmt 1              # x264_src/encoder/encoder.c:249:31
	cmpl	$0, 7312(%r14)
.Ltmp2616:
	.loc	0 249 13 is_stmt 0              # x264_src/encoder/encoder.c:249:13
	jle	.LBB16_99
.Ltmp2617:
# %bb.88:                               # %for.body.i.i.preheader
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	xorl	%edi, %edi
	jmp	.LBB16_90
.Ltmp2618:
	.p2align	4, 0x90
.LBB16_89:                              # %bs_write_ue_big.exit1015.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 249 63                        # x264_src/encoder/encoder.c:249:63
	incq	%rdi
.Ltmp2619:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 249 37                        # x264_src/encoder/encoder.c:249:37
	movslq	7312(%r14), %rcx
	.loc	0 249 31                        # x264_src/encoder/encoder.c:249:31
	cmpq	%rcx, %rdi
.Ltmp2620:
	.loc	0 249 13                        # x264_src/encoder/encoder.c:249:13
	jge	.LBB16_99
.Ltmp2621:
.LBB16_90:                              # %for.body.i.i
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 251 62 is_stmt 1              # x264_src/encoder/encoder.c:251:62
	movl	7328(%r14,%rdi,8), %r8d
.Ltmp2622:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%r8d
.Ltmp2623:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r8d, %ecx
	shrl	$16, %ecx
.Ltmp2624:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r8d                    # imm = 0x10000
	setge	%dl
.Ltmp2625:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %ecx
.Ltmp2626:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2627:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2628:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2629:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2630:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2631:
	cmovll	%edx, %r9d
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2632:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r9
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2633:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_92
.Ltmp2634:
# %bb.91:                               # %if.then.i.i959.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r9
.Ltmp2635:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2636:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2637:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
.Ltmp2638:
.LBB16_92:                              # %bs_write.exit.i943.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2639:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r8d, %r8d
.Ltmp2640:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r9, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2641:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_94
.Ltmp2642:
# %bb.93:                               # %if.then.i25.i951.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2643:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2644:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2645:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2646:
.LBB16_94:                              # %bs_write_ue_big.exit968.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 252 62                        # x264_src/encoder/encoder.c:252:62
	movl	7332(%r14,%rdi,8), %r9d
.Ltmp2647:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%r9d
.Ltmp2648:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r9d, %ecx
	shrl	$16, %ecx
.Ltmp2649:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r9d                    # imm = 0x10000
.Ltmp2650:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r9d, %ecx
.Ltmp2651:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2652:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2653:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r10d
	shrl	$8, %r10d
	leal	16(%rdx), %r11d
.Ltmp2654:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2655:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r10d
.Ltmp2656:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r10d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r10d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r11b, %r10d
.Ltmp2657:
	cmovll	%edx, %r10d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2658:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2659:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2660:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_96
.Ltmp2661:
# %bb.95:                               # %if.then.i.i1006.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2662:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2663:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	movq	16(%rsp), %r11                  # 8-byte Reload
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2664:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
	jmp	.LBB16_97
.Ltmp2665:
	.p2align	4, 0x90
.LBB16_96:                              #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 27 is_stmt 0                # x264_src/common/bs.h:0:27
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp2666:
.LBB16_97:                              # %bs_write.exit.i990.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27 is_stmt 1              # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2667:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r9d, %r9d
.Ltmp2668:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %r9
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2669:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2670:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_89
.Ltmp2671:
# %bb.98:                               # %if.then.i25.i998.i.i
                                        #   in Loop: Header=BB16_90 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r9
.Ltmp2672:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2673:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	jmp	.LBB16_89
.Ltmp2674:
	.p2align	4, 0x90
.LBB16_99:                              # %for.cond.cleanup.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdx
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	$2, %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-2(%rax), %ecx
	movl	%ecx, (%r11)
.Ltmp2675:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$34, %eax
.Ltmp2676:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_101
.Ltmp2677:
# %bb.100:                              # %if.then.i.i912.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 0
                                        # kill: def $cl killed $cl killed $rcx
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	shlq	%cl, %rdx
.Ltmp2678:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2679:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %ecx
	addl	$32, %ecx
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2680:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdx
.Ltmp2681:
.LBB16_101:                             # %bs_write.exit.i899.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 3
	#DEBUG_VALUE: bs_write:i_bits <- 4
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	leaq	4(,%rdx,8), %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-3(%rcx), %eax
	movl	%eax, (%r11)
.Ltmp2682:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$35, %ecx
.Ltmp2683:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_103
.Ltmp2684:
# %bb.102:                              # %if.then.i25.i904.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 3
	#DEBUG_VALUE: bs_write:i_bits <- 4
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp2685:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2686:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2687:
	.p2align	4, 0x90
.LBB16_103:                             # %if.end91.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 257 20                        # x264_src/encoder/encoder.c:257:20
	cmpl	$1, 7248(%r14)
	jne	.LBB16_123
.Ltmp2688:
# %bb.104:                              # %if.then94.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 259 27                        # x264_src/encoder/encoder.c:259:27
	movl	7324(%r14), %ecx
.Ltmp2689:
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rdx
	addq	%rdx, %rdx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	orq	%rcx, %rdx
	movq	%rdx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2690:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2691:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_106
.Ltmp2692:
# %bb.105:                              # %if.then.i1023.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:i_bit <- $ecx
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2693:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2694:
	.loc	0 260 17                        # x264_src/encoder/encoder.c:260:17
	movl	7324(%r14), %ecx
.Ltmp2695:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movl	$64, %eax
.Ltmp2696:
.LBB16_106:                             # %bs_write1.exit1028.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 260 13                        # x264_src/encoder/encoder.c:260:13
	testl	%ecx, %ecx
	je	.LBB16_123
.Ltmp2697:
# %bb.107:                              # %for.cond99.preheader.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 262 31 is_stmt 1              # x264_src/encoder/encoder.c:262:31
	cmpl	$0, 7316(%r14)
	jle	.LBB16_119
.Ltmp2698:
# %bb.108:                              # %for.body103.i.i.preheader
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 0 31 is_stmt 0                # x264_src/encoder/encoder.c:0:31
	xorl	%edi, %edi
	jmp	.LBB16_110
.Ltmp2699:
	.p2align	4, 0x90
.LBB16_109:                             # %bs_write_ue_big.exit1150.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 262 63                        # x264_src/encoder/encoder.c:262:63
	incq	%rdi
.Ltmp2700:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 262 37                        # x264_src/encoder/encoder.c:262:37
	movslq	7316(%r14), %rcx
	.loc	0 262 31                        # x264_src/encoder/encoder.c:262:31
	cmpq	%rcx, %rdi
.Ltmp2701:
	.loc	0 262 13                        # x264_src/encoder/encoder.c:262:13
	jge	.LBB16_119
.Ltmp2702:
.LBB16_110:                             # %for.body103.i.i
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 264 62 is_stmt 1              # x264_src/encoder/encoder.c:264:62
	movl	7456(%r14,%rdi,8), %r8d
.Ltmp2703:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%r8d
.Ltmp2704:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r8d, %ecx
	shrl	$16, %ecx
.Ltmp2705:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r8d                    # imm = 0x10000
	setge	%dl
.Ltmp2706:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %ecx
.Ltmp2707:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2708:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2709:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2710:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2711:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2712:
	cmovll	%edx, %r9d
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2713:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r9
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2714:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_112
.Ltmp2715:
# %bb.111:                              # %if.then.i.i1094.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r9
.Ltmp2716:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2717:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2718:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
.Ltmp2719:
.LBB16_112:                             # %bs_write.exit.i1078.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2720:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r9
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r8d, %r8d
.Ltmp2721:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r9, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2722:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_114
.Ltmp2723:
# %bb.113:                              # %if.then.i25.i1086.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2724:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2725:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2726:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2727:
.LBB16_114:                             # %bs_write_ue_big.exit1103.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 265 62                        # x264_src/encoder/encoder.c:265:62
	movl	7460(%r14,%rdi,8), %r9d
.Ltmp2728:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%r9d
.Ltmp2729:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r9d, %ecx
	shrl	$16, %ecx
.Ltmp2730:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r9d                    # imm = 0x10000
.Ltmp2731:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r9d, %ecx
.Ltmp2732:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2733:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2734:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r10d
	shrl	$8, %r10d
	leal	16(%rdx), %r11d
.Ltmp2735:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2736:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r10d
.Ltmp2737:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r10d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r10d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r11b, %r10d
.Ltmp2738:
	cmovll	%edx, %r10d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2739:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2740:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2741:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_116
.Ltmp2742:
# %bb.115:                              # %if.then.i.i1141.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2743:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2744:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	movq	16(%rsp), %r11                  # 8-byte Reload
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2745:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
	jmp	.LBB16_117
.Ltmp2746:
	.p2align	4, 0x90
.LBB16_116:                             #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 27 is_stmt 0                # x264_src/common/bs.h:0:27
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp2747:
.LBB16_117:                             # %bs_write.exit.i1125.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27 is_stmt 1              # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2748:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r9d, %r9d
.Ltmp2749:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %r9
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2750:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp2751:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_109
.Ltmp2752:
# %bb.118:                              # %if.then.i25.i1133.i.i
                                        #   in Loop: Header=BB16_110 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r9
.Ltmp2753:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2754:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	jmp	.LBB16_109
.Ltmp2755:
	.p2align	4, 0x90
.LBB16_119:                             # %for.cond.cleanup102.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdx
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	$2, %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-2(%rax), %ecx
	movl	%ecx, (%r11)
.Ltmp2756:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$34, %eax
.Ltmp2757:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_121
.Ltmp2758:
# %bb.120:                              # %if.then.i.i1047.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 0
                                        # kill: def $cl killed $cl killed $rcx
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	shlq	%cl, %rdx
.Ltmp2759:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2760:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %ecx
	addl	$32, %ecx
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2761:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdx
.Ltmp2762:
.LBB16_121:                             # %bs_write.exit.i1034.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 3
	#DEBUG_VALUE: bs_write:i_bits <- 4
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	leaq	4(,%rdx,8), %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-3(%rcx), %eax
	movl	%eax, (%r11)
.Ltmp2763:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$35, %ecx
.Ltmp2764:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_123
.Ltmp2765:
# %bb.122:                              # %if.then.i25.i1039.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 4
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 4
	#DEBUG_VALUE: bs_write_ue_big:size <- 5
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 3
	#DEBUG_VALUE: bs_write:i_bits <- 4
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp2766:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2767:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2768:
	.p2align	4, 0x90
.LBB16_123:                             # %if.end118.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 271 13                        # x264_src/encoder/encoder.c:271:13
	movq	7240(%r14), %rcx
	.loc	0 271 9 is_stmt 0               # x264_src/encoder/encoder.c:271:9
	cmpl	$0, 28(%rcx)
	je	.LBB16_157
.Ltmp2769:
# %bb.124:                              # %land.lhs.true121.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 271 43                        # x264_src/encoder/encoder.c:271:43
	movl	7248(%r14), %ecx
	.loc	0 271 66                        # x264_src/encoder/encoder.c:271:66
	cmpl	$3, %ecx
	je	.LBB16_126
.Ltmp2770:
# %bb.125:                              # %land.lhs.true121.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	testl	%ecx, %ecx
	jne	.LBB16_157
.Ltmp2771:
.LBB16_126:                             # %if.then127.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 274 42 is_stmt 1              # x264_src/encoder/encoder.c:274:42
	movl	7616(%r14), %edi
.Ltmp2772:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%edi
.Ltmp2773:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp2774:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	setge	%dl
.Ltmp2775:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp2776:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp2777:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r8d
	shrl	$8, %r8d
	leal	16(%rdx), %r9d
.Ltmp2778:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2779:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r8d
.Ltmp2780:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r8d, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %r8d
.Ltmp2781:
	cmovll	%edx, %r8d
	movzbl	%r8b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2782:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %r8
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2783:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_128
.Ltmp2784:
# %bb.127:                              # %if.then.i.i1188.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2785:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2786:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2787:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2788:
.LBB16_128:                             # %bs_write.exit.i1172.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2789:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %r8
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%edi, %edi
.Ltmp2790:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r8, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2791:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_130
.Ltmp2792:
# %bb.129:                              # %if.then.i25.i1180.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2793:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2794:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2795:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdi
.Ltmp2796:
.LBB16_130:                             # %bs_write_ue_big.exit1197.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 275 42                        # x264_src/encoder/encoder.c:275:42
	movl	7680(%r14), %r8d
.Ltmp2797:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%r8d
.Ltmp2798:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r8d, %ecx
	shrl	$16, %ecx
.Ltmp2799:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r8d                    # imm = 0x10000
.Ltmp2800:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %ecx
.Ltmp2801:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2802:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2803:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2804:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2805:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2806:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2807:
	cmovll	%edx, %r9d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2808:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rdi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2809:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_132
.Ltmp2810:
# %bb.131:                              # %if.then.i.i1235.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2811:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2812:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2813:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %rdi
.Ltmp2814:
.LBB16_132:                             # %bs_write.exit.i1219.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp2815:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r8d, %r8d
.Ltmp2816:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %r8
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp2817:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_134
.Ltmp2818:
# %bb.133:                              # %if.then.i25.i1227.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %r8
.Ltmp2819:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2820:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2821:
.LBB16_134:                             # %bs_write_ue_big.exit1244.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 276 27                        # x264_src/encoder/encoder.c:276:27
	cmpl	$0, 7312(%r14)
	jle	.LBB16_157
.Ltmp2822:
# %bb.135:                              # %for.body139.i.i.preheader
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- 0
	.loc	0 0 27 is_stmt 0                # x264_src/encoder/encoder.c:0:27
	movq	128(%rsp), %rdx                 # 8-byte Reload
	xorl	%edi, %edi
	jmp	.LBB16_137
.Ltmp2823:
	.p2align	4, 0x90
.LBB16_136:                             # %if.end194.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 276 59                        # x264_src/encoder/encoder.c:276:59
	incq	%rdi
.Ltmp2824:
	#DEBUG_VALUE: i <- $rdi
	.loc	0 276 33                        # x264_src/encoder/encoder.c:276:33
	movslq	7312(%r14), %rcx
	.loc	0 276 27                        # x264_src/encoder/encoder.c:276:27
	addq	$192, %rdx
	cmpq	%rcx, %rdi
.Ltmp2825:
	.loc	0 276 9                         # x264_src/encoder/encoder.c:276:9
	jge	.LBB16_157
.Ltmp2826:
.LBB16_137:                             # %for.body139.i.i
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movb	$1, %r8b
.Ltmp2827:
	#DEBUG_VALUE: luma_weight_l0_flag <- undef
	.loc	0 279 43 is_stmt 1              # x264_src/encoder/encoder.c:279:43
	cmpq	$0, -64(%rdx)
	.loc	0 279 69 is_stmt 0              # x264_src/encoder/encoder.c:279:69
	jne	.LBB16_139
.Ltmp2828:
# %bb.138:                              # %lor.rhs.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 279 73                        # x264_src/encoder/encoder.c:279:73
	cmpq	$0, (%rdx)
	setne	%r8b
.Ltmp2829:
.LBB16_139:                             # %lor.end.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	.loc	0 278 0 is_stmt 1               # x264_src/encoder/encoder.c:278:0
	movq	-128(%rdx), %rcx
	.loc	0 278 40 is_stmt 0              # x264_src/encoder/encoder.c:278:40
	xorl	%r9d, %r9d
	testq	%rcx, %rcx
	setne	%r9b
.Ltmp2830:
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- undef
	.loc	4 159 17 is_stmt 1              # x264_src/common/bs.h:159:17
	movq	(%r15), %r10
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	leaq	(%r9,%r10,2), %r9
	movq	%r9, (%r15)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
.Ltmp2831:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
	jne	.LBB16_141
.Ltmp2832:
# %bb.140:                              # %if.then.i1252.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $r9d
	.loc	28 264 58                       # x264_src/common/osdep.h:264:58
	bswapl	%r9d
.Ltmp2833:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%r9d, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, (%rbx)
.Ltmp2834:
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	(%r15), %r9
	movl	$64, %eax
.Ltmp2835:
.LBB16_141:                             # %bs_write1.exit1257.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	.loc	0 278 40                        # x264_src/encoder/encoder.c:278:40
	testq	%rcx, %rcx
	je	.LBB16_146
.Ltmp2836:
# %bb.142:                              # %if.then163.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	.loc	0 283 50                        # x264_src/encoder/encoder.c:283:50
	movl	-140(%rdx), %ecx
.Ltmp2837:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r11d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r10d
	subl	%r11d, %r10d
.Ltmp2838:
	#DEBUG_VALUE: bs_write_se:tmp <- $r10d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2839:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r11d, %r10d
.Ltmp2840:
	#DEBUG_VALUE: bs_write_se:tmp <- $r10d
	#DEBUG_VALUE: bs_write_se:val <- $r10d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r10d, %ecx
	shrl	$8, %ecx
.Ltmp2841:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r11d, %r11d
	cmpl	$256, %r10d                     # imm = 0x100
	setge	%r11b
.Ltmp2842:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r10d, %ecx
.Ltmp2843:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r11d
.Ltmp2844:
	#DEBUG_VALUE: bs_write_se:size <- $r11d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2845:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r11d, %ecx
.Ltmp2846:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r10d
	.loc	4 0 10                          # x264_src/common/bs.h:0:10
	movq	16(%rsp), %rsi                  # 8-byte Reload
.Ltmp2847:
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %r9
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r9, %r10
.Ltmp2848:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r10, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%rsi)
.Ltmp2849:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_144
.Ltmp2850:
# %bb.143:                              # %if.then.i.i1279.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2851:
	shlq	%cl, %r10
.Ltmp2852:
	#DEBUG_VALUE: endian_fix:x <- $r10
	#DEBUG_VALUE: endian_fix64:x <- $r10
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r10
.Ltmp2853:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r10d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%rsi), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2854:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r10
.Ltmp2855:
.LBB16_144:                             # %bs_write_se.exit1287.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	.loc	0 284 50                        # x264_src/encoder/encoder.c:284:50
	movl	-136(%rdx), %ecx
.Ltmp2856:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r11d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r9d
	subl	%r11d, %r9d
.Ltmp2857:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2858:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r11d, %r9d
.Ltmp2859:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	#DEBUG_VALUE: bs_write_se:val <- $r9d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r9d, %ecx
	shrl	$8, %ecx
.Ltmp2860:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r11d, %r11d
	cmpl	$256, %r9d                      # imm = 0x100
	setge	%r11b
.Ltmp2861:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r9d, %ecx
.Ltmp2862:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r11d
.Ltmp2863:
	#DEBUG_VALUE: bs_write_se:size <- $r11d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2864:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r11d, %ecx
.Ltmp2865:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %r10
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r10, %r9
.Ltmp2866:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%rsi)
.Ltmp2867:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	movq	%rsi, %r11
	jg	.LBB16_146
.Ltmp2868:
# %bb.145:                              # %if.then.i.i1309.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2869:
	shlq	%cl, %r9
.Ltmp2870:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2871:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2872:
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	(%r15), %r9
.Ltmp2873:
.LBB16_146:                             # %if.end172.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	.loc	4 160 20                        # x264_src/common/bs.h:160:20
	movzbl	%r8b, %ecx
	.loc	4 160 17 is_stmt 0              # x264_src/common/bs.h:160:17
	leaq	(%rcx,%r9,2), %rcx
	movq	%rcx, (%r15)
	.loc	4 161 14 is_stmt 1              # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, (%r11)
.Ltmp2874:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2875:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_148
.Ltmp2876:
# %bb.147:                              # %if.then.i1325.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: endian_fix32:x <- $ecx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%ecx
.Ltmp2877:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%ecx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, (%rbx)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, (%r11)
	movl	$64, %eax
.Ltmp2878:
.LBB16_148:                             # %bs_write1.exit1330.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	.loc	0 287 17                        # x264_src/encoder/encoder.c:287:17
	testb	%r8b, %r8b
	je	.LBB16_136
.Ltmp2879:
# %bb.149:                              # %for.body178.preheader.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: chroma_weight_l0_flag <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8b
	#DEBUG_VALUE: j <- 1
	.loc	0 291 54                        # x264_src/encoder/encoder.c:291:54
	movl	-76(%rdx), %ecx
.Ltmp2880:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r9d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r8d
.Ltmp2881:
	subl	%r9d, %r8d
.Ltmp2882:
	#DEBUG_VALUE: bs_write_se:tmp <- $r8d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2883:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r9d, %r8d
.Ltmp2884:
	#DEBUG_VALUE: bs_write_se:tmp <- $r8d
	#DEBUG_VALUE: bs_write_se:val <- $r8d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r8d, %ecx
	shrl	$8, %ecx
.Ltmp2885:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r9d, %r9d
	cmpl	$256, %r8d                      # imm = 0x100
	setge	%r9b
.Ltmp2886:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r8d, %ecx
.Ltmp2887:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r9d
.Ltmp2888:
	#DEBUG_VALUE: bs_write_se:size <- $r9d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2889:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r9d, %ecx
.Ltmp2890:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %r9
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%r9, %r8
.Ltmp2891:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%r11)
.Ltmp2892:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_151
.Ltmp2893:
# %bb.150:                              # %if.then.i.i1352.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2894:
	shlq	%cl, %r8
.Ltmp2895:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2896:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2897:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2898:
.LBB16_151:                             # %bs_write_se.exit1360.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 1
	.loc	0 292 54                        # x264_src/encoder/encoder.c:292:54
	movl	-72(%rdx), %ecx
.Ltmp2899:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r10d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r9d
	subl	%r10d, %r9d
.Ltmp2900:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2901:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r10d, %r9d
.Ltmp2902:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	#DEBUG_VALUE: bs_write_se:val <- $r9d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r9d, %ecx
	shrl	$8, %ecx
.Ltmp2903:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r10d, %r10d
	cmpl	$256, %r9d                      # imm = 0x100
	setge	%r10b
.Ltmp2904:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r9d, %ecx
.Ltmp2905:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r10d
.Ltmp2906:
	#DEBUG_VALUE: bs_write_se:size <- $r10d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2907:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r10d, %ecx
.Ltmp2908:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %r8
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r8, %r9
.Ltmp2909:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%r11)
.Ltmp2910:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_153
.Ltmp2911:
# %bb.152:                              # %if.then.i.i1382.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2912:
	shlq	%cl, %r9
.Ltmp2913:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2914:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2915:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r9
.Ltmp2916:
.LBB16_153:                             # %bs_write_se.exit1390.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: j <- 2
	.loc	0 291 54                        # x264_src/encoder/encoder.c:291:54
	movl	-12(%rdx), %ecx
.Ltmp2917:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r10d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r8d
	subl	%r10d, %r8d
.Ltmp2918:
	#DEBUG_VALUE: bs_write_se:tmp <- $r8d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2919:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r10d, %r8d
.Ltmp2920:
	#DEBUG_VALUE: bs_write_se:tmp <- $r8d
	#DEBUG_VALUE: bs_write_se:val <- $r8d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r8d, %ecx
	shrl	$8, %ecx
.Ltmp2921:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r10d, %r10d
	cmpl	$256, %r8d                      # imm = 0x100
	setge	%r10b
.Ltmp2922:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r8d, %ecx
.Ltmp2923:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r10d
.Ltmp2924:
	#DEBUG_VALUE: bs_write_se:size <- $r10d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2925:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r10d, %ecx
.Ltmp2926:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r8d
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %r9
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r9, %r8
.Ltmp2927:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r8, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%r11)
.Ltmp2928:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_155
.Ltmp2929:
# %bb.154:                              # %if.then.i.i1352.1.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2930:
	shlq	%cl, %r8
.Ltmp2931:
	#DEBUG_VALUE: endian_fix:x <- $r8
	#DEBUG_VALUE: endian_fix64:x <- $r8
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r8
.Ltmp2932:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r8d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2933:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r15), %r8
.Ltmp2934:
.LBB16_155:                             # %bs_write_se.exit1360.1.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 2
	.loc	0 292 54                        # x264_src/encoder/encoder.c:292:54
	movl	-8(%rdx), %ecx
.Ltmp2935:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %r10d
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %r9d
	subl	%r10d, %r9d
.Ltmp2936:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp2937:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%r10d, %r9d
.Ltmp2938:
	#DEBUG_VALUE: bs_write_se:tmp <- $r9d
	#DEBUG_VALUE: bs_write_se:val <- $r9d
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%r9d, %ecx
	shrl	$8, %ecx
.Ltmp2939:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%r10d, %r10d
	cmpl	$256, %r9d                      # imm = 0x100
	setge	%r10b
.Ltmp2940:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%r9d, %ecx
.Ltmp2941:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %r10d
.Ltmp2942:
	#DEBUG_VALUE: bs_write_se:size <- $r10d
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp2943:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%r10d, %ecx
.Ltmp2944:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %r8
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r8, %r9
.Ltmp2945:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%r9, (%r15)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, (%r11)
.Ltmp2946:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
	jg	.LBB16_136
.Ltmp2947:
# %bb.156:                              # %if.then.i.i1382.1.i.i
                                        #   in Loop: Header=BB16_137 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rdi
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp2948:
	shlq	%cl, %r9
.Ltmp2949:
	#DEBUG_VALUE: endian_fix:x <- $r9
	#DEBUG_VALUE: endian_fix64:x <- $r9
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%r9
.Ltmp2950:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%r9d, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	jmp	.LBB16_136
.Ltmp2951:
	.p2align	4, 0x90
.LBB16_157:                             # %if.end206.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 302 23                        # x264_src/encoder/encoder.c:302:23
	cmpl	$0, 112(%rsp)                   # 4-byte Folded Reload
	je	.LBB16_181
.Ltmp2952:
# %bb.158:                              # %if.then208.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 304 30                        # x264_src/encoder/encoder.c:304:30
	cmpl	$0, 7280(%r14)
.Ltmp2953:
	.loc	0 304 13 is_stmt 0              # x264_src/encoder/encoder.c:304:13
	js	.LBB16_161
.Ltmp2954:
# %bb.159:                              # %if.then211.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 0
	.loc	4 159 17 is_stmt 1              # x264_src/common/bs.h:159:17
	movq	(%r15), %rcx
	leaq	(%rcx,%rcx), %rdx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	movq	%rdx, (%r15)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	leal	-1(%rax), %esi
	movl	%esi, (%r11)
.Ltmp2955:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %esi
.Ltmp2956:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_175
.Ltmp2957:
# %bb.160:                              # %bs_write1.exit1402.thread.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 0
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2958:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, (%rbx)
.Ltmp2959:
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 0
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	shlq	(%r15)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	movl	$63, (%r11)
	movl	$63, %eax
	.loc	4 162 9                         # x264_src/common/bs.h:162:9
	jmp	.LBB16_181
.Ltmp2960:
	.p2align	4, 0x90
.LBB16_161:                             # %if.else212.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 311 31                        # x264_src/encoder/encoder.c:311:31
	movl	13732(%r14), %ecx
	.loc	0 311 52 is_stmt 0              # x264_src/encoder/encoder.c:311:52
	xorl	%edx, %edx
	testl	%ecx, %ecx
	setg	%dl
.Ltmp2961:
	#DEBUG_VALUE: bs_write1:i_bit <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $dl
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 159 17 is_stmt 1              # x264_src/common/bs.h:159:17
	movq	1816(%r14), %rsi
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	leaq	(%rdx,%rsi,2), %rdx
.Ltmp2962:
	movq	%rdx, 1816(%r14)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
	movl	%eax, 1824(%r14)
.Ltmp2963:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp2964:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_163
.Ltmp2965:
# %bb.162:                              # %if.then.i1422.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp2966:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	1800(%r14), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%edx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, 1800(%r14)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, 1824(%r14)
.Ltmp2967:
	.loc	0 312 21                        # x264_src/encoder/encoder.c:312:21
	movl	13732(%r14), %ecx
	movl	$64, %eax
.Ltmp2968:
.LBB16_163:                             # %bs_write1.exit1427.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 312 42 is_stmt 0              # x264_src/encoder/encoder.c:312:42
	testl	%ecx, %ecx
.Ltmp2969:
	.loc	0 312 17                        # x264_src/encoder/encoder.c:312:17
	jle	.LBB16_181
.Ltmp2970:
# %bb.164:                              # %for.body224.i.i.preheader
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	xorl	%esi, %esi
	jmp	.LBB16_166
.Ltmp2971:
	.p2align	4, 0x90
.LBB16_165:                             # %bs_write_ue_big.exit1530.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	.loc	0 314 64 is_stmt 1              # x264_src/encoder/encoder.c:314:64
	incq	%rsi
.Ltmp2972:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 314 41 is_stmt 0              # x264_src/encoder/encoder.c:314:41
	movslq	13732(%r14), %rcx
	.loc	0 314 35                        # x264_src/encoder/encoder.c:314:35
	cmpq	%rcx, %rsi
.Ltmp2973:
	.loc	0 314 17                        # x264_src/encoder/encoder.c:314:17
	jge	.LBB16_177
.Ltmp2974:
.LBB16_166:                             # %for.body224.i.i
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 2
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 2
	#DEBUG_VALUE: bs_write_ue_big:size <- 3
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 1
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp2975:
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	(%r8), %rdx
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	addq	%rdx, %rdx
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-1(%rax), %ecx
	movl	%ecx, (%r11)
.Ltmp2976:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$33, %eax
	jg	.LBB16_168
.Ltmp2977:
# %bb.167:                              # %if.then.i.i1474.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 2
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 2
	#DEBUG_VALUE: bs_write_ue_big:size <- 3
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 1
	#DEBUG_VALUE: bs_write:i_bits <- 0
                                        # kill: def $cl killed $cl killed $rcx
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	shlq	%cl, %rdx
.Ltmp2978:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp2979:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %ecx
	addl	$32, %ecx
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2980:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r8), %rdx
.Ltmp2981:
.LBB16_168:                             # %bs_write.exit.i1461.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 2
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 2
	#DEBUG_VALUE: bs_write_ue_big:size <- 3
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 2
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	leaq	2(,%rdx,4), %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-2(%rcx), %eax
	movl	%eax, (%r11)
.Ltmp2982:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$34, %ecx
	jg	.LBB16_170
.Ltmp2983:
# %bb.169:                              # %if.then.i25.i1466.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 2
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 2
	#DEBUG_VALUE: bs_write_ue_big:size <- 3
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 2
	#DEBUG_VALUE: bs_write:i_bits <- 2
	.loc	4 124 51                        # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp2984:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp2985:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp2986:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r8), %rdi
.Ltmp2987:
.LBB16_170:                             # %bs_write_ue_big.exit1483.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	.loc	0 317 49                        # x264_src/encoder/encoder.c:317:49
	movl	13736(%r14,%rsi,8), %r8d
.Ltmp2988:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r8d
	.loc	0 0 49 is_stmt 0                # x264_src/encoder/encoder.c:0:49
	movl	%r8d, %ecx
	shrl	$16, %ecx
.Ltmp2989:
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %r8d                    # imm = 0x10000
.Ltmp2990:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r8d, %ecx
.Ltmp2991:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp2992:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp2993:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %r9d
	shrl	$8, %r9d
	leal	16(%rdx), %r10d
.Ltmp2994:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp2995:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %r9d
.Ltmp2996:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%r9d, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r10b, %r9d
.Ltmp2997:
	cmovll	%edx, %r9d
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r9b, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp2998:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rdi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp2999:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3000:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_172
.Ltmp3001:
# %bb.171:                              # %if.then.i.i1521.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp3002:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp3003:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	movq	8(%rsp), %r9                    # 8-byte Reload
.Ltmp3004:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r9), %rdi
	jmp	.LBB16_173
.Ltmp3005:
	.p2align	4, 0x90
.LBB16_172:                             #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 27 is_stmt 0                # x264_src/common/bs.h:0:27
	movq	8(%rsp), %r9                    # 8-byte Reload
.Ltmp3006:
.LBB16_173:                             # %bs_write.exit.i1505.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27 is_stmt 1              # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp3007:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%r8, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r9)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp3008:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3009:
	#DEBUG_VALUE: bs_write:i_bits <- undef
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_165
.Ltmp3010:
# %bb.174:                              # %if.then.i25.i1513.i.i
                                        #   in Loop: Header=BB16_166 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: bs_write_ue_big:val <- $r8d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp3011:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp3012:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	jmp	.LBB16_165
.Ltmp3013:
.LBB16_175:                             # %bs_write1.exit1402.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 0
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	shlq	$2, %rcx
	.loc	4 160 17                        # x264_src/common/bs.h:160:17
	movq	%rcx, (%r15)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	addl	$-2, %eax
	movl	%eax, (%r11)
.Ltmp3014:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp3015:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_181
.Ltmp3016:
# %bb.176:                              # %if.then.i1409.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 0
	#DEBUG_VALUE: endian_fix32:x <- $ecx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%ecx
.Ltmp3017:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%ecx, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	addq	$4, (%rbx)
	.loc	4 166 19                        # x264_src/common/bs.h:166:19
	movl	$64, (%r11)
	movl	$64, %eax
	.loc	4 167 5                         # x264_src/common/bs.h:167:5
	jmp	.LBB16_181
.Ltmp3018:
.LBB16_177:                             # %for.cond.cleanup223.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 1
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 1
	#DEBUG_VALUE: bs_write_ue_big:size <- 1
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 0
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 5 is_stmt 0                 # x264_src/common/bs.h:0:5
	movq	8(%rsp), %rsi                   # 8-byte Reload
.Ltmp3019:
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	(%rsi), %rdx
.Ltmp3020:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3021:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_179
.Ltmp3022:
# %bb.178:                              # %if.then.i.i1446.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 1
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 1
	#DEBUG_VALUE: bs_write_ue_big:size <- 1
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 0
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp3023:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp3024:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3025:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%rsi), %rdx
.Ltmp3026:
.LBB16_179:                             # %bs_write.exit.i1433.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 1
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 1
	#DEBUG_VALUE: bs_write_ue_big:size <- 1
	.loc	4 118 19                        # x264_src/common/bs.h:118:19
	movl	%eax, %ecx
.Ltmp3027:
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 1
	#DEBUG_VALUE: bs_write:i_bits <- 1
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	leaq	1(,%rdx,2), %rdx
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rdx, (%rsi)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	leal	-1(%rcx), %eax
	movl	%eax, (%r11)
.Ltmp3028:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$33, %ecx
.Ltmp3029:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_181
.Ltmp3030:
# %bb.180:                              # %if.then.i25.i1438.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- 1
	#DEBUG_VALUE: bs_write_ue_big:tmp <- 1
	#DEBUG_VALUE: bs_write_ue_big:size <- 1
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 1
	#DEBUG_VALUE: bs_write:i_bits <- 1
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdx
.Ltmp3031:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp3032:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3033:
	.p2align	4, 0x90
.LBB16_181:                             # %if.end233.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 324 13                        # x264_src/encoder/encoder.c:324:13
	movq	7240(%r14), %rcx
	.loc	0 324 9 is_stmt 0               # x264_src/encoder/encoder.c:324:9
	cmpl	$0, 8(%rcx)
	je	.LBB16_188
.Ltmp3034:
# %bb.182:                              # %land.lhs.true236.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 324 40                        # x264_src/encoder/encoder.c:324:40
	cmpl	$2, 7248(%r14)
	je	.LBB16_188
.Ltmp3035:
# %bb.183:                              # %if.then240.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 325 29 is_stmt 1              # x264_src/encoder/encoder.c:325:29
	movl	13864(%r14), %esi
.Ltmp3036:
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%esi
.Ltmp3037:
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $esi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%esi, %ecx
	shrl	$16, %ecx
.Ltmp3038:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %esi                    # imm = 0x10000
	setge	%dl
.Ltmp3039:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%esi, %ecx
.Ltmp3040:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp3041:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %edi
	shrl	$8, %edi
	leal	16(%rdx), %r8d
.Ltmp3042:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp3043:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %edi
.Ltmp3044:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edi, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r8b, %edi
.Ltmp3045:
	cmovll	%edx, %edi
	movzbl	%dil, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp3046:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp3047:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3048:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_185
.Ltmp3049:
# %bb.184:                              # %if.then.i.i1568.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp3050:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp3051:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp3052:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r8), %rdi
	jmp	.LBB16_186
.Ltmp3053:
.LBB16_185:                             #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 27 is_stmt 0                # x264_src/common/bs.h:0:27
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp3054:
.LBB16_186:                             # %bs_write.exit.i1552.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27 is_stmt 1              # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp3055:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $esi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%esi, %esi
.Ltmp3056:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rsi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rsi, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp3057:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3058:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_188
.Ltmp3059:
# %bb.187:                              # %if.then.i25.i1560.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rsi
.Ltmp3060:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3061:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3062:
	.p2align	4, 0x90
.LBB16_188:                             # %if.end241.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 327 25                        # x264_src/encoder/encoder.c:327:25
	movl	13872(%r14), %ecx
.Ltmp3063:
	#DEBUG_VALUE: bs_write_se:val <- $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	leal	(%rcx,%rcx), %esi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %edx
	subl	%esi, %edx
.Ltmp3064:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	testl	%ecx, %ecx
.Ltmp3065:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgl	%esi, %edx
.Ltmp3066:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	#DEBUG_VALUE: bs_write_se:val <- $edx
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%edx, %ecx
	shrl	$8, %ecx
.Ltmp3067:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%esi, %esi
	cmpl	$256, %edx                      # imm = 0x100
	setge	%sil
.Ltmp3068:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%edx, %ecx
.Ltmp3069:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %esi
.Ltmp3070:
	#DEBUG_VALUE: bs_write_se:size <- $esi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp3071:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%esi, %ecx
.Ltmp3072:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rsi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rsi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rsi, %rdx
.Ltmp3073:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp3074:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3075:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_190
.Ltmp3076:
# %bb.189:                              # %if.then.i.i1599.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp3077:
	shlq	%cl, %rdx
.Ltmp3078:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp3079:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3080:
.LBB16_190:                             # %bs_write_se.exit1607.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 329 13                        # x264_src/encoder/encoder.c:329:13
	movq	7240(%r14), %rcx
	.loc	0 329 9 is_stmt 0               # x264_src/encoder/encoder.c:329:9
	cmpl	$0, 48(%rcx)
.Ltmp3081:
	.loc	0 329 9                         # x264_src/encoder/encoder.c:329:9
	je	.LBB16_201
.Ltmp3082:
# %bb.191:                              # %if.then244.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 331 29 is_stmt 1              # x264_src/encoder/encoder.c:331:29
	movl	13884(%r14), %esi
.Ltmp3083:
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15                        # x264_src/common/bs.h:211:15
	incl	%esi
.Ltmp3084:
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $esi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%esi, %ecx
	shrl	$16, %ecx
.Ltmp3085:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %esi                    # imm = 0x10000
	setge	%dl
.Ltmp3086:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%esi, %ecx
.Ltmp3087:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	shll	$5, %edx
.Ltmp3088:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %edi
	shrl	$8, %edi
	leal	16(%rdx), %r8d
.Ltmp3089:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp3090:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %edi
.Ltmp3091:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edi, %rcx
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r8b, %edi
.Ltmp3092:
	cmovll	%edx, %edi
	movzbl	%dil, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp3093:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rdi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, 1824(%r14)
.Ltmp3094:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3095:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_193
.Ltmp3096:
# %bb.192:                              # %if.then.i.i1645.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rdi
.Ltmp3097:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp3098:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp3099:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r8), %rdi
	jmp	.LBB16_194
.Ltmp3100:
	.p2align	4, 0x90
.LBB16_193:                             #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 27 is_stmt 0                # x264_src/common/bs.h:0:27
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp3101:
.LBB16_194:                             # %bs_write.exit.i1629.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:val <- $esi
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 224 27 is_stmt 1              # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp3102:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $esi
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%esi, %esi
.Ltmp3103:
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rsi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rsi, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp3104:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3105:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_196
.Ltmp3106:
# %bb.195:                              # %if.then.i25.i1637.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rsi
.Ltmp3107:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3108:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3109:
.LBB16_196:                             # %bs_write_ue_big.exit1654.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 332 49                        # x264_src/encoder/encoder.c:332:49
	cmpl	$1, 13884(%r14)
.Ltmp3110:
	.loc	0 332 13 is_stmt 0              # x264_src/encoder/encoder.c:332:13
	je	.LBB16_201
.Ltmp3111:
# %bb.197:                              # %if.then248.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 334 33 is_stmt 1              # x264_src/encoder/encoder.c:334:33
	movl	13888(%r14), %ecx
.Ltmp3112:
	#DEBUG_VALUE: bs_write_se:val <- [DW_OP_constu 1, DW_OP_shra, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	movl	%ecx, %esi
	andl	$-2, %esi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %edx
	subl	%esi, %edx
.Ltmp3113:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	cmpl	$2, %ecx
.Ltmp3114:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgel	%esi, %edx
.Ltmp3115:
	#DEBUG_VALUE: bs_write_se:tmp <- $edx
	#DEBUG_VALUE: bs_write_se:val <- $edx
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%edx, %ecx
	shrl	$8, %ecx
.Ltmp3116:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%esi, %esi
	cmpl	$256, %edx                      # imm = 0x100
	setge	%sil
.Ltmp3117:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%edx, %ecx
.Ltmp3118:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %esi
.Ltmp3119:
	#DEBUG_VALUE: bs_write_se:size <- $esi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp3120:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%esi, %ecx
.Ltmp3121:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	1816(%r14), %rsi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rsi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rsi, %rdx
.Ltmp3122:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp3123:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3124:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_199
.Ltmp3125:
# %bb.198:                              # %if.then.i.i1676.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp3126:
	shlq	%cl, %rdx
.Ltmp3127:
	#DEBUG_VALUE: endian_fix:x <- $rdx
	#DEBUG_VALUE: endian_fix64:x <- $rdx
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdx
.Ltmp3128:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
	movq	8(%rsp), %rcx                   # 8-byte Reload
.Ltmp3129:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%rcx), %rdx
.Ltmp3130:
.LBB16_199:                             # %bs_write_se.exit1684.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	.loc	0 335 33                        # x264_src/encoder/encoder.c:335:33
	movl	13892(%r14), %ecx
.Ltmp3131:
	#DEBUG_VALUE: bs_write_se:val <- [DW_OP_constu 1, DW_OP_shra, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- 0
	.loc	4 238 22                        # x264_src/common/bs.h:238:22
	movl	%ecx, %edi
	andl	$-2, %edi
	.loc	4 238 17 is_stmt 0              # x264_src/common/bs.h:238:17
	movl	$1, %esi
	subl	%edi, %esi
.Ltmp3132:
	#DEBUG_VALUE: bs_write_se:tmp <- $esi
	.loc	4 239 13 is_stmt 1              # x264_src/common/bs.h:239:13
	cmpl	$2, %ecx
.Ltmp3133:
	.loc	4 239 9 is_stmt 0               # x264_src/common/bs.h:239:9
	cmovgel	%edi, %esi
.Ltmp3134:
	#DEBUG_VALUE: bs_write_se:tmp <- $esi
	#DEBUG_VALUE: bs_write_se:val <- $esi
	.loc	4 242 9 is_stmt 1               # x264_src/common/bs.h:242:9
	movl	%esi, %ecx
	shrl	$8, %ecx
.Ltmp3135:
	.loc	4 242 13 is_stmt 0              # x264_src/common/bs.h:242:13
	xorl	%edi, %edi
	cmpl	$256, %esi                      # imm = 0x100
	setge	%dil
.Ltmp3136:
	.loc	4 242 9                         # x264_src/common/bs.h:242:9
	cmovll	%esi, %ecx
.Ltmp3137:
	#DEBUG_VALUE: bs_write_se:tmp <- $ecx
	shll	$4, %edi
.Ltmp3138:
	#DEBUG_VALUE: bs_write_se:size <- $edi
	.loc	4 247 13 is_stmt 1              # x264_src/common/bs.h:247:13
	movslq	%ecx, %rcx
.Ltmp3139:
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 247 10 is_stmt 0              # x264_src/common/bs.h:247:10
	addl	%edi, %ecx
.Ltmp3140:
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $esi
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	shlq	%cl, %rdx
	.loc	4 117 48 is_stmt 0              # x264_src/common/bs.h:117:48
	orq	%rdx, %rsi
.Ltmp3141:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rsi, 1816(%r14)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%ecx, %eax
	movl	%eax, 1824(%r14)
.Ltmp3142:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3143:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_201
.Ltmp3144:
# %bb.200:                              # %if.then.i.i1706.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_header_write:i_nal_ref_idc <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_header_write:sh <- [DW_OP_plus_uconst 7232, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bs_write_se:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_se:size <- $ecx
	#DEBUG_VALUE: bs_write:i_count <- $ecx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
.Ltmp3145:
	shlq	%cl, %rsi
.Ltmp3146:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3147:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3148:
	.p2align	4, 0x90
.LBB16_201:                             # %x264_slice_header_write.exit.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	4 0 18 is_stmt 0                # x264_src/common/bs.h:0:18
	movq	8(%rsp), %r9                    # 8-byte Reload
.Ltmp3149:
	.loc	0 1801 9 is_stmt 1              # x264_src/encoder/encoder.c:1801:9
	cmpl	$0, 128(%r14)
.Ltmp3150:
	.loc	0 1801 9 is_stmt 0              # x264_src/encoder/encoder.c:1801:9
	je	.LBB16_206
.Ltmp3151:
# %bb.202:                              # %if.then28.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: bs_align_1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 177 52 is_stmt 1              # x264_src/common/bs.h:177:52
	movl	%eax, %ecx
	andb	$7, %cl
	movl	$-1, %edx
	shll	%cl, %edx
	notl	%edx
.Ltmp3152:
	#DEBUG_VALUE: bs_write:i_bits <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- undef
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r9), %rsi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	shlq	%cl, %rsi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rsi, %rdx
.Ltmp3153:
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdx, (%r9)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	andl	$-8, %eax
	movl	%eax, (%r11)
.Ltmp3154:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$33, %eax
.Ltmp3155:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jge	.LBB16_204
.Ltmp3156:
# %bb.203:                              # %if.then.i.i890.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: bs_align_1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: endian_fix:x <- undef
	#DEBUG_VALUE: endian_fix64:x <- undef
	.loc	28 277 32 is_stmt 1             # x264_src/common/osdep.h:277:32
	bswapq	%rdx
	movl	%eax, %ecx
	shrq	%cl, %rdx
.Ltmp3157:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edx, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	movq	(%rbx), %rsi
	addq	$4, %rsi
	movq	%rsi, (%rbx)
.Ltmp3158:
	.loc	4 96 36                         # x264_src/common/bs.h:96:36
	movq	(%r9), %rdx
	jmp	.LBB16_205
.Ltmp3159:
	.p2align	4, 0x90
.LBB16_204:                             # %entry.bs_write.exit_crit_edge.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: bs_align_1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 96 5 is_stmt 0                # x264_src/common/bs.h:96:5
	movq	(%rbx), %rsi
.Ltmp3160:
.LBB16_205:                             # %bs_align_1.exit.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: bs_align_1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_flush:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 96 33                         # x264_src/common/bs.h:96:33
	movl	%eax, %ecx
	shll	%cl, %edx
.Ltmp3161:
	#DEBUG_VALUE: endian_fix32:x <- $edx
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%edx
.Ltmp3162:
	.loc	4 96 17                         # x264_src/common/bs.h:96:17
	movl	%edx, (%rsi)
	.loc	4 97 28                         # x264_src/common/bs.h:97:28
	movl	1824(%r14), %eax
	.loc	4 97 35 is_stmt 0               # x264_src/common/bs.h:97:35
	leal	7(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$3, %ecx
	negl	%ecx
	.loc	4 97 10                         # x264_src/common/bs.h:97:10
	movq	1800(%r14), %rax
	movslq	%ecx, %rcx
	addq	%rcx, %rax
	addq	$8, %rax
	movq	%rax, 1800(%r14)
	.loc	4 98 15 is_stmt 1               # x264_src/common/bs.h:98:15
	movl	$64, 1824(%r14)
.Ltmp3163:
	.loc	0 1807 51                       # x264_src/encoder/encoder.c:1807:51
	movl	7248(%r14), %esi
	.loc	0 1807 65 is_stmt 0             # x264_src/encoder/encoder.c:1807:65
	movl	13868(%r14), %edx
	.loc	0 1807 77                       # x264_src/encoder/encoder.c:1807:77
	movl	13864(%r14), %ecx
	movq	64(%rsp), %r15                  # 8-byte Reload
	.loc	0 1807 9                        # x264_src/encoder/encoder.c:1807:9
	movq	%r15, %rdi
	callq	x264_cabac_context_init@PLT
.Ltmp3164:
	.loc	0 1808 55 is_stmt 1             # x264_src/encoder/encoder.c:1808:55
	movq	1800(%r14), %rsi
	.loc	0 1808 68 is_stmt 0             # x264_src/encoder/encoder.c:1808:68
	movq	1808(%r14), %rdx
	.loc	0 1808 9                        # x264_src/encoder/encoder.c:1808:9
	movq	%r15, %rdi
	callq	x264_cabac_encode_init@PLT
.Ltmp3165:
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r9                    # 8-byte Reload
.Ltmp3166:
.LBB16_206:                             # %if.end40.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1810 29 is_stmt 1             # x264_src/encoder/encoder.c:1810:29
	movl	13868(%r14), %eax
	.loc	0 1810 21 is_stmt 0             # x264_src/encoder/encoder.c:1810:21
	movl	%eax, 25800(%r14)
	.loc	0 1811 22 is_stmt 1             # x264_src/encoder/encoder.c:1811:22
	movl	$0, 25804(%r14)
	.loc	0 1813 20                       # x264_src/encoder/encoder.c:1813:20
	movl	7252(%r14), %eax
	.loc	0 1813 36 is_stmt 0             # x264_src/encoder/encoder.c:1813:36
	movq	3200(%r14), %rcx
	.loc	0 1813 41                       # x264_src/encoder/encoder.c:1813:41
	movl	1084(%rcx), %ebx
	.loc	0 1814 31 is_stmt 1             # x264_src/encoder/encoder.c:1814:31
	cltd
	idivl	%ebx
.Ltmp3167:
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $eax
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $edx
	#DEBUG_VALUE: x264_slice_write:i_skip <- 0
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	.loc	0 1817 37                       # x264_src/encoder/encoder.c:1817:37
	imull	%eax, %ebx
	.loc	0 1817 28 is_stmt 0             # x264_src/encoder/encoder.c:1817:28
	addl	%edx, %ebx
	.loc	0 1817 59                       # x264_src/encoder/encoder.c:1817:59
	cmpl	7256(%r14), %ebx
	.loc	0 1817 5                        # x264_src/encoder/encoder.c:1817:5
	jle	.LBB16_211
.Ltmp3168:
# %bb.207:                              # %while.end.thread.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $eax
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $edx
	#DEBUG_VALUE: x264_slice_write:i_skip <- 0
	#DEBUG_VALUE: x264_slice_write:i_skip <- 0
	.loc	0 2003 9 is_stmt 1              # x264_src/encoder/encoder.c:2003:9
	cmpl	$0, 128(%r14)
.Ltmp3169:
	.loc	0 2003 9 is_stmt 0              # x264_src/encoder/encoder.c:2003:9
	jne	.LBB16_319
.Ltmp3170:
# %bb.208:                              # %if.else589.thread.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $eax
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $edx
	#DEBUG_VALUE: x264_slice_write:i_skip <- 0
	.loc	4 159 17 is_stmt 1              # x264_src/common/bs.h:159:17
	movq	(%r9), %rsi
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	movl	(%r11), %eax
.Ltmp3171:
	.loc	4 0 14 is_stmt 0                # x264_src/common/bs.h:0:14
	movl	52(%rsp), %r12d                 # 4-byte Reload
	movq	56(%rsp), %rbx                  # 8-byte Reload
.Ltmp3172:
.LBB16_209:                             # %if.end595.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_rbsp_trailing:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 1
	.loc	4 160 17 is_stmt 1              # x264_src/common/bs.h:160:17
	leaq	1(,%rsi,2), %rsi
	movq	%rsi, (%r9)
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	decl	%eax
.Ltmp3173:
	.loc	4 162 19                        # x264_src/common/bs.h:162:19
	cmpl	$32, %eax
.Ltmp3174:
	.loc	4 162 9 is_stmt 0               # x264_src/common/bs.h:162:9
	jne	.LBB16_309
.Ltmp3175:
# %bb.210:                              # %bs_write1.exit.thread.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_rbsp_trailing:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write1:i_bit <- 1
	#DEBUG_VALUE: endian_fix32:x <- $esi
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%esi
.Ltmp3176:
	.loc	4 164 9                         # x264_src/common/bs.h:164:9
	movq	(%rbx), %rax
	.loc	4 164 21 is_stmt 0              # x264_src/common/bs.h:164:21
	movl	%esi, (%rax)
	.loc	4 165 14 is_stmt 1              # x264_src/common/bs.h:165:14
	movq	(%rbx), %rdx
	addq	$4, %rdx
	movq	%rdx, (%rbx)
.Ltmp3177:
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- 0
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 118 19                        # x264_src/common/bs.h:118:19
	movl	$64, (%r11)
	movl	$64, %eax
	.loc	4 119 13                        # x264_src/common/bs.h:119:13
	jmp	.LBB16_311
.Ltmp3178:
	.p2align	4, 0x90
.LBB16_211:                             # %while.body.lr.ph.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- 0
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- 0
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $eax
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $edx
	#DEBUG_VALUE: x264_slice_write:i_skip <- 0
	.loc	4 0 13 is_stmt 0                # x264_src/common/bs.h:0:13
	movl	%edx, %r12d
	movl	%eax, %r15d
	movl	44(%rsp), %eax                  # 4-byte Reload
.Ltmp3179:
	addl	84(%rsp), %eax                  # 4-byte Folded Reload
.Ltmp3180:
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	shll	$3, %eax
	movl	%eax, 44(%rsp)                  # 4-byte Spill
	movq	104(%rsp), %rax                 # 8-byte Reload
	subl	%ebp, %eax
	shll	$3, %eax
	.loc	0 1780 59 is_stmt 1             # x264_src/encoder/encoder.c:1780:59
	cmpl	$1, 48(%rsp)                    # 4-byte Folded Reload
	sete	%dl
.Ltmp3181:
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	.loc	0 0 59 is_stmt 0                # x264_src/encoder/encoder.c:0:59
	movq	96(%rsp), %rcx                  # 8-byte Reload
	addl	%ecx, %eax
	addl	$-64, %eax
	movq	%rax, 200(%rsp)                 # 8-byte Spill
	orb	88(%rsp), %dl                   # 1-byte Folded Reload
	movb	%dl, 27(%rsp)                   # 1-byte Spill
	movl	$0, 28(%rsp)                    # 4-byte Folded Spill
	movl	$0, 76(%rsp)                    # 4-byte Folded Spill
	movl	$0, 80(%rsp)                    # 4-byte Folded Spill
	jmp	.LBB16_214
.Ltmp3182:
	.p2align	4, 0x90
.LBB16_212:                             # %if.else567.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1995 19 is_stmt 1             # x264_src/encoder/encoder.c:1995:19
	incl	%r12d
.Ltmp3183:
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	.loc	0 1996 26                       # x264_src/encoder/encoder.c:1996:26
	movq	3200(%r14), %rax
	.loc	0 1996 31 is_stmt 0             # x264_src/encoder/encoder.c:1996:31
	movl	1084(%rax), %ebx
	xorl	%r13d, %r13d
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r9                    # 8-byte Reload
	movl	48(%rsp), %r15d                 # 4-byte Reload
.Ltmp3184:
.LBB16_213:                             # %cleanup578.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	.loc	0 1996 20                       # x264_src/encoder/encoder.c:1996:20
	xorl	%eax, %eax
	cmpl	%ebx, %r12d
	sete	%al
.Ltmp3185:
	.loc	0 1996 13                       # x264_src/encoder/encoder.c:1996:13
	cmovel	%r13d, %r12d
.Ltmp3186:
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	addl	%eax, %r15d
.Ltmp3187:
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	.loc	0 1817 37 is_stmt 1             # x264_src/encoder/encoder.c:1817:37
	imull	%r15d, %ebx
	.loc	0 1817 28 is_stmt 0             # x264_src/encoder/encoder.c:1817:28
	addl	%r12d, %ebx
.Ltmp3188:
	#DEBUG_VALUE: x264_slice_write:mb_xy <- $ebx
	.loc	0 1817 59                       # x264_src/encoder/encoder.c:1817:59
	cmpl	7256(%r14), %ebx
	.loc	0 1817 5                        # x264_src/encoder/encoder.c:1817:5
	jg	.LBB16_318
.Ltmp3189:
.LBB16_214:                             # %while.body.i
                                        #   Parent Loop BB16_3 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB16_227 Depth 3
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_cabac_pos:cb <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	.loc	13 78 17 is_stmt 1              # x264_src/common/cabac.h:78:17
	movq	13928(%r14), %rax
.Ltmp3190:
	#DEBUG_VALUE: mb_spos <- undef
	.loc	0 1820 39                       # x264_src/encoder/encoder.c:1820:39
	cmpl	$0, 684(%r14)
.Ltmp3191:
	.loc	0 1820 13 is_stmt 0             # x264_src/encoder/encoder.c:1820:13
	jle	.LBB16_218
.Ltmp3192:
# %bb.215:                              # %if.then71.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1825 17 is_stmt 1             # x264_src/encoder/encoder.c:1825:17
	cmpl	$0, 128(%r14)
.Ltmp3193:
	.loc	0 1825 17 is_stmt 0             # x264_src/encoder/encoder.c:1825:17
	je	.LBB16_217
.Ltmp3194:
# %bb.216:                              # %if.then75.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movq	64(%rsp), %rcx                  # 8-byte Reload
.Ltmp3195:
	.loc	0 1827 17 is_stmt 1             # x264_src/encoder/encoder.c:1827:17
	movdqa	(%rcx), %xmm0
	movaps	16(%rcx), %xmm1
	movaps	32(%rcx), %xmm2
	movaps	%xmm2, 288(%rsp)
	movaps	%xmm1, 272(%rsp)
	movdqa	%xmm0, 256(%rsp)
.Ltmp3196:
	#DEBUG_VALUE: x264_slice_write:cabac_bak <- [DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_fragment 0 384] $rsp
	.loc	0 1830 38                       # x264_src/encoder/encoder.c:1830:38
	movzbl	-1(%rax), %ecx
.Ltmp3197:
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- $cl
	.loc	0 0 38 is_stmt 0                # x264_src/encoder/encoder.c:0:38
	movl	%ecx, 80(%rsp)                  # 4-byte Spill
.Ltmp3198:
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref] $rsp
	.loc	0 1831 13 is_stmt 1             # x264_src/encoder/encoder.c:1831:13
	jmp	.LBB16_218
.Ltmp3199:
	.p2align	4, 0x90
.LBB16_217:                             # %if.else.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movq	120(%rsp), %rdx                 # 8-byte Reload
.Ltmp3200:
	.loc	0 1834 33 is_stmt 1             # x264_src/encoder/encoder.c:1834:33
	movq	32(%rdx), %rcx
	movq	%rcx, 240(%rsp)
	movdqu	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movaps	%xmm1, 224(%rsp)
	movdqa	%xmm0, 208(%rsp)
.Ltmp3201:
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movl	28(%rsp), %ecx                  # 4-byte Reload
	movl	%ecx, 76(%rsp)                  # 4-byte Spill
.Ltmp3202:
.LBB16_218:                             # %if.end82.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	movl	1792(%r14), %ecx
	movl	1824(%r14), %r13d
	subl	1800(%r14), %ecx
	movl	%ecx, 104(%rsp)                 # 4-byte Spill
	movl	13920(%r14), %ecx
	subl	%eax, %ecx
	movl	13912(%r14), %eax
	movl	%eax, 96(%rsp)                  # 4-byte Spill
	subl	13916(%r14), %ecx
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
.Ltmp3203:
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
.Ltmp3204:
	.loc	0 1839 20 is_stmt 1             # x264_src/encoder/encoder.c:1839:20
	testl	%r12d, %r12d
	.loc	0 1839 25 is_stmt 0             # x264_src/encoder/encoder.c:1839:25
	jne	.LBB16_221
.Ltmp3205:
# %bb.219:                              # %land.lhs.true.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1839 29                       # x264_src/encoder/encoder.c:1839:29
	cmpl	$0, 17424(%r14)
.Ltmp3206:
	.loc	0 1839 13                       # x264_src/encoder/encoder.c:1839:13
	jne	.LBB16_221
.Ltmp3207:
# %bb.220:                              # %if.then87.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1840 13 is_stmt 1             # x264_src/encoder/encoder.c:1840:13
	movq	%r14, %rdi
	movl	%r15d, %esi
	movl	$1, %edx
	callq	x264_fdec_filter_row
.Ltmp3208:
	.p2align	4, 0x90
.LBB16_221:                             # %if.end88.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1843 9                        # x264_src/encoder/encoder.c:1843:9
	movq	%r14, %rdi
	movl	%r12d, %esi
	movl	%r15d, %edx
	callq	x264_macroblock_cache_load@PLT
.Ltmp3209:
	.loc	0 1845 9                        # x264_src/encoder/encoder.c:1845:9
	movq	%r14, %rdi
	callq	x264_macroblock_analyse@PLT
.Ltmp3210:
	.loc	0 1848 9                        # x264_src/encoder/encoder.c:1848:9
	movq	%r14, %rdi
	callq	x264_macroblock_encode@PLT
.Ltmp3211:
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	.loc	0 344 30                        # x264_src/encoder/encoder.c:344:30
	movq	1784(%r14), %rbp
.Ltmp3212:
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 345 19                        # x264_src/encoder/encoder.c:345:19
	movl	128(%r14), %eax
	.loc	0 345 10 is_stmt 0              # x264_src/encoder/encoder.c:345:10
	testl	%eax, %eax
	.loc	0 345 27                        # x264_src/encoder/encoder.c:345:27
	je	.LBB16_223
.Ltmp3213:
# %bb.222:                              # %land.lhs.true.i914.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 345 40                        # x264_src/encoder/encoder.c:345:40
	movq	13936(%r14), %rcx
	.loc	0 345 46                        # x264_src/encoder/encoder.c:345:46
	subq	13928(%r14), %rcx
	.loc	0 345 59                        # x264_src/encoder/encoder.c:345:59
	cmpq	$2500, %rcx                     # imm = 0x9C4
	.loc	0 345 68                        # x264_src/encoder/encoder.c:345:68
	jl	.LBB16_224
.Ltmp3214:
.LBB16_223:                             # %lor.lhs.false.i.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 346 20 is_stmt 1              # x264_src/encoder/encoder.c:346:20
	movq	1808(%r14), %rcx
	.loc	0 346 26 is_stmt 0              # x264_src/encoder/encoder.c:346:26
	subq	1800(%r14), %rcx
	.loc	0 346 40                        # x264_src/encoder/encoder.c:346:40
	cmpq	$2499, %rcx                     # imm = 0x9C3
.Ltmp3215:
	.loc	0 345 9 is_stmt 1               # x264_src/encoder/encoder.c:345:9
	jg	.LBB16_229
.Ltmp3216:
.LBB16_224:                             # %if.then.i920.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	1776(%r14), %edi
.Ltmp3217:
	.loc	0 348 28 is_stmt 1              # x264_src/encoder/encoder.c:348:28
	movl	$100000, %eax                   # imm = 0x186A0
	addl	%eax, %edi
	movl	%edi, 1776(%r14)
.Ltmp3218:
	.loc	0 349 9                         # x264_src/encoder/encoder.c:349:9
	callq	x264_malloc@PLT
.Ltmp3219:
	movq	%rax, 1784(%r14)
.Ltmp3220:
	.loc	0 349 9 is_stmt 0               # x264_src/encoder/encoder.c:349:9
	testq	%rax, %rax
.Ltmp3221:
	.loc	0 349 9                         # x264_src/encoder/encoder.c:349:9
	je	.LBB16_330
.Ltmp3222:
# %bb.225:                              # %do.end.i.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 350 67 is_stmt 1              # x264_src/encoder/encoder.c:350:67
	movslq	1776(%r14), %rdx
	.loc	0 350 89 is_stmt 0              # x264_src/encoder/encoder.c:350:89
	andq	$-16, %rdx
	addq	$-100000, %rdx                  # imm = 0xFFFE7960
	.loc	0 350 9                         # x264_src/encoder/encoder.c:350:9
	movq	%rax, %rdi
	movq	%rbp, %rsi
	callq	*32816(%r14)
.Ltmp3223:
	.loc	0 351 33 is_stmt 1              # x264_src/encoder/encoder.c:351:33
	movq	1784(%r14), %rcx
	.loc	0 351 45 is_stmt 0              # x264_src/encoder/encoder.c:351:45
	movq	%rcx, %rax
	subq	%rbp, %rax
.Ltmp3224:
	#DEBUG_VALUE: delta <- $rax
	.loc	0 353 27 is_stmt 1              # x264_src/encoder/encoder.c:353:27
	addq	%rax, 1792(%r14)
	.loc	0 354 21                        # x264_src/encoder/encoder.c:354:21
	addq	%rax, 1800(%r14)
	.loc	0 355 55                        # x264_src/encoder/encoder.c:355:55
	movslq	1776(%r14), %rdx
	.loc	0 355 46 is_stmt 0              # x264_src/encoder/encoder.c:355:46
	addq	%rcx, %rdx
	.loc	0 355 25                        # x264_src/encoder/encoder.c:355:25
	movq	%rdx, 1808(%r14)
	.loc	0 357 26 is_stmt 1              # x264_src/encoder/encoder.c:357:26
	addq	%rax, 13920(%r14)
	.loc	0 358 20                        # x264_src/encoder/encoder.c:358:20
	addq	%rax, 13928(%r14)
	.loc	0 359 24                        # x264_src/encoder/encoder.c:359:24
	movq	%rdx, 13936(%r14)
.Ltmp3225:
	#DEBUG_VALUE: i <- 0
	.loc	0 361 27                        # x264_src/encoder/encoder.c:361:27
	cmpl	$0, 1760(%r14)
.Ltmp3226:
	.loc	0 361 9 is_stmt 0               # x264_src/encoder/encoder.c:361:9
	js	.LBB16_228
.Ltmp3227:
# %bb.226:                              # %for.body.i926.i.preheader
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	#DEBUG_VALUE: delta <- $rax
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	$-1, %rcx
	movl	$16, %edx
.Ltmp3228:
	.p2align	4, 0x90
.LBB16_227:                             # %for.body.i926.i
                                        #   Parent Loop BB16_3 Depth=1
                                        #     Parent Loop BB16_214 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	#DEBUG_VALUE: delta <- $rax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
	.loc	0 362 20 is_stmt 1              # x264_src/encoder/encoder.c:362:20
	movq	1768(%r14), %rsi
	.loc	0 362 37 is_stmt 0              # x264_src/encoder/encoder.c:362:37
	addq	%rax, (%rsi,%rdx)
.Ltmp3229:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rcx
	.loc	0 361 37 is_stmt 1              # x264_src/encoder/encoder.c:361:37
	movslq	1760(%r14), %rsi
	.loc	0 361 27 is_stmt 0              # x264_src/encoder/encoder.c:361:27
	incq	%rcx
.Ltmp3230:
	addq	$24, %rdx
	cmpq	%rsi, %rcx
.Ltmp3231:
	.loc	0 361 9                         # x264_src/encoder/encoder.c:361:9
	jl	.LBB16_227
.Ltmp3232:
.LBB16_228:                             # %x264_bitstream_check_buffer.exit.thread1078.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rbp, %rdi
	callq	x264_free@PLT
.Ltmp3233:
	.loc	0 1853 22 is_stmt 1             # x264_src/encoder/encoder.c:1853:22
	movl	128(%r14), %eax
.Ltmp3234:
.LBB16_229:                             # %if.end92.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1853 13 is_stmt 0             # x264_src/encoder/encoder.c:1853:13
	testl	%eax, %eax
	movl	%r15d, 48(%rsp)                 # 4-byte Spill
.Ltmp3235:
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	%r13, 88(%rsp)                  # 8-byte Spill
.Ltmp3236:
	.loc	0 1853 13                       # x264_src/encoder/encoder.c:1853:13
	je	.LBB16_236
.Ltmp3237:
# %bb.230:                              # %if.then96.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1855 23 is_stmt 1             # x264_src/encoder/encoder.c:1855:23
	cmpl	7252(%r14), %ebx
	.loc	0 1855 42 is_stmt 0             # x264_src/encoder/encoder.c:1855:42
	jle	.LBB16_233
.Ltmp3238:
# %bb.231:                              # %land.lhs.true101.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 42                          # x264_src/encoder/encoder.c:0:42
	testb	$1, %r15b
	.loc	0 1855 61                       # x264_src/encoder/encoder.c:1855:61
	je	.LBB16_242
.Ltmp3239:
# %bb.232:                              # %land.lhs.true101.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$0, 7268(%r14)
	je	.LBB16_242
.Ltmp3240:
.LBB16_233:                             # %if.end109.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1858 17 is_stmt 1             # x264_src/encoder/encoder.c:1858:17
	movl	17384(%r14), %eax
	cmpl	$18, %eax
	je	.LBB16_235
.Ltmp3241:
.LBB16_234:                             # %if.end109.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$6, %eax
	jne	.LBB16_239
.Ltmp3242:
.LBB16_235:                             # %if.then118.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1859 17                       # x264_src/encoder/encoder.c:1859:17
	movq	%r14, %rdi
	movl	$1, %esi
	callq	x264_cabac_mb_skip@PLT
.Ltmp3243:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB16_249
.Ltmp3244:
	.p2align	4, 0x90
.LBB16_236:                             # %if.else128.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1869 17 is_stmt 1             # x264_src/encoder/encoder.c:1869:17
	movl	17384(%r14), %eax
	cmpl	$18, %eax
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r9                    # 8-byte Reload
	je	.LBB16_238
.Ltmp3245:
# %bb.237:                              # %if.else128.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$6, %eax
	jne	.LBB16_243
.Ltmp3246:
.LBB16_238:                             # %if.then138.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1870 23                       # x264_src/encoder/encoder.c:1870:23
	incl	28(%rsp)                        # 4-byte Folded Spill
.Ltmp3247:
	#DEBUG_VALUE: x264_slice_write:i_skip <- undef
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1870 17 is_stmt 0             # x264_src/encoder/encoder.c:1870:17
	jmp	.LBB16_250
.Ltmp3248:
	.p2align	4, 0x90
.LBB16_239:                             # %if.else119.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1862 34 is_stmt 1             # x264_src/encoder/encoder.c:1862:34
	cmpl	$2, 7248(%r14)
.Ltmp3249:
	.loc	0 1862 21 is_stmt 0             # x264_src/encoder/encoder.c:1862:21
	je	.LBB16_241
.Ltmp3250:
# %bb.240:                              # %if.then124.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1863 21 is_stmt 1             # x264_src/encoder/encoder.c:1863:21
	movq	%r14, %rdi
	xorl	%esi, %esi
	callq	x264_cabac_mb_skip@PLT
.Ltmp3251:
.LBB16_241:                             # %if.end125.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1864 17                       # x264_src/encoder/encoder.c:1864:17
	movq	%r14, %rdi
	movq	64(%rsp), %rsi                  # 8-byte Reload
	callq	x264_macroblock_write_cabac@PLT
.Ltmp3252:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB16_249
.Ltmp3253:
.LBB16_242:                             # %if.then107.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	movq	64(%rsp), %rdi                  # 8-byte Reload
.Ltmp3254:
	.loc	0 1856 17 is_stmt 1             # x264_src/encoder/encoder.c:1856:17
	callq	x264_cabac_encode_terminal_c@PLT
.Ltmp3255:
	.loc	0 1858 17                       # x264_src/encoder/encoder.c:1858:17
	movl	17384(%r14), %eax
	cmpl	$18, %eax
	jne	.LBB16_234
	jmp	.LBB16_235
.Ltmp3256:
.LBB16_243:                             # %if.else139.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1873 34                       # x264_src/encoder/encoder.c:1873:34
	cmpl	$2, 7248(%r14)
.Ltmp3257:
	.loc	0 1873 21 is_stmt 0             # x264_src/encoder/encoder.c:1873:21
	je	.LBB16_248
.Ltmp3258:
# %bb.244:                              # %if.then144.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	0 0 21                          # x264_src/encoder/encoder.c:0:21
	movl	28(%rsp), %r9d                  # 4-byte Reload
.Ltmp3259:
	.loc	4 211 15 is_stmt 1              # x264_src/common/bs.h:211:15
	incl	%r9d
.Ltmp3260:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $r9d
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%r9d, %eax
	shrl	$16, %eax
.Ltmp3261:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%ecx, %ecx
	cmpl	$65536, %r9d                    # imm = 0x10000
	setge	%cl
.Ltmp3262:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%r9d, %eax
.Ltmp3263:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $eax
	shll	$5, %ecx
.Ltmp3264:
	#DEBUG_VALUE: bs_write_ue_big:size <- $ecx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%eax, %edx
	shrl	$8, %edx
	leal	16(%rcx), %esi
.Ltmp3265:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %eax                      # imm = 0x100
.Ltmp3266:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%eax, %edx
.Ltmp3267:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edx
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edx, %rax
	movzbl	x264_ue_size_tab(%rax), %edx
.Ltmp3268:
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%sil, %eax
	cmovll	%ecx, %eax
	movzbl	%al, %eax
	addl	%edx, %eax
	shrl	%eax
.Ltmp3269:
	#DEBUG_VALUE: bs_write:i_count <- $eax
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 0 22 is_stmt 0                # x264_src/common/bs.h:0:22
	movq	8(%rsp), %r8                    # 8-byte Reload
.Ltmp3270:
	.loc	4 117 27 is_stmt 1              # x264_src/common/bs.h:117:27
	movq	(%r8), %rsi
	.loc	4 117 36 is_stmt 0              # x264_src/common/bs.h:117:36
	movl	%eax, %ecx
	shlq	%cl, %rsi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rsi, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	movl	(%r11), %edx
	subl	%eax, %edx
	movl	%edx, (%r11)
.Ltmp3271:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %edx
.Ltmp3272:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_246
.Ltmp3273:
# %bb.245:                              # %if.then.i.i945.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write:i_count <- $eax
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%edx, %ecx
	shlq	%cl, %rsi
.Ltmp3274:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3275:
	.loc	28 0 32 is_stmt 0               # x264_src/common/osdep.h:0:32
	movq	56(%rsp), %rdi                  # 8-byte Reload
.Ltmp3276:
	.loc	4 124 13 is_stmt 1              # x264_src/common/bs.h:124:13
	movq	(%rdi), %rcx
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rcx)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %edx
	addl	$32, %edx
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rdi)
.Ltmp3277:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r8), %rsi
.Ltmp3278:
.LBB16_246:                             # %bs_write.exit.i942.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%eax
.Ltmp3279:
	#DEBUG_VALUE: bs_write:i_count <- $eax
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%eax, %ecx
	shlq	%cl, %rsi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r9d, %edi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rsi, %rdi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rdi, (%r8)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%eax, %edx
	movl	%edx, (%r11)
	movl	$0, 28(%rsp)                    # 4-byte Folded Spill
.Ltmp3280:
	#DEBUG_VALUE: x264_slice_write:i_skip <- undef
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %edx
.Ltmp3281:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_248
.Ltmp3282:
# %bb.247:                              # %if.then.i25.i.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r9d
	#DEBUG_VALUE: bs_write:i_count <- $eax
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r9d
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%edx, %ecx
	shlq	%cl, %rdi
.Ltmp3283:
	#DEBUG_VALUE: endian_fix:x <- $rdi
	#DEBUG_VALUE: endian_fix64:x <- $rdi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rdi
.Ltmp3284:
	.loc	28 0 32 is_stmt 0               # x264_src/common/osdep.h:0:32
	movq	56(%rsp), %rcx                  # 8-byte Reload
.Ltmp3285:
	.loc	4 124 13 is_stmt 1              # x264_src/common/bs.h:124:13
	movq	(%rcx), %rax
.Ltmp3286:
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%edi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	addl	$32, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rcx)
.Ltmp3287:
.LBB16_248:                             # %if.end147.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1878 17                       # x264_src/encoder/encoder.c:1878:17
	movq	%r14, %rdi
	callq	x264_macroblock_write_cavlc@PLT
.Ltmp3288:
	.p2align	4, 0x90
.LBB16_249:                             # %if.end149.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r9                    # 8-byte Reload
.Ltmp3289:
.LBB16_250:                             # %if.end149.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%r14), %r15d
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r14), %r15d
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %r15d
.Ltmp3290:
	#DEBUG_VALUE: x264_cabac_pos:cb <- [DW_OP_plus_uconst 64, DW_OP_deref] $rsp
	.loc	13 78 17 is_stmt 1              # x264_src/common/cabac.h:78:17
	movl	13928(%r14), %r13d
	.loc	13 78 19 is_stmt 0              # x264_src/common/cabac.h:78:19
	subl	13920(%r14), %r13d
	.loc	13 78 12                        # x264_src/common/cabac.h:78:12
	addl	13916(%r14), %r13d
.Ltmp3291:
	.loc	4 90 11 is_stmt 1               # x264_src/common/bs.h:90:11
	subl	1824(%r14), %r15d
	addl	13912(%r14), %r15d
.Ltmp3292:
	.loc	0 1778 52                       # x264_src/encoder/encoder.c:1778:52
	cmpl	$0, 84(%rsp)                    # 4-byte Folded Reload
.Ltmp3293:
	#DEBUG_VALUE: total_bits <- undef
	#DEBUG_VALUE: mb_size <- undef
	.loc	0 1886 57                       # x264_src/encoder/encoder.c:1886:57
	jle	.LBB16_255
.Ltmp3294:
# %bb.251:                              # %if.end149.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	leal	(%r15,%r13,8), %eax
	movq	200(%rsp), %rcx                 # 8-byte Reload
.Ltmp3295:
	.loc	0 1886 0                        # x264_src/encoder/encoder.c:1886:0
	addl	%ecx, %eax
	addl	$64, %eax
	.loc	0 1886 57                       # x264_src/encoder/encoder.c:1886:57
	cmpl	%eax, 44(%rsp)                  # 4-byte Folded Reload
	jge	.LBB16_255
.Ltmp3296:
# %bb.252:                              # %land.lhs.true160.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1886 61                       # x264_src/encoder/encoder.c:1886:61
	cmpl	$0, 17424(%r14)
.Ltmp3297:
	.loc	0 1886 13                       # x264_src/encoder/encoder.c:1886:13
	jne	.LBB16_255
.Ltmp3298:
# %bb.253:                              # %if.then164.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1888 23 is_stmt 1             # x264_src/encoder/encoder.c:1888:23
	cmpl	7252(%r14), %ebx
.Ltmp3299:
	.loc	0 1888 17 is_stmt 0             # x264_src/encoder/encoder.c:1888:17
	jne	.LBB16_314
.Ltmp3300:
# %bb.254:                              # %if.else187.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1906 33 is_stmt 1             # x264_src/encoder/encoder.c:1906:33
	movl	%ebx, 7256(%r14)
.Ltmp3301:
	.p2align	4, 0x90
.LBB16_255:                             # %if.end196.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movl	$0, 17424(%r14)
.Ltmp3302:
	.loc	0 1919 9 is_stmt 1              # x264_src/encoder/encoder.c:1919:9
	movq	%r14, %rdi
	callq	x264_macroblock_cache_save@PLT
.Ltmp3303:
	.loc	0 1922 40                       # x264_src/encoder/encoder.c:1922:40
	movslq	17384(%r14), %rax
	.loc	0 1922 47 is_stmt 0             # x264_src/encoder/encoder.c:1922:47
	incl	26724(%r14,%rax,4)
	.loc	0 1924 23 is_stmt 1             # x264_src/encoder/encoder.c:1924:23
	movl	17384(%r14), %eax
.Ltmp3304:
	#DEBUG_VALUE: b_intra <- undef
	.loc	0 1925 34                       # x264_src/encoder/encoder.c:1925:34
	cmpl	$1, 368(%r14)
	.loc	0 1925 51 is_stmt 0             # x264_src/encoder/encoder.c:1925:51
	jle	.LBB16_257
.Ltmp3305:
# %bb.256:                              # %if.then228.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1924 23 is_stmt 1             # x264_src/encoder/encoder.c:1924:23
	cmpl	$4, %eax
.Ltmp3306:
	.loc	0 1927 26                       # x264_src/encoder/encoder.c:1927:26
	jae	.LBB16_259
	jmp	.LBB16_262
.Ltmp3307:
	.p2align	4, 0x90
.LBB16_257:                             # %lor.lhs.false225.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1924 23                       # x264_src/encoder/encoder.c:1924:23
	cmpl	$4, %eax
	.loc	0 1925 13                       # x264_src/encoder/encoder.c:1925:13
	jb	.LBB16_261
.Ltmp3308:
# %bb.258:                              # %lor.lhs.false225.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$0, 560(%r14)
	je	.LBB16_261
.Ltmp3309:
.LBB16_259:                             # %land.lhs.true230.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1927 30                       # x264_src/encoder/encoder.c:1927:30
	cmpl	$18, %eax
	ja	.LBB16_271
.Ltmp3310:
# %bb.260:                              # %land.lhs.true230.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 30 is_stmt 0                # x264_src/encoder/encoder.c:0:30
	movl	$262336, %ecx                   # imm = 0x400C0
	btl	%eax, %ecx
	jae	.LBB16_271
.Ltmp3311:
.LBB16_261:                             # %if.end318.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1945 34 is_stmt 1             # x264_src/encoder/encoder.c:1945:34
	cmpl	$2, 368(%r14)
.Ltmp3312:
	.loc	0 1945 13 is_stmt 0             # x264_src/encoder/encoder.c:1945:13
	jl	.LBB16_294
.Ltmp3313:
.LBB16_262:                             # %if.then323.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1947 23 is_stmt 1             # x264_src/encoder/encoder.c:1947:23
	movl	17400(%r14), %ecx
	.loc	0 1947 42 is_stmt 0             # x264_src/encoder/encoder.c:1947:42
	movl	17404(%r14), %edx
	.loc	0 1947 34                       # x264_src/encoder/encoder.c:1947:34
	movl	%edx, %esi
	orl	%ecx, %esi
.Ltmp3314:
	.loc	0 1947 17                       # x264_src/encoder/encoder.c:1947:17
	je	.LBB16_264
.Ltmp3315:
# %bb.263:                              # %if.then327.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1924 23 is_stmt 1             # x264_src/encoder/encoder.c:1924:23
	xorl	%esi, %esi
	cmpl	$4, %eax
	setae	%sil
.Ltmp3316:
	.loc	0 1949 47                       # x264_src/encoder/encoder.c:1949:47
	movl	%ecx, %edi
	andl	$1, %edi
	.loc	0 1949 71 is_stmt 0             # x264_src/encoder/encoder.c:1949:71
	movl	%ecx, %r8d
	shrl	%r8d
	.loc	0 1949 75                       # x264_src/encoder/encoder.c:1949:75
	andl	$1, %r8d
	.loc	0 1950 75 is_stmt 1             # x264_src/encoder/encoder.c:1950:75
	movl	%ecx, %r9d
	sarl	$3, %r9d
	.loc	0 1949 51                       # x264_src/encoder/encoder.c:1949:51
	addl	%edi, %r9d
	.loc	0 1950 56                       # x264_src/encoder/encoder.c:1950:56
	btl	$2, %ecx
	adcl	%r8d, %r9d
.Ltmp3317:
	#DEBUG_VALUE: cbpsum <- $r9d
	.loc	0 1951 54                       # x264_src/encoder/encoder.c:1951:54
	addl	%r9d, 27144(%r14,%rsi,4)
	.loc	0 1952 54                       # x264_src/encoder/encoder.c:1952:54
	cmpl	$1, %edx
	sbbl	$-1, 27152(%r14,%rsi,4)
	.loc	0 1953 76                       # x264_src/encoder/encoder.c:1953:76
	sarl	%edx
	.loc	0 1953 54 is_stmt 0             # x264_src/encoder/encoder.c:1953:54
	addl	%edx, 27160(%r14,%rsi,4)
.Ltmp3318:
.LBB16_264:                             # %if.end381.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1924 23 is_stmt 1             # x264_src/encoder/encoder.c:1924:23
	cmpl	$4, %eax
	setb	%dl
.Ltmp3319:
	.loc	0 1955 17                       # x264_src/encoder/encoder.c:1955:17
	testl	%ecx, %ecx
	sete	%cl
	.loc	0 1955 34 is_stmt 0             # x264_src/encoder/encoder.c:1955:34
	orb	%dl, %cl
	je	.LBB16_270
.Ltmp3320:
# %bb.265:                              # %if.end398.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1924 23 is_stmt 1             # x264_src/encoder/encoder.c:1924:23
	cmpl	$3, %eax
.Ltmp3321:
	.loc	0 1960 25                       # x264_src/encoder/encoder.c:1960:25
	ja	.LBB16_294
.Ltmp3322:
# %bb.266:                              # %land.lhs.true400.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1960 34 is_stmt 0             # x264_src/encoder/encoder.c:1960:34
	movl	17384(%r14), %eax
.Ltmp3323:
	.loc	0 1960 17                       # x264_src/encoder/encoder.c:1960:17
	cmpl	$3, %eax
	je	.LBB16_294
.Ltmp3324:
# %bb.267:                              # %land.lhs.true400.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$2, %eax
	je	.LBB16_290
.Ltmp3325:
# %bb.268:                              # %land.lhs.true400.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	cmpl	$1, %eax
	jne	.LBB16_291
.Ltmp3326:
# %bb.269:                              # %for.body429.preheader.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1966 57 is_stmt 1             # x264_src/encoder/encoder.c:1966:57
	movsbq	25036(%r14), %rax
	.loc	0 1966 103 is_stmt 0            # x264_src/encoder/encoder.c:1966:103
	incl	27220(%r14,%rax,4)
.Ltmp3327:
	#DEBUG_VALUE: i <- 4
	.loc	0 1966 57                       # x264_src/encoder/encoder.c:1966:57
	movsbq	25038(%r14), %rax
	.loc	0 1966 103                      # x264_src/encoder/encoder.c:1966:103
	incl	27220(%r14,%rax,4)
.Ltmp3328:
	#DEBUG_VALUE: i <- 8
	.loc	0 1966 57                       # x264_src/encoder/encoder.c:1966:57
	movsbq	25052(%r14), %rax
	.loc	0 1966 103                      # x264_src/encoder/encoder.c:1966:103
	incl	27220(%r14,%rax,4)
.Ltmp3329:
	#DEBUG_VALUE: i <- 12
	.loc	0 1966 57                       # x264_src/encoder/encoder.c:1966:57
	movsbq	25054(%r14), %rax
	movq	152(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1966 25                       # x264_src/encoder/encoder.c:1966:25
	jmp	.LBB16_292
.Ltmp3330:
	.p2align	4, 0x90
.LBB16_270:                             # %if.end398.thread.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1957 52 is_stmt 1             # x264_src/encoder/encoder.c:1957:52
	incl	26812(%r14)
	.loc	0 1958 61                       # x264_src/encoder/encoder.c:1958:61
	movl	17396(%r14), %ecx
	movq	192(%rsp), %rax                 # 8-byte Reload
.Ltmp3331:
	.loc	0 1960 25                       # x264_src/encoder/encoder.c:1960:25
	jmp	.LBB16_293
.Ltmp3332:
.LBB16_271:                             # %if.then245.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1929 27                       # x264_src/encoder/encoder.c:1929:27
	movslq	17388(%r14), %rcx
	cmpq	$13, %rcx
.Ltmp3333:
	.loc	0 1929 21 is_stmt 0             # x264_src/encoder/encoder.c:1929:21
	jne	.LBB16_273
.Ltmp3334:
# %bb.272:                              # %for.body.preheader.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1933 58 is_stmt 1             # x264_src/encoder/encoder.c:1933:58
	movzbl	17392(%r14), %ecx
	.loc	0 1933 84 is_stmt 0             # x264_src/encoder/encoder.c:1933:84
	incl	27076(%r14,%rcx,4)
.Ltmp3335:
	#DEBUG_VALUE: i <- 1
	.loc	0 1933 58                       # x264_src/encoder/encoder.c:1933:58
	movzbl	17393(%r14), %ecx
	.loc	0 1933 84                       # x264_src/encoder/encoder.c:1933:84
	incl	27076(%r14,%rcx,4)
.Ltmp3336:
	#DEBUG_VALUE: i <- 2
	.loc	0 1933 58                       # x264_src/encoder/encoder.c:1933:58
	movzbl	17394(%r14), %ecx
	.loc	0 1933 84                       # x264_src/encoder/encoder.c:1933:84
	incl	27076(%r14,%rcx,4)
.Ltmp3337:
	#DEBUG_VALUE: i <- 3
	.loc	0 1933 58                       # x264_src/encoder/encoder.c:1933:58
	movzbl	17395(%r14), %ecx
	movl	$1, %edx
.Ltmp3338:
	#DEBUG_VALUE: i <- 4
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	addl	%edx, 27076(%r14,%rcx,4)
.Ltmp3339:
	.loc	0 1934 48 is_stmt 1             # x264_src/encoder/encoder.c:1934:48
	cmpl	$2, 80(%r14)
.Ltmp3340:
	.loc	0 1934 21 is_stmt 0             # x264_src/encoder/encoder.c:1934:21
	jl	.LBB16_261
	jmp	.LBB16_274
.Ltmp3341:
.LBB16_273:                             # %if.then249.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/encoder.c:0:21
	movl	$4, %edx
.Ltmp3342:
	addl	%edx, 27076(%r14,%rcx,4)
.Ltmp3343:
	.loc	0 1934 48                       # x264_src/encoder/encoder.c:1934:48
	cmpl	$2, 80(%r14)
.Ltmp3344:
	.loc	0 1934 21                       # x264_src/encoder/encoder.c:1934:21
	jl	.LBB16_261
.Ltmp3345:
.LBB16_274:                             # %for.cond275.preheader.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 21                          # x264_src/encoder/encoder.c:0:21
	cmpl	$1, 7248(%r14)
	#DEBUG_VALUE: i_list <- 0
	jne	.LBB16_300
.Ltmp3346:
# %bb.275:                              # %for.cond285.preheader.i.preheader
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1938 41 is_stmt 1             # x264_src/encoder/encoder.c:1938:41
	movsbq	25132(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3347:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_277
.Ltmp3348:
# %bb.276:                              # %if.then301.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3349:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3350:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_277:                             # %if.end309.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25134(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3351:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_279
.Ltmp3352:
# %bb.278:                              # %if.then301.1.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3353:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3354:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_279:                             # %if.end309.1.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i <- 2
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25148(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3355:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_281
.Ltmp3356:
# %bb.280:                              # %if.then301.2.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 2
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3357:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3358:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_281:                             # %if.end309.2.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25150(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3359:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_283
.Ltmp3360:
# %bb.282:                              # %if.then301.3.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 3
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3361:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3362:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_283:                             # %if.end309.3.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 0
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25172(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3363:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_285
.Ltmp3364:
# %bb.284:                              # %if.then301.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 0
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3365:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	128(%rdx,%rcx,4)
.Ltmp3366:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_285:                             # %if.end309.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25174(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3367:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_287
.Ltmp3368:
# %bb.286:                              # %if.then301.1.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 1
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3369:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	128(%rdx,%rcx,4)
.Ltmp3370:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_287:                             # %if.end309.1.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i <- 2
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25188(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3371:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_289
.Ltmp3372:
# %bb.288:                              # %if.then301.2.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 2
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3373:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	128(%rdx,%rcx,4)
.Ltmp3374:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_289:                             # %if.end309.2.i.1
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 1
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movzbl	25190(%r14), %ecx
.Ltmp3375:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] $cl
	.loc	0 0 41 is_stmt 0                # x264_src/encoder/encoder.c:0:41
	movl	$1, %edx
.Ltmp3376:
	.loc	0 1939 39 is_stmt 1             # x264_src/encoder/encoder.c:1939:39
	testb	%cl, %cl
	jns	.LBB16_308
	jmp	.LBB16_261
.Ltmp3377:
.LBB16_290:                             # %if.then410.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1963 59                       # x264_src/encoder/encoder.c:1963:59
	movslq	17408(%r14), %rax
	movq	144(%rsp), %rcx                 # 8-byte Reload
	jmp	.LBB16_292
.Ltmp3378:
.LBB16_291:                             # %for.body452.preheader.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25036(%r14), %rax
	.loc	0 1969 103 is_stmt 0            # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3379:
	#DEBUG_VALUE: i <- 1
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25037(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3380:
	#DEBUG_VALUE: i <- 2
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25044(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3381:
	#DEBUG_VALUE: i <- 3
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25045(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3382:
	#DEBUG_VALUE: i <- 4
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25038(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3383:
	#DEBUG_VALUE: i <- 5
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25039(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3384:
	#DEBUG_VALUE: i <- 6
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25046(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3385:
	#DEBUG_VALUE: i <- 7
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25047(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3386:
	#DEBUG_VALUE: i <- 8
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25052(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3387:
	#DEBUG_VALUE: i <- 9
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25053(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3388:
	#DEBUG_VALUE: i <- 10
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25060(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3389:
	#DEBUG_VALUE: i <- 11
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25061(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3390:
	#DEBUG_VALUE: i <- 12
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25054(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3391:
	#DEBUG_VALUE: i <- 13
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25055(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3392:
	#DEBUG_VALUE: i <- 14
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25062(%r14), %rax
	.loc	0 1969 103                      # x264_src/encoder/encoder.c:1969:103
	incl	27272(%r14,%rax,4)
.Ltmp3393:
	#DEBUG_VALUE: i <- 15
	.loc	0 1969 57                       # x264_src/encoder/encoder.c:1969:57
	movsbq	25063(%r14), %rax
	movq	136(%rsp), %rcx                 # 8-byte Reload
.Ltmp3394:
.LBB16_292:                             # %if.end471.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leaq	(%rcx,%rax,4), %rax
	incl	(%rax)
.Ltmp3395:
	.loc	0 1970 81 is_stmt 1             # x264_src/encoder/encoder.c:1970:81
	movslq	17412(%r14), %rax
	.loc	0 1970 49 is_stmt 0             # x264_src/encoder/encoder.c:1970:49
	movzbl	x264_mb_pred_mode8x8c_fix(%rax), %eax
	movq	160(%rsp), %rcx                 # 8-byte Reload
	.loc	0 1970 17                       # x264_src/encoder/encoder.c:1970:17
	leaq	(%rcx,%rax,4), %rax
	movl	$1, %ecx
.Ltmp3396:
.LBB16_293:                             # %if.end483.sink.split.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	addl	%ecx, (%rax)
.Ltmp3397:
.LBB16_294:                             # %if.end483.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1975 13 is_stmt 1             # x264_src/encoder/encoder.c:1975:13
	cmpb	$0, 27(%rsp)                    # 1-byte Folded Reload
	jne	.LBB16_298
.Ltmp3398:
# %bb.295:                              # %if.then485.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1977 40                       # x264_src/encoder/encoder.c:1977:40
	movl	7268(%r14), %ebx
.Ltmp3399:
	#DEBUG_VALUE: mvy_limit <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_shr, DW_OP_stack_value] 4, $ebx
	.loc	0 0 40 is_stmt 0                # x264_src/encoder/encoder.c:0:40
	movl	16388(%r14), %eax
	.loc	0 1978 67 is_stmt 1             # x264_src/encoder/encoder.c:1978:67
	andl	%ebx, %eax
	cltq
	.loc	0 1978 89 is_stmt 0             # x264_src/encoder/encoder.c:1978:89
	movslq	16384(%r14), %rbp
	.loc	0 1978 35                       # x264_src/encoder/encoder.c:1978:35
	shlq	$5, %rbp
	addq	31232(%r14,%rax,8), %rbp
.Ltmp3400:
	#DEBUG_VALUE: bs <- $rbp
	.loc	0 1979 13 is_stmt 1             # x264_src/encoder/encoder.c:1979:13
	movq	%r14, %rdi
	callq	x264_macroblock_cache_load_deblock@PLT
.Ltmp3401:
	.loc	0 1980 17                       # x264_src/encoder/encoder.c:1980:17
	movq	16616(%r14), %rax
	movslq	16392(%r14), %rcx
	cmpb	$3, (%rax,%rcx)
	ja	.LBB16_297
.Ltmp3402:
# %bb.296:                              # %if.then538.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvy_limit <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_shr, DW_OP_stack_value] 4, $ebx
	#DEBUG_VALUE: bs <- $rbp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movdqa	.LCPI16_0(%rip), %xmm0          # xmm0 = [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]
	.loc	0 1981 17 is_stmt 1             # x264_src/encoder/encoder.c:1981:17
	movdqu	%xmm0, 16(%rbp)
	movdqu	%xmm0, (%rbp)
	jmp	.LBB16_298
.Ltmp3403:
	.p2align	4, 0x90
.LBB16_297:                             # %if.else539.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: mvy_limit <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_shr, DW_OP_stack_value] 4, $ebx
	#DEBUG_VALUE: bs <- $rbp
	.loc	0 1977 31                       # x264_src/encoder/encoder.c:1977:31
	movl	$4, %r8d
	movl	%ebx, %ecx
	shrl	%cl, %r8d
.Ltmp3404:
	#DEBUG_VALUE: mvy_limit <- $r8d
	.loc	0 1984 72                       # x264_src/encoder/encoder.c:1984:72
	xorl	%r9d, %r9d
	cmpl	$1, 7248(%r14)
	sete	%r9b
	movq	176(%rsp), %rdi                 # 8-byte Reload
	movq	184(%rsp), %rsi                 # 8-byte Reload
	movq	168(%rsp), %rdx                 # 8-byte Reload
	.loc	0 1983 17                       # x264_src/encoder/encoder.c:1983:17
	movq	%rbp, %rcx
	callq	*33320(%r14)
.Ltmp3405:
.LBB16_298:                             # %if.end556.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movq	112(%rsp), %rdx                 # 8-byte Reload
	addl	104(%rsp), %edx                 # 4-byte Folded Reload
	movq	88(%rsp), %rcx                  # 8-byte Reload
	subl	96(%rsp), %ecx                  # 4-byte Folded Reload
	leal	(%r15,%r13,8), %eax
	addl	$64, %eax
.Ltmp3406:
	#DEBUG_VALUE: total_bits <- $eax
	leal	(%rcx,%rdx,8), %ecx
	leal	(%rcx,%rax), %esi
	addl	$-64, %esi
.Ltmp3407:
	#DEBUG_VALUE: mb_size <- $esi
	.loc	0 1987 9 is_stmt 1              # x264_src/encoder/encoder.c:1987:9
	movq	%r14, %rdi
	callq	x264_ratecontrol_mb@PLT
.Ltmp3408:
	.loc	0 1989 13                       # x264_src/encoder/encoder.c:1989:13
	cmpl	$0, 7268(%r14)
.Ltmp3409:
	.loc	0 1989 13 is_stmt 0             # x264_src/encoder/encoder.c:1989:13
	je	.LBB16_212
.Ltmp3410:
# %bb.299:                              # %if.then560.i
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movl	48(%rsp), %r15d                 # 4-byte Reload
.Ltmp3411:
	.loc	0 1991 30 is_stmt 1             # x264_src/encoder/encoder.c:1991:30
	movl	%r15d, %eax
	andl	$1, %eax
	.loc	0 1991 20 is_stmt 0             # x264_src/encoder/encoder.c:1991:20
	addl	%eax, %r12d
.Ltmp3412:
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	.loc	0 1992 35 is_stmt 1             # x264_src/encoder/encoder.c:1992:35
	movq	3200(%r14), %rax
	.loc	0 1992 40 is_stmt 0             # x264_src/encoder/encoder.c:1992:40
	movl	1084(%rax), %ebx
	.loc	0 1992 30                       # x264_src/encoder/encoder.c:1992:30
	xorl	%eax, %eax
	cmpl	%ebx, %r12d
	setl	%al
	.loc	0 1992 20                       # x264_src/encoder/encoder.c:1992:20
	xorl	%eax, %r15d
.Ltmp3413:
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	.loc	0 0 20                          # x264_src/encoder/encoder.c:0:20
	xorl	%r13d, %r13d
	movq	16(%rsp), %r11                  # 8-byte Reload
	movq	8(%rsp), %r9                    # 8-byte Reload
	.loc	0 1993 9 is_stmt 1              # x264_src/encoder/encoder.c:1993:9
	jmp	.LBB16_213
.Ltmp3414:
.LBB16_300:                             # %for.cond275.preheader.i.split.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_list <- 0
	#DEBUG_VALUE: i_list <- undef
	#DEBUG_VALUE: i <- 0
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25132(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3415:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_302
.Ltmp3416:
# %bb.301:                              # %if.then301.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3417:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3418:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_302:                             # %if.end309.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 1
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25134(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3419:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_304
.Ltmp3420:
# %bb.303:                              # %if.then301.1.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3421:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3422:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_304:                             # %if.end309.1.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i <- 2
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movsbq	25148(%r14), %rcx
	testq	%rcx, %rcx
.Ltmp3423:
	#DEBUG_VALUE: i_ref <- undef
	.loc	0 1939 33                       # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_306
.Ltmp3424:
# %bb.305:                              # %if.then301.2.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	32(%rsp), %rdx                  # 8-byte Reload
.Ltmp3425:
	.loc	0 1940 77 is_stmt 1             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
.Ltmp3426:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] undef
.LBB16_306:                             # %if.end309.2.i.us
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	.loc	0 1938 41                       # x264_src/encoder/encoder.c:1938:41
	movzbl	25150(%r14), %ecx
.Ltmp3427:
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] $cl
	.loc	0 1939 39                       # x264_src/encoder/encoder.c:1939:39
	testb	%cl, %cl
.Ltmp3428:
	.loc	0 1939 33 is_stmt 0             # x264_src/encoder/encoder.c:1939:33
	js	.LBB16_261
.Ltmp3429:
# %bb.307:                              #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] $cl
	.loc	0 0 33                          # x264_src/encoder/encoder.c:0:33
	xorl	%edx, %edx
.Ltmp3430:
.LBB16_308:                             # %if.end318.i.sink.split
                                        #   in Loop: Header=BB16_214 Depth=2
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_ref <- [DW_OP_LLVM_convert 8 5, DW_OP_LLVM_convert 32 5, DW_OP_stack_value] $cl
	.loc	0 1940 33 is_stmt 1             # x264_src/encoder/encoder.c:1940:33
	shll	$7, %edx
	addq	32(%rsp), %rdx                  # 8-byte Folded Reload
	movzbl	%cl, %ecx
.Ltmp3431:
	.loc	0 1940 77 is_stmt 0             # x264_src/encoder/encoder.c:1940:77
	incl	(%rdx,%rcx,4)
	jmp	.LBB16_261
.Ltmp3432:
.LBB16_309:                             # %bs_write1.exit.i1024.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_rbsp_trailing:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_count <- undef
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36 is_stmt 1              # x264_src/common/bs.h:117:36
	movl	%eax, %ecx
	andb	$7, %cl
	shlq	%cl, %rsi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rsi, (%r9)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	andl	$-8, %eax
	movl	%eax, (%r11)
.Ltmp3433:
	.loc	4 96 5                          # x264_src/common/bs.h:96:5
	movq	(%rbx), %rdx
.Ltmp3434:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3435:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_311
.Ltmp3436:
# %bb.310:                              # %if.then.i8.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_rbsp_trailing:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	#DEBUG_VALUE: endian_fix:x <- undef
	#DEBUG_VALUE: endian_fix64:x <- undef
	.loc	28 277 32 is_stmt 1             # x264_src/common/osdep.h:277:32
	bswapq	%rsi
	movl	%eax, %ecx
	shrq	%cl, %rsi
.Ltmp3437:
	.loc	4 124 25                        # x264_src/common/bs.h:124:25
	movl	%esi, (%rdx)
	.loc	4 126 23                        # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	movl	%eax, (%r11)
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	movq	(%rbx), %rdx
	addq	$4, %rdx
	movq	%rdx, (%rbx)
.Ltmp3438:
.LBB16_311:                             # %bs_rbsp_trailing.exit.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_flush:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 0 18 is_stmt 0                # x264_src/common/bs.h:0:18
	movq	8(%rsp), %rcx                   # 8-byte Reload
.Ltmp3439:
	.loc	4 96 36 is_stmt 1               # x264_src/common/bs.h:96:36
	movl	(%rcx), %esi
	.loc	4 96 33 is_stmt 0               # x264_src/common/bs.h:96:33
	movl	%eax, %ecx
	shll	%cl, %esi
.Ltmp3440:
	#DEBUG_VALUE: endian_fix32:x <- $esi
	.loc	28 264 58 is_stmt 1             # x264_src/common/osdep.h:264:58
	bswapl	%esi
.Ltmp3441:
	.loc	4 96 17                         # x264_src/common/bs.h:96:17
	movl	%esi, (%rdx)
	.loc	4 97 28                         # x264_src/common/bs.h:97:28
	movl	(%r11), %eax
	.loc	4 97 35 is_stmt 0               # x264_src/common/bs.h:97:35
	leal	7(%rax), %ecx
	testl	%eax, %eax
	cmovnsl	%eax, %ecx
	sarl	$3, %ecx
	negl	%ecx
	.loc	4 97 10                         # x264_src/common/bs.h:97:10
	movq	(%rbx), %rax
	movslq	%ecx, %rcx
	addq	%rcx, %rax
	addq	$8, %rax
	movq	%rax, (%rbx)
	.loc	4 98 15 is_stmt 1               # x264_src/common/bs.h:98:15
	movl	$64, (%r11)
	movl	$64, %ecx
	jmp	.LBB16_320
.Ltmp3442:
.LBB16_314:                             # %if.then169.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1890 21                       # x264_src/encoder/encoder.c:1890:21
	cmpl	$0, 128(%r14)
.Ltmp3443:
	.loc	0 1890 21 is_stmt 0             # x264_src/encoder/encoder.c:1890:21
	je	.LBB16_316
.Ltmp3444:
# %bb.315:                              # %if.then173.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1892 21 is_stmt 1             # x264_src/encoder/encoder.c:1892:21
	movdqa	256(%rsp), %xmm0
	movaps	272(%rsp), %xmm1
	movaps	288(%rsp), %xmm2
	movq	64(%rsp), %rax                  # 8-byte Reload
	movaps	%xmm2, 32(%rax)
	movaps	%xmm1, 16(%rax)
	movdqa	%xmm0, (%rax)
	.loc	0 1893 30                       # x264_src/encoder/encoder.c:1893:30
	movq	13928(%r14), %rax
	movl	80(%rsp), %ecx                  # 4-byte Reload
	.loc	0 1893 36 is_stmt 0             # x264_src/encoder/encoder.c:1893:36
	movb	%cl, -1(%rax)
	jmp	.LBB16_317
.Ltmp3445:
.LBB16_316:                             # %if.else178.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1897 33 is_stmt 1             # x264_src/encoder/encoder.c:1897:33
	movq	240(%rsp), %rax
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movq	%rax, 32(%rcx)
	movdqa	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movups	%xmm1, 16(%rcx)
	movdqu	%xmm0, (%rcx)
.Ltmp3446:
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movl	76(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 28(%rsp)                  # 4-byte Spill
.Ltmp3447:
.LBB16_317:                             # %cleanup578.thread1086.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	xorl	%r13d, %r13d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 1900 37 is_stmt 1             # x264_src/encoder/encoder.c:1900:37
	movl	$1, 17424(%r14)
	.loc	0 1901 40                       # x264_src/encoder/encoder.c:1901:40
	decl	%ebx
	.loc	0 1901 33 is_stmt 0             # x264_src/encoder/encoder.c:1901:33
	movl	%ebx, 7256(%r14)
.Ltmp3448:
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- undef
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- undef
	.p2align	4, 0x90
.LBB16_318:                             # %while.end.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	0 2003 9 is_stmt 1              # x264_src/encoder/encoder.c:2003:9
	cmpl	$0, 128(%r14)
.Ltmp3449:
	.loc	0 2003 9 is_stmt 0              # x264_src/encoder/encoder.c:2003:9
	je	.LBB16_325
.Ltmp3450:
.LBB16_319:                             # %if.then582.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	.loc	0 2005 9 is_stmt 1              # x264_src/encoder/encoder.c:2005:9
	movq	%r14, %rdi
	movq	64(%rsp), %rsi                  # 8-byte Reload
	callq	x264_cabac_encode_flush@PLT
.Ltmp3451:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	16(%rsp), %r11                  # 8-byte Reload
	.loc	0 2006 32 is_stmt 1             # x264_src/encoder/encoder.c:2006:32
	movq	13928(%r14), %rax
	.loc	0 2006 21 is_stmt 0             # x264_src/encoder/encoder.c:2006:21
	movq	%rax, 1800(%r14)
.Ltmp3452:
	.loc	4 90 58 is_stmt 1               # x264_src/common/bs.h:90:58
	movl	1824(%r14), %ecx
	movl	52(%rsp), %r12d                 # 4-byte Reload
	movq	56(%rsp), %rbx                  # 8-byte Reload
.Ltmp3453:
.LBB16_320:                             # %if.end600.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_nal_end:h <- $r14
	.loc	0 1266 31                       # x264_src/encoder/encoder.c:1266:31
	movq	1768(%r14), %rdx
.Ltmp3454:
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 90 23                         # x264_src/common/bs.h:90:23
	subl	1792(%r14), %eax
.Ltmp3455:
	.loc	0 1266 42                       # x264_src/encoder/encoder.c:1266:42
	movslq	1760(%r14), %rsi
.Ltmp3456:
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	shll	$3, %eax
	subl	%ecx, %eax
	leal	64(%rax), %ecx
.Ltmp3457:
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	addl	$71, %eax
	testl	%ecx, %ecx
	cmovnsl	%ecx, %eax
	.loc	0 1266 24                       # x264_src/encoder/encoder.c:1266:24
	leaq	(%rsi,%rsi,2), %rcx
.Ltmp3458:
	#DEBUG_VALUE: x264_nal_end:nal <- undef
	.loc	0 1267 63                       # x264_src/encoder/encoder.c:1267:63
	sarl	$3, %eax
	.loc	0 1267 23 is_stmt 0             # x264_src/encoder/encoder.c:1267:23
	addl	1784(%r14), %eax
	.loc	0 1267 68                       # x264_src/encoder/encoder.c:1267:68
	subl	16(%rdx,%rcx,8), %eax
	.loc	0 1267 20                       # x264_src/encoder/encoder.c:1267:20
	movl	%eax, 8(%rdx,%rcx,8)
	.loc	0 1268 17 is_stmt 1             # x264_src/encoder/encoder.c:1268:17
	movl	1760(%r14), %ecx
.Ltmp3459:
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $r14
	.loc	0 1251 32                       # x264_src/encoder/encoder.c:1251:32
	movl	1764(%r14), %eax
.Ltmp3460:
	.loc	0 1268 17                       # x264_src/encoder/encoder.c:1268:17
	incl	%ecx
	movl	%ecx, 1760(%r14)
.Ltmp3461:
	.loc	0 1251 22                       # x264_src/encoder/encoder.c:1251:22
	cmpl	%eax, %ecx
.Ltmp3462:
	.loc	0 1251 9 is_stmt 0              # x264_src/encoder/encoder.c:1251:9
	jl	.LBB16_323
.Ltmp3463:
# %bb.321:                              # %if.then.i.i1067.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_nal_end:h <- $r14
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $r14
	.loc	0 1253 63 is_stmt 1             # x264_src/encoder/encoder.c:1253:63
	shll	$4, %eax
	leal	(%rax,%rax,2), %edi
	.loc	0 1253 31 is_stmt 0             # x264_src/encoder/encoder.c:1253:31
	callq	x264_malloc@PLT
.Ltmp3464:
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 1254 14 is_stmt 1             # x264_src/encoder/encoder.c:1254:14
	testq	%rax, %rax
.Ltmp3465:
	.loc	0 1254 13 is_stmt 0             # x264_src/encoder/encoder.c:1254:13
	je	.LBB16_331
.Ltmp3466:
# %bb.322:                              # %cleanup.thread.i.i.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_nal_end:h <- $r14
	#DEBUG_VALUE: x264_nal_check_buffer:h <- $r14
	#DEBUG_VALUE: new_out <- $rax
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movq	%rax, %rbx
	.loc	0 1256 33 is_stmt 1             # x264_src/encoder/encoder.c:1256:33
	movq	1768(%r14), %rsi
	.loc	0 1256 67 is_stmt 0             # x264_src/encoder/encoder.c:1256:67
	movslq	1764(%r14), %rax
.Ltmp3467:
	#DEBUG_VALUE: new_out <- $rbx
	.loc	0 1256 57                       # x264_src/encoder/encoder.c:1256:57
	shlq	$3, %rax
	leaq	(%rax,%rax,2), %rdx
	.loc	0 1256 9                        # x264_src/encoder/encoder.c:1256:9
	movq	%rbx, %rdi
	callq	memcpy@PLT
.Ltmp3468:
	.loc	0 1257 27 is_stmt 1             # x264_src/encoder/encoder.c:1257:27
	movq	1768(%r14), %rdi
	.loc	0 1257 9 is_stmt 0              # x264_src/encoder/encoder.c:1257:9
	callq	x264_free@PLT
.Ltmp3469:
	.loc	0 1258 20 is_stmt 1             # x264_src/encoder/encoder.c:1258:20
	movq	%rbx, 1768(%r14)
	.loc	0 1259 33                       # x264_src/encoder/encoder.c:1259:33
	shll	1764(%r14)
	movq	56(%rsp), %rbx                  # 8-byte Reload
.Ltmp3470:
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp3471:
.LBB16_323:                             # %if.end604.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	.loc	0 2019 15 is_stmt 1             # x264_src/encoder/encoder.c:2019:15
	movl	7256(%r14), %eax
	.loc	0 2019 32 is_stmt 0             # x264_src/encoder/encoder.c:2019:32
	movl	1752(%r14), %esi
	.loc	0 2019 55                       # x264_src/encoder/encoder.c:2019:55
	movq	3200(%r14), %rcx
	movl	1084(%rcx), %ecx
	.loc	0 2019 50                       # x264_src/encoder/encoder.c:2019:50
	imull	%esi, %ecx
	.loc	0 2019 71                       # x264_src/encoder/encoder.c:2019:71
	decl	%ecx
	.loc	0 2019 25                       # x264_src/encoder/encoder.c:2019:25
	cmpl	%ecx, %eax
.Ltmp3472:
	.loc	0 2019 9                        # x264_src/encoder/encoder.c:2019:9
	jne	.LBB16_2
.Ltmp3473:
# %bb.324:                              # %if.then613.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: bs_pos:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	.loc	4 90 21 is_stmt 1               # x264_src/common/bs.h:90:21
	movl	1800(%r14), %eax
	.loc	4 90 23 is_stmt 0               # x264_src/common/bs.h:90:23
	subl	1792(%r14), %eax
.Ltmp3474:
	.loc	0 2022 45 is_stmt 1             # x264_src/encoder/encoder.c:2022:45
	movl	1760(%r14), %ecx
.Ltmp3475:
	.loc	4 90 58                         # x264_src/common/bs.h:90:58
	movl	1824(%r14), %edx
	.loc	4 90 11 is_stmt 0               # x264_src/common/bs.h:90:11
	shll	$3, %eax
.Ltmp3476:
	.loc	0 2022 65 is_stmt 1             # x264_src/encoder/encoder.c:2022:65
	leal	(%rcx,%rcx,4), %ecx
.Ltmp3477:
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	addl	26716(%r14), %edx
.Ltmp3478:
	.loc	0 2024 35                       # x264_src/encoder/encoder.c:2024:35
	addl	26712(%r14), %edx
.Ltmp3479:
	.loc	4 90 11                         # x264_src/common/bs.h:90:11
	leal	(%rax,%rcx,8), %eax
.Ltmp3480:
	.loc	0 2024 35                       # x264_src/encoder/encoder.c:2024:35
	subl	%edx, %eax
	addl	$64, %eax
	.loc	0 2021 35                       # x264_src/encoder/encoder.c:2021:35
	movl	%eax, 26720(%r14)
	.loc	0 2025 9                        # x264_src/encoder/encoder.c:2025:9
	movq	%r14, %rdi
	movl	$1, %edx
	callq	x264_fdec_filter_row
.Ltmp3481:
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	16(%rsp), %r11                  # 8-byte Reload
.Ltmp3482:
	.loc	0 2094 34 is_stmt 1             # x264_src/encoder/encoder.c:2094:34
	movl	7256(%r14), %eax
	jmp	.LBB16_2
.Ltmp3483:
.LBB16_325:                             # %if.else589.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	(%r9), %rsi
	.loc	4 161 14                        # x264_src/common/bs.h:161:14
	movl	(%r11), %eax
	movl	28(%rsp), %edi                  # 4-byte Reload
.Ltmp3484:
	.loc	0 2010 20                       # x264_src/encoder/encoder.c:2010:20
	testl	%edi, %edi
	movl	52(%rsp), %r12d                 # 4-byte Reload
	movq	56(%rsp), %rbx                  # 8-byte Reload
.Ltmp3485:
	.loc	0 2010 13 is_stmt 0             # x264_src/encoder/encoder.c:2010:13
	jle	.LBB16_209
.Ltmp3486:
# %bb.326:                              # %if.then592.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:size <- 0
	.loc	4 211 15 is_stmt 1              # x264_src/common/bs.h:211:15
	incl	%edi
.Ltmp3487:
	#DEBUG_VALUE: bs_write_ue_big:val <- $edi
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	.loc	4 0 15 is_stmt 0                # x264_src/common/bs.h:0:15
	movl	%edi, %ecx
	shrl	$16, %ecx
.Ltmp3488:
	.loc	4 212 13 is_stmt 1              # x264_src/common/bs.h:212:13
	xorl	%edx, %edx
	cmpl	$65536, %edi                    # imm = 0x10000
	movl	%edi, %r10d
.Ltmp3489:
	.loc	4 212 9 is_stmt 0               # x264_src/common/bs.h:212:9
	cmovll	%edi, %ecx
.Ltmp3490:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $ecx
	.loc	4 212 13                        # x264_src/common/bs.h:212:13
	setge	%dl
.Ltmp3491:
	.loc	4 212 9                         # x264_src/common/bs.h:212:9
	shll	$5, %edx
.Ltmp3492:
	#DEBUG_VALUE: bs_write_ue_big:size <- $edx
	.loc	4 217 9 is_stmt 1               # x264_src/common/bs.h:217:9
	movl	%ecx, %edi
.Ltmp3493:
	#DEBUG_VALUE: bs_write_ue_big:val <- $r10d
	shrl	$8, %edi
	leal	16(%rdx), %r8d
.Ltmp3494:
	.loc	4 217 13 is_stmt 0              # x264_src/common/bs.h:217:13
	cmpl	$256, %ecx                      # imm = 0x100
.Ltmp3495:
	.loc	4 217 9                         # x264_src/common/bs.h:217:9
	cmovll	%ecx, %edi
.Ltmp3496:
	#DEBUG_VALUE: bs_write_ue_big:tmp <- $edi
	#DEBUG_VALUE: bs_write_ue_big:size <- undef
	.loc	4 222 13 is_stmt 1              # x264_src/common/bs.h:222:13
	movslq	%edi, %rcx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%r8b, %edi
.Ltmp3497:
	cmovll	%edx, %edi
	.loc	4 222 13                        # x264_src/common/bs.h:222:13
	movzbl	x264_ue_size_tab(%rcx), %ecx
	.loc	4 223 22                        # x264_src/common/bs.h:223:22
	movzbl	%dil, %edx
	addl	%ecx, %edx
	shrl	%edx
.Ltmp3498:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movl	%edx, %ecx
	shlq	%cl, %rsi
	.loc	4 117 21 is_stmt 0              # x264_src/common/bs.h:117:21
	movq	%rsi, (%r9)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp3499:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3500:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_328
.Ltmp3501:
# %bb.327:                              # %if.then.i.i1008.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r10d
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- 0
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rsi
.Ltmp3502:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3503:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3504:
	.loc	4 117 27                        # x264_src/common/bs.h:117:27
	movq	(%r9), %rsi
.Ltmp3505:
.LBB16_328:                             # %bs_write.exit.i992.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r10d
	.loc	4 224 27                        # x264_src/common/bs.h:224:27
	incl	%edx
.Ltmp3506:
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r10d
	.loc	4 117 36                        # x264_src/common/bs.h:117:36
	movq	%rsi, %rdi
	movl	%edx, %ecx
	shlq	%cl, %rdi
	.loc	4 117 50 is_stmt 0              # x264_src/common/bs.h:117:50
	movl	%r10d, %esi
	.loc	4 117 48                        # x264_src/common/bs.h:117:48
	orq	%rdi, %rsi
	.loc	4 117 21                        # x264_src/common/bs.h:117:21
	movq	%rsi, (%r9)
	.loc	4 118 19 is_stmt 1              # x264_src/common/bs.h:118:19
	subl	%edx, %eax
	movl	%eax, (%r11)
.Ltmp3507:
	.loc	4 119 23                        # x264_src/common/bs.h:119:23
	cmpl	$32, %eax
.Ltmp3508:
	.loc	4 119 13 is_stmt 0              # x264_src/common/bs.h:119:13
	jg	.LBB16_209
.Ltmp3509:
# %bb.329:                              # %if.then.i25.i1000.i
                                        #   in Loop: Header=BB16_3 Depth=1
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write_ue_big:val <- $r10d
	#DEBUG_VALUE: bs_write:i_count <- $edx
	#DEBUG_VALUE: bs_write:s <- [DW_OP_plus_uconst 120, DW_OP_deref] $rsp
	#DEBUG_VALUE: bs_write:i_bits <- $r10d
	.loc	4 124 51 is_stmt 1              # x264_src/common/bs.h:124:51
	movl	%eax, %ecx
	shlq	%cl, %rsi
.Ltmp3510:
	#DEBUG_VALUE: endian_fix:x <- $rsi
	#DEBUG_VALUE: endian_fix64:x <- $rsi
	.loc	28 277 32                       # x264_src/common/osdep.h:277:32
	bswapq	%rsi
.Ltmp3511:
	.loc	4 124 13                        # x264_src/common/bs.h:124:13
	movq	(%rbx), %rax
	.loc	4 124 25 is_stmt 0              # x264_src/common/bs.h:124:25
	movl	%esi, (%rax)
	.loc	4 126 23 is_stmt 1              # x264_src/common/bs.h:126:23
	movl	(%r11), %eax
	addl	$32, %eax
	.loc	4 127 18                        # x264_src/common/bs.h:127:18
	addq	$4, (%rbx)
.Ltmp3512:
	.loc	4 159 17                        # x264_src/common/bs.h:159:17
	movq	(%r9), %rsi
	jmp	.LBB16_209
.Ltmp3513:
.LBB16_330:                             # %cleanup578.thread.i
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	#DEBUG_VALUE: x264_slice_write:i_skip_bak <- [DW_OP_plus_uconst 76, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:cabac_prevbyte_bak <- [DW_OP_plus_uconst 80, DW_OP_deref_size 4, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- $r15d
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- $r12d
	#DEBUG_VALUE: x264_slice_write:i_skip <- [DW_OP_plus_uconst 28, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_bitstream_check_buffer:h <- $r14
	#DEBUG_VALUE: x264_bitstream_check_buffer:bs_bak <- $rbp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movq	%rbp, %rdi
	callq	x264_free@PLT
.Ltmp3514:
	#DEBUG_VALUE: x264_slice_write:i_skip <- undef
	#DEBUG_VALUE: x264_slice_write:i_mb_x <- undef
	#DEBUG_VALUE: x264_slice_write:i_mb_y <- undef
.LBB16_331:                             # %x264_slice_write.exit
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	#DEBUG_VALUE: x264_slices_write:i_slice_num <- [DW_OP_plus_uconst 72, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slices_write:last_thread_mb <- [DW_OP_plus_uconst 52, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_slice_write:h <- $r14
	movq	$-1, %r13
.Ltmp3515:
.LBB16_332:                             # %cleanup
	#DEBUG_VALUE: x264_slices_write:h <- $r14
	.loc	0 2106 1 is_stmt 1              # x264_src/encoder/encoder.c:2106:1
	movq	%r13, %rax
	.loc	0 2106 1 epilogue_begin is_stmt 0 # x264_src/encoder/encoder.c:2106:1
	addq	$776, %rsp                      # imm = 0x308
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp3516:
	#DEBUG_VALUE: x264_slices_write:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3517:
.Lfunc_end16:
	.size	x264_slices_write, .Lfunc_end16-x264_slices_write
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0                          # -- Begin function x264_encoder_close
.LCPI17_0:
	.quad	0x40efc02000000000              # double 65025
.LCPI17_2:
	.quad	0x3ddb7cdfd9d7bdbb              # double 1.0E-10
.LCPI17_3:
	.quad	0xc024000000000000              # double -10
.LCPI17_10:
	.quad	0x4059000000000000              # double 100
.LCPI17_11:
	.quad	0x4010000000000000              # double 4
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2, 0x0
.LCPI17_1:
	.long	0x42c80000                      # float 100
.LCPI17_12:
	.long	0x42fa0000                      # float 125
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0
.LCPI17_4:
	.quad	2                               # 0x2
	.quad	3                               # 0x3
.LCPI17_5:
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	1                               # 0x1
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
	.byte	0                               # 0x0
.LCPI17_6:
	.long	5                               # 0x5
	.long	5                               # 0x5
	.long	5                               # 0x5
	.long	5                               # 0x5
.LCPI17_7:
	.long	9                               # 0x9
	.long	9                               # 0x9
	.long	9                               # 0x9
	.long	9                               # 0x9
.LCPI17_8:
	.long	13                              # 0xd
	.long	13                              # 0xd
	.long	13                              # 0xd
	.long	13                              # 0xd
.LCPI17_9:
	.quad	16                              # 0x10
	.quad	16                              # 0x10
	.text
	.globl	x264_encoder_close
	.p2align	4, 0x90
	.type	x264_encoder_close,@function
x264_encoder_close:                     # @x264_encoder_close
.Lfunc_begin17:
	.loc	0 2839 0 is_stmt 1              # x264_src/encoder/encoder.c:2839:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_close:h <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 544
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
.Ltmp3518:
	.loc	0 2840 39 prologue_end          # x264_src/encoder/encoder.c:2840:39
	movl	20(%rdi), %eax
	.loc	0 2840 28 is_stmt 0             # x264_src/encoder/encoder.c:2840:28
	imull	24(%rdi), %eax
	.loc	0 2840 47                       # x264_src/encoder/encoder.c:2840:47
	leal	(%rax,%rax,2), %eax
	.loc	0 2840 67                       # x264_src/encoder/encoder.c:2840:67
	movl	%eax, %ebx
	shrl	$31, %ebx
	addl	%eax, %ebx
.Ltmp3519:
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	.loc	0 0 67                          # x264_src/encoder/encoder.c:0:67
	movb	$1, 64(%rsp)                    # 1-byte Folded Spill
	.loc	0 2843 23 is_stmt 1             # x264_src/encoder/encoder.c:2843:23
	cmpq	$0, 28160(%rdi)
	.loc	0 2844 20                       # x264_src/encoder/encoder.c:2844:20
	jne	.LBB17_3
.Ltmp3520:
# %bb.1:                                # %lor.lhs.false
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	.loc	0 2844 23 is_stmt 0             # x264_src/encoder/encoder.c:2844:23
	cmpq	$0, 27856(%r12)
	.loc	0 2845 20 is_stmt 1             # x264_src/encoder/encoder.c:2845:20
	jne	.LBB17_3
.Ltmp3521:
# %bb.2:                                # %lor.rhs
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	cmpq	$0, 28008(%r12)
	setne	64(%rsp)                        # 1-byte Folded Spill
.Ltmp3522:
.LBB17_3:                               # %lor.end
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	sarl	%ebx
.Ltmp3523:
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2847 5 is_stmt 1              # x264_src/encoder/encoder.c:2847:5
	movq	%r12, %rdi
	callq	x264_lookahead_delete@PLT
.Ltmp3524:
	.loc	0 2849 28                       # x264_src/encoder/encoder.c:2849:28
	cmpl	$2, 4(%r12)
.Ltmp3525:
	.loc	0 2849 9 is_stmt 0              # x264_src/encoder/encoder.c:2849:9
	jl	.LBB17_10
.Ltmp3526:
# %bb.4:                                # %for.cond.preheader
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2856 16 is_stmt 1             # x264_src/encoder/encoder.c:2856:16
	movl	1852(%r12), %eax
	.loc	0 2856 32 is_stmt 0             # x264_src/encoder/encoder.c:2856:32
	cmpl	$2, %eax
.Ltmp3527:
	.loc	0 2856 13                       # x264_src/encoder/encoder.c:2856:13
	jl	.LBB17_10
.Ltmp3528:
# %bb.5:                                # %for.body32.lr.ph
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	xorl	%r14d, %r14d
	jmp	.LBB17_6
.Ltmp3529:
	.p2align	4, 0x90
.LBB17_8:                               # %for.inc43
                                        #   in Loop: Header=BB17_6 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 2858 54 is_stmt 1             # x264_src/encoder/encoder.c:2858:54
	incq	%r14
.Ltmp3530:
	#DEBUG_VALUE: i <- $r14
	.loc	0 2858 31 is_stmt 0             # x264_src/encoder/encoder.c:2858:31
	movslq	%eax, %rcx
	cmpq	%rcx, %r14
.Ltmp3531:
	.loc	0 2858 13                       # x264_src/encoder/encoder.c:2858:13
	jge	.LBB17_9
.Ltmp3532:
.LBB17_6:                               # %for.body32
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 2859 21 is_stmt 1             # x264_src/encoder/encoder.c:2859:21
	movq	704(%r12,%r14,8), %rcx
	cmpl	$0, 1740(%rcx)
.Ltmp3533:
	.loc	0 2859 21 is_stmt 0             # x264_src/encoder/encoder.c:2859:21
	je	.LBB17_8
.Ltmp3534:
# %bb.7:                                # %if.then38
                                        #   in Loop: Header=BB17_6 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- $r14
	.loc	0 2862 54 is_stmt 1             # x264_src/encoder/encoder.c:2862:54
	movq	14680(%rcx), %rdi
	.loc	0 2862 21 is_stmt 0             # x264_src/encoder/encoder.c:2862:21
	callq	x264_frame_delete@PLT
.Ltmp3535:
	.loc	0 2858 36 is_stmt 1             # x264_src/encoder/encoder.c:2858:36
	movl	1852(%r12), %eax
	jmp	.LBB17_8
.Ltmp3536:
.LBB17_9:                               # %for.cond.cleanup31
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2865 48                       # x264_src/encoder/encoder.c:2865:48
	movslq	1744(%r12), %rax
	.loc	0 2865 35 is_stmt 0             # x264_src/encoder/encoder.c:2865:35
	movq	704(%r12,%rax,8), %r14
.Ltmp3537:
	#DEBUG_VALUE: thread_prev <- $r14
	.loc	0 2866 13 is_stmt 1             # x264_src/encoder/encoder.c:2866:13
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	x264_thread_sync_ratecontrol@PLT
.Ltmp3538:
	.loc	0 2867 13                       # x264_src/encoder/encoder.c:2867:13
	movq	%r14, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	x264_thread_sync_ratecontrol@PLT
.Ltmp3539:
	.loc	0 2868 39                       # x264_src/encoder/encoder.c:2868:39
	movl	1844(%r14), %eax
	.loc	0 2868 51 is_stmt 0             # x264_src/encoder/encoder.c:2868:51
	subl	1852(%r12), %eax
	incl	%eax
	.loc	0 2868 24                       # x264_src/encoder/encoder.c:2868:24
	movl	%eax, 1844(%r12)
.Ltmp3540:
.LBB17_10:                              # %if.end52
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2871 15 is_stmt 1             # x264_src/encoder/encoder.c:2871:15
	incl	1844(%r12)
.Ltmp3541:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movslq	%ebx, %r15
.Ltmp3542:
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	.loc	0 2880 13 is_stmt 1             # x264_src/encoder/encoder.c:2880:13
	movslq	27424(%r12), %r14
	testq	%r14, %r14
.Ltmp3543:
	.loc	0 2880 13 is_stmt 0             # x264_src/encoder/encoder.c:2880:13
	jle	.LBB17_17
.Ltmp3544:
# %bb.11:                               # %if.then69
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	.loc	0 2883 17 is_stmt 1             # x264_src/encoder/encoder.c:2883:17
	cmpl	$0, 476(%r12)
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movsd	27496(%r12), %xmm7              # xmm7 = mem[0],zero
	cvtsi2sd	%r14d, %xmm0
	divsd	%xmm0, %xmm7
	cvtsi2sdq	27456(%r12), %xmm1
	divsd	%xmm0, %xmm1
.Ltmp3545:
	#DEBUG_VALUE: i_count <- undef
	.loc	0 2883 17                       # x264_src/encoder/encoder.c:2883:17
	je	.LBB17_16
.Ltmp3546:
# %bb.12:                               # %if.then76
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	.loc	0 2892 27 is_stmt 1             # x264_src/encoder/encoder.c:2892:27
	movsd	27648(%r12), %xmm5              # xmm5 = mem[0],zero
	.loc	0 2891 27                       # x264_src/encoder/encoder.c:2891:27
	movsd	27688(%r12), %xmm2              # xmm2 = mem[0],zero
	.loc	0 2891 58 is_stmt 0             # x264_src/encoder/encoder.c:2891:58
	divsd	%xmm0, %xmm2
	.loc	0 2891 69                       # x264_src/encoder/encoder.c:2891:69
	movsd	27728(%r12), %xmm3              # xmm3 = mem[0],zero
	.loc	0 2891 100                      # x264_src/encoder/encoder.c:2891:100
	divsd	%xmm0, %xmm3
	.loc	0 2891 111                      # x264_src/encoder/encoder.c:2891:111
	movsd	27768(%r12), %xmm4              # xmm4 = mem[0],zero
	.loc	0 2891 142                      # x264_src/encoder/encoder.c:2891:142
	divsd	%xmm0, %xmm4
	.loc	0 2892 59 is_stmt 1             # x264_src/encoder/encoder.c:2892:59
	divsd	%xmm0, %xmm5
	.loc	0 2893 77                       # x264_src/encoder/encoder.c:2893:77
	movq	%r14, %rax
	imulq	%r15, %rax
.Ltmp3547:
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:i_sqe <- undef
	.loc	0 58 20                         # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27608(%r12), %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	cvtsi2sd	%rax, %xmm6
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm6
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm6, %xmm0
.Ltmp3548:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm6          # xmm6 = [1.0E-10,0.0E+0]
.Ltmp3549:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm6
.Ltmp3550:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_13
.Ltmp3551:
# %bb.14:                               # %if.end.i
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm7, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm5, 24(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 48(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
	movsd	%xmm4, 40(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3552:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	40(%rsp), %xmm4                 # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	16(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	48(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	24(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	32(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm7                  # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
	jmp	.LBB17_15
.Ltmp3553:
.LBB17_16:                              # %if.else
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	.loc	0 2897 17 is_stmt 1             # x264_src/encoder/encoder.c:2897:17
	movl	$.L.str.30, %edx
	movl	$.L.str.26, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3554:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_17
.Ltmp3555:
.LBB17_13:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	movss	.LCPI17_1(%rip), %xmm0          # xmm0 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
.Ltmp3556:
.LBB17_15:                              # %x264_psnr.exit
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	.loc	0 2893 27 is_stmt 1             # x264_src/encoder/encoder.c:2893:27
	xorps	%xmm6, %xmm6
	cvtss2sd	%xmm0, %xmm6
	.loc	0 2885 17                       # x264_src/encoder/encoder.c:2885:17
	movl	$.L.str.29, %edx
	movl	$.L.str.26, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$7, %al
	callq	x264_log@PLT
.Ltmp3557:
.LBB17_17:                              # %if.end132
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 2
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	.loc	0 2880 13                       # x264_src/encoder/encoder.c:2880:13
	movslq	27432(%r12), %r14
	testq	%r14, %r14
.Ltmp3558:
	.loc	0 2880 13 is_stmt 0             # x264_src/encoder/encoder.c:2880:13
	jle	.LBB17_24
.Ltmp3559:
# %bb.18:                               # %if.then69.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	.loc	0 2883 17 is_stmt 1             # x264_src/encoder/encoder.c:2883:17
	cmpl	$0, 476(%r12)
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movsd	27512(%r12), %xmm7              # xmm7 = mem[0],zero
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r14d, %xmm0
	divsd	%xmm0, %xmm7
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27472(%r12), %xmm1
	divsd	%xmm0, %xmm1
.Ltmp3560:
	#DEBUG_VALUE: i_count <- undef
	.loc	0 2883 17                       # x264_src/encoder/encoder.c:2883:17
	je	.LBB17_23
.Ltmp3561:
# %bb.19:                               # %if.then76.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	.loc	0 2892 27 is_stmt 1             # x264_src/encoder/encoder.c:2892:27
	movsd	27664(%r12), %xmm5              # xmm5 = mem[0],zero
	.loc	0 2891 27                       # x264_src/encoder/encoder.c:2891:27
	movsd	27704(%r12), %xmm2              # xmm2 = mem[0],zero
	.loc	0 2891 58 is_stmt 0             # x264_src/encoder/encoder.c:2891:58
	divsd	%xmm0, %xmm2
	.loc	0 2891 69                       # x264_src/encoder/encoder.c:2891:69
	movsd	27744(%r12), %xmm3              # xmm3 = mem[0],zero
	.loc	0 2891 100                      # x264_src/encoder/encoder.c:2891:100
	divsd	%xmm0, %xmm3
	.loc	0 2891 111                      # x264_src/encoder/encoder.c:2891:111
	movsd	27784(%r12), %xmm4              # xmm4 = mem[0],zero
	.loc	0 2891 142                      # x264_src/encoder/encoder.c:2891:142
	divsd	%xmm0, %xmm4
	.loc	0 2892 59 is_stmt 1             # x264_src/encoder/encoder.c:2892:59
	divsd	%xmm0, %xmm5
	.loc	0 2893 77                       # x264_src/encoder/encoder.c:2893:77
	movq	%r14, %rax
	imulq	%r15, %rax
.Ltmp3562:
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:i_sqe <- undef
	.loc	0 58 20                         # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27624(%r12), %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rax, %xmm6
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm6
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm6, %xmm0
.Ltmp3563:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm6          # xmm6 = [1.0E-10,0.0E+0]
.Ltmp3564:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm6
.Ltmp3565:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_20
.Ltmp3566:
# %bb.21:                               # %if.end.i.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm7, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm5, 24(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 48(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
	movsd	%xmm4, 40(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3567:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	40(%rsp), %xmm4                 # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	16(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	48(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	24(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	32(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm7                  # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
	jmp	.LBB17_22
.Ltmp3568:
.LBB17_23:                              # %if.else.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	.loc	0 2897 17 is_stmt 1             # x264_src/encoder/encoder.c:2897:17
	movl	$.L.str.30, %edx
	movl	$.L.str.28, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3569:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_24
.Ltmp3570:
.LBB17_20:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	movss	.LCPI17_1(%rip), %xmm0          # xmm0 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
.Ltmp3571:
.LBB17_22:                              # %x264_psnr.exit.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	.loc	0 2893 27 is_stmt 1             # x264_src/encoder/encoder.c:2893:27
	xorps	%xmm6, %xmm6
	cvtss2sd	%xmm0, %xmm6
	.loc	0 2885 17                       # x264_src/encoder/encoder.c:2885:17
	movl	$.L.str.29, %edx
	movl	$.L.str.28, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$7, %al
	callq	x264_log@PLT
.Ltmp3572:
.LBB17_24:                              # %if.end132.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 4
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	.loc	0 2880 13                       # x264_src/encoder/encoder.c:2880:13
	movslq	27416(%r12), %r14
	testq	%r14, %r14
.Ltmp3573:
	.loc	0 2880 13 is_stmt 0             # x264_src/encoder/encoder.c:2880:13
	jle	.LBB17_31
.Ltmp3574:
# %bb.25:                               # %if.then69.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	.loc	0 2883 17 is_stmt 1             # x264_src/encoder/encoder.c:2883:17
	cmpl	$0, 476(%r12)
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movsd	27480(%r12), %xmm7              # xmm7 = mem[0],zero
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r14d, %xmm0
	divsd	%xmm0, %xmm7
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27440(%r12), %xmm1
	divsd	%xmm0, %xmm1
.Ltmp3575:
	#DEBUG_VALUE: i_count <- undef
	.loc	0 2883 17                       # x264_src/encoder/encoder.c:2883:17
	je	.LBB17_30
.Ltmp3576:
# %bb.26:                               # %if.then76.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	.loc	0 2892 27 is_stmt 1             # x264_src/encoder/encoder.c:2892:27
	movsd	27632(%r12), %xmm5              # xmm5 = mem[0],zero
	.loc	0 2891 27                       # x264_src/encoder/encoder.c:2891:27
	movsd	27672(%r12), %xmm2              # xmm2 = mem[0],zero
	.loc	0 2891 58 is_stmt 0             # x264_src/encoder/encoder.c:2891:58
	divsd	%xmm0, %xmm2
	.loc	0 2891 69                       # x264_src/encoder/encoder.c:2891:69
	movsd	27712(%r12), %xmm3              # xmm3 = mem[0],zero
	.loc	0 2891 100                      # x264_src/encoder/encoder.c:2891:100
	divsd	%xmm0, %xmm3
	.loc	0 2891 111                      # x264_src/encoder/encoder.c:2891:111
	movsd	27752(%r12), %xmm4              # xmm4 = mem[0],zero
	.loc	0 2891 142                      # x264_src/encoder/encoder.c:2891:142
	divsd	%xmm0, %xmm4
	.loc	0 2892 59 is_stmt 1             # x264_src/encoder/encoder.c:2892:59
	divsd	%xmm0, %xmm5
	.loc	0 2893 77                       # x264_src/encoder/encoder.c:2893:77
	movq	%r14, %rax
	imulq	%r15, %rax
.Ltmp3577:
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:i_sqe <- undef
	.loc	0 58 20                         # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27592(%r12), %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rax, %xmm6
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm6
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm6, %xmm0
.Ltmp3578:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm6          # xmm6 = [1.0E-10,0.0E+0]
.Ltmp3579:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm6
.Ltmp3580:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_27
.Ltmp3581:
# %bb.28:                               # %if.end.i.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm7, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm5, 24(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 48(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
	movsd	%xmm4, 40(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3582:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	40(%rsp), %xmm4                 # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	16(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	48(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	24(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	32(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm7                  # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
	jmp	.LBB17_29
.Ltmp3583:
.LBB17_30:                              # %if.else.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	.loc	0 2897 17 is_stmt 1             # x264_src/encoder/encoder.c:2897:17
	movl	$.L.str.30, %edx
	movl	$.L.str.24, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3584:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_31
.Ltmp3585:
.LBB17_27:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	movss	.LCPI17_1(%rip), %xmm0          # xmm0 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
.Ltmp3586:
.LBB17_29:                              # %x264_psnr.exit.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	.loc	0 2893 27 is_stmt 1             # x264_src/encoder/encoder.c:2893:27
	xorps	%xmm6, %xmm6
	cvtss2sd	%xmm0, %xmm6
	.loc	0 2885 17                       # x264_src/encoder/encoder.c:2885:17
	movl	$.L.str.29, %edx
	movl	$.L.str.24, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$7, %al
	callq	x264_log@PLT
.Ltmp3587:
.LBB17_31:                              # %if.end132.2
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	.loc	0 2880 13                       # x264_src/encoder/encoder.c:2880:13
	movslq	27428(%r12), %r14
	testq	%r14, %r14
.Ltmp3588:
	.loc	0 2880 13 is_stmt 0             # x264_src/encoder/encoder.c:2880:13
	jle	.LBB17_38
.Ltmp3589:
# %bb.32:                               # %if.then69.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	.loc	0 2883 17 is_stmt 1             # x264_src/encoder/encoder.c:2883:17
	cmpl	$0, 476(%r12)
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movsd	27504(%r12), %xmm7              # xmm7 = mem[0],zero
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r14d, %xmm0
	divsd	%xmm0, %xmm7
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27464(%r12), %xmm1
	divsd	%xmm0, %xmm1
.Ltmp3590:
	#DEBUG_VALUE: i_count <- undef
	.loc	0 2883 17                       # x264_src/encoder/encoder.c:2883:17
	je	.LBB17_37
.Ltmp3591:
# %bb.33:                               # %if.then76.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	.loc	0 2892 27 is_stmt 1             # x264_src/encoder/encoder.c:2892:27
	movsd	27656(%r12), %xmm5              # xmm5 = mem[0],zero
	.loc	0 2891 27                       # x264_src/encoder/encoder.c:2891:27
	movsd	27696(%r12), %xmm2              # xmm2 = mem[0],zero
	.loc	0 2891 58 is_stmt 0             # x264_src/encoder/encoder.c:2891:58
	divsd	%xmm0, %xmm2
	.loc	0 2891 69                       # x264_src/encoder/encoder.c:2891:69
	movsd	27736(%r12), %xmm3              # xmm3 = mem[0],zero
	.loc	0 2891 100                      # x264_src/encoder/encoder.c:2891:100
	divsd	%xmm0, %xmm3
	.loc	0 2891 111                      # x264_src/encoder/encoder.c:2891:111
	movsd	27776(%r12), %xmm4              # xmm4 = mem[0],zero
	.loc	0 2891 142                      # x264_src/encoder/encoder.c:2891:142
	divsd	%xmm0, %xmm4
	.loc	0 2892 59 is_stmt 1             # x264_src/encoder/encoder.c:2892:59
	divsd	%xmm0, %xmm5
	.loc	0 2893 77                       # x264_src/encoder/encoder.c:2893:77
	movq	%r14, %rax
	imulq	%r15, %rax
.Ltmp3592:
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:i_sqe <- undef
	.loc	0 58 20                         # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27616(%r12), %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rax, %xmm6
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm6
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm6, %xmm0
.Ltmp3593:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm6          # xmm6 = [1.0E-10,0.0E+0]
.Ltmp3594:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm6
.Ltmp3595:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_34
.Ltmp3596:
# %bb.35:                               # %if.end.i.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm7, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm5, 24(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 48(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
	movsd	%xmm4, 40(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3597:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	40(%rsp), %xmm4                 # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	16(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	48(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	24(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	32(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm7                  # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
	jmp	.LBB17_36
.Ltmp3598:
.LBB17_37:                              # %if.else.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	.loc	0 2897 17 is_stmt 1             # x264_src/encoder/encoder.c:2897:17
	movl	$.L.str.30, %edx
	movl	$.L.str.27, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3599:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_38
.Ltmp3600:
.LBB17_34:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	movss	.LCPI17_1(%rip), %xmm0          # xmm0 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
.Ltmp3601:
.LBB17_36:                              # %x264_psnr.exit.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	.loc	0 2893 27 is_stmt 1             # x264_src/encoder/encoder.c:2893:27
	xorps	%xmm6, %xmm6
	cvtss2sd	%xmm0, %xmm6
	.loc	0 2885 17                       # x264_src/encoder/encoder.c:2885:17
	movl	$.L.str.29, %edx
	movl	$.L.str.27, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$7, %al
	callq	x264_log@PLT
.Ltmp3602:
.LBB17_38:                              # %if.end132.3
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 3
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	.loc	0 2880 13                       # x264_src/encoder/encoder.c:2880:13
	movslq	27420(%r12), %r14
	testq	%r14, %r14
.Ltmp3603:
	.loc	0 2880 13 is_stmt 0             # x264_src/encoder/encoder.c:2880:13
	jle	.LBB17_45
.Ltmp3604:
# %bb.39:                               # %if.then69.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	.loc	0 2883 17 is_stmt 1             # x264_src/encoder/encoder.c:2883:17
	cmpl	$0, 476(%r12)
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movsd	27488(%r12), %xmm7              # xmm7 = mem[0],zero
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r14d, %xmm0
	divsd	%xmm0, %xmm7
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27448(%r12), %xmm1
	divsd	%xmm0, %xmm1
.Ltmp3605:
	#DEBUG_VALUE: i_count <- undef
	.loc	0 2883 17                       # x264_src/encoder/encoder.c:2883:17
	je	.LBB17_44
.Ltmp3606:
# %bb.40:                               # %if.then76.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	.loc	0 2892 27 is_stmt 1             # x264_src/encoder/encoder.c:2892:27
	movsd	27640(%r12), %xmm5              # xmm5 = mem[0],zero
	.loc	0 2891 27                       # x264_src/encoder/encoder.c:2891:27
	movsd	27680(%r12), %xmm2              # xmm2 = mem[0],zero
	.loc	0 2891 58 is_stmt 0             # x264_src/encoder/encoder.c:2891:58
	divsd	%xmm0, %xmm2
	.loc	0 2891 69                       # x264_src/encoder/encoder.c:2891:69
	movsd	27720(%r12), %xmm3              # xmm3 = mem[0],zero
	.loc	0 2891 100                      # x264_src/encoder/encoder.c:2891:100
	divsd	%xmm0, %xmm3
	.loc	0 2891 111                      # x264_src/encoder/encoder.c:2891:111
	movsd	27760(%r12), %xmm4              # xmm4 = mem[0],zero
	.loc	0 2891 142                      # x264_src/encoder/encoder.c:2891:142
	divsd	%xmm0, %xmm4
	.loc	0 2892 59 is_stmt 1             # x264_src/encoder/encoder.c:2892:59
	divsd	%xmm0, %xmm5
	.loc	0 2893 77                       # x264_src/encoder/encoder.c:2893:77
	movq	%r14, %rax
	imulq	%r15, %rax
.Ltmp3607:
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:i_sqe <- undef
	.loc	0 58 20                         # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27600(%r12), %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rax, %xmm6
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm6
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm6, %xmm0
.Ltmp3608:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm6          # xmm6 = [1.0E-10,0.0E+0]
.Ltmp3609:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm6
.Ltmp3610:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_41
.Ltmp3611:
# %bb.42:                               # %if.end.i.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm7, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm5, 24(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 48(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
	movsd	%xmm4, 40(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3612:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	40(%rsp), %xmm4                 # 8-byte Reload
                                        # xmm4 = mem[0],zero
	movsd	16(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	48(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	24(%rsp), %xmm5                 # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	32(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm7                  # 8-byte Reload
                                        # xmm7 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
	jmp	.LBB17_43
.Ltmp3613:
.LBB17_44:                              # %if.else.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	.loc	0 2897 17 is_stmt 1             # x264_src/encoder/encoder.c:2897:17
	movl	$.L.str.30, %edx
	movl	$.L.str.25, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3614:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_45
.Ltmp3615:
.LBB17_41:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: x264_psnr:i_size <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	movss	.LCPI17_1(%rip), %xmm0          # xmm0 = [1.0E+2,0.0E+0,0.0E+0,0.0E+0]
.Ltmp3616:
.LBB17_43:                              # %x264_psnr.exit.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i_slice <- [DW_OP_stack_value] 1
	.loc	0 2893 27 is_stmt 1             # x264_src/encoder/encoder.c:2893:27
	xorps	%xmm6, %xmm6
	cvtss2sd	%xmm0, %xmm6
	.loc	0 2885 17                       # x264_src/encoder/encoder.c:2885:17
	movl	$.L.str.29, %edx
	movl	$.L.str.25, %ecx
	movq	%r12, %rdi
	movl	$2, %esi
	movl	%r14d, %r8d
	movapd	%xmm7, %xmm0
	movb	$7, %al
	callq	x264_log@PLT
.Ltmp3617:
.LBB17_45:                              # %if.end132.4
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 4
	#DEBUG_VALUE: i <- 5
	.loc	0 2906 18                       # x264_src/encoder/encoder.c:2906:18
	movl	100(%r12), %eax
	testq	%rax, %rax
	.loc	0 2906 27 is_stmt 0             # x264_src/encoder/encoder.c:2906:27
	je	.LBB17_58
.Ltmp3618:
# %bb.46:                               # %land.lhs.true
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2906 30                       # x264_src/encoder/encoder.c:2906:30
	cmpl	$0, 27416(%r12)
.Ltmp3619:
	.loc	0 2906 9                        # x264_src/encoder/encoder.c:2906:9
	je	.LBB17_58
.Ltmp3620:
# %bb.47:                               # %for.cond144.preheader
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2911 27 is_stmt 1             # x264_src/encoder/encoder.c:2911:27
	testl	%eax, %eax
.Ltmp3621:
	.loc	0 2911 9 is_stmt 0              # x264_src/encoder/encoder.c:2911:9
	js	.LBB17_57
.Ltmp3622:
# %bb.48:                               # %for.body150.lr.ph
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	leaq	1(%rax), %rcx
	cmpl	$14, %eax
	ja	.LBB17_51
.Ltmp3623:
# %bb.49:
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%edx, %edx
	xorl	%esi, %esi
	jmp	.LBB17_50
.Ltmp3624:
.LBB17_51:                              # %vector.ph
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2911 9                        # x264_src/encoder/encoder.c:2911:9
	movl	%ecx, %edx
	andl	$-16, %edx
	leaq	(,%rcx,4), %rsi
	andq	$-64, %rsi
	movaps	.LCPI17_4(%rip), %xmm1          # xmm1 = [2,3]
	movaps	.LCPI17_5(%rip), %xmm2          # xmm2 = [0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]
	xorpd	%xmm0, %xmm0
	xorl	%edi, %edi
	pcmpeqd	%xmm3, %xmm3
	movdqa	.LCPI17_6(%rip), %xmm4          # xmm4 = [5,5,5,5]
	movdqa	.LCPI17_7(%rip), %xmm6          # xmm6 = [9,9,9,9]
	movdqa	.LCPI17_8(%rip), %xmm7          # xmm7 = [13,13,13,13]
	movdqa	.LCPI17_9(%rip), %xmm9          # xmm9 = [16,16]
	pxor	%xmm10, %xmm10
	pxor	%xmm8, %xmm8
	xorpd	%xmm5, %xmm5
.Ltmp3625:
	.p2align	4, 0x90
.LBB17_52:                              # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2912 28 is_stmt 1             # x264_src/encoder/encoder.c:2912:28
	movdqu	27520(%r12,%rdi), %xmm12
	.loc	0 2912 26 is_stmt 0             # x264_src/encoder/encoder.c:2912:26
	movaps	%xmm2, %xmm11
	shufps	$136, %xmm1, %xmm11             # xmm11 = xmm11[0,2],xmm1[0,2]
	movaps	%xmm11, %xmm13
	psubd	%xmm3, %xmm13
	pshufd	$245, %xmm12, %xmm14            # xmm14 = xmm12[1,1,3,3]
	pmuludq	%xmm13, %xmm12
	pshufd	$245, %xmm13, %xmm13            # xmm13 = xmm13[1,1,3,3]
	pmuludq	%xmm14, %xmm13
	.loc	0 2912 28                       # x264_src/encoder/encoder.c:2912:28
	movdqu	27536(%r12,%rdi), %xmm14
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	pshufd	$232, %xmm12, %xmm12            # xmm12 = xmm12[0,2,2,3]
	pshufd	$232, %xmm13, %xmm13            # xmm13 = xmm13[0,2,2,3]
	punpckldq	%xmm13, %xmm12          # xmm12 = xmm12[0],xmm13[0],xmm12[1],xmm13[1]
	movaps	%xmm11, %xmm13
	paddd	%xmm4, %xmm13
	.loc	0 2912 17                       # x264_src/encoder/encoder.c:2912:17
	paddd	%xmm12, %xmm0
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	pshufd	$245, %xmm14, %xmm12            # xmm12 = xmm14[1,1,3,3]
	pmuludq	%xmm13, %xmm14
	pshufd	$245, %xmm13, %xmm13            # xmm13 = xmm13[1,1,3,3]
	pmuludq	%xmm12, %xmm13
	.loc	0 2912 28                       # x264_src/encoder/encoder.c:2912:28
	movdqu	27552(%r12,%rdi), %xmm12
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	pshufd	$232, %xmm14, %xmm14            # xmm14 = xmm14[0,2,2,3]
	pshufd	$232, %xmm13, %xmm13            # xmm13 = xmm13[0,2,2,3]
	punpckldq	%xmm13, %xmm14          # xmm14 = xmm14[0],xmm13[0],xmm14[1],xmm13[1]
	movaps	%xmm11, %xmm13
	paddd	%xmm6, %xmm13
	.loc	0 2912 17                       # x264_src/encoder/encoder.c:2912:17
	paddd	%xmm14, %xmm10
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	pshufd	$245, %xmm12, %xmm14            # xmm14 = xmm12[1,1,3,3]
	pmuludq	%xmm13, %xmm12
	pshufd	$245, %xmm13, %xmm13            # xmm13 = xmm13[1,1,3,3]
	pmuludq	%xmm14, %xmm13
	pshufd	$232, %xmm12, %xmm12            # xmm12 = xmm12[0,2,2,3]
	pshufd	$232, %xmm13, %xmm13            # xmm13 = xmm13[0,2,2,3]
	punpckldq	%xmm13, %xmm12          # xmm12 = xmm12[0],xmm13[0],xmm12[1],xmm13[1]
	.loc	0 2912 28                       # x264_src/encoder/encoder.c:2912:28
	movdqu	27568(%r12,%rdi), %xmm13
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	paddd	%xmm7, %xmm11
	.loc	0 2912 17                       # x264_src/encoder/encoder.c:2912:17
	paddd	%xmm12, %xmm8
	.loc	0 2912 26                       # x264_src/encoder/encoder.c:2912:26
	pshufd	$245, %xmm13, %xmm12            # xmm12 = xmm13[1,1,3,3]
	pmuludq	%xmm11, %xmm13
	pshufd	$245, %xmm11, %xmm11            # xmm11 = xmm11[1,1,3,3]
	pmuludq	%xmm12, %xmm11
	pshufd	$232, %xmm13, %xmm12            # xmm12 = xmm13[0,2,2,3]
	pshufd	$232, %xmm11, %xmm11            # xmm11 = xmm11[0,2,2,3]
	punpckldq	%xmm11, %xmm12          # xmm12 = xmm12[0],xmm11[0],xmm12[1],xmm11[1]
	.loc	0 2912 17                       # x264_src/encoder/encoder.c:2912:17
	paddd	%xmm12, %xmm5
	paddq	%xmm9, %xmm2
	paddq	%xmm9, %xmm1
	.loc	0 2912 22                       # x264_src/encoder/encoder.c:2912:22
	addq	$64, %rdi
	cmpq	%rdi, %rsi
	jne	.LBB17_52
.Ltmp3626:
# %bb.53:                               # %middle.block
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 2911 9 is_stmt 1              # x264_src/encoder/encoder.c:2911:9
	paddd	%xmm0, %xmm10
	paddd	%xmm10, %xmm8
	paddd	%xmm8, %xmm5
	pshufd	$238, %xmm5, %xmm0              # xmm0 = xmm5[2,3,2,3]
	paddd	%xmm5, %xmm0
	pshufd	$85, %xmm0, %xmm1               # xmm1 = xmm0[1,1,1,1]
	paddd	%xmm0, %xmm1
	movd	%xmm1, %esi
	cmpq	%rcx, %rdx
	je	.LBB17_54
.Ltmp3627:
	.p2align	4, 0x90
.LBB17_50:                              # %for.body150
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: den <- $esi
	#DEBUG_VALUE: i <- $rdx
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	27520(%r12,%rdx,4), %edi
.Ltmp3628:
	.loc	0 2912 22 is_stmt 1             # x264_src/encoder/encoder.c:2912:22
	leaq	1(%rdx), %r8
	.loc	0 2912 26 is_stmt 0             # x264_src/encoder/encoder.c:2912:26
	imull	%r8d, %edi
	.loc	0 2912 17                       # x264_src/encoder/encoder.c:2912:17
	addl	%edi, %esi
.Ltmp3629:
	#DEBUG_VALUE: den <- $esi
	#DEBUG_VALUE: i <- $r8
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movq	%r8, %rdx
	.loc	0 2911 27 is_stmt 1             # x264_src/encoder/encoder.c:2911:27
	cmpq	%r8, %rcx
.Ltmp3630:
	.loc	0 2911 9 is_stmt 0              # x264_src/encoder/encoder.c:2911:9
	jne	.LBB17_50
.Ltmp3631:
.LBB17_54:                              # %for.cond161.preheader
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2911 27                       # x264_src/encoder/encoder.c:2911:27
	testl	%eax, %eax
.Ltmp3632:
	#DEBUG_VALUE: p <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 2913 9 is_stmt 1              # x264_src/encoder/encoder.c:2913:9
	js	.LBB17_57
.Ltmp3633:
# %bb.55:                               # %for.body167.lr.ph
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: p <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	xorps	%xmm0, %xmm0
	cvtsi2sd	%esi, %xmm0
	movsd	%xmm0, 8(%rsp)                  # 8-byte Spill
	leaq	288(%rsp), %r14
	movq	$-1, %rbx
.Ltmp3634:
	.p2align	4, 0x90
.LBB17_56:                              # %for.body167
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: p <- $r14
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rbx
	.loc	0 2914 49 is_stmt 1             # x264_src/encoder/encoder.c:2914:49
	leal	2(%rbx), %eax
	xorps	%xmm1, %xmm1
	cvtsi2sd	%eax, %xmm1
	.loc	0 2914 47 is_stmt 0             # x264_src/encoder/encoder.c:2914:47
	mulsd	.LCPI17_10(%rip), %xmm1
	.loc	0 2914 57                       # x264_src/encoder/encoder.c:2914:57
	xorps	%xmm0, %xmm0
	cvtsi2sdl	27524(%r12,%rbx,4), %xmm0
	.loc	0 2914 55                       # x264_src/encoder/encoder.c:2914:55
	mulsd	%xmm1, %xmm0
	.loc	0 2914 90                       # x264_src/encoder/encoder.c:2914:90
	divsd	8(%rsp), %xmm0                  # 8-byte Folded Reload
	.loc	0 2914 18                       # x264_src/encoder/encoder.c:2914:18
	movl	$.L.str.31, %esi
	movq	%r14, %rdi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3635:
	.loc	0 2914 15                       # x264_src/encoder/encoder.c:2914:15
	cltq
	addq	%rax, %r14
.Ltmp3636:
	#DEBUG_VALUE: p <- $r14
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rbx
	.loc	0 2913 39 is_stmt 1             # x264_src/encoder/encoder.c:2913:39
	movslq	100(%r12), %rax
	.loc	0 2913 27 is_stmt 0             # x264_src/encoder/encoder.c:2913:27
	incq	%rbx
.Ltmp3637:
	cmpq	%rax, %rbx
.Ltmp3638:
	.loc	0 2913 9                        # x264_src/encoder/encoder.c:2913:9
	jl	.LBB17_56
.Ltmp3639:
.LBB17_57:                              # %for.cond.cleanup166
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	leaq	288(%rsp), %rcx
	.loc	0 2915 9 is_stmt 1              # x264_src/encoder/encoder.c:2915:9
	movl	$.L.str.32, %edx
	movq	%r12, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp3640:
.LBB17_58:                              # %for.inc212.16.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_type <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movq	%r15, 152(%rsp)                 # 8-byte Spill
.Ltmp3641:
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 2922 74 is_stmt 1             # x264_src/encoder/encoder.c:2922:74
	movq	28592(%r12), %rbx
.Ltmp3642:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: i <- 1
	movq	28600(%r12), %rbp
.Ltmp3643:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: i <- 2
	movq	28608(%r12), %r15
.Ltmp3644:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: i <- 3
	movq	28616(%r12), %r13
.Ltmp3645:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: i <- 4
	.loc	0 2922 71 is_stmt 0             # x264_src/encoder/encoder.c:2922:71
	addq	28624(%r12), %rbx
.Ltmp3646:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: i <- 5
	addq	28632(%r12), %rbp
.Ltmp3647:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: i <- 6
	addq	28640(%r12), %r15
.Ltmp3648:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: i <- 7
	addq	28648(%r12), %r13
.Ltmp3649:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: i <- 8
	addq	28656(%r12), %rbx
.Ltmp3650:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: i <- 9
	addq	28664(%r12), %rbp
.Ltmp3651:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: i <- 10
	addq	28672(%r12), %r15
.Ltmp3652:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: i <- 11
	addq	28680(%r12), %r13
.Ltmp3653:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: i <- 13
	addq	28696(%r12), %r13
.Ltmp3654:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: i <- 14
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28704(%r12), %rax
.Ltmp3655:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] $rax
	#DEBUG_VALUE: i <- 15
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rax, 16(%rsp)                  # 8-byte Spill
.Ltmp3656:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28712(%r12), %rax
.Ltmp3657:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 128 64] $rax
	#DEBUG_VALUE: i <- 16
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] undef
	#DEBUG_VALUE: i_type <- 1
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] undef
	#DEBUG_VALUE: i <- 3
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rax, 40(%rsp)                  # 8-byte Spill
.Ltmp3658:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28752(%r12), %rax
.Ltmp3659:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] $rax
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] undef
	#DEBUG_VALUE: i <- 7
	.loc	0 2922 71                       # x264_src/encoder/encoder.c:2922:71
	addq	28784(%r12), %rax
.Ltmp3660:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] $rax
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 832 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 704 64] undef
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 768 64] undef
	#DEBUG_VALUE: i <- 11
	addq	28816(%r12), %rax
.Ltmp3661:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] $rax
	#DEBUG_VALUE: i <- 13
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28720(%r12), %rcx
.Ltmp3662:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 0 64] $rcx
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rcx, 80(%rsp)                  # 8-byte Spill
	.loc	0 2922 71                       # x264_src/encoder/encoder.c:2922:71
	addq	28832(%r12), %rax
.Ltmp3663:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 640 64] $rax
	#DEBUG_VALUE: i <- 14
	.loc	0 0 71                          # x264_src/encoder/encoder.c:0:71
	movq	%rax, 8(%rsp)                   # 8-byte Spill
.Ltmp3664:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28840(%r12), %rax
.Ltmp3665:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 512 64] $rax
	#DEBUG_VALUE: i <- 15
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rax, 32(%rsp)                  # 8-byte Spill
.Ltmp3666:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28848(%r12), %rax
.Ltmp3667:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 576 64] $rax
	#DEBUG_VALUE: i <- 16
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rax, 24(%rsp)                  # 8-byte Spill
.Ltmp3668:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	.loc	0 2922 74                       # x264_src/encoder/encoder.c:2922:74
	movq	28856(%r12), %rax
.Ltmp3669:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 448 64] $rax
	#DEBUG_VALUE: i <- 17
	#DEBUG_VALUE: i_type <- 2
	.loc	0 0 74                          # x264_src/encoder/encoder.c:0:74
	movq	%rax, 48(%rsp)                  # 8-byte Spill
.Ltmp3670:
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	.loc	0 2926 9 is_stmt 1              # x264_src/encoder/encoder.c:2926:9
	movl	27424(%r12), %eax
	.loc	0 2926 45 is_stmt 0             # x264_src/encoder/encoder.c:2926:45
	testl	%eax, %eax
.Ltmp3671:
	.loc	0 2926 9                        # x264_src/encoder/encoder.c:2926:9
	jle	.LBB17_62
.Ltmp3672:
# %bb.59:                               # %if.then223
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 28136, DW_OP_stack_value] $r12
	.loc	0 2929 62 is_stmt 1             # x264_src/encoder/encoder.c:2929:62
	imull	16368(%r12), %eax
	.loc	0 2929 26 is_stmt 0             # x264_src/encoder/encoder.c:2929:26
	xorps	%xmm3, %xmm3
	cvtsi2sd	%eax, %xmm3
	.loc	0 2929 81                       # x264_src/encoder/encoder.c:2929:81
	divsd	.LCPI17_10(%rip), %xmm3
.Ltmp3673:
	#DEBUG_VALUE: i_count <- $xmm3
	#DEBUG_VALUE: x264_print_intra:i_count <- $xmm3
	#DEBUG_VALUE: x264_print_intra:i_mb_count <- [DW_OP_plus_uconst 28136, DW_OP_stack_value] $r12
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	.loc	0 2827 9 is_stmt 1              # x264_src/encoder/encoder.c:2827:9
	movl	$.L.str.83, %eax
	movl	$.L.str.84, %edx
	movzbl	64(%rsp), %r14d                 # 1-byte Folded Reload
	testb	%r14b, %r14b
	cmovneq	%rax, %rdx
	.loc	0 2828 9                        # x264_src/encoder/encoder.c:2828:9
	xorps	%xmm0, %xmm0
	cvtsi2sdq	28152(%r12), %xmm0
	.loc	0 2828 28 is_stmt 0             # x264_src/encoder/encoder.c:2828:28
	divsd	%xmm3, %xmm0
	.loc	0 2829 9 is_stmt 1              # x264_src/encoder/encoder.c:2829:9
	xorps	%xmm1, %xmm1
	cvtsi2sdq	28144(%r12), %xmm1
	.loc	0 2829 28 is_stmt 0             # x264_src/encoder/encoder.c:2829:28
	divsd	%xmm3, %xmm1
	.loc	0 2830 9 is_stmt 1              # x264_src/encoder/encoder.c:2830:9
	cvtsi2sdq	28136(%r12), %xmm2
	movsd	%xmm3, 72(%rsp)                 # 8-byte Spill
.Ltmp3674:
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 2830 28 is_stmt 0             # x264_src/encoder/encoder.c:2830:28
	divsd	%xmm3, %xmm2
	leaq	288(%rsp), %rdi
	.loc	0 2826 14 is_stmt 1             # x264_src/encoder/encoder.c:2826:14
	movl	$.L.str.82, %esi
	movb	$3, %al
	callq	sprintf@PLT
.Ltmp3675:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2827 9                        # x264_src/encoder/encoder.c:2827:9
	testb	%r14b, %r14b
	.loc	0 2831 9                        # x264_src/encoder/encoder.c:2831:9
	je	.LBB17_61
.Ltmp3676:
# %bb.60:                               # %if.then.i
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 28136, DW_OP_stack_value] $r12
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_mb_count <- [DW_OP_plus_uconst 28136, DW_OP_stack_value] $r12
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2826 11                       # x264_src/encoder/encoder.c:2826:11
	cltq
.Ltmp3677:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsp, $rax
	leaq	(%rsp,%rax), %rdi
	addq	$288, %rdi                      # imm = 0x120
.Ltmp3678:
	#DEBUG_VALUE: x264_print_intra:intra <- $rdi
	.loc	0 2832 37                       # x264_src/encoder/encoder.c:2832:37
	xorps	%xmm0, %xmm0
	cvtsi2sdq	28160(%r12), %xmm0
	.loc	0 2832 56 is_stmt 0             # x264_src/encoder/encoder.c:2832:56
	divsd	72(%rsp), %xmm0                 # 8-byte Folded Reload
	.loc	0 2832 9                        # x264_src/encoder/encoder.c:2832:9
	movl	$.L.str.31, %esi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3679:
.LBB17_61:                              # %x264_print_intra.exit
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 28136, DW_OP_stack_value] $r12
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	leaq	288(%rsp), %rcx
	.loc	0 2931 9 is_stmt 1              # x264_src/encoder/encoder.c:2931:9
	movl	$.L.str.33, %edx
	movq	%r12, %rdi
	movl	$2, %esi
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp3680:
.LBB17_62:                              # %if.end239
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2933 9                        # x264_src/encoder/encoder.c:2933:9
	movl	27416(%r12), %eax
	.loc	0 2933 45 is_stmt 0             # x264_src/encoder/encoder.c:2933:45
	testl	%eax, %eax
.Ltmp3681:
	.loc	0 2933 9                        # x264_src/encoder/encoder.c:2933:9
	jle	.LBB17_66
.Ltmp3682:
# %bb.63:                               # %if.then245
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 27832, DW_OP_stack_value] $r12
	.loc	0 2936 62 is_stmt 1             # x264_src/encoder/encoder.c:2936:62
	imull	16368(%r12), %eax
	.loc	0 2936 26 is_stmt 0             # x264_src/encoder/encoder.c:2936:26
	xorps	%xmm3, %xmm3
	cvtsi2sd	%eax, %xmm3
	.loc	0 2936 81                       # x264_src/encoder/encoder.c:2936:81
	divsd	.LCPI17_10(%rip), %xmm3
.Ltmp3683:
	#DEBUG_VALUE: i_count <- $xmm3
	#DEBUG_VALUE: x264_print_intra:i_count <- $xmm3
	#DEBUG_VALUE: i_mb_size <- undef
	#DEBUG_VALUE: x264_print_intra:i_mb_count <- [DW_OP_plus_uconst 27832, DW_OP_stack_value] $r12
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	.loc	0 2827 9 is_stmt 1              # x264_src/encoder/encoder.c:2827:9
	movl	$.L.str.83, %eax
	movl	$.L.str.84, %edx
	movzbl	64(%rsp), %r14d                 # 1-byte Folded Reload
	testb	%r14b, %r14b
	cmovneq	%rax, %rdx
	.loc	0 2828 9                        # x264_src/encoder/encoder.c:2828:9
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27848(%r12), %xmm0
	.loc	0 2828 28 is_stmt 0             # x264_src/encoder/encoder.c:2828:28
	divsd	%xmm3, %xmm0
	.loc	0 2829 9 is_stmt 1              # x264_src/encoder/encoder.c:2829:9
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27840(%r12), %xmm1
	.loc	0 2829 28 is_stmt 0             # x264_src/encoder/encoder.c:2829:28
	divsd	%xmm3, %xmm1
	.loc	0 2830 9 is_stmt 1              # x264_src/encoder/encoder.c:2830:9
	xorps	%xmm2, %xmm2
	cvtsi2sdq	27832(%r12), %xmm2
	movsd	%xmm3, 72(%rsp)                 # 8-byte Spill
.Ltmp3684:
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 2830 28 is_stmt 0             # x264_src/encoder/encoder.c:2830:28
	divsd	%xmm3, %xmm2
	leaq	288(%rsp), %rdi
	.loc	0 2826 14 is_stmt 1             # x264_src/encoder/encoder.c:2826:14
	movl	$.L.str.82, %esi
	movb	$3, %al
	callq	sprintf@PLT
.Ltmp3685:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2827 9                        # x264_src/encoder/encoder.c:2827:9
	testb	%r14b, %r14b
	.loc	0 2831 9                        # x264_src/encoder/encoder.c:2831:9
	je	.LBB17_65
.Ltmp3686:
# %bb.64:                               # %if.then.i1618
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 27832, DW_OP_stack_value] $r12
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_mb_count <- [DW_OP_plus_uconst 27832, DW_OP_stack_value] $r12
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2826 11                       # x264_src/encoder/encoder.c:2826:11
	cltq
.Ltmp3687:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsp, $rax
	leaq	(%rsp,%rax), %rdi
	addq	$288, %rdi                      # imm = 0x120
.Ltmp3688:
	#DEBUG_VALUE: x264_print_intra:intra <- $rdi
	.loc	0 2832 37                       # x264_src/encoder/encoder.c:2832:37
	xorps	%xmm0, %xmm0
	cvtsi2sdq	27856(%r12), %xmm0
	.loc	0 2832 56 is_stmt 0             # x264_src/encoder/encoder.c:2832:56
	divsd	72(%rsp), %xmm0                 # 8-byte Folded Reload
	.loc	0 2832 9                        # x264_src/encoder/encoder.c:2832:9
	movl	$.L.str.31, %esi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3689:
.LBB17_65:                              # %x264_print_intra.exit1626
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 320 64] $r15
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- [DW_OP_plus_uconst 27832, DW_OP_stack_value] $r12
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 72, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 2942 19 is_stmt 1             # x264_src/encoder/encoder.c:2942:19
	xorps	%xmm0, %xmm0
	cvtsi2sdq	80(%rsp), %xmm0         # 8-byte Folded Reload
	movsd	.LCPI17_11(%rip), %xmm5         # xmm5 = [4.0E+0,0.0E+0]
	movsd	72(%rsp), %xmm6                 # 8-byte Reload
                                        # xmm6 = mem[0],zero
	.loc	0 2942 52 is_stmt 0             # x264_src/encoder/encoder.c:2942:52
	mulsd	%xmm6, %xmm5
	.loc	0 2942 42                       # x264_src/encoder/encoder.c:2942:42
	divsd	%xmm5, %xmm0
	movq	40(%rsp), %rax                  # 8-byte Reload
	.loc	0 2943 42 is_stmt 1             # x264_src/encoder/encoder.c:2943:42
	addq	16(%rsp), %rax                  # 8-byte Folded Reload
	.loc	0 2943 19 is_stmt 0             # x264_src/encoder/encoder.c:2943:19
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rax, %xmm1
	.loc	0 2944 19 is_stmt 1             # x264_src/encoder/encoder.c:2944:19
	xorps	%xmm2, %xmm2
	cvtsi2sd	%r13, %xmm2
	.loc	0 2943 67                       # x264_src/encoder/encoder.c:2943:67
	divsd	%xmm5, %xmm1
	.loc	0 2945 41                       # x264_src/encoder/encoder.c:2945:41
	addq	%rbp, %r15
.Ltmp3690:
	.loc	0 2945 19 is_stmt 0             # x264_src/encoder/encoder.c:2945:19
	xorps	%xmm3, %xmm3
	cvtsi2sd	%r15, %xmm3
	.loc	0 2944 40 is_stmt 1             # x264_src/encoder/encoder.c:2944:40
	divsd	%xmm5, %xmm2
	.loc	0 2945 65                       # x264_src/encoder/encoder.c:2945:65
	divsd	%xmm5, %xmm3
	.loc	0 2946 19                       # x264_src/encoder/encoder.c:2946:19
	cvtsi2sd	%rbx, %xmm4
	.loc	0 2946 40 is_stmt 0             # x264_src/encoder/encoder.c:2946:40
	divsd	%xmm5, %xmm4
	.loc	0 2947 19 is_stmt 1             # x264_src/encoder/encoder.c:2947:19
	xorps	%xmm5, %xmm5
	cvtsi2sdq	27880(%r12), %xmm5
	.loc	0 2947 38 is_stmt 0             # x264_src/encoder/encoder.c:2947:38
	divsd	%xmm6, %xmm5
	leaq	288(%rsp), %rcx
	.loc	0 2939 9 is_stmt 1              # x264_src/encoder/encoder.c:2939:9
	movl	$.L.str.34, %edx
	movq	%r12, %rdi
	movl	$2, %esi
	movb	$6, %al
	callq	x264_log@PLT
.Ltmp3691:
.LBB17_66:                              # %if.end291
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 192 64] $r13
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2949 9                        # x264_src/encoder/encoder.c:2949:9
	movl	27420(%r12), %eax
	.loc	0 2949 45 is_stmt 0             # x264_src/encoder/encoder.c:2949:45
	testl	%eax, %eax
	movq	%r12, %r13
.Ltmp3692:
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	.loc	0 2949 9                        # x264_src/encoder/encoder.c:2949:9
	jle	.LBB17_76
.Ltmp3693:
# %bb.67:                               # %if.then297
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 64 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 384 64] $rbx
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_mb_count <- undef
	.loc	0 2952 62 is_stmt 1             # x264_src/encoder/encoder.c:2952:62
	imull	16368(%r13), %eax
	.loc	0 2952 26 is_stmt 0             # x264_src/encoder/encoder.c:2952:26
	xorps	%xmm3, %xmm3
	cvtsi2sd	%eax, %xmm3
	.loc	0 2952 81                       # x264_src/encoder/encoder.c:2952:81
	divsd	.LCPI17_10(%rip), %xmm3
.Ltmp3694:
	#DEBUG_VALUE: i_count <- $xmm3
	#DEBUG_VALUE: i_mb_size <- undef
	.loc	0 2955 17 is_stmt 1             # x264_src/encoder/encoder.c:2955:17
	xorpd	%xmm0, %xmm0
	movapd	%xmm0, 112(%rsp)
	movq	$0, 128(%rsp)
.Ltmp3695:
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_print_intra:i_mb_count <- undef
	#DEBUG_VALUE: x264_print_intra:i_count <- $xmm3
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	.loc	0 2827 9                        # x264_src/encoder/encoder.c:2827:9
	movl	$.L.str.83, %eax
	movl	$.L.str.84, %edx
	movzbl	64(%rsp), %ebx                  # 1-byte Folded Reload
.Ltmp3696:
	testb	%bl, %bl
	cmovneq	%rax, %rdx
	.loc	0 2828 9                        # x264_src/encoder/encoder.c:2828:9
	xorps	%xmm0, %xmm0
	cvtsi2sdq	28000(%r13), %xmm0
	.loc	0 2828 28 is_stmt 0             # x264_src/encoder/encoder.c:2828:28
	divsd	%xmm3, %xmm0
	.loc	0 2829 9 is_stmt 1              # x264_src/encoder/encoder.c:2829:9
	xorps	%xmm1, %xmm1
	cvtsi2sdq	27992(%r13), %xmm1
	.loc	0 2829 28 is_stmt 0             # x264_src/encoder/encoder.c:2829:28
	divsd	%xmm3, %xmm1
	.loc	0 2830 9 is_stmt 1              # x264_src/encoder/encoder.c:2830:9
	xorps	%xmm2, %xmm2
	cvtsi2sdq	27984(%r13), %xmm2
	movsd	%xmm3, 16(%rsp)                 # 8-byte Spill
.Ltmp3697:
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 64 64] undef
	.loc	0 2830 28 is_stmt 0             # x264_src/encoder/encoder.c:2830:28
	divsd	%xmm3, %xmm2
	leaq	288(%rsp), %rdi
	.loc	0 2826 14 is_stmt 1             # x264_src/encoder/encoder.c:2826:14
	movl	$.L.str.82, %esi
	movb	$3, %al
	callq	sprintf@PLT
.Ltmp3698:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2827 9                        # x264_src/encoder/encoder.c:2827:9
	testb	%bl, %bl
	.loc	0 2831 9                        # x264_src/encoder/encoder.c:2831:9
	je	.LBB17_69
.Ltmp3699:
# %bb.68:                               # %if.then.i1638
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 32 5, DW_OP_LLVM_convert 64 5, DW_OP_plus, DW_OP_stack_value] $rsp, $eax
	.loc	0 2826 11                       # x264_src/encoder/encoder.c:2826:11
	cltq
.Ltmp3700:
	#DEBUG_VALUE: x264_print_intra:intra <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 288, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rsp, $rax
	leaq	(%rsp,%rax), %rdi
	addq	$288, %rdi                      # imm = 0x120
.Ltmp3701:
	#DEBUG_VALUE: x264_print_intra:intra <- $rdi
	.loc	0 2832 37                       # x264_src/encoder/encoder.c:2832:37
	xorps	%xmm0, %xmm0
	cvtsi2sdq	28008(%r13), %xmm0
	.loc	0 2832 56 is_stmt 0             # x264_src/encoder/encoder.c:2832:56
	divsd	16(%rsp), %xmm0                 # 8-byte Folded Reload
	.loc	0 2832 9                        # x264_src/encoder/encoder.c:2832:9
	movl	$.L.str.31, %esi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3702:
.LBB17_69:                              # %for.cond322.preheader.preheader
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: x264_print_intra:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	$13992, %eax                    # imm = 0x36A8
	jmp	.LBB17_70
.Ltmp3703:
	.p2align	4, 0x90
.LBB17_74:                              # %if.end354.1
                                        #   in Loop: Header=BB17_70 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_stack_value] $rax
	#DEBUG_VALUE: j <- 1
	#DEBUG_VALUE: j <- 2
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] $rax
	.loc	0 2957 27 is_stmt 1             # x264_src/encoder/encoder.c:2957:27
	addq	$4, %rax
.Ltmp3704:
	cmpq	$14060, %rax                    # imm = 0x36EC
.Ltmp3705:
	.loc	0 2957 9 is_stmt 0              # x264_src/encoder/encoder.c:2957:9
	je	.LBB17_75
.Ltmp3706:
.LBB17_70:                              # %for.cond322.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_stack_value] $rax
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: j <- 0
	.loc	0 2960 26 is_stmt 1             # x264_src/encoder/encoder.c:2960:26
	movzbl	x264_mb_type_list_table-13992(%rax), %ecx
.Ltmp3707:
	#DEBUG_VALUE: l0 <- undef
	.loc	0 2961 26                       # x264_src/encoder/encoder.c:2961:26
	movzbl	x264_mb_type_list_table-13990(%rax), %edx
.Ltmp3708:
	#DEBUG_VALUE: l1 <- undef
	.loc	0 2962 24                       # x264_src/encoder/encoder.c:2962:24
	movl	%ecx, %esi
	orl	%edx, %esi
	je	.LBB17_72
.Ltmp3709:
# %bb.71:                               # %if.then342
                                        #   in Loop: Header=BB17_70 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_stack_value] $rax
	#DEBUG_VALUE: j <- 0
	.loc	0 2963 45                       # x264_src/encoder/encoder.c:2963:45
	movq	(%r13,%rax,2), %rsi
	.loc	0 2963 81 is_stmt 0             # x264_src/encoder/encoder.c:2963:81
	addq	%rsi, %rsi
	.loc	0 2963 34                       # x264_src/encoder/encoder.c:2963:34
	incl	%ecx
	imull	%ecx, %edx
	.loc	0 2963 42                       # x264_src/encoder/encoder.c:2963:42
	addq	%rsi, 112(%rsp,%rdx,8)
.Ltmp3710:
	#DEBUG_VALUE: l1 <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	#DEBUG_VALUE: l0 <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
.LBB17_72:                              # %if.end354
                                        #   in Loop: Header=BB17_70 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_stack_value] $rax
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: j <- 1
	.loc	0 2960 26 is_stmt 1             # x264_src/encoder/encoder.c:2960:26
	movzbl	x264_mb_type_list_table-13991(%rax), %ecx
.Ltmp3711:
	#DEBUG_VALUE: l0 <- undef
	.loc	0 2961 26                       # x264_src/encoder/encoder.c:2961:26
	movzbl	x264_mb_type_list_table-13989(%rax), %edx
.Ltmp3712:
	#DEBUG_VALUE: l1 <- undef
	.loc	0 2962 24                       # x264_src/encoder/encoder.c:2962:24
	movl	%ecx, %esi
	orl	%edx, %esi
	je	.LBB17_74
.Ltmp3713:
# %bb.73:                               # %if.then342.1
                                        #   in Loop: Header=BB17_70 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- [DW_OP_consts 13992, DW_OP_minus, DW_OP_consts 4, DW_OP_div, DW_OP_stack_value] $rax
	#DEBUG_VALUE: j <- 1
	.loc	0 2963 45                       # x264_src/encoder/encoder.c:2963:45
	movq	(%r13,%rax,2), %rsi
	.loc	0 2963 81 is_stmt 0             # x264_src/encoder/encoder.c:2963:81
	addq	%rsi, %rsi
	.loc	0 2963 34                       # x264_src/encoder/encoder.c:2963:34
	incl	%ecx
	imull	%ecx, %edx
	.loc	0 2963 42                       # x264_src/encoder/encoder.c:2963:42
	addq	%rsi, 112(%rsp,%rdx,8)
.Ltmp3714:
	#DEBUG_VALUE: l1 <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	#DEBUG_VALUE: l0 <- [DW_OP_LLVM_convert 8 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	.loc	0 0 42                          # x264_src/encoder/encoder.c:0:42
	jmp	.LBB17_74
.Ltmp3715:
.LBB17_75:                              # %for.cond.cleanup320
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 16, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	.loc	0 2965 23 is_stmt 1             # x264_src/encoder/encoder.c:2965:23
	movq	112(%rsp), %rdx
.Ltmp3716:
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 64 128] $rsp
	.loc	0 2966 23                       # x264_src/encoder/encoder.c:2966:23
	movq	120(%rsp), %rax
	.loc	0 2965 23                       # x264_src/encoder/encoder.c:2965:23
	addq	28752(%r13), %rdx
.Ltmp3717:
	#DEBUG_VALUE: list_count <- [DW_OP_LLVM_fragment 0 64] $rdx
	.loc	0 2966 23                       # x264_src/encoder/encoder.c:2966:23
	addq	28784(%r13), %rax
.Ltmp3718:
	#DEBUG_VALUE: list_count <- [DW_OP_LLVM_fragment 64 64] $rax
	#DEBUG_VALUE: list_count <- [DW_OP_plus_uconst 112, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	.loc	0 2967 23                       # x264_src/encoder/encoder.c:2967:23
	movq	128(%rsp), %rcx
	addq	28816(%r13), %rcx
.Ltmp3719:
	#DEBUG_VALUE: list_count <- [DW_OP_LLVM_fragment 128 64] $rcx
	.loc	0 2968 34                       # x264_src/encoder/encoder.c:2968:34
	movq	28824(%r13), %rsi
	.loc	0 2968 84 is_stmt 0             # x264_src/encoder/encoder.c:2968:84
	leaq	2(%rsi), %rdi
	.loc	0 2968 87                       # x264_src/encoder/encoder.c:2968:87
	addq	$5, %rsi
	testq	%rdi, %rdi
	cmovnsq	%rdi, %rsi
	sarq	$2, %rsi
	.loc	0 2968 30                       # x264_src/encoder/encoder.c:2968:30
	addq	28040(%r13), %rsi
	.loc	0 2969 42 is_stmt 1             # x264_src/encoder/encoder.c:2969:42
	leaq	(%rax,%rdx), %rdi
	.loc	0 2969 58 is_stmt 0             # x264_src/encoder/encoder.c:2969:58
	addq	%rcx, %rdi
	.loc	0 2969 27                       # x264_src/encoder/encoder.c:2969:27
	cvtsi2sd	%rdi, %xmm8
	.loc	0 2969 75                       # x264_src/encoder/encoder.c:2969:75
	divsd	.LCPI17_10(%rip), %xmm8
.Ltmp3720:
	#DEBUG_VALUE: i_mb_list_count <- $xmm8
	.loc	0 2968 30 is_stmt 1             # x264_src/encoder/encoder.c:2968:30
	movq	%rsi, 28040(%r13)
	.loc	0 2973 19                       # x264_src/encoder/encoder.c:2973:19
	xorps	%xmm0, %xmm0
	cvtsi2sdq	48(%rsp), %xmm0         # 8-byte Folded Reload
	movsd	.LCPI17_11(%rip), %xmm3         # xmm3 = [4.0E+0,0.0E+0]
	movsd	16(%rsp), %xmm6                 # 8-byte Reload
                                        # xmm6 = mem[0],zero
	.loc	0 2973 52 is_stmt 0             # x264_src/encoder/encoder.c:2973:52
	mulsd	%xmm6, %xmm3
	movq	24(%rsp), %rdi                  # 8-byte Reload
	.loc	0 2974 42 is_stmt 1             # x264_src/encoder/encoder.c:2974:42
	addq	32(%rsp), %rdi                  # 8-byte Folded Reload
	.loc	0 2974 19 is_stmt 0             # x264_src/encoder/encoder.c:2974:19
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rdi, %xmm1
	.loc	0 2973 42 is_stmt 1             # x264_src/encoder/encoder.c:2973:42
	divsd	%xmm3, %xmm0
	.loc	0 2974 67                       # x264_src/encoder/encoder.c:2974:67
	divsd	%xmm3, %xmm1
	.loc	0 2975 19                       # x264_src/encoder/encoder.c:2975:19
	xorps	%xmm2, %xmm2
	cvtsi2sdq	8(%rsp), %xmm2          # 8-byte Folded Reload
	.loc	0 2975 40 is_stmt 0             # x264_src/encoder/encoder.c:2975:40
	divsd	%xmm3, %xmm2
	.loc	0 2976 19 is_stmt 1             # x264_src/encoder/encoder.c:2976:19
	xorps	%xmm3, %xmm3
	cvtsi2sd	%rsi, %xmm3
	.loc	0 2976 40 is_stmt 0             # x264_src/encoder/encoder.c:2976:40
	divsd	%xmm6, %xmm3
	.loc	0 2977 19 is_stmt 1             # x264_src/encoder/encoder.c:2977:19
	cvtsi2sdq	28128(%r13), %xmm4
	.loc	0 2978 19                       # x264_src/encoder/encoder.c:2978:19
	cvtsi2sd	%rdx, %xmm5
	.loc	0 2977 40                       # x264_src/encoder/encoder.c:2977:40
	divsd	%xmm6, %xmm4
	.loc	0 2978 33                       # x264_src/encoder/encoder.c:2978:33
	divsd	%xmm8, %xmm5
	.loc	0 2979 19                       # x264_src/encoder/encoder.c:2979:19
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rax, %xmm6
	.loc	0 2979 33 is_stmt 0             # x264_src/encoder/encoder.c:2979:33
	divsd	%xmm8, %xmm6
	.loc	0 2980 19 is_stmt 1             # x264_src/encoder/encoder.c:2980:19
	cvtsi2sd	%rcx, %xmm7
	.loc	0 2980 33 is_stmt 0             # x264_src/encoder/encoder.c:2980:33
	divsd	%xmm8, %xmm7
	leaq	288(%rsp), %rcx
.Ltmp3721:
	.loc	0 2970 9 is_stmt 1              # x264_src/encoder/encoder.c:2970:9
	movl	$.L.str.35, %edx
.Ltmp3722:
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$8, %al
.Ltmp3723:
	callq	x264_log@PLT
.Ltmp3724:
.LBB17_76:                              # %if.end424
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_LLVM_fragment 256 64] $rbp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2983 5                        # x264_src/encoder/encoder.c:2983:5
	movq	%r13, %rdi
	callq	x264_ratecontrol_summary@PLT
.Ltmp3725:
	.loc	0 2985 9                        # x264_src/encoder/encoder.c:2985:9
	movslq	27424(%r13), %rax
	.loc	0 2985 47 is_stmt 0             # x264_src/encoder/encoder.c:2985:47
	movslq	27416(%r13), %rcx
	.loc	0 2985 45                       # x264_src/encoder/encoder.c:2985:45
	addq	%rax, %rcx
	.loc	0 2985 85                       # x264_src/encoder/encoder.c:2985:85
	movslq	27420(%r13), %rbp
.Ltmp3726:
	.loc	0 2985 83                       # x264_src/encoder/encoder.c:2985:83
	addq	%rcx, %rbp
	.loc	0 2985 121                      # x264_src/encoder/encoder.c:2985:121
	testl	%ebp, %ebp
.Ltmp3727:
	.loc	0 2985 9                        # x264_src/encoder/encoder.c:2985:9
	jle	.LBB17_118
.Ltmp3728:
# %bb.77:                               # %if.then438
	#DEBUG_VALUE: x264_encoder_close:h <- $r12
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 2989 26 is_stmt 1             # x264_src/encoder/encoder.c:2989:26
	movq	27840(%r13), %r14
	addq	28144(%r13), %r14
	addq	27992(%r13), %r14
.Ltmp3729:
	#DEBUG_VALUE: i_i8x8 <- $r14
	.loc	0 0 26 is_stmt 0                # x264_src/encoder/encoder.c:0:26
	movq	28136(%r13), %r12
.Ltmp3730:
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	.loc	0 2991 36 is_stmt 1             # x264_src/encoder/encoder.c:2991:36
	addq	%r14, %r12
	addq	27832(%r13), %r12
	.loc	0 2990 36                       # x264_src/encoder/encoder.c:2990:36
	addq	27984(%r13), %r12
	addq	28152(%r13), %r12
	.loc	0 2990 34 is_stmt 0             # x264_src/encoder/encoder.c:2990:34
	addq	27848(%r13), %r12
	.loc	0 2991 34 is_stmt 1             # x264_src/encoder/encoder.c:2991:34
	addq	28000(%r13), %r12
.Ltmp3731:
	#DEBUG_VALUE: i_intra <- $r12
	.loc	0 0 34 is_stmt 0                # x264_src/encoder/encoder.c:0:34
	movq	28160(%r13), %rbx
	.loc	0 2992 41 is_stmt 1             # x264_src/encoder/encoder.c:2992:41
	addq	%r12, %rbx
	addq	27856(%r13), %rbx
.Ltmp3732:
	#DEBUG_VALUE: i_all_intra <- undef
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- undef
	#DEBUG_VALUE: fps <- undef
	.loc	0 0 41 is_stmt 0                # x264_src/encoder/encoder.c:0:41
	cmpl	$1, %ebp
.Ltmp3733:
	.loc	0 3000 35 is_stmt 1             # x264_src/encoder/encoder.c:3000:35
	je	.LBB17_79
.Ltmp3734:
# %bb.78:                               # %if.then438
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_count <- $ebp
	cmpl	$0, 648(%r13)
	je	.LBB17_79
.Ltmp3735:
# %bb.80:                               # %if.else542
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3004 52                       # x264_src/encoder/encoder.c:3004:52
	movq	14656(%r13), %rax
	.loc	0 3004 40 is_stmt 0             # x264_src/encoder/encoder.c:3004:40
	addq	%rax, %rax
	.loc	0 3004 66                       # x264_src/encoder/encoder.c:3004:66
	subq	14664(%r13), %rax
	.loc	0 3004 30                       # x264_src/encoder/encoder.c:3004:30
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm0
	.loc	0 3004 111                      # x264_src/encoder/encoder.c:3004:111
	movl	660(%r13), %eax
	.loc	0 3004 102                      # x264_src/encoder/encoder.c:3004:102
	xorps	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm1
	.loc	0 3004 137                      # x264_src/encoder/encoder.c:3004:137
	movl	664(%r13), %eax
	.loc	0 3004 128                      # x264_src/encoder/encoder.c:3004:128
	xorps	%xmm2, %xmm2
	cvtsi2ss	%rax, %xmm2
	.loc	0 3004 100                      # x264_src/encoder/encoder.c:3004:100
	mulss	%xmm0, %xmm1
	.loc	0 3004 126                      # x264_src/encoder/encoder.c:3004:126
	divss	%xmm2, %xmm1
.Ltmp3736:
	#DEBUG_VALUE: duration <- $xmm1
	.loc	0 3005 25 is_stmt 1             # x264_src/encoder/encoder.c:3005:25
	movq	27440(%r13), %rax
	addq	27456(%r13), %rax
	addq	27448(%r13), %rax
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm0
	.loc	0 3005 52 is_stmt 0             # x264_src/encoder/encoder.c:3005:52
	divss	%xmm1, %xmm0
.Ltmp3737:
	#DEBUG_VALUE: f_bitrate <- undef
	.loc	0 0 52                          # x264_src/encoder/encoder.c:0:52
	movss	%xmm0, 60(%rsp)                 # 4-byte Spill
	jmp	.LBB17_81
.Ltmp3738:
.LBB17_79:                              # %if.then525
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 2997 38 is_stmt 1             # x264_src/encoder/encoder.c:2997:38
	movl	652(%r13), %eax
	.loc	0 2997 21 is_stmt 0             # x264_src/encoder/encoder.c:2997:21
	xorps	%xmm0, %xmm0
	cvtsi2ss	%rax, %xmm0
	.loc	0 2997 59                       # x264_src/encoder/encoder.c:2997:59
	movl	656(%r13), %eax
	.loc	0 2997 50                       # x264_src/encoder/encoder.c:2997:50
	xorps	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm1
	.loc	0 2997 48                       # x264_src/encoder/encoder.c:2997:48
	divss	%xmm1, %xmm0
.Ltmp3739:
	#DEBUG_VALUE: fps <- $xmm0
	.loc	0 3001 31 is_stmt 1             # x264_src/encoder/encoder.c:3001:31
	movq	27440(%r13), %rax
	addq	27456(%r13), %rax
	addq	27448(%r13), %rax
	xorps	%xmm1, %xmm1
	cvtsi2ss	%rax, %xmm1
	.loc	0 3001 29 is_stmt 0             # x264_src/encoder/encoder.c:3001:29
	mulss	%xmm0, %xmm1
	.loc	0 3001 60                       # x264_src/encoder/encoder.c:3001:60
	xorps	%xmm0, %xmm0
.Ltmp3740:
	cvtsi2ss	%ebp, %xmm0
	.loc	0 3001 58                       # x264_src/encoder/encoder.c:3001:58
	divss	%xmm0, %xmm1
.Ltmp3741:
	#DEBUG_VALUE: f_bitrate <- undef
	.loc	0 0 58                          # x264_src/encoder/encoder.c:0:58
	movss	%xmm1, 60(%rsp)                 # 4-byte Spill
.Ltmp3742:
.LBB17_81:                              # %if.end567
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_count <- $ebp
	movslq	16368(%r13), %r15
.Ltmp3743:
	#DEBUG_VALUE: f_bitrate <- undef
	.loc	0 3008 16 is_stmt 1             # x264_src/encoder/encoder.c:3008:16
	movq	3328(%r13), %rax
.Ltmp3744:
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	addq	28008(%r13), %rbx
.Ltmp3745:
	#DEBUG_VALUE: i_all_intra <- $rbx
	.loc	0 3008 13                       # x264_src/encoder/encoder.c:3008:13
	cmpl	$0, 60(%rax)
.Ltmp3746:
	.loc	0 3008 13                       # x264_src/encoder/encoder.c:3008:13
	je	.LBB17_85
.Ltmp3747:
# %bb.82:                               # %if.then569
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3010 20 is_stmt 1             # x264_src/encoder/encoder.c:3010:20
	movb	$0, 288(%rsp)
.Ltmp3748:
	.loc	0 3011 17                       # x264_src/encoder/encoder.c:3011:17
	movq	28864(%r13), %rax
	testq	%rax, %rax
.Ltmp3749:
	.loc	0 3011 17 is_stmt 0             # x264_src/encoder/encoder.c:3011:17
	je	.LBB17_84
.Ltmp3750:
# %bb.83:                               # %if.then574
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3012 55 is_stmt 1             # x264_src/encoder/encoder.c:3012:55
	xorps	%xmm0, %xmm0
	cvtsi2sdq	28872(%r13), %xmm0
	.loc	0 3012 53 is_stmt 0             # x264_src/encoder/encoder.c:3012:53
	mulsd	.LCPI17_10(%rip), %xmm0
	.loc	0 3012 86                       # x264_src/encoder/encoder.c:3012:86
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rax, %xmm1
	.loc	0 3012 84                       # x264_src/encoder/encoder.c:3012:84
	divsd	%xmm1, %xmm0
	leaq	288(%rsp), %rdi
	.loc	0 3012 17                       # x264_src/encoder/encoder.c:3012:17
	movl	$.L.str.36, %esi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3751:
.LBB17_84:                              # %if.end587
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3013 82 is_stmt 1             # x264_src/encoder/encoder.c:3013:82
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r14, %xmm0
	.loc	0 3013 80 is_stmt 0             # x264_src/encoder/encoder.c:3013:80
	mulsd	.LCPI17_10(%rip), %xmm0
	.loc	0 3013 91                       # x264_src/encoder/encoder.c:3013:91
	xorps	%xmm1, %xmm1
	cvtsi2sd	%r12, %xmm1
	.loc	0 3013 89                       # x264_src/encoder/encoder.c:3013:89
	divsd	%xmm1, %xmm0
	leaq	288(%rsp), %rcx
	.loc	0 3013 13                       # x264_src/encoder/encoder.c:3013:13
	movl	$.L.str.37, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$1, %al
	callq	x264_log@PLT
.Ltmp3752:
.LBB17_85:                              # %if.end593
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	imulq	%rbp, %r15
.Ltmp3753:
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3016 48 is_stmt 1             # x264_src/encoder/encoder.c:3016:48
	cmpl	$3, 404(%r13)
	.loc	0 3016 73 is_stmt 0             # x264_src/encoder/encoder.c:3016:73
	je	.LBB17_88
.Ltmp3754:
# %bb.86:                               # %lor.lhs.false598
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3017 14 is_stmt 1             # x264_src/encoder/encoder.c:3017:14
	cmpl	$0, 30376(%r13)
	.loc	0 3017 41 is_stmt 0             # x264_src/encoder/encoder.c:3017:41
	je	.LBB17_90
.Ltmp3755:
# %bb.87:                               # %land.lhs.true602
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3017 44                       # x264_src/encoder/encoder.c:3017:44
	cmpl	$0, 30380(%r13)
	.loc	0 3018 13 is_stmt 1             # x264_src/encoder/encoder.c:3018:13
	je	.LBB17_90
.Ltmp3756:
.LBB17_88:                              # %land.lhs.true607
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3018 16 is_stmt 0             # x264_src/encoder/encoder.c:3018:16
	movl	27420(%r13), %eax
	testl	%eax, %eax
.Ltmp3757:
	.loc	0 3016 13 is_stmt 1             # x264_src/encoder/encoder.c:3016:13
	je	.LBB17_90
.Ltmp3758:
# %bb.89:                               # %if.then612
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3021 23                       # x264_src/encoder/encoder.c:3021:23
	xorps	%xmm0, %xmm0
	cvtsi2sdl	30380(%r13), %xmm0
	movsd	.LCPI17_10(%rip), %xmm2         # xmm2 = [1.0E+2,0.0E+0]
	.loc	0 3021 50 is_stmt 0             # x264_src/encoder/encoder.c:3021:50
	mulsd	%xmm2, %xmm0
	.loc	0 3021 59                       # x264_src/encoder/encoder.c:3021:59
	cvtsi2sd	%eax, %xmm3
	.loc	0 3021 57                       # x264_src/encoder/encoder.c:3021:57
	divsd	%xmm3, %xmm0
	.loc	0 3022 23 is_stmt 1             # x264_src/encoder/encoder.c:3022:23
	xorps	%xmm1, %xmm1
	cvtsi2sdl	30376(%r13), %xmm1
	.loc	0 3022 50 is_stmt 0             # x264_src/encoder/encoder.c:3022:50
	mulsd	%xmm2, %xmm1
	.loc	0 3022 57                       # x264_src/encoder/encoder.c:3022:57
	divsd	%xmm3, %xmm1
	.loc	0 3020 13 is_stmt 1             # x264_src/encoder/encoder.c:3020:13
	movl	$.L.str.38, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$2, %al
	callq	x264_log@PLT
.Ltmp3759:
.LBB17_90:                              # %if.end633
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: i_mb_count <- $r15
	.loc	0 3025 16                       # x264_src/encoder/encoder.c:3025:16
	movb	$0, 288(%rsp)
.Ltmp3760:
	.loc	0 3026 24                       # x264_src/encoder/encoder.c:3026:24
	subq	%rbx, %r15
.Ltmp3761:
	.loc	0 3026 13 is_stmt 0             # x264_src/encoder/encoder.c:3026:13
	je	.LBB17_92
.Ltmp3762:
# %bb.91:                               # %if.then637
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3028 22 is_stmt 1             # x264_src/encoder/encoder.c:3028:22
	xorps	%xmm0, %xmm0
	cvtsi2sdq	29912(%r13), %xmm0
	movsd	.LCPI17_10(%rip), %xmm3         # xmm3 = [1.0E+2,0.0E+0]
	.loc	0 3028 79 is_stmt 0             # x264_src/encoder/encoder.c:3028:79
	leaq	(,%r15,4), %rax
	.loc	0 3028 52                       # x264_src/encoder/encoder.c:3028:52
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rax, %xmm1
	.loc	0 3028 42                       # x264_src/encoder/encoder.c:3028:42
	mulsd	%xmm3, %xmm0
	.loc	0 3028 50                       # x264_src/encoder/encoder.c:3028:50
	divsd	%xmm1, %xmm0
	.loc	0 3029 22 is_stmt 1             # x264_src/encoder/encoder.c:3029:22
	xorps	%xmm1, %xmm1
	cvtsi2sdq	29928(%r13), %xmm1
	.loc	0 3029 42 is_stmt 0             # x264_src/encoder/encoder.c:3029:42
	mulsd	%xmm3, %xmm1
	.loc	0 3029 52                       # x264_src/encoder/encoder.c:3029:52
	cvtsi2sd	%r15, %xmm4
	.loc	0 3029 50                       # x264_src/encoder/encoder.c:3029:50
	divsd	%xmm4, %xmm1
	.loc	0 3030 22 is_stmt 1             # x264_src/encoder/encoder.c:3030:22
	xorps	%xmm2, %xmm2
	cvtsi2sdq	29944(%r13), %xmm2
	.loc	0 3030 42 is_stmt 0             # x264_src/encoder/encoder.c:3030:42
	mulsd	%xmm3, %xmm2
	.loc	0 3030 50                       # x264_src/encoder/encoder.c:3030:50
	divsd	%xmm4, %xmm2
	leaq	288(%rsp), %rdi
	.loc	0 3027 13 is_stmt 1             # x264_src/encoder/encoder.c:3027:13
	movl	$.L.str.39, %esi
	movb	$3, %al
	callq	sprintf@PLT
.Ltmp3763:
.LBB17_92:                              # %if.end664
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	.loc	0 3032 19                       # x264_src/encoder/encoder.c:3032:19
	xorps	%xmm0, %xmm0
	cvtsi2sdq	29904(%r13), %xmm0
	movsd	.LCPI17_10(%rip), %xmm4         # xmm4 = [1.0E+2,0.0E+0]
	.loc	0 3032 61 is_stmt 0             # x264_src/encoder/encoder.c:3032:61
	leaq	(,%rbx,4), %rax
	.loc	0 3032 49                       # x264_src/encoder/encoder.c:3032:49
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rax, %xmm1
	.loc	0 3032 39                       # x264_src/encoder/encoder.c:3032:39
	mulsd	%xmm4, %xmm0
	.loc	0 3032 47                       # x264_src/encoder/encoder.c:3032:47
	divsd	%xmm1, %xmm0
	.loc	0 3033 19 is_stmt 1             # x264_src/encoder/encoder.c:3033:19
	xorps	%xmm1, %xmm1
	cvtsi2sdq	29920(%r13), %xmm1
	.loc	0 3033 39 is_stmt 0             # x264_src/encoder/encoder.c:3033:39
	mulsd	%xmm4, %xmm1
	.loc	0 3033 49                       # x264_src/encoder/encoder.c:3033:49
	xorps	%xmm3, %xmm3
	cvtsi2sd	%rbx, %xmm3
	.loc	0 3033 47                       # x264_src/encoder/encoder.c:3033:47
	divsd	%xmm3, %xmm1
	.loc	0 3034 19 is_stmt 1             # x264_src/encoder/encoder.c:3034:19
	xorps	%xmm2, %xmm2
	cvtsi2sdq	29936(%r13), %xmm2
	.loc	0 3034 39 is_stmt 0             # x264_src/encoder/encoder.c:3034:39
	mulsd	%xmm4, %xmm2
	.loc	0 3034 47                       # x264_src/encoder/encoder.c:3034:47
	divsd	%xmm3, %xmm2
	leaq	288(%rsp), %rcx
	.loc	0 3031 9 is_stmt 1              # x264_src/encoder/encoder.c:3031:9
	movl	$.L.str.40, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$3, %al
	callq	x264_log@PLT
.Ltmp3764:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 896 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 960 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1024 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1088 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 0 256] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 0 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 3040 67                       # x264_src/encoder/encoder.c:3040:67
	movq	29952(%r13), %rsi
.Ltmp3765:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 0 64] $rsi
	#DEBUG_VALUE: i <- 1
	movq	29960(%r13), %rcx
.Ltmp3766:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 64 64] $rcx
	.loc	0 3041 31                       # x264_src/encoder/encoder.c:3041:31
	leaq	(%rsi,%rcx), %rdx
.Ltmp3767:
	#DEBUG_VALUE: i <- 2
	.loc	0 3040 67                       # x264_src/encoder/encoder.c:3040:67
	movq	29968(%r13), %r8
.Ltmp3768:
	#DEBUG_VALUE: i <- 3
	movq	29976(%r13), %rax
.Ltmp3769:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rax
	.loc	0 3041 31                       # x264_src/encoder/encoder.c:3041:31
	leaq	(%r8,%rax), %rdi
	addq	%rdx, %rdi
.Ltmp3770:
	#DEBUG_VALUE: i <- 4
	.loc	0 3040 67                       # x264_src/encoder/encoder.c:3040:67
	movq	29984(%r13), %r9
.Ltmp3771:
	#DEBUG_VALUE: i <- 5
	movq	29992(%r13), %rdx
	.loc	0 3041 31                       # x264_src/encoder/encoder.c:3041:31
	addq	%r9, %rdi
	addq	%rdx, %rdi
.Ltmp3772:
	#DEBUG_VALUE: i <- 6
	.loc	0 3040 67                       # x264_src/encoder/encoder.c:3040:67
	movq	30000(%r13), %r10
.Ltmp3773:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 128 64] $r8, $r10, $rdx, $r9
	#DEBUG_VALUE: i <- 7
	.loc	0 3043 13                       # x264_src/encoder/encoder.c:3043:13
	addq	%r10, %rdi
.Ltmp3774:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 0 64] $rdi
	.loc	0 3043 13 is_stmt 0             # x264_src/encoder/encoder.c:3043:13
	je	.LBB17_94
.Ltmp3775:
# %bb.93:                               # %if.then716
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 896 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 960 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1024 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1088 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 0 64] $rsi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 64 64] $rcx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rax
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 128 64] $r8, $r10, $rdx, $r9
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 0 64] $rdi
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 7
	.loc	0 3040 64 is_stmt 1             # x264_src/encoder/encoder.c:3040:64
	addq	%r9, %r8
.Ltmp3776:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 128 64] $r8, $r10, $rdx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 128 64] undef, undef
	addq	%r10, %rdx
	addq	%r8, %rdx
.Ltmp3777:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 128 64] $rdx
	.loc	0 3045 23                       # x264_src/encoder/encoder.c:3045:23
	xorps	%xmm0, %xmm0
	cvtsi2sd	%rsi, %xmm0
	movsd	.LCPI17_10(%rip), %xmm5         # xmm5 = [1.0E+2,0.0E+0]
	.loc	0 3045 46 is_stmt 0             # x264_src/encoder/encoder.c:3045:46
	mulsd	%xmm5, %xmm0
	.loc	0 3045 56                       # x264_src/encoder/encoder.c:3045:56
	xorps	%xmm4, %xmm4
	cvtsi2sd	%rdi, %xmm4
	.loc	0 3045 54                       # x264_src/encoder/encoder.c:3045:54
	divsd	%xmm4, %xmm0
	.loc	0 3046 23 is_stmt 1             # x264_src/encoder/encoder.c:3046:23
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rcx, %xmm1
	.loc	0 3046 46 is_stmt 0             # x264_src/encoder/encoder.c:3046:46
	mulsd	%xmm5, %xmm1
	.loc	0 3046 54                       # x264_src/encoder/encoder.c:3046:54
	divsd	%xmm4, %xmm1
	.loc	0 3047 23 is_stmt 1             # x264_src/encoder/encoder.c:3047:23
	xorps	%xmm2, %xmm2
	cvtsi2sd	%rdx, %xmm2
	.loc	0 3047 46 is_stmt 0             # x264_src/encoder/encoder.c:3047:46
	mulsd	%xmm5, %xmm2
	.loc	0 3047 54                       # x264_src/encoder/encoder.c:3047:54
	divsd	%xmm4, %xmm2
	.loc	0 3048 23 is_stmt 1             # x264_src/encoder/encoder.c:3048:23
	xorps	%xmm3, %xmm3
	cvtsi2sd	%rax, %xmm3
	.loc	0 3048 46 is_stmt 0             # x264_src/encoder/encoder.c:3048:46
	mulsd	%xmm5, %xmm3
	.loc	0 3048 54                       # x264_src/encoder/encoder.c:3048:54
	divsd	%xmm4, %xmm3
	.loc	0 3044 13 is_stmt 1             # x264_src/encoder/encoder.c:3044:13
	movl	$.L.str.41, %edx
.Ltmp3778:
	movq	%r13, %rdi
.Ltmp3779:
	movl	$2, %esi
.Ltmp3780:
	movb	$4, %al
.Ltmp3781:
	callq	x264_log@PLT
.Ltmp3782:
.LBB17_94:                              # %for.cond753.preheader
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_i8x8 <- $r14
	#DEBUG_VALUE: i_intra <- $r12
	#DEBUG_VALUE: i_all_intra <- $rbx
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 576 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 640 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 704 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 768 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 832 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 896 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 960 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1024 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1088 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 0
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30056(%r13), %r10
.Ltmp3783:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 576 64] 0, $r10
	#DEBUG_VALUE: j <- 1
	movq	30064(%r13), %r9
.Ltmp3784:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 640 64] 0, $r9
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%r10,%r9), %rax
.Ltmp3785:
	#DEBUG_VALUE: j <- 2
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30072(%r13), %r11
.Ltmp3786:
	#DEBUG_VALUE: j <- 3
	movq	30080(%r13), %r8
.Ltmp3787:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 768 64] 0, $r8
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%r11,%r8), %rdx
	addq	%rax, %rdx
.Ltmp3788:
	#DEBUG_VALUE: j <- 4
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30088(%r13), %rdi
.Ltmp3789:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 832 64] 0, $rdi
	#DEBUG_VALUE: j <- 5
	movq	30096(%r13), %rsi
.Ltmp3790:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 896 64] 0, $rsi
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%rdi,%rsi), %r12
.Ltmp3791:
	#DEBUG_VALUE: j <- 6
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30104(%r13), %rcx
.Ltmp3792:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 960 64] 0, $rcx
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%rcx, %r12
	addq	%rdx, %r12
.Ltmp3793:
	#DEBUG_VALUE: j <- 7
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30112(%r13), %rdx
.Ltmp3794:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1024 64] 0, $rdx
	#DEBUG_VALUE: j <- 8
	movq	30120(%r13), %rax
.Ltmp3795:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1088 64] 0, $rax
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%rdx,%rax), %r14
.Ltmp3796:
	#DEBUG_VALUE: j <- 9
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30128(%r13), %r15
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%r15, %r14
.Ltmp3797:
	#DEBUG_VALUE: j <- 10
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30136(%r13), %rbx
.Ltmp3798:
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%rbx, %r14
	addq	%r12, %r14
.Ltmp3799:
	#DEBUG_VALUE: j <- 11
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30144(%r13), %r12
.Ltmp3800:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 704 64] $r11, $r12, $rbx, $r15
	#DEBUG_VALUE: j <- 12
	.loc	0 3056 17                       # x264_src/encoder/encoder.c:3056:17
	addq	%r12, %r14
.Ltmp3801:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] $r14
	.loc	0 3056 17 is_stmt 0             # x264_src/encoder/encoder.c:3056:17
	je	.LBB17_96
.Ltmp3802:
# %bb.95:                               # %if.then787
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 576 64] 0, $r10
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 640 64] 0, $r9
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 704 64] $r11, $r12, $rbx, $r15
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 768 64] 0, $r8
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 832 64] 0, $rdi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 896 64] 0, $rsi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 960 64] 0, $rcx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1024 64] 0, $rdx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1088 64] 0, $rax
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] $r14
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 12
	.loc	0 3053 66 is_stmt 1             # x264_src/encoder/encoder.c:3053:66
	addq	%r15, %r11
.Ltmp3803:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 704 64] $r11, $r12, $rbx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 704 64] undef, undef
	addq	%r12, %rbx
	addq	%r11, %rbx
.Ltmp3804:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 704 64] $rbx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1088 64] $rax
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1024 64] $rdx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 960 64] $rcx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 896 64] $rsi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 832 64] $rdi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 768 64] $r8
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 640 64] $r9
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 576 64] $r10
	.loc	0 3058 27                       # x264_src/encoder/encoder.c:3058:27
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r10, %xmm0
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
	.loc	0 3058 50 is_stmt 0             # x264_src/encoder/encoder.c:3058:50
	mulsd	%xmm10, %xmm0
	.loc	0 3058 60                       # x264_src/encoder/encoder.c:3058:60
	cvtsi2sd	%r14, %xmm8
	.loc	0 3058 58                       # x264_src/encoder/encoder.c:3058:58
	divsd	%xmm8, %xmm0
	.loc	0 3059 27 is_stmt 1             # x264_src/encoder/encoder.c:3059:27
	xorps	%xmm1, %xmm1
	cvtsi2sd	%r9, %xmm1
	.loc	0 3059 50 is_stmt 0             # x264_src/encoder/encoder.c:3059:50
	mulsd	%xmm10, %xmm1
	.loc	0 3059 58                       # x264_src/encoder/encoder.c:3059:58
	divsd	%xmm8, %xmm1
	.loc	0 3060 27 is_stmt 1             # x264_src/encoder/encoder.c:3060:27
	xorps	%xmm2, %xmm2
	cvtsi2sd	%rbx, %xmm2
	.loc	0 3060 50 is_stmt 0             # x264_src/encoder/encoder.c:3060:50
	mulsd	%xmm10, %xmm2
	.loc	0 3060 58                       # x264_src/encoder/encoder.c:3060:58
	divsd	%xmm8, %xmm2
	.loc	0 3061 27 is_stmt 1             # x264_src/encoder/encoder.c:3061:27
	xorps	%xmm3, %xmm3
	cvtsi2sd	%r8, %xmm3
	.loc	0 3061 50 is_stmt 0             # x264_src/encoder/encoder.c:3061:50
	mulsd	%xmm10, %xmm3
	.loc	0 3061 58                       # x264_src/encoder/encoder.c:3061:58
	divsd	%xmm8, %xmm3
	.loc	0 3062 27 is_stmt 1             # x264_src/encoder/encoder.c:3062:27
	xorps	%xmm4, %xmm4
	cvtsi2sd	%rdi, %xmm4
	.loc	0 3062 50 is_stmt 0             # x264_src/encoder/encoder.c:3062:50
	mulsd	%xmm10, %xmm4
	.loc	0 3062 58                       # x264_src/encoder/encoder.c:3062:58
	divsd	%xmm8, %xmm4
	.loc	0 3063 27 is_stmt 1             # x264_src/encoder/encoder.c:3063:27
	xorps	%xmm5, %xmm5
	cvtsi2sd	%rsi, %xmm5
	.loc	0 3063 50 is_stmt 0             # x264_src/encoder/encoder.c:3063:50
	mulsd	%xmm10, %xmm5
	.loc	0 3063 58                       # x264_src/encoder/encoder.c:3063:58
	divsd	%xmm8, %xmm5
	.loc	0 3064 27 is_stmt 1             # x264_src/encoder/encoder.c:3064:27
	cvtsi2sd	%rcx, %xmm6
	.loc	0 3064 50 is_stmt 0             # x264_src/encoder/encoder.c:3064:50
	mulsd	%xmm10, %xmm6
	.loc	0 3064 58                       # x264_src/encoder/encoder.c:3064:58
	divsd	%xmm8, %xmm6
	.loc	0 3065 27 is_stmt 1             # x264_src/encoder/encoder.c:3065:27
	cvtsi2sd	%rdx, %xmm7
	.loc	0 3065 50 is_stmt 0             # x264_src/encoder/encoder.c:3065:50
	mulsd	%xmm10, %xmm7
	.loc	0 3065 58                       # x264_src/encoder/encoder.c:3065:58
	divsd	%xmm8, %xmm7
	.loc	0 3066 27 is_stmt 1             # x264_src/encoder/encoder.c:3066:27
	cvtsi2sd	%rax, %xmm9
	.loc	0 3066 50 is_stmt 0             # x264_src/encoder/encoder.c:3066:50
	mulsd	%xmm10, %xmm9
	.loc	0 3066 58                       # x264_src/encoder/encoder.c:3066:58
	divsd	%xmm8, %xmm9
	.loc	0 3057 17 is_stmt 1             # x264_src/encoder/encoder.c:3057:17
	movsd	%xmm9, (%rsp)
	movl	$.L.str.42, %edx
.Ltmp3805:
	movq	%r13, %rdi
.Ltmp3806:
	movl	$2, %esi
.Ltmp3807:
	movl	$8, %ecx
.Ltmp3808:
	movb	$8, %al
.Ltmp3809:
	callq	x264_log@PLT
.Ltmp3810:
.LBB17_96:                              # %for.inc872
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 64 64] $r14
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 1
	#DEBUG_VALUE: j <- 12
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: j <- 0
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30160(%r13), %r10
.Ltmp3811:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1152 64] 0, $r10
	#DEBUG_VALUE: j <- 1
	movq	30168(%r13), %r9
.Ltmp3812:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1216 64] 0, $r9
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%r10,%r9), %rax
.Ltmp3813:
	#DEBUG_VALUE: j <- 2
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30176(%r13), %r11
.Ltmp3814:
	#DEBUG_VALUE: j <- 3
	movq	30184(%r13), %r8
.Ltmp3815:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1344 64] 0, $r8
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%r11,%r8), %rdx
	addq	%rax, %rdx
.Ltmp3816:
	#DEBUG_VALUE: j <- 4
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30192(%r13), %rdi
.Ltmp3817:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1408 64] 0, $rdi
	#DEBUG_VALUE: j <- 5
	movq	30200(%r13), %rsi
.Ltmp3818:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1472 64] 0, $rsi
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%rdi,%rsi), %r12
.Ltmp3819:
	#DEBUG_VALUE: j <- 6
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30208(%r13), %rcx
.Ltmp3820:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1536 64] 0, $rcx
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%rcx, %r12
	addq	%rdx, %r12
.Ltmp3821:
	#DEBUG_VALUE: j <- 7
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30216(%r13), %rdx
.Ltmp3822:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1600 64] 0, $rdx
	#DEBUG_VALUE: j <- 8
	movq	30224(%r13), %rax
.Ltmp3823:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1664 64] 0, $rax
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	leaq	(%rdx,%rax), %r14
.Ltmp3824:
	#DEBUG_VALUE: j <- 9
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30232(%r13), %r15
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%r15, %r14
.Ltmp3825:
	#DEBUG_VALUE: j <- 10
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30240(%r13), %rbx
	.loc	0 3054 35                       # x264_src/encoder/encoder.c:3054:35
	addq	%rbx, %r14
	addq	%r12, %r14
.Ltmp3826:
	#DEBUG_VALUE: j <- 11
	.loc	0 3053 69                       # x264_src/encoder/encoder.c:3053:69
	movq	30248(%r13), %r12
.Ltmp3827:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1280 64] $r11, $r12, $rbx, $r15
	#DEBUG_VALUE: j <- 12
	.loc	0 3056 17                       # x264_src/encoder/encoder.c:3056:17
	addq	%r12, %r14
.Ltmp3828:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
.Ltmp3829:
	.loc	0 3056 17                       # x264_src/encoder/encoder.c:3056:17
	je	.LBB17_98
.Ltmp3830:
# %bb.97:                               # %if.then787.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1152 64] 0, $r10
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1216 64] 0, $r9
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1280 64] $r11, $r12, $rbx, $r15
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1344 64] 0, $r8
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1408 64] 0, $rdi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1472 64] 0, $rsi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1536 64] 0, $rcx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1600 64] 0, $rdx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1664 64] 0, $rax
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: j <- 12
	.loc	0 3053 66 is_stmt 1             # x264_src/encoder/encoder.c:3053:66
	addq	%r15, %r11
.Ltmp3831:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1280 64] $r11, $r12, $rbx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment 1280 64] undef, undef
	addq	%r12, %rbx
	addq	%r11, %rbx
.Ltmp3832:
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1280 64] $rbx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1664 64] $rax
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1600 64] $rdx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1536 64] $rcx
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1472 64] $rsi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1408 64] $rdi
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1344 64] $r8
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1216 64] $r9
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1152 64] $r10
	.loc	0 3058 27                       # x264_src/encoder/encoder.c:3058:27
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r10, %xmm0
	.loc	0 3058 50 is_stmt 0             # x264_src/encoder/encoder.c:3058:50
	mulsd	%xmm10, %xmm0
	.loc	0 3058 60                       # x264_src/encoder/encoder.c:3058:60
	xorps	%xmm8, %xmm8
	cvtsi2sd	%r14, %xmm8
	.loc	0 3058 58                       # x264_src/encoder/encoder.c:3058:58
	divsd	%xmm8, %xmm0
	.loc	0 3059 27 is_stmt 1             # x264_src/encoder/encoder.c:3059:27
	xorps	%xmm1, %xmm1
	cvtsi2sd	%r9, %xmm1
	.loc	0 3059 50 is_stmt 0             # x264_src/encoder/encoder.c:3059:50
	mulsd	%xmm10, %xmm1
	.loc	0 3059 58                       # x264_src/encoder/encoder.c:3059:58
	divsd	%xmm8, %xmm1
	.loc	0 3060 27 is_stmt 1             # x264_src/encoder/encoder.c:3060:27
	xorps	%xmm2, %xmm2
	cvtsi2sd	%rbx, %xmm2
	.loc	0 3060 50 is_stmt 0             # x264_src/encoder/encoder.c:3060:50
	mulsd	%xmm10, %xmm2
	.loc	0 3060 58                       # x264_src/encoder/encoder.c:3060:58
	divsd	%xmm8, %xmm2
	.loc	0 3061 27 is_stmt 1             # x264_src/encoder/encoder.c:3061:27
	xorps	%xmm3, %xmm3
	cvtsi2sd	%r8, %xmm3
	.loc	0 3061 50 is_stmt 0             # x264_src/encoder/encoder.c:3061:50
	mulsd	%xmm10, %xmm3
	.loc	0 3061 58                       # x264_src/encoder/encoder.c:3061:58
	divsd	%xmm8, %xmm3
	.loc	0 3062 27 is_stmt 1             # x264_src/encoder/encoder.c:3062:27
	xorps	%xmm4, %xmm4
	cvtsi2sd	%rdi, %xmm4
	.loc	0 3062 50 is_stmt 0             # x264_src/encoder/encoder.c:3062:50
	mulsd	%xmm10, %xmm4
	.loc	0 3062 58                       # x264_src/encoder/encoder.c:3062:58
	divsd	%xmm8, %xmm4
	.loc	0 3063 27 is_stmt 1             # x264_src/encoder/encoder.c:3063:27
	xorps	%xmm5, %xmm5
	cvtsi2sd	%rsi, %xmm5
	.loc	0 3063 50 is_stmt 0             # x264_src/encoder/encoder.c:3063:50
	mulsd	%xmm10, %xmm5
	.loc	0 3063 58                       # x264_src/encoder/encoder.c:3063:58
	divsd	%xmm8, %xmm5
	.loc	0 3064 27 is_stmt 1             # x264_src/encoder/encoder.c:3064:27
	xorps	%xmm6, %xmm6
	cvtsi2sd	%rcx, %xmm6
	.loc	0 3064 50 is_stmt 0             # x264_src/encoder/encoder.c:3064:50
	mulsd	%xmm10, %xmm6
	.loc	0 3064 58                       # x264_src/encoder/encoder.c:3064:58
	divsd	%xmm8, %xmm6
	.loc	0 3065 27 is_stmt 1             # x264_src/encoder/encoder.c:3065:27
	xorps	%xmm7, %xmm7
	cvtsi2sd	%rdx, %xmm7
	.loc	0 3065 50 is_stmt 0             # x264_src/encoder/encoder.c:3065:50
	mulsd	%xmm10, %xmm7
	.loc	0 3065 58                       # x264_src/encoder/encoder.c:3065:58
	divsd	%xmm8, %xmm7
	.loc	0 3066 27 is_stmt 1             # x264_src/encoder/encoder.c:3066:27
	xorps	%xmm9, %xmm9
	cvtsi2sd	%rax, %xmm9
	.loc	0 3066 50 is_stmt 0             # x264_src/encoder/encoder.c:3066:50
	mulsd	%xmm10, %xmm9
	.loc	0 3066 58                       # x264_src/encoder/encoder.c:3066:58
	divsd	%xmm8, %xmm9
	.loc	0 3057 17 is_stmt 1             # x264_src/encoder/encoder.c:3057:17
	movsd	%xmm9, (%rsp)
	movl	$.L.str.42, %edx
.Ltmp3833:
	movq	%r13, %rdi
.Ltmp3834:
	movl	$2, %esi
.Ltmp3835:
	movl	$4, %ecx
.Ltmp3836:
	movb	$8, %al
.Ltmp3837:
	callq	x264_log@PLT
.Ltmp3838:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
.Ltmp3839:
.LBB17_98:                              # %for.inc872.1
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] 0
	#DEBUG_VALUE: i <- 2
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: i <- 0
	.loc	0 3070 66 is_stmt 1             # x264_src/encoder/encoder.c:3070:66
	movq	30264(%r13), %rsi
.Ltmp3840:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rsi
	#DEBUG_VALUE: i <- 1
	movq	30272(%r13), %rdx
	.loc	0 3071 31                       # x264_src/encoder/encoder.c:3071:31
	leaq	(%rsi,%rdx), %r8
.Ltmp3841:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $r8
	#DEBUG_VALUE: i <- 2
	.loc	0 3070 66                       # x264_src/encoder/encoder.c:3070:66
	movq	30280(%r13), %rcx
.Ltmp3842:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] undef
	#DEBUG_VALUE: i <- 3
	movq	30288(%r13), %rax
	.loc	0 3071 31                       # x264_src/encoder/encoder.c:3071:31
	leaq	(%rcx,%rax), %rdi
	addq	%r8, %rdi
.Ltmp3843:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rdi
	#DEBUG_VALUE: i <- 4
	.loc	0 3070 66                       # x264_src/encoder/encoder.c:3070:66
	movq	30296(%r13), %r9
.Ltmp3844:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] undef
	#DEBUG_VALUE: i <- 5
	movq	30304(%r13), %r8
	.loc	0 3071 31                       # x264_src/encoder/encoder.c:3071:31
	addq	%r9, %rdi
	addq	%r8, %rdi
.Ltmp3845:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rdi
	#DEBUG_VALUE: i <- 6
	.loc	0 3070 66                       # x264_src/encoder/encoder.c:3070:66
	movq	30312(%r13), %r10
.Ltmp3846:
	#DEBUG_VALUE: i <- 7
	.loc	0 3073 13                       # x264_src/encoder/encoder.c:3073:13
	addq	%r10, %rdi
.Ltmp3847:
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rdi
	.loc	0 3073 13 is_stmt 0             # x264_src/encoder/encoder.c:3073:13
	je	.LBB17_100
.Ltmp3848:
# %bb.99:                               # %if.then904
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 192 64] $rdi
	#DEBUG_VALUE: i <- 7
	.loc	0 3070 63 is_stmt 1             # x264_src/encoder/encoder.c:3070:63
	addq	%r9, %rsi
	addq	%r10, %r8
	addq	%rsi, %r8
.Ltmp3849:
	.loc	0 3075 23                       # x264_src/encoder/encoder.c:3075:23
	xorps	%xmm0, %xmm0
	cvtsi2sd	%r8, %xmm0
	.loc	0 3075 46 is_stmt 0             # x264_src/encoder/encoder.c:3075:46
	mulsd	%xmm10, %xmm0
	.loc	0 3075 56                       # x264_src/encoder/encoder.c:3075:56
	xorps	%xmm4, %xmm4
	cvtsi2sd	%rdi, %xmm4
	.loc	0 3075 54                       # x264_src/encoder/encoder.c:3075:54
	divsd	%xmm4, %xmm0
	.loc	0 3076 23 is_stmt 1             # x264_src/encoder/encoder.c:3076:23
	xorps	%xmm1, %xmm1
	cvtsi2sd	%rdx, %xmm1
	.loc	0 3076 46 is_stmt 0             # x264_src/encoder/encoder.c:3076:46
	mulsd	%xmm10, %xmm1
	.loc	0 3076 54                       # x264_src/encoder/encoder.c:3076:54
	divsd	%xmm4, %xmm1
	.loc	0 3077 23 is_stmt 1             # x264_src/encoder/encoder.c:3077:23
	xorps	%xmm2, %xmm2
	cvtsi2sd	%rcx, %xmm2
	.loc	0 3077 46 is_stmt 0             # x264_src/encoder/encoder.c:3077:46
	mulsd	%xmm10, %xmm2
	.loc	0 3077 54                       # x264_src/encoder/encoder.c:3077:54
	divsd	%xmm4, %xmm2
	.loc	0 3078 23 is_stmt 1             # x264_src/encoder/encoder.c:3078:23
	xorps	%xmm3, %xmm3
	cvtsi2sd	%rax, %xmm3
	.loc	0 3078 46 is_stmt 0             # x264_src/encoder/encoder.c:3078:46
	mulsd	%xmm10, %xmm3
	.loc	0 3078 54                       # x264_src/encoder/encoder.c:3078:54
	divsd	%xmm4, %xmm3
	.loc	0 3074 13 is_stmt 1             # x264_src/encoder/encoder.c:3074:13
	movl	$.L.str.43, %edx
	movq	%r13, %rdi
.Ltmp3850:
	movl	$2, %esi
	movb	$4, %al
	callq	x264_log@PLT
.Ltmp3851:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
.Ltmp3852:
.LBB17_100:                             # %if.end933
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- $ebp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	movq	%rbp, 144(%rsp)                 # 8-byte Spill
.Ltmp3853:
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	.loc	0 3080 46 is_stmt 1             # x264_src/encoder/encoder.c:3080:46
	cmpl	$2, 396(%r13)
	.loc	0 3080 68 is_stmt 0             # x264_src/encoder/encoder.c:3080:68
	jne	.LBB17_103
.Ltmp3854:
# %bb.101:                              # %land.lhs.true938
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	.loc	0 3080 71                       # x264_src/encoder/encoder.c:3080:71
	movl	27416(%r13), %eax
	.loc	0 3080 107                      # x264_src/encoder/encoder.c:3080:107
	testl	%eax, %eax
.Ltmp3855:
	.loc	0 3080 13                       # x264_src/encoder/encoder.c:3080:13
	jle	.LBB17_103
.Ltmp3856:
# %bb.102:                              # %if.then944
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	.loc	0 3082 23 is_stmt 1             # x264_src/encoder/encoder.c:3082:23
	xorps	%xmm0, %xmm0
	cvtsi2sdl	30384(%r13), %xmm0
	.loc	0 3082 42 is_stmt 0             # x264_src/encoder/encoder.c:3082:42
	mulsd	.LCPI17_10(%rip), %xmm0
	.loc	0 3082 52                       # x264_src/encoder/encoder.c:3082:52
	xorps	%xmm1, %xmm1
	cvtsi2sd	%eax, %xmm1
	.loc	0 3082 50                       # x264_src/encoder/encoder.c:3082:50
	divsd	%xmm1, %xmm0
	.loc	0 3081 13 is_stmt 1             # x264_src/encoder/encoder.c:3081:13
	movl	$.L.str.44, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$1, %al
	callq	x264_log@PLT
.Ltmp3857:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
.Ltmp3858:
.LBB17_103:                             # %if.end954
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_fragment 0 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_fragment 128 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_fragment 448 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 32, DW_OP_deref, DW_OP_LLVM_fragment 512 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_fragment 576 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:i_mb_count_size <- [DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_fragment 640 64] $rsp
	#DEBUG_VALUE: x264_encoder_close:b_print_pcm <- [DW_OP_plus_uconst 64, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: sum_pred_modes <- [DW_OP_LLVM_fragment 128 64] $r14
	movss	60(%rsp), %xmm0                 # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	divss	.LCPI17_12(%rip), %xmm0
.Ltmp3859:
	#DEBUG_VALUE: f_bitrate <- $xmm0
	#DEBUG_VALUE: i_list <- 0
	movss	%xmm0, 60(%rsp)                 # 4-byte Spill
	movq	%r13, 96(%rsp)                  # 8-byte Spill
.Ltmp3860:
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	leaq	28880(%r13), %rax
	movq	%rax, 104(%rsp)                 # 8-byte Spill
	movb	$1, %al
	xorl	%r15d, %r15d
	jmp	.LBB17_104
.Ltmp3861:
	.p2align	4, 0x90
.LBB17_110:                             # %for.cond.cleanup964
                                        #   in Loop: Header=BB17_104 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	movl	$1, %r15d
.Ltmp3862:
	.loc	0 3084 9 is_stmt 1              # x264_src/encoder/encoder.c:3084:9
	testb	$1, 92(%rsp)                    # 1-byte Folded Reload
	je	.LBB17_111
.Ltmp3863:
.LBB17_104:                             # %for.cond961.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB17_105 Depth 2
                                        #       Child Loop BB17_107 Depth 3
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- $r15
	#DEBUG_VALUE: i_slice <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	%eax, 92(%rsp)                  # 4-byte Spill
	movq	%r15, 168(%rsp)                 # 8-byte Spill
.Ltmp3864:
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 3085 13 is_stmt 1             # x264_src/encoder/encoder.c:3085:13
	shlq	$8, %r15
	movq	104(%rsp), %rax                 # 8-byte Reload
	addq	%r15, %rax
	movq	%rax, 160(%rsp)                 # 8-byte Spill
	movb	$1, %al
	xorl	%ebx, %ebx
	jmp	.LBB17_105
.Ltmp3865:
	.p2align	4, 0x90
.LBB17_109:                             # %cleanup
                                        #   in Loop: Header=BB17_105 Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_plus_uconst 1, DW_OP_stack_value] $rsp
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movl	$1, %ebx
	.loc	0 3085 13                       # x264_src/encoder/encoder.c:3085:13
	testb	$1, 64(%rsp)                    # 1-byte Folded Reload
	movl	$0, %eax
	je	.LBB17_110
.Ltmp3866:
.LBB17_105:                             # %for.cond969.preheader
                                        #   Parent Loop BB17_104 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB17_107 Depth 3
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- $rbx
	#DEBUG_VALUE: i_max <- 0
	#DEBUG_VALUE: i_den <- undef
	#DEBUG_VALUE: i <- 1
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movl	%eax, 64(%rsp)                  # 4-byte Spill
	movq	%rbx, 32(%rsp)                  # 8-byte Spill
.Ltmp3867:
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	.loc	0 3091 25 is_stmt 1             # x264_src/encoder/encoder.c:3091:25
	shlq	$9, %rbx
	movq	104(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rbx), %rdx
	movq	8(%r15,%rdx), %rax
.Ltmp3868:
	#DEBUG_VALUE: i <- 2
	movq	16(%r15,%rdx), %rcx
	xorl	%r13d, %r13d
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	testq	%rax, %rax
	setne	%r13b
.Ltmp3869:
	#DEBUG_VALUE: i_max <- undef
	.loc	0 0 25 is_stmt 0                # x264_src/encoder/encoder.c:0:25
	movq	%rcx, 24(%rsp)                  # 8-byte Spill
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	testq	%rcx, %rcx
.Ltmp3870:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$2, %eax
	cmovnel	%eax, %r13d
.Ltmp3871:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 3
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	24(%r15,%rdx), %rax
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	testq	%rax, %rax
.Ltmp3872:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$3, %eax
	cmovnel	%eax, %r13d
.Ltmp3873:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 4
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	32(%r15,%rdx), %rax
	movq	%rax, 40(%rsp)                  # 8-byte Spill
	testq	%rax, %rax
.Ltmp3874:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$4, %eax
	cmovnel	%eax, %r13d
.Ltmp3875:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 5
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	40(%r15,%rdx), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	testq	%rax, %rax
.Ltmp3876:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$5, %eax
	cmovnel	%eax, %r13d
.Ltmp3877:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 6
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	48(%r15,%rdx), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	testq	%rax, %rax
.Ltmp3878:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$6, %eax
	cmovnel	%eax, %r13d
.Ltmp3879:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 7
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	56(%r15,%rdx), %rbp
	testq	%rbp, %rbp
.Ltmp3880:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$7, %eax
	cmovnel	%eax, %r13d
.Ltmp3881:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 8
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	64(%r15,%rdx), %r9
	testq	%r9, %r9
.Ltmp3882:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$8, %eax
	cmovnel	%eax, %r13d
.Ltmp3883:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 9
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	72(%r15,%rdx), %rcx
	testq	%rcx, %rcx
.Ltmp3884:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$9, %eax
	cmovnel	%eax, %r13d
.Ltmp3885:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 10
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	80(%r15,%rdx), %r11
	testq	%r11, %r11
.Ltmp3886:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$10, %eax
	cmovnel	%eax, %r13d
.Ltmp3887:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 11
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	88(%r15,%rdx), %rax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	testq	%rax, %rax
.Ltmp3888:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$11, %eax
	cmovnel	%eax, %r13d
.Ltmp3889:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 12
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	96(%r15,%rdx), %rax
	movq	%rax, 280(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3890:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$12, %eax
	cmovnel	%eax, %r13d
.Ltmp3891:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 13
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	104(%r15,%rdx), %rax
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3892:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$13, %eax
	cmovnel	%eax, %r13d
.Ltmp3893:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 14
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	112(%r15,%rdx), %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3894:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$14, %eax
	cmovnel	%eax, %r13d
.Ltmp3895:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 15
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	120(%r15,%rdx), %r14
	testq	%r14, %r14
.Ltmp3896:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$15, %eax
	cmovnel	%eax, %r13d
.Ltmp3897:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 16
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	128(%r15,%rdx), %rax
	movq	%rax, 256(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3898:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$16, %eax
	cmovnel	%eax, %r13d
.Ltmp3899:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 17
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	136(%r15,%rdx), %rax
	movq	%rax, 248(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3900:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$17, %eax
	cmovnel	%eax, %r13d
.Ltmp3901:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 18
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	144(%r15,%rdx), %rax
	movq	%rax, 240(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3902:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$18, %eax
	cmovnel	%eax, %r13d
.Ltmp3903:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 19
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	152(%r15,%rdx), %rax
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3904:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$19, %eax
	cmovnel	%eax, %r13d
.Ltmp3905:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 20
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	160(%r15,%rdx), %rax
	movq	%rax, 224(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
.Ltmp3906:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$20, %eax
	cmovnel	%eax, %r13d
.Ltmp3907:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 21
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	168(%r15,%rdx), %rax
	testq	%rax, %rax
.Ltmp3908:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$21, %esi
	cmovnel	%esi, %r13d
.Ltmp3909:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 22
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	176(%r15,%rdx), %rsi
	movq	%rsi, 216(%rsp)                 # 8-byte Spill
	testq	%rsi, %rsi
.Ltmp3910:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$22, %esi
	cmovnel	%esi, %r13d
.Ltmp3911:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 23
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	184(%r15,%rdx), %rsi
	movq	%rsi, 208(%rsp)                 # 8-byte Spill
	testq	%rsi, %rsi
.Ltmp3912:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$23, %esi
	cmovnel	%esi, %r13d
.Ltmp3913:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 24
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	192(%r15,%rdx), %rsi
	movq	%rsi, 200(%rsp)                 # 8-byte Spill
	testq	%rsi, %rsi
.Ltmp3914:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$24, %esi
	cmovnel	%esi, %r13d
.Ltmp3915:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 25
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	200(%r15,%rdx), %rsi
	movq	%rsi, 192(%rsp)                 # 8-byte Spill
	testq	%rsi, %rsi
.Ltmp3916:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$25, %esi
	cmovnel	%esi, %r13d
.Ltmp3917:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 26
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	208(%r15,%rdx), %rsi
	movq	%rsi, 184(%rsp)                 # 8-byte Spill
	testq	%rsi, %rsi
.Ltmp3918:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$26, %esi
	cmovnel	%esi, %r13d
.Ltmp3919:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 27
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	216(%r15,%rdx), %rsi
	testq	%rsi, %rsi
.Ltmp3920:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$27, %edi
	cmovnel	%edi, %r13d
.Ltmp3921:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 28
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	224(%r15,%rdx), %r12
	testq	%r12, %r12
.Ltmp3922:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$28, %edi
	cmovnel	%edi, %r13d
.Ltmp3923:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 29
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	232(%r15,%rdx), %rdi
	movq	%rdi, 176(%rsp)                 # 8-byte Spill
	testq	%rdi, %rdi
.Ltmp3924:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$29, %edi
	cmovnel	%edi, %r13d
.Ltmp3925:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 30
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	240(%r15,%rdx), %r8
	testq	%r8, %r8
.Ltmp3926:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$30, %edi
	cmovnel	%edi, %r13d
.Ltmp3927:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 31
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movq	248(%r15,%rdx), %rdi
	testq	%rdi, %rdi
.Ltmp3928:
	.loc	0 3091 25                       # x264_src/encoder/encoder.c:3091:25
	movl	$31, %r10d
	cmovnel	%r10d, %r13d
.Ltmp3929:
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i <- 32
	.loc	0 3096 27 is_stmt 1             # x264_src/encoder/encoder.c:3096:27
	testl	%r13d, %r13d
.Ltmp3930:
	.loc	0 3096 21 is_stmt 0             # x264_src/encoder/encoder.c:3096:21
	je	.LBB17_109
.Ltmp3931:
# %bb.106:                              # %for.body1005.lr.ph
                                        #   in Loop: Header=BB17_105 Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_max <- $r13d
	#DEBUG_VALUE: i_den <- undef
	.loc	0 0 21                          # x264_src/encoder/encoder.c:0:21
	movq	8(%rsp), %r10                   # 8-byte Reload
	addq	(%r15,%rdx), %r10
.Ltmp3932:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 264, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_plus_uconst 272, DW_OP_deref, DW_OP_LLVM_arg 4, DW_OP_plus_uconst 280, DW_OP_deref, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 72, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_arg 11, DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_arg 12, DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_arg 13, DW_OP_plus_uconst 48, DW_OP_deref, DW_OP_LLVM_arg 14, DW_OP_plus_uconst 24, DW_OP_deref, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rsp, $r14, $rsp, $rsp, $rsp, $rsp, $r11, $rcx, $r9, $rbp, $rsp, $rsp, $rsp, $rsp, $rsp, $r10
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	48(%rsp), %rdx                  # 8-byte Reload
	addq	24(%rsp), %rdx                  # 8-byte Folded Reload
	addq	%r10, %rdx
.Ltmp3933:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 240, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 248, DW_OP_deref, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_plus_uconst 264, DW_OP_deref, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 272, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_plus_uconst 280, DW_OP_deref, DW_OP_LLVM_arg 7, DW_OP_plus_uconst 72, DW_OP_deref, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_plus_uconst 16, DW_OP_deref, DW_OP_LLVM_arg 13, DW_OP_plus_uconst 80, DW_OP_deref, DW_OP_LLVM_arg 14, DW_OP_plus_uconst 40, DW_OP_deref, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp, $rsp, $r14, $rsp, $rsp, $rsp, $rsp, $r11, $rcx, $r9, $rbp, $rsp, $rsp, $rsp, $rdx
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	movq	%rbp, %rsi
	movq	%r11, %rbp
	movq	80(%rsp), %r11                  # 8-byte Reload
	addq	40(%rsp), %r11                  # 8-byte Folded Reload
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	16(%rsp), %r10                  # 8-byte Reload
	addq	%r11, %r10
	addq	%rdx, %r10
.Ltmp3934:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 224, DW_OP_deref, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 232, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_plus_uconst 240, DW_OP_deref, DW_OP_LLVM_arg 4, DW_OP_plus_uconst 248, DW_OP_deref, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_plus_uconst 264, DW_OP_deref, DW_OP_LLVM_arg 8, DW_OP_plus_uconst 272, DW_OP_deref, DW_OP_LLVM_arg 9, DW_OP_plus_uconst 280, DW_OP_deref, DW_OP_LLVM_arg 10, DW_OP_plus_uconst 72, DW_OP_deref, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsp, $rsp, $rsp, $rsp, $rsp, $r14, $rsp, $rsp, $rsp, $rsp, $rbp, $rcx, $r9, $rsi, $r10
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	addq	%rsi, %r9
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	addq	%r9, %rcx
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	addq	%rcx, %rbp
	addq	%r10, %rbp
.Ltmp3935:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_plus_uconst 192, DW_OP_deref, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 200, DW_OP_deref, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 224, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_plus_uconst 232, DW_OP_deref, DW_OP_LLVM_arg 7, DW_OP_plus_uconst 240, DW_OP_deref, DW_OP_LLVM_arg 8, DW_OP_plus_uconst 248, DW_OP_deref, DW_OP_LLVM_arg 9, DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_plus_uconst 264, DW_OP_deref, DW_OP_LLVM_arg 12, DW_OP_plus_uconst 272, DW_OP_deref, DW_OP_LLVM_arg 13, DW_OP_plus_uconst 280, DW_OP_deref, DW_OP_LLVM_arg 14, DW_OP_plus_uconst 72, DW_OP_deref, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rsp, $rsp, $rsp, $rsp, $rax, $rsp, $rsp, $rsp, $rsp, $rsp, $r14, $rsp, $rsp, $rsp, $rsp, $rbp
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	280(%rsp), %rcx                 # 8-byte Reload
	addq	72(%rsp), %rcx                  # 8-byte Folded Reload
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	272(%rsp), %rdx                 # 8-byte Reload
	addq	%rcx, %rdx
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	264(%rsp), %rcx                 # 8-byte Reload
	addq	%rdx, %rcx
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	addq	%rcx, %r14
	addq	%rbp, %r14
.Ltmp3936:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_arg 4, DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 192, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_plus_uconst 200, DW_OP_deref, DW_OP_LLVM_arg 7, DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_LLVM_arg 8, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_plus_uconst 224, DW_OP_deref, DW_OP_LLVM_arg 11, DW_OP_plus_uconst 232, DW_OP_deref, DW_OP_LLVM_arg 12, DW_OP_plus_uconst 240, DW_OP_deref, DW_OP_LLVM_arg 13, DW_OP_plus_uconst 248, DW_OP_deref, DW_OP_LLVM_arg 14, DW_OP_plus_uconst 256, DW_OP_deref, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r8, $rsp, $r12, $rsp, $rsp, $rsp, $rsp, $rsp, $rsp, $rax, $rsp, $rsp, $rsp, $rsp, $rsp, $r14
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_LLVM_arg 15, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	248(%rsp), %rcx                 # 8-byte Reload
	addq	256(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp3937:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_LLVM_arg 14, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	240(%rsp), %rdx                 # 8-byte Reload
	addq	%rcx, %rdx
.Ltmp3938:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_LLVM_arg 13, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	232(%rsp), %rcx                 # 8-byte Reload
	addq	%rdx, %rcx
.Ltmp3939:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_LLVM_arg 12, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	224(%rsp), %rdx                 # 8-byte Reload
	addq	%rcx, %rdx
.Ltmp3940:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_LLVM_arg 10, DW_OP_LLVM_arg 11, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	addq	%rdx, %rax
	addq	%r14, %rax
.Ltmp3941:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_plus_uconst 8, DW_OP_deref, DW_OP_LLVM_arg 5, DW_OP_plus_uconst 184, DW_OP_deref, DW_OP_LLVM_arg 6, DW_OP_plus_uconst 192, DW_OP_deref, DW_OP_LLVM_arg 7, DW_OP_plus_uconst 200, DW_OP_deref, DW_OP_LLVM_arg 8, DW_OP_plus_uconst 208, DW_OP_deref, DW_OP_LLVM_arg 9, DW_OP_plus_uconst 216, DW_OP_deref, DW_OP_LLVM_arg 10, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $r8, $rsp, $r12, $rsp, $rsp, $rsp, $rsp, $rsp, $rsp, $rax
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_LLVM_arg 9, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	208(%rsp), %rcx                 # 8-byte Reload
	addq	216(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp3942:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_LLVM_arg 8, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef, undef
	movq	200(%rsp), %rdx                 # 8-byte Reload
	addq	%rcx, %rdx
.Ltmp3943:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_LLVM_arg 7, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef, undef
	movq	192(%rsp), %rcx                 # 8-byte Reload
	addq	%rdx, %rcx
.Ltmp3944:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_LLVM_arg 6, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef, undef
	movq	184(%rsp), %rdx                 # 8-byte Reload
	addq	%rcx, %rdx
.Ltmp3945:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_LLVM_arg 5, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef, undef
	movq	8(%rsp), %rcx                   # 8-byte Reload
	addq	%rdx, %rcx
.Ltmp3946:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	addq	%rcx, %r12
	addq	%rax, %r12
.Ltmp3947:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_plus_uconst 176, DW_OP_deref, DW_OP_LLVM_arg 3, DW_OP_plus, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $r8, $rsp, $r12
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	addq	176(%rsp), %r8                  # 8-byte Folded Reload
.Ltmp3948:
	#DEBUG_VALUE: i_den <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	addq	%r8, %rdi
	addq	%r12, %rdi
.Ltmp3949:
	#DEBUG_VALUE: i_den <- $rdi
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: p <- [DW_OP_plus_uconst 288, DW_OP_stack_value] $rsp
	cvtsi2sd	%rdi, %xmm0
	movsd	%xmm0, 8(%rsp)                  # 8-byte Spill
.Ltmp3950:
	.loc	0 3098 17 is_stmt 1             # x264_src/encoder/encoder.c:3098:17
	incl	%r13d
.Ltmp3951:
	addq	160(%rsp), %rbx                 # 8-byte Folded Reload
	xorl	%r14d, %r14d
	leaq	288(%rsp), %r12
.Ltmp3952:
	.p2align	4, 0x90
.LBB17_107:                             # %for.body1005
                                        #   Parent Loop BB17_104 Depth=1
                                        #     Parent Loop BB17_105 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: p <- $r12
	.loc	0 3099 57                       # x264_src/encoder/encoder.c:3099:57
	xorps	%xmm0, %xmm0
	cvtsi2sdq	(%rbx,%r14,8), %xmm0
	.loc	0 3099 55 is_stmt 0             # x264_src/encoder/encoder.c:3099:55
	mulsd	.LCPI17_10(%rip), %xmm0
	.loc	0 3099 100                      # x264_src/encoder/encoder.c:3099:100
	divsd	8(%rsp), %xmm0                  # 8-byte Folded Reload
	.loc	0 3099 26                       # x264_src/encoder/encoder.c:3099:26
	movl	$.L.str.31, %esi
	movq	%r12, %rdi
	movb	$1, %al
	callq	sprintf@PLT
.Ltmp3953:
	.loc	0 3099 23                       # x264_src/encoder/encoder.c:3099:23
	cltq
	addq	%rax, %r12
.Ltmp3954:
	#DEBUG_VALUE: p <- $r12
	.loc	0 3098 46 is_stmt 1             # x264_src/encoder/encoder.c:3098:46
	incq	%r14
.Ltmp3955:
	#DEBUG_VALUE: i <- $r14
	.loc	0 3098 35 is_stmt 0             # x264_src/encoder/encoder.c:3098:35
	cmpq	%r14, %r13
.Ltmp3956:
	.loc	0 3098 17                       # x264_src/encoder/encoder.c:3098:17
	jne	.LBB17_107
.Ltmp3957:
# %bb.108:                              # %for.cond.cleanup1004
                                        #   in Loop: Header=BB17_105 Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: i_list <- [DW_OP_plus_uconst 168, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: i_slice <- [DW_OP_plus_uconst 32, DW_OP_deref_size 8, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: p <- $r12
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movq	32(%rsp), %rax                  # 8-byte Reload
	.loc	0 3100 64 is_stmt 1             # x264_src/encoder/encoder.c:3100:64
	movsbl	.L.str.46(%rax), %ecx
	.loc	0 3100 17 is_stmt 0             # x264_src/encoder/encoder.c:3100:17
	movl	$.L.str.45, %edx
	movq	96(%rsp), %rdi                  # 8-byte Reload
	movl	$2, %esi
	movq	168(%rsp), %r8                  # 8-byte Reload
                                        # kill: def $r8d killed $r8d killed $r8
	leaq	288(%rsp), %r9
	xorl	%eax, %eax
	callq	x264_log@PLT
.Ltmp3958:
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
	jmp	.LBB17_109
.Ltmp3959:
.LBB17_111:                             # %for.cond.cleanup958
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	movq	96(%rsp), %r13                  # 8-byte Reload
.Ltmp3960:
	.loc	0 3103 13 is_stmt 1             # x264_src/encoder/encoder.c:3103:13
	cmpl	$0, 480(%r13)
	movq	144(%rsp), %rbx                 # 8-byte Reload
	cvtsi2sd	%ebx, %xmm5
.Ltmp3961:
	.loc	0 3103 13 is_stmt 0             # x264_src/encoder/encoder.c:3103:13
	je	.LBB17_113
.Ltmp3962:
# %bb.112:                              # %if.then1041
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	.loc	0 3107 23 is_stmt 1             # x264_src/encoder/encoder.c:3107:23
	movsd	27808(%r13), %xmm0              # xmm0 = mem[0],zero
	addsd	27792(%r13), %xmm0
	addsd	27800(%r13), %xmm0
	.loc	0 3107 53 is_stmt 0             # x264_src/encoder/encoder.c:3107:53
	divsd	%xmm5, %xmm0
	.loc	0 3105 13 is_stmt 1             # x264_src/encoder/encoder.c:3105:13
	movl	$.L.str.47, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$1, %al
	movsd	%xmm5, 8(%rsp)                  # 8-byte Spill
	callq	x264_log@PLT
.Ltmp3963:
	.loc	0 0 13 is_stmt 0                # x264_src/encoder/encoder.c:0:13
	movsd	8(%rsp), %xmm5                  # 8-byte Reload
                                        # xmm5 = mem[0],zero
	movsd	.LCPI17_10(%rip), %xmm10        # xmm10 = [1.0E+2,0.0E+0]
.Ltmp3964:
.LBB17_113:                             # %if.end1054
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	.loc	0 3109 13 is_stmt 1             # x264_src/encoder/encoder.c:3109:13
	cmpl	$0, 476(%r13)
.Ltmp3965:
	.loc	0 3109 13 is_stmt 0             # x264_src/encoder/encoder.c:3109:13
	je	.LBB17_117
.Ltmp3966:
# %bb.114:                              # %if.then1059
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	.loc	0 3113 23 is_stmt 1             # x264_src/encoder/encoder.c:3113:23
	movsd	27688(%r13), %xmm4              # xmm4 = mem[0],zero
	addsd	27672(%r13), %xmm4
	addsd	27680(%r13), %xmm4
	.loc	0 3113 53 is_stmt 0             # x264_src/encoder/encoder.c:3113:53
	divsd	%xmm5, %xmm4
	.loc	0 3114 23 is_stmt 1             # x264_src/encoder/encoder.c:3114:23
	movsd	27728(%r13), %xmm1              # xmm1 = mem[0],zero
	addsd	27712(%r13), %xmm1
	addsd	27720(%r13), %xmm1
	.loc	0 3114 53 is_stmt 0             # x264_src/encoder/encoder.c:3114:53
	divsd	%xmm5, %xmm1
	.loc	0 3115 23 is_stmt 1             # x264_src/encoder/encoder.c:3115:23
	movsd	27768(%r13), %xmm2              # xmm2 = mem[0],zero
	addsd	27752(%r13), %xmm2
	addsd	27760(%r13), %xmm2
	.loc	0 3115 53 is_stmt 0             # x264_src/encoder/encoder.c:3115:53
	divsd	%xmm5, %xmm2
	.loc	0 3116 23 is_stmt 1             # x264_src/encoder/encoder.c:3116:23
	movsd	27648(%r13), %xmm3              # xmm3 = mem[0],zero
	addsd	27632(%r13), %xmm3
	addsd	27640(%r13), %xmm3
	.loc	0 3116 54 is_stmt 0             # x264_src/encoder/encoder.c:3116:54
	divsd	%xmm5, %xmm3
	.loc	0 3117 34 is_stmt 1             # x264_src/encoder/encoder.c:3117:34
	movq	27592(%r13), %rax
	addq	27608(%r13), %rax
	addq	27600(%r13), %rax
	.loc	0 3117 64 is_stmt 0             # x264_src/encoder/encoder.c:3117:64
	movl	%ebx, %ecx
	.loc	0 3117 72                       # x264_src/encoder/encoder.c:3117:72
	imulq	152(%rsp), %rcx                 # 8-byte Folded Reload
.Ltmp3967:
	#DEBUG_VALUE: x264_psnr:i_size <- $rcx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $rax
	.loc	0 58 20 is_stmt 1               # x264_src/encoder/encoder.c:58:20
	xorps	%xmm0, %xmm0
	cvtsi2sd	%rax, %xmm0
	.loc	0 58 55 is_stmt 0               # x264_src/encoder/encoder.c:58:55
	xorps	%xmm5, %xmm5
	cvtsi2sd	%rcx, %xmm5
	.loc	0 58 53                         # x264_src/encoder/encoder.c:58:53
	mulsd	.LCPI17_0(%rip), %xmm5
	.loc	0 58 34                         # x264_src/encoder/encoder.c:58:34
	divsd	%xmm5, %xmm0
.Ltmp3968:
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 34                          # x264_src/encoder/encoder.c:0:34
	movsd	.LCPI17_2(%rip), %xmm5          # xmm5 = [1.0E-10,0.0E+0]
.Ltmp3969:
	.loc	0 59 15 is_stmt 1               # x264_src/encoder/encoder.c:59:15
	ucomisd	%xmm0, %xmm5
.Ltmp3970:
	.loc	0 59 9 is_stmt 0                # x264_src/encoder/encoder.c:59:9
	jae	.LBB17_116
.Ltmp3971:
# %bb.115:                              # %if.end.i1653
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	#DEBUG_VALUE: x264_psnr:i_size <- $rcx
	#DEBUG_VALUE: x264_psnr:i_sqe <- $rax
	#DEBUG_VALUE: x264_psnr:f_mse <- $xmm0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movsd	%xmm4, 8(%rsp)                  # 8-byte Spill
	movsd	%xmm1, 64(%rsp)                 # 8-byte Spill
	movsd	%xmm2, 32(%rsp)                 # 8-byte Spill
	movsd	%xmm3, 24(%rsp)                 # 8-byte Spill
	.loc	0 62 20 is_stmt 1               # x264_src/encoder/encoder.c:62:20
	callq	log10@PLT
.Ltmp3972:
	.loc	0 0 20 is_stmt 0                # x264_src/encoder/encoder.c:0:20
	movsd	24(%rsp), %xmm3                 # 8-byte Reload
                                        # xmm3 = mem[0],zero
	movsd	32(%rsp), %xmm2                 # 8-byte Reload
                                        # xmm2 = mem[0],zero
	movsd	64(%rsp), %xmm1                 # 8-byte Reload
                                        # xmm1 = mem[0],zero
	movsd	8(%rsp), %xmm4                  # 8-byte Reload
                                        # xmm4 = mem[0],zero
	.loc	0 62 18                         # x264_src/encoder/encoder.c:62:18
	mulsd	.LCPI17_3(%rip), %xmm0
	.loc	0 62 12                         # x264_src/encoder/encoder.c:62:12
	cvtsd2ss	%xmm0, %xmm0
.Ltmp3973:
	.loc	0 3117 23 is_stmt 1             # x264_src/encoder/encoder.c:3117:23
	xorps	%xmm10, %xmm10
	cvtss2sd	%xmm0, %xmm10
.Ltmp3974:
.LBB17_116:                             # %x264_psnr.exit1657
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	.loc	0 0 23 is_stmt 0                # x264_src/encoder/encoder.c:0:23
	movss	60(%rsp), %xmm0                 # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	.loc	0 3118 23 is_stmt 1             # x264_src/encoder/encoder.c:3118:23
	xorps	%xmm5, %xmm5
	cvtss2sd	%xmm0, %xmm5
	.loc	0 3111 13                       # x264_src/encoder/encoder.c:3111:13
	movl	$.L.str.48, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movapd	%xmm4, %xmm0
	movapd	%xmm10, %xmm4
	movb	$6, %al
	callq	x264_log@PLT
.Ltmp3975:
	.loc	0 3119 9                        # x264_src/encoder/encoder.c:3119:9
	jmp	.LBB17_118
.Ltmp3976:
.LBB17_117:                             # %if.else1128
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: i_count <- [DW_OP_plus_uconst 144, DW_OP_deref] $rsp
	#DEBUG_VALUE: f_bitrate <- [DW_OP_plus_uconst 60, DW_OP_deref_size 16, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 256 320] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1728 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1792 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1856 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1920 64] 0
	#DEBUG_VALUE: fixed_pred_modes <- [DW_OP_LLVM_fragment 1984 320] 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movss	60(%rsp), %xmm0                 # 4-byte Reload
                                        # xmm0 = mem[0],zero,zero,zero
	.loc	0 3121 56 is_stmt 1             # x264_src/encoder/encoder.c:3121:56
	cvtss2sd	%xmm0, %xmm0
	.loc	0 3121 13 is_stmt 0             # x264_src/encoder/encoder.c:3121:13
	movl	$.L.str.49, %edx
	movq	%r13, %rdi
	movl	$2, %esi
	movb	$1, %al
	callq	x264_log@PLT
.Ltmp3977:
.LBB17_118:                             # %if.end1131
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3125 5 is_stmt 1              # x264_src/encoder/encoder.c:3125:5
	movq	%r13, %rdi
	callq	x264_ratecontrol_delete@PLT
.Ltmp3978:
	.loc	0 3128 21                       # x264_src/encoder/encoder.c:3128:21
	movq	568(%r13), %rdi
	.loc	0 3128 9 is_stmt 0              # x264_src/encoder/encoder.c:3128:9
	testq	%rdi, %rdi
.Ltmp3979:
	.loc	0 3128 9                        # x264_src/encoder/encoder.c:3128:9
	je	.LBB17_120
.Ltmp3980:
# %bb.119:                              # %if.then1134
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3129 9 is_stmt 1              # x264_src/encoder/encoder.c:3129:9
	callq	free@PLT
.Ltmp3981:
.LBB17_120:                             # %if.end1138
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3130 21                       # x264_src/encoder/encoder.c:3130:21
	movq	584(%r13), %rdi
	.loc	0 3130 9 is_stmt 0              # x264_src/encoder/encoder.c:3130:9
	testq	%rdi, %rdi
.Ltmp3982:
	.loc	0 3130 9                        # x264_src/encoder/encoder.c:3130:9
	je	.LBB17_122
.Ltmp3983:
# %bb.121:                              # %if.then1142
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3131 9 is_stmt 1              # x264_src/encoder/encoder.c:3131:9
	callq	free@PLT
.Ltmp3984:
.LBB17_122:                             # %if.end1146
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3133 5                        # x264_src/encoder/encoder.c:3133:5
	movq	%r13, %rdi
	callq	x264_cqm_delete@PLT
.Ltmp3985:
	.loc	0 3134 19                       # x264_src/encoder/encoder.c:3134:19
	movq	1832(%r13), %rdi
	.loc	0 3134 5 is_stmt 0              # x264_src/encoder/encoder.c:3134:5
	callq	x264_free@PLT
.Ltmp3986:
	.loc	0 3135 5 is_stmt 1              # x264_src/encoder/encoder.c:3135:5
	movq	%r13, %rdi
	callq	x264_analyse_free_costs@PLT
.Ltmp3987:
	.loc	0 3137 28                       # x264_src/encoder/encoder.c:3137:28
	cmpl	$2, 1852(%r13)
.Ltmp3988:
	.loc	0 3137 9 is_stmt 0              # x264_src/encoder/encoder.c:3137:9
	jl	.LBB17_124
.Ltmp3989:
# %bb.123:                              # %if.then1150
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3138 26 is_stmt 1             # x264_src/encoder/encoder.c:3138:26
	movslq	1744(%r13), %rax
	.loc	0 3138 13 is_stmt 0             # x264_src/encoder/encoder.c:3138:13
	movq	704(%r13,%rax,8), %r13
.Ltmp3990:
	#DEBUG_VALUE: x264_encoder_close:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
.LBB17_124:                             # %if.end1155
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_encoder_close:h <- $r13
	.loc	0 3141 29 is_stmt 1             # x264_src/encoder/encoder.c:3141:29
	movq	14424(%r13), %rdi
	.loc	0 3141 5 is_stmt 0              # x264_src/encoder/encoder.c:3141:5
	callq	x264_frame_delete_list@PLT
.Ltmp3991:
	.loc	0 3142 29 is_stmt 1             # x264_src/encoder/encoder.c:3142:29
	movq	14432(%r13), %rdi
	.loc	0 3142 5 is_stmt 0              # x264_src/encoder/encoder.c:3142:5
	callq	x264_frame_delete_list@PLT
.Ltmp3992:
	.loc	0 3143 39 is_stmt 1             # x264_src/encoder/encoder.c:3143:39
	movq	14416(%r13), %rdi
	.loc	0 3143 5 is_stmt 0              # x264_src/encoder/encoder.c:3143:5
	callq	x264_frame_delete_list@PLT
.Ltmp3993:
	.loc	0 3144 39 is_stmt 1             # x264_src/encoder/encoder.c:3144:39
	movq	14440(%r13), %rdi
	.loc	0 3144 5 is_stmt 0              # x264_src/encoder/encoder.c:3144:5
	callq	x264_frame_delete_list@PLT
.Ltmp3994:
	.loc	0 3146 9 is_stmt 1              # x264_src/encoder/encoder.c:3146:9
	movq	704(%r13), %rbx
.Ltmp3995:
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	.loc	0 3148 27                       # x264_src/encoder/encoder.c:3148:27
	movslq	4(%rbx), %r14
	testq	%r14, %r14
.Ltmp3996:
	#DEBUG_VALUE: i <- undef
	.loc	0 3148 5 is_stmt 0              # x264_src/encoder/encoder.c:3148:5
	jg	.LBB17_125
.Ltmp3997:
.LBB17_137:                             # %for.cond.cleanup1172
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3173 1 epilogue_begin is_stmt 1 # x264_src/encoder/encoder.c:3173:1
	addq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp3998:
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3999:
	.p2align	4, 0x90
.LBB17_135:                             # %if.end1204
                                        #   in Loop: Header=BB17_125 Depth=1
	.cfi_def_cfa_offset 544
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_plus_uconst 14688, DW_OP_stack_value] $r12
	.loc	0 3166 41                       # x264_src/encoder/encoder.c:3166:41
	movq	704(%rbx,%r15,8), %rdi
	.loc	0 3166 13 is_stmt 0             # x264_src/encoder/encoder.c:3166:13
	callq	x264_macroblock_cache_free@PLT
.Ltmp4000:
.LBB17_136:                             # %if.end1208
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3168 38 is_stmt 1             # x264_src/encoder/encoder.c:3168:38
	movq	704(%rbx,%r15,8), %rdi
	.loc	0 3168 9 is_stmt 0              # x264_src/encoder/encoder.c:3168:9
	xorl	%esi, %esi
	callq	x264_macroblock_thread_free@PLT
.Ltmp4001:
	.loc	0 3169 20 is_stmt 1             # x264_src/encoder/encoder.c:3169:20
	movq	704(%rbx,%r15,8), %rax
	.loc	0 3169 38 is_stmt 0             # x264_src/encoder/encoder.c:3169:38
	movq	1784(%rax), %rdi
	.loc	0 3169 9                        # x264_src/encoder/encoder.c:3169:9
	callq	x264_free@PLT
.Ltmp4002:
	.loc	0 3170 20 is_stmt 1             # x264_src/encoder/encoder.c:3170:20
	movq	704(%rbx,%r15,8), %rax
	.loc	0 3170 38 is_stmt 0             # x264_src/encoder/encoder.c:3170:38
	movq	1768(%rax), %rdi
	.loc	0 3170 9                        # x264_src/encoder/encoder.c:3170:9
	callq	x264_free@PLT
.Ltmp4003:
	.loc	0 3171 20 is_stmt 1             # x264_src/encoder/encoder.c:3171:20
	movq	704(%rbx,%r15,8), %rdi
	.loc	0 3171 9 is_stmt 0              # x264_src/encoder/encoder.c:3171:9
	callq	x264_free@PLT
.Ltmp4004:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	0 3148 44 is_stmt 1             # x264_src/encoder/encoder.c:3148:44
	cmpq	$1, %r14
	movq	%r15, %r14
.Ltmp4005:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14
	.loc	0 3148 5 is_stmt 0              # x264_src/encoder/encoder.c:3148:5
	jle	.LBB17_137
.Ltmp4006:
.LBB17_125:                             # %for.body1173
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB17_129 Depth 2
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3148 0                        # x264_src/encoder/encoder.c:3148:0
	leaq	-1(%r14), %r15
.Ltmp4007:
	.loc	0 3152 14 is_stmt 1             # x264_src/encoder/encoder.c:3152:14
	cmpl	$0, 8(%rbx)
	.loc	0 3152 40 is_stmt 0             # x264_src/encoder/encoder.c:3152:40
	je	.LBB17_127
.Ltmp4008:
# %bb.126:                              # %for.body1173
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	testq	%r15, %r15
	jne	.LBB17_136
.Ltmp4009:
.LBB17_127:                             # %if.then1179
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3154 26 is_stmt 1             # x264_src/encoder/encoder.c:3154:26
	movq	704(%rbx,%r15,8), %r12
.Ltmp4010:
	#DEBUG_VALUE: frame <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $r12
	.loc	0 3154 58 is_stmt 0             # x264_src/encoder/encoder.c:3154:58
	movq	14448(%r12), %rax
.Ltmp4011:
	.loc	0 3154 13                       # x264_src/encoder/encoder.c:3154:13
	testq	%rax, %rax
	je	.LBB17_133
.Ltmp4012:
# %bb.128:                              # %for.body1187.preheader
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_plus_uconst 14448, DW_OP_stack_value] $r12
	addq	$14456, %r12                    # imm = 0x3878
.Ltmp4013:
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	jmp	.LBB17_129
.Ltmp4014:
	.p2align	4, 0x90
.LBB17_131:                             # %for.inc1193
                                        #   in Loop: Header=BB17_129 Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_constu 8, DW_OP_minus, DW_OP_stack_value] $r12
	#DEBUG_VALUE: frame <- $r12
	.loc	0 3154 58                       # x264_src/encoder/encoder.c:3154:58
	movq	(%r12), %rax
.Ltmp4015:
	.loc	0 3154 13                       # x264_src/encoder/encoder.c:3154:13
	addq	$8, %r12
.Ltmp4016:
	testq	%rax, %rax
	je	.LBB17_132
.Ltmp4017:
.LBB17_129:                             # %for.body1187
                                        #   Parent Loop BB17_125 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_constu 8, DW_OP_minus, DW_OP_stack_value] $r12
	.loc	0 3157 44 is_stmt 1             # x264_src/encoder/encoder.c:3157:44
	decl	15600(%rax)
.Ltmp4018:
	.loc	0 3158 22                       # x264_src/encoder/encoder.c:3158:22
	movq	-8(%r12), %rdi
	.loc	0 3158 49 is_stmt 0             # x264_src/encoder/encoder.c:3158:49
	cmpl	$0, 15600(%rdi)
.Ltmp4019:
	.loc	0 3158 21                       # x264_src/encoder/encoder.c:3158:21
	jne	.LBB17_131
.Ltmp4020:
# %bb.130:                              # %if.then1191
                                        #   in Loop: Header=BB17_129 Depth=2
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_constu 8, DW_OP_minus, DW_OP_stack_value] $r12
	.loc	0 3159 21 is_stmt 1             # x264_src/encoder/encoder.c:3159:21
	callq	x264_frame_delete@PLT
.Ltmp4021:
	.loc	0 0 21 is_stmt 0                # x264_src/encoder/encoder.c:0:21
	jmp	.LBB17_131
.Ltmp4022:
	.p2align	4, 0x90
.LBB17_132:                             # %for.end1194.loopexit
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	.loc	0 3161 22 is_stmt 1             # x264_src/encoder/encoder.c:3161:22
	movq	704(%rbx,%r15,8), %r12
.Ltmp4023:
.LBB17_133:                             # %for.end1194
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_plus_uconst 14688, DW_OP_stack_value] $r12
	.loc	0 3163 14                       # x264_src/encoder/encoder.c:3163:14
	movq	14688(%r12), %rax
	.loc	0 3163 40 is_stmt 0             # x264_src/encoder/encoder.c:3163:40
	decl	15600(%rax)
.Ltmp4024:
	.loc	0 3164 18 is_stmt 1             # x264_src/encoder/encoder.c:3164:18
	movq	14688(%r12), %rdi
	.loc	0 3164 45 is_stmt 0             # x264_src/encoder/encoder.c:3164:45
	cmpl	$0, 15600(%rdi)
.Ltmp4025:
	.loc	0 3164 17                       # x264_src/encoder/encoder.c:3164:17
	jne	.LBB17_135
.Ltmp4026:
# %bb.134:                              # %if.then1203
                                        #   in Loop: Header=BB17_125 Depth=1
	#DEBUG_VALUE: x264_encoder_close:h <- $rbx
	#DEBUG_VALUE: x264_encoder_close:i_yuv_size <- [DW_OP_plus_uconst 152, DW_OP_deref] $rsp
	#DEBUG_VALUE: frame <- [DW_OP_plus_uconst 14688, DW_OP_stack_value] $r12
	.loc	0 3165 17 is_stmt 1             # x264_src/encoder/encoder.c:3165:17
	callq	x264_frame_delete@PLT
.Ltmp4027:
	.loc	0 0 17 is_stmt 0                # x264_src/encoder/encoder.c:0:17
	jmp	.LBB17_135
.Ltmp4028:
.Lfunc_end17:
	.size	x264_encoder_close, .Lfunc_end17-x264_encoder_close
	.cfi_endproc
	.file	29 "/usr/include" "stdlib.h" md5 0x02258fad21adf111bb9df9825e61954a
                                        # -- End function
	.globl	x264_encoder_delayed_frames     # -- Begin function x264_encoder_delayed_frames
	.p2align	4, 0x90
	.type	x264_encoder_delayed_frames,@function
x264_encoder_delayed_frames:            # @x264_encoder_delayed_frames
.Lfunc_begin18:
	.loc	0 3179 0 is_stmt 1              # x264_src/encoder/encoder.c:3179:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
.Ltmp4029:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	.loc	0 3181 12 prologue_end          # x264_src/encoder/encoder.c:3181:12
	movslq	1852(%rdi), %rcx
	xorl	%eax, %eax
	cmpq	$2, %rcx
.Ltmp4030:
	.loc	0 3181 9 is_stmt 0              # x264_src/encoder/encoder.c:3181:9
	jl	.LBB18_11
.Ltmp4031:
# %bb.1:                                # %for.cond.preheader
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	.loc	0 3183 9 is_stmt 1              # x264_src/encoder/encoder.c:3183:9
	cmpl	$3, %ecx
	ja	.LBB18_7
.Ltmp4032:
# %bb.2:
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	xorl	%edx, %edx
	xorl	%eax, %eax
	jmp	.LBB18_3
.Ltmp4033:
.LBB18_7:                               # %vector.ph
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 3183 9                        # x264_src/encoder/encoder.c:3183:9
	movl	%ecx, %edx
	andl	$2147483644, %edx               # imm = 0x7FFFFFFC
	movl	%ecx, %esi
	shrl	$2, %esi
	andl	$536870911, %esi                # imm = 0x1FFFFFFF
	shlq	$5, %rsi
	xorl	%r9d, %r9d
	xorl	%r10d, %r10d
	xorl	%r8d, %r8d
	xorl	%r11d, %r11d
	xorl	%eax, %eax
.Ltmp4034:
	.p2align	4, 0x90
.LBB18_8:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 3184 31 is_stmt 1             # x264_src/encoder/encoder.c:3184:31
	movq	704(%rdi,%r9), %rbx
	movq	712(%rdi,%r9), %r14
	movq	720(%rdi,%r9), %r15
	movq	728(%rdi,%r9), %r12
	.loc	0 3184 28 is_stmt 0             # x264_src/encoder/encoder.c:3184:28
	addl	1740(%rbx), %r10d
	addl	1740(%r14), %r8d
	addl	1740(%r15), %r11d
	addl	1740(%r12), %eax
	.loc	0 3183 50 is_stmt 1             # x264_src/encoder/encoder.c:3183:50
	addq	$32, %r9
	cmpq	%r9, %rsi
	jne	.LBB18_8
.Ltmp4035:
# %bb.9:                                # %middle.block
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 3183 9 is_stmt 0              # x264_src/encoder/encoder.c:3183:9
	addl	%r10d, %r8d
	addl	%r11d, %eax
	addl	%r8d, %eax
	cmpq	%rcx, %rdx
	je	.LBB18_10
.Ltmp4036:
.LBB18_3:                               # %for.body.preheader
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- 0
	#DEBUG_VALUE: i <- 0
	movq	%rcx, %r8
	movq	%rdx, %rsi
	andq	$3, %r8
	je	.LBB18_5
.Ltmp4037:
	.p2align	4, 0x90
.LBB18_4:                               # %for.body.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3184 31 is_stmt 1             # x264_src/encoder/encoder.c:3184:31
	movq	704(%rdi,%rsi,8), %r9
	.loc	0 3184 28 is_stmt 0             # x264_src/encoder/encoder.c:3184:28
	addl	1740(%r9), %eax
.Ltmp4038:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3183 50 is_stmt 1             # x264_src/encoder/encoder.c:3183:50
	incq	%rsi
.Ltmp4039:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 3183 9 is_stmt 0              # x264_src/encoder/encoder.c:3183:9
	decq	%r8
	jne	.LBB18_4
.Ltmp4040:
.LBB18_5:                               # %for.body.prol.loopexit
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	subq	%rcx, %rdx
	cmpq	$-4, %rdx
	ja	.LBB18_10
.Ltmp4041:
	.p2align	4, 0x90
.LBB18_6:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: i <- $rsi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3184 31 is_stmt 1             # x264_src/encoder/encoder.c:3184:31
	movq	704(%rdi,%rsi,8), %rdx
.Ltmp4042:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	movq	712(%rdi,%rsi,8), %r8
	.loc	0 3184 28 is_stmt 0             # x264_src/encoder/encoder.c:3184:28
	addl	1740(%rdx), %eax
.Ltmp4043:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	addl	1740(%r8), %eax
.Ltmp4044:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rsi
	.loc	0 3184 31                       # x264_src/encoder/encoder.c:3184:31
	movq	720(%rdi,%rsi,8), %rdx
	.loc	0 3184 28                       # x264_src/encoder/encoder.c:3184:28
	addl	1740(%rdx), %eax
.Ltmp4045:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rsi
	.loc	0 3184 31                       # x264_src/encoder/encoder.c:3184:31
	movq	728(%rdi,%rsi,8), %rdx
	.loc	0 3184 28                       # x264_src/encoder/encoder.c:3184:28
	addl	1740(%rdx), %eax
.Ltmp4046:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3183 50 is_stmt 1             # x264_src/encoder/encoder.c:3183:50
	addq	$4, %rsi
.Ltmp4047:
	#DEBUG_VALUE: i <- $rsi
	.loc	0 3183 27 is_stmt 0             # x264_src/encoder/encoder.c:3183:27
	cmpq	%rsi, %rcx
.Ltmp4048:
	.loc	0 3183 9                        # x264_src/encoder/encoder.c:3183:9
	jne	.LBB18_6
.Ltmp4049:
.LBB18_10:                              # %for.cond.cleanup
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	.loc	0 3185 26 is_stmt 1             # x264_src/encoder/encoder.c:3185:26
	movslq	1744(%rdi), %rcx
	.loc	0 3185 13 is_stmt 0             # x264_src/encoder/encoder.c:3185:13
	movq	704(%rdi,%rcx,8), %rdi
.Ltmp4050:
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
.LBB18_11:                              # %if.end
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: i <- 0
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	movq	14416(%rdi), %rcx
.Ltmp4051:
	.loc	0 3187 5 is_stmt 1              # x264_src/encoder/encoder.c:3187:5
	cmpq	$0, (%rcx)
	je	.LBB18_14
.Ltmp4052:
# %bb.12:                               # %for.body11.preheader
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: i <- 0
	addq	$8, %rcx
.Ltmp4053:
	.p2align	4, 0x90
.LBB18_13:                              # %for.body11
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3188 23                       # x264_src/encoder/encoder.c:3188:23
	incl	%eax
.Ltmp4054:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	#DEBUG_VALUE: i <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_minus, DW_OP_consts 8, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 3187 5                        # x264_src/encoder/encoder.c:3187:5
	cmpq	$0, (%rcx)
	leaq	8(%rcx), %rcx
	jne	.LBB18_13
.Ltmp4055:
.LBB18_14:                              # %for.cond.cleanup10
	#DEBUG_VALUE: x264_encoder_delayed_frames:h <- $rdi
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3192 26                       # x264_src/encoder/encoder.c:3192:26
	movq	33328(%rdi), %rcx
	.loc	0 3192 50 is_stmt 0             # x264_src/encoder/encoder.c:3192:50
	addl	36(%rcx), %eax
.Ltmp4056:
	.loc	0 3192 78                       # x264_src/encoder/encoder.c:3192:78
	addl	68(%rcx), %eax
	.loc	0 3192 20                       # x264_src/encoder/encoder.c:3192:20
	addl	100(%rcx), %eax
.Ltmp4057:
	#DEBUG_VALUE: x264_encoder_delayed_frames:delayed_frames <- $eax
	.loc	0 3196 5 epilogue_begin is_stmt 1 # x264_src/encoder/encoder.c:3196:5
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp4058:
.Lfunc_end18:
	.size	x264_encoder_delayed_frames, .Lfunc_end18-x264_encoder_delayed_frames
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_slice_header_init
	.type	x264_slice_header_init,@function
x264_slice_header_init:                 # @x264_slice_header_init
.Lfunc_begin19:
	.loc	0 103 0                         # x264_src/encoder/encoder.c:103:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rcx
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	movq	%rcx, %rax
.Ltmp4059:
	.loc	0 107 13 prologue_end           # x264_src/encoder/encoder.c:107:13
	movq	%rdx, (%rsi)
	.loc	0 108 13                        # x264_src/encoder/encoder.c:108:13
	movq	%rcx, 8(%rsi)
	.loc	0 110 21                        # x264_src/encoder/encoder.c:110:21
	movl	$0, 20(%rsi)
	.loc	0 111 29                        # x264_src/encoder/encoder.c:111:29
	movl	16368(%rdi), %ecx
.Ltmp4060:
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	.loc	0 111 40 is_stmt 0              # x264_src/encoder/encoder.c:111:40
	decl	%ecx
	.loc	0 111 21                        # x264_src/encoder/encoder.c:111:21
	movl	%ecx, 24(%rsi)
	.loc	0 112 28 is_stmt 1              # x264_src/encoder/encoder.c:112:28
	movl	(%rax), %ecx
	.loc	0 112 21 is_stmt 0              # x264_src/encoder/encoder.c:112:21
	movl	%ecx, 28(%rsi)
	.loc	0 114 21 is_stmt 1              # x264_src/encoder/encoder.c:114:21
	movl	%r9d, 32(%rsi)
	.loc	0 116 28                        # x264_src/encoder/encoder.c:116:28
	movl	136(%rdi), %ecx
	.loc	0 116 17 is_stmt 0              # x264_src/encoder/encoder.c:116:17
	movl	%ecx, 36(%rsi)
	.loc	0 117 21 is_stmt 1              # x264_src/encoder/encoder.c:117:21
	movq	$0, 40(%rsi)
	.loc	0 120 22                        # x264_src/encoder/encoder.c:120:22
	movl	%r8d, 48(%rsi)
	.loc	0 124 28                        # x264_src/encoder/encoder.c:124:28
	xorps	%xmm0, %xmm0
	movups	%xmm0, 52(%rsi)
	movl	$0, 68(%rsi)
	.loc	0 130 50                        # x264_src/encoder/encoder.c:130:50
	movl	404(%rdi), %ecx
	.loc	0 130 67 is_stmt 0              # x264_src/encoder/encoder.c:130:67
	cmpl	$3, %ecx
	.loc	0 131 33 is_stmt 1              # x264_src/encoder/encoder.c:131:33
	jne	.LBB19_1
.Ltmp4061:
# %bb.2:                                # %land.lhs.true
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 131 36 is_stmt 0              # x264_src/encoder/encoder.c:131:36
	cmpl	$0, 100(%rdi)
	.loc	0 132 33 is_stmt 1              # x264_src/encoder/encoder.c:132:33
	je	.LBB19_3
.Ltmp4062:
# %bb.4:                                # %land.rhs
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 33 is_stmt 0                # x264_src/encoder/encoder.c:0:33
	movb	$1, %r8b
.Ltmp4063:
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	.loc	0 132 38                        # x264_src/encoder/encoder.c:132:38
	cmpl	$0, 560(%rdi)
	.loc	0 132 63                        # x264_src/encoder/encoder.c:132:63
	jne	.LBB19_6
.Ltmp4064:
# %bb.5:                                # %lor.rhs
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 132 66                        # x264_src/encoder/encoder.c:132:66
	cmpl	$0, 576(%rdi)
	sete	%r8b
	.loc	0 132 33                        # x264_src/encoder/encoder.c:132:33
	movzbl	%r8b, %r10d
	.loc	0 130 31 is_stmt 1              # x264_src/encoder/encoder.c:130:31
	movl	%r10d, 25820(%rdi)
.Ltmp4065:
	.loc	0 134 10                        # x264_src/encoder/encoder.c:134:10
	cmpl	$0, 25816(%rdi)
	jne	.LBB19_14
	jmp	.LBB19_7
.Ltmp4066:
.LBB19_1:
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 10 is_stmt 0                # x264_src/encoder/encoder.c:0:10
	xorl	%r8d, %r8d
.Ltmp4067:
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
.LBB19_6:                               # %land.end
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 132 33 is_stmt 1              # x264_src/encoder/encoder.c:132:33
	movzbl	%r8b, %r10d
	.loc	0 130 31                        # x264_src/encoder/encoder.c:130:31
	movl	%r10d, 25820(%rdi)
.Ltmp4068:
	.loc	0 134 10                        # x264_src/encoder/encoder.c:134:10
	cmpl	$0, 25816(%rdi)
	.loc	0 134 35 is_stmt 0              # x264_src/encoder/encoder.c:134:35
	jne	.LBB19_14
.Ltmp4069:
.LBB19_7:                               # %land.lhs.true18
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 134 49                        # x264_src/encoder/encoder.c:134:49
	cmpl	$1, 16(%rsi)
.Ltmp4070:
	.loc	0 134 9                         # x264_src/encoder/encoder.c:134:9
	jne	.LBB19_14
.Ltmp4071:
# %bb.8:                                # %if.then
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 136 42 is_stmt 1              # x264_src/encoder/encoder.c:136:42
	movq	14704(%rdi), %r10
	.loc	0 136 13 is_stmt 0              # x264_src/encoder/encoder.c:136:13
	movq	14864(%rdi), %r11
	.loc	0 136 26                        # x264_src/encoder/encoder.c:136:26
	movl	96(%r11), %r11d
	.loc	0 136 39                        # x264_src/encoder/encoder.c:136:39
	cmpl	(%r10), %r11d
.Ltmp4072:
	.loc	0 136 13                        # x264_src/encoder/encoder.c:136:13
	jne	.LBB19_12
.Ltmp4073:
# %bb.9:                                # %if.then24
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 138 17 is_stmt 1              # x264_src/encoder/encoder.c:138:17
	testb	%r8b, %r8b
	je	.LBB19_11
.Ltmp4074:
# %bb.10:                               # %if.then28
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 139 50                        # x264_src/encoder/encoder.c:139:50
	movl	30372(%rdi), %ecx
	.loc	0 139 76 is_stmt 0              # x264_src/encoder/encoder.c:139:76
	cmpl	30368(%rdi), %ecx
	setg	%cl
	.loc	0 139 17                        # x264_src/encoder/encoder.c:139:17
	jmp	.LBB19_13
.Ltmp4075:
.LBB19_3:
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 17                          # x264_src/encoder/encoder.c:0:17
	xorl	%r8d, %r8d
.Ltmp4076:
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	.loc	0 132 33 is_stmt 1              # x264_src/encoder/encoder.c:132:33
	movzbl	%r8b, %r10d
	.loc	0 130 31                        # x264_src/encoder/encoder.c:130:31
	movl	%r10d, 25820(%rdi)
.Ltmp4077:
	.loc	0 134 10                        # x264_src/encoder/encoder.c:134:10
	cmpl	$0, 25816(%rdi)
	jne	.LBB19_14
	jmp	.LBB19_7
.Ltmp4078:
.LBB19_12:                              # %if.else39
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 145 39                        # x264_src/encoder/encoder.c:145:39
	movl	$0, 25820(%rdi)
	movb	$1, %cl
	jmp	.LBB19_13
.Ltmp4079:
.LBB19_11:                              # %if.else
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 141 82                        # x264_src/encoder/encoder.c:141:82
	cmpl	$1, %ecx
	sete	%cl
.Ltmp4080:
.LBB19_13:                              # %if.end44.sink.split
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 82 is_stmt 0                # x264_src/encoder/encoder.c:0:82
	movzbl	%cl, %ecx
	movl	%ecx, 72(%rsi)
.Ltmp4081:
.LBB19_14:                              # %if.end44
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	movl	8(%rsp), %r8d
	movabsq	$4294967296, %rcx               # imm = 0x100000000
	.loc	0 151 32 is_stmt 1              # x264_src/encoder/encoder.c:151:32
	movq	%rcx, 76(%rsi)
	.loc	0 153 33                        # x264_src/encoder/encoder.c:153:33
	movl	$1, 84(%rsi)
	.loc	0 155 40                        # x264_src/encoder/encoder.c:155:40
	movl	15016(%rdi), %ecx
	.loc	0 155 38 is_stmt 0              # x264_src/encoder/encoder.c:155:38
	movl	%ecx, 88(%rsi)
	.loc	0 156 40 is_stmt 1              # x264_src/encoder/encoder.c:156:40
	movl	15020(%rdi), %r10d
	.loc	0 156 38 is_stmt 0              # x264_src/encoder/encoder.c:156:38
	movl	%r10d, 92(%rsi)
.Ltmp4082:
	.loc	0 160 9 is_stmt 1               # x264_src/encoder/encoder.c:160:9
	testl	%ecx, %ecx
.Ltmp4083:
	.loc	0 160 9 is_stmt 0               # x264_src/encoder/encoder.c:160:9
	je	.LBB19_18
.Ltmp4084:
# %bb.15:                               # %for.cond.preheader
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	#DEBUG_VALUE: pred_frame_num <- $r9d
	#DEBUG_VALUE: i <- 0
	.loc	0 163 27 is_stmt 1              # x264_src/encoder/encoder.c:163:27
	cmpl	$0, 14696(%rdi)
.Ltmp4085:
	.loc	0 163 9 is_stmt 0               # x264_src/encoder/encoder.c:163:9
	jle	.LBB19_18
.Ltmp4086:
# %bb.16:                               # %for.body.lr.ph
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	#DEBUG_VALUE: pred_frame_num <- $r9d
	#DEBUG_VALUE: i <- 0
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	xorl	%r10d, %r10d
.Ltmp4087:
	.p2align	4, 0x90
.LBB19_17:                              # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	#DEBUG_VALUE: pred_frame_num <- $r9d
	#DEBUG_VALUE: pred_frame_num <- $r9d
	#DEBUG_VALUE: i <- $r10
	.loc	0 165 24 is_stmt 1              # x264_src/encoder/encoder.c:165:24
	movq	14704(%rdi,%r10,8), %rcx
	.loc	0 165 37 is_stmt 0              # x264_src/encoder/encoder.c:165:37
	movl	68(%rcx), %ecx
	.loc	0 165 49                        # x264_src/encoder/encoder.c:165:49
	subl	%r9d, %ecx
.Ltmp4088:
	#DEBUG_VALUE: diff <- $ecx
	.loc	0 166 55 is_stmt 1              # x264_src/encoder/encoder.c:166:55
	xorl	%r9d, %r9d
.Ltmp4089:
	testl	%ecx, %ecx
	setg	%r9b
	.loc	0 167 49                        # x264_src/encoder/encoder.c:167:49
	movl	%ecx, %r11d
	negl	%r11d
	cmovsl	%ecx, %r11d
	.loc	0 166 46                        # x264_src/encoder/encoder.c:166:46
	movl	%r9d, 96(%rsi,%r10,8)
	.loc	0 167 59                        # x264_src/encoder/encoder.c:167:59
	addl	$2147483647, %r11d              # imm = 0x7FFFFFFF
	.loc	0 167 78 is_stmt 0              # x264_src/encoder/encoder.c:167:78
	movzbl	24(%rdx), %ecx
.Ltmp4090:
	.loc	0 167 100                       # x264_src/encoder/encoder.c:167:100
	movl	$-1, %r9d
	shll	%cl, %r9d
	notl	%r9d
	.loc	0 167 64                        # x264_src/encoder/encoder.c:167:64
	andl	%r11d, %r9d
	.loc	0 167 46                        # x264_src/encoder/encoder.c:167:46
	movl	%r9d, 100(%rsi,%r10,8)
	.loc	0 168 30 is_stmt 1              # x264_src/encoder/encoder.c:168:30
	movq	14704(%rdi,%r10,8), %rcx
	.loc	0 168 43 is_stmt 0              # x264_src/encoder/encoder.c:168:43
	movl	68(%rcx), %r9d
.Ltmp4091:
	#DEBUG_VALUE: pred_frame_num <- $r9d
	.loc	0 163 41 is_stmt 1              # x264_src/encoder/encoder.c:163:41
	incq	%r10
.Ltmp4092:
	#DEBUG_VALUE: i <- $r10
	.loc	0 163 32 is_stmt 0              # x264_src/encoder/encoder.c:163:32
	movslq	14696(%rdi), %rcx
	.loc	0 163 27                        # x264_src/encoder/encoder.c:163:27
	cmpq	%rcx, %r10
.Ltmp4093:
	.loc	0 163 9                         # x264_src/encoder/encoder.c:163:9
	jl	.LBB19_17
.Ltmp4094:
.LBB19_18:                              # %if.end72
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- $rax
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 172 35 is_stmt 1              # x264_src/encoder/encoder.c:172:35
	movl	132(%rdi), %ecx
	.loc	0 172 26 is_stmt 0              # x264_src/encoder/encoder.c:172:26
	movl	%ecx, 6632(%rsi)
	.loc	0 174 14 is_stmt 1              # x264_src/encoder/encoder.c:174:14
	movl	%r8d, 6636(%rsi)
	.loc	0 175 27                        # x264_src/encoder/encoder.c:175:27
	movl	%r8d, %ecx
	subl	36(%rax), %ecx
	.loc	0 175 20 is_stmt 0              # x264_src/encoder/encoder.c:175:20
	movl	%ecx, 6640(%rsi)
	.loc	0 176 25 is_stmt 1              # x264_src/encoder/encoder.c:176:25
	movq	$0, 6644(%rsi)
	movl	$1, %eax
.Ltmp4095:
	#DEBUG_VALUE: x264_slice_header_init:pps <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_slice_header_init:deblock_thresh <- undef
	.loc	0 181 9                         # x264_src/encoder/encoder.c:181:9
	cmpl	$0, 116(%rdi)
	.loc	0 181 36 is_stmt 0              # x264_src/encoder/encoder.c:181:36
	je	.LBB19_22
.Ltmp4096:
# %bb.19:                               # %land.lhs.true81
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 179 37 is_stmt 1              # x264_src/encoder/encoder.c:179:37
	movl	120(%rdi), %edx
.Ltmp4097:
	#DEBUG_VALUE: x264_slice_header_init:sps <- [DW_OP_LLVM_entry_value 1] $rdx
	movl	124(%rdi), %ecx
	cmpl	%ecx, %edx
	cmovll	%edx, %ecx
.Ltmp4098:
	#DEBUG_VALUE: x264_slice_header_init:deblock_thresh <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_constu 1, DW_OP_shl, DW_OP_plus, DW_OP_stack_value] $r8d, $ecx
	#DEBUG_VALUE: x264_slice_header_init:deblock_thresh <- undef
	#DEBUG_VALUE: x264_slice_header_init:deblock_thresh <- undef
	.loc	0 181 40                        # x264_src/encoder/encoder.c:181:40
	cmpl	$0, 25808(%rdi)
	.loc	0 181 60 is_stmt 0              # x264_src/encoder/encoder.c:181:60
	jne	.LBB19_21
.Ltmp4099:
# %bb.20:                               # %land.lhs.true81
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	leal	(%r8,%rcx,2), %ecx
.Ltmp4100:
	#DEBUG_VALUE: x264_slice_header_init:deblock_thresh <- $ecx
	.loc	0 181 60                        # x264_src/encoder/encoder.c:181:60
	cmpl	$16, %ecx
	jl	.LBB19_22
.Ltmp4101:
.LBB19_21:                              # %if.then86
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 182 54 is_stmt 1              # x264_src/encoder/encoder.c:182:54
	xorl	%eax, %eax
	cmpl	$0, 8(%rdi)
	setne	%al
	.loc	0 182 47 is_stmt 0              # x264_src/encoder/encoder.c:182:47
	addl	%eax, %eax
.Ltmp4102:
.LBB19_22:                              # %if.end91
	#DEBUG_VALUE: x264_slice_header_init:h <- $rdi
	#DEBUG_VALUE: x264_slice_header_init:sh <- $rsi
	#DEBUG_VALUE: x264_slice_header_init:sps <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: x264_slice_header_init:pps <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: x264_slice_header_init:i_idr_pic_id <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: x264_slice_header_init:i_frame <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: x264_slice_header_init:i_qp <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: x264_slice_header_init:param <- $rdi
	.loc	0 0 0                           # x264_src/encoder/encoder.c:0:0
	movl	%eax, 6652(%rsi)
.Ltmp4103:
	.loc	0 185 36 is_stmt 1              # x264_src/encoder/encoder.c:185:36
	movl	120(%rdi), %eax
	.loc	0 185 64 is_stmt 0              # x264_src/encoder/encoder.c:185:64
	addl	%eax, %eax
	.loc	0 185 27                        # x264_src/encoder/encoder.c:185:27
	movl	%eax, 6656(%rsi)
	.loc	0 186 32 is_stmt 1              # x264_src/encoder/encoder.c:186:32
	movl	124(%rdi), %eax
	.loc	0 186 57 is_stmt 0              # x264_src/encoder/encoder.c:186:57
	addl	%eax, %eax
	.loc	0 186 23                        # x264_src/encoder/encoder.c:186:23
	movl	%eax, 6660(%rsi)
	.loc	0 187 1 is_stmt 1               # x264_src/encoder/encoder.c:187:1
	retq
.Ltmp4104:
.Lfunc_end19:
	.size	x264_slice_header_init, .Lfunc_end19-x264_slice_header_init
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function x264_fdec_filter_row
	.type	x264_fdec_filter_row,@function
x264_fdec_filter_row:                   # @x264_fdec_filter_row
.Lfunc_begin20:
	.loc	0 1570 0                        # x264_src/encoder/encoder.c:1570:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rdi
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- $esi
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- $edx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
                                        # kill: def $esi killed $esi def $rsi
	movq	%rdi, %rbx
.Ltmp4105:
	.loc	0 1572 21 prologue_end          # x264_src/encoder/encoder.c:1572:21
	movq	14688(%rdi), %rax
	.loc	0 1572 27 is_stmt 0             # x264_src/encoder/encoder.c:1572:27
	movl	72(%rax), %r12d
.Ltmp4106:
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- $r12d
	.loc	0 1573 27 is_stmt 1             # x264_src/encoder/encoder.c:1573:27
	movl	13884(%rdi), %edi
.Ltmp4107:
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	.loc	0 1576 36                       # x264_src/encoder/encoder.c:1576:36
	movl	7268(%rbx), %ecx
	movl	$-1, %ebp
	.loc	0 1576 27 is_stmt 0             # x264_src/encoder/encoder.c:1576:27
	shll	%cl, %ebp
	.loc	0 1577 31 is_stmt 1             # x264_src/encoder/encoder.c:1577:31
	movl	1748(%rbx), %r14d
.Ltmp4108:
	#DEBUG_VALUE: x264_fdec_filter_row:b_measure_quality <- 1
	.loc	0 1576 22                       # x264_src/encoder/encoder.c:1576:22
	addl	%esi, %ebp
.Ltmp4109:
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $ebp
	.loc	0 0 22 is_stmt 0                # x264_src/encoder/encoder.c:0:22
	movb	$1, %al
.Ltmp4110:
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $esi
	.loc	0 1579 18 is_stmt 1             # x264_src/encoder/encoder.c:1579:18
	testl	%r12d, %r12d
	.loc	0 1579 25 is_stmt 0             # x264_src/encoder/encoder.c:1579:25
	jne	.LBB20_2
.Ltmp4111:
# %bb.1:                                # %lor.rhs
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- $esi
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_measure_quality <- 1
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $ebp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $esi
	cmpq	$0, 376(%rbx)
	setne	%al
.Ltmp4112:
.LBB20_2:                               # %lor.end
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- $esi
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_measure_quality <- 1
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $ebp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $esi
	.loc	0 1573 59 is_stmt 1             # x264_src/encoder/encoder.c:1573:59
	cmpl	$1, %edi
	setne	%r13b
.Ltmp4113:
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
	.loc	0 1580 9                        # x264_src/encoder/encoder.c:1580:9
	cmpl	$0, 8(%rbx)
	sete	%dil
	testl	%ebp, %ebp
	sete	%r11b
.Ltmp4114:
	.loc	0 1577 25                       # x264_src/encoder/encoder.c:1577:25
	cmpl	%r14d, %ebp
	setne	%r8b
	setl	%r9b
	testl	%edx, %edx
	setne	%r15b
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] undef
.Ltmp4115:
	#DEBUG_VALUE: x264_fdec_filter_row:b_measure_quality <- undef
	.loc	0 1585 14                       # x264_src/encoder/encoder.c:1585:14
	testl	%esi, %ecx
	setne	%r10b
.Ltmp4116:
	.loc	0 1585 9 is_stmt 0              # x264_src/encoder/encoder.c:1585:9
	orb	%r9b, %r10b
	jne	.LBB20_25
.Ltmp4117:
# %bb.3:                                # %if.end26
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- $esi
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $ebp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $esi
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movl	%r12d, 40(%rsp)                 # 4-byte Spill
.Ltmp4118:
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	movl	%r14d, 32(%rsp)                 # 4-byte Spill
	movl	%ebp, 36(%rsp)                  # 4-byte Spill
.Ltmp4119:
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	movl	1752(%rbx), %r9d
	andb	%al, %r13b
	orb	%dil, %r11b
	orb	%r8b, %r15b
	orb	%r11b, %r15b
	movb	%r15b, 31(%rsp)                 # 1-byte Spill
	andb	%r15b, %r13b
.Ltmp4120:
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r13b
	movb	%r13b, 30(%rsp)                 # 1-byte Spill
	testl	%edx, %edx
	setne	%al
	movq	%rsi, 48(%rsp)                  # 8-byte Spill
.Ltmp4121:
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	movl	%r9d, 44(%rsp)                  # 4-byte Spill
	.loc	0 1574 22 is_stmt 1             # x264_src/encoder/encoder.c:1574:22
	cmpl	%esi, %r9d
	setne	%dl
.Ltmp4122:
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 1590 16                       # x264_src/encoder/encoder.c:1590:16
	andb	%al, %dl
	#DEBUG_VALUE: j <- 0
	testl	%ecx, %ecx
	setns	%al
	andb	%dl, %al
	cmpb	$1, %al
	jne	.LBB20_6
.Ltmp4123:
# %bb.4:                                # %for.cond35.preheader.lr.ph
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: j <- 0
	.loc	0 0 16 is_stmt 0                # x264_src/encoder/encoder.c:0:16
	movq	48(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %r14d
	shll	$4, %r14d
	leal	(,%rax,8), %r13d
.Ltmp4124:
	.loc	0 1591 9 is_stmt 1              # x264_src/encoder/encoder.c:1591:9
	leaq	31200(%rbx), %rbp
	movq	$-1, %r15
.Ltmp4125:
	.p2align	4, 0x90
.LBB20_5:                               # %for.cond35.preheader
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- 0
	.loc	0 1595 28                       # x264_src/encoder/encoder.c:1595:28
	movq	14688(%rbx), %rax
	.loc	0 1595 99 is_stmt 0             # x264_src/encoder/encoder.c:1595:99
	leal	(%r14,%r15), %edx
	subl	%ecx, %edx
	.loc	0 1595 90                       # x264_src/encoder/encoder.c:1595:90
	movslq	104(%rax), %rcx
	.loc	0 1595 88                       # x264_src/encoder/encoder.c:1595:88
	movslq	%edx, %rsi
	imulq	%rcx, %rsi
	.loc	0 1595 43                       # x264_src/encoder/encoder.c:1595:43
	addq	152(%rax), %rsi
	.loc	0 1594 25 is_stmt 1             # x264_src/encoder/encoder.c:1594:25
	movq	-16(%rbp), %rdi
	.loc	0 1596 28                       # x264_src/encoder/encoder.c:1596:28
	movq	3200(%rbx), %rax
	.loc	0 1596 33 is_stmt 0             # x264_src/encoder/encoder.c:1596:33
	movslq	1084(%rax), %rdx
	.loc	0 1596 43                       # x264_src/encoder/encoder.c:1596:43
	shlq	$4, %rdx
	.loc	0 1594 17 is_stmt 1             # x264_src/encoder/encoder.c:1594:17
	callq	memcpy@PLT
.Ltmp4126:
	#DEBUG_VALUE: i <- 1
	.loc	0 1595 28                       # x264_src/encoder/encoder.c:1595:28
	movq	14688(%rbx), %rax
	.loc	0 1595 90 is_stmt 0             # x264_src/encoder/encoder.c:1595:90
	leal	(%r15,%r13), %r12d
	movl	%r12d, %ecx
	subl	7268(%rbx), %ecx
	movslq	108(%rax), %rdx
	.loc	0 1595 88                       # x264_src/encoder/encoder.c:1595:88
	movslq	%ecx, %rsi
	imulq	%rdx, %rsi
	.loc	0 1595 43                       # x264_src/encoder/encoder.c:1595:43
	addq	160(%rax), %rsi
	.loc	0 1594 25 is_stmt 1             # x264_src/encoder/encoder.c:1594:25
	movq	-8(%rbp), %rdi
	.loc	0 1596 28                       # x264_src/encoder/encoder.c:1596:28
	movq	3200(%rbx), %rax
	.loc	0 1596 33 is_stmt 0             # x264_src/encoder/encoder.c:1596:33
	movslq	1084(%rax), %rdx
	.loc	0 1596 47                       # x264_src/encoder/encoder.c:1596:47
	shlq	$3, %rdx
	.loc	0 1594 17 is_stmt 1             # x264_src/encoder/encoder.c:1594:17
	callq	memcpy@PLT
.Ltmp4127:
	#DEBUG_VALUE: i <- 2
	.loc	0 1595 28                       # x264_src/encoder/encoder.c:1595:28
	movq	14688(%rbx), %rax
	.loc	0 1595 90 is_stmt 0             # x264_src/encoder/encoder.c:1595:90
	subl	7268(%rbx), %r12d
	movslq	112(%rax), %rcx
	.loc	0 1595 88                       # x264_src/encoder/encoder.c:1595:88
	movslq	%r12d, %rsi
	imulq	%rcx, %rsi
	.loc	0 1595 43                       # x264_src/encoder/encoder.c:1595:43
	addq	168(%rax), %rsi
	.loc	0 1594 25 is_stmt 1             # x264_src/encoder/encoder.c:1594:25
	movq	(%rbp), %rdi
	.loc	0 1596 28                       # x264_src/encoder/encoder.c:1596:28
	movq	3200(%rbx), %rax
	.loc	0 1596 33 is_stmt 0             # x264_src/encoder/encoder.c:1596:33
	movslq	1084(%rax), %rdx
	.loc	0 1596 47                       # x264_src/encoder/encoder.c:1596:47
	shlq	$3, %rdx
	.loc	0 1594 17 is_stmt 1             # x264_src/encoder/encoder.c:1594:17
	callq	memcpy@PLT
.Ltmp4128:
	#DEBUG_VALUE: i <- 3
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $r15
	.loc	0 1591 36                       # x264_src/encoder/encoder.c:1591:36
	movslq	7268(%rbx), %rcx
	.loc	0 1591 27 is_stmt 0             # x264_src/encoder/encoder.c:1591:27
	incq	%r15
.Ltmp4129:
	addq	$24, %rbp
	cmpq	%rcx, %r15
.Ltmp4130:
	.loc	0 1591 9                        # x264_src/encoder/encoder.c:1591:9
	jl	.LBB20_5
.Ltmp4131:
.LBB20_6:                               # %if.end66
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	.loc	0 0 9                           # x264_src/encoder/encoder.c:0:9
	movq	48(%rsp), %r12                  # 8-byte Reload
	movl	36(%rsp), %ebp                  # 4-byte Reload
	cmpl	%r12d, %ebp
	setl	%al
	movzbl	30(%rsp), %ecx                  # 1-byte Folded Reload
	.loc	0 1599 9 is_stmt 1              # x264_src/encoder/encoder.c:1599:9
	andb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB20_9
.Ltmp4132:
# %bb.7:                                # %for.body73.preheader
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	.loc	0 0 9 is_stmt 0                 # x264_src/encoder/encoder.c:0:9
	movl	%ebp, %r15d
.Ltmp4133:
	.p2align	4, 0x90
.LBB20_8:                               # %for.body73
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: y <- $r15d
	#DEBUG_VALUE: y <- $r15d
	.loc	0 1601 13 is_stmt 1             # x264_src/encoder/encoder.c:1601:13
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	x264_frame_deblock_row@PLT
.Ltmp4134:
	.loc	0 1600 57                       # x264_src/encoder/encoder.c:1600:57
	movzbl	7268(%rbx), %ecx
	.loc	0 1600 48 is_stmt 0             # x264_src/encoder/encoder.c:1600:48
	movl	$1, %eax
	shll	%cl, %eax
	.loc	0 1600 42                       # x264_src/encoder/encoder.c:1600:42
	addl	%eax, %r15d
.Ltmp4135:
	#DEBUG_VALUE: y <- $r15d
	.loc	0 1600 31                       # x264_src/encoder/encoder.c:1600:31
	cmpl	%r12d, %r15d
.Ltmp4136:
	.loc	0 1600 9                        # x264_src/encoder/encoder.c:1600:9
	jl	.LBB20_8
.Ltmp4137:
.LBB20_9:                               # %if.end80
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1579 18 is_stmt 1             # x264_src/encoder/encoder.c:1579:18
	cmpl	$0, 40(%rsp)                    # 4-byte Folded Reload
	.loc	0 1603 9                        # x264_src/encoder/encoder.c:1603:9
	je	.LBB20_12
.Ltmp4138:
# %bb.10:                               # %if.then82
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1605 30                       # x264_src/encoder/encoder.c:1605:30
	movq	3200(%rbx), %rax
	.loc	0 1605 24 is_stmt 0             # x264_src/encoder/encoder.c:1605:24
	xorl	%r15d, %r15d
	cmpl	%r12d, 1088(%rax)
	sete	%r15b
.Ltmp4139:
	#DEBUG_VALUE: end <- undef
	.loc	0 1606 41 is_stmt 1             # x264_src/encoder/encoder.c:1606:41
	movq	14688(%rbx), %rsi
	.loc	0 1606 9 is_stmt 0              # x264_src/encoder/encoder.c:1606:9
	movq	%rbx, %rdi
	movl	%ebp, %edx
	movl	%r15d, %ecx
	callq	x264_frame_expand_border@PLT
.Ltmp4140:
	.loc	0 1607 13 is_stmt 1             # x264_src/encoder/encoder.c:1607:13
	cmpl	$0, 428(%rbx)
.Ltmp4141:
	.loc	0 1607 13 is_stmt 0             # x264_src/encoder/encoder.c:1607:13
	je	.LBB20_12
.Ltmp4142:
# %bb.11:                               # %if.then89
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1609 38 is_stmt 1             # x264_src/encoder/encoder.c:1609:38
	movq	14688(%rbx), %rsi
	.loc	0 1609 13 is_stmt 0             # x264_src/encoder/encoder.c:1609:13
	movq	%rbx, %rdi
	movl	%ebp, %edx
	movl	%r15d, %ecx
	callq	x264_frame_filter@PLT
.Ltmp4143:
	.loc	0 1610 54 is_stmt 1             # x264_src/encoder/encoder.c:1610:54
	movq	14688(%rbx), %rsi
	.loc	0 1610 13 is_stmt 0             # x264_src/encoder/encoder.c:1610:13
	movq	%rbx, %rdi
	movl	%ebp, %edx
	movl	%r15d, %ecx
	callq	x264_frame_expand_border_filtered@PLT
.Ltmp4144:
.LBB20_12:                              # %if.end93
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1614 28 is_stmt 1             # x264_src/encoder/encoder.c:1614:28
	cmpl	$2, 1852(%rbx)
	movl	32(%rsp), %r15d                 # 4-byte Reload
	movl	44(%rsp), %r14d                 # 4-byte Reload
	.loc	0 1614 32 is_stmt 0             # x264_src/encoder/encoder.c:1614:32
	jl	.LBB20_17
.Ltmp4145:
# %bb.13:                               # %land.lhs.true96
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1614 38                       # x264_src/encoder/encoder.c:1614:38
	movq	14688(%rbx), %rdi
	.loc	0 1614 35                       # x264_src/encoder/encoder.c:1614:35
	cmpl	$0, 72(%rdi)
.Ltmp4146:
	.loc	0 1614 9                        # x264_src/encoder/encoder.c:1614:9
	je	.LBB20_17
.Ltmp4147:
# %bb.14:                               # %if.then100
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1615 49 is_stmt 1             # x264_src/encoder/encoder.c:1615:49
	movl	%r12d, %eax
	shll	$4, %eax
	movl	$10000, %esi                    # imm = 0x2710
.Ltmp4148:
	.loc	0 1574 22                       # x264_src/encoder/encoder.c:1574:22
	cmpl	%r12d, %r14d
.Ltmp4149:
	.loc	0 1615 56                       # x264_src/encoder/encoder.c:1615:56
	je	.LBB20_16
.Ltmp4150:
# %bb.15:                               # %cond.false105
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1615 102 is_stmt 0            # x264_src/encoder/encoder.c:1615:102
	movzbl	7268(%rbx), %ecx
	movl	$-24, %esi
	.loc	0 1615 93                       # x264_src/encoder/encoder.c:1615:93
	shll	%cl, %esi
.Ltmp4151:
.LBB20_16:                              # %cond.end110
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1615 53                       # x264_src/encoder/encoder.c:1615:53
	addl	%eax, %esi
	.loc	0 1615 9                        # x264_src/encoder/encoder.c:1615:9
	callq	x264_frame_cond_broadcast@PLT
.Ltmp4152:
.LBB20_17:                              # %if.end113
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- [DW_OP_plus_uconst 36, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1577 25 is_stmt 1             # x264_src/encoder/encoder.c:1577:25
	xorl	%eax, %eax
	cmpl	%r15d, %ebp
	sete	%cl
	.loc	0 1574 22                       # x264_src/encoder/encoder.c:1574:22
	cmpl	%r12d, %r14d
.Ltmp4153:
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- undef
	.loc	0 1618 13                       # x264_src/encoder/encoder.c:1618:13
	je	.LBB20_18
.Ltmp4154:
# %bb.19:                               # %cond.false135
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1618 83 is_stmt 0             # x264_src/encoder/encoder.c:1618:83
	shll	$4, %r12d
	.loc	0 1618 87                       # x264_src/encoder/encoder.c:1618:87
	addl	$-8, %r12d
.Ltmp4155:
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	.loc	0 1620 9 is_stmt 1              # x264_src/encoder/encoder.c:1620:9
	cmpb	$0, 31(%rsp)                    # 1-byte Folded Reload
	jne	.LBB20_21
	jmp	.LBB20_25
.Ltmp4156:
.LBB20_18:                              # %cond.true121
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- [DW_OP_plus_uconst 48, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1618 21                       # x264_src/encoder/encoder.c:1618:21
	movl	1752(%rbx), %r12d
	shll	$4, %r12d
	movl	24(%rbx), %edx
	cmpl	%edx, %r12d
	cmovgel	%edx, %r12d
.Ltmp4157:
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	.loc	0 1620 9                        # x264_src/encoder/encoder.c:1620:9
	cmpb	$0, 31(%rsp)                    # 1-byte Folded Reload
	je	.LBB20_25
.Ltmp4158:
.LBB20_21:                              # %if.then141
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 0 0 is_stmt 0                 # x264_src/encoder/encoder.c:0:0
	movl	%ebp, %edx
	shll	$4, %edx
	movb	%cl, %al
	leal	(%rdx,%rax,8), %r14d
	addl	$-8, %r14d
.Ltmp4159:
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $r14d
	.loc	0 1622 13 is_stmt 1             # x264_src/encoder/encoder.c:1622:13
	cmpl	$0, 476(%rbx)
.Ltmp4160:
	.loc	0 1622 13 is_stmt 0             # x264_src/encoder/encoder.c:1622:13
	je	.LBB20_23
.Ltmp4161:
# %bb.22:                               # %for.cond147.preheader
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $r14d
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 0 13                          # x264_src/encoder/encoder.c:0:13
	leaq	31560(%rbx), %r15
	movl	%r12d, %ebp
	subl	%r14d, %ebp
.Ltmp4162:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: i <- 0
	.loc	0 1626 28 is_stmt 1             # x264_src/encoder/encoder.c:1626:28
	movq	14688(%rbx), %rax
	.loc	0 1626 60 is_stmt 0             # x264_src/encoder/encoder.c:1626:60
	movl	104(%rax), %edx
	.loc	0 1626 58                       # x264_src/encoder/encoder.c:1626:58
	movl	%edx, %ecx
	imull	%r14d, %ecx
	.loc	0 1626 43                       # x264_src/encoder/encoder.c:1626:43
	movslq	%ecx, %rsi
	addq	152(%rax), %rsi
	.loc	0 1627 28 is_stmt 1             # x264_src/encoder/encoder.c:1627:28
	movq	14680(%rbx), %rax
	.loc	0 1627 60 is_stmt 0             # x264_src/encoder/encoder.c:1627:60
	movl	104(%rax), %r8d
	.loc	0 1627 58                       # x264_src/encoder/encoder.c:1627:58
	movl	%r8d, %ecx
	imull	%r14d, %ecx
	.loc	0 1627 43                       # x264_src/encoder/encoder.c:1627:43
	movslq	%ecx, %rcx
	addq	152(%rax), %rcx
	.loc	0 1628 34 is_stmt 1             # x264_src/encoder/encoder.c:1628:34
	movl	20(%rbx), %r9d
	.loc	0 1625 21                       # x264_src/encoder/encoder.c:1625:21
	movl	%ebp, (%rsp)
	movq	%r15, %rdi
	callq	x264_pixel_ssd_wxh@PLT
.Ltmp4163:
	.loc	0 1624 40                       # x264_src/encoder/encoder.c:1624:40
	addq	%rax, 27384(%rbx)
.Ltmp4164:
	#DEBUG_VALUE: i <- 1
	.loc	0 1626 28                       # x264_src/encoder/encoder.c:1626:28
	movq	14688(%rbx), %rax
	.loc	0 1626 51 is_stmt 0             # x264_src/encoder/encoder.c:1626:51
	movl	%r14d, %r13d
	sarl	%r13d
	.loc	0 1626 60                       # x264_src/encoder/encoder.c:1626:60
	movl	108(%rax), %edx
	.loc	0 1626 58                       # x264_src/encoder/encoder.c:1626:58
	movl	%edx, %ecx
	imull	%r13d, %ecx
	.loc	0 1626 43                       # x264_src/encoder/encoder.c:1626:43
	movslq	%ecx, %rsi
	addq	160(%rax), %rsi
	.loc	0 1627 28 is_stmt 1             # x264_src/encoder/encoder.c:1627:28
	movq	14680(%rbx), %rax
	.loc	0 1627 60 is_stmt 0             # x264_src/encoder/encoder.c:1627:60
	movl	108(%rax), %r8d
	.loc	0 1627 58                       # x264_src/encoder/encoder.c:1627:58
	movl	%r8d, %ecx
	imull	%r13d, %ecx
	.loc	0 1627 43                       # x264_src/encoder/encoder.c:1627:43
	movslq	%ecx, %rcx
	addq	160(%rax), %rcx
	.loc	0 1628 34 is_stmt 1             # x264_src/encoder/encoder.c:1628:34
	movl	20(%rbx), %r9d
	.loc	0 1628 42 is_stmt 0             # x264_src/encoder/encoder.c:1628:42
	sarl	%r9d
	.loc	0 1628 64                       # x264_src/encoder/encoder.c:1628:64
	sarl	%ebp
	.loc	0 1625 21 is_stmt 1             # x264_src/encoder/encoder.c:1625:21
	movl	%ebp, (%rsp)
	movq	%r15, %rdi
	callq	x264_pixel_ssd_wxh@PLT
.Ltmp4165:
	.loc	0 1624 40                       # x264_src/encoder/encoder.c:1624:40
	addq	%rax, 27392(%rbx)
.Ltmp4166:
	#DEBUG_VALUE: i <- 2
	.loc	0 1626 28                       # x264_src/encoder/encoder.c:1626:28
	movq	14688(%rbx), %rax
	.loc	0 1626 60 is_stmt 0             # x264_src/encoder/encoder.c:1626:60
	movl	112(%rax), %edx
	.loc	0 1626 58                       # x264_src/encoder/encoder.c:1626:58
	movl	%edx, %ecx
	imull	%r13d, %ecx
	.loc	0 1626 43                       # x264_src/encoder/encoder.c:1626:43
	movslq	%ecx, %rsi
	addq	168(%rax), %rsi
	.loc	0 1627 28 is_stmt 1             # x264_src/encoder/encoder.c:1627:28
	movq	14680(%rbx), %rax
	.loc	0 1627 60 is_stmt 0             # x264_src/encoder/encoder.c:1627:60
	movl	112(%rax), %r8d
	.loc	0 1627 58                       # x264_src/encoder/encoder.c:1627:58
	imull	%r8d, %r13d
	.loc	0 1627 43                       # x264_src/encoder/encoder.c:1627:43
	movslq	%r13d, %rcx
	addq	168(%rax), %rcx
	.loc	0 1628 34 is_stmt 1             # x264_src/encoder/encoder.c:1628:34
	movl	20(%rbx), %r9d
	.loc	0 1628 42 is_stmt 0             # x264_src/encoder/encoder.c:1628:42
	sarl	%r9d
	.loc	0 1625 21 is_stmt 1             # x264_src/encoder/encoder.c:1625:21
	movl	%ebp, (%rsp)
	movl	36(%rsp), %ebp                  # 4-byte Reload
	movq	%r15, %rdi
	movl	32(%rsp), %r15d                 # 4-byte Reload
	callq	x264_pixel_ssd_wxh@PLT
.Ltmp4167:
	.loc	0 1624 40                       # x264_src/encoder/encoder.c:1624:40
	addq	%rax, 27400(%rbx)
.Ltmp4168:
	#DEBUG_VALUE: i <- 3
.LBB20_23:                              # %if.end213
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $r14d
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1630 13                       # x264_src/encoder/encoder.c:1630:13
	cmpl	$0, 480(%rbx)
.Ltmp4169:
	.loc	0 1630 13 is_stmt 0             # x264_src/encoder/encoder.c:1630:13
	je	.LBB20_25
.Ltmp4170:
# %bb.24:                               # %if.then217
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_plus_uconst 48] [$rsp+0]
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: x264_fdec_filter_row:b_hpel <- [DW_OP_plus_uconst 40, DW_OP_deref] $rsp
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $r14d
	#DEBUG_VALUE: x264_fdec_filter_row:max_y <- $r12d
	#DEBUG_VALUE: x264_fdec_filter_row:b_deblock <- [DW_OP_plus_uconst 30, DW_OP_deref_size 1, DW_OP_LLVM_convert 1 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsp
	.loc	0 1577 25 is_stmt 1             # x264_src/encoder/encoder.c:1577:25
	xorl	%eax, %eax
	cmpl	%r15d, %ebp
	sete	%al
.Ltmp4171:
	.loc	0 1635 19                       # x264_src/encoder/encoder.c:1635:19
	leal	-6(%r14,%rax,8), %eax
.Ltmp4172:
	#DEBUG_VALUE: x264_fdec_filter_row:min_y <- $eax
	.loc	0 1637 42                       # x264_src/encoder/encoder.c:1637:42
	leaq	31560(%rbx), %rdi
	.loc	0 1638 24                       # x264_src/encoder/encoder.c:1638:24
	movq	14688(%rbx), %rcx
	.loc	0 1638 21 is_stmt 0             # x264_src/encoder/encoder.c:1638:21
	movq	152(%rcx), %rsi
	.loc	0 1638 49                       # x264_src/encoder/encoder.c:1638:49
	movl	104(%rcx), %edx
	.loc	0 1638 48                       # x264_src/encoder/encoder.c:1638:48
	movl	%edx, %ecx
	imull	%eax, %ecx
	.loc	0 1638 42                       # x264_src/encoder/encoder.c:1638:42
	movslq	%ecx, %rcx
	addq	%rcx, %rsi
	addq	$2, %rsi
	.loc	0 1639 24 is_stmt 1             # x264_src/encoder/encoder.c:1639:24
	movq	14680(%rbx), %rcx
	.loc	0 1639 21 is_stmt 0             # x264_src/encoder/encoder.c:1639:21
	movq	152(%rcx), %r9
	.loc	0 1639 49                       # x264_src/encoder/encoder.c:1639:49
	movl	104(%rcx), %r8d
	.loc	0 1639 48                       # x264_src/encoder/encoder.c:1639:48
	movl	%r8d, %ecx
	imull	%eax, %ecx
	.loc	0 1639 42                       # x264_src/encoder/encoder.c:1639:42
	movslq	%ecx, %rcx
	addq	%r9, %rcx
	addq	$2, %rcx
	.loc	0 1640 30 is_stmt 1             # x264_src/encoder/encoder.c:1640:30
	movl	20(%rbx), %r9d
	.loc	0 1640 37 is_stmt 0             # x264_src/encoder/encoder.c:1640:37
	addl	$-2, %r9d
	.loc	0 1640 46                       # x264_src/encoder/encoder.c:1640:46
	subl	%eax, %r12d
.Ltmp4173:
	.loc	0 1640 57                       # x264_src/encoder/encoder.c:1640:57
	movq	31176(%rbx), %rax
.Ltmp4174:
	.loc	0 1637 17 is_stmt 1             # x264_src/encoder/encoder.c:1637:17
	movq	%rax, 8(%rsp)
	movl	%r12d, (%rsp)
	callq	x264_pixel_ssim_wxh@PLT
.Ltmp4175:
	cvtss2sd	%xmm0, %xmm0
	.loc	0 1636 34                       # x264_src/encoder/encoder.c:1636:34
	addsd	27408(%rbx), %xmm0
	movsd	%xmm0, 27408(%rbx)
.Ltmp4176:
.LBB20_25:                              # %cleanup
	#DEBUG_VALUE: x264_fdec_filter_row:h <- $rbx
	#DEBUG_VALUE: x264_fdec_filter_row:mb_y <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: x264_fdec_filter_row:b_inloop <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 1643 1 epilogue_begin         # x264_src/encoder/encoder.c:1643:1
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp4177:
	#DEBUG_VALUE: x264_fdec_filter_row:h <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp4178:
.Lfunc_end20:
	.size	x264_fdec_filter_row, .Lfunc_end20-x264_fdec_filter_row
	.cfi_endproc
                                        # -- End function
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"DTS compresion changed timebase: %u/%u -> %u/%lu\n"
	.size	.L.str, 50

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"Effective timebase denominator %lu exceeds H.264 maximum\n"
	.size	.L.str.1, 58

	.type	i_chroma_qp_table,@object       # @i_chroma_qp_table
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
i_chroma_qp_table:
	.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000\001\002\003\004\005\006\007\b\t\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\035\036\037  !\"\"##$$%%%&&&''''''''''''''''"
	.size	i_chroma_qp_table, 76

	.type	.L.str.2,@object                # @.str.2
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2:
	.asciz	"using cpu capabilities:"
	.size	.L.str.2, 24

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"SSE2"
	.size	.L.str.3, 5

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"SSE3"
	.size	.L.str.4, 5

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"SSE4.1"
	.size	.L.str.5, 7

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	" %s"
	.size	.L.str.6, 4

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	" none!"
	.size	.L.str.7, 7

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"%s\n"
	.size	.L.str.8, 4

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"MV cost test failed: x264 has been miscompiled!\n"
	.size	.L.str.9, 49

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"CLZ test failed: x264 has been miscompiled!\n"
	.size	.L.str.10, 45

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"Are you attempting to run an SSE4a-targeted build on a CPU that\n"
	.size	.L.str.11, 65

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"doesn't support it?\n"
	.size	.L.str.12, 21

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"HRD bitrate: %i bits/sec\n"
	.size	.L.str.13, 26

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"CPB size: %i bits\n"
	.size	.L.str.14, 19

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"w"
	.size	.L.str.15, 2

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"dump_yuv: can't write to %s\n"
	.size	.L.str.16, 29

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"profile %s, level %d.%d\n"
	.size	.L.str.18, 25

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"Baseline"
	.size	.L.str.19, 9

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"Main"
	.size	.L.str.20, 5

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"High"
	.size	.L.str.21, 5

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"High 4:4:4 Predictive"
	.size	.L.str.22, 22

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"non-strictly-monotonic PTS\n"
	.size	.L.str.23, 28

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"P"
	.size	.L.str.24, 2

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"B"
	.size	.L.str.25, 2

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"I"
	.size	.L.str.26, 2

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"SP"
	.size	.L.str.27, 3

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"SI"
	.size	.L.str.28, 3

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"frame %s:%-5d Avg QP:%5.2f  size:%6.0f  PSNR Mean Y:%5.2f U:%5.2f V:%5.2f Avg:%5.2f Global:%5.2f\n"
	.size	.L.str.29, 98

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"frame %s:%-5d Avg QP:%5.2f  size:%6.0f\n"
	.size	.L.str.30, 40

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	" %4.1f%%"
	.size	.L.str.31, 9

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"consecutive B-frames:%s\n"
	.size	.L.str.32, 25

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"mb I  %s\n"
	.size	.L.str.33, 10

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"mb P  %s  P16..4: %4.1f%% %4.1f%% %4.1f%% %4.1f%% %4.1f%%    skip:%4.1f%%\n"
	.size	.L.str.34, 75

	.type	x264_mb_type_list_table,@object # @x264_mb_type_list_table
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
x264_mb_type_list_table:
	.zero	4
	.zero	4
	.zero	4
	.zero	4
	.zero	2,1
	.zero	2
	.zero	4
	.zero	2,1
	.zero	2
	.zero	4
	.zero	2,1
	.zero	2
	.asciz	"\001"
	.ascii	"\000\001"
	.zero	2,1
	.ascii	"\000\001"
	.ascii	"\000\001"
	.asciz	"\001"
	.zero	2
	.zero	2,1
	.ascii	"\000\001"
	.zero	2,1
	.zero	2,1
	.asciz	"\001"
	.asciz	"\001"
	.zero	2,1
	.zero	4,1
	.zero	4
	.zero	4
	.size	x264_mb_type_list_table, 76

	.type	.L.str.35,@object               # @.str.35
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.35:
	.asciz	"mb B  %s  B16..8: %4.1f%% %4.1f%% %4.1f%%  direct:%4.1f%%  skip:%4.1f%%  L0:%4.1f%% L1:%4.1f%% BI:%4.1f%%\n"
	.size	.L.str.35, 107

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	" inter:%.1f%%"
	.size	.L.str.36, 14

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"8x8 transform intra:%.1f%%%s\n"
	.size	.L.str.37, 30

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	"direct mvs  spatial:%.1f%% temporal:%.1f%%\n"
	.size	.L.str.38, 44

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	" inter: %.1f%% %.1f%% %.1f%%"
	.size	.L.str.39, 29

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"coded y,uvDC,uvAC intra: %.1f%% %.1f%% %.1f%%%s\n"
	.size	.L.str.40, 49

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"i16 v,h,dc,p: %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n"
	.size	.L.str.41, 47

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"i%d v,h,dc,ddl,ddr,vr,hd,vl,hu: %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n"
	.size	.L.str.42, 105

	.type	x264_mb_pred_mode8x8c_fix,@object # @x264_mb_pred_mode8x8c_fix
	.section	.rodata,"a",@progbits
x264_mb_pred_mode8x8c_fix:
	.asciz	"\000\001\002\003\000\000"
	.size	x264_mb_pred_mode8x8c_fix, 7

	.type	.L.str.43,@object               # @.str.43
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.43:
	.asciz	"i8c dc,h,v,p: %2.0f%% %2.0f%% %2.0f%% %2.0f%%\n"
	.size	.L.str.43, 47

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"Weighted P-Frames: Y:%.1f%%\n"
	.size	.L.str.44, 29

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"ref %c L%d:%s\n"
	.size	.L.str.45, 15

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"PB"
	.size	.L.str.46, 3

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"SSIM Mean Y:%.7f\n"
	.size	.L.str.47, 18

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"PSNR Mean Y:%6.3f U:%6.3f V:%6.3f Avg:%6.3f Global:%6.3f kb/s:%.2f\n"
	.size	.L.str.48, 68

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"kb/s:%.2f\n"
	.size	.L.str.49, 11

	.type	tga_dump_rate,@object           # @tga_dump_rate
	.bss
	.globl	tga_dump_rate
	.p2align	2, 0x0
tga_dump_rate:
	.long	0                               # 0x0
	.size	tga_dump_rate, 4

	.type	.L.str.50,@object               # @.str.50
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.50:
	.asciz	"invalid width x height (%dx%d)\n"
	.size	.L.str.50, 32

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"width or height not divisible by 2 (%dx%d)\n"
	.size	.L.str.51, 44

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"invalid CSP (only I420/YV12 supported)\n"
	.size	.L.str.52, 40

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"not compiled with pthread support!\n"
	.size	.L.str.53, 36

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"interlace + me=esa is not implemented\n"
	.size	.L.str.54, 39

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"interlace + weightp is not implemented\n"
	.size	.L.str.55, 40

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"broken ffmpeg default settings detected\n"
	.size	.L.str.56, 41

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"use an encoding preset (vpre)\n"
	.size	.L.str.57, 31

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"no ratecontrol method specified\n"
	.size	.L.str.58, 33

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"VBV is incompatible with constant QP, ignored.\n"
	.size	.L.str.59, 48

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"VBV maxrate unspecified, assuming CBR\n"
	.size	.L.str.60, 39

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"VBV bufsize set but maxrate unspecified, ignored\n"
	.size	.L.str.61, 50

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"max bitrate less than average bitrate, assuming CBR\n"
	.size	.L.str.62, 53

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"VBV maxrate specified, but no bufsize, ignored\n"
	.size	.L.str.63, 48

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"interlaced + slice-max-size is not implemented\n"
	.size	.L.str.64, 48

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"interlaced + slice-max-mbs is not implemented\n"
	.size	.L.str.65, 47

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"subme=0 + direct=temporal is not supported\n"
	.size	.L.str.66, 44

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"b-pyramid normal + intra-refresh is not supported\n"
	.size	.L.str.67, 51

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"ref > 1 + intra-refresh is not supported\n"
	.size	.L.str.68, 42

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"invalid level_idc: %d\n"
	.size	.L.str.69, 23

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"using mv_range_thread = %d\n"
	.size	.L.str.70, 28

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"NAL HRD parameters require VBV parameters\n"
	.size	.L.str.71, 43

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"CBR HRD requires constant bitrate\n"
	.size	.L.str.72, 35

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"cannot create valid sample aspect ratio\n"
	.size	.L.str.73, 41

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"using SAR=%d/%d\n"
	.size	.L.str.74, 17

	.type	x264_ue_size_tab,@object        # @x264_ue_size_tab
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
x264_ue_size_tab:
	.ascii	"\001\001\003\003\005\005\005\005\007\007\007\007\007\007\007\007\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
	.size	x264_ue_size_tab, 256

	.type	.L.str.75,@object               # @.str.75
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.75:
	.asciz	"invalid DTS: PTS is less than DTS\n"
	.size	.L.str.75, 35

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	" PSNR Y:%5.2f U:%5.2f V:%5.2f"
	.size	.L.str.76, 30

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	" SSIM Y:%.5f"
	.size	.L.str.77, 13

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"frame=%4d QP=%.2f NAL=%d Slice:%c Poc:%-3d I:%-4d P:%-4d SKIP:%-4d size=%d bytes%s\n"
	.size	.L.str.78, 84

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"frame_%d.yuv"
	.size	.L.str.79, 13

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"wb"
	.size	.L.str.80, 3

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"r+b"
	.size	.L.str.81, 4

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"I16..4%s: %4.1f%% %4.1f%% %4.1f%%"
	.size	.L.str.82, 34

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"..PCM"
	.size	.L.str.83, 6

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.zero	1
	.size	.L.str.84, 1

	.type	.Lswitch.table.x264_encoder_encode,@object # @switch.table.x264_encoder_encode
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.Lswitch.table.x264_encoder_encode:
	.quad	1                               # 0x1
	.quad	2                               # 0x2
	.quad	0                               # 0x0
	.size	.Lswitch.table.x264_encoder_encode, 24

	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	574                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
	.long	.Ldebug_loc180-.Lloclists_table_base0
	.long	.Ldebug_loc181-.Lloclists_table_base0
	.long	.Ldebug_loc182-.Lloclists_table_base0
	.long	.Ldebug_loc183-.Lloclists_table_base0
	.long	.Ldebug_loc184-.Lloclists_table_base0
	.long	.Ldebug_loc185-.Lloclists_table_base0
	.long	.Ldebug_loc186-.Lloclists_table_base0
	.long	.Ldebug_loc187-.Lloclists_table_base0
	.long	.Ldebug_loc188-.Lloclists_table_base0
	.long	.Ldebug_loc189-.Lloclists_table_base0
	.long	.Ldebug_loc190-.Lloclists_table_base0
	.long	.Ldebug_loc191-.Lloclists_table_base0
	.long	.Ldebug_loc192-.Lloclists_table_base0
	.long	.Ldebug_loc193-.Lloclists_table_base0
	.long	.Ldebug_loc194-.Lloclists_table_base0
	.long	.Ldebug_loc195-.Lloclists_table_base0
	.long	.Ldebug_loc196-.Lloclists_table_base0
	.long	.Ldebug_loc197-.Lloclists_table_base0
	.long	.Ldebug_loc198-.Lloclists_table_base0
	.long	.Ldebug_loc199-.Lloclists_table_base0
	.long	.Ldebug_loc200-.Lloclists_table_base0
	.long	.Ldebug_loc201-.Lloclists_table_base0
	.long	.Ldebug_loc202-.Lloclists_table_base0
	.long	.Ldebug_loc203-.Lloclists_table_base0
	.long	.Ldebug_loc204-.Lloclists_table_base0
	.long	.Ldebug_loc205-.Lloclists_table_base0
	.long	.Ldebug_loc206-.Lloclists_table_base0
	.long	.Ldebug_loc207-.Lloclists_table_base0
	.long	.Ldebug_loc208-.Lloclists_table_base0
	.long	.Ldebug_loc209-.Lloclists_table_base0
	.long	.Ldebug_loc210-.Lloclists_table_base0
	.long	.Ldebug_loc211-.Lloclists_table_base0
	.long	.Ldebug_loc212-.Lloclists_table_base0
	.long	.Ldebug_loc213-.Lloclists_table_base0
	.long	.Ldebug_loc214-.Lloclists_table_base0
	.long	.Ldebug_loc215-.Lloclists_table_base0
	.long	.Ldebug_loc216-.Lloclists_table_base0
	.long	.Ldebug_loc217-.Lloclists_table_base0
	.long	.Ldebug_loc218-.Lloclists_table_base0
	.long	.Ldebug_loc219-.Lloclists_table_base0
	.long	.Ldebug_loc220-.Lloclists_table_base0
	.long	.Ldebug_loc221-.Lloclists_table_base0
	.long	.Ldebug_loc222-.Lloclists_table_base0
	.long	.Ldebug_loc223-.Lloclists_table_base0
	.long	.Ldebug_loc224-.Lloclists_table_base0
	.long	.Ldebug_loc225-.Lloclists_table_base0
	.long	.Ldebug_loc226-.Lloclists_table_base0
	.long	.Ldebug_loc227-.Lloclists_table_base0
	.long	.Ldebug_loc228-.Lloclists_table_base0
	.long	.Ldebug_loc229-.Lloclists_table_base0
	.long	.Ldebug_loc230-.Lloclists_table_base0
	.long	.Ldebug_loc231-.Lloclists_table_base0
	.long	.Ldebug_loc232-.Lloclists_table_base0
	.long	.Ldebug_loc233-.Lloclists_table_base0
	.long	.Ldebug_loc234-.Lloclists_table_base0
	.long	.Ldebug_loc235-.Lloclists_table_base0
	.long	.Ldebug_loc236-.Lloclists_table_base0
	.long	.Ldebug_loc237-.Lloclists_table_base0
	.long	.Ldebug_loc238-.Lloclists_table_base0
	.long	.Ldebug_loc239-.Lloclists_table_base0
	.long	.Ldebug_loc240-.Lloclists_table_base0
	.long	.Ldebug_loc241-.Lloclists_table_base0
	.long	.Ldebug_loc242-.Lloclists_table_base0
	.long	.Ldebug_loc243-.Lloclists_table_base0
	.long	.Ldebug_loc244-.Lloclists_table_base0
	.long	.Ldebug_loc245-.Lloclists_table_base0
	.long	.Ldebug_loc246-.Lloclists_table_base0
	.long	.Ldebug_loc247-.Lloclists_table_base0
	.long	.Ldebug_loc248-.Lloclists_table_base0
	.long	.Ldebug_loc249-.Lloclists_table_base0
	.long	.Ldebug_loc250-.Lloclists_table_base0
	.long	.Ldebug_loc251-.Lloclists_table_base0
	.long	.Ldebug_loc252-.Lloclists_table_base0
	.long	.Ldebug_loc253-.Lloclists_table_base0
	.long	.Ldebug_loc254-.Lloclists_table_base0
	.long	.Ldebug_loc255-.Lloclists_table_base0
	.long	.Ldebug_loc256-.Lloclists_table_base0
	.long	.Ldebug_loc257-.Lloclists_table_base0
	.long	.Ldebug_loc258-.Lloclists_table_base0
	.long	.Ldebug_loc259-.Lloclists_table_base0
	.long	.Ldebug_loc260-.Lloclists_table_base0
	.long	.Ldebug_loc261-.Lloclists_table_base0
	.long	.Ldebug_loc262-.Lloclists_table_base0
	.long	.Ldebug_loc263-.Lloclists_table_base0
	.long	.Ldebug_loc264-.Lloclists_table_base0
	.long	.Ldebug_loc265-.Lloclists_table_base0
	.long	.Ldebug_loc266-.Lloclists_table_base0
	.long	.Ldebug_loc267-.Lloclists_table_base0
	.long	.Ldebug_loc268-.Lloclists_table_base0
	.long	.Ldebug_loc269-.Lloclists_table_base0
	.long	.Ldebug_loc270-.Lloclists_table_base0
	.long	.Ldebug_loc271-.Lloclists_table_base0
	.long	.Ldebug_loc272-.Lloclists_table_base0
	.long	.Ldebug_loc273-.Lloclists_table_base0
	.long	.Ldebug_loc274-.Lloclists_table_base0
	.long	.Ldebug_loc275-.Lloclists_table_base0
	.long	.Ldebug_loc276-.Lloclists_table_base0
	.long	.Ldebug_loc277-.Lloclists_table_base0
	.long	.Ldebug_loc278-.Lloclists_table_base0
	.long	.Ldebug_loc279-.Lloclists_table_base0
	.long	.Ldebug_loc280-.Lloclists_table_base0
	.long	.Ldebug_loc281-.Lloclists_table_base0
	.long	.Ldebug_loc282-.Lloclists_table_base0
	.long	.Ldebug_loc283-.Lloclists_table_base0
	.long	.Ldebug_loc284-.Lloclists_table_base0
	.long	.Ldebug_loc285-.Lloclists_table_base0
	.long	.Ldebug_loc286-.Lloclists_table_base0
	.long	.Ldebug_loc287-.Lloclists_table_base0
	.long	.Ldebug_loc288-.Lloclists_table_base0
	.long	.Ldebug_loc289-.Lloclists_table_base0
	.long	.Ldebug_loc290-.Lloclists_table_base0
	.long	.Ldebug_loc291-.Lloclists_table_base0
	.long	.Ldebug_loc292-.Lloclists_table_base0
	.long	.Ldebug_loc293-.Lloclists_table_base0
	.long	.Ldebug_loc294-.Lloclists_table_base0
	.long	.Ldebug_loc295-.Lloclists_table_base0
	.long	.Ldebug_loc296-.Lloclists_table_base0
	.long	.Ldebug_loc297-.Lloclists_table_base0
	.long	.Ldebug_loc298-.Lloclists_table_base0
	.long	.Ldebug_loc299-.Lloclists_table_base0
	.long	.Ldebug_loc300-.Lloclists_table_base0
	.long	.Ldebug_loc301-.Lloclists_table_base0
	.long	.Ldebug_loc302-.Lloclists_table_base0
	.long	.Ldebug_loc303-.Lloclists_table_base0
	.long	.Ldebug_loc304-.Lloclists_table_base0
	.long	.Ldebug_loc305-.Lloclists_table_base0
	.long	.Ldebug_loc306-.Lloclists_table_base0
	.long	.Ldebug_loc307-.Lloclists_table_base0
	.long	.Ldebug_loc308-.Lloclists_table_base0
	.long	.Ldebug_loc309-.Lloclists_table_base0
	.long	.Ldebug_loc310-.Lloclists_table_base0
	.long	.Ldebug_loc311-.Lloclists_table_base0
	.long	.Ldebug_loc312-.Lloclists_table_base0
	.long	.Ldebug_loc313-.Lloclists_table_base0
	.long	.Ldebug_loc314-.Lloclists_table_base0
	.long	.Ldebug_loc315-.Lloclists_table_base0
	.long	.Ldebug_loc316-.Lloclists_table_base0
	.long	.Ldebug_loc317-.Lloclists_table_base0
	.long	.Ldebug_loc318-.Lloclists_table_base0
	.long	.Ldebug_loc319-.Lloclists_table_base0
	.long	.Ldebug_loc320-.Lloclists_table_base0
	.long	.Ldebug_loc321-.Lloclists_table_base0
	.long	.Ldebug_loc322-.Lloclists_table_base0
	.long	.Ldebug_loc323-.Lloclists_table_base0
	.long	.Ldebug_loc324-.Lloclists_table_base0
	.long	.Ldebug_loc325-.Lloclists_table_base0
	.long	.Ldebug_loc326-.Lloclists_table_base0
	.long	.Ldebug_loc327-.Lloclists_table_base0
	.long	.Ldebug_loc328-.Lloclists_table_base0
	.long	.Ldebug_loc329-.Lloclists_table_base0
	.long	.Ldebug_loc330-.Lloclists_table_base0
	.long	.Ldebug_loc331-.Lloclists_table_base0
	.long	.Ldebug_loc332-.Lloclists_table_base0
	.long	.Ldebug_loc333-.Lloclists_table_base0
	.long	.Ldebug_loc334-.Lloclists_table_base0
	.long	.Ldebug_loc335-.Lloclists_table_base0
	.long	.Ldebug_loc336-.Lloclists_table_base0
	.long	.Ldebug_loc337-.Lloclists_table_base0
	.long	.Ldebug_loc338-.Lloclists_table_base0
	.long	.Ldebug_loc339-.Lloclists_table_base0
	.long	.Ldebug_loc340-.Lloclists_table_base0
	.long	.Ldebug_loc341-.Lloclists_table_base0
	.long	.Ldebug_loc342-.Lloclists_table_base0
	.long	.Ldebug_loc343-.Lloclists_table_base0
	.long	.Ldebug_loc344-.Lloclists_table_base0
	.long	.Ldebug_loc345-.Lloclists_table_base0
	.long	.Ldebug_loc346-.Lloclists_table_base0
	.long	.Ldebug_loc347-.Lloclists_table_base0
	.long	.Ldebug_loc348-.Lloclists_table_base0
	.long	.Ldebug_loc349-.Lloclists_table_base0
	.long	.Ldebug_loc350-.Lloclists_table_base0
	.long	.Ldebug_loc351-.Lloclists_table_base0
	.long	.Ldebug_loc352-.Lloclists_table_base0
	.long	.Ldebug_loc353-.Lloclists_table_base0
	.long	.Ldebug_loc354-.Lloclists_table_base0
	.long	.Ldebug_loc355-.Lloclists_table_base0
	.long	.Ldebug_loc356-.Lloclists_table_base0
	.long	.Ldebug_loc357-.Lloclists_table_base0
	.long	.Ldebug_loc358-.Lloclists_table_base0
	.long	.Ldebug_loc359-.Lloclists_table_base0
	.long	.Ldebug_loc360-.Lloclists_table_base0
	.long	.Ldebug_loc361-.Lloclists_table_base0
	.long	.Ldebug_loc362-.Lloclists_table_base0
	.long	.Ldebug_loc363-.Lloclists_table_base0
	.long	.Ldebug_loc364-.Lloclists_table_base0
	.long	.Ldebug_loc365-.Lloclists_table_base0
	.long	.Ldebug_loc366-.Lloclists_table_base0
	.long	.Ldebug_loc367-.Lloclists_table_base0
	.long	.Ldebug_loc368-.Lloclists_table_base0
	.long	.Ldebug_loc369-.Lloclists_table_base0
	.long	.Ldebug_loc370-.Lloclists_table_base0
	.long	.Ldebug_loc371-.Lloclists_table_base0
	.long	.Ldebug_loc372-.Lloclists_table_base0
	.long	.Ldebug_loc373-.Lloclists_table_base0
	.long	.Ldebug_loc374-.Lloclists_table_base0
	.long	.Ldebug_loc375-.Lloclists_table_base0
	.long	.Ldebug_loc376-.Lloclists_table_base0
	.long	.Ldebug_loc377-.Lloclists_table_base0
	.long	.Ldebug_loc378-.Lloclists_table_base0
	.long	.Ldebug_loc379-.Lloclists_table_base0
	.long	.Ldebug_loc380-.Lloclists_table_base0
	.long	.Ldebug_loc381-.Lloclists_table_base0
	.long	.Ldebug_loc382-.Lloclists_table_base0
	.long	.Ldebug_loc383-.Lloclists_table_base0
	.long	.Ldebug_loc384-.Lloclists_table_base0
	.long	.Ldebug_loc385-.Lloclists_table_base0
	.long	.Ldebug_loc386-.Lloclists_table_base0
	.long	.Ldebug_loc387-.Lloclists_table_base0
	.long	.Ldebug_loc388-.Lloclists_table_base0
	.long	.Ldebug_loc389-.Lloclists_table_base0
	.long	.Ldebug_loc390-.Lloclists_table_base0
	.long	.Ldebug_loc391-.Lloclists_table_base0
	.long	.Ldebug_loc392-.Lloclists_table_base0
	.long	.Ldebug_loc393-.Lloclists_table_base0
	.long	.Ldebug_loc394-.Lloclists_table_base0
	.long	.Ldebug_loc395-.Lloclists_table_base0
	.long	.Ldebug_loc396-.Lloclists_table_base0
	.long	.Ldebug_loc397-.Lloclists_table_base0
	.long	.Ldebug_loc398-.Lloclists_table_base0
	.long	.Ldebug_loc399-.Lloclists_table_base0
	.long	.Ldebug_loc400-.Lloclists_table_base0
	.long	.Ldebug_loc401-.Lloclists_table_base0
	.long	.Ldebug_loc402-.Lloclists_table_base0
	.long	.Ldebug_loc403-.Lloclists_table_base0
	.long	.Ldebug_loc404-.Lloclists_table_base0
	.long	.Ldebug_loc405-.Lloclists_table_base0
	.long	.Ldebug_loc406-.Lloclists_table_base0
	.long	.Ldebug_loc407-.Lloclists_table_base0
	.long	.Ldebug_loc408-.Lloclists_table_base0
	.long	.Ldebug_loc409-.Lloclists_table_base0
	.long	.Ldebug_loc410-.Lloclists_table_base0
	.long	.Ldebug_loc411-.Lloclists_table_base0
	.long	.Ldebug_loc412-.Lloclists_table_base0
	.long	.Ldebug_loc413-.Lloclists_table_base0
	.long	.Ldebug_loc414-.Lloclists_table_base0
	.long	.Ldebug_loc415-.Lloclists_table_base0
	.long	.Ldebug_loc416-.Lloclists_table_base0
	.long	.Ldebug_loc417-.Lloclists_table_base0
	.long	.Ldebug_loc418-.Lloclists_table_base0
	.long	.Ldebug_loc419-.Lloclists_table_base0
	.long	.Ldebug_loc420-.Lloclists_table_base0
	.long	.Ldebug_loc421-.Lloclists_table_base0
	.long	.Ldebug_loc422-.Lloclists_table_base0
	.long	.Ldebug_loc423-.Lloclists_table_base0
	.long	.Ldebug_loc424-.Lloclists_table_base0
	.long	.Ldebug_loc425-.Lloclists_table_base0
	.long	.Ldebug_loc426-.Lloclists_table_base0
	.long	.Ldebug_loc427-.Lloclists_table_base0
	.long	.Ldebug_loc428-.Lloclists_table_base0
	.long	.Ldebug_loc429-.Lloclists_table_base0
	.long	.Ldebug_loc430-.Lloclists_table_base0
	.long	.Ldebug_loc431-.Lloclists_table_base0
	.long	.Ldebug_loc432-.Lloclists_table_base0
	.long	.Ldebug_loc433-.Lloclists_table_base0
	.long	.Ldebug_loc434-.Lloclists_table_base0
	.long	.Ldebug_loc435-.Lloclists_table_base0
	.long	.Ldebug_loc436-.Lloclists_table_base0
	.long	.Ldebug_loc437-.Lloclists_table_base0
	.long	.Ldebug_loc438-.Lloclists_table_base0
	.long	.Ldebug_loc439-.Lloclists_table_base0
	.long	.Ldebug_loc440-.Lloclists_table_base0
	.long	.Ldebug_loc441-.Lloclists_table_base0
	.long	.Ldebug_loc442-.Lloclists_table_base0
	.long	.Ldebug_loc443-.Lloclists_table_base0
	.long	.Ldebug_loc444-.Lloclists_table_base0
	.long	.Ldebug_loc445-.Lloclists_table_base0
	.long	.Ldebug_loc446-.Lloclists_table_base0
	.long	.Ldebug_loc447-.Lloclists_table_base0
	.long	.Ldebug_loc448-.Lloclists_table_base0
	.long	.Ldebug_loc449-.Lloclists_table_base0
	.long	.Ldebug_loc450-.Lloclists_table_base0
	.long	.Ldebug_loc451-.Lloclists_table_base0
	.long	.Ldebug_loc452-.Lloclists_table_base0
	.long	.Ldebug_loc453-.Lloclists_table_base0
	.long	.Ldebug_loc454-.Lloclists_table_base0
	.long	.Ldebug_loc455-.Lloclists_table_base0
	.long	.Ldebug_loc456-.Lloclists_table_base0
	.long	.Ldebug_loc457-.Lloclists_table_base0
	.long	.Ldebug_loc458-.Lloclists_table_base0
	.long	.Ldebug_loc459-.Lloclists_table_base0
	.long	.Ldebug_loc460-.Lloclists_table_base0
	.long	.Ldebug_loc461-.Lloclists_table_base0
	.long	.Ldebug_loc462-.Lloclists_table_base0
	.long	.Ldebug_loc463-.Lloclists_table_base0
	.long	.Ldebug_loc464-.Lloclists_table_base0
	.long	.Ldebug_loc465-.Lloclists_table_base0
	.long	.Ldebug_loc466-.Lloclists_table_base0
	.long	.Ldebug_loc467-.Lloclists_table_base0
	.long	.Ldebug_loc468-.Lloclists_table_base0
	.long	.Ldebug_loc469-.Lloclists_table_base0
	.long	.Ldebug_loc470-.Lloclists_table_base0
	.long	.Ldebug_loc471-.Lloclists_table_base0
	.long	.Ldebug_loc472-.Lloclists_table_base0
	.long	.Ldebug_loc473-.Lloclists_table_base0
	.long	.Ldebug_loc474-.Lloclists_table_base0
	.long	.Ldebug_loc475-.Lloclists_table_base0
	.long	.Ldebug_loc476-.Lloclists_table_base0
	.long	.Ldebug_loc477-.Lloclists_table_base0
	.long	.Ldebug_loc478-.Lloclists_table_base0
	.long	.Ldebug_loc479-.Lloclists_table_base0
	.long	.Ldebug_loc480-.Lloclists_table_base0
	.long	.Ldebug_loc481-.Lloclists_table_base0
	.long	.Ldebug_loc482-.Lloclists_table_base0
	.long	.Ldebug_loc483-.Lloclists_table_base0
	.long	.Ldebug_loc484-.Lloclists_table_base0
	.long	.Ldebug_loc485-.Lloclists_table_base0
	.long	.Ldebug_loc486-.Lloclists_table_base0
	.long	.Ldebug_loc487-.Lloclists_table_base0
	.long	.Ldebug_loc488-.Lloclists_table_base0
	.long	.Ldebug_loc489-.Lloclists_table_base0
	.long	.Ldebug_loc490-.Lloclists_table_base0
	.long	.Ldebug_loc491-.Lloclists_table_base0
	.long	.Ldebug_loc492-.Lloclists_table_base0
	.long	.Ldebug_loc493-.Lloclists_table_base0
	.long	.Ldebug_loc494-.Lloclists_table_base0
	.long	.Ldebug_loc495-.Lloclists_table_base0
	.long	.Ldebug_loc496-.Lloclists_table_base0
	.long	.Ldebug_loc497-.Lloclists_table_base0
	.long	.Ldebug_loc498-.Lloclists_table_base0
	.long	.Ldebug_loc499-.Lloclists_table_base0
	.long	.Ldebug_loc500-.Lloclists_table_base0
	.long	.Ldebug_loc501-.Lloclists_table_base0
	.long	.Ldebug_loc502-.Lloclists_table_base0
	.long	.Ldebug_loc503-.Lloclists_table_base0
	.long	.Ldebug_loc504-.Lloclists_table_base0
	.long	.Ldebug_loc505-.Lloclists_table_base0
	.long	.Ldebug_loc506-.Lloclists_table_base0
	.long	.Ldebug_loc507-.Lloclists_table_base0
	.long	.Ldebug_loc508-.Lloclists_table_base0
	.long	.Ldebug_loc509-.Lloclists_table_base0
	.long	.Ldebug_loc510-.Lloclists_table_base0
	.long	.Ldebug_loc511-.Lloclists_table_base0
	.long	.Ldebug_loc512-.Lloclists_table_base0
	.long	.Ldebug_loc513-.Lloclists_table_base0
	.long	.Ldebug_loc514-.Lloclists_table_base0
	.long	.Ldebug_loc515-.Lloclists_table_base0
	.long	.Ldebug_loc516-.Lloclists_table_base0
	.long	.Ldebug_loc517-.Lloclists_table_base0
	.long	.Ldebug_loc518-.Lloclists_table_base0
	.long	.Ldebug_loc519-.Lloclists_table_base0
	.long	.Ldebug_loc520-.Lloclists_table_base0
	.long	.Ldebug_loc521-.Lloclists_table_base0
	.long	.Ldebug_loc522-.Lloclists_table_base0
	.long	.Ldebug_loc523-.Lloclists_table_base0
	.long	.Ldebug_loc524-.Lloclists_table_base0
	.long	.Ldebug_loc525-.Lloclists_table_base0
	.long	.Ldebug_loc526-.Lloclists_table_base0
	.long	.Ldebug_loc527-.Lloclists_table_base0
	.long	.Ldebug_loc528-.Lloclists_table_base0
	.long	.Ldebug_loc529-.Lloclists_table_base0
	.long	.Ldebug_loc530-.Lloclists_table_base0
	.long	.Ldebug_loc531-.Lloclists_table_base0
	.long	.Ldebug_loc532-.Lloclists_table_base0
	.long	.Ldebug_loc533-.Lloclists_table_base0
	.long	.Ldebug_loc534-.Lloclists_table_base0
	.long	.Ldebug_loc535-.Lloclists_table_base0
	.long	.Ldebug_loc536-.Lloclists_table_base0
	.long	.Ldebug_loc537-.Lloclists_table_base0
	.long	.Ldebug_loc538-.Lloclists_table_base0
	.long	.Ldebug_loc539-.Lloclists_table_base0
	.long	.Ldebug_loc540-.Lloclists_table_base0
	.long	.Ldebug_loc541-.Lloclists_table_base0
	.long	.Ldebug_loc542-.Lloclists_table_base0
	.long	.Ldebug_loc543-.Lloclists_table_base0
	.long	.Ldebug_loc544-.Lloclists_table_base0
	.long	.Ldebug_loc545-.Lloclists_table_base0
	.long	.Ldebug_loc546-.Lloclists_table_base0
	.long	.Ldebug_loc547-.Lloclists_table_base0
	.long	.Ldebug_loc548-.Lloclists_table_base0
	.long	.Ldebug_loc549-.Lloclists_table_base0
	.long	.Ldebug_loc550-.Lloclists_table_base0
	.long	.Ldebug_loc551-.Lloclists_table_base0
	.long	.Ldebug_loc552-.Lloclists_table_base0
	.long	.Ldebug_loc553-.Lloclists_table_base0
	.long	.Ldebug_loc554-.Lloclists_table_base0
	.long	.Ldebug_loc555-.Lloclists_table_base0
	.long	.Ldebug_loc556-.Lloclists_table_base0
	.long	.Ldebug_loc557-.Lloclists_table_base0
	.long	.Ldebug_loc558-.Lloclists_table_base0
	.long	.Ldebug_loc559-.Lloclists_table_base0
	.long	.Ldebug_loc560-.Lloclists_table_base0
	.long	.Ldebug_loc561-.Lloclists_table_base0
	.long	.Ldebug_loc562-.Lloclists_table_base0
	.long	.Ldebug_loc563-.Lloclists_table_base0
	.long	.Ldebug_loc564-.Lloclists_table_base0
	.long	.Ldebug_loc565-.Lloclists_table_base0
	.long	.Ldebug_loc566-.Lloclists_table_base0
	.long	.Ldebug_loc567-.Lloclists_table_base0
	.long	.Ldebug_loc568-.Lloclists_table_base0
	.long	.Ldebug_loc569-.Lloclists_table_base0
	.long	.Ldebug_loc570-.Lloclists_table_base0
	.long	.Ldebug_loc571-.Lloclists_table_base0
	.long	.Ldebug_loc572-.Lloclists_table_base0
	.long	.Ldebug_loc573-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp55-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp55-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp58-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp58-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp62-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp63-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp30-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp38-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp38-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp40-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp40-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp41-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp55-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp56-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp59-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp234-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp121-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp125-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp133-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp134-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp134-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp150-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp150-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp151-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp153-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp153-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp156-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp121-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp134-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp134-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp158-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp162-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp162-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp164-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp164-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp165-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp165-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp201-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp201-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp201-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp204-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	168                             # -88
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp204-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp205-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp205-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp206-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	169                             # -87
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp211-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp234-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp234-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	169                             # -87
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp237-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	168                             # -88
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp223-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp214-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp260-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp264-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp264-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp268-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp288-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp297-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp313-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp315-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp341-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp341-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp347-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp347-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp352-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp352-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp308-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp310-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	15                              # 15
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	64                              # 64
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp310-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp311-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	64                              # 64
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp311-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp312-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp330-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp334-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp334-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp335-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp339-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp344-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp354-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp355-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp367-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp368-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp368-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp378-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp373-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp374-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp381-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp381-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp385-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp421-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp430-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp426-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp431-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp437-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp439-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp460-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp467-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp494-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp495-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp494-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp530-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp532-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp600-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp601-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp639-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp632-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp632-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp632-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp645-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp648-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp649-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp646-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp654-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp654-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp659-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp701-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp701-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp723-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp723-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp702-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp702-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp703-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp720-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp720-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp698-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp706-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	4                               # 4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp704-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp710-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp710-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	0                               # 0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp699-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp726-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp735-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp735-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp736-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp785-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp786-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp787-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp787-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp775-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp798-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp793-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp788-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp789-.Lfunc_begin0         #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp791-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp795-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp797-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp802-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp802-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp801-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp801-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp803-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp887-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp819-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp819-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp889-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp889-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp817-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp888-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp885-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp806-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp809-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp808-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp809-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp809-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp831-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp834-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp838-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp838-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp854-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp857-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp857-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp861-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp861-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp868-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp878-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp881-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp881-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp899-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp899-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp907-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp907-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp893-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp899-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp899-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp906-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp900-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp903-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp903-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp906-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp979-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp979-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp912-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp912-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp980-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp981-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp943-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp943-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp946-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp926-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp926-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp930-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp943-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp950-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp955-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp955-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp960-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp966-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp977-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp960-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp966-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp966-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp968-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp969-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp969-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp970-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp987-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp995-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp995-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp987-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp999-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp999-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp987-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp987-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp998-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp988-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp997-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1001-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1593-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1012-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1012-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1255-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1255-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1013-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1013-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1602-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1402-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1402-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1016-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1043-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1235-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1235-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1443-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1521-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1603-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1603-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1372-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1403-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1403-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1458-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1486-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1487-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1489-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1528-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1537-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1675-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1038-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1008-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1593-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1009-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1017-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	120                             # -8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1018-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1020-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1021-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	120                             # -8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1028-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1068-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1038-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1062-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1046-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1051-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1057-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1255-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1158-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1158-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1431-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1446-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1447-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1448-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1156-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1156-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1157-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1158-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1545-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1180-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1181-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1184-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1188-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1188-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1194-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1205-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1200-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1215-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1215-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1221-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1259-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1265-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1323-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1282-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1306-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1282-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1306-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1286-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1294-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1329-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1339-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1330-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1332-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1330-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1332-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1348-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1349-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1356-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1381-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1363-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1365-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1363-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1364-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1365-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	51                              # DW_OP_lit3
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1397-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1401-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1413-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1422-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1412-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1421-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1451-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1456-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1478-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1481-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1485-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1492-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1517-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1592-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1601-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1644-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1507-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1507-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1510-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1516-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1552-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1518-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1522-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1522-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1526-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1552-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1553-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1554-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1554-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1555-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1555-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1556-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1558-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1559-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1559-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1560-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1560-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1561-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1562-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1562-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1563-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1563-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1565-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1566-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1582-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1639-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1616-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1617-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1605-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1607-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1616-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1616-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1617-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1618-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1620-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1620-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1607-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1626-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1626-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1632-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	212                             # 84
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1632-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1598-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1604-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1625-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1628-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1657-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2067-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1755-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1755-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1993-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1997-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2066-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2066-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1754-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1754-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1948-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1951-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1941-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1944-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin12-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1680-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1757-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1757-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end12-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1694-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1698-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1705-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1708-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1708-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1712-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1713-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	24                              # 24
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1713-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1714-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	24                              # 24
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1719-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1798-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1722-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1725-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	176                             # 14640
	.byte	242                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1743-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	176                             # 14640
	.byte	242                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1745-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1746-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1746-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1747-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1747-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1753-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1759-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1764-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1767-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1776-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1770-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1773-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	28                              # DW_OP_minus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1771-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1774-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1772-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1774-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1775-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1781-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1790-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1793-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1793-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1800-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1803-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1805-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1806-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1806-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1807-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1807-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1809-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1809-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1810-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1811-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1811-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1812-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1812-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1813-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1814-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1815-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1816-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1816-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	19                              # 19
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1819-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1819-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1820-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1820-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1821-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1822-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1822-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1823-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1826-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1826-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1827-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1828-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1828-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1829-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1829-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1829-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1831-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1839-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1846-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc180:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1834-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1834-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1835-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1835-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1836-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1837-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1837-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1838-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1839-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1840-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1840-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1841-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1841-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1842-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1844-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1845-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1845-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1846-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1847-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1847-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1848-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1848-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1849-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1849-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1850-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1851-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1851-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1852-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1853-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1853-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1854-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1854-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1855-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1856-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1856-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1857-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1857-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1858-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc181:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1902-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1902-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1903-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc182:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1861-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1862-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1862-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1863-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1863-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1864-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1864-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1866-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1867-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1867-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1868-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1868-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1869-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1869-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1870-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1871-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1871-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1872-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1872-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1873-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1874-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1874-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1875-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	20                              # 20
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1875-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1876-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	22                              # 22
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1876-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1877-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	24                              # 24
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1877-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1878-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	26                              # 26
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1878-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1879-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	28                              # 28
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1879-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	29                              # 29
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1881-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	30                              # 30
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1881-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	31                              # 31
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1883-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1884-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1884-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1885-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1885-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1886-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1886-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1887-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1888-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1888-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1889-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1890-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1891-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1891-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1892-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1893-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1893-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1894-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1894-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	20                              # 20
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1896-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	22                              # 22
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1896-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	24                              # 24
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1897-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1898-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	26                              # 26
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1898-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1899-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	28                              # 28
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1900-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	29                              # 29
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1900-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	30                              # 30
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1901-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1902-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	31                              # 31
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1902-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1903-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc183:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1907-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1910-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1910-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1912-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1912-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1914-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc184:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1922-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1923-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1923-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1924-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc185:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1924-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1925-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1926-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc186:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1930-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1931-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	92                              # DW_OP_reg12
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1932-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1985-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	92                              # DW_OP_reg12
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc187:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1933-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1938-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc188:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1933-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1938-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc189:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1934-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1938-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc190:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1940-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1945-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc191:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1942-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1945-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc192:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1947-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc193:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1952-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc194:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1954-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc195:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1955-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1958-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc196:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1960-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1965-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc197:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1961-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1965-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc198:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1968-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1972-.Lfunc_begin0        #   ending offset
	.byte	20                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc199:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1969-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1972-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc200:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1976-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1983-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc201:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1978-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1981-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc202:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1988-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1989-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1992-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc203:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1998-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc204:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2003-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2006-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2015-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc205:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2022-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2027-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2042-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc206:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2025-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc207:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2035-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2035-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2036-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2038-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc208:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2048-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc209:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2049-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc210:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2060-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2060-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2061-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc211:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2105-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2105-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc212:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2073-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2073-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2078-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc213:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2073-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc214:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2087-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2097-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2103-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2104-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc215:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2099-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc216:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2114-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2121-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2122-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2127-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc217:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2215-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc218:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2130-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2144-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2145-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc219:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2137-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2139-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc220:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2137-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2147-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc221:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2149-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2156-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc222:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2159-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2159-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2163-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc223:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2166-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2167-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	169                             # -87
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2169-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2174-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	168                             # -88
	.byte	127                             # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc224:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2175-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2178-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc225:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc226:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2179-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2182-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc227:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2191-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2194-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2194-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc228:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2198-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2201-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2202-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2203-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	33                              # DW_OP_or
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2204-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	50                              # DW_OP_lit2
	.byte	33                              # DW_OP_or
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2205-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	51                              # DW_OP_lit3
	.byte	33                              # DW_OP_or
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2205-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc229:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2207-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2208-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2208-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2209-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2209-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2214-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc230:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp2219-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2219-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3516-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3516-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc231:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2217-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2225-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2239-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3515-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc232:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2218-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2224-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3515-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	52                              # 52
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc233:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2236-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2240-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc234:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2241-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc235:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3196-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3199-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 256
	.byte	2                               # 
	.byte	147                             # DW_OP_piece
	.byte	48                              # 48
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc236:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2242-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3201-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	204                             # 76
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3202-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	204                             # 76
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3450-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	204                             # 76
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	204                             # 76
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc237:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2242-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3197-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3197-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3198-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3198-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3199-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3199-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3202-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3450-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc238:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2420-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc239:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2253-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2254-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc240:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc241:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc242:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	192                             # 7232
	.byte	56                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	192                             # 7232
	.byte	56                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc243:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc244:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2276-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2276-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2279-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc245:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2272-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2275-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2279-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2280-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc246:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc247:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc248:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc249:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2298-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	5                               # 5
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2298-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2317-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc250:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc251:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2303-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2306-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc252:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2298-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2301-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2306-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2306-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2307-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc253:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2315-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc254:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2315-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc255:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2315-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc256:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc257:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc258:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2317-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc259:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2325-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2345-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc260:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2325-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2352-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc261:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2325-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2331-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc262:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2329-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2329-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2334-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2335-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc263:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc264:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc265:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc266:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2352-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc267:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2352-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc268:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2345-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc269:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2354-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc270:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2362-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc271:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2358-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc272:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2366-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2371-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2371-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2374-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc273:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2368-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc274:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2367-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2370-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2370-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2374-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2375-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc275:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2390-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc276:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2390-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc277:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2390-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	168                             # DW_OP_convert
	.asciz	"\265\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc278:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2395-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc279:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2394-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2399-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc280:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2406-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2409-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2409-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2416-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc281:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2406-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2413-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2413-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc282:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2412-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2412-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2414-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc283:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2415-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2416-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc284:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc285:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2427-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc286:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2423-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2430-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2431-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc287:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc288:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc289:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2441-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc290:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2466-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2466-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc291:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2463-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2470-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2470-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc292:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2469-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2469-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2471-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc293:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2477-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc294:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2472-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2473-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc295:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2487-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2487-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2494-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc296:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2484-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2491-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2491-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2493-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2493-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc297:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2485-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2490-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2490-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2492-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc298:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2493-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2494-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc299:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2522-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc300:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2503-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2508-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2508-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc301:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2504-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2507-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2507-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2511-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2512-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc302:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2528-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc303:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2528-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc304:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2522-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc305:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2550-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2553-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2553-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2557-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2557-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2558-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc306:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2551-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2554-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2554-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2557-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc307:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2567-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2575-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc308:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2567-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2575-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc309:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2580-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2583-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2583-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2587-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2587-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2588-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc310:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2581-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2584-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2584-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2587-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc311:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2603-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc312:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2603-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc313:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2615-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2618-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2618-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc314:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2622-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2640-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc315:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2622-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2627-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2630-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc316:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2623-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2626-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2626-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2630-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2630-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc317:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2639-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2646-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc318:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2639-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2646-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc319:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2639-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2640-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc320:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2647-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc321:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2647-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc322:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2647-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2653-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2653-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2656-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc323:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2648-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2651-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2651-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2656-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2656-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2657-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc324:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2658-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2665-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc325:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2658-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2665-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc326:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2658-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2665-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc327:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc328:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc329:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2668-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc330:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2687-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc331:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2687-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc332:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2681-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2687-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc333:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2697-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2699-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2699-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc334:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2703-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2721-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc335:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2703-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2708-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2708-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc336:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2707-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2707-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2711-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2711-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2712-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc337:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2720-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2727-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc338:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2720-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2727-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc339:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2720-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2721-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc340:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2749-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc341:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc342:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2734-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2734-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2737-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc343:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2729-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2732-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2732-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2737-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2737-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2738-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc344:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2746-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc345:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2746-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc346:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2746-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc347:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc348:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc349:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2749-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc350:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2762-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2768-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc351:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2762-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2768-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc352:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2762-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2768-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc353:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2772-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2790-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc354:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2772-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2777-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2777-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2780-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc355:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2773-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2776-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2776-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2780-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2780-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2781-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc356:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2796-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc357:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2796-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc358:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2790-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc359:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2816-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc360:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc361:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2803-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2806-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc362:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2798-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2801-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2801-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2806-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2806-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2807-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc363:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2814-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc364:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2814-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc365:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2814-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc366:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc367:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc368:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2816-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc369:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2823-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2823-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc370:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2881-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc371:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2837-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2840-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2840-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2848-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc372:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2837-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2844-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2846-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2851-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc373:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2843-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2845-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc374:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2851-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc375:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2848-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc376:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2856-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2859-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2866-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc377:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2856-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc378:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2856-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2863-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2863-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2869-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc379:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2857-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2862-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2862-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2864-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc380:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2869-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc381:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc382:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2866-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc383:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2873-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2878-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc384:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2873-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2878-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc385:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2879-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc386:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2884-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2884-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2891-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2917-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2920-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2920-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2927-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc387:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2898-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2917-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2934-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc388:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2888-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2888-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2894-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2917-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2924-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2924-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2930-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc389:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2882-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2887-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2887-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2889-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2918-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2923-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2923-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2925-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc390:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2894-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2930-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc391:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2898-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2934-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc392:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2891-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2927-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc393:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2896-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2931-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc394:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2896-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2931-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2932-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc395:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2902-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2902-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2909-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2935-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2938-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2938-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2945-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc396:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2935-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc397:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2906-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2906-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2912-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2935-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2942-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2942-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2948-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc398:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2900-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2905-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2905-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2907-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2936-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2941-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2941-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2943-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc399:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2912-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2948-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc400:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc401:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2909-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2945-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc402:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2914-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2950-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc403:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2914-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2950-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc404:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2959-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2960-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3018-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc405:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2959-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2960-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3018-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc406:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2961-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2962-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc407:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2981-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2987-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc408:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2981-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2987-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc409:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2981-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2987-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc410:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2988-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc411:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2988-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2991-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2991-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2996-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2996-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2997-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc412:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2989-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc413:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2989-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2993-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2993-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2996-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc414:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2998-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3005-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc415:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2998-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3005-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc416:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2998-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3005-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc417:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc418:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc419:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3033-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc420:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3033-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc421:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3033-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc422:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3056-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc423:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3036-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3041-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3044-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc424:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3040-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3044-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3045-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc425:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3062-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc426:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3062-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc427:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3056-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc428:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3066-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3073-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc429:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3070-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3070-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3072-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3077-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc430:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3064-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3069-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3069-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc431:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3077-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc432:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3072-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3073-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc433:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3083-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc434:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3083-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3088-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3091-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc435:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3091-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3092-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc436:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3109-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc437:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3109-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc438:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3103-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc439:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3112-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3115-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc440:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3112-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3119-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc441:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3113-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3118-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3120-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc442:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc443:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc444:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3134-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	49                              # DW_OP_lit1
	.byte	38                              # DW_OP_shra
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3134-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3141-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc445:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc446:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3138-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3145-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc447:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3137-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3137-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3139-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc448:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3145-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc449:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc450:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3141-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc451:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3152-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3153-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc452:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3160-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3166-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc453:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3179-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3180-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3184-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3184-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3235-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3235-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3413-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3413-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3448-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc454:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3181-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3181-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3448-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc455:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3167-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3280-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3287-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3446-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3446-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3447-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	204                             # 76
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3447-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3450-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc456:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc457:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc458:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc459:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc460:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc461:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc462:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3188-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc463:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3211-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc464:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc465:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3224-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3232-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc466:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3228-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3228-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3229-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3229-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3230-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc467:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3260-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3287-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc468:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3264-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3264-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3267-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc469:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3260-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3263-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3263-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3267-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3267-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3268-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc470:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3274-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3275-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc471:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3274-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3275-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc472:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3286-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc473:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3287-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc474:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3287-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc475:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3284-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc476:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3283-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3284-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc477:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3406-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3408-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc478:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3407-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3408-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc479:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3317-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3318-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc480:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3326-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3327-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3327-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3328-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3328-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3329-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3329-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3330-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc481:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3334-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3335-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3335-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3336-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3337-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3337-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3338-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3338-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3341-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc482:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3362-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3362-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc483:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3350-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3350-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3354-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3354-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3358-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3358-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3362-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3362-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3366-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3366-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3370-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3370-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3374-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3374-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3418-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3418-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3422-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3426-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3426-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc484:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3427-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3431-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\304\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc485:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3378-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3379-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3379-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3380-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3380-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3381-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3381-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3382-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3382-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3383-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3383-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3384-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3385-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3385-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3386-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3386-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3387-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3388-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3388-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3389-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3389-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3390-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3390-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3391-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3391-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3392-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3393-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3393-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3394-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc486:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3399-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3404-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	37                              # DW_OP_shr
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3404-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3405-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc487:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3400-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3405-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc488:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc489:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3453-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3471-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc490:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3454-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3463-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc491:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3464-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3467-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3470-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc492:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3486-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3487-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	28                              # 28
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3487-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3493-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3493-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc493:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3486-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3492-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3492-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3496-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc494:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3487-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3490-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3490-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3496-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3496-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3497-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc495:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc496:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc497:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc498:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp3520-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3520-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3692-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3692-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3693-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3693-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3730-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3730-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3860-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3860-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3977-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3977-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3995-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3998-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3999-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc499:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3695-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3716-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3716-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3717-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3717-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3718-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3718-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3719-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3719-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3721-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3721-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3722-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3722-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3723-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc500:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3542-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3641-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3641-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	152                             # 152
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc501:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3519-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3642-.Lfunc_begin0        #   ending offset
	.byte	56                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3643-.Lfunc_begin0        #   ending offset
	.byte	55                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3643-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3644-.Lfunc_begin0        #   ending offset
	.byte	54                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3644-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3645-.Lfunc_begin0        #   ending offset
	.byte	53                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3655-.Lfunc_begin0        #   ending offset
	.byte	52                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3656-.Lfunc_begin0        #   ending offset
	.byte	51                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3656-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   ending offset
	.byte	52                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3658-.Lfunc_begin0        #   ending offset
	.byte	37                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3658-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3659-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3659-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3662-.Lfunc_begin0        #   ending offset
	.byte	37                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3662-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3664-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3664-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3665-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3665-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3666-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3666-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3667-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3668-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3668-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3670-.Lfunc_begin0        #   ending offset
	.byte	38                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3670-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3672-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3672-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3690-.Lfunc_begin0        #   ending offset
	.byte	41                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	95                              # DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3690-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3692-.Lfunc_begin0        #   ending offset
	.byte	40                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	93                              # DW_OP_reg13
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3692-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3696-.Lfunc_begin0        #   ending offset
	.byte	39                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3696-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   ending offset
	.byte	36                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3726-.Lfunc_begin0        #   ending offset
	.byte	34                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	86                              # DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3726-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 80
	.byte	0                               # 
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc502:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3523-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	192                             # 64
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc503:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3537-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3540-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc504:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3557-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3557-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3572-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3572-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3587-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3587-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3602-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3602-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3617-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3617-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3618-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc505:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3541-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3557-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3557-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3572-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3572-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3587-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3587-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3602-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3602-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3617-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc506:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3552-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3562-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3567-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3577-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3582-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3597-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3607-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3612-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc507:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3548-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3552-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3563-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3567-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3578-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3582-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3593-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3597-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3608-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3612-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc508:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3620-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3627-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc509:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3620-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3627-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3627-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3629-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3629-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3631-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc510:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3632-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3634-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3639-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc511:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3632-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3634-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3636-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3636-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3637-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc512:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3640-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3672-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc513:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3640-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3642-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3643-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3643-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3644-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3644-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3645-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3646-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3646-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3647-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3647-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3648-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3648-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3649-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3650-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3650-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3651-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3651-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3652-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3652-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3653-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3653-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3654-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3654-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3655-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3655-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3657-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3659-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3659-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3660-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3660-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3661-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3661-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3663-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3663-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3665-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3665-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3667-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3669-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3672-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc514:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3673-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3680-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc515:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3673-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3674-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3674-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3679-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc516:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3673-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3675-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3675-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3677-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3677-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3678-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3678-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3679-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc517:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3683-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3691-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc518:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3683-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3684-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3684-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3689-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	200                             # 72
	.byte	0                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc519:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3683-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3685-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3685-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3687-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3687-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3688-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3688-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3689-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc520:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3694-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3724-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc521:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3695-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	100                             # DW_OP_reg20
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3697-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3702-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc522:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3695-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3698-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3698-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3700-.Lfunc_begin0        #   ending offset
	.byte	24                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\272\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\277\200\200"                  # 
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3700-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3701-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3701-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3702-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc523:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3703-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3704-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	168                             # 13992
	.byte	237                             # 
	.byte	0                               # 
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3706-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3715-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	168                             # 13992
	.byte	237                             # 
	.byte	0                               # 
	.byte	28                              # DW_OP_minus
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc524:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3706-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3710-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3710-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3715-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc525:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3720-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3724-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	105                             # DW_OP_reg25
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc526:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3729-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3796-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc527:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3731-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3791-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc528:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3745-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3798-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc529:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3732-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3853-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3853-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3977-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # 144
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc530:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3753-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3761-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc531:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3740-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc532:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3736-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3738-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	98                              # DW_OP_reg18
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc533:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3859-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3977-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	60                              # 60
	.byte	148                             # DW_OP_deref_size
	.byte	16                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc534:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3765-.Lfunc_begin0        #   ending offset
	.byte	100                             # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3766-.Lfunc_begin0        #   ending offset
	.byte	101                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	24                              # 24
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3766-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3769-.Lfunc_begin0        #   ending offset
	.byte	104                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3769-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3773-.Lfunc_begin0        #   ending offset
	.byte	107                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3773-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3776-.Lfunc_begin0        #   ending offset
	.byte	119                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3776-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3777-.Lfunc_begin0        #   ending offset
	.byte	107                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3777-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3778-.Lfunc_begin0        #   ending offset
	.byte	108                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3778-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3780-.Lfunc_begin0        #   ending offset
	.byte	107                             # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3780-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3781-.Lfunc_begin0        #   ending offset
	.byte	106                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3781-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   ending offset
	.byte	103                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3783-.Lfunc_begin0        #   ending offset
	.byte	98                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3784-.Lfunc_begin0        #   ending offset
	.byte	101                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3784-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3787-.Lfunc_begin0        #   ending offset
	.byte	104                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3787-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3789-.Lfunc_begin0        #   ending offset
	.byte	107                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3790-.Lfunc_begin0        #   ending offset
	.byte	110                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3790-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3792-.Lfunc_begin0        #   ending offset
	.byte	113                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3792-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3794-.Lfunc_begin0        #   ending offset
	.byte	116                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3794-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3795-.Lfunc_begin0        #   ending offset
	.byte	119                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3800-.Lfunc_begin0        #   ending offset
	.byte	122                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3800-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3803-.Lfunc_begin0        #   ending offset
	.ascii	"\204\001"                      # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	124                             # DW_OP_breg12
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3803-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3804-.Lfunc_begin0        #   ending offset
	.byte	120                             # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3804-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3805-.Lfunc_begin0        #   ending offset
	.byte	89                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3805-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3806-.Lfunc_begin0        #   ending offset
	.byte	88                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3806-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3807-.Lfunc_begin0        #   ending offset
	.byte	87                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3807-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3808-.Lfunc_begin0        #   ending offset
	.byte	84                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3809-.Lfunc_begin0        #   ending offset
	.byte	79                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3809-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   ending offset
	.byte	76                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3811-.Lfunc_begin0        #   ending offset
	.byte	64                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3811-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3812-.Lfunc_begin0        #   ending offset
	.byte	67                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3812-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3815-.Lfunc_begin0        #   ending offset
	.byte	70                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3817-.Lfunc_begin0        #   ending offset
	.byte	73                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3818-.Lfunc_begin0        #   ending offset
	.byte	76                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3818-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3820-.Lfunc_begin0        #   ending offset
	.byte	79                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3820-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3822-.Lfunc_begin0        #   ending offset
	.byte	82                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3822-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3823-.Lfunc_begin0        #   ending offset
	.byte	85                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3823-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3827-.Lfunc_begin0        #   ending offset
	.byte	88                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3827-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3831-.Lfunc_begin0        #   ending offset
	.byte	98                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	115                             # DW_OP_breg3
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	124                             # DW_OP_breg12
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3831-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3832-.Lfunc_begin0        #   ending offset
	.byte	86                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	48                              # DW_OP_lit0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3832-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3833-.Lfunc_begin0        #   ending offset
	.byte	55                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	81                              # DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3833-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3834-.Lfunc_begin0        #   ending offset
	.byte	54                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3834-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3835-.Lfunc_begin0        #   ending offset
	.byte	53                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3835-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3836-.Lfunc_begin0        #   ending offset
	.byte	50                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	82                              # DW_OP_reg2
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3836-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3837-.Lfunc_begin0        #   ending offset
	.byte	45                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	80                              # DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3837-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3838-.Lfunc_begin0        #   ending offset
	.byte	42                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	72                              # 72
	.byte	90                              # DW_OP_reg10
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	89                              # DW_OP_reg9
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3838-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   ending offset
	.byte	33                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	88                              # 88
	.byte	83                              # DW_OP_reg3
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	147                             # DW_OP_piece
	.byte	48                              # 48
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3977-.Lfunc_begin0        #   ending offset
	.byte	29                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	32                              # 32
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	147                             # DW_OP_piece
	.byte	144                             # 144
	.byte	1                               # 
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc535:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3774-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3774-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3779-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3779-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3801-.Lfunc_begin0        #   ending offset
	.byte	14                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3801-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3824-.Lfunc_begin0        #   ending offset
	.byte	13                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3828-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3828-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3840-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3840-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3841-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	84                              # DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3841-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3842-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	88                              # DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3842-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3843-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3844-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3845-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3845-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3850-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	85                              # DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3850-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	16                              # 16
	.byte	94                              # DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc536:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3765-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3765-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3767-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3767-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3768-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3768-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3770-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3770-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3771-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3771-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3772-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3772-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3773-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3773-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc537:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3848-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc538:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3783-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3783-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3785-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3786-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3786-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3788-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3788-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3789-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3791-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3791-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3793-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3793-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3794-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3794-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3796-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3796-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3797-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3799-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3799-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3800-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3800-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3811-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3811-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3813-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3813-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3814-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3814-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3816-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3816-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3817-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3817-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3819-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3819-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3821-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3821-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3822-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3822-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3824-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3824-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3825-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3825-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3826-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3826-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3827-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3827-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc539:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3840-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3840-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3841-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3841-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3842-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3842-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3843-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3843-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3844-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3844-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3845-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3845-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3846-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3846-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3852-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc540:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3861-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3863-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3863-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3864-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3864-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3959-.Lfunc_begin0        #   ending offset
	.byte	6                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # 168
	.byte	1                               # 
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc541:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3863-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3865-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3866-.Lfunc_begin0        #   ending offset
	.byte	7                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	35                              # DW_OP_plus_uconst
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3866-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3867-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3867-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3959-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	148                             # DW_OP_deref_size
	.byte	8                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc542:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3866-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3869-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3871-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3951-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc543:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3952-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc544:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3866-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3868-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3868-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3871-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3871-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3873-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3873-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3875-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3875-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3877-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3877-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3879-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3879-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3881-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3881-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3883-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3883-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3885-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	9                               # 9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3885-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3887-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3887-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3889-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	11                              # 11
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3889-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3891-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3891-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3893-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	13                              # 13
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3893-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3895-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3897-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	15                              # 15
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3897-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3899-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	16                              # 16
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3901-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	17                              # 17
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3901-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3903-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3903-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3905-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	19                              # 19
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3905-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3907-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	20                              # 20
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3907-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3909-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	21                              # 21
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3909-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3911-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	22                              # 22
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3911-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3913-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	23                              # 23
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3915-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	24                              # 24
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3917-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	25                              # 25
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3917-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3919-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	26                              # 26
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3919-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3921-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	27                              # 27
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3921-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3923-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	28                              # 28
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3923-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3925-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	29                              # 29
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3925-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3927-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	30                              # 30
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3927-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3929-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	31                              # 31
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3929-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3931-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	32                              # 32
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc545:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3952-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3957-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc546:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3952-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	160                             # 288
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3952-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3959-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc547:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3967-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3972-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc548:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3967-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3972-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc549:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3968-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3972-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc550:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4005-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4005-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4006-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	127                             # -1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc551:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp3999-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4000-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	224                             # 14688
	.byte	242                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4010-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4013-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	240                             # 14448
	.byte	240                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4016-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4017-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4022-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	120                             # -8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4023-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	5                               # Loc expr size
	.byte	124                             # DW_OP_breg12
	.byte	224                             # 14688
	.byte	242                             # 
	.byte	0                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc552:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4029-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4037-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4049-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4056-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4057-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end18-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc553:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4031-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4037-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4040-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4041-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4042-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4042-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4044-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4045-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4045-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4047-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4047-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4049-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc554:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4050-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4053-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc555:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4097-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4097-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc556:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4060-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4060-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4095-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4095-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc557:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4063-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4066-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4066-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4075-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4075-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4076-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4076-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc558:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin19-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4087-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4087-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end19-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc559:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4089-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4091-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4094-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc560:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4084-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4087-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4087-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4094-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc561:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4090-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc562:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4101-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc563:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4107-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4107-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4177-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4177-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc564:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4176-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4176-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc565:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin20-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp4122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4122-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end20-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc566:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4118-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4176-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	40                              # 40
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc567:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4108-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4115-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc568:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4119-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4119-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4153-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	36                              # 36
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4159-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4172-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4174-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc569:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4121-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4121-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4155-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4155-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4156-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4156-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4157-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	48                              # 48
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4157-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4173-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc570:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4120-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4123-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 255
	.byte	1                               # 
	.byte	26                              # DW_OP_and
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4176-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	30                              # 30
	.byte	148                             # DW_OP_deref_size
	.byte	1                               # 
	.byte	168                             # DW_OP_convert
	.asciz	"\253\200\200"                  # 
	.byte	168                             # DW_OP_convert
	.asciz	"\260\200\200"                  # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc571:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4125-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4125-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4128-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4128-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4129-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	127                             # DW_OP_breg15
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc572:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4125-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4126-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4127-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4128-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4128-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4131-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc573:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4164-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4166-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp4166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4168-.Lfunc_begin0        #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	23                              # DW_TAG_union_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	55                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	56                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	57                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	58                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	59                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	60                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	61                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	62                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	63                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	64                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	65                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	66                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	67                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	68                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	69                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	70                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	71                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	72                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	73                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.ascii	"\210\001"                      # DW_AT_alignment
	.byte	15                              # DW_FORM_udata
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	74                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	75                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	76                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	77                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	78                              # Abbreviation Code
	.byte	53                              # DW_TAG_volatile_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	79                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	80                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	81                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	82                              # Abbreviation Code
	.byte	24                              # DW_TAG_unspecified_parameters
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	83                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	84                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	85                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	86                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	87                              # Abbreviation Code
	.byte	55                              # DW_TAG_restrict_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	88                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	89                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	90                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	91                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	92                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	93                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	94                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	95                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	96                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	97                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	98                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	99                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	100                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	101                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	102                             # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	103                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	104                             # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	105                             # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	106                             # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.ascii	"\202\001"                      # DW_AT_call_tail_call
	.byte	25                              # DW_FORM_flag_present
	.ascii	"\201\001"                      # DW_AT_call_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	107                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	108                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	109                             # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	110                             # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	111                             # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	112                             # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	113                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	114                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	115                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	116                             # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	54                              # DW_AT_calling_convention
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	117                             # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	118                             # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	119                             # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	120                             # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	121                             # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	122                             # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x8d1f DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	89                              # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin0      # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x5 DW_TAG_base_type
	.short	1138                            # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x30:0x5 DW_TAG_base_type
	.short	1137                            # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x35:0x5 DW_TAG_base_type
	.short	1136                            # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x3a:0x5 DW_TAG_base_type
	.short	1135                            # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x3f:0x5 DW_TAG_base_type
	.short	1134                            # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	2                               # Abbrev [2] 0x44:0x5 DW_TAG_base_type
	.short	1133                            # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x49:0xb DW_TAG_variable
	.long	84                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	926                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	0
	.byte	4                               # Abbrev [4] 0x54:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x59:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	50                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	6                               # Abbrev [6] 0x60:0x4 DW_TAG_base_type
	.byte	3                               # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	7                               # Abbrev [7] 0x64:0x4 DW_TAG_base_type
	.byte	4                               # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	3                               # Abbrev [3] 0x68:0xb DW_TAG_variable
	.long	115                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	936                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	1
	.byte	4                               # Abbrev [4] 0x73:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x78:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	58                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x7f:0xb DW_TAG_variable
	.long	138                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1017                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	2
	.byte	4                               # Abbrev [4] 0x8a:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	24                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x96:0xb DW_TAG_variable
	.long	161                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1020                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	3
	.byte	4                               # Abbrev [4] 0xa1:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa6:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xad:0xb DW_TAG_variable
	.long	161                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	4
	.byte	3                               # Abbrev [3] 0xb8:0xb DW_TAG_variable
	.long	195                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1026                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	5
	.byte	4                               # Abbrev [4] 0xc3:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xcf:0xb DW_TAG_variable
	.long	218                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1032                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	6
	.byte	4                               # Abbrev [4] 0xda:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xdf:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xe6:0xb DW_TAG_variable
	.long	195                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1035                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	7
	.byte	3                               # Abbrev [3] 0xf1:0xb DW_TAG_variable
	.long	218                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1036                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	8
	.byte	3                               # Abbrev [3] 0xfc:0xb DW_TAG_variable
	.long	263                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1047                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	9
	.byte	4                               # Abbrev [4] 0x107:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x10c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	49                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x113:0xb DW_TAG_variable
	.long	286                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1055                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	10
	.byte	4                               # Abbrev [4] 0x11e:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x123:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	45                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x12a:0xb DW_TAG_variable
	.long	309                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1057                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	11
	.byte	4                               # Abbrev [4] 0x135:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x13a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	65                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x141:0xb DW_TAG_variable
	.long	332                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1058                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	12
	.byte	4                               # Abbrev [4] 0x14c:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x151:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	21                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x158:0xb DW_TAG_variable
	.long	355                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1112                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	13
	.byte	4                               # Abbrev [4] 0x163:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x168:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	26                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x16f:0xb DW_TAG_variable
	.long	378                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1113                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	14
	.byte	4                               # Abbrev [4] 0x17a:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x17f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x186:0xb DW_TAG_variable
	.long	401                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1119                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	15
	.byte	4                               # Abbrev [4] 0x191:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x196:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x19d:0xb DW_TAG_variable
	.long	424                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1122                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	16
	.byte	4                               # Abbrev [4] 0x1a8:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x1ad:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	29                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x1b4:0x8 DW_TAG_variable
	.long	263                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1127                            # DW_AT_decl_line
	.byte	3                               # Abbrev [3] 0x1bc:0xb DW_TAG_variable
	.long	455                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1133                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	17
	.byte	4                               # Abbrev [4] 0x1c7:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x1cc:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	25                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x1d3:0xb DW_TAG_variable
	.long	478                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1134                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	18
	.byte	4                               # Abbrev [4] 0x1de:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x1e3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x1ea:0xb DW_TAG_variable
	.long	161                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1135                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	19
	.byte	3                               # Abbrev [3] 0x1f5:0xb DW_TAG_variable
	.long	161                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1136                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	20
	.byte	3                               # Abbrev [3] 0x200:0xb DW_TAG_variable
	.long	523                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1137                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	21
	.byte	4                               # Abbrev [4] 0x20b:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x210:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	22                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x217:0xb DW_TAG_variable
	.long	546                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2256                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	22
	.byte	4                               # Abbrev [4] 0x222:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x227:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	28                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x22e:0x609 DW_TAG_subprogram
	.ascii	"\205\005"                      # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1152                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2838                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	10                              # Abbrev [10] 0x23c:0x9 DW_TAG_variable
	.byte	5                               # DW_AT_name
	.long	2103                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2876                            # DW_AT_decl_line
	.byte	10                              # Abbrev [10] 0x245:0x9 DW_TAG_variable
	.byte	9                               # DW_AT_name
	.long	2207                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	11                              # Abbrev [11] 0x24e:0xc DW_TAG_formal_parameter
	.ascii	"\362\003"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2838                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x25a:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\240\002"
	.short	1156                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2842                            # DW_AT_decl_line
	.long	36078                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x268:0xc DW_TAG_variable
	.ascii	"\364\003"                      # DW_AT_location
	.short	1224                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2840                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x274:0xc DW_TAG_variable
	.ascii	"\365\003"                      # DW_AT_location
	.short	1225                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2841                            # DW_AT_decl_line
	.long	36090                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x280:0xc DW_TAG_variable
	.ascii	"\366\003"                      # DW_AT_location
	.short	1115                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2843                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x28c:0x27 DW_TAG_lexical_block
	.ascii	"\206\005"                      # DW_AT_low_pc
	.long	.Ltmp3540-.Ltmp3529             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x293:0xc DW_TAG_variable
	.ascii	"\367\003"                      # DW_AT_location
	.short	1205                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2865                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x29f:0x13 DW_TAG_lexical_block
	.ascii	"\206\005"                      # DW_AT_low_pc
	.long	.Ltmp3536-.Ltmp3529             # DW_AT_high_pc
	.byte	15                              # Abbrev [15] 0x2a6:0xb DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	94
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2858                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x2b3:0x4d DW_TAG_lexical_block
	.ascii	"\207\005"                      # DW_AT_low_pc
	.long	.Ltmp3617-.Ltmp3542             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x2ba:0xb DW_TAG_variable
	.ascii	"\370\003"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2874                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x2c5:0x3a DW_TAG_lexical_block
	.ascii	"\207\005"                      # DW_AT_low_pc
	.long	.Ltmp3617-.Ltmp3542             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x2cc:0xc DW_TAG_variable
	.ascii	"\371\003"                      # DW_AT_location
	.short	1226                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2878                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x2d8:0x26 DW_TAG_lexical_block
	.byte	120                             # DW_AT_ranges
	.byte	18                              # Abbrev [18] 0x2da:0xa DW_TAG_variable
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2882                            # DW_AT_decl_line
	.long	3158                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x2e4:0x19 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.byte	121                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2893                            # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x2ee:0x7 DW_TAG_formal_parameter
	.ascii	"\372\003"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x2f5:0x7 DW_TAG_variable
	.ascii	"\373\003"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x300:0x46 DW_TAG_lexical_block
	.ascii	"\210\005"                      # DW_AT_low_pc
	.long	.Ltmp3640-.Ltmp3620             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x307:0xc DW_TAG_variable
	.ascii	"\374\003"                      # DW_AT_location
	.short	1227                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2909                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x313:0xc DW_TAG_variable
	.ascii	"\376\003"                      # DW_AT_location
	.short	315                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2908                            # DW_AT_decl_line
	.long	10436                           # DW_AT_type
	.byte	14                              # Abbrev [14] 0x31f:0x13 DW_TAG_lexical_block
	.ascii	"\210\005"                      # DW_AT_low_pc
	.long	.Ltmp3632-.Ltmp3620             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x326:0xb DW_TAG_variable
	.ascii	"\375\003"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2911                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x332:0x13 DW_TAG_lexical_block
	.ascii	"\211\005"                      # DW_AT_low_pc
	.long	.Ltmp3639-.Ltmp3632             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x339:0xb DW_TAG_variable
	.ascii	"\377\003"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2913                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x346:0x27 DW_TAG_lexical_block
	.ascii	"\212\005"                      # DW_AT_low_pc
	.long	.Ltmp3670-.Ltmp3641             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x34d:0xc DW_TAG_variable
	.ascii	"\200\004"                      # DW_AT_location
	.short	307                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2918                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x359:0x13 DW_TAG_lexical_block
	.ascii	"\212\005"                      # DW_AT_low_pc
	.long	.Ltmp3670-.Ltmp3641             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x360:0xb DW_TAG_variable
	.ascii	"\201\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2919                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x36d:0x63 DW_TAG_lexical_block
	.ascii	"\213\005"                      # DW_AT_low_pc
	.long	.Ltmp3680-.Ltmp3672             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x374:0x10 DW_TAG_variable
	.byte	5                               # DW_AT_location
	.byte	124
	.ascii	"\350\333\001"
	.byte	159
	.short	603                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2928                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x384:0xc DW_TAG_variable
	.ascii	"\202\004"                      # DW_AT_location
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2929                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x390:0x3f DW_TAG_inlined_subroutine
	.long	35419                           # DW_AT_abstract_origin
	.ascii	"\214\005"                      # DW_AT_low_pc
	.long	.Ltmp3679-.Ltmp3673             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2930                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x39f:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	124
	.ascii	"\350\333\001"
	.byte	159
	.long	35425                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x3aa:0x7 DW_TAG_formal_parameter
	.ascii	"\203\004"                      # DW_AT_location
	.long	35435                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x3b1:0x16 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	148
	.byte	1
	.byte	168
	.asciz	"\253\200\200"
	.byte	168
	.asciz	"\260\200\200"
	.byte	159
	.long	35445                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x3c7:0x7 DW_TAG_formal_parameter
	.ascii	"\204\004"                      # DW_AT_location
	.long	35455                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x3d0:0x6d DW_TAG_lexical_block
	.ascii	"\215\005"                      # DW_AT_low_pc
	.long	.Ltmp3691-.Ltmp3682             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x3d7:0x10 DW_TAG_variable
	.byte	5                               # DW_AT_location
	.byte	124
	.ascii	"\270\331\001"
	.byte	159
	.short	603                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2935                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x3e7:0xc DW_TAG_variable
	.ascii	"\205\004"                      # DW_AT_location
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2936                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x3f3:0xa DW_TAG_variable
	.short	1237                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2937                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	22                              # Abbrev [22] 0x3fd:0x3f DW_TAG_inlined_subroutine
	.long	35419                           # DW_AT_abstract_origin
	.ascii	"\216\005"                      # DW_AT_low_pc
	.long	.Ltmp3689-.Ltmp3683             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2938                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x40c:0xb DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	124
	.ascii	"\270\331\001"
	.byte	159
	.long	35425                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x417:0x7 DW_TAG_formal_parameter
	.ascii	"\206\004"                      # DW_AT_location
	.long	35435                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x41e:0x16 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	148
	.byte	1
	.byte	168
	.asciz	"\253\200\200"
	.byte	168
	.asciz	"\260\200\200"
	.byte	159
	.long	35445                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x434:0x7 DW_TAG_formal_parameter
	.ascii	"\207\004"                      # DW_AT_location
	.long	35455                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x43d:0xb7 DW_TAG_lexical_block
	.ascii	"\217\005"                      # DW_AT_low_pc
	.long	.Ltmp3724-.Ltmp3693             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x444:0xc DW_TAG_variable
	.ascii	"\363\003"                      # DW_AT_location
	.short	1223                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2955                            # DW_AT_decl_line
	.long	14823                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x450:0xc DW_TAG_variable
	.ascii	"\210\004"                      # DW_AT_location
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2952                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x45c:0xc DW_TAG_variable
	.ascii	"\215\004"                      # DW_AT_location
	.short	1228                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2953                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x468:0xa DW_TAG_variable
	.short	603                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2951                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x472:0xa DW_TAG_variable
	.short	1237                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2954                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	22                              # Abbrev [22] 0x47c:0x34 DW_TAG_inlined_subroutine
	.long	35419                           # DW_AT_abstract_origin
	.ascii	"\220\005"                      # DW_AT_low_pc
	.long	.Ltmp3702-.Ltmp3695             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2956                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x48b:0x7 DW_TAG_formal_parameter
	.ascii	"\211\004"                      # DW_AT_location
	.long	35435                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x492:0x16 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	145
	.asciz	"\300"
	.byte	148
	.byte	1
	.byte	168
	.asciz	"\253\200\200"
	.byte	168
	.asciz	"\260\200\200"
	.byte	159
	.long	35445                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4a8:0x7 DW_TAG_formal_parameter
	.ascii	"\212\004"                      # DW_AT_location
	.long	35455                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x4b0:0x43 DW_TAG_lexical_block
	.ascii	"\221\005"                      # DW_AT_low_pc
	.long	.Ltmp3715-.Ltmp3703             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x4b7:0xb DW_TAG_variable
	.ascii	"\213\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2957                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x4c2:0x30 DW_TAG_lexical_block
	.ascii	"\222\005"                      # DW_AT_low_pc
	.long	.Ltmp3715-.Ltmp3706             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x4c9:0xc DW_TAG_variable
	.ascii	"\214\004"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2958                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x4d5:0x1c DW_TAG_lexical_block
	.ascii	"\222\005"                      # DW_AT_low_pc
	.long	.Ltmp3715-.Ltmp3706             # DW_AT_high_pc
	.byte	18                              # Abbrev [18] 0x4dc:0xa DW_TAG_variable
	.short	1238                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2960                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4e6:0xa DW_TAG_variable
	.short	1239                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2961                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x4f4:0x165 DW_TAG_lexical_block
	.ascii	"\223\005"                      # DW_AT_low_pc
	.long	.Ltmp3977-.Ltmp3728             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x4fb:0xc DW_TAG_variable
	.ascii	"\216\004"                      # DW_AT_location
	.short	1229                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2989                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x507:0xc DW_TAG_variable
	.ascii	"\217\004"                      # DW_AT_location
	.short	1230                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2990                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x513:0xc DW_TAG_variable
	.ascii	"\220\004"                      # DW_AT_location
	.short	1231                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2992                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x51f:0xc DW_TAG_variable
	.ascii	"\221\004"                      # DW_AT_location
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2993                            # DW_AT_decl_line
	.long	3158                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x52b:0xc DW_TAG_variable
	.ascii	"\222\004"                      # DW_AT_location
	.short	603                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2996                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x537:0xc DW_TAG_variable
	.ascii	"\223\004"                      # DW_AT_location
	.short	1167                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2997                            # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x543:0xc DW_TAG_variable
	.ascii	"\225\004"                      # DW_AT_location
	.short	1233                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2998                            # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x54f:0xc DW_TAG_variable
	.ascii	"\226\004"                      # DW_AT_location
	.short	1234                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3036                            # DW_AT_decl_line
	.long	36108                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x55b:0xc DW_TAG_variable
	.ascii	"\227\004"                      # DW_AT_location
	.short	1235                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3037                            # DW_AT_decl_line
	.long	36126                           # DW_AT_type
	.byte	14                              # Abbrev [14] 0x567:0x14 DW_TAG_lexical_block
	.ascii	"\224\005"                      # DW_AT_low_pc
	.long	.Ltmp3738-.Ltmp3735             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x56e:0xc DW_TAG_variable
	.ascii	"\224\004"                      # DW_AT_location
	.short	1232                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3004                            # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x57b:0xe DW_TAG_lexical_block
	.byte	122                             # DW_AT_ranges
	.byte	16                              # Abbrev [16] 0x57d:0xb DW_TAG_variable
	.ascii	"\230\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3038                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x589:0x22 DW_TAG_lexical_block
	.ascii	"\225\005"                      # DW_AT_low_pc
	.long	.Ltmp3839-.Ltmp3782             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x590:0xb DW_TAG_variable
	.ascii	"\231\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3049                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x59b:0xf DW_TAG_lexical_block
	.byte	123                             # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x59d:0xc DW_TAG_variable
	.ascii	"\232\004"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3051                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5ab:0xe DW_TAG_lexical_block
	.byte	124                             # DW_AT_ranges
	.byte	16                              # Abbrev [16] 0x5ad:0xb DW_TAG_variable
	.ascii	"\233\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3068                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5b9:0x7a DW_TAG_lexical_block
	.ascii	"\226\005"                      # DW_AT_low_pc
	.long	.Ltmp3959-.Ltmp3862             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5c0:0xc DW_TAG_variable
	.ascii	"\234\004"                      # DW_AT_location
	.short	1081                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3084                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5cc:0x66 DW_TAG_lexical_block
	.ascii	"\227\005"                      # DW_AT_low_pc
	.long	.Ltmp3959-.Ltmp3864             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5d3:0xc DW_TAG_variable
	.ascii	"\235\004"                      # DW_AT_location
	.short	1226                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3085                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5df:0x52 DW_TAG_lexical_block
	.ascii	"\230\005"                      # DW_AT_low_pc
	.long	.Ltmp3959-.Ltmp3867             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5e6:0xc DW_TAG_variable
	.ascii	"\236\004"                      # DW_AT_location
	.short	953                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3089                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5f2:0xc DW_TAG_variable
	.ascii	"\237\004"                      # DW_AT_location
	.short	1236                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3088                            # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5fe:0xc DW_TAG_variable
	.ascii	"\242\004"                      # DW_AT_location
	.short	315                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3087                            # DW_AT_decl_line
	.long	10436                           # DW_AT_type
	.byte	14                              # Abbrev [14] 0x60a:0x13 DW_TAG_lexical_block
	.ascii	"\230\005"                      # DW_AT_low_pc
	.long	.Ltmp3929-.Ltmp3867             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x611:0xb DW_TAG_variable
	.ascii	"\240\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3090                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x61d:0x13 DW_TAG_lexical_block
	.ascii	"\231\005"                      # DW_AT_low_pc
	.long	.Ltmp3957-.Ltmp3950             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x624:0xb DW_TAG_variable
	.ascii	"\241\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3098                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x633:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\232\005"                      # DW_AT_low_pc
	.long	.Ltmp3973-.Ltmp3967             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	3117                            # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x642:0x7 DW_TAG_formal_parameter
	.ascii	"\244\004"                      # DW_AT_location
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x649:0x7 DW_TAG_formal_parameter
	.ascii	"\243\004"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x650:0x7 DW_TAG_variable
	.ascii	"\245\004"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x659:0x1d DW_TAG_lexical_block
	.byte	125                             # DW_AT_ranges
	.byte	16                              # Abbrev [16] 0x65b:0xb DW_TAG_variable
	.ascii	"\246\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3148                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x666:0xf DW_TAG_lexical_block
	.byte	126                             # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x668:0xc DW_TAG_variable
	.ascii	"\247\004"                      # DW_AT_location
	.short	710                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3150                            # DW_AT_decl_line
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x676:0x7 DW_TAG_call_site
	.long	35470                           # DW_AT_call_origin
	.ascii	"\233\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x67d:0x7 DW_TAG_call_site
	.long	35481                           # DW_AT_call_origin
	.ascii	"\234\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x684:0x7 DW_TAG_call_site
	.long	23469                           # DW_AT_call_origin
	.ascii	"\235\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x68b:0x7 DW_TAG_call_site
	.long	23469                           # DW_AT_call_origin
	.ascii	"\236\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x692:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\237\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x699:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\240\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6a0:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\241\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6a7:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\242\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6ae:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\243\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6b5:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\244\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6bc:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\245\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6c3:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\246\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6ca:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\247\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6d1:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\250\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6d8:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\251\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6df:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\252\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6e6:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\253\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6ed:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\254\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6f4:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\255\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6fb:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\256\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x702:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\257\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x709:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\260\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x710:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\261\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x717:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\262\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x71e:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\263\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x725:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\264\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x72c:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\265\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x733:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\266\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x73a:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\267\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x741:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\270\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x748:0x7 DW_TAG_call_site
	.long	35492                           # DW_AT_call_origin
	.ascii	"\271\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x74f:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\272\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x756:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\273\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x75d:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\274\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x764:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\275\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x76b:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\276\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x772:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\225\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x779:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\277\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x780:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\300\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x787:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\301\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x78e:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\302\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x795:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\303\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x79c:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\304\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7a3:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\305\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7aa:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\306\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7b1:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\307\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7b8:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\310\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7bf:0x7 DW_TAG_call_site
	.long	35503                           # DW_AT_call_origin
	.ascii	"\311\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7c6:0x7 DW_TAG_call_site
	.long	35514                           # DW_AT_call_origin
	.ascii	"\312\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7cd:0x7 DW_TAG_call_site
	.long	35514                           # DW_AT_call_origin
	.ascii	"\313\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7d4:0x7 DW_TAG_call_site
	.long	35526                           # DW_AT_call_origin
	.ascii	"\314\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7db:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\315\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7e2:0x7 DW_TAG_call_site
	.long	35537                           # DW_AT_call_origin
	.ascii	"\316\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7e9:0x7 DW_TAG_call_site
	.long	35548                           # DW_AT_call_origin
	.ascii	"\317\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7f0:0x7 DW_TAG_call_site
	.long	35548                           # DW_AT_call_origin
	.ascii	"\320\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7f7:0x7 DW_TAG_call_site
	.long	35548                           # DW_AT_call_origin
	.ascii	"\321\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x7fe:0x7 DW_TAG_call_site
	.long	35548                           # DW_AT_call_origin
	.ascii	"\322\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x805:0x7 DW_TAG_call_site
	.long	35559                           # DW_AT_call_origin
	.ascii	"\323\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x80c:0x7 DW_TAG_call_site
	.long	35571                           # DW_AT_call_origin
	.ascii	"\324\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x813:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\325\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x81a:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\326\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x821:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\327\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x828:0x7 DW_TAG_call_site
	.long	35481                           # DW_AT_call_origin
	.ascii	"\330\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x82f:0x7 DW_TAG_call_site
	.long	35481                           # DW_AT_call_origin
	.ascii	"\331\005"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x837:0xc DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x83c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	25                              # Abbrev [25] 0x843:0x5 DW_TAG_const_type
	.long	2120                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0x848:0x8 DW_TAG_typedef
	.long	2128                            # DW_AT_type
	.byte	8                               # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0x850:0x8 DW_TAG_typedef
	.long	2136                            # DW_AT_type
	.byte	7                               # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0x858:0x4 DW_TAG_base_type
	.byte	6                               # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x85c:0xb DW_TAG_variable
	.long	401                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	23
	.byte	3                               # Abbrev [3] 0x867:0xb DW_TAG_variable
	.long	401                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	24
	.byte	3                               # Abbrev [3] 0x872:0xb DW_TAG_variable
	.long	401                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	25
	.byte	3                               # Abbrev [3] 0x87d:0xb DW_TAG_variable
	.long	2184                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	26
	.byte	4                               # Abbrev [4] 0x888:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x88d:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x894:0xb DW_TAG_variable
	.long	2184                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2877                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	27
	.byte	4                               # Abbrev [4] 0x89f:0xc DW_TAG_array_type
	.long	2219                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8a4:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	25                              # Abbrev [25] 0x8ab:0x5 DW_TAG_const_type
	.long	2224                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x8b0:0x5 DW_TAG_pointer_type
	.long	2229                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0x8b5:0x5 DW_TAG_const_type
	.long	96                              # DW_AT_type
	.byte	3                               # Abbrev [3] 0x8ba:0xb DW_TAG_variable
	.long	2245                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2886                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	28
	.byte	4                               # Abbrev [4] 0x8c5:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8ca:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	98                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x8d1:0xb DW_TAG_variable
	.long	2268                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2898                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	29
	.byte	4                               # Abbrev [4] 0x8dc:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8e1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x8e8:0xb DW_TAG_variable
	.long	478                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2914                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	30
	.byte	3                               # Abbrev [3] 0x8f3:0xb DW_TAG_variable
	.long	455                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2915                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	31
	.byte	3                               # Abbrev [3] 0x8fe:0xb DW_TAG_variable
	.long	2313                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2931                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	32
	.byte	4                               # Abbrev [4] 0x909:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x90e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	10                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x915:0xb DW_TAG_variable
	.long	2336                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2940                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	33
	.byte	4                               # Abbrev [4] 0x920:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x925:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	75                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x92c:0xb DW_TAG_variable
	.long	2359                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2971                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	34
	.byte	4                               # Abbrev [4] 0x937:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x93c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	107                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x943:0xb DW_TAG_variable
	.long	2382                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3012                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	35
	.byte	4                               # Abbrev [4] 0x94e:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x953:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	14                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x95a:0xb DW_TAG_variable
	.long	2405                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3013                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	36
	.byte	4                               # Abbrev [4] 0x965:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x96a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	30                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x971:0xb DW_TAG_variable
	.long	2428                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3020                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	37
	.byte	4                               # Abbrev [4] 0x97c:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x981:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	44                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x988:0xb DW_TAG_variable
	.long	424                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3027                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	38
	.byte	3                               # Abbrev [3] 0x993:0xb DW_TAG_variable
	.long	263                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3031                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	39
	.byte	3                               # Abbrev [3] 0x99e:0xb DW_TAG_variable
	.long	2473                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3044                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	40
	.byte	4                               # Abbrev [4] 0x9a9:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x9ae:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	47                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x9b5:0xb DW_TAG_variable
	.long	2496                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3057                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	41
	.byte	4                               # Abbrev [4] 0x9c0:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x9c5:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	105                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x9cc:0xb DW_TAG_variable
	.long	2473                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3074                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	42
	.byte	3                               # Abbrev [3] 0x9d7:0xb DW_TAG_variable
	.long	424                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3081                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	43
	.byte	3                               # Abbrev [3] 0x9e2:0xb DW_TAG_variable
	.long	2541                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3100                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	44
	.byte	4                               # Abbrev [4] 0x9ed:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x9f2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	15                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x9f9:0xb DW_TAG_variable
	.long	2184                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3100                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	45
	.byte	3                               # Abbrev [3] 0xa04:0xb DW_TAG_variable
	.long	2575                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3106                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	46
	.byte	4                               # Abbrev [4] 0xa0f:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa14:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xa1b:0xb DW_TAG_variable
	.long	2598                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3112                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	47
	.byte	4                               # Abbrev [4] 0xa26:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa2b:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	68                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xa32:0xb DW_TAG_variable
	.long	2621                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	3121                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	48
	.byte	4                               # Abbrev [4] 0xa3d:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa42:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	11                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xa49:0xb DW_TAG_variable
	.byte	10                              # DW_AT_name
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
	.byte	0                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	49
	.byte	6                               # Abbrev [6] 0xa54:0x4 DW_TAG_base_type
	.byte	11                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0xa58:0xb DW_TAG_variable
	.long	2659                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	397                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	50
	.byte	4                               # Abbrev [4] 0xa63:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa68:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xa6f:0xb DW_TAG_variable
	.long	2428                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	51
	.byte	3                               # Abbrev [3] 0xa7a:0xb DW_TAG_variable
	.long	2268                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	411                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	52
	.byte	3                               # Abbrev [3] 0xa85:0xb DW_TAG_variable
	.long	2704                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	421                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	53
	.byte	4                               # Abbrev [4] 0xa90:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xa95:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	36                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xa9c:0xb DW_TAG_variable
	.long	2727                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	440                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	54
	.byte	4                               # Abbrev [4] 0xaa7:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xaac:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	39                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xab3:0xb DW_TAG_variable
	.long	2268                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	445                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	55
	.byte	3                               # Abbrev [3] 0xabe:0xb DW_TAG_variable
	.long	2761                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	464                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	56
	.byte	4                               # Abbrev [4] 0xac9:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xace:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	41                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xad5:0xb DW_TAG_variable
	.long	2784                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	57
	.byte	4                               # Abbrev [4] 0xae0:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xae5:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	31                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xaec:0xb DW_TAG_variable
	.long	2807                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	472                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	58
	.byte	4                               # Abbrev [4] 0xaf7:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xafc:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	33                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xb03:0xb DW_TAG_variable
	.long	2830                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	519                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	59
	.byte	4                               # Abbrev [4] 0xb0e:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xb13:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	48                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xb1a:0xb DW_TAG_variable
	.long	2727                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	527                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	60
	.byte	3                               # Abbrev [3] 0xb25:0xb DW_TAG_variable
	.long	84                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	532                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	61
	.byte	3                               # Abbrev [3] 0xb30:0xb DW_TAG_variable
	.long	2875                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	62
	.byte	4                               # Abbrev [4] 0xb3b:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xb40:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	53                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xb47:0xb DW_TAG_variable
	.long	2830                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	545                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	63
	.byte	3                               # Abbrev [3] 0xb52:0xb DW_TAG_variable
	.long	2830                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	551                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	64
	.byte	3                               # Abbrev [3] 0xb5d:0xb DW_TAG_variable
	.long	2473                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	556                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	65
	.byte	3                               # Abbrev [3] 0xb68:0xb DW_TAG_variable
	.long	2428                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	578                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	66
	.byte	3                               # Abbrev [3] 0xb73:0xb DW_TAG_variable
	.long	2942                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	599                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	67
	.byte	4                               # Abbrev [4] 0xb7e:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xb83:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	51                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xb8a:0xb DW_TAG_variable
	.long	2965                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	604                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	68
	.byte	4                               # Abbrev [4] 0xb95:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xb9a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	42                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xba1:0xb DW_TAG_variable
	.long	2988                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	731                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	69
	.byte	4                               # Abbrev [4] 0xbac:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xbb1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	23                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xbb8:0xb DW_TAG_variable
	.long	546                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	764                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	70
	.byte	3                               # Abbrev [3] 0xbc3:0xb DW_TAG_variable
	.long	3022                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	786                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	71
	.byte	4                               # Abbrev [4] 0xbce:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xbd3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	43                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xbda:0xb DW_TAG_variable
	.long	3045                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	793                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	72
	.byte	4                               # Abbrev [4] 0xbe5:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xbea:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	35                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xbf1:0xb DW_TAG_variable
	.long	2761                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	869                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	73
	.byte	3                               # Abbrev [3] 0xbfc:0xb DW_TAG_variable
	.long	3079                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	872                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	74
	.byte	4                               # Abbrev [4] 0xc07:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc0c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0xc13:0xb DW_TAG_variable
	.byte	12                              # DW_AT_name
	.long	3102                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	75
	.byte	4                               # Abbrev [4] 0xc1e:0xc DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc23:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	76                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0xc2a:0xb DW_TAG_variable
	.byte	13                              # DW_AT_name
	.long	3125                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	188                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	76
	.byte	4                               # Abbrev [4] 0xc35:0xd DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0xc3a:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xc42:0x8 DW_TAG_variable
	.byte	14                              # DW_AT_name
	.long	3146                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0xc4a:0xc DW_TAG_array_type
	.long	3158                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc4f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	27                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	25                              # Abbrev [25] 0xc56:0x5 DW_TAG_const_type
	.long	2644                            # DW_AT_type
	.byte	3                               # Abbrev [3] 0xc5b:0xb DW_TAG_variable
	.long	3045                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2636                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	77
	.byte	3                               # Abbrev [3] 0xc66:0xb DW_TAG_variable
	.long	2405                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2750                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	78
	.byte	3                               # Abbrev [3] 0xc71:0xb DW_TAG_variable
	.long	3196                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2762                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	79
	.byte	4                               # Abbrev [4] 0xc7c:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc81:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xc88:0xb DW_TAG_variable
	.long	3219                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2767                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	80
	.byte	4                               # Abbrev [4] 0xc93:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xc98:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	84                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	32                              # Abbrev [32] 0xc9f:0xa DW_TAG_variable
	.long	3196                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	85                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	81
	.byte	32                              # Abbrev [32] 0xca9:0xa DW_TAG_variable
	.long	2184                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	82
	.byte	32                              # Abbrev [32] 0xcb3:0xa DW_TAG_variable
	.long	218                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	83
	.byte	31                              # Abbrev [31] 0xcbd:0x8 DW_TAG_variable
	.byte	15                              # DW_AT_name
	.long	3269                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0xcc5:0xc DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xcca:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xcd1:0xb DW_TAG_variable
	.long	3292                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2826                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	84
	.byte	4                               # Abbrev [4] 0xcdc:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xce1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	34                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xce8:0xb DW_TAG_variable
	.long	3315                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2827                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	85
	.byte	4                               # Abbrev [4] 0xcf3:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xcf8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0xcff:0xb DW_TAG_variable
	.long	3338                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	2827                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	86
	.byte	4                               # Abbrev [4] 0xd0a:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0xd0f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0xd16:0xb DW_TAG_variable
	.byte	16                              # DW_AT_name
	.long	3361                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	87
	.byte	4                               # Abbrev [4] 0xd21:0x18 DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xd26:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0xd2c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0xd32:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xd39:0x8 DW_TAG_variable
	.byte	17                              # DW_AT_name
	.long	3393                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0xd41:0xc DW_TAG_array_type
	.long	2115                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xd46:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0xd4d:0x8 DW_TAG_variable
	.byte	18                              # DW_AT_name
	.long	3413                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0xd55:0xc DW_TAG_array_type
	.long	3425                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xd5a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	25                              # Abbrev [25] 0xd61:0x5 DW_TAG_const_type
	.long	3430                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xd66:0x8 DW_TAG_typedef
	.long	3438                            # DW_AT_type
	.byte	21                              # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xd6e:0x8 DW_TAG_typedef
	.long	3446                            # DW_AT_type
	.byte	20                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0xd76:0x4 DW_TAG_base_type
	.byte	19                              # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	29                              # Abbrev [29] 0xd7a:0xb DW_TAG_variable
	.byte	22                              # DW_AT_name
	.long	3393                            # DW_AT_type
	.byte	6                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	88
	.byte	33                              # Abbrev [33] 0xd85:0x24 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	32                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xd8e:0x3 DW_TAG_enumerator
	.byte	24                              # DW_AT_name
	.byte	66                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xd91:0x3 DW_TAG_enumerator
	.byte	25                              # DW_AT_name
	.byte	77                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xd94:0x3 DW_TAG_enumerator
	.byte	26                              # DW_AT_name
	.byte	88                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xd97:0x3 DW_TAG_enumerator
	.byte	27                              # DW_AT_name
	.byte	100                             # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xd9a:0x3 DW_TAG_enumerator
	.byte	28                              # DW_AT_name
	.byte	110                             # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xd9d:0x3 DW_TAG_enumerator
	.byte	29                              # DW_AT_name
	.byte	122                             # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xda0:0x4 DW_TAG_enumerator
	.byte	30                              # DW_AT_name
	.ascii	"\220\001"                      # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xda4:0x4 DW_TAG_enumerator
	.byte	31                              # DW_AT_name
	.ascii	"\364\001"                      # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	6                               # Abbrev [6] 0xda9:0x4 DW_TAG_base_type
	.byte	23                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	35                              # Abbrev [35] 0xdad:0x2c DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	44                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	565                             # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xdb7:0x3 DW_TAG_enumerator
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdba:0x3 DW_TAG_enumerator
	.byte	34                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdbd:0x3 DW_TAG_enumerator
	.byte	35                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdc0:0x3 DW_TAG_enumerator
	.byte	36                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdc3:0x3 DW_TAG_enumerator
	.byte	37                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdc6:0x3 DW_TAG_enumerator
	.byte	38                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdc9:0x3 DW_TAG_enumerator
	.byte	39                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdcc:0x3 DW_TAG_enumerator
	.byte	40                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdcf:0x3 DW_TAG_enumerator
	.byte	41                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdd2:0x3 DW_TAG_enumerator
	.byte	42                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdd5:0x3 DW_TAG_enumerator
	.byte	43                              # DW_AT_name
	.byte	12                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0xdd9:0x17 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	49                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	580                             # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xde3:0x3 DW_TAG_enumerator
	.byte	45                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xde6:0x3 DW_TAG_enumerator
	.byte	46                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xde9:0x3 DW_TAG_enumerator
	.byte	47                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdec:0x3 DW_TAG_enumerator
	.byte	48                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0xdf0:0x23 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	58                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	483                             # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xdfa:0x3 DW_TAG_enumerator
	.byte	50                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xdfd:0x3 DW_TAG_enumerator
	.byte	51                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe00:0x3 DW_TAG_enumerator
	.byte	52                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe03:0x3 DW_TAG_enumerator
	.byte	53                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe06:0x3 DW_TAG_enumerator
	.byte	54                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe09:0x3 DW_TAG_enumerator
	.byte	55                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe0c:0x3 DW_TAG_enumerator
	.byte	56                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe0f:0x3 DW_TAG_enumerator
	.byte	57                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0xe13:0x1a DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	64                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xe1d:0x3 DW_TAG_enumerator
	.byte	59                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe20:0x3 DW_TAG_enumerator
	.byte	60                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe23:0x3 DW_TAG_enumerator
	.byte	61                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe26:0x3 DW_TAG_enumerator
	.byte	62                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe29:0x3 DW_TAG_enumerator
	.byte	63                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xe2d:0x46 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	85                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xe36:0x3 DW_TAG_enumerator
	.byte	65                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe39:0x3 DW_TAG_enumerator
	.byte	66                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe3c:0x3 DW_TAG_enumerator
	.byte	67                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe3f:0x3 DW_TAG_enumerator
	.byte	68                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe42:0x3 DW_TAG_enumerator
	.byte	69                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe45:0x3 DW_TAG_enumerator
	.byte	70                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe48:0x3 DW_TAG_enumerator
	.byte	71                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe4b:0x3 DW_TAG_enumerator
	.byte	72                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe4e:0x3 DW_TAG_enumerator
	.byte	73                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe51:0x3 DW_TAG_enumerator
	.byte	74                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe54:0x3 DW_TAG_enumerator
	.byte	75                              # DW_AT_name
	.byte	10                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe57:0x3 DW_TAG_enumerator
	.byte	76                              # DW_AT_name
	.byte	11                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe5a:0x3 DW_TAG_enumerator
	.byte	77                              # DW_AT_name
	.byte	12                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe5d:0x3 DW_TAG_enumerator
	.byte	78                              # DW_AT_name
	.byte	13                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe60:0x3 DW_TAG_enumerator
	.byte	79                              # DW_AT_name
	.byte	14                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe63:0x3 DW_TAG_enumerator
	.byte	80                              # DW_AT_name
	.byte	15                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe66:0x3 DW_TAG_enumerator
	.byte	81                              # DW_AT_name
	.byte	16                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe69:0x3 DW_TAG_enumerator
	.byte	82                              # DW_AT_name
	.byte	17                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe6c:0x3 DW_TAG_enumerator
	.byte	83                              # DW_AT_name
	.byte	18                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe6f:0x3 DW_TAG_enumerator
	.byte	84                              # DW_AT_name
	.byte	19                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xe73:0x40 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	104                             # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xe7c:0x3 DW_TAG_enumerator
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe7f:0x3 DW_TAG_enumerator
	.byte	87                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe82:0x3 DW_TAG_enumerator
	.byte	88                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe85:0x3 DW_TAG_enumerator
	.byte	89                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe88:0x3 DW_TAG_enumerator
	.byte	90                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe8b:0x3 DW_TAG_enumerator
	.byte	91                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe8e:0x3 DW_TAG_enumerator
	.byte	92                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe91:0x3 DW_TAG_enumerator
	.byte	93                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe94:0x3 DW_TAG_enumerator
	.byte	94                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe97:0x3 DW_TAG_enumerator
	.byte	95                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe9a:0x3 DW_TAG_enumerator
	.byte	96                              # DW_AT_name
	.byte	10                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xe9d:0x3 DW_TAG_enumerator
	.byte	97                              # DW_AT_name
	.byte	11                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xea0:0x3 DW_TAG_enumerator
	.byte	98                              # DW_AT_name
	.byte	12                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xea3:0x3 DW_TAG_enumerator
	.byte	99                              # DW_AT_name
	.byte	13                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xea6:0x3 DW_TAG_enumerator
	.byte	100                             # DW_AT_name
	.byte	14                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xea9:0x3 DW_TAG_enumerator
	.byte	101                             # DW_AT_name
	.byte	15                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xeac:0x3 DW_TAG_enumerator
	.byte	102                             # DW_AT_name
	.byte	16                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xeaf:0x3 DW_TAG_enumerator
	.byte	103                             # DW_AT_name
	.byte	17                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0xeb3:0x27 DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xebb:0x3 DW_TAG_enumerator
	.byte	105                             # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xebe:0x3 DW_TAG_enumerator
	.byte	106                             # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xec1:0x3 DW_TAG_enumerator
	.byte	107                             # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xec4:0x3 DW_TAG_enumerator
	.byte	108                             # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xec7:0x3 DW_TAG_enumerator
	.byte	109                             # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xeca:0x3 DW_TAG_enumerator
	.byte	110                             # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xecd:0x3 DW_TAG_enumerator
	.byte	111                             # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xed0:0x3 DW_TAG_enumerator
	.byte	112                             # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xed3:0x3 DW_TAG_enumerator
	.byte	113                             # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xed6:0x3 DW_TAG_enumerator
	.byte	114                             # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xeda:0x1f DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	122                             # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	6                               # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xee3:0x3 DW_TAG_enumerator
	.byte	115                             # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xee6:0x3 DW_TAG_enumerator
	.byte	116                             # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xee9:0x3 DW_TAG_enumerator
	.byte	117                             # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xeec:0x3 DW_TAG_enumerator
	.byte	118                             # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xeef:0x3 DW_TAG_enumerator
	.byte	119                             # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xef2:0x3 DW_TAG_enumerator
	.byte	120                             # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xef5:0x3 DW_TAG_enumerator
	.byte	121                             # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xef9:0x2e DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	135                             # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	6                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xf02:0x3 DW_TAG_enumerator
	.byte	123                             # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf05:0x3 DW_TAG_enumerator
	.byte	124                             # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf08:0x3 DW_TAG_enumerator
	.byte	125                             # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf0b:0x3 DW_TAG_enumerator
	.byte	126                             # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf0e:0x3 DW_TAG_enumerator
	.byte	127                             # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf11:0x3 DW_TAG_enumerator
	.byte	128                             # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf14:0x3 DW_TAG_enumerator
	.byte	129                             # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf17:0x3 DW_TAG_enumerator
	.byte	130                             # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf1a:0x3 DW_TAG_enumerator
	.byte	131                             # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf1d:0x3 DW_TAG_enumerator
	.byte	132                             # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf20:0x3 DW_TAG_enumerator
	.byte	133                             # DW_AT_name
	.byte	10                              # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf23:0x3 DW_TAG_enumerator
	.byte	134                             # DW_AT_name
	.byte	11                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0xf27:0x1f DW_TAG_enumeration_type
	.long	3497                            # DW_AT_type
	.byte	143                             # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	6                               # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	34                              # Abbrev [34] 0xf30:0x3 DW_TAG_enumerator
	.byte	136                             # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf33:0x3 DW_TAG_enumerator
	.byte	137                             # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf36:0x3 DW_TAG_enumerator
	.byte	138                             # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf39:0x3 DW_TAG_enumerator
	.byte	139                             # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf3c:0x3 DW_TAG_enumerator
	.byte	140                             # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf3f:0x3 DW_TAG_enumerator
	.byte	141                             # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	34                              # Abbrev [34] 0xf42:0x3 DW_TAG_enumerator
	.byte	142                             # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0xf46:0x1 DW_TAG_pointer_type
	.byte	6                               # Abbrev [6] 0xf47:0x4 DW_TAG_base_type
	.byte	144                             # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	26                              # Abbrev [26] 0xf4b:0x8 DW_TAG_typedef
	.long	3923                            # DW_AT_type
	.byte	146                             # DW_AT_name
	.byte	11                              # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0xf53:0x4 DW_TAG_base_type
	.byte	145                             # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	6                               # Abbrev [6] 0xf57:0x4 DW_TAG_base_type
	.byte	147                             # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	27                              # Abbrev [27] 0xf5b:0x5 DW_TAG_pointer_type
	.long	2120                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0xf60:0x5 DW_TAG_pointer_type
	.long	3941                            # DW_AT_type
	.byte	26                              # Abbrev [26] 0xf65:0x8 DW_TAG_typedef
	.long	3949                            # DW_AT_type
	.byte	156                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	38                              # Abbrev [38] 0xf6d:0x20 DW_TAG_union_type
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	39                              # Abbrev [39] 0xf71:0x9 DW_TAG_member
	.byte	148                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0xf7a:0x9 DW_TAG_member
	.byte	151                             # DW_AT_name
	.long	3997                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0xf83:0x9 DW_TAG_member
	.byte	155                             # DW_AT_name
	.long	4029                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	26                              # Abbrev [26] 0xf8d:0x8 DW_TAG_typedef
	.long	3989                            # DW_AT_type
	.byte	150                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xf95:0x8 DW_TAG_typedef
	.long	3497                            # DW_AT_type
	.byte	149                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	4                               # Abbrev [4] 0xf9d:0xc DW_TAG_array_type
	.long	4009                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xfa2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	26                              # Abbrev [26] 0xfa9:0x8 DW_TAG_typedef
	.long	4017                            # DW_AT_type
	.byte	154                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xfb1:0x8 DW_TAG_typedef
	.long	4025                            # DW_AT_type
	.byte	153                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0xfb9:0x4 DW_TAG_base_type
	.byte	152                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	4                               # Abbrev [4] 0xfbd:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0xfc2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	26                              # Abbrev [26] 0xfc9:0x8 DW_TAG_typedef
	.long	4049                            # DW_AT_type
	.byte	159                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xfd1:0x8 DW_TAG_typedef
	.long	4057                            # DW_AT_type
	.byte	158                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	6                               # Abbrev [6] 0xfd9:0x4 DW_TAG_base_type
	.byte	157                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	27                              # Abbrev [27] 0xfdd:0x5 DW_TAG_pointer_type
	.long	2644                            # DW_AT_type
	.byte	40                              # Abbrev [40] 0xfe2:0x2a0 DW_TAG_subprogram
	.byte	89                              # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1139                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	883                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	6059                            # DW_AT_type
                                        # DW_AT_external
	.byte	41                              # Abbrev [41] 0xff3:0xa DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	883                             # DW_AT_decl_line
	.long	13709                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0xffd:0xd DW_TAG_variable
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	32
	.short	1156                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.long	35874                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x100a:0xd DW_TAG_variable
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	28
	.short	1157                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1052                            # DW_AT_decl_line
	.long	35887                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1017:0xb DW_TAG_variable
	.byte	1                               # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	885                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1022:0xb DW_TAG_variable
	.byte	2                               # DW_AT_location
	.short	1158                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	918                             # DW_AT_decl_line
	.long	4041                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x102d:0xb DW_TAG_variable
	.byte	3                               # DW_AT_location
	.short	868                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	887                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1038:0xb DW_TAG_variable
	.byte	4                               # DW_AT_location
	.short	315                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.long	10436                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1043:0xb DW_TAG_variable
	.byte	6                               # DW_AT_location
	.short	638                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	887                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	42                              # Abbrev [42] 0x104e:0x7 DW_TAG_label
	.short	1098                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1140                            # DW_AT_decl_line
	.byte	107                             # DW_AT_low_pc
	.byte	17                              # Abbrev [17] 0x1055:0xd DW_TAG_lexical_block
	.byte	0                               # DW_AT_ranges
	.byte	16                              # Abbrev [16] 0x1057:0xa DW_TAG_variable
	.byte	5                               # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x1062:0x11 DW_TAG_lexical_block
	.byte	90                              # DW_AT_low_pc
	.long	.Ltmp208-.Ltmp198               # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x1068:0xa DW_TAG_variable
	.byte	7                               # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1072                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x1073:0x2a DW_TAG_lexical_block
	.byte	91                              # DW_AT_low_pc
	.long	.Ltmp259-.Ltmp211               # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x1079:0xa DW_TAG_variable
	.byte	8                               # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1078                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x1083:0x19 DW_TAG_lexical_block
	.byte	1                               # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x1085:0xb DW_TAG_variable
	.byte	9                               # DW_AT_location
	.short	1159                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1080                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1090:0xb DW_TAG_variable
	.byte	10                              # DW_AT_location
	.short	1160                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1081                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x109d:0x11 DW_TAG_lexical_block
	.byte	92                              # DW_AT_low_pc
	.long	.Ltmp268-.Ltmp259               # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x10a3:0xa DW_TAG_variable
	.byte	11                              # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1103                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x10ae:0xe DW_TAG_lexical_block
	.byte	2                               # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x10b0:0xb DW_TAG_variable
	.byte	12                              # DW_AT_location
	.short	983                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1119                            # DW_AT_decl_line
	.long	18874                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x10bc:0x6 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.byte	93                              # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x10c2:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	80
	.byte	94                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10c6:0x6 DW_TAG_call_site
	.long	4752                            # DW_AT_call_origin
	.byte	95                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10cc:0x6 DW_TAG_call_site
	.long	6040                            # DW_AT_call_origin
	.byte	96                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10d2:0x6 DW_TAG_call_site
	.long	18134                           # DW_AT_call_origin
	.byte	97                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10d8:0x6 DW_TAG_call_site
	.long	18134                           # DW_AT_call_origin
	.byte	98                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10de:0x6 DW_TAG_call_site
	.long	18149                           # DW_AT_call_origin
	.byte	99                              # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10e4:0x6 DW_TAG_call_site
	.long	18276                           # DW_AT_call_origin
	.byte	100                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10ea:0x6 DW_TAG_call_site
	.long	18276                           # DW_AT_call_origin
	.byte	101                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10f0:0x6 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.byte	102                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10f6:0x6 DW_TAG_call_site
	.long	18314                           # DW_AT_call_origin
	.byte	103                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x10fc:0x6 DW_TAG_call_site
	.long	18335                           # DW_AT_call_origin
	.byte	104                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1102:0x6 DW_TAG_call_site
	.long	18361                           # DW_AT_call_origin
	.byte	105                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1108:0x6 DW_TAG_call_site
	.long	18381                           # DW_AT_call_origin
	.byte	106                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x110e:0x6 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.byte	107                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1114:0x6 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.byte	108                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x111a:0x6 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.byte	109                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1120:0x6 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.byte	110                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1126:0x6 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.byte	111                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x112c:0x6 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.byte	112                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1132:0x6 DW_TAG_call_site
	.long	18407                           # DW_AT_call_origin
	.byte	113                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1138:0x6 DW_TAG_call_site
	.long	18412                           # DW_AT_call_origin
	.byte	114                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x113e:0x6 DW_TAG_call_site
	.long	18433                           # DW_AT_call_origin
	.byte	115                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1144:0x6 DW_TAG_call_site
	.long	18449                           # DW_AT_call_origin
	.byte	116                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x114a:0x6 DW_TAG_call_site
	.long	18480                           # DW_AT_call_origin
	.byte	117                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1150:0x6 DW_TAG_call_site
	.long	18496                           # DW_AT_call_origin
	.byte	118                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1156:0x6 DW_TAG_call_site
	.long	18501                           # DW_AT_call_origin
	.byte	119                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x115c:0x6 DW_TAG_call_site
	.long	18522                           # DW_AT_call_origin
	.byte	120                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1162:0x6 DW_TAG_call_site
	.long	18543                           # DW_AT_call_origin
	.byte	121                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1168:0x6 DW_TAG_call_site
	.long	18569                           # DW_AT_call_origin
	.byte	122                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x116e:0x6 DW_TAG_call_site
	.long	18590                           # DW_AT_call_origin
	.byte	123                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1174:0x6 DW_TAG_call_site
	.long	18616                           # DW_AT_call_origin
	.byte	124                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x117a:0x6 DW_TAG_call_site
	.long	18637                           # DW_AT_call_origin
	.byte	125                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1180:0x6 DW_TAG_call_site
	.long	18642                           # DW_AT_call_origin
	.byte	126                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1186:0x6 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.byte	127                             # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x118c:0x7 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.ascii	"\200\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1193:0x7 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.ascii	"\201\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x119a:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\202\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11a1:0x7 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.ascii	"\203\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11a8:0x7 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.ascii	"\204\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11af:0x7 DW_TAG_call_site
	.long	18669                           # DW_AT_call_origin
	.ascii	"\205\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11b6:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\206\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11bd:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\207\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11c4:0x7 DW_TAG_call_site
	.long	18721                           # DW_AT_call_origin
	.ascii	"\210\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11cb:0x7 DW_TAG_call_site
	.long	18721                           # DW_AT_call_origin
	.ascii	"\211\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11d2:0x7 DW_TAG_call_site
	.long	18741                           # DW_AT_call_origin
	.ascii	"\212\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11d9:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\213\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11e0:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\214\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11e7:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\215\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11ee:0x7 DW_TAG_call_site
	.long	18741                           # DW_AT_call_origin
	.ascii	"\216\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11f5:0x7 DW_TAG_call_site
	.long	18741                           # DW_AT_call_origin
	.ascii	"\217\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x11fc:0x7 DW_TAG_call_site
	.long	18741                           # DW_AT_call_origin
	.ascii	"\220\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1203:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\221\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x120a:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\222\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1211:0x7 DW_TAG_call_site
	.long	18761                           # DW_AT_call_origin
	.ascii	"\223\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1218:0x7 DW_TAG_call_site
	.long	18781                           # DW_AT_call_origin
	.ascii	"\224\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x121f:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\225\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1226:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\226\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x122d:0x7 DW_TAG_call_site
	.long	18801                           # DW_AT_call_origin
	.ascii	"\227\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1234:0x7 DW_TAG_call_site
	.long	18781                           # DW_AT_call_origin
	.ascii	"\230\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x123b:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\231\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1242:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\232\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1249:0x7 DW_TAG_call_site
	.long	18801                           # DW_AT_call_origin
	.ascii	"\233\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1250:0x7 DW_TAG_call_site
	.long	18817                           # DW_AT_call_origin
	.ascii	"\234\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1257:0x7 DW_TAG_call_site
	.long	18838                           # DW_AT_call_origin
	.ascii	"\235\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x125e:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\236\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1265:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\237\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x126c:0x7 DW_TAG_call_site
	.long	18853                           # DW_AT_call_origin
	.ascii	"\240\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1273:0x7 DW_TAG_call_site
	.long	19254                           # DW_AT_call_origin
	.ascii	"\241\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x127a:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\242\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	44                              # Abbrev [44] 0x1282:0xe DW_TAG_subprogram
	.byte	160                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	174                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3910                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x128a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x1290:0x508 DW_TAG_subprogram
	.ascii	"\243\001"                      # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1140                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x12a2:0xb DW_TAG_formal_parameter
	.byte	13                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x12ad:0xb DW_TAG_variable
	.byte	22                              # DW_AT_location
	.short	1164                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	559                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	47                              # Abbrev [47] 0x12b8:0x9 DW_TAG_variable
	.byte	170                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	408                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x12c1:0x24 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\244\001"                      # DW_AT_low_pc
	.long	.Ltmp300-.Ltmp299               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	417                             # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x12d0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x12d7:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x12dd:0x7 DW_TAG_formal_parameter
	.ascii	"\200\001"                      # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x12e5:0x13 DW_TAG_lexical_block
	.ascii	"\245\001"                      # DW_AT_low_pc
	.long	.Ltmp313-.Ltmp307               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x12ec:0xb DW_TAG_variable
	.byte	14                              # DW_AT_location
	.short	1161                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	428                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x12f8:0xe DW_TAG_lexical_block
	.byte	3                               # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x12fa:0xb DW_TAG_variable
	.byte	15                              # DW_AT_location
	.short	1162                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	452                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1306:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\246\001"                      # DW_AT_low_pc
	.long	.Ltmp356-.Ltmp354               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	476                             # DW_AT_call_line
	.byte	33                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1315:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x131b:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1321:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x1328:0x6c DW_TAG_lexical_block
	.ascii	"\247\001"                      # DW_AT_low_pc
	.long	.Ltmp378-.Ltmp366               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x132f:0xb DW_TAG_variable
	.byte	17                              # DW_AT_location
	.short	1163                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	505                             # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x133a:0xa DW_TAG_variable
	.short	1187                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	506                             # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x1344:0xa DW_TAG_variable
	.short	1188                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x134e:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\250\001"                      # DW_AT_low_pc
	.long	.Ltmp375-.Ltmp373               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	508                             # DW_AT_call_line
	.byte	32                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x135d:0x6 DW_TAG_formal_parameter
	.byte	18                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1363:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1369:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1370:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\251\001"                      # DW_AT_low_pc
	.long	.Ltmp377-.Ltmp376               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	509                             # DW_AT_call_line
	.byte	32                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x137f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1386:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x138c:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1394:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\252\001"                      # DW_AT_low_pc
	.long	.Ltmp379-.Ltmp378               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	513                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x13a3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x13aa:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x13b0:0x6 DW_TAG_formal_parameter
	.byte	51                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x13b7:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\253\001"                      # DW_AT_low_pc
	.long	.Ltmp382-.Ltmp380               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	514                             # DW_AT_call_line
	.byte	28                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x13c6:0x6 DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x13cc:0x6 DW_TAG_formal_parameter
	.byte	21                              # DW_AT_location
	.long	19287                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x13d2:0x6 DW_TAG_formal_parameter
	.byte	19                              # DW_AT_location
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x13d9:0x1d DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\254\001"                      # DW_AT_low_pc
	.long	.Ltmp427-.Ltmp424               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	561                             # DW_AT_call_line
	.byte	34                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x13e8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19278                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x13ef:0x6 DW_TAG_formal_parameter
	.byte	23                              # DW_AT_location
	.long	19287                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x13f6:0x1d DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\255\001"                      # DW_AT_low_pc
	.long	.Ltmp432-.Ltmp429               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	564                             # DW_AT_call_line
	.byte	34                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x1405:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19278                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x140c:0x6 DW_TAG_formal_parameter
	.byte	24                              # DW_AT_location
	.long	19287                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1413:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\256\001"                      # DW_AT_low_pc
	.long	.Ltmp442-.Ltmp440               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	571                             # DW_AT_call_line
	.byte	34                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1422:0x6 DW_TAG_formal_parameter
	.byte	25                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1428:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x142e:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1435:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\257\001"                      # DW_AT_low_pc
	.long	.Ltmp461-.Ltmp459               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	581                             # DW_AT_call_line
	.byte	25                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1444:0x6 DW_TAG_formal_parameter
	.byte	26                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x144a:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1450:0x6 DW_TAG_formal_parameter
	.byte	16                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1457:0x24 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\260\001"                      # DW_AT_low_pc
	.long	.Ltmp468-.Ltmp466               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	587                             # DW_AT_call_line
	.byte	30                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1466:0x6 DW_TAG_formal_parameter
	.byte	27                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x146c:0x7 DW_TAG_formal_parameter
	.ascii	"\246\177"                      # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1473:0x7 DW_TAG_formal_parameter
	.asciz	"\344"                          # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x147b:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\261\001"                      # DW_AT_low_pc
	.long	.Ltmp477-.Ltmp476               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	590                             # DW_AT_call_line
	.byte	33                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x148a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1491:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1497:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x149e:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\262\001"                      # DW_AT_low_pc
	.long	.Ltmp496-.Ltmp493               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	609                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x14ad:0x6 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x14b3:0x6 DW_TAG_formal_parameter
	.byte	30                              # DW_AT_location
	.long	19287                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x14b9:0x6 DW_TAG_formal_parameter
	.byte	28                              # DW_AT_location
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x14c0:0x24 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\263\001"                      # DW_AT_low_pc
	.long	.Ltmp498-.Ltmp497               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	610                             # DW_AT_call_line
	.byte	31                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x14cf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x14d6:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x14dc:0x7 DW_TAG_formal_parameter
	.ascii	"\372\001"                      # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x14e4:0x29 DW_TAG_lexical_block
	.ascii	"\264\001"                      # DW_AT_low_pc
	.long	.Ltmp510-.Ltmp498               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x14eb:0xb DW_TAG_variable
	.byte	31                              # DW_AT_location
	.short	1165                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	612                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x14f6:0xb DW_TAG_variable
	.byte	32                              # DW_AT_location
	.short	1166                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	613                             # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1501:0xb DW_TAG_variable
	.byte	33                              # DW_AT_location
	.short	1167                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	614                             # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x150d:0x1c DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\265\001"                      # DW_AT_low_pc
	.long	.Ltmp526-.Ltmp525               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	639                             # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x151c:0x6 DW_TAG_formal_parameter
	.byte	122                             # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1522:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1529:0x1c DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\266\001"                      # DW_AT_low_pc
	.long	.Ltmp529-.Ltmp528               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	641                             # DW_AT_call_line
	.byte	43                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x1538:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x153e:0x6 DW_TAG_formal_parameter
	.byte	32                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1545:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\267\001"                      # DW_AT_low_pc
	.long	.Ltmp533-.Ltmp531               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	644                             # DW_AT_call_line
	.byte	33                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1554:0x6 DW_TAG_formal_parameter
	.byte	34                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x155a:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1560:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1567:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\270\001"                      # DW_AT_low_pc
	.long	.Ltmp553-.Ltmp552               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	659                             # DW_AT_call_line
	.byte	40                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x1576:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x157d:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1583:0x6 DW_TAG_formal_parameter
	.byte	10                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x158a:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\271\001"                      # DW_AT_low_pc
	.long	.Ltmp564-.Ltmp563               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	671                             # DW_AT_call_line
	.byte	43                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x1599:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x15a0:0x6 DW_TAG_formal_parameter
	.byte	116                             # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x15a6:0x6 DW_TAG_formal_parameter
	.byte	12                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x15ad:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\272\001"                      # DW_AT_low_pc
	.long	.Ltmp569-.Ltmp568               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	674                             # DW_AT_call_line
	.byte	34                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x15bc:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x15c3:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x15c9:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x15d0:0x24 DW_TAG_inlined_subroutine
	.long	19306                           # DW_AT_abstract_origin
	.ascii	"\273\001"                      # DW_AT_low_pc
	.long	.Ltmp578-.Ltmp577               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	682                             # DW_AT_call_line
	.byte	33                              # DW_AT_call_column
	.byte	49                              # Abbrev [49] 0x15df:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19324                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x15e5:0xe DW_TAG_formal_parameter
	.ascii	"\200\200\200\200\200\200\200\222@" # DW_AT_const_value
	.long	19333                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x15f4:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\274\001"                      # DW_AT_low_pc
	.long	.Ltmp587-.Ltmp586               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	697                             # DW_AT_call_line
	.byte	43                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x1603:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x160a:0x6 DW_TAG_formal_parameter
	.byte	116                             # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1610:0x6 DW_TAG_formal_parameter
	.byte	12                              # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x1617:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\275\001"                      # DW_AT_low_pc
	.long	.Ltmp589-.Ltmp588               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	698                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x1626:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x162d:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1633:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x163a:0x24 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\276\001"                      # DW_AT_low_pc
	.long	.Ltmp602-.Ltmp600               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	708                             # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x1649:0x6 DW_TAG_formal_parameter
	.byte	35                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x164f:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x1655:0x8 DW_TAG_formal_parameter
	.ascii	"\200\200\004"                  # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x165e:0x44 DW_TAG_lexical_block
	.ascii	"\277\001"                      # DW_AT_low_pc
	.long	.Ltmp635-.Ltmp607               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x1665:0xb DW_TAG_variable
	.byte	36                              # DW_AT_location
	.short	1168                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	713                             # DW_AT_decl_line
	.long	35892                           # DW_AT_type
	.byte	17                              # Abbrev [17] 0x1670:0xf DW_TAG_lexical_block
	.byte	4                               # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x1672:0xc DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	86
	.short	1183                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	716                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x167f:0x22 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\300\001"                      # DW_AT_low_pc
	.long	.Ltmp633-.Ltmp631               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	738                             # DW_AT_call_line
	.byte	43                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x168e:0x6 DW_TAG_formal_parameter
	.byte	38                              # DW_AT_location
	.long	19278                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x1694:0x6 DW_TAG_formal_parameter
	.byte	39                              # DW_AT_location
	.long	19287                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x169a:0x6 DW_TAG_formal_parameter
	.byte	37                              # DW_AT_location
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x16a2:0x23 DW_TAG_inlined_subroutine
	.long	19269                           # DW_AT_abstract_origin
	.ascii	"\301\001"                      # DW_AT_low_pc
	.long	.Ltmp637-.Ltmp636               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	741                             # DW_AT_call_line
	.byte	40                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x16b1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19278                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x16b8:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19287                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x16be:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	19296                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x16c5:0x31 DW_TAG_lexical_block
	.ascii	"\302\001"                      # DW_AT_low_pc
	.long	.Ltmp657-.Ltmp641               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x16cc:0xb DW_TAG_variable
	.byte	40                              # DW_AT_location
	.short	1184                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	747                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x16d7:0xb DW_TAG_variable
	.byte	42                              # DW_AT_location
	.short	1186                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	748                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x16e2:0x13 DW_TAG_lexical_block
	.ascii	"\303\001"                      # DW_AT_low_pc
	.long	.Ltmp648-.Ltmp644               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x16e9:0xb DW_TAG_variable
	.byte	41                              # DW_AT_location
	.short	1185                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	755                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x16f6:0x7 DW_TAG_call_site
	.long	19343                           # DW_AT_call_origin
	.ascii	"\304\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x16fd:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\305\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1704:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\306\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x170b:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\307\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1712:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\310\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1719:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\311\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1720:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\312\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1727:0x7 DW_TAG_call_site
	.long	19352                           # DW_AT_call_origin
	.ascii	"\313\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x172e:0x7 DW_TAG_call_site
	.long	19352                           # DW_AT_call_origin
	.ascii	"\314\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1735:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\315\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x173c:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\316\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1743:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\317\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x174a:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\320\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1751:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\321\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1758:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\322\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x175f:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\323\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1766:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\324\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x176d:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\325\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1774:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\326\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x177b:0x7 DW_TAG_call_site
	.long	18314                           # DW_AT_call_origin
	.ascii	"\327\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1782:0x7 DW_TAG_call_site
	.long	18361                           # DW_AT_call_origin
	.ascii	"\330\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1789:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\331\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x1790:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\332\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	44                              # Abbrev [44] 0x1798:0x13 DW_TAG_subprogram
	.byte	161                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x17a0:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x17a5:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x17ab:0x5 DW_TAG_pointer_type
	.long	6064                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x17b0:0x9 DW_TAG_typedef
	.long	6073                            # DW_AT_type
	.short	880                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	51                              # Abbrev [51] 0x17b9:0xc26 DW_TAG_structure_type
	.short	880                             # DW_AT_name
	.short	33344                           # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	381                             # DW_AT_decl_line
	.byte	52                              # Abbrev [52] 0x17c1:0xa DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	9183                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	384                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x17cb:0xc DW_TAG_member
	.short	296                             # DW_AT_name
	.long	10636                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	386                             # DW_AT_decl_line
	.short	704                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x17d7:0xc DW_TAG_member
	.short	297                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	387                             # DW_AT_decl_line
	.short	1736                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x17e3:0xc DW_TAG_member
	.short	298                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	388                             # DW_AT_decl_line
	.short	1740                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x17ef:0xc DW_TAG_member
	.short	299                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	389                             # DW_AT_decl_line
	.short	1744                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x17fb:0xc DW_TAG_member
	.short	300                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	390                             # DW_AT_decl_line
	.short	1748                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1807:0xc DW_TAG_member
	.short	301                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	391                             # DW_AT_decl_line
	.short	1752                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1813:0xc DW_TAG_member
	.short	302                             # DW_AT_name
	.long	6175                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.short	1760                            # DW_AT_data_member_location
	.byte	54                              # Abbrev [54] 0x181f:0x48 DW_TAG_structure_type
	.byte	72                              # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	394                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x1824:0xb DW_TAG_member
	.short	303                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	396                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x182f:0xb DW_TAG_member
	.short	304                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	397                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x183a:0xb DW_TAG_member
	.short	305                             # DW_AT_name
	.long	10648                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	398                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1845:0xb DW_TAG_member
	.short	311                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	399                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1850:0xb DW_TAG_member
	.short	312                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	400                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x185b:0xb DW_TAG_member
	.short	313                             # DW_AT_name
	.long	10713                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	401                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x1867:0xc DW_TAG_member
	.short	322                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.short	1832                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1873:0xc DW_TAG_member
	.short	323                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.short	1840                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x187f:0xc DW_TAG_member
	.short	324                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	410                             # DW_AT_decl_line
	.short	1844                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x188b:0xc DW_TAG_member
	.short	325                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	411                             # DW_AT_decl_line
	.short	1848                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1897:0xc DW_TAG_member
	.short	326                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	413                             # DW_AT_decl_line
	.short	1852                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18a3:0xc DW_TAG_member
	.short	327                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	415                             # DW_AT_decl_line
	.short	1856                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18af:0xc DW_TAG_member
	.short	328                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	416                             # DW_AT_decl_line
	.short	1860                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18bb:0xc DW_TAG_member
	.short	329                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	418                             # DW_AT_decl_line
	.short	1864                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18c7:0xc DW_TAG_member
	.short	330                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	419                             # DW_AT_decl_line
	.short	1868                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18d3:0xc DW_TAG_member
	.short	331                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	420                             # DW_AT_decl_line
	.short	1872                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18df:0xc DW_TAG_member
	.short	332                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	421                             # DW_AT_decl_line
	.short	1876                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18eb:0xc DW_TAG_member
	.short	333                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	422                             # DW_AT_decl_line
	.short	1880                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x18f7:0xc DW_TAG_member
	.short	334                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	424                             # DW_AT_decl_line
	.short	1884                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1903:0xc DW_TAG_member
	.short	335                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	425                             # DW_AT_decl_line
	.short	1888                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x190f:0xc DW_TAG_member
	.short	336                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	427                             # DW_AT_decl_line
	.short	1892                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x191b:0xc DW_TAG_member
	.short	337                             # DW_AT_name
	.long	10789                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	430                             # DW_AT_decl_line
	.short	1896                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1927:0xc DW_TAG_member
	.short	402                             # DW_AT_name
	.long	11577                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	431                             # DW_AT_decl_line
	.short	3200                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1933:0xc DW_TAG_member
	.short	403                             # DW_AT_name
	.long	11582                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	432                             # DW_AT_decl_line
	.short	3208                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x193f:0xc DW_TAG_member
	.short	418                             # DW_AT_name
	.long	11802                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	433                             # DW_AT_decl_line
	.short	3328                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x194b:0xc DW_TAG_member
	.short	419                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	434                             # DW_AT_decl_line
	.short	3336                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1957:0xc DW_TAG_member
	.short	420                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	437                             # DW_AT_decl_line
	.short	3340                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1963:0xc DW_TAG_member
	.short	421                             # DW_AT_name
	.long	11807                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	440                             # DW_AT_decl_line
	.short	3344                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x196f:0xc DW_TAG_member
	.short	422                             # DW_AT_name
	.long	11836                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	441                             # DW_AT_decl_line
	.short	3376                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x197b:0xc DW_TAG_member
	.short	423                             # DW_AT_name
	.long	11807                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	443                             # DW_AT_decl_line
	.short	3392                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1987:0xc DW_TAG_member
	.short	424                             # DW_AT_name
	.long	11836                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	444                             # DW_AT_decl_line
	.short	3424                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1993:0xc DW_TAG_member
	.short	425                             # DW_AT_name
	.long	11865                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	446                             # DW_AT_decl_line
	.short	3440                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x199f:0xc DW_TAG_member
	.short	426                             # DW_AT_name
	.long	11894                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	447                             # DW_AT_decl_line
	.short	3472                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19ab:0xc DW_TAG_member
	.short	427                             # DW_AT_name
	.long	11865                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	448                             # DW_AT_decl_line
	.short	3488                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19b7:0xc DW_TAG_member
	.short	428                             # DW_AT_name
	.long	11894                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	449                             # DW_AT_decl_line
	.short	3520                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19c3:0xc DW_TAG_member
	.short	429                             # DW_AT_name
	.long	11923                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	454                             # DW_AT_decl_line
	.short	3536                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19cf:0xc DW_TAG_member
	.short	430                             # DW_AT_name
	.long	11940                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	455                             # DW_AT_decl_line
	.short	4272                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19db:0xc DW_TAG_member
	.short	431                             # DW_AT_name
	.long	11797                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	457                             # DW_AT_decl_line
	.short	7216                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19e7:0xc DW_TAG_member
	.short	432                             # DW_AT_name
	.long	11958                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.short	7232                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19f3:0xc DW_TAG_member
	.short	477                             # DW_AT_name
	.long	12657                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.short	13904                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x19ff:0xc DW_TAG_member
	.short	485                             # DW_AT_name
	.long	6667                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	494                             # DW_AT_decl_line
	.short	14416                           # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x1a0b:0xcf DW_TAG_structure_type
	.short	264                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	465                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x1a11:0xb DW_TAG_member
	.short	486                             # DW_AT_name
	.long	12776                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a1c:0xb DW_TAG_member
	.short	570                             # DW_AT_name
	.long	14064                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	470                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a27:0xb DW_TAG_member
	.short	571                             # DW_AT_name
	.long	12776                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	473                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a32:0xb DW_TAG_member
	.short	572                             # DW_AT_name
	.long	14076                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	476                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a3d:0xb DW_TAG_member
	.short	573                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a48:0xb DW_TAG_member
	.short	574                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	480                             # DW_AT_decl_line
	.byte	180                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a53:0xb DW_TAG_member
	.short	575                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	482                             # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a5e:0xb DW_TAG_member
	.short	576                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	483                             # DW_AT_decl_line
	.byte	188                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a69:0xb DW_TAG_member
	.short	577                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	484                             # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a74:0xb DW_TAG_member
	.short	578                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	485                             # DW_AT_decl_line
	.byte	196                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a7f:0xb DW_TAG_member
	.short	579                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	486                             # DW_AT_decl_line
	.byte	200                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a8a:0xb DW_TAG_member
	.short	580                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	487                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1a95:0xb DW_TAG_member
	.short	581                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	488                             # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1aa0:0xb DW_TAG_member
	.short	582                             # DW_AT_name
	.long	14088                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	489                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1aab:0xb DW_TAG_member
	.short	583                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1ab6:0xb DW_TAG_member
	.short	584                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	491                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1ac1:0xc DW_TAG_member
	.short	585                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	492                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1acd:0xc DW_TAG_member
	.short	586                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	493                             # DW_AT_decl_line
	.short	260                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x1ada:0xc DW_TAG_member
	.short	587                             # DW_AT_name
	.long	12781                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	497                             # DW_AT_decl_line
	.short	14680                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1ae6:0xc DW_TAG_member
	.short	588                             # DW_AT_name
	.long	12781                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.short	14688                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1af2:0xc DW_TAG_member
	.short	589                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	503                             # DW_AT_decl_line
	.short	14696                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1afe:0xc DW_TAG_member
	.short	590                             # DW_AT_name
	.long	14100                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	504                             # DW_AT_decl_line
	.short	14704                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b0a:0xc DW_TAG_member
	.short	591                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	505                             # DW_AT_decl_line
	.short	14856                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b16:0xc DW_TAG_member
	.short	592                             # DW_AT_name
	.long	14100                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	506                             # DW_AT_decl_line
	.short	14864                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b22:0xc DW_TAG_member
	.short	593                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.short	15016                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b2e:0xc DW_TAG_member
	.short	594                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	510                             # DW_AT_decl_line
	.short	15024                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b3a:0xc DW_TAG_member
	.short	595                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	511                             # DW_AT_decl_line
	.short	15028                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b46:0xc DW_TAG_member
	.short	596                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	512                             # DW_AT_decl_line
	.short	15032                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1b52:0xc DW_TAG_member
	.short	597                             # DW_AT_name
	.long	7006                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	522                             # DW_AT_decl_line
	.short	15040                           # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x1b5e:0x38 DW_TAG_structure_type
	.short	1328                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	515                             # DW_AT_decl_line
	.byte	57                              # Abbrev [57] 0x1b64:0xc DW_TAG_member
	.short	598                             # DW_AT_name
	.long	14112                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	517                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x1b70:0xc DW_TAG_member
	.short	599                             # DW_AT_name
	.long	14124                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	518                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	32                              # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x1b7c:0xc DW_TAG_member
	.short	600                             # DW_AT_name
	.long	14142                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	520                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1b88:0xd DW_TAG_member
	.short	601                             # DW_AT_name
	.long	14160                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	521                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	560                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x1b96:0xc DW_TAG_member
	.short	602                             # DW_AT_name
	.long	7074                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	732                             # DW_AT_decl_line
	.short	16368                           # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x1ba2:0x5a3 DW_TAG_structure_type
	.short	10336                           # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	525                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x1ba8:0xb DW_TAG_member
	.short	603                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	527                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bb3:0xb DW_TAG_member
	.short	604                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	530                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bbe:0xb DW_TAG_member
	.short	605                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	531                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bc9:0xb DW_TAG_member
	.short	606                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	532                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bd4:0xb DW_TAG_member
	.short	607                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bdf:0xb DW_TAG_member
	.short	608                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	536                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bea:0xb DW_TAG_member
	.short	609                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	537                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1bf5:0xb DW_TAG_member
	.short	610                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c00:0xb DW_TAG_member
	.short	611                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	539                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x1c0b:0xa DW_TAG_member
	.byte	226                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	542                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x1c15:0xa DW_TAG_member
	.byte	230                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	543                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x1c1f:0xa DW_TAG_member
	.byte	231                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	544                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c29:0xb DW_TAG_member
	.short	612                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	545                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c34:0xb DW_TAG_member
	.short	613                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	546                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x1c3f:0xa DW_TAG_member
	.byte	235                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	547                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c49:0xb DW_TAG_member
	.short	614                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	548                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c54:0xb DW_TAG_member
	.short	615                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	549                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x1c5f:0xa DW_TAG_member
	.byte	198                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	551                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c69:0xb DW_TAG_member
	.short	616                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	554                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c74:0xb DW_TAG_member
	.short	617                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c7f:0xb DW_TAG_member
	.short	618                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	558                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c8a:0xb DW_TAG_member
	.short	619                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	559                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1c95:0xb DW_TAG_member
	.short	620                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	561                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1ca0:0xb DW_TAG_member
	.short	621                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	562                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1cab:0xb DW_TAG_member
	.short	622                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	565                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1cb6:0xb DW_TAG_member
	.short	623                             # DW_AT_name
	.long	14178                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	566                             # DW_AT_decl_line
	.byte	124                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1cc1:0xb DW_TAG_member
	.short	624                             # DW_AT_name
	.long	14190                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	567                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1ccc:0xb DW_TAG_member
	.short	625                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	568                             # DW_AT_decl_line
	.byte	204                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1cd7:0xb DW_TAG_member
	.short	626                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	569                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1ce2:0xb DW_TAG_member
	.short	627                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	570                             # DW_AT_decl_line
	.byte	212                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1ced:0xb DW_TAG_member
	.short	628                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	571                             # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1cf8:0xb DW_TAG_member
	.short	629                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	572                             # DW_AT_decl_line
	.byte	220                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d03:0xb DW_TAG_member
	.short	630                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	573                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d0e:0xb DW_TAG_member
	.short	631                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	574                             # DW_AT_decl_line
	.byte	228                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d19:0xb DW_TAG_member
	.short	632                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	575                             # DW_AT_decl_line
	.byte	232                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d24:0xb DW_TAG_member
	.short	633                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	576                             # DW_AT_decl_line
	.byte	236                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d2f:0xb DW_TAG_member
	.short	634                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	577                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d3a:0xb DW_TAG_member
	.short	635                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	578                             # DW_AT_decl_line
	.byte	244                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x1d45:0xb DW_TAG_member
	.short	636                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	585                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d50:0xc DW_TAG_member
	.short	637                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	586                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d5c:0xc DW_TAG_member
	.short	638                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	587                             # DW_AT_decl_line
	.short	264                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d68:0xc DW_TAG_member
	.short	639                             # DW_AT_name
	.long	14202                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	588                             # DW_AT_decl_line
	.short	272                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d74:0xc DW_TAG_member
	.short	640                             # DW_AT_name
	.long	14207                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	589                             # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d80:0xc DW_TAG_member
	.short	641                             # DW_AT_name
	.long	14224                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	591                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d8c:0xc DW_TAG_member
	.short	642                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	592                             # DW_AT_decl_line
	.short	296                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1d98:0xc DW_TAG_member
	.short	523                             # DW_AT_name
	.long	13790                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	593                             # DW_AT_decl_line
	.short	304                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1da4:0xc DW_TAG_member
	.short	643                             # DW_AT_name
	.long	14241                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	594                             # DW_AT_decl_line
	.short	320                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1db0:0xc DW_TAG_member
	.short	528                             # DW_AT_name
	.long	13873                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.short	336                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1dbc:0xc DW_TAG_member
	.short	644                             # DW_AT_name
	.long	14276                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.short	352                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1dc8:0xc DW_TAG_member
	.short	645                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	597                             # DW_AT_decl_line
	.short	864                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1dd4:0xc DW_TAG_member
	.short	646                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	598                             # DW_AT_decl_line
	.short	872                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1de0:0xc DW_TAG_member
	.short	647                             # DW_AT_name
	.long	11935                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	599                             # DW_AT_decl_line
	.short	880                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1dec:0xc DW_TAG_member
	.short	648                             # DW_AT_name
	.long	13768                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	603                             # DW_AT_decl_line
	.short	888                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1df8:0xc DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	606                             # DW_AT_decl_line
	.short	1016                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e04:0xc DW_TAG_member
	.short	649                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	607                             # DW_AT_decl_line
	.short	1020                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1e10:0xd DW_TAG_member
	.short	650                             # DW_AT_name
	.long	4029                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	608                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	1024                            # DW_AT_data_member_location
	.byte	59                              # Abbrev [59] 0x1e1d:0xb DW_TAG_member
	.byte	221                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	609                             # DW_AT_decl_line
	.short	1028                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e28:0xc DW_TAG_member
	.short	651                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	611                             # DW_AT_decl_line
	.short	1032                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e34:0xc DW_TAG_member
	.short	652                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	612                             # DW_AT_decl_line
	.short	1036                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e40:0xc DW_TAG_member
	.short	653                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	614                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e4c:0xc DW_TAG_member
	.short	654                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	615                             # DW_AT_decl_line
	.short	1044                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e58:0xc DW_TAG_member
	.short	655                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	621                             # DW_AT_decl_line
	.short	1048                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e64:0xc DW_TAG_member
	.short	656                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	624                             # DW_AT_decl_line
	.short	1052                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e70:0xc DW_TAG_member
	.short	657                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	626                             # DW_AT_decl_line
	.short	1056                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e7c:0xc DW_TAG_member
	.short	658                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	627                             # DW_AT_decl_line
	.short	1060                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1e88:0xc DW_TAG_member
	.short	659                             # DW_AT_name
	.long	7828                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	671                             # DW_AT_decl_line
	.short	1072                            # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x1e94:0x118 DW_TAG_structure_type
	.short	7584                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	629                             # DW_AT_decl_line
	.byte	57                              # Abbrev [57] 0x1e9a:0xc DW_TAG_member
	.short	660                             # DW_AT_name
	.long	14294                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	634                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1ea6:0xd DW_TAG_member
	.short	661                             # DW_AT_name
	.long	14307                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	635                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	384                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1eb3:0xd DW_TAG_member
	.short	662                             # DW_AT_name
	.long	14320                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	638                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1248                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1ec0:0xd DW_TAG_member
	.short	663                             # DW_AT_name
	.long	14320                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	639                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1504                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1ecd:0xd DW_TAG_member
	.short	664                             # DW_AT_name
	.long	14333                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	640                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	1760                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1eda:0xd DW_TAG_member
	.short	665                             # DW_AT_name
	.long	14351                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	641                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	2144                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1ee7:0xc DW_TAG_member
	.short	666                             # DW_AT_name
	.long	14369                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	642                             # DW_AT_decl_line
	.short	2624                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1ef3:0xc DW_TAG_member
	.short	667                             # DW_AT_name
	.long	14369                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	643                             # DW_AT_decl_line
	.short	2640                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1eff:0xc DW_TAG_member
	.short	668                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	644                             # DW_AT_decl_line
	.short	2656                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f0b:0xc DW_TAG_member
	.short	669                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	645                             # DW_AT_decl_line
	.short	2660                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1f17:0xd DW_TAG_member
	.short	670                             # DW_AT_name
	.long	14142                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	648                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	2672                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1f24:0xd DW_TAG_member
	.short	671                             # DW_AT_name
	.long	14381                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	649                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3184                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1f31:0xd DW_TAG_member
	.short	672                             # DW_AT_name
	.long	14399                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	652                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3696                            # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1f3e:0xd DW_TAG_member
	.short	673                             # DW_AT_name
	.long	14411                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	653                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	3776                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f4b:0xc DW_TAG_member
	.short	674                             # DW_AT_name
	.long	13726                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	656                             # DW_AT_decl_line
	.short	3904                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f57:0xc DW_TAG_member
	.short	675                             # DW_AT_name
	.long	13726                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	658                             # DW_AT_decl_line
	.short	3928                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f63:0xc DW_TAG_member
	.short	676                             # DW_AT_name
	.long	13726                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.short	3952                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f6f:0xc DW_TAG_member
	.short	677                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	664                             # DW_AT_decl_line
	.short	3976                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f7b:0xc DW_TAG_member
	.short	678                             # DW_AT_name
	.long	14423                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	665                             # DW_AT_decl_line
	.short	3984                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f87:0xc DW_TAG_member
	.short	679                             # DW_AT_name
	.long	14447                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	666                             # DW_AT_decl_line
	.short	7056                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f93:0xc DW_TAG_member
	.short	680                             # DW_AT_name
	.long	14459                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	667                             # DW_AT_decl_line
	.short	7312                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x1f9f:0xc DW_TAG_member
	.short	507                             # DW_AT_name
	.long	13714                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	670                             # DW_AT_decl_line
	.short	7568                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x1fac:0xc DW_TAG_member
	.short	681                             # DW_AT_name
	.long	8120                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	704                             # DW_AT_decl_line
	.short	8656                            # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x1fb8:0xb4 DW_TAG_structure_type
	.short	768                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	674                             # DW_AT_decl_line
	.byte	57                              # Abbrev [57] 0x1fbe:0xc DW_TAG_member
	.short	640                             # DW_AT_name
	.long	14477                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	677                             # DW_AT_decl_line
	.byte	8                               # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x1fca:0xc DW_TAG_member
	.short	641                             # DW_AT_name
	.long	14489                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	680                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x1fd6:0xc DW_TAG_member
	.short	528                             # DW_AT_name
	.long	14501                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	683                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.byte	96                              # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x1fe2:0xc DW_TAG_member
	.short	523                             # DW_AT_name
	.long	14519                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	686                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	176                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1fee:0xd DW_TAG_member
	.short	643                             # DW_AT_name
	.long	14543                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	687                             # DW_AT_decl_line
	.byte	8                               # DW_AT_alignment
	.short	496                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x1ffb:0xd DW_TAG_member
	.short	682                             # DW_AT_name
	.long	14477                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	690                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	656                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x2008:0xd DW_TAG_member
	.short	683                             # DW_AT_name
	.long	14567                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	692                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	696                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x2015:0xd DW_TAG_member
	.short	684                             # DW_AT_name
	.long	14591                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	693                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	728                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2022:0xc DW_TAG_member
	.short	685                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	694                             # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x202e:0xd DW_TAG_member
	.short	686                             # DW_AT_name
	.long	13807                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	695                             # DW_AT_decl_line
	.byte	4                               # DW_AT_alignment
	.short	740                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x203b:0xc DW_TAG_member
	.short	687                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	698                             # DW_AT_decl_line
	.short	744                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2047:0xc DW_TAG_member
	.short	688                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	699                             # DW_AT_decl_line
	.short	748                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2053:0xc DW_TAG_member
	.short	689                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	702                             # DW_AT_decl_line
	.short	752                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x205f:0xc DW_TAG_member
	.short	690                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	703                             # DW_AT_decl_line
	.short	756                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x206c:0xc DW_TAG_member
	.short	273                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	707                             # DW_AT_decl_line
	.short	9424                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2078:0xc DW_TAG_member
	.short	691                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	708                             # DW_AT_decl_line
	.short	9428                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2084:0xc DW_TAG_member
	.short	692                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	709                             # DW_AT_decl_line
	.short	9432                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2090:0xc DW_TAG_member
	.short	693                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	710                             # DW_AT_decl_line
	.short	9436                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x209c:0xc DW_TAG_member
	.short	694                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	711                             # DW_AT_decl_line
	.short	9440                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20a8:0xc DW_TAG_member
	.short	695                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	712                             # DW_AT_decl_line
	.short	9444                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20b4:0xc DW_TAG_member
	.short	696                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	713                             # DW_AT_decl_line
	.short	9448                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20c0:0xc DW_TAG_member
	.short	697                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	714                             # DW_AT_decl_line
	.short	9452                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20cc:0xc DW_TAG_member
	.short	698                             # DW_AT_name
	.long	14609                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	717                             # DW_AT_decl_line
	.short	9456                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20d8:0xc DW_TAG_member
	.short	699                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	718                             # DW_AT_decl_line
	.short	9472                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20e4:0xc DW_TAG_member
	.short	700                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	719                             # DW_AT_decl_line
	.short	9476                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20f0:0xc DW_TAG_member
	.short	701                             # DW_AT_name
	.long	14627                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	722                             # DW_AT_decl_line
	.short	9480                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x20fc:0xc DW_TAG_member
	.short	702                             # DW_AT_name
	.long	14651                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	723                             # DW_AT_decl_line
	.short	9992                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2108:0xc DW_TAG_member
	.short	703                             # DW_AT_name
	.long	14668                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	724                             # DW_AT_decl_line
	.short	10000                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2114:0xc DW_TAG_member
	.short	704                             # DW_AT_name
	.long	14692                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	725                             # DW_AT_decl_line
	.short	10256                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2120:0xc DW_TAG_member
	.short	705                             # DW_AT_name
	.long	14709                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	728                             # DW_AT_decl_line
	.short	10264                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x212c:0xc DW_TAG_member
	.short	706                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	729                             # DW_AT_decl_line
	.short	10284                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2138:0xc DW_TAG_member
	.short	707                             # DW_AT_name
	.long	14721                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	730                             # DW_AT_decl_line
	.short	10288                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	59                              # Abbrev [59] 0x2145:0xb DW_TAG_member
	.byte	243                             # DW_AT_name
	.long	14733                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	735                             # DW_AT_decl_line
	.short	26704                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2150:0xc DW_TAG_member
	.short	709                             # DW_AT_name
	.long	8540                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	793                             # DW_AT_decl_line
	.short	26712                           # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x215c:0x1a8 DW_TAG_structure_type
	.short	3688                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x2162:0xb DW_TAG_member
	.short	710                             # DW_AT_name
	.long	8557                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	764                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	56                              # Abbrev [56] 0x216d:0xb2 DW_TAG_structure_type
	.short	704                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	741                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x2173:0xb DW_TAG_member
	.short	711                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	744                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x217e:0xb DW_TAG_member
	.short	712                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	746                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2189:0xb DW_TAG_member
	.short	713                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	748                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2194:0xb DW_TAG_member
	.short	603                             # DW_AT_name
	.long	14751                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	750                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x219f:0xb DW_TAG_member
	.short	714                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	751                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x21aa:0xb DW_TAG_member
	.short	715                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	752                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x21b5:0xb DW_TAG_member
	.short	716                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	753                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x21c0:0xb DW_TAG_member
	.short	717                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	754                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x21cb:0xb DW_TAG_member
	.short	718                             # DW_AT_name
	.long	14763                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	755                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x21d6:0xc DW_TAG_member
	.short	719                             # DW_AT_name
	.long	14781                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	756                             # DW_AT_decl_line
	.short	364                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x21e2:0xc DW_TAG_member
	.short	720                             # DW_AT_name
	.long	14793                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	757                             # DW_AT_decl_line
	.short	432                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x21ee:0xc DW_TAG_member
	.short	721                             # DW_AT_name
	.long	14805                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	758                             # DW_AT_decl_line
	.short	456                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x21fa:0xc DW_TAG_member
	.short	722                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	760                             # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2206:0xc DW_TAG_member
	.short	723                             # DW_AT_name
	.long	14823                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	762                             # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2212:0xc DW_TAG_member
	.short	724                             # DW_AT_name
	.long	3927                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	763                             # DW_AT_decl_line
	.short	696                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x221f:0xc DW_TAG_member
	.short	725                             # DW_AT_name
	.long	14835                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	769                             # DW_AT_decl_line
	.short	704                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x222b:0xc DW_TAG_member
	.short	726                             # DW_AT_name
	.long	14847                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	770                             # DW_AT_decl_line
	.short	728                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2237:0xc DW_TAG_member
	.short	727                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	771                             # DW_AT_decl_line
	.short	768                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2243:0xc DW_TAG_member
	.short	728                             # DW_AT_name
	.long	14781                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	772                             # DW_AT_decl_line
	.short	808                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x224f:0xc DW_TAG_member
	.short	729                             # DW_AT_name
	.long	14847                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	774                             # DW_AT_decl_line
	.short	880                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x225b:0xc DW_TAG_member
	.short	730                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	775                             # DW_AT_decl_line
	.short	920                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2267:0xc DW_TAG_member
	.short	731                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	776                             # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2273:0xc DW_TAG_member
	.short	732                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	777                             # DW_AT_decl_line
	.short	1000                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x227f:0xc DW_TAG_member
	.short	733                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	778                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x228b:0xc DW_TAG_member
	.short	734                             # DW_AT_name
	.long	14859                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	779                             # DW_AT_decl_line
	.short	1080                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2297:0xc DW_TAG_member
	.short	603                             # DW_AT_name
	.long	14871                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	781                             # DW_AT_decl_line
	.short	1120                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22a3:0xc DW_TAG_member
	.short	719                             # DW_AT_name
	.long	14889                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	782                             # DW_AT_decl_line
	.short	1880                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22af:0xc DW_TAG_member
	.short	717                             # DW_AT_name
	.long	14088                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	783                             # DW_AT_decl_line
	.short	2152                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22bb:0xc DW_TAG_member
	.short	718                             # DW_AT_name
	.long	14907                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	784                             # DW_AT_decl_line
	.short	2168                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22c7:0xc DW_TAG_member
	.short	720                             # DW_AT_name
	.long	14931                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	785                             # DW_AT_decl_line
	.short	3192                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22d3:0xc DW_TAG_member
	.short	721                             # DW_AT_name
	.long	14943                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	786                             # DW_AT_decl_line
	.short	3240                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22df:0xc DW_TAG_member
	.short	722                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	788                             # DW_AT_decl_line
	.short	3656                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22eb:0xc DW_TAG_member
	.short	735                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	789                             # DW_AT_decl_line
	.short	3664                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x22f7:0xc DW_TAG_member
	.short	736                             # DW_AT_name
	.long	13714                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	791                             # DW_AT_decl_line
	.short	3672                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x2304:0xd DW_TAG_member
	.short	737                             # DW_AT_name
	.long	14961                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	795                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	30400                           # DW_AT_data_member_location
	.byte	58                              # Abbrev [58] 0x2311:0xd DW_TAG_member
	.short	738                             # DW_AT_name
	.long	14979                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	796                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	30912                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x231e:0xc DW_TAG_member
	.short	739                             # DW_AT_name
	.long	14997                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	797                             # DW_AT_decl_line
	.short	31168                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x232a:0xc DW_TAG_member
	.short	740                             # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	800                             # DW_AT_decl_line
	.short	31176                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2336:0xc DW_TAG_member
	.short	741                             # DW_AT_name
	.long	15009                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	801                             # DW_AT_decl_line
	.short	31184                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2342:0xc DW_TAG_member
	.short	742                             # DW_AT_name
	.long	15027                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	802                             # DW_AT_decl_line
	.short	31232                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x234e:0xc DW_TAG_member
	.short	743                             # DW_AT_name
	.long	15068                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	805                             # DW_AT_decl_line
	.short	31248                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x235a:0xc DW_TAG_member
	.short	745                             # DW_AT_name
	.long	15068                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	806                             # DW_AT_decl_line
	.short	31304                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2366:0xc DW_TAG_member
	.short	746                             # DW_AT_name
	.long	15101                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	807                             # DW_AT_decl_line
	.short	31360                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2372:0xc DW_TAG_member
	.short	748                             # DW_AT_name
	.long	15139                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	808                             # DW_AT_decl_line
	.short	31456                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x237e:0xc DW_TAG_member
	.short	749                             # DW_AT_name
	.long	15151                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	809                             # DW_AT_decl_line
	.short	31552                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x238a:0xc DW_TAG_member
	.short	751                             # DW_AT_name
	.long	15187                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	811                             # DW_AT_decl_line
	.short	31560                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2396:0xc DW_TAG_member
	.short	789                             # DW_AT_name
	.long	15969                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	812                             # DW_AT_decl_line
	.short	32616                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x23a2:0xc DW_TAG_member
	.short	813                             # DW_AT_name
	.long	16813                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	813                             # DW_AT_decl_line
	.short	32912                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x23ae:0xc DW_TAG_member
	.short	830                             # DW_AT_name
	.long	17128                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	814                             # DW_AT_decl_line
	.short	33032                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x23ba:0xc DW_TAG_member
	.short	838                             # DW_AT_name
	.long	17298                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	815                             # DW_AT_decl_line
	.short	33080                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x23c6:0xc DW_TAG_member
	.short	857                             # DW_AT_name
	.long	17680                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	816                             # DW_AT_decl_line
	.short	33256                           # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x23d2:0xc DW_TAG_member
	.short	865                             # DW_AT_name
	.long	17933                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	821                             # DW_AT_decl_line
	.short	33328                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	60                              # Abbrev [60] 0x23df:0xa DW_TAG_typedef
	.long	9193                            # DW_AT_type
	.short	295                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	376                             # DW_AT_decl_line
	.byte	61                              # Abbrev [61] 0x23e9:0x4db DW_TAG_structure_type
	.short	295                             # DW_AT_name
	.short	704                             # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.byte	176                             # DW_AT_decl_line
	.byte	39                              # Abbrev [39] 0x23f0:0x9 DW_TAG_member
	.byte	163                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x23f9:0x9 DW_TAG_member
	.byte	164                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2402:0x9 DW_TAG_member
	.byte	165                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x240b:0x9 DW_TAG_member
	.byte	166                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2414:0x9 DW_TAG_member
	.byte	167                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	183                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x241d:0x9 DW_TAG_member
	.byte	168                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	186                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2426:0x9 DW_TAG_member
	.byte	169                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x242f:0x9 DW_TAG_member
	.byte	170                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	188                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2438:0x9 DW_TAG_member
	.byte	171                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2441:0x9 DW_TAG_member
	.byte	172                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	190                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x244a:0x9 DW_TAG_member
	.byte	173                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	198                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2453:0x9 DW_TAG_member
	.byte	174                             # DW_AT_name
	.long	9308                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	215                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	62                              # Abbrev [62] 0x245c:0x56 DW_TAG_structure_type
	.byte	36                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.byte	39                              # Abbrev [39] 0x2460:0x9 DW_TAG_member
	.byte	175                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	203                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2469:0x9 DW_TAG_member
	.byte	176                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	204                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2472:0x9 DW_TAG_member
	.byte	177                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	206                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x247b:0x9 DW_TAG_member
	.byte	178                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2484:0x9 DW_TAG_member
	.byte	179                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	210                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x248d:0x9 DW_TAG_member
	.byte	180                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	211                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2496:0x9 DW_TAG_member
	.byte	181                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	212                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x249f:0x9 DW_TAG_member
	.byte	182                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	213                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24a8:0x9 DW_TAG_member
	.byte	183                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	214                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	39                              # Abbrev [39] 0x24b2:0x9 DW_TAG_member
	.byte	184                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	218                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24bb:0x9 DW_TAG_member
	.byte	185                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	219                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24c4:0x9 DW_TAG_member
	.byte	186                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24cd:0x9 DW_TAG_member
	.byte	187                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	221                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24d6:0x9 DW_TAG_member
	.byte	188                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24df:0x9 DW_TAG_member
	.byte	189                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	224                             # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24e8:0x9 DW_TAG_member
	.byte	190                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	225                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24f1:0x9 DW_TAG_member
	.byte	191                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x24fa:0x9 DW_TAG_member
	.byte	192                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2503:0x9 DW_TAG_member
	.byte	193                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	229                             # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x250c:0x9 DW_TAG_member
	.byte	194                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2515:0x9 DW_TAG_member
	.byte	195                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	231                             # DW_AT_decl_line
	.byte	124                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x251e:0x9 DW_TAG_member
	.byte	196                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2527:0x9 DW_TAG_member
	.byte	197                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	234                             # DW_AT_decl_line
	.byte	132                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2530:0x9 DW_TAG_member
	.byte	198                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	236                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2539:0x9 DW_TAG_member
	.byte	199                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	237                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2542:0x9 DW_TAG_member
	.byte	200                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	239                             # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x254b:0x9 DW_TAG_member
	.byte	201                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2554:0x9 DW_TAG_member
	.byte	202                             # DW_AT_name
	.long	10441                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	241                             # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x255d:0x9 DW_TAG_member
	.byte	203                             # DW_AT_name
	.long	10441                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	242                             # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2566:0x9 DW_TAG_member
	.byte	204                             # DW_AT_name
	.long	10441                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	243                             # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x256f:0x9 DW_TAG_member
	.byte	205                             # DW_AT_name
	.long	10441                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	244                             # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2578:0x9 DW_TAG_member
	.byte	206                             # DW_AT_name
	.long	10453                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x2581:0xa DW_TAG_member
	.byte	207                             # DW_AT_name
	.long	10453                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	246                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x258b:0xa DW_TAG_member
	.byte	208                             # DW_AT_name
	.long	10465                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.short	352                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x2595:0xa DW_TAG_member
	.byte	214                             # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.short	360                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x259f:0xa DW_TAG_member
	.byte	215                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.short	368                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x25a9:0xa DW_TAG_member
	.byte	216                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	252                             # DW_AT_decl_line
	.short	372                             # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x25b3:0xa DW_TAG_member
	.byte	217                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	253                             # DW_AT_decl_line
	.short	376                             # DW_AT_data_member_location
	.byte	59                              # Abbrev [59] 0x25bd:0xb DW_TAG_member
	.byte	218                             # DW_AT_name
	.long	9672                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	287                             # DW_AT_decl_line
	.short	384                             # DW_AT_data_member_location
	.byte	54                              # Abbrev [54] 0x25c8:0xf6 DW_TAG_structure_type
	.byte	100                             # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	256                             # DW_AT_decl_line
	.byte	52                              # Abbrev [52] 0x25cd:0xa DW_TAG_member
	.byte	219                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	258                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x25d7:0xa DW_TAG_member
	.byte	220                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	259                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x25e1:0xa DW_TAG_member
	.byte	221                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	261                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x25eb:0xa DW_TAG_member
	.byte	222                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	262                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x25f5:0xa DW_TAG_member
	.byte	223                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	263                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x25ff:0xa DW_TAG_member
	.byte	224                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	264                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2609:0xa DW_TAG_member
	.byte	225                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	265                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2613:0xa DW_TAG_member
	.byte	226                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	267                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x261d:0xa DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2627:0xa DW_TAG_member
	.byte	228                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	269                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2631:0xa DW_TAG_member
	.byte	229                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	270                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x263b:0xa DW_TAG_member
	.byte	230                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	271                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2645:0xa DW_TAG_member
	.byte	231                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	272                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x264f:0xa DW_TAG_member
	.byte	232                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2659:0xa DW_TAG_member
	.byte	233                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2663:0xa DW_TAG_member
	.byte	234                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x266d:0xa DW_TAG_member
	.byte	235                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	276                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2677:0xa DW_TAG_member
	.byte	236                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	277                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2681:0xa DW_TAG_member
	.byte	237                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x268b:0xa DW_TAG_member
	.byte	238                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2695:0xa DW_TAG_member
	.byte	239                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x269f:0xa DW_TAG_member
	.byte	240                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26a9:0xa DW_TAG_member
	.byte	241                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26b3:0xa DW_TAG_member
	.byte	242                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	286                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	59                              # Abbrev [59] 0x26be:0xb DW_TAG_member
	.byte	243                             # DW_AT_name
	.long	9929                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	327                             # DW_AT_decl_line
	.short	488                             # DW_AT_data_member_location
	.byte	54                              # Abbrev [54] 0x26c9:0x12e DW_TAG_structure_type
	.byte	144                             # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	290                             # DW_AT_decl_line
	.byte	52                              # Abbrev [52] 0x26ce:0xa DW_TAG_member
	.byte	244                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	292                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26d8:0xa DW_TAG_member
	.byte	245                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	294                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26e2:0xa DW_TAG_member
	.byte	246                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	295                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26ec:0xa DW_TAG_member
	.byte	247                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	296                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x26f6:0xa DW_TAG_member
	.byte	248                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	297                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2700:0xa DW_TAG_member
	.byte	249                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	299                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x270a:0xa DW_TAG_member
	.byte	250                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	300                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2714:0xa DW_TAG_member
	.byte	251                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	301                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x271e:0xa DW_TAG_member
	.byte	252                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2728:0xa DW_TAG_member
	.byte	253                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	303                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x2732:0xa DW_TAG_member
	.byte	254                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	304                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x273c:0xa DW_TAG_member
	.byte	255                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	305                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2746:0xb DW_TAG_member
	.short	256                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	306                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2751:0xb DW_TAG_member
	.short	257                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	307                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x275c:0xb DW_TAG_member
	.short	258                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	309                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2767:0xb DW_TAG_member
	.short	259                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	310                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2772:0xb DW_TAG_member
	.short	260                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	311                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x277d:0xb DW_TAG_member
	.short	261                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	312                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2788:0xb DW_TAG_member
	.short	262                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	315                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2793:0xb DW_TAG_member
	.short	263                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	316                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x279e:0xb DW_TAG_member
	.short	264                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	317                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27a9:0xb DW_TAG_member
	.short	265                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27b4:0xb DW_TAG_member
	.short	266                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27bf:0xb DW_TAG_member
	.short	267                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	108                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27ca:0xb DW_TAG_member
	.short	268                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	323                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27d5:0xb DW_TAG_member
	.short	269                             # DW_AT_name
	.long	10541                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27e0:0xb DW_TAG_member
	.short	276                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x27eb:0xb DW_TAG_member
	.short	277                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	326                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x27f7:0xc DW_TAG_member
	.short	278                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.short	632                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2803:0xc DW_TAG_member
	.short	279                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.short	636                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x280f:0xc DW_TAG_member
	.short	280                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	332                             # DW_AT_decl_line
	.short	640                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x281b:0xc DW_TAG_member
	.short	281                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	334                             # DW_AT_decl_line
	.short	644                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2827:0xc DW_TAG_member
	.short	282                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	335                             # DW_AT_decl_line
	.short	648                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2833:0xc DW_TAG_member
	.short	283                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	336                             # DW_AT_decl_line
	.short	652                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x283f:0xc DW_TAG_member
	.short	284                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	337                             # DW_AT_decl_line
	.short	656                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x284b:0xc DW_TAG_member
	.short	285                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	338                             # DW_AT_decl_line
	.short	660                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2857:0xc DW_TAG_member
	.short	286                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	339                             # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2863:0xc DW_TAG_member
	.short	287                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.short	668                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x286f:0xc DW_TAG_member
	.short	288                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	344                             # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x287b:0xc DW_TAG_member
	.short	289                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.short	676                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2887:0xc DW_TAG_member
	.short	290                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	364                             # DW_AT_decl_line
	.short	680                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2893:0xc DW_TAG_member
	.short	291                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	367                             # DW_AT_decl_line
	.short	684                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x289f:0xc DW_TAG_member
	.short	292                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.short	688                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x28ab:0xc DW_TAG_member
	.short	293                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	369                             # DW_AT_decl_line
	.short	692                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x28b7:0xc DW_TAG_member
	.short	294                             # DW_AT_name
	.long	10624                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	375                             # DW_AT_decl_line
	.short	696                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x28c4:0x5 DW_TAG_pointer_type
	.long	96                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x28c9:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x28ce:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x28d5:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x28da:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x28e1:0x5 DW_TAG_pointer_type
	.long	10470                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x28e6:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x28e7:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x28ec:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x28f1:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x28f6:0x5 DW_TAG_formal_parameter
	.long	10492                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x28fc:0x5 DW_TAG_pointer_type
	.long	10497                           # DW_AT_type
	.byte	65                              # Abbrev [65] 0x2901:0x20 DW_TAG_structure_type
	.byte	213                             # DW_AT_name
	.byte	24                              # DW_AT_byte_size
	.byte	66                              # Abbrev [66] 0x2904:0x7 DW_TAG_member
	.byte	209                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	0                               # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x290b:0x7 DW_TAG_member
	.byte	210                             # DW_AT_name
	.long	3497                            # DW_AT_type
	.byte	4                               # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2912:0x7 DW_TAG_member
	.byte	211                             # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	8                               # DW_AT_data_member_location
	.byte	66                              # Abbrev [66] 0x2919:0x7 DW_TAG_member
	.byte	212                             # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	16                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2921:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2926:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x292d:0x5 DW_TAG_pointer_type
	.long	10546                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x2932:0x9 DW_TAG_typedef
	.long	10555                           # DW_AT_type
	.short	275                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	174                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x293b:0x40 DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x293f:0xa DW_TAG_member
	.short	270                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2949:0xa DW_TAG_member
	.short	271                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2953:0xa DW_TAG_member
	.short	272                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x295d:0xa DW_TAG_member
	.short	273                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	171                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2967:0xa DW_TAG_member
	.short	274                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2971:0x9 DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	10619                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x297b:0x5 DW_TAG_pointer_type
	.long	9193                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x2980:0x5 DW_TAG_pointer_type
	.long	10629                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x2985:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x2986:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x298c:0xc DW_TAG_array_type
	.long	6059                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2991:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	129                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2998:0x5 DW_TAG_pointer_type
	.long	10653                           # DW_AT_type
	.byte	60                              # Abbrev [60] 0x299d:0xa DW_TAG_typedef
	.long	10663                           # DW_AT_type
	.short	310                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	604                             # DW_AT_decl_line
	.byte	54                              # Abbrev [54] 0x29a7:0x32 DW_TAG_structure_type
	.byte	24                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	593                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x29ac:0xb DW_TAG_member
	.short	306                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	595                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x29b7:0xb DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	596                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x29c2:0xb DW_TAG_member
	.short	308                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	599                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x29cd:0xb DW_TAG_member
	.short	309                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	603                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x29d9:0x9 DW_TAG_typedef
	.long	10722                           # DW_AT_type
	.short	321                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	68                              # Abbrev [68] 0x29e2:0x43 DW_TAG_structure_type
	.short	320                             # DW_AT_name
	.byte	40                              # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x29e8:0xa DW_TAG_member
	.short	314                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x29f2:0xa DW_TAG_member
	.short	315                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x29fc:0xa DW_TAG_member
	.short	316                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a06:0xa DW_TAG_member
	.short	317                             # DW_AT_name
	.long	3915                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a10:0xa DW_TAG_member
	.short	318                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a1a:0xa DW_TAG_member
	.short	319                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2a25:0xc DW_TAG_array_type
	.long	10801                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2a2a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2a31:0x9 DW_TAG_typedef
	.long	10810                           # DW_AT_type
	.short	401                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	69                              # Abbrev [69] 0x2a3a:0x2f2 DW_TAG_structure_type
	.short	1300                            # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2a3f:0xa DW_TAG_member
	.short	338                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a49:0xa DW_TAG_member
	.short	339                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2a53:0x9 DW_TAG_member
	.byte	171                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a5c:0xa DW_TAG_member
	.short	340                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a66:0xa DW_TAG_member
	.short	341                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a70:0xa DW_TAG_member
	.short	342                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a7a:0xa DW_TAG_member
	.short	343                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a84:0xa DW_TAG_member
	.short	344                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a8e:0xa DW_TAG_member
	.short	345                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2a98:0xa DW_TAG_member
	.short	346                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2aa2:0xa DW_TAG_member
	.short	347                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2aac:0xa DW_TAG_member
	.short	348                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ab6:0xa DW_TAG_member
	.short	349                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ac0:0xa DW_TAG_member
	.short	350                             # DW_AT_name
	.long	11564                           # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2aca:0xb DW_TAG_member
	.short	351                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	1076                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2ad5:0xb DW_TAG_member
	.short	352                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.short	1080                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2ae0:0xb DW_TAG_member
	.short	353                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.short	1084                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2aeb:0xb DW_TAG_member
	.short	354                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	1088                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2af6:0xb DW_TAG_member
	.short	355                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	1092                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2b01:0xb DW_TAG_member
	.short	356                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.short	1096                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2b0c:0xb DW_TAG_member
	.short	357                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.short	1100                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2b17:0xb DW_TAG_member
	.short	358                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	1104                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x2b22:0xb DW_TAG_member
	.short	359                             # DW_AT_name
	.long	11053                           # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.short	1108                            # DW_AT_data_member_location
	.byte	62                              # Abbrev [62] 0x2b2d:0x2d DW_TAG_structure_type
	.byte	16                              # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2b31:0xa DW_TAG_member
	.short	318                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2b3b:0xa DW_TAG_member
	.short	360                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2b45:0xa DW_TAG_member
	.short	361                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2b4f:0xa DW_TAG_member
	.short	362                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	70                              # Abbrev [70] 0x2b5a:0xb DW_TAG_member
	.short	363                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.short	1124                            # DW_AT_data_member_location
	.byte	63                              # Abbrev [63] 0x2b65:0xa DW_TAG_member
	.byte	174                             # DW_AT_name
	.long	11119                           # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	150                             # DW_AT_decl_line
	.short	1128                            # DW_AT_data_member_location
	.byte	62                              # Abbrev [62] 0x2b6f:0x1b1 DW_TAG_structure_type
	.byte	168                             # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2b73:0xa DW_TAG_member
	.short	364                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2b7d:0x9 DW_TAG_member
	.byte	176                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2b86:0x9 DW_TAG_member
	.byte	175                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2b8f:0xa DW_TAG_member
	.short	365                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2b99:0xa DW_TAG_member
	.short	366                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ba3:0xa DW_TAG_member
	.short	367                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2bad:0x9 DW_TAG_member
	.byte	178                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2bb6:0x9 DW_TAG_member
	.byte	179                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2bbf:0xa DW_TAG_member
	.short	368                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2bc9:0x9 DW_TAG_member
	.byte	180                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2bd2:0x9 DW_TAG_member
	.byte	181                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2bdb:0x9 DW_TAG_member
	.byte	182                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2be4:0xa DW_TAG_member
	.short	369                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2bee:0xa DW_TAG_member
	.short	370                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2bf8:0xa DW_TAG_member
	.short	371                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c02:0xa DW_TAG_member
	.short	372                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c0c:0xa DW_TAG_member
	.short	373                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c16:0xa DW_TAG_member
	.short	374                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c20:0xa DW_TAG_member
	.short	375                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c2a:0xa DW_TAG_member
	.short	376                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c34:0xa DW_TAG_member
	.short	377                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c3e:0xa DW_TAG_member
	.short	378                             # DW_AT_name
	.long	11336                           # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	62                              # Abbrev [62] 0x2c48:0x7d DW_TAG_structure_type
	.byte	48                              # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2c4c:0xa DW_TAG_member
	.short	379                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c56:0xa DW_TAG_member
	.short	380                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c60:0xa DW_TAG_member
	.short	381                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c6a:0xa DW_TAG_member
	.short	382                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	127                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c74:0xa DW_TAG_member
	.short	383                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c7e:0xa DW_TAG_member
	.short	384                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	129                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c88:0xa DW_TAG_member
	.short	385                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c92:0xa DW_TAG_member
	.short	386                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2c9c:0xa DW_TAG_member
	.short	387                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	133                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ca6:0xa DW_TAG_member
	.short	388                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	134                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2cb0:0xa DW_TAG_member
	.short	389                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	135                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2cba:0xa DW_TAG_member
	.short	390                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	136                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	67                              # Abbrev [67] 0x2cc5:0xa DW_TAG_member
	.short	391                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	139                             # DW_AT_decl_line
	.byte	132                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ccf:0xa DW_TAG_member
	.short	392                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	140                             # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2cd9:0xa DW_TAG_member
	.short	393                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	141                             # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ce3:0xa DW_TAG_member
	.short	394                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	142                             # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2ced:0xa DW_TAG_member
	.short	395                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	143                             # DW_AT_decl_line
	.byte	148                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2cf7:0xa DW_TAG_member
	.short	396                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d01:0xa DW_TAG_member
	.short	397                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	145                             # DW_AT_decl_line
	.byte	156                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d0b:0xa DW_TAG_member
	.short	398                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	146                             # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d15:0xa DW_TAG_member
	.short	399                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	147                             # DW_AT_decl_line
	.byte	164                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	70                              # Abbrev [70] 0x2d20:0xb DW_TAG_member
	.short	400                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.short	1296                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2d2c:0xd DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x2d31:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2d39:0x5 DW_TAG_pointer_type
	.long	10801                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2d3e:0xc DW_TAG_array_type
	.long	11594                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2d43:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x2d4a:0x9 DW_TAG_typedef
	.long	11603                           # DW_AT_type
	.short	417                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	186                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x2d53:0xb6 DW_TAG_structure_type
	.byte	120                             # DW_AT_byte_size
	.byte	8                               # DW_AT_decl_file
	.byte	156                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x2d57:0xa DW_TAG_member
	.short	338                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	158                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d61:0xa DW_TAG_member
	.short	281                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2d6b:0x9 DW_TAG_member
	.byte	196                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	161                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d74:0xa DW_TAG_member
	.short	404                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	163                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d7e:0xa DW_TAG_member
	.short	405                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d88:0xa DW_TAG_member
	.short	406                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	166                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d92:0xa DW_TAG_member
	.short	407                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2d9c:0xa DW_TAG_member
	.short	408                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	169                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2da6:0x9 DW_TAG_member
	.byte	223                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2daf:0xa DW_TAG_member
	.short	409                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2db9:0xa DW_TAG_member
	.short	410                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2dc3:0xa DW_TAG_member
	.short	411                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2dcd:0xa DW_TAG_member
	.short	412                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	177                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2dd7:0xa DW_TAG_member
	.short	413                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2de1:0xa DW_TAG_member
	.short	414                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2deb:0xa DW_TAG_member
	.short	415                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x2df5:0x9 DW_TAG_member
	.byte	200                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	183                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x2dfe:0xa DW_TAG_member
	.short	416                             # DW_AT_name
	.long	11785                           # DW_AT_type
	.byte	8                               # DW_AT_decl_file
	.byte	184                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2e09:0xc DW_TAG_array_type
	.long	11797                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e0e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e15:0x5 DW_TAG_pointer_type
	.long	2115                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x2e1a:0x5 DW_TAG_pointer_type
	.long	11594                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2e1f:0xc DW_TAG_array_type
	.long	11819                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e24:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e2b:0x5 DW_TAG_pointer_type
	.long	11824                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2e30:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e35:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2e3c:0xc DW_TAG_array_type
	.long	11848                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e41:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e48:0x5 DW_TAG_pointer_type
	.long	11853                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2e4d:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e52:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2e59:0xc DW_TAG_array_type
	.long	11877                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e5e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e65:0x5 DW_TAG_pointer_type
	.long	11882                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2e6a:0xc DW_TAG_array_type
	.long	4009                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e6f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2e76:0xc DW_TAG_array_type
	.long	11906                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e7b:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e82:0x5 DW_TAG_pointer_type
	.long	11911                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2e87:0xc DW_TAG_array_type
	.long	4009                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e8c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x2e93:0xc DW_TAG_array_type
	.long	11935                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2e98:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	92                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x2e9f:0x5 DW_TAG_pointer_type
	.long	4009                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x2ea4:0x12 DW_TAG_array_type
	.long	11935                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x2ea9:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	92                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x2eaf:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	60                              # Abbrev [60] 0x2eb6:0xa DW_TAG_typedef
	.long	11968                           # DW_AT_type
	.short	476                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	364                             # DW_AT_decl_line
	.byte	56                              # Abbrev [56] 0x2ec0:0x1c1 DW_TAG_structure_type
	.short	6672                            # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x2ec6:0xb DW_TAG_member
	.short	402                             # DW_AT_name
	.long	11577                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	304                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2ed1:0xb DW_TAG_member
	.short	418                             # DW_AT_name
	.long	11802                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	305                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2edc:0xb DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	307                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2ee7:0xb DW_TAG_member
	.short	433                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	308                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2ef2:0xb DW_TAG_member
	.short	434                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	309                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2efd:0xb DW_TAG_member
	.short	435                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	311                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f08:0xb DW_TAG_member
	.short	325                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	313                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f13:0xb DW_TAG_member
	.short	436                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	315                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f1e:0xb DW_TAG_member
	.short	437                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	316                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f29:0xb DW_TAG_member
	.short	438                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	317                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f34:0xb DW_TAG_member
	.short	419                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	319                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f3f:0xb DW_TAG_member
	.short	439                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f4a:0xb DW_TAG_member
	.short	440                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f55:0xb DW_TAG_member
	.short	441                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f60:0xb DW_TAG_member
	.short	442                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f6b:0xb DW_TAG_member
	.short	443                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	327                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f76:0xb DW_TAG_member
	.short	444                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	329                             # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f81:0xb DW_TAG_member
	.short	445                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f8c:0xb DW_TAG_member
	.short	446                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	331                             # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2f97:0xb DW_TAG_member
	.short	447                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	333                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2fa2:0xb DW_TAG_member
	.short	448                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	334                             # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2fad:0xb DW_TAG_member
	.short	449                             # DW_AT_name
	.long	12417                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	339                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	54                              # Abbrev [54] 0x2fb8:0x1c DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	335                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x2fbd:0xb DW_TAG_member
	.short	450                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	337                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x2fc8:0xb DW_TAG_member
	.short	451                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	338                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x2fd4:0xd DW_TAG_member
	.short	452                             # DW_AT_name
	.long	12435                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	342                             # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	352                             # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2fe1:0xc DW_TAG_member
	.short	466                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	344                             # DW_AT_decl_line
	.short	6496                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2fed:0xc DW_TAG_member
	.short	467                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	345                             # DW_AT_decl_line
	.short	6500                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x2ff9:0xc DW_TAG_member
	.short	468                             # DW_AT_name
	.long	12645                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	350                             # DW_AT_decl_line
	.short	6504                            # DW_AT_data_member_location
	.byte	54                              # Abbrev [54] 0x3005:0x1c DW_TAG_structure_type
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	346                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x300a:0xb DW_TAG_member
	.short	469                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	348                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x3015:0xb DW_TAG_member
	.short	439                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	349                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	59                              # Abbrev [59] 0x3021:0xb DW_TAG_member
	.byte	197                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	352                             # DW_AT_decl_line
	.short	6632                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x302c:0xc DW_TAG_member
	.short	273                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	354                             # DW_AT_decl_line
	.short	6636                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x3038:0xc DW_TAG_member
	.short	470                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	355                             # DW_AT_decl_line
	.short	6640                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x3044:0xc DW_TAG_member
	.short	471                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	356                             # DW_AT_decl_line
	.short	6644                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x3050:0xc DW_TAG_member
	.short	472                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	357                             # DW_AT_decl_line
	.short	6648                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x305c:0xc DW_TAG_member
	.short	473                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	360                             # DW_AT_decl_line
	.short	6652                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x3068:0xc DW_TAG_member
	.short	474                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	361                             # DW_AT_decl_line
	.short	6656                            # DW_AT_data_member_location
	.byte	53                              # Abbrev [53] 0x3074:0xc DW_TAG_member
	.short	475                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	362                             # DW_AT_decl_line
	.short	6660                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3081:0x12 DW_TAG_array_type
	.long	12216                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3086:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x308c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3093:0x12 DW_TAG_array_type
	.long	12453                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3098:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x309e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	71                              # Abbrev [71] 0x30a5:0xa DW_TAG_typedef
	.long	12463                           # DW_AT_type
	.short	465                             # DW_AT_name
	.byte	16                              # DW_AT_alignment
	.byte	12                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	68                              # Abbrev [68] 0x30af:0x44 DW_TAG_structure_type
	.short	465                             # DW_AT_name
	.byte	64                              # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	72                              # Abbrev [72] 0x30b5:0xb DW_TAG_member
	.short	453                             # DW_AT_name
	.long	12531                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x30c0:0xa DW_TAG_member
	.short	457                             # DW_AT_name
	.long	12531                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x30ca:0xa DW_TAG_member
	.short	458                             # DW_AT_name
	.long	12566                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x30d4:0xa DW_TAG_member
	.short	461                             # DW_AT_name
	.long	12566                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x30de:0xa DW_TAG_member
	.short	462                             # DW_AT_name
	.long	12566                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x30e8:0xa DW_TAG_member
	.short	463                             # DW_AT_name
	.long	12584                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x30f3:0xc DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x30f8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x30ff:0x9 DW_TAG_typedef
	.long	12552                           # DW_AT_type
	.short	456                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3108:0x9 DW_TAG_typedef
	.long	12561                           # DW_AT_type
	.short	455                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	2                               # Abbrev [2] 0x3111:0x5 DW_TAG_base_type
	.short	454                             # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	50                              # Abbrev [50] 0x3116:0x9 DW_TAG_typedef
	.long	12575                           # DW_AT_type
	.short	460                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x311f:0x9 DW_TAG_typedef
	.long	2644                            # DW_AT_type
	.short	459                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3128:0x5 DW_TAG_pointer_type
	.long	12589                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x312d:0x9 DW_TAG_typedef
	.long	12598                           # DW_AT_type
	.short	464                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3136:0x5 DW_TAG_pointer_type
	.long	12603                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x313b:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x313c:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3141:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3146:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x314b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3150:0x5 DW_TAG_formal_parameter
	.long	12635                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3155:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x315b:0x5 DW_TAG_pointer_type
	.long	12640                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0x3160:0x5 DW_TAG_const_type
	.long	12463                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3165:0xc DW_TAG_array_type
	.long	12293                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x316a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3171:0x9 DW_TAG_typedef
	.long	12666                           # DW_AT_type
	.short	484                             # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	69                              # Abbrev [69] 0x317a:0x61 DW_TAG_structure_type
	.short	512                             # DW_AT_byte_size
	.byte	13                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x317f:0xa DW_TAG_member
	.short	478                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3189:0xa DW_TAG_member
	.short	479                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3193:0xa DW_TAG_member
	.short	480                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x319d:0xa DW_TAG_member
	.short	481                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x31a7:0xa DW_TAG_member
	.short	314                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x31b1:0xa DW_TAG_member
	.short	315                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x31bb:0xa DW_TAG_member
	.short	316                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	72                              # Abbrev [72] 0x31c5:0xb DW_TAG_member
	.short	482                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x31d0:0xa DW_TAG_member
	.short	483                             # DW_AT_name
	.long	12763                           # DW_AT_type
	.byte	13                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x31db:0xd DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x31e0:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	460                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x31e8:0x5 DW_TAG_pointer_type
	.long	12781                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x31ed:0x5 DW_TAG_pointer_type
	.long	12786                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x31f2:0x9 DW_TAG_typedef
	.long	12795                           # DW_AT_type
	.short	569                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	146                             # DW_AT_decl_line
	.byte	61                              # Abbrev [61] 0x31fb:0x380 DW_TAG_structure_type
	.short	568                             # DW_AT_name
	.short	15632                           # DW_AT_byte_size
	.byte	14                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x3202:0xa DW_TAG_member
	.short	439                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x320c:0xa DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3216:0xa DW_TAG_member
	.short	487                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3220:0xa DW_TAG_member
	.short	488                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x322a:0xa DW_TAG_member
	.short	491                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3234:0xa DW_TAG_member
	.short	492                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x323e:0xa DW_TAG_member
	.short	493                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3248:0xa DW_TAG_member
	.short	333                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3252:0xa DW_TAG_member
	.short	494                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x325c:0x9 DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	13709                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3265:0xa DW_TAG_member
	.short	324                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x326f:0xa DW_TAG_member
	.short	495                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3279:0xa DW_TAG_member
	.short	496                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3283:0xa DW_TAG_member
	.short	325                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x328d:0xa DW_TAG_member
	.short	497                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3297:0xa DW_TAG_member
	.short	498                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	76                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32a1:0xa DW_TAG_member
	.short	499                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32ab:0xa DW_TAG_member
	.short	500                             # DW_AT_name
	.long	2120                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32b5:0xa DW_TAG_member
	.short	501                             # DW_AT_name
	.long	2120                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	85                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32bf:0xa DW_TAG_member
	.short	502                             # DW_AT_name
	.long	2120                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	86                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32c9:0xa DW_TAG_member
	.short	503                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32d3:0xa DW_TAG_member
	.short	504                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	92                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32dd:0xa DW_TAG_member
	.short	505                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32e7:0xa DW_TAG_member
	.short	506                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x32f1:0xa DW_TAG_member
	.short	507                             # DW_AT_name
	.long	13714                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	39                              # Abbrev [39] 0x32fb:0x9 DW_TAG_member
	.byte	168                             # DW_AT_name
	.long	13714                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3304:0xa DW_TAG_member
	.short	508                             # DW_AT_name
	.long	13714                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x330e:0xa DW_TAG_member
	.short	509                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	140                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3318:0xa DW_TAG_member
	.short	510                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3322:0xa DW_TAG_member
	.short	511                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	148                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x332c:0xa DW_TAG_member
	.short	512                             # DW_AT_name
	.long	13726                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3336:0xa DW_TAG_member
	.short	513                             # DW_AT_name
	.long	13738                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3340:0xa DW_TAG_member
	.short	514                             # DW_AT_name
	.long	13738                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x334a:0xa DW_TAG_member
	.short	515                             # DW_AT_name
	.long	11935                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3354:0xa DW_TAG_member
	.short	516                             # DW_AT_name
	.long	13738                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x335e:0xb DW_TAG_member
	.short	517                             # DW_AT_name
	.long	13738                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x3369:0xc DW_TAG_member
	.short	452                             # DW_AT_name
	.long	13750                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	16                              # DW_AT_alignment
	.short	320                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3375:0xb DW_TAG_member
	.short	518                             # DW_AT_name
	.long	13768                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	3392                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3380:0xb DW_TAG_member
	.short	519                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	3520                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x338b:0xb DW_TAG_member
	.short	520                             # DW_AT_name
	.long	13780                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.short	3528                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3396:0xb DW_TAG_member
	.short	521                             # DW_AT_name
	.long	13785                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	3536                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33a1:0xb DW_TAG_member
	.short	522                             # DW_AT_name
	.long	3931                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.short	3544                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33ac:0xb DW_TAG_member
	.short	523                             # DW_AT_name
	.long	13790                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	85                              # DW_AT_decl_line
	.short	3552                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33b7:0xb DW_TAG_member
	.short	524                             # DW_AT_name
	.long	13802                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	3568                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33c2:0xb DW_TAG_member
	.short	525                             # DW_AT_name
	.long	13819                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.short	3576                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33cd:0xb DW_TAG_member
	.short	526                             # DW_AT_name
	.long	13837                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.short	3848                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33d8:0xb DW_TAG_member
	.short	527                             # DW_AT_name
	.long	13855                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.short	6440                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33e3:0xb DW_TAG_member
	.short	528                             # DW_AT_name
	.long	13873                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.short	6712                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33ee:0xb DW_TAG_member
	.short	529                             # DW_AT_name
	.long	10529                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.short	6728                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x33f9:0xb DW_TAG_member
	.short	530                             # DW_AT_name
	.long	13885                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.short	6736                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3404:0xb DW_TAG_member
	.short	531                             # DW_AT_name
	.long	13807                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.short	6864                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x340f:0xb DW_TAG_member
	.short	532                             # DW_AT_name
	.long	13903                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	6868                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x341a:0xb DW_TAG_member
	.short	533                             # DW_AT_name
	.long	13903                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	8164                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3425:0xb DW_TAG_member
	.short	534                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	9460                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3430:0xb DW_TAG_member
	.short	535                             # DW_AT_name
	.long	13921                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	9464                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x343b:0xb DW_TAG_member
	.short	536                             # DW_AT_name
	.long	13933                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	9536                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3446:0xb DW_TAG_member
	.short	537                             # DW_AT_name
	.long	4061                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.short	12128                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3451:0xb DW_TAG_member
	.short	538                             # DW_AT_name
	.long	4061                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.short	12136                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x345c:0xb DW_TAG_member
	.short	539                             # DW_AT_name
	.long	13951                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.short	12144                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3467:0xb DW_TAG_member
	.short	540                             # DW_AT_name
	.long	13951                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.short	12152                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3472:0xb DW_TAG_member
	.short	541                             # DW_AT_name
	.long	13951                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
	.short	12160                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x347d:0xb DW_TAG_member
	.short	542                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.short	12168                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3488:0xb DW_TAG_member
	.short	543                             # DW_AT_name
	.long	11935                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	116                             # DW_AT_decl_line
	.short	12176                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3493:0xb DW_TAG_member
	.short	544                             # DW_AT_name
	.long	11935                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.short	12184                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x349e:0xb DW_TAG_member
	.short	545                             # DW_AT_name
	.long	11935                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	118                             # DW_AT_decl_line
	.short	12192                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34a9:0xb DW_TAG_member
	.short	546                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.short	12200                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34b4:0xb DW_TAG_member
	.short	547                             # DW_AT_name
	.long	13956                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.short	12204                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34bf:0xb DW_TAG_member
	.short	548                             # DW_AT_name
	.long	3981                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	121                             # DW_AT_decl_line
	.short	12276                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34ca:0xb DW_TAG_member
	.short	549                             # DW_AT_name
	.long	4041                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.short	12280                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34d5:0xb DW_TAG_member
	.short	550                             # DW_AT_name
	.long	13968                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	125                             # DW_AT_decl_line
	.short	12288                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34e0:0xb DW_TAG_member
	.short	556                             # DW_AT_name
	.long	14028                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
	.short	12320                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34eb:0xb DW_TAG_member
	.short	557                             # DW_AT_name
	.long	14040                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	129                             # DW_AT_decl_line
	.short	12572                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x34f6:0xb DW_TAG_member
	.short	558                             # DW_AT_name
	.long	14052                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.short	13576                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3501:0xb DW_TAG_member
	.short	334                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	131                             # DW_AT_decl_line
	.short	15584                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x350c:0xb DW_TAG_member
	.short	335                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	132                             # DW_AT_decl_line
	.short	15588                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3517:0xb DW_TAG_member
	.short	559                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	135                             # DW_AT_decl_line
	.short	15592                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3522:0xb DW_TAG_member
	.short	560                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	136                             # DW_AT_decl_line
	.short	15596                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x352d:0xb DW_TAG_member
	.short	561                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	137                             # DW_AT_decl_line
	.short	15600                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3538:0xb DW_TAG_member
	.short	562                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	138                             # DW_AT_decl_line
	.short	15604                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3543:0xb DW_TAG_member
	.short	563                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	139                             # DW_AT_decl_line
	.short	15608                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x354e:0xb DW_TAG_member
	.short	564                             # DW_AT_name
	.long	3911                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	142                             # DW_AT_decl_line
	.short	15612                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3559:0xb DW_TAG_member
	.short	565                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	143                             # DW_AT_decl_line
	.short	15616                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3564:0xb DW_TAG_member
	.short	566                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.short	15620                           # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x356f:0xb DW_TAG_member
	.short	567                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	145                             # DW_AT_decl_line
	.short	15624                           # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x357b:0x9 DW_TAG_typedef
	.long	13700                           # DW_AT_type
	.short	490                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x3584:0x9 DW_TAG_typedef
	.long	3923                            # DW_AT_type
	.short	489                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x358d:0x5 DW_TAG_pointer_type
	.long	9183                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3592:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3597:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x359e:0xc DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35a3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x35aa:0xc DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35af:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x35b6:0x12 DW_TAG_array_type
	.long	12453                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35bb:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x35c1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x35c8:0xc DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35cd:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x35d4:0x5 DW_TAG_pointer_type
	.long	12795                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x35d9:0x5 DW_TAG_pointer_type
	.long	3430                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x35de:0xc DW_TAG_array_type
	.long	13802                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35e3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x35ea:0x5 DW_TAG_pointer_type
	.long	13807                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x35ef:0xc DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x35f4:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x35fb:0x12 DW_TAG_array_type
	.long	13802                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3600:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3606:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x360d:0x12 DW_TAG_array_type
	.long	11935                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3612:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3618:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x361f:0x12 DW_TAG_array_type
	.long	4061                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3624:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x362a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3631:0xc DW_TAG_array_type
	.long	13785                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3636:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x363d:0x12 DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3642:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3648:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x364f:0x12 DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3654:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x365a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3661:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3666:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x366d:0x12 DW_TAG_array_type
	.long	4061                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3672:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3678:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x367f:0x5 DW_TAG_pointer_type
	.long	3911                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3684:0xc DW_TAG_array_type
	.long	3911                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3689:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	60                              # Abbrev [60] 0x3690:0xa DW_TAG_typedef
	.long	13978                           # DW_AT_type
	.short	555                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	503                             # DW_AT_decl_line
	.byte	54                              # Abbrev [54] 0x369a:0x32 DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	496                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x369f:0xb DW_TAG_member
	.short	551                             # DW_AT_name
	.long	3927                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x36aa:0xb DW_TAG_member
	.short	552                             # DW_AT_name
	.long	3927                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	499                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x36b5:0xb DW_TAG_member
	.short	553                             # DW_AT_name
	.long	3927                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	500                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x36c0:0xb DW_TAG_member
	.short	554                             # DW_AT_name
	.long	3927                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	502                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x36cc:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x36d1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x36d8:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x36dd:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x36e4:0xc DW_TAG_array_type
	.long	3927                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x36e9:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	251                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x36f0:0xc DW_TAG_array_type
	.long	12776                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x36f5:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x36fc:0xc DW_TAG_array_type
	.long	12781                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3701:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3708:0xc DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x370d:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3714:0xc DW_TAG_array_type
	.long	12781                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3719:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3720:0xc DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3725:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x372c:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3731:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3737:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x373e:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3743:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3749:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3750:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3755:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	24                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x375b:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3762:0xc DW_TAG_array_type
	.long	3497                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3767:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x376e:0xc DW_TAG_array_type
	.long	3497                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3773:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x377a:0x5 DW_TAG_pointer_type
	.long	12543                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x377f:0x5 DW_TAG_pointer_type
	.long	14212                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3784:0xc DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3789:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3790:0x5 DW_TAG_pointer_type
	.long	14229                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3795:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x379a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	24                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37a1:0xc DW_TAG_array_type
	.long	14253                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x37a6:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x37ad:0x5 DW_TAG_pointer_type
	.long	14258                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x37b2:0x12 DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x37b7:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x37bd:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37c4:0x12 DW_TAG_array_type
	.long	13802                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x37c9:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x37cf:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37d6:0xd DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x37db:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	384                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37e3:0xd DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x37e8:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	864                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37f0:0xd DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x37f5:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x37fd:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3802:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3808:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x380f:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3814:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	15                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x381a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3821:0xc DW_TAG_array_type
	.long	3981                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3826:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x382d:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3832:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3838:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x383f:0xc DW_TAG_array_type
	.long	4041                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3844:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x384b:0xc DW_TAG_array_type
	.long	3981                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3850:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3857:0x18 DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x385c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3862:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3868:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x386f:0xc DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3874:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x387b:0x12 DW_TAG_array_type
	.long	11935                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3880:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3886:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	16                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x388d:0xc DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3892:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3899:0xc DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x389e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	48                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x38a5:0x12 DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x38aa:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38b0:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x38b7:0x18 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x38bc:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38c2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38c8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x38cf:0x18 DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x38d4:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38da:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38e0:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x38e7:0x18 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x38ec:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38f2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x38f8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x38ff:0x12 DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3904:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x390a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3911:0x12 DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3916:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x391c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3923:0x18 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3928:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x392e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3934:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x393b:0x5 DW_TAG_pointer_type
	.long	14656                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3940:0xc DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3945:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x394c:0x18 DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3951:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3957:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x395d:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3964:0x5 DW_TAG_pointer_type
	.long	14697                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3969:0xc DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x396e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3975:0xc DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x397a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	18                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3981:0xc DW_TAG_array_type
	.long	3430                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3986:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	34                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x398d:0x5 DW_TAG_pointer_type
	.long	14738                           # DW_AT_type
	.byte	60                              # Abbrev [60] 0x3992:0xa DW_TAG_typedef
	.long	14748                           # DW_AT_type
	.short	708                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	379                             # DW_AT_decl_line
	.byte	74                              # Abbrev [74] 0x399c:0x3 DW_TAG_structure_type
	.short	708                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	4                               # Abbrev [4] 0x399f:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39a4:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39ab:0x12 DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39b0:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x39b6:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39bd:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39c2:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39c9:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39ce:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39d5:0x12 DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39da:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x39e0:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39e7:0xc DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39ec:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39f3:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x39f8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x39ff:0xc DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a04:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a0b:0xc DW_TAG_array_type
	.long	3927                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a10:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a17:0x12 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a1c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a22:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	19                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a29:0x12 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a2e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a34:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	17                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a3b:0x18 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a40:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a46:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a4c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	32                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a53:0xc DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a58:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a5f:0x12 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a64:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a6a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	13                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a71:0x12 DW_TAG_array_type
	.long	3981                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a76:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a7c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a83:0x12 DW_TAG_array_type
	.long	4009                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a88:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3a8e:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3a95:0xc DW_TAG_array_type
	.long	3981                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3a9a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3aa1:0x12 DW_TAG_array_type
	.long	3931                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3aa6:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3aac:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3ab3:0xc DW_TAG_array_type
	.long	15039                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3ab8:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3abf:0x5 DW_TAG_pointer_type
	.long	15044                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3ac4:0x18 DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3ac9:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3acf:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x3ad5:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3adc:0xc DW_TAG_array_type
	.long	15080                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3ae1:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3ae8:0x9 DW_TAG_typedef
	.long	15089                           # DW_AT_type
	.short	744                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3af1:0x5 DW_TAG_pointer_type
	.long	15094                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3af6:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3af7:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3afd:0xc DW_TAG_array_type
	.long	15113                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3b02:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3b09:0x9 DW_TAG_typedef
	.long	15122                           # DW_AT_type
	.short	747                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3b12:0x5 DW_TAG_pointer_type
	.long	15127                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3b17:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3b18:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3b1d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3b23:0xc DW_TAG_array_type
	.long	15080                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3b28:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	12                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3b2f:0x9 DW_TAG_typedef
	.long	15160                           # DW_AT_type
	.short	750                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3b38:0x5 DW_TAG_pointer_type
	.long	15165                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3b3d:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3b3e:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3b43:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3b48:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3b4d:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3b53:0x9 DW_TAG_typedef
	.long	15196                           # DW_AT_type
	.short	788                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	69                              # Abbrev [69] 0x3b5c:0x16c DW_TAG_structure_type
	.short	1056                            # DW_AT_byte_size
	.byte	10                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x3b61:0xa DW_TAG_member
	.short	752                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3b6b:0xa DW_TAG_member
	.short	754                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3b75:0xa DW_TAG_member
	.short	755                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3b7f:0xa DW_TAG_member
	.short	756                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3b89:0xa DW_TAG_member
	.short	757                             # DW_AT_name
	.long	15612                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	69                              # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3b93:0xb DW_TAG_member
	.short	758                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3b9e:0xb DW_TAG_member
	.short	759                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.short	312                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3ba9:0xb DW_TAG_member
	.short	760                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.short	368                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3bb4:0xb DW_TAG_member
	.short	761                             # DW_AT_name
	.long	15624                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.short	424                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3bbf:0xb DW_TAG_member
	.short	763                             # DW_AT_name
	.long	15682                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.short	480                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3bca:0xb DW_TAG_member
	.short	765                             # DW_AT_name
	.long	15560                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.short	536                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3bd5:0xb DW_TAG_member
	.short	766                             # DW_AT_name
	.long	15745                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.short	592                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3be0:0xb DW_TAG_member
	.short	767                             # DW_AT_name
	.long	15781                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.short	600                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3beb:0xb DW_TAG_member
	.short	768                             # DW_AT_name
	.long	15781                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.short	632                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3bf6:0xb DW_TAG_member
	.short	769                             # DW_AT_name
	.long	15814                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.short	664                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c01:0xb DW_TAG_member
	.short	770                             # DW_AT_name
	.long	15863                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.short	672                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c0c:0xb DW_TAG_member
	.short	771                             # DW_AT_name
	.long	15624                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	86                              # DW_AT_decl_line
	.short	680                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c17:0xb DW_TAG_member
	.short	772                             # DW_AT_name
	.long	15682                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.short	736                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c22:0xb DW_TAG_member
	.short	773                             # DW_AT_name
	.long	15624                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.short	792                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c2d:0xb DW_TAG_member
	.short	774                             # DW_AT_name
	.long	15682                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.short	848                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c38:0xb DW_TAG_member
	.short	775                             # DW_AT_name
	.long	15889                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.short	904                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c43:0xb DW_TAG_member
	.short	776                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c4e:0xb DW_TAG_member
	.short	777                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.short	968                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c59:0xb DW_TAG_member
	.short	778                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.short	976                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c64:0xb DW_TAG_member
	.short	779                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.short	984                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c6f:0xb DW_TAG_member
	.short	780                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.short	992                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c7a:0xb DW_TAG_member
	.short	781                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.short	1000                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c85:0xb DW_TAG_member
	.short	782                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	1008                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c90:0xb DW_TAG_member
	.short	783                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	1016                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3c9b:0xb DW_TAG_member
	.short	784                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	1024                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3ca6:0xb DW_TAG_member
	.short	785                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	1032                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3cb1:0xb DW_TAG_member
	.short	786                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	108                             # DW_AT_decl_line
	.short	1040                            # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3cbc:0xb DW_TAG_member
	.short	787                             # DW_AT_name
	.long	15947                           # DW_AT_type
	.byte	10                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	1048                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3cc8:0xc DW_TAG_array_type
	.long	15572                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3ccd:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3cd4:0x9 DW_TAG_typedef
	.long	15581                           # DW_AT_type
	.short	753                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3cdd:0x5 DW_TAG_pointer_type
	.long	15586                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3ce2:0x1a DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3ce7:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3cec:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3cf1:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3cf6:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3cfc:0xc DW_TAG_array_type
	.long	15572                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3d01:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3d08:0xc DW_TAG_array_type
	.long	15636                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3d0d:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3d14:0x9 DW_TAG_typedef
	.long	15645                           # DW_AT_type
	.short	762                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3d1d:0x5 DW_TAG_pointer_type
	.long	15650                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3d22:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3d23:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d28:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d2d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d32:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d37:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d3c:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3d42:0xc DW_TAG_array_type
	.long	15694                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3d47:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3d4e:0x9 DW_TAG_typedef
	.long	15703                           # DW_AT_type
	.short	764                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x3d57:0x5 DW_TAG_pointer_type
	.long	15708                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3d5c:0x25 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3d5d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d62:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d67:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d6c:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d71:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d76:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d7b:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3d81:0x5 DW_TAG_pointer_type
	.long	15750                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3d86:0x1f DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3d8b:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d90:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d95:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d9a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3d9f:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3da5:0xc DW_TAG_array_type
	.long	15793                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3daa:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3db1:0x5 DW_TAG_pointer_type
	.long	15798                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3db6:0x10 DW_TAG_subroutine_type
	.long	4041                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3dbb:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3dc0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3dc6:0x5 DW_TAG_pointer_type
	.long	15819                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3dcb:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3dcc:0x5 DW_TAG_formal_parameter
	.long	11797                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3dd1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3dd6:0x5 DW_TAG_formal_parameter
	.long	11797                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3ddb:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3de0:0x5 DW_TAG_formal_parameter
	.long	15846                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3de6:0x5 DW_TAG_pointer_type
	.long	15851                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x3deb:0xc DW_TAG_array_type
	.long	2644                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3df0:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3df7:0x5 DW_TAG_pointer_type
	.long	15868                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3dfc:0x15 DW_TAG_subroutine_type
	.long	3911                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3e01:0x5 DW_TAG_formal_parameter
	.long	15846                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e06:0x5 DW_TAG_formal_parameter
	.long	15846                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e0b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3e11:0xc DW_TAG_array_type
	.long	15901                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x3e16:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3e1d:0x5 DW_TAG_pointer_type
	.long	15906                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3e22:0x29 DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3e27:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e2c:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e31:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e36:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e3b:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e40:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e45:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3e4b:0x5 DW_TAG_pointer_type
	.long	15952                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3e50:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3e51:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e56:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3e5b:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x3e61:0x9 DW_TAG_typedef
	.long	15978                           # DW_AT_type
	.short	812                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
	.byte	69                              # Abbrev [69] 0x3e6a:0xe7 DW_TAG_structure_type
	.short	296                             # DW_AT_byte_size
	.byte	12                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x3e6f:0xa DW_TAG_member
	.short	790                             # DW_AT_name
	.long	16209                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3e79:0xa DW_TAG_member
	.short	791                             # DW_AT_name
	.long	16276                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3e83:0xa DW_TAG_member
	.short	792                             # DW_AT_name
	.long	16332                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3e8d:0xa DW_TAG_member
	.short	793                             # DW_AT_name
	.long	16379                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3e97:0xa DW_TAG_member
	.short	794                             # DW_AT_name
	.long	16433                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ea1:0xa DW_TAG_member
	.short	795                             # DW_AT_name
	.long	16445                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3eab:0xa DW_TAG_member
	.short	796                             # DW_AT_name
	.long	16477                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3eb5:0xa DW_TAG_member
	.short	797                             # DW_AT_name
	.long	16514                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	84                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ebf:0xa DW_TAG_member
	.short	798                             # DW_AT_name
	.long	16445                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ec9:0xa DW_TAG_member
	.short	799                             # DW_AT_name
	.long	16561                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ed3:0xa DW_TAG_member
	.short	800                             # DW_AT_name
	.long	16583                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	200                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3edd:0xa DW_TAG_member
	.short	802                             # DW_AT_name
	.long	16624                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	208                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ee7:0xa DW_TAG_member
	.short	803                             # DW_AT_name
	.long	16641                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	216                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3ef1:0xa DW_TAG_member
	.short	804                             # DW_AT_name
	.long	16641                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	224                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3efb:0xa DW_TAG_member
	.short	805                             # DW_AT_name
	.long	16663                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	232                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3f05:0xa DW_TAG_member
	.short	806                             # DW_AT_name
	.long	16685                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	240                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x3f0f:0xa DW_TAG_member
	.short	807                             # DW_AT_name
	.long	16702                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	248                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3f19:0xb DW_TAG_member
	.short	452                             # DW_AT_name
	.long	12584                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.short	256                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3f24:0xb DW_TAG_member
	.short	808                             # DW_AT_name
	.long	12584                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	105                             # DW_AT_decl_line
	.short	264                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3f2f:0xb DW_TAG_member
	.short	809                             # DW_AT_name
	.long	12584                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.short	272                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3f3a:0xb DW_TAG_member
	.short	810                             # DW_AT_name
	.long	16754                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.short	280                             # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x3f45:0xb DW_TAG_member
	.short	811                             # DW_AT_name
	.long	16776                           # DW_AT_type
	.byte	12                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.short	288                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3f51:0x5 DW_TAG_pointer_type
	.long	16214                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3f56:0x2f DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3f57:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f5c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f61:0x5 DW_TAG_formal_parameter
	.long	16261                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f66:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f6b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f70:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f75:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f7a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3f7f:0x5 DW_TAG_formal_parameter
	.long	16266                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3f85:0x5 DW_TAG_pointer_type
	.long	3931                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x3f8a:0x5 DW_TAG_pointer_type
	.long	16271                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0x3f8f:0x5 DW_TAG_const_type
	.long	12453                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x3f94:0x5 DW_TAG_pointer_type
	.long	16281                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x3f99:0x33 DW_TAG_subroutine_type
	.long	3931                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3f9e:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fa3:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fa8:0x5 DW_TAG_formal_parameter
	.long	16261                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fad:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fb2:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fb7:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fbc:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fc1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fc6:0x5 DW_TAG_formal_parameter
	.long	16266                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3fcc:0x5 DW_TAG_pointer_type
	.long	16337                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x3fd1:0x2a DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x3fd2:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fd7:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fdc:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fe1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3fe6:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3feb:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3ff0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x3ff5:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x3ffb:0xc DW_TAG_array_type
	.long	16391                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x4000:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	10                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4007:0x5 DW_TAG_pointer_type
	.long	16396                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x400c:0x25 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x400d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4012:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4017:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x401c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4021:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4026:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x402b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x4031:0xc DW_TAG_array_type
	.long	16445                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x4036:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x403d:0x5 DW_TAG_pointer_type
	.long	16450                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4042:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4043:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4048:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x404d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4052:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4057:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x405d:0x5 DW_TAG_pointer_type
	.long	16482                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4062:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4063:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4068:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x406d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4072:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4077:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x407c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4082:0x5 DW_TAG_pointer_type
	.long	16519                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4087:0x2a DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4088:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x408d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4092:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4097:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x409c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40a1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40a6:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40ab:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x40b1:0x5 DW_TAG_pointer_type
	.long	16566                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x40b6:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x40b7:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40bc:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40c1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x40c7:0x5 DW_TAG_pointer_type
	.long	16588                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x40cc:0x15 DW_TAG_subroutine_type
	.long	3910                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x40d1:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40d6:0x5 DW_TAG_formal_parameter
	.long	16609                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40db:0x5 DW_TAG_formal_parameter
	.long	16615                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x40e1:0x5 DW_TAG_pointer_type
	.long	16614                           # DW_AT_type
	.byte	76                              # Abbrev [76] 0x40e6:0x1 DW_TAG_const_type
	.byte	50                              # Abbrev [50] 0x40e7:0x9 DW_TAG_typedef
	.long	4057                            # DW_AT_type
	.short	801                             # DW_AT_name
	.byte	15                              # DW_AT_decl_file
	.byte	18                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x40f0:0x5 DW_TAG_pointer_type
	.long	16629                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x40f5:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x40f6:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x40fb:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4101:0x5 DW_TAG_pointer_type
	.long	16646                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4106:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4107:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x410c:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4111:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4117:0x5 DW_TAG_pointer_type
	.long	16668                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x411c:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x411d:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4122:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4127:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x412d:0x5 DW_TAG_pointer_type
	.long	16690                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4132:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4133:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4138:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x413e:0x5 DW_TAG_pointer_type
	.long	16707                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4143:0x2f DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4144:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4149:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x414e:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4153:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4158:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x415d:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4162:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4167:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x416c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4172:0x5 DW_TAG_pointer_type
	.long	16759                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4177:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4178:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x417d:0x5 DW_TAG_formal_parameter
	.long	16771                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4183:0x5 DW_TAG_pointer_type
	.long	12453                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x4188:0x5 DW_TAG_pointer_type
	.long	16781                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x418d:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x418e:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4193:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4198:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x419d:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x41a2:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x41a7:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x41ad:0x9 DW_TAG_typedef
	.long	16822                           # DW_AT_type
	.short	829                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x41b6:0x9b DW_TAG_structure_type
	.byte	120                             # DW_AT_byte_size
	.byte	16                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x41ba:0xa DW_TAG_member
	.short	814                             # DW_AT_name
	.long	16977                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41c4:0xa DW_TAG_member
	.short	815                             # DW_AT_name
	.long	16999                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41ce:0xa DW_TAG_member
	.short	816                             # DW_AT_name
	.long	17016                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41d8:0xa DW_TAG_member
	.short	817                             # DW_AT_name
	.long	16977                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41e2:0xa DW_TAG_member
	.short	818                             # DW_AT_name
	.long	17043                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	99                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41ec:0xa DW_TAG_member
	.short	819                             # DW_AT_name
	.long	16999                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x41f6:0xa DW_TAG_member
	.short	820                             # DW_AT_name
	.long	17016                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4200:0xa DW_TAG_member
	.short	821                             # DW_AT_name
	.long	17043                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x420a:0xa DW_TAG_member
	.short	822                             # DW_AT_name
	.long	16999                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4214:0xa DW_TAG_member
	.short	823                             # DW_AT_name
	.long	16977                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	106                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x421e:0xa DW_TAG_member
	.short	824                             # DW_AT_name
	.long	16999                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4228:0xa DW_TAG_member
	.short	825                             # DW_AT_name
	.long	17060                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4232:0xa DW_TAG_member
	.short	826                             # DW_AT_name
	.long	17099                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x423c:0xa DW_TAG_member
	.short	827                             # DW_AT_name
	.long	17116                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4246:0xa DW_TAG_member
	.short	828                             # DW_AT_name
	.long	17116                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4251:0x5 DW_TAG_pointer_type
	.long	16982                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4256:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4257:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x425c:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4261:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4267:0x5 DW_TAG_pointer_type
	.long	17004                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x426c:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x426d:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4272:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4278:0x5 DW_TAG_pointer_type
	.long	17021                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x427d:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x427e:0x5 DW_TAG_formal_parameter
	.long	17038                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4283:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4288:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x428e:0x5 DW_TAG_pointer_type
	.long	14112                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x4293:0x5 DW_TAG_pointer_type
	.long	17048                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4298:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4299:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x429e:0x5 DW_TAG_formal_parameter
	.long	17038                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x42a4:0x5 DW_TAG_pointer_type
	.long	17065                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x42a9:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x42aa:0x5 DW_TAG_formal_parameter
	.long	17082                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x42af:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x42b4:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x42ba:0x5 DW_TAG_pointer_type
	.long	17087                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x42bf:0xc DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x42c4:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	64                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x42cb:0x5 DW_TAG_pointer_type
	.long	17104                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x42d0:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x42d1:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x42d6:0x5 DW_TAG_formal_parameter
	.long	17082                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x42dc:0x5 DW_TAG_pointer_type
	.long	17121                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x42e1:0x7 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x42e2:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x42e8:0x9 DW_TAG_typedef
	.long	17137                           # DW_AT_type
	.short	837                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	126                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x42f1:0x41 DW_TAG_structure_type
	.byte	48                              # DW_AT_byte_size
	.byte	16                              # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x42f5:0xa DW_TAG_member
	.short	831                             # DW_AT_name
	.long	17202                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x42ff:0xa DW_TAG_member
	.short	832                             # DW_AT_name
	.long	17202                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	120                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4309:0xa DW_TAG_member
	.short	833                             # DW_AT_name
	.long	17219                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	121                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4313:0xa DW_TAG_member
	.short	834                             # DW_AT_name
	.long	17219                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	122                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x431d:0xa DW_TAG_member
	.short	835                             # DW_AT_name
	.long	17245                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	123                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4327:0xa DW_TAG_member
	.short	836                             # DW_AT_name
	.long	17276                           # DW_AT_type
	.byte	16                              # DW_AT_decl_file
	.byte	124                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4332:0x5 DW_TAG_pointer_type
	.long	17207                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4337:0xc DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4338:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x433d:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4343:0x5 DW_TAG_pointer_type
	.long	17224                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x4348:0x15 DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x434d:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4352:0x5 DW_TAG_formal_parameter
	.long	11797                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4357:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x435d:0x5 DW_TAG_pointer_type
	.long	17250                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x4362:0x1a DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4367:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x436c:0x5 DW_TAG_formal_parameter
	.long	11797                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4371:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4376:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x437c:0x5 DW_TAG_pointer_type
	.long	17281                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4381:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4382:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4387:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x438c:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4392:0x9 DW_TAG_typedef
	.long	17307                           # DW_AT_type
	.short	856                             # DW_AT_name
	.byte	17                              # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x439b:0x87 DW_TAG_structure_type
	.byte	176                             # DW_AT_byte_size
	.byte	17                              # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x439f:0xa DW_TAG_member
	.short	839                             # DW_AT_name
	.long	17442                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43a9:0xa DW_TAG_member
	.short	840                             # DW_AT_name
	.long	17442                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43b3:0xa DW_TAG_member
	.short	841                             # DW_AT_name
	.long	17468                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43bd:0xa DW_TAG_member
	.short	842                             # DW_AT_name
	.long	17468                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43c7:0xa DW_TAG_member
	.short	843                             # DW_AT_name
	.long	17494                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43d1:0xa DW_TAG_member
	.short	844                             # DW_AT_name
	.long	17516                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43db:0xa DW_TAG_member
	.short	845                             # DW_AT_name
	.long	17516                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43e5:0xa DW_TAG_member
	.short	846                             # DW_AT_name
	.long	17538                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43ef:0xa DW_TAG_member
	.short	847                             # DW_AT_name
	.long	17570                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x43f9:0xa DW_TAG_member
	.short	848                             # DW_AT_name
	.long	17570                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4403:0xa DW_TAG_member
	.short	849                             # DW_AT_name
	.long	17570                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x440d:0xa DW_TAG_member
	.short	850                             # DW_AT_name
	.long	17586                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4417:0xa DW_TAG_member
	.short	851                             # DW_AT_name
	.long	17598                           # DW_AT_type
	.byte	17                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4422:0x5 DW_TAG_pointer_type
	.long	17447                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x4427:0x15 DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x442c:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4431:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4436:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x443c:0x5 DW_TAG_pointer_type
	.long	17473                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x4441:0x15 DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4446:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x444b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4450:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4456:0x5 DW_TAG_pointer_type
	.long	17499                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x445b:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x445c:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4461:0x5 DW_TAG_formal_parameter
	.long	11848                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4466:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x446c:0x5 DW_TAG_pointer_type
	.long	17521                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4471:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4472:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4477:0x5 DW_TAG_formal_parameter
	.long	11819                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x447c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4482:0x5 DW_TAG_pointer_type
	.long	17543                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x4487:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x4488:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x448d:0x5 DW_TAG_formal_parameter
	.long	17565                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4492:0x5 DW_TAG_formal_parameter
	.long	11935                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4497:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x449d:0x5 DW_TAG_pointer_type
	.long	3981                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x44a2:0x5 DW_TAG_pointer_type
	.long	17575                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x44a7:0xb DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x44ac:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x44b2:0xc DW_TAG_array_type
	.long	17570                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x44b7:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	6                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x44be:0xc DW_TAG_array_type
	.long	17610                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x44c3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x44ca:0x5 DW_TAG_pointer_type
	.long	17615                           # DW_AT_type
	.byte	75                              # Abbrev [75] 0x44cf:0x10 DW_TAG_subroutine_type
	.long	2644                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x44d4:0x5 DW_TAG_formal_parameter
	.long	14202                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x44d9:0x5 DW_TAG_formal_parameter
	.long	17631                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x44df:0x5 DW_TAG_pointer_type
	.long	17636                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x44e4:0x9 DW_TAG_typedef
	.long	17645                           # DW_AT_type
	.short	855                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x44ed:0x23 DW_TAG_structure_type
	.byte	52                              # DW_AT_byte_size
	.byte	4                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x44f1:0xa DW_TAG_member
	.short	852                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x44fb:0xa DW_TAG_member
	.short	853                             # DW_AT_name
	.long	14112                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4505:0xa DW_TAG_member
	.short	854                             # DW_AT_name
	.long	10441                           # DW_AT_type
	.byte	4                               # DW_AT_decl_file
	.byte	62                              # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4510:0x9 DW_TAG_typedef
	.long	17689                           # DW_AT_type
	.short	864                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	170                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x4519:0x37 DW_TAG_structure_type
	.byte	72                              # DW_AT_byte_size
	.byte	14                              # DW_AT_decl_file
	.byte	161                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x451d:0xa DW_TAG_member
	.short	858                             # DW_AT_name
	.long	17744                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	163                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4527:0xa DW_TAG_member
	.short	860                             # DW_AT_name
	.long	17744                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4531:0xa DW_TAG_member
	.short	861                             # DW_AT_name
	.long	17797                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x453b:0xa DW_TAG_member
	.short	863                             # DW_AT_name
	.long	17797                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	166                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4545:0xa DW_TAG_member
	.short	742                             # DW_AT_name
	.long	17845                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	167                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x4550:0xc DW_TAG_array_type
	.long	17756                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x4555:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x455c:0x9 DW_TAG_typedef
	.long	17765                           # DW_AT_type
	.short	859                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x4565:0x5 DW_TAG_pointer_type
	.long	17770                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x456a:0x1b DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x456b:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4570:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4575:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x457a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x457f:0x5 DW_TAG_formal_parameter
	.long	13785                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x4585:0xc DW_TAG_array_type
	.long	17809                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x458a:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x4591:0x9 DW_TAG_typedef
	.long	17818                           # DW_AT_type
	.short	862                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	160                             # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x459a:0x5 DW_TAG_pointer_type
	.long	17823                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x459f:0x16 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x45a0:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45a5:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45aa:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45af:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x45b5:0x5 DW_TAG_pointer_type
	.long	17850                           # DW_AT_type
	.byte	64                              # Abbrev [64] 0x45ba:0x20 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	45                              # Abbrev [45] 0x45bb:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45c0:0x5 DW_TAG_formal_parameter
	.long	17882                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45c5:0x5 DW_TAG_formal_parameter
	.long	17887                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45ca:0x5 DW_TAG_formal_parameter
	.long	17910                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45cf:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x45d4:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x45da:0x5 DW_TAG_pointer_type
	.long	14477                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x45df:0x5 DW_TAG_pointer_type
	.long	17892                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x45e4:0x12 DW_TAG_array_type
	.long	12543                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x45e9:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	5                               # Abbrev [5] 0x45ef:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x45f6:0x5 DW_TAG_pointer_type
	.long	17915                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x45fb:0x12 DW_TAG_array_type
	.long	2120                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x4600:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x4606:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x460d:0x5 DW_TAG_pointer_type
	.long	17938                           # DW_AT_type
	.byte	60                              # Abbrev [60] 0x4612:0xa DW_TAG_typedef
	.long	17948                           # DW_AT_type
	.short	879                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	377                             # DW_AT_decl_line
	.byte	77                              # Abbrev [77] 0x461c:0x6b DW_TAG_structure_type
	.short	879                             # DW_AT_name
	.byte	120                             # DW_AT_byte_size
	.byte	5                               # DW_AT_decl_file
	.short	366                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x4623:0xb DW_TAG_member
	.short	866                             # DW_AT_name
	.long	18055                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	368                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x462e:0xb DW_TAG_member
	.short	298                             # DW_AT_name
	.long	2120                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	369                             # DW_AT_decl_line
	.byte	1                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x4639:0xb DW_TAG_member
	.short	867                             # DW_AT_name
	.long	2120                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	370                             # DW_AT_decl_line
	.byte	2                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x4644:0xb DW_TAG_member
	.short	573                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	371                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x464f:0xb DW_TAG_member
	.short	868                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	372                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x465a:0xb DW_TAG_member
	.short	869                             # DW_AT_name
	.long	12781                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	373                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x4665:0xb DW_TAG_member
	.short	870                             # DW_AT_name
	.long	18060                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	374                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x4670:0xb DW_TAG_member
	.short	877                             # DW_AT_name
	.long	18060                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	375                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x467b:0xb DW_TAG_member
	.short	878                             # DW_AT_name
	.long	18060                           # DW_AT_type
	.byte	5                               # DW_AT_decl_file
	.short	376                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	78                              # Abbrev [78] 0x4687:0x5 DW_TAG_volatile_type
	.long	2120                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x468c:0x9 DW_TAG_typedef
	.long	18069                           # DW_AT_type
	.short	876                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.byte	62                              # Abbrev [62] 0x4695:0x41 DW_TAG_structure_type
	.byte	32                              # DW_AT_byte_size
	.byte	14                              # DW_AT_decl_file
	.byte	149                             # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x4699:0xa DW_TAG_member
	.short	871                             # DW_AT_name
	.long	12776                           # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	151                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x46a3:0xa DW_TAG_member
	.short	872                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x46ad:0xa DW_TAG_member
	.short	873                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	153                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x46b7:0xa DW_TAG_member
	.short	562                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x46c1:0xa DW_TAG_member
	.short	874                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	155                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x46cb:0xa DW_TAG_member
	.short	875                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.byte	156                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x46d6:0xf DW_TAG_subprogram
	.short	881                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	10436                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x46df:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	80                              # Abbrev [80] 0x46e5:0x7f DW_TAG_subprogram
	.ascii	"\333\001"                      # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1141                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	844                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	11                              # Abbrev [11] 0x46f3:0xb DW_TAG_formal_parameter
	.byte	43                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	844                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	41                              # Abbrev [41] 0x46fe:0xa DW_TAG_formal_parameter
	.byte	44                              # DW_AT_location
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	844                             # DW_AT_decl_line
	.long	13709                           # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4708:0xb DW_TAG_formal_parameter
	.byte	45                              # DW_AT_location
	.short	1189                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	844                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x4713:0x34 DW_TAG_lexical_block
	.ascii	"\334\001"                      # DW_AT_low_pc
	.long	.Ltmp722-.Ltmp697               # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x471a:0xb DW_TAG_variable
	.byte	46                              # DW_AT_location
	.short	1190                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	849                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4725:0xb DW_TAG_variable
	.byte	47                              # DW_AT_location
	.short	1191                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	850                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4730:0xb DW_TAG_variable
	.byte	48                              # DW_AT_location
	.short	1192                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	852                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x473b:0xb DW_TAG_variable
	.byte	49                              # DW_AT_location
	.short	1193                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	851                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x4747:0x7 DW_TAG_call_site
	.long	18276                           # DW_AT_call_origin
	.ascii	"\335\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x474e:0x7 DW_TAG_call_site
	.long	18276                           # DW_AT_call_origin
	.ascii	"\336\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4755:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\337\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x475c:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\340\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4764:0x10 DW_TAG_subprogram
	.short	882                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	192                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4769:0x5 DW_TAG_formal_parameter
	.long	17565                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x476e:0x5 DW_TAG_formal_parameter
	.long	17565                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4774:0x16 DW_TAG_subprogram
	.short	883                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	190                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4779:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x477e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4783:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	82                              # Abbrev [82] 0x4788:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x478a:0x15 DW_TAG_subprogram
	.short	884                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x478f:0x5 DW_TAG_formal_parameter
	.long	11577                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4794:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4799:0x5 DW_TAG_formal_parameter
	.long	13709                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x479f:0x1a DW_TAG_subprogram
	.short	885                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x47a4:0x5 DW_TAG_formal_parameter
	.long	11802                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x47a9:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x47ae:0x5 DW_TAG_formal_parameter
	.long	13709                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x47b3:0x5 DW_TAG_formal_parameter
	.long	11577                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x47b9:0x14 DW_TAG_subprogram
	.short	886                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x47c2:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x47c7:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x47cd:0xf DW_TAG_subprogram
	.short	887                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	243                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x47d6:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x47dc:0xb DW_TAG_subprogram
	.short	888                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x47e1:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	83                              # Abbrev [83] 0x47e7:0x5 DW_TAG_subprogram
	.short	889                             # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	81                              # Abbrev [81] 0x47ec:0x10 DW_TAG_subprogram
	.short	890                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	109                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x47f1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x47f6:0x5 DW_TAG_formal_parameter
	.long	18428                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x47fc:0x5 DW_TAG_pointer_type
	.long	15080                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x4801:0x10 DW_TAG_subprogram
	.short	891                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	110                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4806:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x480b:0x5 DW_TAG_formal_parameter
	.long	18428                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4811:0x15 DW_TAG_subprogram
	.short	892                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4816:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x481b:0x5 DW_TAG_formal_parameter
	.long	18470                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4820:0x5 DW_TAG_formal_parameter
	.long	18475                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4826:0x5 DW_TAG_pointer_type
	.long	15113                           # DW_AT_type
	.byte	27                              # Abbrev [27] 0x482b:0x5 DW_TAG_pointer_type
	.long	15151                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x4830:0x10 DW_TAG_subprogram
	.short	893                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	111                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4835:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x483a:0x5 DW_TAG_formal_parameter
	.long	18428                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	84                              # Abbrev [84] 0x4840:0x5 DW_TAG_subprogram
	.short	894                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	193                             # DW_AT_decl_line
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	81                              # Abbrev [81] 0x4845:0x10 DW_TAG_subprogram
	.short	895                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x484a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x484f:0x5 DW_TAG_formal_parameter
	.long	18517                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4855:0x5 DW_TAG_pointer_type
	.long	15187                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x485a:0x10 DW_TAG_subprogram
	.short	896                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	128                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x485f:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4864:0x5 DW_TAG_formal_parameter
	.long	18538                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x486a:0x5 DW_TAG_pointer_type
	.long	16813                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x486f:0x15 DW_TAG_subprogram
	.short	897                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4874:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4879:0x5 DW_TAG_formal_parameter
	.long	18564                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x487e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4884:0x5 DW_TAG_pointer_type
	.long	17128                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x4889:0x10 DW_TAG_subprogram
	.short	898                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x488e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4893:0x5 DW_TAG_formal_parameter
	.long	18585                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4899:0x5 DW_TAG_pointer_type
	.long	15969                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x489e:0x15 DW_TAG_subprogram
	.short	899                             # DW_AT_name
	.byte	17                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x48a3:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x48a8:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x48ad:0x5 DW_TAG_formal_parameter
	.long	18611                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x48b3:0x5 DW_TAG_pointer_type
	.long	17298                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x48b8:0x10 DW_TAG_subprogram
	.short	900                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x48bd:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x48c2:0x5 DW_TAG_formal_parameter
	.long	18632                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x48c8:0x5 DW_TAG_pointer_type
	.long	17680                           # DW_AT_type
	.byte	83                              # Abbrev [83] 0x48cd:0x5 DW_TAG_subprogram
	.short	901                             # DW_AT_name
	.byte	16                              # DW_AT_decl_file
	.byte	129                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	85                              # Abbrev [85] 0x48d2:0x1b DW_TAG_subprogram
	.ascii	"\341\001"                      # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	19367                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x48df:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	19373                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x48e6:0x6 DW_TAG_variable
	.byte	50                              # DW_AT_location
	.long	19383                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x48ed:0x14 DW_TAG_subprogram
	.short	902                             # DW_AT_name
	.byte	20                              # DW_AT_decl_file
	.byte	156                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x48f6:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x48fb:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x4901:0x16 DW_TAG_subprogram
	.short	903                             # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.short	358                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x490b:0x5 DW_TAG_formal_parameter
	.long	18711                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4910:0x5 DW_TAG_formal_parameter
	.long	18716                           # DW_AT_type
	.byte	82                              # Abbrev [82] 0x4915:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	87                              # Abbrev [87] 0x4917:0x5 DW_TAG_restrict_type
	.long	10436                           # DW_AT_type
	.byte	87                              # Abbrev [87] 0x491c:0x5 DW_TAG_restrict_type
	.long	2224                            # DW_AT_type
	.byte	79                              # Abbrev [79] 0x4921:0x14 DW_TAG_subprogram
	.short	904                             # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x492a:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x492f:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x4935:0x14 DW_TAG_subprogram
	.short	905                             # DW_AT_name
	.byte	23                              # DW_AT_decl_file
	.byte	140                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3927                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x493e:0x5 DW_TAG_formal_parameter
	.long	3927                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4943:0x5 DW_TAG_formal_parameter
	.long	3927                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x4949:0x14 DW_TAG_subprogram
	.short	906                             # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4952:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4957:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x495d:0x14 DW_TAG_subprogram
	.short	907                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	201                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	12781                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4966:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x496b:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x4971:0x10 DW_TAG_subprogram
	.short	908                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	269                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x497b:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x4981:0x15 DW_TAG_subprogram
	.short	909                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	273                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x498b:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4990:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x4996:0xf DW_TAG_subprogram
	.short	910                             # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x499f:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x49a5:0x15 DW_TAG_subprogram
	.short	911                             # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.short	258                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	18874                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x49af:0x5 DW_TAG_formal_parameter
	.long	18716                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x49b4:0x5 DW_TAG_formal_parameter
	.long	18716                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x49ba:0x5 DW_TAG_pointer_type
	.long	18879                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x49bf:0x9 DW_TAG_typedef
	.long	18888                           # DW_AT_type
	.short	948                             # DW_AT_name
	.byte	26                              # DW_AT_decl_file
	.byte	7                               # DW_AT_decl_line
	.byte	68                              # Abbrev [68] 0x49c8:0x129 DW_TAG_structure_type
	.short	947                             # DW_AT_name
	.byte	216                             # DW_AT_byte_size
	.byte	25                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	67                              # Abbrev [67] 0x49ce:0xa DW_TAG_member
	.short	912                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x49d8:0xa DW_TAG_member
	.short	913                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x49e2:0xa DW_TAG_member
	.short	914                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x49ec:0xa DW_TAG_member
	.short	915                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x49f6:0xa DW_TAG_member
	.short	916                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a00:0xa DW_TAG_member
	.short	917                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a0a:0xa DW_TAG_member
	.short	918                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a14:0xa DW_TAG_member
	.short	919                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a1e:0xa DW_TAG_member
	.short	920                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a28:0xa DW_TAG_member
	.short	921                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a32:0xa DW_TAG_member
	.short	922                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a3c:0xa DW_TAG_member
	.short	923                             # DW_AT_name
	.long	10436                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a46:0xa DW_TAG_member
	.short	924                             # DW_AT_name
	.long	19185                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a50:0xa DW_TAG_member
	.short	926                             # DW_AT_name
	.long	19193                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a5a:0xa DW_TAG_member
	.short	927                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a64:0xa DW_TAG_member
	.short	928                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a6e:0xa DW_TAG_member
	.short	929                             # DW_AT_name
	.long	19198                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a78:0xa DW_TAG_member
	.short	931                             # DW_AT_name
	.long	4025                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a82:0xa DW_TAG_member
	.short	932                             # DW_AT_name
	.long	3446                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	130                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a8c:0xa DW_TAG_member
	.short	933                             # DW_AT_name
	.long	3338                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	131                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4a96:0xa DW_TAG_member
	.short	934                             # DW_AT_name
	.long	19207                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4aa0:0xa DW_TAG_member
	.short	936                             # DW_AT_name
	.long	19217                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4aaa:0xa DW_TAG_member
	.short	938                             # DW_AT_name
	.long	19226                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4ab4:0xa DW_TAG_member
	.short	940                             # DW_AT_name
	.long	19234                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4abe:0xa DW_TAG_member
	.short	942                             # DW_AT_name
	.long	19193                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4ac8:0xa DW_TAG_member
	.short	943                             # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4ad2:0xa DW_TAG_member
	.short	944                             # DW_AT_name
	.long	16615                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4adc:0xa DW_TAG_member
	.short	945                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	67                              # Abbrev [67] 0x4ae6:0xa DW_TAG_member
	.short	946                             # DW_AT_name
	.long	19242                           # DW_AT_type
	.byte	25                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	196                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4af1:0x5 DW_TAG_pointer_type
	.long	19190                           # DW_AT_type
	.byte	74                              # Abbrev [74] 0x4af6:0x3 DW_TAG_structure_type
	.short	925                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	27                              # Abbrev [27] 0x4af9:0x5 DW_TAG_pointer_type
	.long	18888                           # DW_AT_type
	.byte	50                              # Abbrev [50] 0x4afe:0x9 DW_TAG_typedef
	.long	3923                            # DW_AT_type
	.short	930                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x4b07:0x5 DW_TAG_pointer_type
	.long	19212                           # DW_AT_type
	.byte	88                              # Abbrev [88] 0x4b0c:0x5 DW_TAG_typedef
	.short	935                             # DW_AT_name
	.byte	25                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	50                              # Abbrev [50] 0x4b11:0x9 DW_TAG_typedef
	.long	3923                            # DW_AT_type
	.short	937                             # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	153                             # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x4b1a:0x5 DW_TAG_pointer_type
	.long	19231                           # DW_AT_type
	.byte	74                              # Abbrev [74] 0x4b1f:0x3 DW_TAG_structure_type
	.short	939                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	27                              # Abbrev [27] 0x4b22:0x5 DW_TAG_pointer_type
	.long	19239                           # DW_AT_type
	.byte	74                              # Abbrev [74] 0x4b27:0x3 DW_TAG_structure_type
	.short	941                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	4                               # Abbrev [4] 0x4b2a:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x4b2f:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	20                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x4b36:0xf DW_TAG_subprogram
	.short	949                             # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4b3f:0x5 DW_TAG_formal_parameter
	.long	18874                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	89                              # Abbrev [89] 0x4b45:0x25 DW_TAG_subprogram
	.short	950                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x4b4e:0x9 DW_TAG_formal_parameter
	.short	951                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4b57:0x9 DW_TAG_formal_parameter
	.short	952                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4b60:0x9 DW_TAG_formal_parameter
	.short	953                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	200                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	89                              # Abbrev [89] 0x4b6a:0x25 DW_TAG_subprogram
	.short	954                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3927                            # DW_AT_type
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x4b73:0x9 DW_TAG_formal_parameter
	.short	951                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4b7c:0x9 DW_TAG_formal_parameter
	.short	955                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4b85:0x9 DW_TAG_formal_parameter
	.short	956                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	91                              # Abbrev [91] 0x4b8f:0x9 DW_TAG_subprogram
	.short	957                             # DW_AT_name
	.byte	27                              # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	79                              # Abbrev [79] 0x4b98:0xf DW_TAG_subprogram
	.short	958                             # DW_AT_name
	.byte	23                              # DW_AT_decl_file
	.byte	133                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3911                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4ba1:0x5 DW_TAG_formal_parameter
	.long	3911                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x4ba7:0x1b DW_TAG_subprogram
	.short	959                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	830                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x4bad:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	830                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4bb7:0xa DW_TAG_variable
	.short	755                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	832                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x4bc2:0x6a DW_TAG_subprogram
	.ascii	"\342\001"                      # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1142                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1148                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
	.byte	11                              # Abbrev [11] 0x4bd4:0xb DW_TAG_formal_parameter
	.byte	51                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1148                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	41                              # Abbrev [41] 0x4bdf:0xa DW_TAG_formal_parameter
	.byte	52                              # DW_AT_location
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1148                            # DW_AT_decl_line
	.long	13709                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4be9:0xb DW_TAG_variable
	.byte	53                              # DW_AT_location
	.short	1194                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1150                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4bf4:0xb DW_TAG_variable
	.byte	56                              # DW_AT_location
	.short	1195                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1215                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4bff:0x17 DW_TAG_inlined_subroutine
	.long	19367                           # DW_AT_abstract_origin
	.byte	5                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1213                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x4c09:0x6 DW_TAG_formal_parameter
	.byte	54                              # DW_AT_location
	.long	19373                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x4c0f:0x6 DW_TAG_variable
	.byte	55                              # DW_AT_location
	.long	19383                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x4c16:0x7 DW_TAG_call_site
	.long	18149                           # DW_AT_call_origin
	.ascii	"\343\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4c1d:0x7 DW_TAG_call_site
	.long	4752                            # DW_AT_call_origin
	.ascii	"\344\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4c24:0x7 DW_TAG_call_site
	.long	19500                           # DW_AT_call_origin
	.ascii	"\345\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4c2c:0x10 DW_TAG_subprogram
	.short	961                             # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4c31:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4c36:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x4c3c:0x24 DW_TAG_subprogram
	.ascii	"\346\001"                      # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1143                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1231                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	11                              # Abbrev [11] 0x4c4a:0xb DW_TAG_formal_parameter
	.byte	57                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1231                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	41                              # Abbrev [41] 0x4c55:0xa DW_TAG_formal_parameter
	.byte	58                              # DW_AT_location
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1231                            # DW_AT_decl_line
	.long	13709                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x4c60:0x2f DW_TAG_subprogram
	.short	962                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1237                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x4c66:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1237                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x4c70:0xa DW_TAG_formal_parameter
	.short	307                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1237                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x4c7a:0xa DW_TAG_formal_parameter
	.short	306                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1237                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4c84:0xa DW_TAG_variable
	.short	305                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1239                            # DW_AT_decl_line
	.long	10648                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x4c8f:0x2a DW_TAG_subprogram
	.short	963                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x4c94:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4c9d:0x9 DW_TAG_formal_parameter
	.short	965                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.long	3910                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x4ca6:0x9 DW_TAG_formal_parameter
	.short	966                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x4caf:0x9 DW_TAG_variable
	.short	967                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x4cb9:0x5 DW_TAG_pointer_type
	.long	10713                           # DW_AT_type
	.byte	96                              # Abbrev [96] 0x4cbe:0x15 DW_TAG_subprogram
	.short	968                             # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	262                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3981                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x4cc8:0xa DW_TAG_formal_parameter
	.short	969                             # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	262                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	89                              # Abbrev [89] 0x4cd3:0x13 DW_TAG_subprogram
	.short	970                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x4cdc:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x4ce6:0x1f DW_TAG_subprogram
	.short	971                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1264                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x4cf0:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1264                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x4cfa:0xa DW_TAG_variable
	.short	305                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1266                            # DW_AT_decl_line
	.long	10648                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x4d05:0x21 DW_TAG_subprogram
	.short	972                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1249                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x4d0f:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1249                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x4d19:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x4d1a:0xa DW_TAG_variable
	.short	973                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1253                            # DW_AT_decl_line
	.long	10648                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x4d26:0x232 DW_TAG_subprogram
	.ascii	"\347\001"                      # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1144                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1312                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
	.byte	11                              # Abbrev [11] 0x4d38:0xb DW_TAG_formal_parameter
	.byte	59                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1312                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4d43:0xb DW_TAG_formal_parameter
	.byte	60                              # DW_AT_location
	.short	1196                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1312                            # DW_AT_decl_line
	.long	36061                           # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4d4e:0xb DW_TAG_formal_parameter
	.byte	61                              # DW_AT_location
	.short	1197                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1312                            # DW_AT_decl_line
	.long	4061                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4d59:0xb DW_TAG_variable
	.byte	62                              # DW_AT_location
	.short	1171                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1314                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4d64:0x35 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.byte	6                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1322                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4d6e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19558                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x4d75:0x6 DW_TAG_formal_parameter
	.byte	7                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x4d7b:0x6 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x4d81:0x6 DW_TAG_variable
	.byte	63                              # DW_AT_location
	.long	19588                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x4d87:0x11 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	7                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x4d91:0x6 DW_TAG_formal_parameter
	.byte	67                              # DW_AT_location
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x4d99:0x38 DW_TAG_inlined_subroutine
	.long	19599                           # DW_AT_abstract_origin
	.ascii	"\350\001"                      # DW_AT_low_pc
	.long	.Ltmp813-.Ltmp808               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1317                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x4da8:0x6 DW_TAG_formal_parameter
	.byte	64                              # DW_AT_location
	.long	19604                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4dae:0x6 DW_TAG_formal_parameter
	.byte	65                              # DW_AT_location
	.long	19613                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x4db4:0x6 DW_TAG_variable
	.byte	66                              # DW_AT_location
	.long	19631                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x4dba:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\351\001"                      # DW_AT_low_pc
	.long	.Ltmp812-.Ltmp811               # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4dc8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4dd1:0x49 DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	8                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1324                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4ddb:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19696                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x4de2:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\352\001"                      # DW_AT_low_pc
	.long	.Ltmp822-.Ltmp821               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4df1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4df9:0x20 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	9                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4e03:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x4e0a:0xe DW_TAG_lexical_block
	.ascii	"\353\001"                      # DW_AT_low_pc
	.long	.Ltmp837-.Ltmp830               # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x4e11:0x6 DW_TAG_variable
	.byte	68                              # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4e1a:0x34 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.byte	10                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1328                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x4e24:0x6 DW_TAG_formal_parameter
	.byte	69                              # DW_AT_location
	.long	19558                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4e2a:0x6 DW_TAG_formal_parameter
	.byte	70                              # DW_AT_location
	.long	19568                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4e30:0x6 DW_TAG_formal_parameter
	.byte	71                              # DW_AT_location
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x4e36:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\354\001"                      # DW_AT_low_pc
	.long	.Ltmp841-.Ltmp840               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4e45:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4e4e:0x41 DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	11                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1330                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4e58:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19696                           # DW_AT_abstract_origin
	.byte	99                              # Abbrev [99] 0x4e5f:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\355\001"                      # DW_AT_low_pc
	.long	.Ltmp845-.Ltmp844               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x4e6e:0x20 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	12                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4e78:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x4e7f:0xe DW_TAG_lexical_block
	.ascii	"\356\001"                      # DW_AT_low_pc
	.long	.Ltmp860-.Ltmp853               # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x4e86:0x6 DW_TAG_variable
	.byte	72                              # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4e8f:0x34 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.byte	13                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1334                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x4e99:0x6 DW_TAG_formal_parameter
	.byte	73                              # DW_AT_location
	.long	19558                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4e9f:0x6 DW_TAG_formal_parameter
	.byte	74                              # DW_AT_location
	.long	19568                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x4ea5:0x6 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_location
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x4eab:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\357\001"                      # DW_AT_low_pc
	.long	.Ltmp864-.Ltmp863               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4eba:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x4ec3:0x4e DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.ascii	"\360\001"                      # DW_AT_low_pc
	.long	.Ltmp884-.Ltmp869               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1337                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4ed2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19696                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x4ed9:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\361\001"                      # DW_AT_low_pc
	.long	.Ltmp871-.Ltmp870               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4ee8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x4ef0:0x20 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	14                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x4efa:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x4f01:0xe DW_TAG_lexical_block
	.ascii	"\362\001"                      # DW_AT_low_pc
	.long	.Ltmp884-.Ltmp877               # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x4f08:0x6 DW_TAG_variable
	.byte	76                              # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x4f11:0x7 DW_TAG_call_site
	.long	20312                           # DW_AT_call_origin
	.ascii	"\363\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f18:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\364\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f1f:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\365\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f26:0x7 DW_TAG_call_site
	.long	20328                           # DW_AT_call_origin
	.ascii	"\366\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f2d:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\367\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f34:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\370\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f3b:0x7 DW_TAG_call_site
	.long	20344                           # DW_AT_call_origin
	.ascii	"\371\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f42:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\372\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f49:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\373\001"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x4f50:0x7 DW_TAG_call_site
	.long	20364                           # DW_AT_call_origin
	.ascii	"\374\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4f58:0x10 DW_TAG_subprogram
	.short	974                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4f5d:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4f62:0x5 DW_TAG_formal_parameter
	.long	11577                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x4f68:0x10 DW_TAG_subprogram
	.short	975                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4f6d:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4f72:0x5 DW_TAG_formal_parameter
	.long	11802                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x4f78:0x14 DW_TAG_subprogram
	.short	976                             # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x4f81:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x4f86:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x4f8c:0xb7 DW_TAG_subprogram
	.ascii	"\202\002"                      # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1145                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1273                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4f9e:0xb DW_TAG_formal_parameter
	.byte	80                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1273                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4fa9:0xb DW_TAG_formal_parameter
	.byte	81                              # DW_AT_location
	.short	1198                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1273                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4fb4:0xb DW_TAG_variable
	.byte	82                              # DW_AT_location
	.short	1199                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1275                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4fbf:0xb DW_TAG_variable
	.byte	83                              # DW_AT_location
	.short	1200                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1275                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x4fca:0xb DW_TAG_variable
	.byte	87                              # DW_AT_location
	.short	322                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1295                            # DW_AT_decl_line
	.long	3931                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x4fd5:0x12 DW_TAG_lexical_block
	.ascii	"\203\002"                      # DW_AT_low_pc
	.long	.Ltmp929-.Ltmp910               # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x4fdc:0xa DW_TAG_variable
	.byte	84                              # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1277                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x4fe7:0x12 DW_TAG_lexical_block
	.ascii	"\204\002"                      # DW_AT_low_pc
	.long	.Ltmp946-.Ltmp930               # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x4fee:0xa DW_TAG_variable
	.byte	85                              # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1280                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x4ff9:0xe DW_TAG_lexical_block
	.byte	16                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x4ffb:0xb DW_TAG_variable
	.byte	86                              # DW_AT_location
	.short	1156                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1286                            # DW_AT_decl_line
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5007:0x26 DW_TAG_lexical_block
	.byte	17                              # DW_AT_ranges
	.byte	16                              # Abbrev [16] 0x5009:0xa DW_TAG_variable
	.byte	88                              # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1297                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x5013:0x19 DW_TAG_lexical_block
	.byte	18                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x5015:0xb DW_TAG_variable
	.byte	89                              # DW_AT_location
	.short	1201                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1299                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5020:0xb DW_TAG_variable
	.byte	90                              # DW_AT_location
	.short	1090                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1300                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x502d:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\205\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5034:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\206\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x503b:0x7 DW_TAG_call_site
	.long	20632                           # DW_AT_call_origin
	.ascii	"\207\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	85                              # Abbrev [85] 0x5043:0x55 DW_TAG_subprogram
	.ascii	"\375\001"                      # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	19686                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x5050:0x6 DW_TAG_formal_parameter
	.byte	77                              # DW_AT_location
	.long	19696                           # DW_AT_abstract_origin
	.byte	100                             # Abbrev [100] 0x5056:0x5 DW_TAG_variable
	.long	19706                           # DW_AT_abstract_origin
	.byte	99                              # Abbrev [99] 0x505b:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\376\001"                      # DW_AT_low_pc
	.long	.Ltmp892-.Ltmp891               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x506a:0x1f DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	15                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x5074:0x6 DW_TAG_formal_parameter
	.byte	78                              # DW_AT_location
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x507a:0xe DW_TAG_lexical_block
	.ascii	"\377\001"                      # DW_AT_low_pc
	.long	.Ltmp906-.Ltmp898               # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5081:0x6 DW_TAG_variable
	.byte	79                              # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x5089:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\200\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5090:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\201\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x5098:0x1e DW_TAG_subprogram
	.short	977                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x50a1:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x50a6:0x5 DW_TAG_formal_parameter
	.long	10648                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x50ab:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x50b0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	85                              # Abbrev [85] 0x50b6:0x3f DW_TAG_subprogram
	.ascii	"\210\002"                      # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	21087                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x50c3:0x6 DW_TAG_formal_parameter
	.byte	91                              # DW_AT_location
	.long	21097                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x50c9:0x6 DW_TAG_formal_parameter
	.byte	92                              # DW_AT_location
	.long	21107                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x50cf:0x6 DW_TAG_formal_parameter
	.byte	93                              # DW_AT_location
	.long	21117                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x50d5:0x6 DW_TAG_variable
	.byte	1                               # DW_AT_const_value
	.long	21127                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x50db:0x6 DW_TAG_variable
	.byte	94                              # DW_AT_location
	.long	21137                           # DW_AT_abstract_origin
	.byte	100                             # Abbrev [100] 0x50e1:0x5 DW_TAG_variable
	.long	21147                           # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x50e6:0x7 DW_TAG_call_site
	.long	20725                           # DW_AT_call_origin
	.ascii	"\211\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x50ed:0x7 DW_TAG_call_site
	.long	20740                           # DW_AT_call_origin
	.ascii	"\212\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x50f5:0xf DW_TAG_subprogram
	.short	978                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	198                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	12781                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x50fe:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5104:0x10 DW_TAG_subprogram
	.short	979                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	194                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5109:0x5 DW_TAG_formal_parameter
	.long	12776                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x510e:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	9                               # Abbrev [9] 0x5114:0x1a DW_TAG_subprogram
	.ascii	"\213\002"                      # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1146                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2182                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	11                              # Abbrev [11] 0x5122:0xb DW_TAG_formal_parameter
	.byte	95                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2182                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x512e:0x33 DW_TAG_subprogram
	.short	980                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2031                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x5134:0xa DW_TAG_formal_parameter
	.short	981                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2031                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x513e:0xa DW_TAG_formal_parameter
	.short	982                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2031                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5148:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5149:0xa DW_TAG_variable
	.short	983                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2037                            # DW_AT_decl_line
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x5154:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5155:0xa DW_TAG_variable
	.short	983                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2039                            # DW_AT_decl_line
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x5161:0x2c DW_TAG_subprogram
	.short	984                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1645                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x516b:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1645                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5175:0x17 DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x5176:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1660                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x517f:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5180:0xa DW_TAG_variable
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1661                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x518d:0x11 DW_TAG_subprogram
	.short	986                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1675                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x5193:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1675                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x519e:0x99 DW_TAG_subprogram
	.short	987                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1457                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x51a4:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1457                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x51ae:0xa DW_TAG_formal_parameter
	.short	439                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1457                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x51b8:0xa DW_TAG_variable
	.short	988                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1459                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x51c2:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x51c3:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1467                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x51cd:0x17 DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x51ce:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1479                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x51d7:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x51d8:0xa DW_TAG_variable
	.short	989                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1483                            # DW_AT_decl_line
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x51e4:0x17 DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x51e5:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1491                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x51ee:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x51ef:0xa DW_TAG_variable
	.short	990                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1493                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x51fb:0x17 DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x51fc:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1502                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5205:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5206:0xa DW_TAG_variable
	.short	989                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1506                            # DW_AT_decl_line
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x5212:0x24 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5213:0xa DW_TAG_variable
	.short	991                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1522                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x521d:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x521e:0xa DW_TAG_variable
	.short	992                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1525                            # DW_AT_decl_line
	.long	21047                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x5229:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x522a:0xa DW_TAG_variable
	.short	992                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1555                            # DW_AT_decl_line
	.long	21047                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x5237:0xc DW_TAG_array_type
	.long	12453                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x523c:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x5243:0x1c DW_TAG_subprogram
	.short	993                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1352                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x5249:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1352                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5253:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x5254:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1354                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	102                             # Abbrev [102] 0x525f:0x46 DW_TAG_subprogram
	.short	994                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1365                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x5269:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1365                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x5273:0xa DW_TAG_formal_parameter
	.short	529                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1365                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x527d:0xa DW_TAG_formal_parameter
	.short	992                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1365                            # DW_AT_decl_line
	.long	16266                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5287:0xa DW_TAG_variable
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1368                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5291:0xa DW_TAG_variable
	.short	995                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1369                            # DW_AT_decl_line
	.long	12781                           # DW_AT_type
	.byte	47                              # Abbrev [47] 0x529b:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1367                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x52a5:0x21 DW_TAG_subprogram
	.short	996                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x52aa:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x52b3:0x9 DW_TAG_formal_parameter
	.short	997                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	90                              # Abbrev [90] 0x52bc:0x9 DW_TAG_formal_parameter
	.short	998                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x52c6:0x15 DW_TAG_subprogram
	.short	999                             # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	4041                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x52d0:0xa DW_TAG_formal_parameter
	.short	969                             # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	275                             # DW_AT_decl_line
	.long	4041                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x52db:0x15 DW_TAG_subprogram
	.short	1000                            # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3915                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x52e5:0xa DW_TAG_formal_parameter
	.short	969                             # DW_AT_name
	.byte	28                              # DW_AT_decl_file
	.short	280                             # DW_AT_decl_line
	.long	3915                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x52f0:0x18 DW_TAG_subprogram
	.short	1001                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x52f5:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x52fe:0x9 DW_TAG_formal_parameter
	.short	1002                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.long	3981                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x5308:0x11 DW_TAG_subprogram
	.short	1003                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.short	259                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x530e:0xa DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.short	259                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x5319:0x9c DW_TAG_subprogram
	.short	1004                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1392                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x531f:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1392                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5329:0xa DW_TAG_variable
	.short	1005                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1410                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5333:0xa DW_TAG_variable
	.short	1006                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1411                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x533d:0xa DW_TAG_variable
	.short	1007                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1412                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5347:0xa DW_TAG_variable
	.short	1008                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1413                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5351:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5352:0xa DW_TAG_variable
	.short	529                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1395                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x535d:0x17 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x535e:0xa DW_TAG_variable
	.short	529                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1402                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x5368:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x5369:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1403                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x5374:0x40 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5375:0xa DW_TAG_variable
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1417                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x537f:0x34 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x5380:0xa DW_TAG_variable
	.short	982                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1444                            # DW_AT_decl_line
	.long	3931                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x538a:0xa DW_TAG_variable
	.short	1009                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1446                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x5394:0xa DW_TAG_variable
	.short	981                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1445                            # DW_AT_decl_line
	.long	3931                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x539e:0xa DW_TAG_variable
	.short	1010                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1447                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x53a8:0xa DW_TAG_variable
	.short	1011                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1448                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x53b5:0x25 DW_TAG_subprogram
	.short	1012                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1718                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x53bb:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1718                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x53c5:0xa DW_TAG_formal_parameter
	.short	327                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1718                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x53cf:0xa DW_TAG_formal_parameter
	.short	1013                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1718                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x53da:0x7c3 DW_TAG_subprogram
	.ascii	"\214\002"                      # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1147                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2201                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
	.byte	11                              # Abbrev [11] 0x53ec:0xb DW_TAG_formal_parameter
	.byte	96                              # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2201                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x53f7:0xb DW_TAG_formal_parameter
	.byte	97                              # DW_AT_location
	.short	1196                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2202                            # DW_AT_decl_line
	.long	36061                           # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5402:0xb DW_TAG_formal_parameter
	.byte	98                              # DW_AT_location
	.short	1197                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2202                            # DW_AT_decl_line
	.long	4061                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x540d:0xb DW_TAG_formal_parameter
	.byte	99                              # DW_AT_location
	.short	1202                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2203                            # DW_AT_decl_line
	.long	23546                           # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5418:0xb DW_TAG_formal_parameter
	.byte	100                             # DW_AT_location
	.short	1203                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2204                            # DW_AT_decl_line
	.long	23546                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5423:0xb DW_TAG_variable
	.byte	101                             # DW_AT_location
	.short	1204                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2208                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x542e:0xb DW_TAG_variable
	.byte	102                             # DW_AT_location
	.short	1205                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2206                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5439:0xb DW_TAG_variable
	.byte	103                             # DW_AT_location
	.short	1206                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2206                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5444:0xb DW_TAG_variable
	.byte	104                             # DW_AT_location
	.short	1207                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2206                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x544f:0xb DW_TAG_variable
	.byte	111                             # DW_AT_location
	.short	327                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2207                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x545a:0xb DW_TAG_variable
	.byte	112                             # DW_AT_location
	.short	328                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2207                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5465:0xc DW_TAG_variable
	.ascii	"\214\001"                      # DW_AT_location
	.short	1013                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2207                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x5471:0x3a DW_TAG_inlined_subroutine
	.long	20782                           # DW_AT_abstract_origin
	.ascii	"\215\002"                      # DW_AT_low_pc
	.long	.Ltmp1035-.Ltmp1009             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2216                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5480:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	20788                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x5487:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	20798                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x548e:0xe DW_TAG_lexical_block
	.ascii	"\216\002"                      # DW_AT_low_pc
	.long	.Ltmp1021-.Ltmp1014             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5495:0x6 DW_TAG_variable
	.byte	105                             # DW_AT_location
	.long	20809                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x549c:0xe DW_TAG_lexical_block
	.ascii	"\217\002"                      # DW_AT_low_pc
	.long	.Ltmp1029-.Ltmp1022             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x54a3:0x6 DW_TAG_variable
	.byte	106                             # DW_AT_location
	.long	20821                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x54ab:0x32 DW_TAG_inlined_subroutine
	.long	20833                           # DW_AT_abstract_origin
	.ascii	"\220\002"                      # DW_AT_low_pc
	.long	.Ltmp1076-.Ltmp1036             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2227                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x54ba:0x6 DW_TAG_formal_parameter
	.byte	107                             # DW_AT_location
	.long	20843                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x54c0:0x1c DW_TAG_lexical_block
	.ascii	"\221\002"                      # DW_AT_low_pc
	.long	.Ltmp1062-.Ltmp1038             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x54c7:0x6 DW_TAG_variable
	.byte	108                             # DW_AT_location
	.long	20854                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x54cd:0xe DW_TAG_lexical_block
	.ascii	"\222\002"                      # DW_AT_low_pc
	.long	.Ltmp1057-.Ltmp1040             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x54d4:0x6 DW_TAG_variable
	.byte	109                             # DW_AT_location
	.long	20864                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x54dd:0x2c DW_TAG_lexical_block
	.byte	19                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x54df:0xb DW_TAG_variable
	.byte	110                             # DW_AT_location
	.short	587                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2239                            # DW_AT_decl_line
	.long	12781                           # DW_AT_type
	.byte	17                              # Abbrev [17] 0x54ea:0x1e DW_TAG_lexical_block
	.byte	20                              # DW_AT_ranges
	.byte	47                              # Abbrev [47] 0x54ec:0x9 DW_TAG_variable
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2266                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x54f5:0x12 DW_TAG_lexical_block
	.ascii	"\223\002"                      # DW_AT_low_pc
	.long	.Ltmp1149-.Ltmp1148             # DW_AT_high_pc
	.byte	18                              # Abbrev [18] 0x54fc:0xa DW_TAG_variable
	.short	288                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2269                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	99                              # Abbrev [99] 0x5509:0xf DW_TAG_inlined_subroutine
	.long	20877                           # DW_AT_abstract_origin
	.ascii	"\224\002"                      # DW_AT_low_pc
	.long	.Ltmp1141-.Ltmp1134             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2349                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x5518:0xf7 DW_TAG_inlined_subroutine
	.long	20894                           # DW_AT_abstract_origin
	.byte	21                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2390                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x5522:0x6 DW_TAG_formal_parameter
	.byte	113                             # DW_AT_location
	.long	20910                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x5528:0x9 DW_TAG_lexical_block
	.byte	22                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x552a:0x6 DW_TAG_variable
	.byte	114                             # DW_AT_location
	.long	20931                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5531:0x1d DW_TAG_lexical_block
	.ascii	"\225\002"                      # DW_AT_low_pc
	.long	.Ltmp1192-.Ltmp1184             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5538:0x6 DW_TAG_variable
	.byte	115                             # DW_AT_location
	.long	20942                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x553e:0xf DW_TAG_lexical_block
	.ascii	"\226\002"                      # DW_AT_low_pc
	.long	.Ltmp1192-.Ltmp1190             # DW_AT_high_pc
	.byte	103                             # Abbrev [103] 0x5545:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	85
	.long	20952                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x554e:0x17 DW_TAG_lexical_block
	.ascii	"\227\002"                      # DW_AT_low_pc
	.long	.Ltmp1205-.Ltmp1194             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5555:0x6 DW_TAG_variable
	.byte	116                             # DW_AT_location
	.long	20965                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x555b:0x9 DW_TAG_lexical_block
	.byte	23                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x555d:0x6 DW_TAG_variable
	.byte	117                             # DW_AT_location
	.long	20975                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5565:0x1d DW_TAG_lexical_block
	.ascii	"\230\002"                      # DW_AT_low_pc
	.long	.Ltmp1215-.Ltmp1207             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x556c:0x6 DW_TAG_variable
	.byte	118                             # DW_AT_location
	.long	20988                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x5572:0xf DW_TAG_lexical_block
	.ascii	"\231\002"                      # DW_AT_low_pc
	.long	.Ltmp1215-.Ltmp1213             # DW_AT_high_pc
	.byte	103                             # Abbrev [103] 0x5579:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	85
	.long	20998                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5582:0x14 DW_TAG_inlined_subroutine
	.long	21059                           # DW_AT_abstract_origin
	.byte	24                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1513                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0x558c:0x9 DW_TAG_lexical_block
	.byte	25                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x558e:0x6 DW_TAG_variable
	.byte	119                             # DW_AT_location
	.long	21076                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5596:0x78 DW_TAG_lexical_block
	.byte	26                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x5598:0x6 DW_TAG_variable
	.byte	120                             # DW_AT_location
	.long	21011                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x559e:0x56 DW_TAG_lexical_block
	.byte	27                              # DW_AT_ranges
	.byte	103                             # Abbrev [103] 0x55a0:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\340"
	.long	21022                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x55a9:0x1d DW_TAG_inlined_subroutine
	.long	21087                           # DW_AT_abstract_origin
	.byte	28                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1542                            # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x55b3:0x6 DW_TAG_formal_parameter
	.byte	121                             # DW_AT_location
	.long	21107                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x55b9:0x6 DW_TAG_variable
	.byte	122                             # DW_AT_location
	.long	21127                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x55bf:0x6 DW_TAG_variable
	.byte	123                             # DW_AT_location
	.long	21137                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x55c6:0x2d DW_TAG_inlined_subroutine
	.long	21087                           # DW_AT_abstract_origin
	.ascii	"\232\002"                      # DW_AT_low_pc
	.long	.Ltmp1662-.Ltmp1653             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1534                            # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x55d5:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21107                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x55db:0xa DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.byte	145
	.asciz	"\340"
	.byte	159
	.long	21117                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x55e5:0x6 DW_TAG_variable
	.byte	1                               # DW_AT_const_value
	.long	21127                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x55eb:0x7 DW_TAG_variable
	.ascii	"\233\001"                      # DW_AT_location
	.long	21137                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x55f4:0x11 DW_TAG_lexical_block
	.ascii	"\233\002"                      # DW_AT_low_pc
	.long	.Ltmp1301-.Ltmp1297             # DW_AT_high_pc
	.byte	103                             # Abbrev [103] 0x55fb:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\340"
	.long	21034                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	104                             # Abbrev [104] 0x5605:0x8 DW_TAG_inlined_subroutine
	.long	21087                           # DW_AT_abstract_origin
	.byte	29                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x560f:0x4e DW_TAG_lexical_block
	.ascii	"\234\002"                      # DW_AT_low_pc
	.long	.Ltmp1339-.Ltmp1326             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5616:0xa DW_TAG_variable
	.byte	124                             # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2396                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x5620:0x3c DW_TAG_inlined_subroutine
	.long	19599                           # DW_AT_abstract_origin
	.ascii	"\235\002"                      # DW_AT_low_pc
	.long	.Ltmp1335-.Ltmp1330             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2398                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x562f:0xa DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.byte	113
	.ascii	"\200\016"
	.byte	159
	.long	19604                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x5639:0x6 DW_TAG_formal_parameter
	.byte	125                             # DW_AT_location
	.long	19613                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x563f:0x6 DW_TAG_variable
	.byte	126                             # DW_AT_location
	.long	19631                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x5645:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\236\002"                      # DW_AT_low_pc
	.long	.Ltmp1334-.Ltmp1333             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5653:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x565d:0x34 DW_TAG_inlined_subroutine
	.long	19599                           # DW_AT_abstract_origin
	.ascii	"\237\002"                      # DW_AT_low_pc
	.long	.Ltmp1368-.Ltmp1363             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2404                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x566c:0x7 DW_TAG_formal_parameter
	.ascii	"\204\001"                      # DW_AT_location
	.long	19613                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x5673:0x7 DW_TAG_variable
	.ascii	"\205\001"                      # DW_AT_location
	.long	19631                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x567a:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\240\002"                      # DW_AT_low_pc
	.long	.Ltmp1367-.Ltmp1366             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	85                              # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5688:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5691:0x121 DW_TAG_lexical_block
	.byte	30                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x5693:0xb DW_TAG_variable
	.byte	127                             # DW_AT_location
	.short	1208                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2410                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x569e:0x2b DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\241\002"                      # DW_AT_low_pc
	.long	.Ltmp1348-.Ltmp1344             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2421                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x56ad:0x6 DW_TAG_formal_parameter
	.byte	9                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x56b3:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	99                              # Abbrev [99] 0x56b9:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\242\002"                      # DW_AT_low_pc
	.long	.Ltmp1347-.Ltmp1346             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x56c9:0x4a DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\243\002"                      # DW_AT_low_pc
	.long	.Ltmp1355-.Ltmp1348             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2422                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x56d8:0x6 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_const_value
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x56de:0x7 DW_TAG_formal_parameter
	.ascii	"\200\001"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x56e5:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\244\002"                      # DW_AT_low_pc
	.long	.Ltmp1354-.Ltmp1353             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x56f3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x56fa:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\244\002"                      # DW_AT_low_pc
	.long	.Ltmp1354-.Ltmp1353             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5709:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5713:0x6f DW_TAG_inlined_subroutine
	.long	21256                           # DW_AT_abstract_origin
	.byte	31                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2423                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	22                              # Abbrev [22] 0x571d:0x2d DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\245\002"                      # DW_AT_low_pc
	.long	.Ltmp1361-.Ltmp1355             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.short	261                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x572c:0x7 DW_TAG_formal_parameter
	.ascii	"\201\001"                      # DW_AT_location
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x5733:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\246\002"                      # DW_AT_low_pc
	.long	.Ltmp1360-.Ltmp1359             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5741:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x574a:0x37 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	32                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.short	262                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x5754:0x7 DW_TAG_formal_parameter
	.ascii	"\202\001"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x575b:0x7 DW_TAG_formal_parameter
	.ascii	"\203\001"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x5762:0x1e DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\247\002"                      # DW_AT_low_pc
	.long	.Ltmp1380-.Ltmp1379             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x5770:0xf DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\247\002"                      # DW_AT_low_pc
	.long	.Ltmp1380-.Ltmp1379             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5782:0x2f DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	33                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2424                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	105                             # Abbrev [105] 0x578c:0xa DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	34                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x5796:0x1a DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	35                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x57a0:0xf DW_TAG_lexical_block
	.ascii	"\250\002"                      # DW_AT_low_pc
	.long	.Ltmp1400-.Ltmp1393             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x57a7:0x7 DW_TAG_variable
	.ascii	"\206\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x57b2:0x20 DW_TAG_lexical_block
	.ascii	"\251\002"                      # DW_AT_low_pc
	.long	.Ltmp1423-.Ltmp1410             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x57b9:0xc DW_TAG_variable
	.ascii	"\207\001"                      # DW_AT_location
	.short	1209                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2444                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x57c5:0xc DW_TAG_variable
	.ascii	"\210\001"                      # DW_AT_location
	.short	1210                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2445                            # DW_AT_decl_line
	.long	3911                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x57d2:0x2e DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\252\002"                      # DW_AT_low_pc
	.long	.Ltmp1433-.Ltmp1427             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2468                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x57e1:0x6 DW_TAG_formal_parameter
	.byte	7                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x57e7:0x6 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x57ed:0x12 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	36                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x57f7:0x7 DW_TAG_formal_parameter
	.ascii	"\211\001"                      # DW_AT_location
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5800:0x3c DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	37                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2470                            # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	22                              # Abbrev [22] 0x580a:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\253\002"                      # DW_AT_low_pc
	.long	.Ltmp1436-.Ltmp1435             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5819:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5821:0x1a DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	38                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x582b:0xf DW_TAG_lexical_block
	.ascii	"\254\002"                      # DW_AT_low_pc
	.long	.Ltmp1525-.Ltmp1517             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5832:0x7 DW_TAG_variable
	.ascii	"\217\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x583c:0x33 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\255\002"                      # DW_AT_low_pc
	.long	.Ltmp1532-.Ltmp1529             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2475                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x584b:0x6 DW_TAG_formal_parameter
	.byte	8                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5851:0x6 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x5857:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\256\002"                      # DW_AT_low_pc
	.long	.Ltmp1531-.Ltmp1530             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5866:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x586f:0x47 DW_TAG_lexical_block
	.ascii	"\257\002"                      # DW_AT_low_pc
	.long	.Ltmp1459-.Ltmp1450             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5876:0xc DW_TAG_variable
	.ascii	"\212\001"                      # DW_AT_location
	.short	1211                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2497                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x5882:0x33 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\260\002"                      # DW_AT_low_pc
	.long	.Ltmp1455-.Ltmp1451             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2498                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x5891:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5897:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x589d:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\261\002"                      # DW_AT_low_pc
	.long	.Ltmp1454-.Ltmp1453             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x58ac:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x58b6:0x3a DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\262\002"                      # DW_AT_low_pc
	.long	.Ltmp1667-.Ltmp1664             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2487                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x58c5:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x58cb:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	103                             # Abbrev [103] 0x58d1:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	80
	.long	19588                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x58d8:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\263\002"                      # DW_AT_low_pc
	.long	.Ltmp1666-.Ltmp1665             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x58e7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x58f0:0x33 DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\264\002"                      # DW_AT_low_pc
	.long	.Ltmp1466-.Ltmp1462             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2508                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	48                              # Abbrev [48] 0x58ff:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5905:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x590b:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\265\002"                      # DW_AT_low_pc
	.long	.Ltmp1465-.Ltmp1464             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x591a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5923:0x34 DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	39                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2510                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x592d:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\266\002"                      # DW_AT_low_pc
	.long	.Ltmp1469-.Ltmp1468             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x593c:0x1a DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	40                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x5946:0xf DW_TAG_lexical_block
	.ascii	"\267\002"                      # DW_AT_low_pc
	.long	.Ltmp1484-.Ltmp1477             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x594d:0x7 DW_TAG_variable
	.ascii	"\213\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5957:0x7d DW_TAG_inlined_subroutine
	.long	21273                           # DW_AT_abstract_origin
	.byte	41                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2536                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	21                              # Abbrev [21] 0x5961:0x7 DW_TAG_variable
	.ascii	"\222\001"                      # DW_AT_location
	.long	21289                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x5968:0x7 DW_TAG_variable
	.ascii	"\223\001"                      # DW_AT_location
	.long	21299                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x596f:0x7 DW_TAG_variable
	.ascii	"\224\001"                      # DW_AT_location
	.long	21309                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x5976:0x7 DW_TAG_variable
	.ascii	"\225\001"                      # DW_AT_location
	.long	21319                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x597d:0xf DW_TAG_lexical_block
	.ascii	"\270\002"                      # DW_AT_low_pc
	.long	.Ltmp1510-.Ltmp1504             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5984:0x7 DW_TAG_variable
	.ascii	"\215\001"                      # DW_AT_location
	.long	21330                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x598c:0x14 DW_TAG_lexical_block
	.byte	42                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x598e:0x7 DW_TAG_variable
	.ascii	"\216\001"                      # DW_AT_location
	.long	21342                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x5995:0xa DW_TAG_lexical_block
	.byte	43                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x5997:0x7 DW_TAG_variable
	.ascii	"\220\001"                      # DW_AT_location
	.long	21353                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x59a0:0x33 DW_TAG_lexical_block
	.ascii	"\271\002"                      # DW_AT_low_pc
	.long	.Ltmp1634-.Ltmp1598             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x59a7:0x7 DW_TAG_variable
	.ascii	"\226\001"                      # DW_AT_location
	.long	21365                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x59ae:0x24 DW_TAG_lexical_block
	.ascii	"\272\002"                      # DW_AT_low_pc
	.long	.Ltmp1632-.Ltmp1624             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x59b5:0x7 DW_TAG_variable
	.ascii	"\227\001"                      # DW_AT_location
	.long	21376                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x59bc:0x7 DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.long	21386                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x59c3:0x7 DW_TAG_variable
	.ascii	"\231\001"                      # DW_AT_location
	.long	21396                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x59ca:0x7 DW_TAG_variable
	.ascii	"\232\001"                      # DW_AT_location
	.long	21406                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x59d4:0x12 DW_TAG_inlined_subroutine
	.long	21429                           # DW_AT_abstract_origin
	.byte	44                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2539                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x59de:0x7 DW_TAG_formal_parameter
	.ascii	"\221\001"                      # DW_AT_location
	.long	21455                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x59e6:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\273\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x59ed:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\274\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x59f4:0x7 DW_TAG_call_site
	.long	23469                           # DW_AT_call_origin
	.ascii	"\220\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x59fb:0x7 DW_TAG_call_site
	.long	23490                           # DW_AT_call_origin
	.ascii	"\275\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a02:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\276\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a09:0x7 DW_TAG_call_site
	.long	23505                           # DW_AT_call_origin
	.ascii	"\277\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a10:0x7 DW_TAG_call_site
	.long	23490                           # DW_AT_call_origin
	.ascii	"\300\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a17:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\301\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a1e:0x7 DW_TAG_call_site
	.long	18781                           # DW_AT_call_origin
	.ascii	"\302\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a25:0x7 DW_TAG_call_site
	.long	18781                           # DW_AT_call_origin
	.ascii	"\303\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a2c:0x7 DW_TAG_call_site
	.long	23521                           # DW_AT_call_origin
	.ascii	"\304\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a33:0x7 DW_TAG_call_site
	.long	23735                           # DW_AT_call_origin
	.ascii	"\305\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a3a:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\306\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a41:0x7 DW_TAG_call_site
	.long	23751                           # DW_AT_call_origin
	.ascii	"\307\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a48:0x7 DW_TAG_call_site
	.long	23490                           # DW_AT_call_origin
	.ascii	"\310\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a4f:0x7 DW_TAG_call_site
	.long	19394                           # DW_AT_call_origin
	.ascii	"\311\002"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x5a56:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	82
	.ascii	"\312\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a5b:0x7 DW_TAG_call_site
	.long	23762                           # DW_AT_call_origin
	.ascii	"\313\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a62:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\314\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a69:0x7 DW_TAG_call_site
	.long	23777                           # DW_AT_call_origin
	.ascii	"\315\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a70:0x7 DW_TAG_call_site
	.long	23777                           # DW_AT_call_origin
	.ascii	"\316\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a77:0x7 DW_TAG_call_site
	.long	23881                           # DW_AT_call_origin
	.ascii	"\317\002"                      # DW_AT_call_return_pc
	.byte	106                             # Abbrev [106] 0x5a7e:0x7 DW_TAG_call_site
	.long	23896                           # DW_AT_call_origin
                                        # DW_AT_call_tail_call
	.ascii	"\320\002"                      # DW_AT_call_pc
	.byte	24                              # Abbrev [24] 0x5a85:0x7 DW_TAG_call_site
	.long	25400                           # DW_AT_call_origin
	.ascii	"\321\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a8c:0x7 DW_TAG_call_site
	.long	25416                           # DW_AT_call_origin
	.ascii	"\322\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a93:0x7 DW_TAG_call_site
	.long	25432                           # DW_AT_call_origin
	.ascii	"\323\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5a9a:0x7 DW_TAG_call_site
	.long	25452                           # DW_AT_call_origin
	.ascii	"\324\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5aa1:0x7 DW_TAG_call_site
	.long	25468                           # DW_AT_call_origin
	.ascii	"\325\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5aa8:0x7 DW_TAG_call_site
	.long	25484                           # DW_AT_call_origin
	.ascii	"\326\002"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x5aaf:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\327\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5ab4:0x7 DW_TAG_call_site
	.long	20725                           # DW_AT_call_origin
	.ascii	"\330\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5abb:0x7 DW_TAG_call_site
	.long	20740                           # DW_AT_call_origin
	.ascii	"\331\002"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x5ac2:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\332\002"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x5ac7:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\333\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5acc:0x7 DW_TAG_call_site
	.long	20725                           # DW_AT_call_origin
	.ascii	"\334\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5ad3:0x7 DW_TAG_call_site
	.long	20740                           # DW_AT_call_origin
	.ascii	"\335\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5ada:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\336\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5ae1:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\337\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5ae8:0x7 DW_TAG_call_site
	.long	20312                           # DW_AT_call_origin
	.ascii	"\340\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5aef:0x7 DW_TAG_call_site
	.long	25500                           # DW_AT_call_origin
	.ascii	"\341\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5af6:0x7 DW_TAG_call_site
	.long	20547                           # DW_AT_call_origin
	.ascii	"\342\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5afd:0x7 DW_TAG_call_site
	.long	25521                           # DW_AT_call_origin
	.ascii	"\343\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b04:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\344\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b0b:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\345\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b12:0x7 DW_TAG_call_site
	.long	25537                           # DW_AT_call_origin
	.ascii	"\346\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b19:0x7 DW_TAG_call_site
	.long	25558                           # DW_AT_call_origin
	.ascii	"\347\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b20:0x7 DW_TAG_call_site
	.long	25573                           # DW_AT_call_origin
	.ascii	"\350\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b27:0x7 DW_TAG_call_site
	.long	25588                           # DW_AT_call_origin
	.ascii	"\351\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b2e:0x7 DW_TAG_call_site
	.long	25619                           # DW_AT_call_origin
	.ascii	"\270\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b35:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\352\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b3c:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\353\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b43:0x7 DW_TAG_call_site
	.long	20328                           # DW_AT_call_origin
	.ascii	"\354\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b4a:0x7 DW_TAG_call_site
	.long	20547                           # DW_AT_call_origin
	.ascii	"\355\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b51:0x7 DW_TAG_call_site
	.long	25631                           # DW_AT_call_origin
	.ascii	"\356\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b58:0x7 DW_TAG_call_site
	.long	25631                           # DW_AT_call_origin
	.ascii	"\357\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b5f:0x7 DW_TAG_call_site
	.long	25800                           # DW_AT_call_origin
	.ascii	"\360\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b66:0x7 DW_TAG_call_site
	.long	25812                           # DW_AT_call_origin
	.ascii	"\361\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b6d:0x7 DW_TAG_call_site
	.long	23896                           # DW_AT_call_origin
	.ascii	"\362\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b74:0x7 DW_TAG_call_site
	.long	26139                           # DW_AT_call_origin
	.ascii	"\363\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b7b:0x7 DW_TAG_call_site
	.long	26185                           # DW_AT_call_origin
	.ascii	"\364\002"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x5b82:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	93
	.ascii	"\365\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b87:0x7 DW_TAG_call_site
	.long	20725                           # DW_AT_call_origin
	.ascii	"\366\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b8e:0x7 DW_TAG_call_site
	.long	20344                           # DW_AT_call_origin
	.ascii	"\367\002"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5b95:0x7 DW_TAG_call_site
	.long	20547                           # DW_AT_call_origin
	.ascii	"\370\002"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5b9d:0x10 DW_TAG_subprogram
	.short	1014                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	196                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5ba2:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5ba7:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5bad:0x15 DW_TAG_subprogram
	.short	1015                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5bb2:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5bb7:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5bbc:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x5bc2:0xf DW_TAG_subprogram
	.short	1016                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	195                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	12781                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5bcb:0x5 DW_TAG_formal_parameter
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5bd1:0x10 DW_TAG_subprogram
	.short	1017                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	192                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5bd6:0x5 DW_TAG_formal_parameter
	.long	12776                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5bdb:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x5be1:0x19 DW_TAG_subprogram
	.short	1018                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5bea:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5bef:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5bf4:0x5 DW_TAG_formal_parameter
	.long	23546                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x5bfa:0x5 DW_TAG_pointer_type
	.long	23551                           # DW_AT_type
	.byte	60                              # Abbrev [60] 0x5bff:0xa DW_TAG_typedef
	.long	23561                           # DW_AT_type
	.short	1023                            # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	549                             # DW_AT_decl_line
	.byte	54                              # Abbrev [54] 0x5c09:0x73 DW_TAG_structure_type
	.byte	136                             # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	513                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x5c0e:0xb DW_TAG_member
	.short	307                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	521                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c19:0xb DW_TAG_member
	.short	487                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	523                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c24:0xb DW_TAG_member
	.short	498                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	526                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c2f:0xb DW_TAG_member
	.short	499                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	529                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c3a:0xb DW_TAG_member
	.short	488                             # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	531                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c45:0xb DW_TAG_member
	.short	1019                            # DW_AT_name
	.long	13691                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	534                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	52                              # Abbrev [52] 0x5c50:0xa DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	13709                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	541                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c5a:0xb DW_TAG_member
	.short	1020                            # DW_AT_name
	.long	23676                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	543                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c65:0xb DW_TAG_member
	.short	550                             # DW_AT_name
	.long	13968                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	545                             # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c70:0xb DW_TAG_member
	.short	1022                            # DW_AT_name
	.long	3910                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	548                             # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	60                              # Abbrev [60] 0x5c7c:0xa DW_TAG_typedef
	.long	23686                           # DW_AT_type
	.short	1021                            # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	511                             # DW_AT_decl_line
	.byte	54                              # Abbrev [54] 0x5c86:0x31 DW_TAG_structure_type
	.byte	56                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	505                             # DW_AT_decl_line
	.byte	52                              # Abbrev [52] 0x5c8b:0xa DW_TAG_member
	.byte	170                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5c95:0xb DW_TAG_member
	.short	506                             # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	508                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5ca0:0xb DW_TAG_member
	.short	507                             # DW_AT_name
	.long	15851                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	509                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x5cab:0xb DW_TAG_member
	.short	512                             # DW_AT_name
	.long	13738                           # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	510                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5cb7:0x10 DW_TAG_subprogram
	.short	1024                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	180                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5cbc:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x5cc1:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x5cc7:0xb DW_TAG_subprogram
	.short	1025                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5ccc:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x5cd2:0xf DW_TAG_subprogram
	.short	1026                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	193                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	12781                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5cdb:0x5 DW_TAG_formal_parameter
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	80                              # Abbrev [80] 0x5ce1:0x68 DW_TAG_subprogram
	.ascii	"\276\003"                      # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1149                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1683                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	11                              # Abbrev [11] 0x5cef:0xc DW_TAG_formal_parameter
	.ascii	"\323\001"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1683                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5cfb:0xc DW_TAG_variable
	.ascii	"\324\001"                      # DW_AT_location
	.short	1220                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1686                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5d07:0xc DW_TAG_variable
	.ascii	"\326\001"                      # DW_AT_location
	.short	528                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1685                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5d13:0x13 DW_TAG_lexical_block
	.ascii	"\277\003"                      # DW_AT_low_pc
	.long	.Ltmp2077-.Ltmp2071             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5d1a:0xb DW_TAG_variable
	.ascii	"\325\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1691                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5d26:0x14 DW_TAG_lexical_block
	.ascii	"\300\003"                      # DW_AT_low_pc
	.long	.Ltmp2103-.Ltmp2097             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5d2d:0xc DW_TAG_variable
	.ascii	"\327\001"                      # DW_AT_location
	.short	990                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1705                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x5d3a:0x7 DW_TAG_call_site
	.long	23762                           # DW_AT_call_origin
	.ascii	"\301\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x5d41:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\302\003"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x5d49:0xf DW_TAG_subprogram
	.short	1027                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x5d52:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x5d58:0x5e0 DW_TAG_subprogram
	.ascii	"\371\002"                      # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12     # DW_AT_high_pc
	.byte	5                               # DW_AT_frame_base
	.byte	156
	.byte	17
	.ascii	"\300|"
	.byte	34
                                        # DW_AT_call_all_calls
	.short	1148                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2565                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5d6e:0xc DW_TAG_formal_parameter
	.ascii	"\234\001"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2565                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5d7a:0xc DW_TAG_formal_parameter
	.ascii	"\235\001"                      # DW_AT_location
	.short	1206                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2565                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5d86:0xc DW_TAG_formal_parameter
	.ascii	"\236\001"                      # DW_AT_location
	.short	1196                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2566                            # DW_AT_decl_line
	.long	36061                           # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5d92:0xc DW_TAG_formal_parameter
	.ascii	"\237\001"                      # DW_AT_location
	.short	1197                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2566                            # DW_AT_decl_line
	.long	4061                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x5d9e:0xc DW_TAG_formal_parameter
	.ascii	"\240\001"                      # DW_AT_location
	.short	1203                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2567                            # DW_AT_decl_line
	.long	23546                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x5daa:0xd DW_TAG_variable
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	48
	.short	1212                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2569                            # DW_AT_decl_line
	.long	36066                           # DW_AT_type
	.byte	12                              # Abbrev [12] 0x5db7:0xd DW_TAG_variable
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	12
	.short	1214                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2650                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5dc4:0xc DW_TAG_variable
	.ascii	"\245\001"                      # DW_AT_location
	.short	1171                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2606                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5dd0:0x13 DW_TAG_lexical_block
	.ascii	"\372\002"                      # DW_AT_low_pc
	.long	.Ltmp1681-.Ltmp1680             # DW_AT_high_pc
	.byte	107                             # Abbrev [107] 0x5dd7:0xb DW_TAG_variable
	.byte	0                               # DW_AT_const_value
	.short	1195                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2573                            # DW_AT_decl_line
	.long	3910                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5de3:0x99 DW_TAG_lexical_block
	.byte	45                              # DW_AT_ranges
	.byte	12                              # Abbrev [12] 0x5de5:0xe DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\001"
	.short	1213                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2601                            # DW_AT_decl_line
	.long	10653                           # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5df3:0xc DW_TAG_variable
	.ascii	"\244\001"                      # DW_AT_location
	.short	991                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2596                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x5dff:0x3a DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\373\002"                      # DW_AT_low_pc
	.long	.Ltmp1693-.Ltmp1689             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2591                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5e0e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19558                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5e15:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5e1b:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x5e21:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\374\002"                      # DW_AT_low_pc
	.long	.Ltmp1692-.Ltmp1691             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5e30:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x5e39:0x42 DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.byte	46                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2593                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x5e43:0x7 DW_TAG_formal_parameter
	.ascii	"\241\001"                      # DW_AT_location
	.long	19696                           # DW_AT_abstract_origin
	.byte	99                              # Abbrev [99] 0x5e4a:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\375\002"                      # DW_AT_low_pc
	.long	.Ltmp1696-.Ltmp1695             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x5e59:0x21 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	47                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x5e63:0x7 DW_TAG_formal_parameter
	.ascii	"\242\001"                      # DW_AT_location
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x5e6a:0xf DW_TAG_lexical_block
	.ascii	"\376\002"                      # DW_AT_low_pc
	.long	.Ltmp1711-.Ltmp1704             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5e71:0x7 DW_TAG_variable
	.ascii	"\243\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5e7c:0xf DW_TAG_lexical_block
	.byte	48                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x5e7e:0xc DW_TAG_variable
	.ascii	"\246\001"                      # DW_AT_location
	.short	1215                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2616                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5e8b:0x13 DW_TAG_lexical_block
	.ascii	"\377\002"                      # DW_AT_low_pc
	.long	.Ltmp1748-.Ltmp1745             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5e92:0xb DW_TAG_variable
	.ascii	"\247\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2639                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x5e9e:0xc8 DW_TAG_lexical_block
	.byte	49                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x5ea0:0xc DW_TAG_variable
	.ascii	"\250\001"                      # DW_AT_location
	.short	1216                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2673                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5eac:0xc DW_TAG_variable
	.ascii	"\251\001"                      # DW_AT_location
	.short	1204                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2658                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5eb8:0xc DW_TAG_variable
	.ascii	"\254\001"                      # DW_AT_location
	.short	983                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2658                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5ec4:0x20 DW_TAG_lexical_block
	.ascii	"\200\003"                      # DW_AT_low_pc
	.long	.Ltmp1774-.Ltmp1770             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5ecb:0xc DW_TAG_variable
	.ascii	"\252\001"                      # DW_AT_location
	.short	1217                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2662                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x5ed7:0xc DW_TAG_variable
	.ascii	"\253\001"                      # DW_AT_location
	.short	1218                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2663                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x5ee4:0x3a DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.ascii	"\201\003"                      # DW_AT_low_pc
	.long	.Ltmp1780-.Ltmp1775             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2669                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5ef3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19558                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5efa:0x6 DW_TAG_formal_parameter
	.byte	12                              # DW_AT_const_value
	.long	19568                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x5f00:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	19578                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x5f06:0x17 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\202\003"                      # DW_AT_low_pc
	.long	.Ltmp1779-.Ltmp1778             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5f15:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	86
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x5f1e:0x47 DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.ascii	"\203\003"                      # DW_AT_low_pc
	.long	.Ltmp1796-.Ltmp1781             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2671                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5f2d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19696                           # DW_AT_abstract_origin
	.byte	99                              # Abbrev [99] 0x5f34:0xf DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\204\003"                      # DW_AT_low_pc
	.long	.Ltmp1783-.Ltmp1782             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	19                              # Abbrev [19] 0x5f43:0x21 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	50                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5f4d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x5f54:0xf DW_TAG_lexical_block
	.ascii	"\205\003"                      # DW_AT_low_pc
	.long	.Ltmp1796-.Ltmp1789             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x5f5b:0x7 DW_TAG_variable
	.ascii	"\255\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x5f66:0x1e DW_TAG_inlined_subroutine
	.long	33841                           # DW_AT_abstract_origin
	.ascii	"\206\003"                      # DW_AT_low_pc
	.long	.Ltmp1804-.Ltmp1800             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2687                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x5f75:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	33847                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x5f7c:0x7 DW_TAG_formal_parameter
	.ascii	"\256\001"                      # DW_AT_location
	.long	33857                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5f84:0x13 DW_TAG_lexical_block
	.ascii	"\207\003"                      # DW_AT_low_pc
	.long	.Ltmp1818-.Ltmp1805             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5f8b:0xb DW_TAG_variable
	.ascii	"\257\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2694                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5f97:0x13 DW_TAG_lexical_block
	.ascii	"\210\003"                      # DW_AT_low_pc
	.long	.Ltmp1829-.Ltmp1818             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5f9e:0xb DW_TAG_variable
	.ascii	"\260\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2696                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5faa:0x13 DW_TAG_lexical_block
	.ascii	"\211\003"                      # DW_AT_low_pc
	.long	.Ltmp1830-.Ltmp1829             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5fb1:0xb DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2698                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5fbd:0x13 DW_TAG_lexical_block
	.ascii	"\212\003"                      # DW_AT_low_pc
	.long	.Ltmp1833-.Ltmp1830             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5fc4:0xb DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2700                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5fd0:0x27 DW_TAG_lexical_block
	.ascii	"\213\003"                      # DW_AT_low_pc
	.long	.Ltmp1859-.Ltmp1833             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x5fd7:0xb DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2702                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x5fe2:0x14 DW_TAG_lexical_block
	.ascii	"\213\003"                      # DW_AT_low_pc
	.long	.Ltmp1859-.Ltmp1833             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5fe9:0xc DW_TAG_variable
	.ascii	"\264\001"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2703                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x5ff7:0x27 DW_TAG_lexical_block
	.ascii	"\214\003"                      # DW_AT_low_pc
	.long	.Ltmp1902-.Ltmp1861             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x5ffe:0xc DW_TAG_variable
	.ascii	"\265\001"                      # DW_AT_location
	.short	1081                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2706                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x600a:0x13 DW_TAG_lexical_block
	.ascii	"\214\003"                      # DW_AT_low_pc
	.long	.Ltmp1902-.Ltmp1861             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6011:0xb DW_TAG_variable
	.ascii	"\266\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2707                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x601e:0x26 DW_TAG_lexical_block
	.ascii	"\215\003"                      # DW_AT_low_pc
	.long	.Ltmp1914-.Ltmp1908             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6025:0xb DW_TAG_variable
	.ascii	"\267\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2713                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x6030:0x13 DW_TAG_lexical_block
	.ascii	"\215\003"                      # DW_AT_low_pc
	.long	.Ltmp1914-.Ltmp1908             # DW_AT_high_pc
	.byte	108                             # Abbrev [108] 0x6037:0xb DW_TAG_variable
	.byte	0                               # DW_AT_const_value
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2714                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x6044:0x13 DW_TAG_lexical_block
	.ascii	"\216\003"                      # DW_AT_low_pc
	.long	.Ltmp1924-.Ltmp1922             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x604b:0xb DW_TAG_variable
	.ascii	"\270\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2728                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x6057:0x13 DW_TAG_lexical_block
	.ascii	"\217\003"                      # DW_AT_low_pc
	.long	.Ltmp1926-.Ltmp1924             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x605e:0xb DW_TAG_variable
	.ascii	"\271\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2730                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x606a:0x10b DW_TAG_lexical_block
	.ascii	"\220\003"                      # DW_AT_low_pc
	.long	.Ltmp1984-.Ltmp1929             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x6071:0xc DW_TAG_variable
	.ascii	"\272\001"                      # DW_AT_location
	.short	754                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2738                            # DW_AT_decl_line
	.long	14823                           # DW_AT_type
	.byte	22                              # Abbrev [22] 0x607d:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\221\003"                      # DW_AT_low_pc
	.long	.Ltmp1939-.Ltmp1933             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2745                            # DW_AT_call_line
	.byte	49                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x608c:0x7 DW_TAG_formal_parameter
	.ascii	"\274\001"                      # DW_AT_location
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6093:0x7 DW_TAG_formal_parameter
	.ascii	"\273\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x609a:0x7 DW_TAG_variable
	.ascii	"\275\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x60a2:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\222\003"                      # DW_AT_low_pc
	.long	.Ltmp1946-.Ltmp1940             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2746                            # DW_AT_call_line
	.byte	48                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x60b1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x60b8:0x7 DW_TAG_formal_parameter
	.ascii	"\276\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x60bf:0x7 DW_TAG_variable
	.ascii	"\277\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x60c7:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\223\003"                      # DW_AT_low_pc
	.long	.Ltmp1953-.Ltmp1947             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2747                            # DW_AT_call_line
	.byte	48                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x60d6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x60dd:0x7 DW_TAG_formal_parameter
	.ascii	"\300\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x60e4:0x7 DW_TAG_variable
	.ascii	"\301\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x60ec:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\224\003"                      # DW_AT_low_pc
	.long	.Ltmp1959-.Ltmp1954             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2748                            # DW_AT_call_line
	.byte	48                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x60fb:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6102:0x7 DW_TAG_formal_parameter
	.ascii	"\302\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6109:0x7 DW_TAG_variable
	.ascii	"\303\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x6111:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\225\003"                      # DW_AT_low_pc
	.long	.Ltmp1966-.Ltmp1960             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2751                            # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6120:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	93
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6127:0x7 DW_TAG_formal_parameter
	.ascii	"\304\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x612e:0x7 DW_TAG_variable
	.ascii	"\305\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x6136:0x25 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.ascii	"\226\003"                      # DW_AT_low_pc
	.long	.Ltmp1973-.Ltmp1968             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2752                            # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6145:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	33877                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x614c:0x7 DW_TAG_formal_parameter
	.ascii	"\306\001"                      # DW_AT_location
	.long	33886                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6153:0x7 DW_TAG_variable
	.ascii	"\307\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x615b:0x19 DW_TAG_inlined_subroutine
	.long	33868                           # DW_AT_abstract_origin
	.byte	51                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2753                            # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6165:0x7 DW_TAG_formal_parameter
	.ascii	"\310\001"                      # DW_AT_location
	.long	33877                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x616c:0x7 DW_TAG_variable
	.ascii	"\311\001"                      # DW_AT_location
	.long	33895                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x6175:0x14 DW_TAG_lexical_block
	.ascii	"\227\003"                      # DW_AT_low_pc
	.long	.Ltmp1991-.Ltmp1987             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x617c:0xc DW_TAG_variable
	.ascii	"\312\001"                      # DW_AT_location
	.short	1219                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2758                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x6189:0x1e DW_TAG_inlined_subroutine
	.long	33841                           # DW_AT_abstract_origin
	.ascii	"\230\003"                      # DW_AT_low_pc
	.long	.Ltmp1999-.Ltmp1995             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2780                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6198:0x7 DW_TAG_formal_parameter
	.ascii	"\313\001"                      # DW_AT_location
	.long	33847                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x619f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	33857                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x61a7:0x1f DW_TAG_inlined_subroutine
	.long	33841                           # DW_AT_abstract_origin
	.ascii	"\231\003"                      # DW_AT_low_pc
	.long	.Ltmp2003-.Ltmp2000             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2782                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x61b6:0x8 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	40
	.long	33847                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x61be:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	33857                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x61c6:0x13 DW_TAG_lexical_block
	.ascii	"\232\003"                      # DW_AT_low_pc
	.long	.Ltmp2015-.Ltmp2003             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x61cd:0xb DW_TAG_variable
	.ascii	"\314\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2803                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x61d9:0x40 DW_TAG_inlined_subroutine
	.long	33905                           # DW_AT_abstract_origin
	.ascii	"\233\003"                      # DW_AT_low_pc
	.long	.Ltmp2042-.Ltmp2020             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2814                            # DW_AT_call_line
	.byte	8                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x61e8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	33910                           # DW_AT_abstract_origin
	.byte	103                             # Abbrev [103] 0x61ef:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\001"
	.long	33919                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x61f8:0x7 DW_TAG_variable
	.ascii	"\315\001"                      # DW_AT_location
	.long	33928                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x61ff:0x19 DW_TAG_lexical_block
	.ascii	"\234\003"                      # DW_AT_low_pc
	.long	.Ltmp2041-.Ltmp2025             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x6206:0x7 DW_TAG_variable
	.ascii	"\316\001"                      # DW_AT_location
	.long	33938                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x620d:0xa DW_TAG_lexical_block
	.byte	52                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x620f:0x7 DW_TAG_variable
	.ascii	"\317\001"                      # DW_AT_location
	.long	33947                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x6219:0x37 DW_TAG_inlined_subroutine
	.long	33972                           # DW_AT_abstract_origin
	.ascii	"\235\003"                      # DW_AT_low_pc
	.long	.Ltmp2066-.Ltmp2044             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2819                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6228:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	33977                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x622f:0x7 DW_TAG_variable
	.ascii	"\320\001"                      # DW_AT_location
	.long	33986                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x6236:0x19 DW_TAG_lexical_block
	.ascii	"\236\003"                      # DW_AT_low_pc
	.long	.Ltmp2065-.Ltmp2049             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x623d:0x7 DW_TAG_variable
	.ascii	"\321\001"                      # DW_AT_location
	.long	33996                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x6244:0xa DW_TAG_lexical_block
	.byte	53                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x6246:0x7 DW_TAG_variable
	.ascii	"\322\001"                      # DW_AT_location
	.long	34005                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x6250:0x7 DW_TAG_call_site
	.long	34017                           # DW_AT_call_origin
	.ascii	"\237\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6257:0x7 DW_TAG_call_site
	.long	34032                           # DW_AT_call_origin
	.ascii	"\240\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x625e:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\241\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6265:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\242\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x626c:0x7 DW_TAG_call_site
	.long	20364                           # DW_AT_call_origin
	.ascii	"\243\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6273:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\244\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x627a:0x7 DW_TAG_call_site
	.long	23453                           # DW_AT_call_origin
	.ascii	"\245\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6281:0x7 DW_TAG_call_site
	.long	34048                           # DW_AT_call_origin
	.ascii	"\246\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6288:0x7 DW_TAG_call_site
	.long	20364                           # DW_AT_call_origin
	.ascii	"\247\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x628f:0x7 DW_TAG_call_site
	.long	34073                           # DW_AT_call_origin
	.ascii	"\203\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6296:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\250\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x629d:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\251\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62a4:0x7 DW_TAG_call_site
	.long	34094                           # DW_AT_call_origin
	.ascii	"\252\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62ab:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\253\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62b2:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\254\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62b9:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\255\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62c0:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\256\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62c7:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\257\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62ce:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\260\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62d5:0x7 DW_TAG_call_site
	.long	34105                           # DW_AT_call_origin
	.ascii	"\261\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62dc:0x7 DW_TAG_call_site
	.long	34120                           # DW_AT_call_origin
	.ascii	"\262\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62e3:0x7 DW_TAG_call_site
	.long	34147                           # DW_AT_call_origin
	.ascii	"\263\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62ea:0x7 DW_TAG_call_site
	.long	34120                           # DW_AT_call_origin
	.ascii	"\264\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62f1:0x7 DW_TAG_call_site
	.long	18292                           # DW_AT_call_origin
	.ascii	"\265\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62f8:0x7 DW_TAG_call_site
	.long	34163                           # DW_AT_call_origin
	.ascii	"\266\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x62ff:0x7 DW_TAG_call_site
	.long	18689                           # DW_AT_call_origin
	.ascii	"\267\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6306:0x7 DW_TAG_call_site
	.long	18853                           # DW_AT_call_origin
	.ascii	"\270\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x630d:0x7 DW_TAG_call_site
	.long	34179                           # DW_AT_call_origin
	.ascii	"\271\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6314:0x7 DW_TAG_call_site
	.long	19254                           # DW_AT_call_origin
	.ascii	"\272\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x631b:0x7 DW_TAG_call_site
	.long	18853                           # DW_AT_call_origin
	.ascii	"\273\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6322:0x7 DW_TAG_call_site
	.long	34220                           # DW_AT_call_origin
	.ascii	"\236\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6329:0x7 DW_TAG_call_site
	.long	34179                           # DW_AT_call_origin
	.ascii	"\274\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6330:0x7 DW_TAG_call_site
	.long	19254                           # DW_AT_call_origin
	.ascii	"\275\003"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x6338:0x10 DW_TAG_subprogram
	.short	1028                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x633d:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6342:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x6348:0x10 DW_TAG_subprogram
	.short	1029                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	185                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x634d:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6352:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x6358:0x14 DW_TAG_subprogram
	.short	1030                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6361:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6366:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x636c:0x10 DW_TAG_subprogram
	.short	1031                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6371:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6376:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x637c:0x10 DW_TAG_subprogram
	.short	1032                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6381:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6386:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x638c:0x10 DW_TAG_subprogram
	.short	1033                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6391:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6396:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x639c:0x15 DW_TAG_subprogram
	.short	1034                            # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x63a1:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x63a6:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x63ab:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x63b1:0x10 DW_TAG_subprogram
	.short	1035                            # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x63b6:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x63bb:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x63c1:0x15 DW_TAG_subprogram
	.short	1036                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x63c6:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x63cb:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x63d0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x63d6:0xf DW_TAG_subprogram
	.short	1037                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x63df:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x63e5:0xf DW_TAG_subprogram
	.short	1038                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x63ee:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	85                              # Abbrev [85] 0x63f4:0x1f DW_TAG_subprogram
	.ascii	"\303\003"                      # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	21059                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6401:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21065                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x6408:0xa DW_TAG_lexical_block
	.byte	54                              # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x640a:0x7 DW_TAG_variable
	.ascii	"\330\001"                      # DW_AT_location
	.long	21076                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x6413:0xc DW_TAG_subprogram
	.short	1039                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	283                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6419:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	110                             # Abbrev [110] 0x641f:0xa9 DW_TAG_subprogram
	.ascii	"\335\005"                      # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1154                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	111                             # Abbrev [111] 0x642c:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	111                             # Abbrev [111] 0x6437:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.short	432                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	100                             # DW_AT_decl_line
	.long	35003                           # DW_AT_type
	.byte	112                             # Abbrev [112] 0x6442:0xb DW_TAG_formal_parameter
	.ascii	"\253\004"                      # DW_AT_location
	.short	402                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.long	11577                           # DW_AT_type
	.byte	112                             # Abbrev [112] 0x644d:0xb DW_TAG_formal_parameter
	.ascii	"\254\004"                      # DW_AT_location
	.short	418                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.long	11802                           # DW_AT_type
	.byte	112                             # Abbrev [112] 0x6458:0xb DW_TAG_formal_parameter
	.ascii	"\255\004"                      # DW_AT_location
	.short	419                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	112                             # Abbrev [112] 0x6463:0xb DW_TAG_formal_parameter
	.ascii	"\256\004"                      # DW_AT_location
	.short	324                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	111                             # Abbrev [111] 0x646e:0xc DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	8
	.short	273                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	102                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	113                             # Abbrev [113] 0x647a:0xa DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	162                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	104                             # DW_AT_decl_line
	.long	13709                           # DW_AT_type
	.byte	114                             # Abbrev [114] 0x6484:0xb DW_TAG_variable
	.ascii	"\262\004"                      # DW_AT_location
	.short	1242                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x648f:0x38 DW_TAG_lexical_block
	.ascii	"\336\005"                      # DW_AT_low_pc
	.long	.Ltmp4094-.Ltmp4084             # DW_AT_high_pc
	.byte	114                             # Abbrev [114] 0x6496:0xb DW_TAG_variable
	.ascii	"\257\004"                      # DW_AT_location
	.short	1241                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	162                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x64a1:0x25 DW_TAG_lexical_block
	.ascii	"\336\005"                      # DW_AT_low_pc
	.long	.Ltmp4094-.Ltmp4084             # DW_AT_high_pc
	.byte	115                             # Abbrev [115] 0x64a8:0xa DW_TAG_variable
	.ascii	"\260\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	163                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x64b2:0x13 DW_TAG_lexical_block
	.ascii	"\337\005"                      # DW_AT_low_pc
	.long	.Ltmp4091-.Ltmp4087             # DW_AT_high_pc
	.byte	114                             # Abbrev [114] 0x64b9:0xb DW_TAG_variable
	.ascii	"\261\004"                      # DW_AT_location
	.short	990                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	165                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x64c8:0xc DW_TAG_subprogram
	.short	1040                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	276                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x64ce:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	116                             # Abbrev [116] 0x64d4:0x147 DW_TAG_subprogram
	.ascii	"\304\003"                      # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1150                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2108                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	3                               # DW_AT_calling_convention
	.long	2644                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x64e7:0xc DW_TAG_formal_parameter
	.ascii	"\331\001"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2108                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	107                             # Abbrev [107] 0x64f3:0xb DW_TAG_variable
	.byte	0                               # DW_AT_const_value
	.short	1195                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2110                            # DW_AT_decl_line
	.long	3910                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x64fe:0x2e DW_TAG_lexical_block
	.ascii	"\305\003"                      # DW_AT_low_pc
	.long	.Ltmp2147-.Ltmp2130             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6505:0xb DW_TAG_variable
	.ascii	"\332\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2116                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	17                              # Abbrev [17] 0x6510:0x1b DW_TAG_lexical_block
	.byte	55                              # DW_AT_ranges
	.byte	13                              # Abbrev [13] 0x6512:0xc DW_TAG_variable
	.ascii	"\333\001"                      # DW_AT_location
	.short	989                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2118                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x651e:0xc DW_TAG_variable
	.ascii	"\334\001"                      # DW_AT_location
	.short	1011                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2124                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x652c:0x13 DW_TAG_lexical_block
	.ascii	"\306\003"                      # DW_AT_low_pc
	.long	.Ltmp2156-.Ltmp2149             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6533:0xb DW_TAG_variable
	.ascii	"\335\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2136                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x653f:0x13 DW_TAG_lexical_block
	.ascii	"\307\003"                      # DW_AT_low_pc
	.long	.Ltmp2163-.Ltmp2156             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6546:0xb DW_TAG_variable
	.ascii	"\336\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2142                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x6552:0x13 DW_TAG_lexical_block
	.ascii	"\310\003"                      # DW_AT_low_pc
	.long	.Ltmp2174-.Ltmp2163             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x6559:0xb DW_TAG_variable
	.ascii	"\337\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2151                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x6565:0x84 DW_TAG_lexical_block
	.ascii	"\311\003"                      # DW_AT_low_pc
	.long	.Ltmp2214-.Ltmp2175             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x656c:0xb DW_TAG_variable
	.ascii	"\340\001"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2160                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x6577:0x71 DW_TAG_lexical_block
	.ascii	"\312\003"                      # DW_AT_low_pc
	.long	.Ltmp2211-.Ltmp2178             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x657e:0xc DW_TAG_variable
	.ascii	"\341\001"                      # DW_AT_location
	.short	989                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2162                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x658a:0x35 DW_TAG_lexical_block
	.ascii	"\313\003"                      # DW_AT_low_pc
	.long	.Ltmp2197-.Ltmp2179             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x6591:0xc DW_TAG_variable
	.ascii	"\342\001"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2163                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	19                              # Abbrev [19] 0x659d:0x21 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	56                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2167                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x65a7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x65ae:0xf DW_TAG_lexical_block
	.ascii	"\314\003"                      # DW_AT_low_pc
	.long	.Ltmp2197-.Ltmp2190             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x65b5:0x7 DW_TAG_variable
	.ascii	"\343\001"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x65bf:0x14 DW_TAG_lexical_block
	.ascii	"\315\003"                      # DW_AT_low_pc
	.long	.Ltmp2207-.Ltmp2198             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x65c6:0xc DW_TAG_variable
	.ascii	"\344\001"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2170                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x65d3:0x14 DW_TAG_lexical_block
	.ascii	"\316\003"                      # DW_AT_low_pc
	.long	.Ltmp2210-.Ltmp2207             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x65da:0xc DW_TAG_variable
	.ascii	"\345\001"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2174                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x65e9:0x7 DW_TAG_call_site
	.long	34246                           # DW_AT_call_origin
	.ascii	"\317\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x65f0:0x7 DW_TAG_call_site
	.long	34262                           # DW_AT_call_origin
	.ascii	"\306\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x65f7:0x7 DW_TAG_call_site
	.long	34273                           # DW_AT_call_origin
	.ascii	"\320\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x65fe:0x7 DW_TAG_call_site
	.long	34273                           # DW_AT_call_origin
	.ascii	"\321\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6605:0x7 DW_TAG_call_site
	.long	34563                           # DW_AT_call_origin
	.ascii	"\311\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x660c:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\322\003"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x6613:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\323\003"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x661b:0x2e DW_TAG_subprogram
	.short	1041                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	199                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x6620:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6625:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x662a:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x662f:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6634:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6639:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x663e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x6643:0x5 DW_TAG_formal_parameter
	.long	16771                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0x6649:0x1de8 DW_TAG_subprogram
	.ascii	"\324\003"                      # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1151                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2057                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3910                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x665b:0xc DW_TAG_formal_parameter
	.ascii	"\346\001"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2057                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x6667:0xc DW_TAG_variable
	.ascii	"\347\001"                      # DW_AT_location
	.short	1221                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2059                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x6673:0xc DW_TAG_variable
	.ascii	"\350\001"                      # DW_AT_location
	.short	1222                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2060                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x667f:0x20 DW_TAG_lexical_block
	.ascii	"\325\003"                      # DW_AT_low_pc
	.long	.Ltmp2241-.Ltmp2235             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x6686:0xc DW_TAG_variable
	.ascii	"\351\001"                      # DW_AT_location
	.short	1011                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2086                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x6692:0xc DW_TAG_variable
	.ascii	"\352\001"                      # DW_AT_location
	.short	1010                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2087                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x669f:0x1ced DW_TAG_inlined_subroutine
	.long	34574                           # DW_AT_abstract_origin
	.byte	57                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2092                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x66a9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	34584                           # DW_AT_abstract_origin
	.byte	103                             # Abbrev [103] 0x66b0:0x9 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\320\001"
	.long	34594                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66b9:0x7 DW_TAG_variable
	.ascii	"\353\001"                      # DW_AT_location
	.long	34604                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66c0:0x7 DW_TAG_variable
	.ascii	"\354\001"                      # DW_AT_location
	.long	34614                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66c7:0x7 DW_TAG_variable
	.ascii	"\355\001"                      # DW_AT_location
	.long	34624                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66ce:0x7 DW_TAG_variable
	.ascii	"\305\003"                      # DW_AT_location
	.long	34634                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66d5:0x7 DW_TAG_variable
	.ascii	"\306\003"                      # DW_AT_location
	.long	34644                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66dc:0x7 DW_TAG_variable
	.ascii	"\307\003"                      # DW_AT_location
	.long	34654                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x66e3:0x7 DW_TAG_variable
	.ascii	"\316\003"                      # DW_AT_location
	.long	34664                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x66ea:0x19 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\326\003"                      # DW_AT_low_pc
	.long	.Ltmp2248-.Ltmp2247             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1779                            # DW_AT_call_line
	.byte	25                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x66f9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x6703:0x2f DW_TAG_inlined_subroutine
	.long	34869                           # DW_AT_abstract_origin
	.byte	58                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1783                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x670d:0x7 DW_TAG_formal_parameter
	.ascii	"\356\001"                      # DW_AT_location
	.long	34874                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6714:0x7 DW_TAG_variable
	.ascii	"\357\001"                      # DW_AT_location
	.long	34883                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x671b:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\327\003"                      # DW_AT_low_pc
	.long	.Ltmp2256-.Ltmp2255             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	108                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6729:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x6732:0x2b DW_TAG_inlined_subroutine
	.long	19552                           # DW_AT_abstract_origin
	.byte	59                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1786                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x673c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	19558                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6743:0x19 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.ascii	"\330\003"                      # DW_AT_low_pc
	.long	.Ltmp2261-.Ltmp2260             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1245                            # DW_AT_call_line
	.byte	41                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6752:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x675d:0x1811 DW_TAG_inlined_subroutine
	.long	34893                           # DW_AT_abstract_origin
	.byte	60                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1800                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6767:0x7 DW_TAG_formal_parameter
	.ascii	"\361\001"                      # DW_AT_location
	.long	34898                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x676e:0x7 DW_TAG_formal_parameter
	.ascii	"\362\001"                      # DW_AT_location
	.long	34907                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6775:0x7 DW_TAG_formal_parameter
	.ascii	"\360\001"                      # DW_AT_location
	.long	34916                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x677c:0x9e DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\331\003"                      # DW_AT_low_pc
	.long	.Ltmp2292-.Ltmp2271             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	194                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x678a:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6793:0x7 DW_TAG_formal_parameter
	.ascii	"\363\001"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x679a:0x7 DW_TAG_variable
	.ascii	"\364\001"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x67a1:0x7 DW_TAG_variable
	.ascii	"\365\001"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x67a8:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\332\003"                      # DW_AT_low_pc
	.long	.Ltmp2287-.Ltmp2281             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x67b6:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x67bf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x67c6:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x67cc:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\333\003"                      # DW_AT_low_pc
	.long	.Ltmp2286-.Ltmp2285             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x67da:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x67e1:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\333\003"                      # DW_AT_low_pc
	.long	.Ltmp2286-.Ltmp2285             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x67f0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x67fa:0x1f DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	61                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6803:0x7 DW_TAG_formal_parameter
	.ascii	"\367\001"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x680a:0x7 DW_TAG_formal_parameter
	.ascii	"\366\001"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6811:0x7 DW_TAG_formal_parameter
	.ascii	"\370\001"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	118                             # Abbrev [118] 0x681a:0x3b DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\334\003"                      # DW_AT_low_pc
	.long	.Ltmp2295-.Ltmp2292             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	98                              # Abbrev [98] 0x6827:0x2d DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\334\003"                      # DW_AT_low_pc
	.long	.Ltmp2295-.Ltmp2292             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	98                              # Abbrev [98] 0x6835:0x1e DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\335\003"                      # DW_AT_low_pc
	.long	.Ltmp2294-.Ltmp2293             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x6843:0xf DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\335\003"                      # DW_AT_low_pc
	.long	.Ltmp2294-.Ltmp2293             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6855:0x9e DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\336\003"                      # DW_AT_low_pc
	.long	.Ltmp2444-.Ltmp2422             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	197                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6863:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x686c:0x7 DW_TAG_formal_parameter
	.ascii	"\234\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6873:0x7 DW_TAG_variable
	.ascii	"\235\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x687a:0x7 DW_TAG_variable
	.ascii	"\236\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6881:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\337\003"                      # DW_AT_low_pc
	.long	.Ltmp2438-.Ltmp2432             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x688f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6898:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x689f:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x68a5:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\340\003"                      # DW_AT_low_pc
	.long	.Ltmp2437-.Ltmp2436             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x68b3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x68ba:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\340\003"                      # DW_AT_low_pc
	.long	.Ltmp2437-.Ltmp2436             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x68c9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x68d3:0x1f DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	62                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x68dc:0x7 DW_TAG_formal_parameter
	.ascii	"\240\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x68e3:0x7 DW_TAG_formal_parameter
	.ascii	"\237\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x68ea:0x7 DW_TAG_formal_parameter
	.ascii	"\241\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x68f3:0xbe DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	63                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	199                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x68fc:0x7 DW_TAG_formal_parameter
	.ascii	"\372\001"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6903:0x7 DW_TAG_formal_parameter
	.ascii	"\371\001"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x690a:0x7 DW_TAG_variable
	.ascii	"\373\001"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6911:0x7 DW_TAG_variable
	.ascii	"\374\001"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x6918:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	64                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6921:0x7 DW_TAG_formal_parameter
	.ascii	"\376\001"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6928:0x7 DW_TAG_formal_parameter
	.ascii	"\375\001"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x692f:0x7 DW_TAG_formal_parameter
	.ascii	"\377\001"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6936:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\341\003"                      # DW_AT_low_pc
	.long	.Ltmp2313-.Ltmp2312             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6944:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x694b:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\341\003"                      # DW_AT_low_pc
	.long	.Ltmp2313-.Ltmp2312             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x695a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6964:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	65                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x696d:0x7 DW_TAG_formal_parameter
	.ascii	"\201\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6974:0x7 DW_TAG_formal_parameter
	.ascii	"\200\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x697b:0x7 DW_TAG_formal_parameter
	.ascii	"\202\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6982:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\342\003"                      # DW_AT_low_pc
	.long	.Ltmp2322-.Ltmp2321             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6990:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6997:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\342\003"                      # DW_AT_low_pc
	.long	.Ltmp2322-.Ltmp2321             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x69a6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x69b1:0xbe DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	66                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	200                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x69ba:0x7 DW_TAG_formal_parameter
	.ascii	"\204\002"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x69c1:0x7 DW_TAG_formal_parameter
	.ascii	"\203\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x69c8:0x7 DW_TAG_variable
	.ascii	"\205\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x69cf:0x7 DW_TAG_variable
	.ascii	"\206\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x69d6:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	67                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x69df:0x7 DW_TAG_formal_parameter
	.ascii	"\210\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x69e6:0x7 DW_TAG_formal_parameter
	.ascii	"\207\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x69ed:0x7 DW_TAG_formal_parameter
	.ascii	"\211\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x69f4:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\343\003"                      # DW_AT_low_pc
	.long	.Ltmp2341-.Ltmp2340             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6a02:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6a09:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\343\003"                      # DW_AT_low_pc
	.long	.Ltmp2341-.Ltmp2340             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6a18:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6a22:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	68                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6a2b:0x7 DW_TAG_formal_parameter
	.ascii	"\213\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6a32:0x7 DW_TAG_formal_parameter
	.ascii	"\212\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6a39:0x7 DW_TAG_formal_parameter
	.ascii	"\214\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6a40:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\344\003"                      # DW_AT_low_pc
	.long	.Ltmp2350-.Ltmp2349             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6a4e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6a55:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\344\003"                      # DW_AT_low_pc
	.long	.Ltmp2350-.Ltmp2349             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6a64:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6a6f:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	69                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	201                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6a78:0x7 DW_TAG_formal_parameter
	.ascii	"\216\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6a7f:0x7 DW_TAG_formal_parameter
	.ascii	"\217\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6a86:0x7 DW_TAG_formal_parameter
	.ascii	"\215\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6a8d:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\345\003"                      # DW_AT_low_pc
	.long	.Ltmp2360-.Ltmp2359             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6a9b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6aa2:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\345\003"                      # DW_AT_low_pc
	.long	.Ltmp2360-.Ltmp2359             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ab1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6abb:0x35 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\346\003"                      # DW_AT_low_pc
	.long	.Ltmp2450-.Ltmp2445             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	205                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ac9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6ad2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6ad9:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\347\003"                      # DW_AT_low_pc
	.long	.Ltmp2449-.Ltmp2448             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ae7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6af0:0x2e DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\350\003"                      # DW_AT_low_pc
	.long	.Ltmp2460-.Ltmp2455             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	207                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6afe:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6b07:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\351\003"                      # DW_AT_low_pc
	.long	.Ltmp2459-.Ltmp2458             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6b15:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6b1e:0xcb DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\352\003"                      # DW_AT_low_pc
	.long	.Ltmp2390-.Ltmp2366             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	211                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6b2c:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6b35:0x7 DW_TAG_formal_parameter
	.ascii	"\221\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6b3c:0x7 DW_TAG_variable
	.ascii	"\220\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6b43:0x7 DW_TAG_variable
	.ascii	"\222\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6b4a:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\353\003"                      # DW_AT_low_pc
	.long	.Ltmp2382-.Ltmp2376             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6b58:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6b61:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x6b68:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6b6e:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\354\003"                      # DW_AT_low_pc
	.long	.Ltmp2381-.Ltmp2380             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6b7c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6b83:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\354\003"                      # DW_AT_low_pc
	.long	.Ltmp2381-.Ltmp2380             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6b92:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6b9c:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	70                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6ba5:0x7 DW_TAG_formal_parameter
	.ascii	"\224\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6bac:0x7 DW_TAG_formal_parameter
	.ascii	"\223\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6bb3:0x7 DW_TAG_formal_parameter
	.ascii	"\225\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6bba:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\355\003"                      # DW_AT_low_pc
	.long	.Ltmp2389-.Ltmp2388             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6bc8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6bcf:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\355\003"                      # DW_AT_low_pc
	.long	.Ltmp2389-.Ltmp2388             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6bde:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6be9:0x53 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\356\003"                      # DW_AT_low_pc
	.long	.Ltmp2402-.Ltmp2394             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	215                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6bf7:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6c00:0x7 DW_TAG_formal_parameter
	.ascii	"\227\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6c07:0x7 DW_TAG_formal_parameter
	.ascii	"\226\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6c0e:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\357\003"                      # DW_AT_low_pc
	.long	.Ltmp2401-.Ltmp2400             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6c1c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6c23:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\357\003"                      # DW_AT_low_pc
	.long	.Ltmp2401-.Ltmp2400             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6c32:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6c3c:0x53 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\360\003"                      # DW_AT_low_pc
	.long	.Ltmp2419-.Ltmp2406             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	217                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6c4a:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6c53:0x7 DW_TAG_formal_parameter
	.ascii	"\230\002"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6c5a:0x7 DW_TAG_variable
	.ascii	"\231\002"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6c61:0x7 DW_TAG_variable
	.ascii	"\232\002"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6c68:0x26 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\361\003"                      # DW_AT_low_pc
	.long	.Ltmp2419-.Ltmp2415             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6c76:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6c7f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6c86:0x7 DW_TAG_formal_parameter
	.ascii	"\233\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6c8f:0x80 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\362\003"                      # DW_AT_low_pc
	.long	.Ltmp2480-.Ltmp2463             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	221                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6c9d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6ca6:0x7 DW_TAG_formal_parameter
	.ascii	"\242\002"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6cad:0x7 DW_TAG_variable
	.ascii	"\243\002"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6cb4:0x7 DW_TAG_variable
	.ascii	"\244\002"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6cbb:0x53 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\363\003"                      # DW_AT_low_pc
	.long	.Ltmp2480-.Ltmp2472             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6cc9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6cd2:0x7 DW_TAG_formal_parameter
	.ascii	"\245\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6cd9:0x7 DW_TAG_formal_parameter
	.ascii	"\246\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6ce0:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\364\003"                      # DW_AT_low_pc
	.long	.Ltmp2479-.Ltmp2478             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6cee:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6cf5:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\364\003"                      # DW_AT_low_pc
	.long	.Ltmp2479-.Ltmp2478             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6d04:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6d0f:0x53 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\365\003"                      # DW_AT_low_pc
	.long	.Ltmp2497-.Ltmp2484             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6d1d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6d26:0x7 DW_TAG_formal_parameter
	.ascii	"\247\002"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6d2d:0x7 DW_TAG_variable
	.ascii	"\250\002"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6d34:0x7 DW_TAG_variable
	.ascii	"\251\002"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6d3b:0x26 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\366\003"                      # DW_AT_low_pc
	.long	.Ltmp2497-.Ltmp2493             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6d49:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6d52:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6d59:0x7 DW_TAG_formal_parameter
	.ascii	"\252\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	118                             # Abbrev [118] 0x6d62:0x3b DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\367\003"                      # DW_AT_low_pc
	.long	.Ltmp2500-.Ltmp2497             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	98                              # Abbrev [98] 0x6d6f:0x2d DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\367\003"                      # DW_AT_low_pc
	.long	.Ltmp2500-.Ltmp2497             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	98                              # Abbrev [98] 0x6d7d:0x1e DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\370\003"                      # DW_AT_low_pc
	.long	.Ltmp2499-.Ltmp2498             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x6d8b:0xf DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\370\003"                      # DW_AT_low_pc
	.long	.Ltmp2499-.Ltmp2498             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6d9d:0xcb DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\371\003"                      # DW_AT_low_pc
	.long	.Ltmp2528-.Ltmp2503             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	227                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6dab:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6db4:0x7 DW_TAG_formal_parameter
	.ascii	"\253\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6dbb:0x7 DW_TAG_variable
	.ascii	"\254\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6dc2:0x7 DW_TAG_variable
	.ascii	"\255\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6dc9:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\372\003"                      # DW_AT_low_pc
	.long	.Ltmp2519-.Ltmp2513             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6dd7:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6de0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x6de7:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6ded:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\373\003"                      # DW_AT_low_pc
	.long	.Ltmp2518-.Ltmp2517             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6dfb:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6e02:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\373\003"                      # DW_AT_low_pc
	.long	.Ltmp2518-.Ltmp2517             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6e11:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6e1b:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	71                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6e24:0x7 DW_TAG_formal_parameter
	.ascii	"\257\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6e2b:0x7 DW_TAG_formal_parameter
	.ascii	"\256\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6e32:0x7 DW_TAG_formal_parameter
	.ascii	"\260\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6e39:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\374\003"                      # DW_AT_low_pc
	.long	.Ltmp2527-.Ltmp2526             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6e47:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6e4e:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\374\003"                      # DW_AT_low_pc
	.long	.Ltmp2527-.Ltmp2526             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6e5d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6e68:0x2e DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\375\003"                      # DW_AT_low_pc
	.long	.Ltmp2536-.Ltmp2531             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	230                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6e76:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6e7f:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\376\003"                      # DW_AT_low_pc
	.long	.Ltmp2535-.Ltmp2534             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6e8d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6e96:0x35 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\377\003"                      # DW_AT_low_pc
	.long	.Ltmp2545-.Ltmp2540             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	234                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ea4:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6ead:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6eb4:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\200\004"                      # DW_AT_low_pc
	.long	.Ltmp2544-.Ltmp2543             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ec2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6ecb:0xc4 DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\201\004"                      # DW_AT_low_pc
	.long	.Ltmp2573-.Ltmp2551             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	237                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6ed9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6ee2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6ee9:0x7 DW_TAG_variable
	.ascii	"\261\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6ef0:0x7 DW_TAG_variable
	.ascii	"\262\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6ef7:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\202\004"                      # DW_AT_low_pc
	.long	.Ltmp2565-.Ltmp2559             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f05:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6f0e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x6f15:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6f1b:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\203\004"                      # DW_AT_low_pc
	.long	.Ltmp2564-.Ltmp2563             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f29:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6f30:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\203\004"                      # DW_AT_low_pc
	.long	.Ltmp2564-.Ltmp2563             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f3f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x6f49:0x45 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	72                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x6f52:0x7 DW_TAG_formal_parameter
	.ascii	"\264\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x6f59:0x7 DW_TAG_formal_parameter
	.ascii	"\263\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6f60:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\204\004"                      # DW_AT_low_pc
	.long	.Ltmp2572-.Ltmp2571             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f6e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6f75:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\204\004"                      # DW_AT_low_pc
	.long	.Ltmp2572-.Ltmp2571             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f84:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x6f8f:0xc4 DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\205\004"                      # DW_AT_low_pc
	.long	.Ltmp2603-.Ltmp2581             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	239                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6f9d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6fa6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6fad:0x7 DW_TAG_variable
	.ascii	"\265\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x6fb4:0x7 DW_TAG_variable
	.ascii	"\266\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6fbb:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\206\004"                      # DW_AT_low_pc
	.long	.Ltmp2595-.Ltmp2589             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6fc9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x6fd2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x6fd9:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x6fdf:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\207\004"                      # DW_AT_low_pc
	.long	.Ltmp2594-.Ltmp2593             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x6fed:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x6ff4:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\207\004"                      # DW_AT_low_pc
	.long	.Ltmp2594-.Ltmp2593             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7003:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x700d:0x45 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	73                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7016:0x7 DW_TAG_formal_parameter
	.ascii	"\270\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x701d:0x7 DW_TAG_formal_parameter
	.ascii	"\267\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7024:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\210\004"                      # DW_AT_low_pc
	.long	.Ltmp2602-.Ltmp2601             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7032:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7039:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\210\004"                      # DW_AT_low_pc
	.long	.Ltmp2602-.Ltmp2601             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7048:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7053:0x35 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\211\004"                      # DW_AT_low_pc
	.long	.Ltmp2611-.Ltmp2606             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	246                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7061:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x706a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7071:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\212\004"                      # DW_AT_low_pc
	.long	.Ltmp2610-.Ltmp2609             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x707f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x7088:0x198 DW_TAG_lexical_block
	.ascii	"\213\004"                      # DW_AT_low_pc
	.long	.Ltmp2674-.Ltmp2615             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x708f:0x7 DW_TAG_variable
	.ascii	"\271\002"                      # DW_AT_location
	.long	34926                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7096:0xcb DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\214\004"                      # DW_AT_low_pc
	.long	.Ltmp2645-.Ltmp2622             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	251                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x70a4:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x70ad:0x7 DW_TAG_formal_parameter
	.ascii	"\272\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x70b4:0x7 DW_TAG_variable
	.ascii	"\273\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x70bb:0x7 DW_TAG_variable
	.ascii	"\274\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x70c2:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\215\004"                      # DW_AT_low_pc
	.long	.Ltmp2637-.Ltmp2632             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x70d0:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x70d9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x70e0:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x70e6:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\216\004"                      # DW_AT_low_pc
	.long	.Ltmp2636-.Ltmp2635             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x70f4:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x70fb:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\216\004"                      # DW_AT_low_pc
	.long	.Ltmp2636-.Ltmp2635             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x710a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7114:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	74                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x711d:0x7 DW_TAG_formal_parameter
	.ascii	"\276\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7124:0x7 DW_TAG_formal_parameter
	.ascii	"\275\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x712b:0x7 DW_TAG_formal_parameter
	.ascii	"\277\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7132:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\217\004"                      # DW_AT_low_pc
	.long	.Ltmp2644-.Ltmp2643             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7140:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7147:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\217\004"                      # DW_AT_low_pc
	.long	.Ltmp2644-.Ltmp2643             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7156:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7161:0xbe DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	75                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	252                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x716a:0x7 DW_TAG_formal_parameter
	.ascii	"\301\002"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7171:0x7 DW_TAG_formal_parameter
	.ascii	"\300\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7178:0x7 DW_TAG_variable
	.ascii	"\302\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x717f:0x7 DW_TAG_variable
	.ascii	"\303\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x7186:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	76                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x718f:0x7 DW_TAG_formal_parameter
	.ascii	"\305\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7196:0x7 DW_TAG_formal_parameter
	.ascii	"\304\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x719d:0x7 DW_TAG_formal_parameter
	.ascii	"\306\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x71a4:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\220\004"                      # DW_AT_low_pc
	.long	.Ltmp2663-.Ltmp2662             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x71b2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x71b9:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\220\004"                      # DW_AT_low_pc
	.long	.Ltmp2663-.Ltmp2662             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x71c8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x71d2:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	77                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x71db:0x7 DW_TAG_formal_parameter
	.ascii	"\310\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x71e2:0x7 DW_TAG_formal_parameter
	.ascii	"\307\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x71e9:0x7 DW_TAG_formal_parameter
	.ascii	"\311\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x71f0:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\221\004"                      # DW_AT_low_pc
	.long	.Ltmp2673-.Ltmp2672             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x71fe:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7205:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\221\004"                      # DW_AT_low_pc
	.long	.Ltmp2673-.Ltmp2672             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7214:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7220:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\222\004"                      # DW_AT_low_pc
	.long	.Ltmp2687-.Ltmp2674             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	254                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x722e:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7237:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	35022                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x723d:0x6 DW_TAG_variable
	.byte	4                               # DW_AT_const_value
	.long	35040                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x7243:0x6 DW_TAG_variable
	.byte	5                               # DW_AT_const_value
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7249:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\222\004"                      # DW_AT_low_pc
	.long	.Ltmp2680-.Ltmp2674             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7257:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x7260:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7266:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x726c:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\223\004"                      # DW_AT_low_pc
	.long	.Ltmp2679-.Ltmp2678             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x727a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7281:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\223\004"                      # DW_AT_low_pc
	.long	.Ltmp2679-.Ltmp2678             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7290:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x729a:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\224\004"                      # DW_AT_low_pc
	.long	.Ltmp2687-.Ltmp2680             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x72a8:0x7 DW_TAG_formal_parameter
	.ascii	"\312\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x72af:0x7 DW_TAG_formal_parameter
	.ascii	"\313\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x72b6:0x7 DW_TAG_formal_parameter
	.ascii	"\314\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x72bd:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\225\004"                      # DW_AT_low_pc
	.long	.Ltmp2686-.Ltmp2685             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x72cb:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x72d2:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\225\004"                      # DW_AT_low_pc
	.long	.Ltmp2686-.Ltmp2685             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x72e1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x72ec:0x36 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\226\004"                      # DW_AT_low_pc
	.long	.Ltmp2694-.Ltmp2689             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	259                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x72fb:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x7304:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x730b:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\227\004"                      # DW_AT_low_pc
	.long	.Ltmp2693-.Ltmp2692             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7319:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x7322:0x19a DW_TAG_lexical_block
	.ascii	"\230\004"                      # DW_AT_low_pc
	.long	.Ltmp2755-.Ltmp2697             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x7329:0x7 DW_TAG_variable
	.ascii	"\315\002"                      # DW_AT_location
	.long	34936                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7330:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\231\004"                      # DW_AT_low_pc
	.long	.Ltmp2726-.Ltmp2703             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	264                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x733f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7348:0x7 DW_TAG_formal_parameter
	.ascii	"\316\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x734f:0x7 DW_TAG_variable
	.ascii	"\317\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7356:0x7 DW_TAG_variable
	.ascii	"\320\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x735d:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\232\004"                      # DW_AT_low_pc
	.long	.Ltmp2718-.Ltmp2713             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x736b:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x7374:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x737b:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7381:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\233\004"                      # DW_AT_low_pc
	.long	.Ltmp2717-.Ltmp2716             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x738f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7396:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\233\004"                      # DW_AT_low_pc
	.long	.Ltmp2717-.Ltmp2716             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x73a5:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x73af:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	78                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x73b8:0x7 DW_TAG_formal_parameter
	.ascii	"\322\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x73bf:0x7 DW_TAG_formal_parameter
	.ascii	"\321\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x73c6:0x7 DW_TAG_formal_parameter
	.ascii	"\323\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x73cd:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\234\004"                      # DW_AT_low_pc
	.long	.Ltmp2725-.Ltmp2724             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x73db:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x73e2:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\234\004"                      # DW_AT_low_pc
	.long	.Ltmp2725-.Ltmp2724             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x73f1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x73fc:0xbf DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	79                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	265                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7406:0x7 DW_TAG_formal_parameter
	.ascii	"\325\002"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x740d:0x7 DW_TAG_formal_parameter
	.ascii	"\324\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7414:0x7 DW_TAG_variable
	.ascii	"\326\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x741b:0x7 DW_TAG_variable
	.ascii	"\327\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x7422:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	80                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x742b:0x7 DW_TAG_formal_parameter
	.ascii	"\331\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7432:0x7 DW_TAG_formal_parameter
	.ascii	"\330\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7439:0x7 DW_TAG_formal_parameter
	.ascii	"\332\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7440:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\235\004"                      # DW_AT_low_pc
	.long	.Ltmp2744-.Ltmp2743             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x744e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7455:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\235\004"                      # DW_AT_low_pc
	.long	.Ltmp2744-.Ltmp2743             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7464:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x746e:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	81                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7477:0x7 DW_TAG_formal_parameter
	.ascii	"\334\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x747e:0x7 DW_TAG_formal_parameter
	.ascii	"\333\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7485:0x7 DW_TAG_formal_parameter
	.ascii	"\335\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x748c:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\236\004"                      # DW_AT_low_pc
	.long	.Ltmp2754-.Ltmp2753             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x749a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x74a1:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\236\004"                      # DW_AT_low_pc
	.long	.Ltmp2754-.Ltmp2753             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x74b0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x74bc:0xcd DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\237\004"                      # DW_AT_low_pc
	.long	.Ltmp2768-.Ltmp2755             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	267                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x74cb:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x74d4:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	35022                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x74da:0x6 DW_TAG_variable
	.byte	4                               # DW_AT_const_value
	.long	35040                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x74e0:0x6 DW_TAG_variable
	.byte	5                               # DW_AT_const_value
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x74e6:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\237\004"                      # DW_AT_low_pc
	.long	.Ltmp2761-.Ltmp2755             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x74f4:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x74fd:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7503:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7509:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\240\004"                      # DW_AT_low_pc
	.long	.Ltmp2760-.Ltmp2759             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7517:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x751e:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\240\004"                      # DW_AT_low_pc
	.long	.Ltmp2760-.Ltmp2759             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x752d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7537:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\241\004"                      # DW_AT_low_pc
	.long	.Ltmp2768-.Ltmp2761             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7545:0x7 DW_TAG_formal_parameter
	.ascii	"\336\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x754c:0x7 DW_TAG_formal_parameter
	.ascii	"\337\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7553:0x7 DW_TAG_formal_parameter
	.ascii	"\340\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x755a:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\242\004"                      # DW_AT_low_pc
	.long	.Ltmp2767-.Ltmp2766             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7568:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x756f:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\242\004"                      # DW_AT_low_pc
	.long	.Ltmp2767-.Ltmp2766             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x757e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7589:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\243\004"                      # DW_AT_low_pc
	.long	.Ltmp2795-.Ltmp2772             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	274                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7598:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x75a1:0x7 DW_TAG_formal_parameter
	.ascii	"\341\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x75a8:0x7 DW_TAG_variable
	.ascii	"\342\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x75af:0x7 DW_TAG_variable
	.ascii	"\343\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x75b6:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\244\004"                      # DW_AT_low_pc
	.long	.Ltmp2787-.Ltmp2782             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x75c4:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x75cd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x75d4:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x75da:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\245\004"                      # DW_AT_low_pc
	.long	.Ltmp2786-.Ltmp2785             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x75e8:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x75ef:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\245\004"                      # DW_AT_low_pc
	.long	.Ltmp2786-.Ltmp2785             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x75fe:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7608:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	82                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7611:0x7 DW_TAG_formal_parameter
	.ascii	"\345\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7618:0x7 DW_TAG_formal_parameter
	.ascii	"\344\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x761f:0x7 DW_TAG_formal_parameter
	.ascii	"\346\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7626:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\246\004"                      # DW_AT_low_pc
	.long	.Ltmp2794-.Ltmp2793             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7634:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x763b:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\246\004"                      # DW_AT_low_pc
	.long	.Ltmp2794-.Ltmp2793             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x764a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7655:0xbf DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	83                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	275                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x765f:0x7 DW_TAG_formal_parameter
	.ascii	"\350\002"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7666:0x7 DW_TAG_formal_parameter
	.ascii	"\347\002"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x766d:0x7 DW_TAG_variable
	.ascii	"\351\002"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7674:0x7 DW_TAG_variable
	.ascii	"\352\002"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x767b:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	84                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7684:0x7 DW_TAG_formal_parameter
	.ascii	"\354\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x768b:0x7 DW_TAG_formal_parameter
	.ascii	"\353\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7692:0x7 DW_TAG_formal_parameter
	.ascii	"\355\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7699:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\247\004"                      # DW_AT_low_pc
	.long	.Ltmp2812-.Ltmp2811             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x76a7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x76ae:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\247\004"                      # DW_AT_low_pc
	.long	.Ltmp2812-.Ltmp2811             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x76bd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x76c7:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	85                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x76d0:0x7 DW_TAG_formal_parameter
	.ascii	"\357\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x76d7:0x7 DW_TAG_formal_parameter
	.ascii	"\356\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x76de:0x7 DW_TAG_formal_parameter
	.ascii	"\360\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x76e5:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\250\004"                      # DW_AT_low_pc
	.long	.Ltmp2820-.Ltmp2819             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x76f3:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x76fa:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\250\004"                      # DW_AT_low_pc
	.long	.Ltmp2820-.Ltmp2819             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7709:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	88
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x7714:0x251 DW_TAG_lexical_block
	.ascii	"\251\004"                      # DW_AT_low_pc
	.long	.Ltmp2951-.Ltmp2821             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x771b:0x7 DW_TAG_variable
	.ascii	"\361\002"                      # DW_AT_location
	.long	34947                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x7722:0x242 DW_TAG_lexical_block
	.ascii	"\252\004"                      # DW_AT_low_pc
	.long	.Ltmp2951-.Ltmp2827             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x7729:0x7 DW_TAG_variable
	.ascii	"\362\002"                      # DW_AT_location
	.long	34957                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7730:0x2f DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\253\004"                      # DW_AT_low_pc
	.long	.Ltmp2834-.Ltmp2830             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	280                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x773f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7748:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\254\004"                      # DW_AT_low_pc
	.long	.Ltmp2833-.Ltmp2832             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7756:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x775f:0x2f DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.byte	86                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	286                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7769:0x7 DW_TAG_formal_parameter
	.ascii	"\377\002"                      # DW_AT_location
	.long	21237                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7770:0x7 DW_TAG_formal_parameter
	.ascii	"\200\003"                      # DW_AT_location
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7777:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\255\004"                      # DW_AT_low_pc
	.long	.Ltmp2877-.Ltmp2876             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7785:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x778e:0x81 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\256\004"                      # DW_AT_low_pc
	.long	.Ltmp2854-.Ltmp2837             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	283                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x779d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x77a6:0x7 DW_TAG_formal_parameter
	.ascii	"\363\002"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x77ad:0x7 DW_TAG_variable
	.ascii	"\364\002"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x77b4:0x7 DW_TAG_variable
	.ascii	"\365\002"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x77bb:0x53 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\257\004"                      # DW_AT_low_pc
	.long	.Ltmp2854-.Ltmp2847             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x77c9:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x77d2:0x7 DW_TAG_formal_parameter
	.ascii	"\366\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x77d9:0x7 DW_TAG_formal_parameter
	.ascii	"\367\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x77e0:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\260\004"                      # DW_AT_low_pc
	.long	.Ltmp2853-.Ltmp2852             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x77ee:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	90
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x77f5:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\260\004"                      # DW_AT_low_pc
	.long	.Ltmp2853-.Ltmp2852             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7804:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	90
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x780f:0x73 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.byte	87                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	284                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7819:0x7 DW_TAG_formal_parameter
	.ascii	"\371\002"                      # DW_AT_location
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7820:0x7 DW_TAG_formal_parameter
	.ascii	"\370\002"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7827:0x7 DW_TAG_variable
	.ascii	"\372\002"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x782e:0x7 DW_TAG_variable
	.ascii	"\373\002"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x7835:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	88                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x783e:0x7 DW_TAG_formal_parameter
	.ascii	"\375\002"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7845:0x7 DW_TAG_formal_parameter
	.ascii	"\374\002"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x784c:0x7 DW_TAG_formal_parameter
	.ascii	"\376\002"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7853:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\261\004"                      # DW_AT_low_pc
	.long	.Ltmp2871-.Ltmp2870             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7861:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7868:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\261\004"                      # DW_AT_low_pc
	.long	.Ltmp2871-.Ltmp2870             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7877:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	89
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x7882:0xe1 DW_TAG_lexical_block
	.ascii	"\262\004"                      # DW_AT_low_pc
	.long	.Ltmp2951-.Ltmp2879             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x7889:0x7 DW_TAG_variable
	.ascii	"\201\003"                      # DW_AT_location
	.long	34978                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x7890:0x69 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.byte	89                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	291                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x789a:0x7 DW_TAG_formal_parameter
	.ascii	"\203\003"                      # DW_AT_location
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x78a1:0x7 DW_TAG_formal_parameter
	.ascii	"\202\003"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x78a8:0x7 DW_TAG_variable
	.ascii	"\204\003"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x78af:0x7 DW_TAG_variable
	.ascii	"\205\003"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x78b6:0x42 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	90                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x78bf:0x7 DW_TAG_formal_parameter
	.ascii	"\207\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x78c6:0x7 DW_TAG_formal_parameter
	.ascii	"\206\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x78cd:0x7 DW_TAG_formal_parameter
	.ascii	"\210\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x78d4:0x23 DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.byte	91                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x78dd:0x7 DW_TAG_formal_parameter
	.ascii	"\211\003"                      # DW_AT_location
	.long	21221                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x78e4:0x12 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.byte	92                              # DW_AT_ranges
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x78ee:0x7 DW_TAG_formal_parameter
	.ascii	"\212\003"                      # DW_AT_location
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x78f9:0x69 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.byte	93                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	292                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7903:0x7 DW_TAG_formal_parameter
	.ascii	"\214\003"                      # DW_AT_location
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x790a:0x7 DW_TAG_formal_parameter
	.ascii	"\213\003"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7911:0x7 DW_TAG_variable
	.ascii	"\215\003"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7918:0x7 DW_TAG_variable
	.ascii	"\216\003"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x791f:0x42 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	94                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7928:0x7 DW_TAG_formal_parameter
	.ascii	"\220\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x792f:0x7 DW_TAG_formal_parameter
	.ascii	"\217\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7936:0x7 DW_TAG_formal_parameter
	.ascii	"\221\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x793d:0x23 DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.byte	95                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7946:0x7 DW_TAG_formal_parameter
	.ascii	"\222\003"                      # DW_AT_location
	.long	21221                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x794d:0x12 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.byte	96                              # DW_AT_ranges
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7957:0x7 DW_TAG_formal_parameter
	.ascii	"\223\003"                      # DW_AT_location
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7965:0x35 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\263\004"                      # DW_AT_low_pc
	.long	.Ltmp2959-.Ltmp2954             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	306                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7974:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x797d:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7983:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\264\004"                      # DW_AT_low_pc
	.long	.Ltmp2958-.Ltmp2957             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7991:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x799a:0x2f DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.byte	97                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	307                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x79a4:0x7 DW_TAG_formal_parameter
	.ascii	"\224\003"                      # DW_AT_location
	.long	21237                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x79ab:0x7 DW_TAG_formal_parameter
	.ascii	"\225\003"                      # DW_AT_location
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x79b2:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\265\004"                      # DW_AT_low_pc
	.long	.Ltmp3017-.Ltmp3016             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x79c0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x79c9:0x36 DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.ascii	"\266\004"                      # DW_AT_low_pc
	.long	.Ltmp2967-.Ltmp2961             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	311                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x79d8:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21237                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x79e1:0x7 DW_TAG_formal_parameter
	.ascii	"\226\003"                      # DW_AT_location
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x79e8:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\267\004"                      # DW_AT_low_pc
	.long	.Ltmp2966-.Ltmp2965             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x79f6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x79ff:0x194 DW_TAG_lexical_block
	.ascii	"\270\004"                      # DW_AT_low_pc
	.long	.Ltmp3013-.Ltmp2971             # DW_AT_high_pc
	.byte	103                             # Abbrev [103] 0x7a06:0x7 DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	84
	.long	34992                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7a0d:0xcd DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\271\004"                      # DW_AT_low_pc
	.long	.Ltmp2986-.Ltmp2975             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	316                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7a1c:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7a25:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	35022                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x7a2b:0x6 DW_TAG_variable
	.byte	2                               # DW_AT_const_value
	.long	35040                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x7a31:0x6 DW_TAG_variable
	.byte	3                               # DW_AT_const_value
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7a37:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\271\004"                      # DW_AT_low_pc
	.long	.Ltmp2980-.Ltmp2975             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7a45:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x7a4e:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7a54:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7a5a:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\272\004"                      # DW_AT_low_pc
	.long	.Ltmp2979-.Ltmp2978             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7a68:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7a6f:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\272\004"                      # DW_AT_low_pc
	.long	.Ltmp2979-.Ltmp2978             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7a7e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7a88:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\273\004"                      # DW_AT_low_pc
	.long	.Ltmp2986-.Ltmp2980             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7a96:0x7 DW_TAG_formal_parameter
	.ascii	"\227\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7a9d:0x7 DW_TAG_formal_parameter
	.ascii	"\230\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7aa4:0x7 DW_TAG_formal_parameter
	.ascii	"\231\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7aab:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\274\004"                      # DW_AT_low_pc
	.long	.Ltmp2985-.Ltmp2984             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7ab9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7ac0:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\274\004"                      # DW_AT_low_pc
	.long	.Ltmp2985-.Ltmp2984             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7acf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7ada:0xb8 DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.byte	98                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	317                             # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7ae4:0x7 DW_TAG_formal_parameter
	.ascii	"\234\003"                      # DW_AT_location
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7aeb:0x7 DW_TAG_formal_parameter
	.ascii	"\232\003"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7af2:0x7 DW_TAG_variable
	.ascii	"\233\003"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7af9:0x7 DW_TAG_variable
	.ascii	"\235\003"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x7b00:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	99                              # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7b09:0x7 DW_TAG_formal_parameter
	.ascii	"\237\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7b10:0x7 DW_TAG_formal_parameter
	.ascii	"\236\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7b17:0x7 DW_TAG_formal_parameter
	.ascii	"\240\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7b1e:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\275\004"                      # DW_AT_low_pc
	.long	.Ltmp3003-.Ltmp3002             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7b2c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7b33:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\275\004"                      # DW_AT_low_pc
	.long	.Ltmp3003-.Ltmp3002             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7b42:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7b4c:0x45 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	100                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7b55:0x7 DW_TAG_formal_parameter
	.ascii	"\242\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7b5c:0x7 DW_TAG_formal_parameter
	.ascii	"\241\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7b63:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\276\004"                      # DW_AT_low_pc
	.long	.Ltmp3012-.Ltmp3011             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7b71:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7b78:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\276\004"                      # DW_AT_low_pc
	.long	.Ltmp3012-.Ltmp3011             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7b87:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7b93:0xcd DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\277\004"                      # DW_AT_low_pc
	.long	.Ltmp3033-.Ltmp3019             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	319                             # DW_AT_call_line
	.byte	17                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7ba2:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7bab:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	35022                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x7bb1:0x6 DW_TAG_variable
	.byte	1                               # DW_AT_const_value
	.long	35040                           # DW_AT_abstract_origin
	.byte	101                             # Abbrev [101] 0x7bb7:0x6 DW_TAG_variable
	.byte	1                               # DW_AT_const_value
	.long	35031                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7bbd:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\277\004"                      # DW_AT_low_pc
	.long	.Ltmp3025-.Ltmp3019             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7bcb:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	48                              # Abbrev [48] 0x7bd4:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7bda:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7be0:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\300\004"                      # DW_AT_low_pc
	.long	.Ltmp3024-.Ltmp3023             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7bee:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7bf5:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\300\004"                      # DW_AT_low_pc
	.long	.Ltmp3024-.Ltmp3023             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7c04:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7c0e:0x51 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\301\004"                      # DW_AT_low_pc
	.long	.Ltmp3033-.Ltmp3025             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7c1c:0x7 DW_TAG_formal_parameter
	.ascii	"\243\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7c23:0x7 DW_TAG_formal_parameter
	.ascii	"\244\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7c2a:0x7 DW_TAG_formal_parameter
	.ascii	"\245\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7c31:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\302\004"                      # DW_AT_low_pc
	.long	.Ltmp3032-.Ltmp3031             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7c3f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7c46:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\302\004"                      # DW_AT_low_pc
	.long	.Ltmp3032-.Ltmp3031             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7c55:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7c60:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\303\004"                      # DW_AT_low_pc
	.long	.Ltmp3062-.Ltmp3036             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	325                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7c6f:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7c78:0x7 DW_TAG_formal_parameter
	.ascii	"\246\003"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7c7f:0x7 DW_TAG_variable
	.ascii	"\247\003"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7c86:0x7 DW_TAG_variable
	.ascii	"\250\003"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7c8d:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\304\004"                      # DW_AT_low_pc
	.long	.Ltmp3052-.Ltmp3046             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7c9b:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x7ca4:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7cab:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7cb1:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\305\004"                      # DW_AT_low_pc
	.long	.Ltmp3051-.Ltmp3050             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7cbf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7cc6:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\305\004"                      # DW_AT_low_pc
	.long	.Ltmp3051-.Ltmp3050             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7cd5:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7cdf:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	101                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7ce8:0x7 DW_TAG_formal_parameter
	.ascii	"\252\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7cef:0x7 DW_TAG_formal_parameter
	.ascii	"\251\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7cf6:0x7 DW_TAG_formal_parameter
	.ascii	"\253\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7cfd:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\306\004"                      # DW_AT_low_pc
	.long	.Ltmp3061-.Ltmp3060             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7d0b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7d12:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\306\004"                      # DW_AT_low_pc
	.long	.Ltmp3061-.Ltmp3060             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7d21:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7d2c:0x81 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\307\004"                      # DW_AT_low_pc
	.long	.Ltmp3080-.Ltmp3063             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	327                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7d3b:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7d44:0x7 DW_TAG_formal_parameter
	.ascii	"\254\003"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7d4b:0x7 DW_TAG_variable
	.ascii	"\255\003"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7d52:0x7 DW_TAG_variable
	.ascii	"\256\003"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7d59:0x53 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\310\004"                      # DW_AT_low_pc
	.long	.Ltmp3080-.Ltmp3072             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7d67:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7d70:0x7 DW_TAG_formal_parameter
	.ascii	"\257\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7d77:0x7 DW_TAG_formal_parameter
	.ascii	"\260\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7d7e:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\311\004"                      # DW_AT_low_pc
	.long	.Ltmp3079-.Ltmp3078             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7d8c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7d93:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\311\004"                      # DW_AT_low_pc
	.long	.Ltmp3079-.Ltmp3078             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7da2:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7dad:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\312\004"                      # DW_AT_low_pc
	.long	.Ltmp3109-.Ltmp3083             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	331                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7dbc:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7dc5:0x7 DW_TAG_formal_parameter
	.ascii	"\261\003"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7dcc:0x7 DW_TAG_variable
	.ascii	"\262\003"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7dd3:0x7 DW_TAG_variable
	.ascii	"\263\003"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7dda:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\313\004"                      # DW_AT_low_pc
	.long	.Ltmp3099-.Ltmp3093             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7de8:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x7df1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x7df8:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7dfe:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\314\004"                      # DW_AT_low_pc
	.long	.Ltmp3098-.Ltmp3097             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7e0c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7e13:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\314\004"                      # DW_AT_low_pc
	.long	.Ltmp3098-.Ltmp3097             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7e22:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x7e2c:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	102                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7e35:0x7 DW_TAG_formal_parameter
	.ascii	"\265\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7e3c:0x7 DW_TAG_formal_parameter
	.ascii	"\264\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7e43:0x7 DW_TAG_formal_parameter
	.ascii	"\266\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7e4a:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\315\004"                      # DW_AT_low_pc
	.long	.Ltmp3108-.Ltmp3107             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7e58:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7e5f:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\315\004"                      # DW_AT_low_pc
	.long	.Ltmp3108-.Ltmp3107             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7e6e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7e79:0x81 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.ascii	"\316\004"                      # DW_AT_low_pc
	.long	.Ltmp3129-.Ltmp3112             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	334                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7e88:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7e91:0x7 DW_TAG_formal_parameter
	.ascii	"\267\003"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7e98:0x7 DW_TAG_variable
	.ascii	"\270\003"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7e9f:0x7 DW_TAG_variable
	.ascii	"\271\003"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7ea6:0x53 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\317\004"                      # DW_AT_low_pc
	.long	.Ltmp3129-.Ltmp3121             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7eb4:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7ebd:0x7 DW_TAG_formal_parameter
	.ascii	"\272\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7ec4:0x7 DW_TAG_formal_parameter
	.ascii	"\273\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7ecb:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\320\004"                      # DW_AT_low_pc
	.long	.Ltmp3128-.Ltmp3127             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7ed9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7ee0:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\320\004"                      # DW_AT_low_pc
	.long	.Ltmp3128-.Ltmp3127             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7eef:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7efa:0x73 DW_TAG_inlined_subroutine
	.long	35050                           # DW_AT_abstract_origin
	.byte	103                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	335                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7f04:0x7 DW_TAG_formal_parameter
	.ascii	"\275\003"                      # DW_AT_location
	.long	35055                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7f0b:0x7 DW_TAG_formal_parameter
	.ascii	"\274\003"                      # DW_AT_location
	.long	35064                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7f12:0x7 DW_TAG_variable
	.ascii	"\276\003"                      # DW_AT_location
	.long	35073                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x7f19:0x7 DW_TAG_variable
	.ascii	"\277\003"                      # DW_AT_location
	.long	35082                           # DW_AT_abstract_origin
	.byte	117                             # Abbrev [117] 0x7f20:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	104                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	248                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7f29:0x7 DW_TAG_formal_parameter
	.ascii	"\301\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7f30:0x7 DW_TAG_formal_parameter
	.ascii	"\300\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7f37:0x7 DW_TAG_formal_parameter
	.ascii	"\302\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7f3e:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\321\004"                      # DW_AT_low_pc
	.long	.Ltmp3147-.Ltmp3146             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7f4c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x7f53:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\321\004"                      # DW_AT_low_pc
	.long	.Ltmp3147-.Ltmp3146             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7f62:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x7f6e:0x82 DW_TAG_inlined_subroutine
	.long	35092                           # DW_AT_abstract_origin
	.ascii	"\322\004"                      # DW_AT_low_pc
	.long	.Ltmp3163-.Ltmp3151             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1804                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7f7d:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35097                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7f86:0x3d DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\323\004"                      # DW_AT_low_pc
	.long	.Ltmp3158-.Ltmp3152             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	177                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7f94:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x7f9d:0x7 DW_TAG_formal_parameter
	.ascii	"\303\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7fa4:0x1e DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\324\004"                      # DW_AT_low_pc
	.long	.Ltmp3157-.Ltmp3156             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x7fb2:0xf DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\324\004"                      # DW_AT_low_pc
	.long	.Ltmp3157-.Ltmp3156             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	98                              # Abbrev [98] 0x7fc3:0x2c DW_TAG_inlined_subroutine
	.long	35107                           # DW_AT_abstract_origin
	.ascii	"\325\004"                      # DW_AT_low_pc
	.long	.Ltmp3163-.Ltmp3158             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	178                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7fd1:0x7 DW_TAG_formal_parameter
	.ascii	"\304\003"                      # DW_AT_location
	.long	35112                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x7fd8:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\326\004"                      # DW_AT_low_pc
	.long	.Ltmp3162-.Ltmp3161             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	96                              # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x7fe6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x7ff0:0x7f DW_TAG_inlined_subroutine
	.long	21256                           # DW_AT_abstract_origin
	.byte	105                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2013                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x7ffa:0x7 DW_TAG_formal_parameter
	.ascii	"\310\003"                      # DW_AT_location
	.long	21262                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x8001:0x2f DW_TAG_inlined_subroutine
	.long	21232                           # DW_AT_abstract_origin
	.byte	106                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.short	261                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x800b:0x7 DW_TAG_formal_parameter
	.ascii	"\311\003"                      # DW_AT_location
	.long	21237                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8012:0x7 DW_TAG_formal_parameter
	.ascii	"\312\003"                      # DW_AT_location
	.long	21246                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x8019:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\327\004"                      # DW_AT_low_pc
	.long	.Ltmp3176-.Ltmp3175             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	164                             # DW_AT_call_line
	.byte	23                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8027:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x8030:0x3e DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	107                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.short	262                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x803a:0x7 DW_TAG_formal_parameter
	.ascii	"\313\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8041:0x7 DW_TAG_formal_parameter
	.ascii	"\314\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8048:0x7 DW_TAG_formal_parameter
	.ascii	"\315\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x804f:0x1e DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\330\004"                      # DW_AT_low_pc
	.long	.Ltmp3437-.Ltmp3436             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	99                              # Abbrev [99] 0x805d:0xf DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\330\004"                      # DW_AT_low_pc
	.long	.Ltmp3437-.Ltmp3436             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x806f:0x28 DW_TAG_inlined_subroutine
	.long	35107                           # DW_AT_abstract_origin
	.byte	108                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2014                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x8079:0x7 DW_TAG_formal_parameter
	.ascii	"\350\003"                      # DW_AT_location
	.long	35112                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x8080:0x16 DW_TAG_inlined_subroutine
	.long	19646                           # DW_AT_abstract_origin
	.ascii	"\331\004"                      # DW_AT_low_pc
	.long	.Ltmp3441-.Ltmp3440             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	96                              # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x808e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	19656                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x8097:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\332\004"                      # DW_AT_low_pc
	.long	.Ltmp3512-.Ltmp3486             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2011                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x80a6:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x80af:0x7 DW_TAG_formal_parameter
	.ascii	"\354\003"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x80b6:0x7 DW_TAG_variable
	.ascii	"\355\003"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x80bd:0x7 DW_TAG_variable
	.ascii	"\356\003"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x80c4:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\333\004"                      # DW_AT_low_pc
	.long	.Ltmp3504-.Ltmp3498             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x80d2:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x80db:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x80e2:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x80e8:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\334\004"                      # DW_AT_low_pc
	.long	.Ltmp3503-.Ltmp3502             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x80f6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x80fd:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\334\004"                      # DW_AT_low_pc
	.long	.Ltmp3503-.Ltmp3502             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x810c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x8116:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	109                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x811f:0x7 DW_TAG_formal_parameter
	.ascii	"\360\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8126:0x7 DW_TAG_formal_parameter
	.ascii	"\357\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x812d:0x7 DW_TAG_formal_parameter
	.ascii	"\361\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x8134:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\335\004"                      # DW_AT_low_pc
	.long	.Ltmp3511-.Ltmp3510             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8142:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x8149:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\335\004"                      # DW_AT_low_pc
	.long	.Ltmp3511-.Ltmp3510             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8158:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x8163:0x1ca DW_TAG_lexical_block
	.byte	110                             # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x8165:0x7 DW_TAG_variable
	.ascii	"\335\003"                      # DW_AT_location
	.long	34725                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x816c:0x7 DW_TAG_variable
	.ascii	"\336\003"                      # DW_AT_location
	.long	34735                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x8173:0x19 DW_TAG_inlined_subroutine
	.long	35122                           # DW_AT_abstract_origin
	.ascii	"\336\004"                      # DW_AT_low_pc
	.long	.Ltmp3190-.Ltmp3189             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1819                            # DW_AT_call_line
	.byte	44                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8182:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	35131                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x818c:0x37 DW_TAG_inlined_subroutine
	.long	35146                           # DW_AT_abstract_origin
	.byte	111                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1850                            # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x8196:0x7 DW_TAG_formal_parameter
	.ascii	"\317\003"                      # DW_AT_location
	.long	35156                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x819d:0x7 DW_TAG_variable
	.ascii	"\320\003"                      # DW_AT_location
	.long	35166                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x81a4:0x1e DW_TAG_lexical_block
	.ascii	"\337\004"                      # DW_AT_low_pc
	.long	.Ltmp3232-.Ltmp3217             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x81ab:0x7 DW_TAG_variable
	.ascii	"\321\003"                      # DW_AT_location
	.long	35183                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x81b2:0xf DW_TAG_lexical_block
	.ascii	"\340\004"                      # DW_AT_low_pc
	.long	.Ltmp3232-.Ltmp3225             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x81b9:0x7 DW_TAG_variable
	.ascii	"\322\003"                      # DW_AT_location
	.long	35194                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x81c3:0xcc DW_TAG_inlined_subroutine
	.long	35008                           # DW_AT_abstract_origin
	.ascii	"\341\004"                      # DW_AT_low_pc
	.long	.Ltmp3287-.Ltmp3259             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1875                            # DW_AT_call_line
	.byte	21                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x81d2:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	35013                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x81db:0x7 DW_TAG_formal_parameter
	.ascii	"\323\003"                      # DW_AT_location
	.long	35022                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x81e2:0x7 DW_TAG_variable
	.ascii	"\324\003"                      # DW_AT_location
	.long	35031                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x81e9:0x7 DW_TAG_variable
	.ascii	"\325\003"                      # DW_AT_location
	.long	35040                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x81f0:0x52 DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.ascii	"\342\004"                      # DW_AT_low_pc
	.long	.Ltmp3277-.Ltmp3270             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	223                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x81fe:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	21162                           # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x8207:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	80
	.long	21171                           # DW_AT_abstract_origin
	.byte	49                              # Abbrev [49] 0x820e:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x8214:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\343\004"                      # DW_AT_low_pc
	.long	.Ltmp3276-.Ltmp3274             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x8222:0x7 DW_TAG_formal_parameter
	.ascii	"\326\003"                      # DW_AT_location
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x8229:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\343\004"                      # DW_AT_low_pc
	.long	.Ltmp3276-.Ltmp3274             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x8238:0x7 DW_TAG_formal_parameter
	.ascii	"\327\003"                      # DW_AT_location
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	117                             # Abbrev [117] 0x8242:0x4c DW_TAG_inlined_subroutine
	.long	21157                           # DW_AT_abstract_origin
	.byte	112                             # DW_AT_ranges
	.byte	4                               # DW_AT_call_file
	.byte	224                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x824b:0x7 DW_TAG_formal_parameter
	.ascii	"\331\003"                      # DW_AT_location
	.long	21162                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8252:0x7 DW_TAG_formal_parameter
	.ascii	"\330\003"                      # DW_AT_location
	.long	21171                           # DW_AT_abstract_origin
	.byte	20                              # Abbrev [20] 0x8259:0x7 DW_TAG_formal_parameter
	.ascii	"\332\003"                      # DW_AT_location
	.long	21180                           # DW_AT_abstract_origin
	.byte	98                              # Abbrev [98] 0x8260:0x2d DW_TAG_inlined_subroutine
	.long	21211                           # DW_AT_abstract_origin
	.ascii	"\344\004"                      # DW_AT_low_pc
	.long	.Ltmp3285-.Ltmp3283             # DW_AT_high_pc
	.byte	4                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	27                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x826e:0x7 DW_TAG_formal_parameter
	.ascii	"\333\003"                      # DW_AT_location
	.long	21221                           # DW_AT_abstract_origin
	.byte	22                              # Abbrev [22] 0x8275:0x17 DW_TAG_inlined_subroutine
	.long	21190                           # DW_AT_abstract_origin
	.ascii	"\344\004"                      # DW_AT_low_pc
	.long	.Ltmp3285-.Ltmp3283             # DW_AT_high_pc
	.byte	28                              # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	29                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x8284:0x7 DW_TAG_formal_parameter
	.ascii	"\334\003"                      # DW_AT_location
	.long	21200                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x828f:0x14 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	113                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1882                            # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8299:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x82a3:0x19 DW_TAG_inlined_subroutine
	.long	35122                           # DW_AT_abstract_origin
	.ascii	"\345\004"                      # DW_AT_low_pc
	.long	.Ltmp3291-.Ltmp3290             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	1882                            # DW_AT_call_line
	.byte	47                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x82b2:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	35131                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x82bc:0xf DW_TAG_lexical_block
	.ascii	"\346\004"                      # DW_AT_low_pc
	.long	.Ltmp3338-.Ltmp3334             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x82c3:0x7 DW_TAG_variable
	.ascii	"\341\003"                      # DW_AT_location
	.long	34766                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	17                              # Abbrev [17] 0x82cb:0x1e DW_TAG_lexical_block
	.byte	114                             # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x82cd:0x7 DW_TAG_variable
	.ascii	"\342\003"                      # DW_AT_location
	.long	34777                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x82d4:0x14 DW_TAG_lexical_block
	.byte	115                             # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x82d6:0x7 DW_TAG_variable
	.ascii	"\343\003"                      # DW_AT_location
	.long	34788                           # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x82dd:0xa DW_TAG_lexical_block
	.byte	116                             # DW_AT_ranges
	.byte	21                              # Abbrev [21] 0x82df:0x7 DW_TAG_variable
	.ascii	"\344\003"                      # DW_AT_location
	.long	34798                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x82e9:0xf DW_TAG_lexical_block
	.ascii	"\347\004"                      # DW_AT_low_pc
	.long	.Ltmp3318-.Ltmp3316             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x82f0:0x7 DW_TAG_variable
	.ascii	"\337\003"                      # DW_AT_location
	.long	34812                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x82f8:0xf DW_TAG_lexical_block
	.ascii	"\350\004"                      # DW_AT_low_pc
	.long	.Ltmp3330-.Ltmp3326             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x82ff:0x7 DW_TAG_variable
	.ascii	"\340\003"                      # DW_AT_location
	.long	34824                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x8307:0xf DW_TAG_lexical_block
	.ascii	"\351\004"                      # DW_AT_low_pc
	.long	.Ltmp3394-.Ltmp3378             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x830e:0x7 DW_TAG_variable
	.ascii	"\345\003"                      # DW_AT_location
	.long	34835                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x8316:0x16 DW_TAG_lexical_block
	.ascii	"\352\004"                      # DW_AT_low_pc
	.long	.Ltmp3405-.Ltmp3398             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x831d:0x7 DW_TAG_variable
	.ascii	"\346\003"                      # DW_AT_location
	.long	34846                           # DW_AT_abstract_origin
	.byte	21                              # Abbrev [21] 0x8324:0x7 DW_TAG_variable
	.ascii	"\347\003"                      # DW_AT_location
	.long	34856                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	22                              # Abbrev [22] 0x832d:0x4a DW_TAG_inlined_subroutine
	.long	19686                           # DW_AT_abstract_origin
	.ascii	"\353\004"                      # DW_AT_low_pc
	.long	.Ltmp3471-.Ltmp3452             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	2016                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x833c:0x7 DW_TAG_formal_parameter
	.ascii	"\351\003"                      # DW_AT_location
	.long	19696                           # DW_AT_abstract_origin
	.byte	19                              # Abbrev [19] 0x8343:0x12 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	117                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1267                            # DW_AT_call_line
	.byte	42                              # DW_AT_call_column
	.byte	20                              # Abbrev [20] 0x834d:0x7 DW_TAG_formal_parameter
	.ascii	"\352\003"                      # DW_AT_location
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x8355:0x21 DW_TAG_inlined_subroutine
	.long	19717                           # DW_AT_abstract_origin
	.byte	118                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1270                            # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x835f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	19727                           # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x8366:0xf DW_TAG_lexical_block
	.ascii	"\354\004"                      # DW_AT_low_pc
	.long	.Ltmp3471-.Ltmp3463             # DW_AT_high_pc
	.byte	21                              # Abbrev [21] 0x836d:0x7 DW_TAG_variable
	.ascii	"\353\003"                      # DW_AT_location
	.long	19738                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x8377:0x14 DW_TAG_inlined_subroutine
	.long	19667                           # DW_AT_abstract_origin
	.byte	119                             # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	2021                            # DW_AT_call_line
	.byte	37                              # DW_AT_call_column
	.byte	23                              # Abbrev [23] 0x8381:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\370"
	.long	19676                           # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x838c:0x7 DW_TAG_call_site
	.long	35206                           # DW_AT_call_origin
	.ascii	"\355\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x8393:0x7 DW_TAG_call_site
	.long	35218                           # DW_AT_call_origin
	.ascii	"\356\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x839a:0x7 DW_TAG_call_site
	.long	35244                           # DW_AT_call_origin
	.ascii	"\357\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83a1:0x7 DW_TAG_call_site
	.long	34273                           # DW_AT_call_origin
	.ascii	"\360\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83a8:0x7 DW_TAG_call_site
	.long	35265                           # DW_AT_call_origin
	.ascii	"\361\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83af:0x7 DW_TAG_call_site
	.long	35287                           # DW_AT_call_origin
	.ascii	"\362\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83b6:0x7 DW_TAG_call_site
	.long	35298                           # DW_AT_call_origin
	.ascii	"\363\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83bd:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\364\004"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x83c4:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	94
	.ascii	"\365\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83c9:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\366\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83d0:0x7 DW_TAG_call_site
	.long	35309                           # DW_AT_call_origin
	.ascii	"\367\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83d7:0x7 DW_TAG_call_site
	.long	35309                           # DW_AT_call_origin
	.ascii	"\370\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83de:0x7 DW_TAG_call_site
	.long	35325                           # DW_AT_call_origin
	.ascii	"\371\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83e5:0x7 DW_TAG_call_site
	.long	35341                           # DW_AT_call_origin
	.ascii	"\372\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83ec:0x7 DW_TAG_call_site
	.long	35352                           # DW_AT_call_origin
	.ascii	"\373\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83f3:0x7 DW_TAG_call_site
	.long	35363                           # DW_AT_call_origin
	.ascii	"\374\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x83fa:0x7 DW_TAG_call_site
	.long	35375                           # DW_AT_call_origin
	.ascii	"\375\004"                      # DW_AT_call_return_pc
	.byte	43                              # Abbrev [43] 0x8401:0x5 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	94
	.ascii	"\376\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x8406:0x7 DW_TAG_call_site
	.long	35387                           # DW_AT_call_origin
	.ascii	"\377\004"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x840d:0x7 DW_TAG_call_site
	.long	35403                           # DW_AT_call_origin
	.ascii	"\200\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x8414:0x7 DW_TAG_call_site
	.long	4738                            # DW_AT_call_origin
	.ascii	"\201\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x841b:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\202\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x8422:0x7 DW_TAG_call_site
	.long	34273                           # DW_AT_call_origin
	.ascii	"\203\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x8429:0x7 DW_TAG_call_site
	.long	18396                           # DW_AT_call_origin
	.ascii	"\204\005"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x8431:0x1b DW_TAG_subprogram
	.short	1042                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2050                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x8437:0xa DW_TAG_formal_parameter
	.short	981                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2050                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x8441:0xa DW_TAG_formal_parameter
	.short	982                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2050                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	89                              # Abbrev [89] 0x844c:0x25 DW_TAG_subprogram
	.short	1043                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3911                            # DW_AT_type
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x8455:0x9 DW_TAG_formal_parameter
	.short	1044                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x845e:0x9 DW_TAG_formal_parameter
	.short	873                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.long	13691                           # DW_AT_type
	.byte	95                              # Abbrev [95] 0x8467:0x9 DW_TAG_variable
	.short	1045                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x8471:0x36 DW_TAG_subprogram
	.short	1046                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x8476:0x9 DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x847f:0x9 DW_TAG_variable
	.short	1047                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	82                              # DW_AT_decl_line
	.long	33959                           # DW_AT_type
	.byte	95                              # Abbrev [95] 0x8488:0x9 DW_TAG_variable
	.short	1048                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	83                              # DW_AT_decl_line
	.long	18874                           # DW_AT_type
	.byte	97                              # Abbrev [97] 0x8491:0x15 DW_TAG_lexical_block
	.byte	119                             # Abbrev [119] 0x8492:0x8 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x849a:0xb DW_TAG_lexical_block
	.byte	95                              # Abbrev [95] 0x849b:0x9 DW_TAG_variable
	.short	1049                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x84a7:0xd DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	30                              # Abbrev [30] 0x84ac:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	256                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x84b4:0x2d DW_TAG_subprogram
	.short	1050                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x84b9:0x9 DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x84c2:0x9 DW_TAG_variable
	.short	983                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.long	18874                           # DW_AT_type
	.byte	97                              # Abbrev [97] 0x84cb:0x15 DW_TAG_lexical_block
	.byte	119                             # Abbrev [119] 0x84cc:0x8 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x84d4:0xb DW_TAG_lexical_block
	.byte	95                              # Abbrev [95] 0x84d5:0x9 DW_TAG_variable
	.short	1049                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x84e1:0xf DW_TAG_subprogram
	.short	1051                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x84ea:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x84f0:0x10 DW_TAG_subprogram
	.short	1052                            # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x84f5:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x84fa:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x8500:0x19 DW_TAG_subprogram
	.short	1053                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8509:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x850e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8513:0x5 DW_TAG_formal_parameter
	.long	4061                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8519:0x15 DW_TAG_subprogram
	.short	1054                            # DW_AT_name
	.byte	18                              # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x851e:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8523:0x5 DW_TAG_formal_parameter
	.long	19641                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8528:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x852e:0xb DW_TAG_subprogram
	.short	1055                            # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8533:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x8539:0xf DW_TAG_subprogram
	.short	1056                            # DW_AT_name
	.byte	23                              # DW_AT_decl_file
	.byte	107                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3927                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8542:0x5 DW_TAG_formal_parameter
	.long	3927                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x8548:0x1b DW_TAG_subprogram
	.short	1057                            # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8552:0x5 DW_TAG_formal_parameter
	.long	18711                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8557:0x5 DW_TAG_formal_parameter
	.long	16615                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x855c:0x5 DW_TAG_formal_parameter
	.long	18716                           # DW_AT_type
	.byte	82                              # Abbrev [82] 0x8561:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x8563:0x10 DW_TAG_subprogram
	.short	1058                            # DW_AT_name
	.byte	20                              # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	4057                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x856d:0x5 DW_TAG_formal_parameter
	.long	2224                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8573:0x10 DW_TAG_subprogram
	.short	1059                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	197                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8578:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x857d:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	86                              # Abbrev [86] 0x8583:0x1f DW_TAG_subprogram
	.short	1060                            # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.short	681                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	4057                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x858d:0x5 DW_TAG_formal_parameter
	.long	34210                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8592:0x5 DW_TAG_formal_parameter
	.long	16615                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8597:0x5 DW_TAG_formal_parameter
	.long	16615                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x859c:0x5 DW_TAG_formal_parameter
	.long	34215                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	87                              # Abbrev [87] 0x85a2:0x5 DW_TAG_restrict_type
	.long	16609                           # DW_AT_type
	.byte	87                              # Abbrev [87] 0x85a7:0x5 DW_TAG_restrict_type
	.long	18874                           # DW_AT_type
	.byte	86                              # Abbrev [86] 0x85ac:0x1a DW_TAG_subprogram
	.short	1061                            # DW_AT_name
	.byte	21                              # DW_AT_decl_file
	.short	713                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x85b6:0x5 DW_TAG_formal_parameter
	.long	18874                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x85bb:0x5 DW_TAG_formal_parameter
	.long	3923                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x85c0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x85c6:0x10 DW_TAG_subprogram
	.short	1062                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	29                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x85cb:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x85d0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x85d6:0xb DW_TAG_subprogram
	.short	1063                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x85db:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	80                              # Abbrev [80] 0x85e1:0x122 DW_TAG_subprogram
	.ascii	"\340\005"                      # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1155                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1569                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	11                              # Abbrev [11] 0x85ef:0xc DW_TAG_formal_parameter
	.ascii	"\263\004"                      # DW_AT_location
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1569                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x85fb:0xc DW_TAG_formal_parameter
	.ascii	"\264\004"                      # DW_AT_location
	.short	1243                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1569                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x8607:0xc DW_TAG_formal_parameter
	.ascii	"\265\004"                      # DW_AT_location
	.short	1244                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1569                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x8613:0xc DW_TAG_variable
	.ascii	"\266\004"                      # DW_AT_location
	.short	1076                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1572                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x861f:0xc DW_TAG_variable
	.ascii	"\267\004"                      # DW_AT_location
	.short	1245                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1575                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x862b:0xc DW_TAG_variable
	.ascii	"\270\004"                      # DW_AT_location
	.short	1246                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1576                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x8637:0xc DW_TAG_variable
	.ascii	"\271\004"                      # DW_AT_location
	.short	1247                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1578                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x8643:0xc DW_TAG_variable
	.ascii	"\272\004"                      # DW_AT_location
	.short	1075                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1573                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x864f:0xa DW_TAG_variable
	.short	1248                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1574                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8659:0xa DW_TAG_variable
	.short	1249                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1577                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x8663:0x27 DW_TAG_lexical_block
	.ascii	"\341\005"                      # DW_AT_low_pc
	.long	.Ltmp4131-.Ltmp4124             # DW_AT_high_pc
	.byte	13                              # Abbrev [13] 0x866a:0xc DW_TAG_variable
	.ascii	"\273\004"                      # DW_AT_location
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1591                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x8676:0x13 DW_TAG_lexical_block
	.ascii	"\342\005"                      # DW_AT_low_pc
	.long	.Ltmp4128-.Ltmp4125             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x867d:0xb DW_TAG_variable
	.ascii	"\274\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1592                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x868a:0x14 DW_TAG_lexical_block
	.ascii	"\343\005"                      # DW_AT_low_pc
	.long	.Ltmp4137-.Ltmp4133             # DW_AT_high_pc
	.byte	12                              # Abbrev [12] 0x8691:0xc DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	95
	.short	1049                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1600                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x869e:0x12 DW_TAG_lexical_block
	.ascii	"\344\005"                      # DW_AT_low_pc
	.long	.Ltmp4144-.Ltmp4138             # DW_AT_high_pc
	.byte	18                              # Abbrev [18] 0x86a5:0xa DW_TAG_variable
	.short	1250                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1605                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x86b0:0x13 DW_TAG_lexical_block
	.ascii	"\345\005"                      # DW_AT_low_pc
	.long	.Ltmp4168-.Ltmp4162             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x86b7:0xb DW_TAG_variable
	.ascii	"\275\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1623                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x86c3:0x7 DW_TAG_call_site
	.long	35669                           # DW_AT_call_origin
	.ascii	"\346\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86ca:0x7 DW_TAG_call_site
	.long	35685                           # DW_AT_call_origin
	.ascii	"\347\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86d1:0x7 DW_TAG_call_site
	.long	35711                           # DW_AT_call_origin
	.ascii	"\350\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86d8:0x7 DW_TAG_call_site
	.long	35737                           # DW_AT_call_origin
	.ascii	"\351\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86df:0x7 DW_TAG_call_site
	.long	35763                           # DW_AT_call_origin
	.ascii	"\352\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86e6:0x7 DW_TAG_call_site
	.long	35779                           # DW_AT_call_origin
	.ascii	"\353\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86ed:0x7 DW_TAG_call_site
	.long	35779                           # DW_AT_call_origin
	.ascii	"\354\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86f4:0x7 DW_TAG_call_site
	.long	35779                           # DW_AT_call_origin
	.ascii	"\355\005"                      # DW_AT_call_return_pc
	.byte	24                              # Abbrev [24] 0x86fb:0x7 DW_TAG_call_site
	.long	35824                           # DW_AT_call_origin
	.ascii	"\356\005"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8703:0xb DW_TAG_subprogram
	.short	1064                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8708:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	96                              # Abbrev [96] 0x870e:0x127 DW_TAG_subprogram
	.short	1065                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1767                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x8718:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1767                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8722:0xa DW_TAG_variable
	.short	1066                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1772                            # DW_AT_decl_line
	.long	10713                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x872c:0xa DW_TAG_variable
	.short	1067                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1773                            # DW_AT_decl_line
	.long	12657                           # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8736:0xa DW_TAG_variable
	.short	1068                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1771                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8740:0xa DW_TAG_variable
	.short	1069                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1774                            # DW_AT_decl_line
	.long	2120                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x874a:0xa DW_TAG_variable
	.short	608                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1770                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8754:0xa DW_TAG_variable
	.short	607                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1770                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x875e:0xa DW_TAG_variable
	.short	1070                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1769                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8768:0xa DW_TAG_variable
	.short	1071                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1770                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8772:0xa DW_TAG_variable
	.short	1072                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1777                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x877c:0xa DW_TAG_variable
	.short	1073                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1778                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8786:0xa DW_TAG_variable
	.short	1074                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1779                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8790:0xa DW_TAG_variable
	.short	1075                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1780                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x879a:0xa DW_TAG_variable
	.short	1076                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1781                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x87a4:0x90 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x87a5:0xa DW_TAG_variable
	.short	1077                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1882                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x87af:0xa DW_TAG_variable
	.short	1078                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1883                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x87b9:0xa DW_TAG_variable
	.short	1079                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1819                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x87c3:0xa DW_TAG_variable
	.short	1080                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1924                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x87cd:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x87ce:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1932                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x87d8:0x23 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x87d9:0xa DW_TAG_variable
	.short	1081                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1935                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x87e3:0x17 DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x87e4:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1936                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x87ed:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x87ee:0xa DW_TAG_variable
	.short	529                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1938                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x87fb:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x87fc:0xa DW_TAG_variable
	.short	1082                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1949                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x8807:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x8808:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1965                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x8812:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x8813:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1968                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x881d:0x16 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x881e:0xa DW_TAG_variable
	.short	1083                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1977                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8828:0xa DW_TAG_variable
	.short	313                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1978                            # DW_AT_decl_line
	.long	17910                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x8835:0x18 DW_TAG_subprogram
	.short	1084                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x883a:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	95                              # Abbrev [95] 0x8843:0x9 DW_TAG_variable
	.short	967                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	103                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x884d:0x6e DW_TAG_subprogram
	.short	1085                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x8852:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x885b:0x9 DW_TAG_formal_parameter
	.short	432                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.long	35003                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x8864:0x9 DW_TAG_formal_parameter
	.short	328                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x886d:0xa DW_TAG_lexical_block
	.byte	119                             # Abbrev [119] 0x886e:0x8 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x8877:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x8878:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	262                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x8882:0x2d DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x8883:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	276                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x888c:0x22 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x888d:0xa DW_TAG_variable
	.short	1086                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x8897:0xa DW_TAG_variable
	.short	1087                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x88a1:0xc DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x88a2:0xa DW_TAG_variable
	.short	985                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	289                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	97                              # Abbrev [97] 0x88af:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x88b0:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	314                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x88bb:0x5 DW_TAG_pointer_type
	.long	11958                           # DW_AT_type
	.byte	94                              # Abbrev [94] 0x88c0:0x2a DW_TAG_subprogram
	.short	1088                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	208                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x88c5:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	208                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x88ce:0x9 DW_TAG_formal_parameter
	.short	1089                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	208                             # DW_AT_decl_line
	.long	3497                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x88d7:0x9 DW_TAG_variable
	.short	1090                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	210                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x88e0:0x9 DW_TAG_variable
	.short	1091                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	211                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x88ea:0x2a DW_TAG_subprogram
	.short	1092                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x88ef:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	90                              # Abbrev [90] 0x88f8:0x9 DW_TAG_formal_parameter
	.short	1089                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	233                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x8901:0x9 DW_TAG_variable
	.short	1090                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	235                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	95                              # Abbrev [95] 0x890a:0x9 DW_TAG_variable
	.short	1091                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	238                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x8914:0xf DW_TAG_subprogram
	.short	1093                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x8919:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	175                             # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	94                              # Abbrev [94] 0x8923:0xf DW_TAG_subprogram
	.short	1094                            # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x8928:0x9 DW_TAG_formal_parameter
	.short	964                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.long	19641                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	89                              # Abbrev [89] 0x8932:0x13 DW_TAG_subprogram
	.short	1095                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	90                              # Abbrev [90] 0x893b:0x9 DW_TAG_formal_parameter
	.short	1096                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	76                              # DW_AT_decl_line
	.long	35141                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x8945:0x5 DW_TAG_pointer_type
	.long	12657                           # DW_AT_type
	.byte	96                              # Abbrev [96] 0x894a:0x3c DW_TAG_subprogram
	.short	1097                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	342                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x8954:0xa DW_TAG_formal_parameter
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	342                             # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x895e:0xa DW_TAG_variable
	.short	1066                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	344                             # DW_AT_decl_line
	.long	3931                            # DW_AT_type
	.byte	120                             # Abbrev [120] 0x8968:0x6 DW_TAG_label
	.short	1098                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	366                             # DW_AT_decl_line
	.byte	97                              # Abbrev [97] 0x896e:0x17 DW_TAG_lexical_block
	.byte	18                              # Abbrev [18] 0x896f:0xa DW_TAG_variable
	.short	1099                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	351                             # DW_AT_decl_line
	.long	3915                            # DW_AT_type
	.byte	97                              # Abbrev [97] 0x8979:0xb DW_TAG_lexical_block
	.byte	47                              # Abbrev [47] 0x897a:0x9 DW_TAG_variable
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	361                             # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8986:0xc DW_TAG_subprogram
	.short	1100                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	277                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x898c:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8992:0x1a DW_TAG_subprogram
	.short	1101                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8997:0x5 DW_TAG_formal_parameter
	.long	35141                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x899c:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89a1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89a6:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x89ac:0x15 DW_TAG_subprogram
	.short	1102                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x89b1:0x5 DW_TAG_formal_parameter
	.long	35141                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89b6:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89bb:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x89c1:0x16 DW_TAG_subprogram
	.short	1103                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	278                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x89c7:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89cc:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89d1:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x89d7:0xb DW_TAG_subprogram
	.short	1104                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x89dc:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x89e2:0xb DW_TAG_subprogram
	.short	1105                            # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x89e7:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x89ed:0x10 DW_TAG_subprogram
	.short	1106                            # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x89f2:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x89f7:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x89fd:0x10 DW_TAG_subprogram
	.short	1107                            # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a02:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8a07:0x5 DW_TAG_formal_parameter
	.long	35141                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8a0d:0xb DW_TAG_subprogram
	.short	1108                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a12:0x5 DW_TAG_formal_parameter
	.long	35141                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8a18:0xb DW_TAG_subprogram
	.short	1109                            # DW_AT_name
	.byte	19                              # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a1d:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8a23:0xc DW_TAG_subprogram
	.short	1110                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	281                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a29:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8a2f:0xc DW_TAG_subprogram
	.short	1111                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a35:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8a3b:0x10 DW_TAG_subprogram
	.short	1112                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a40:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8a45:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8a4b:0x10 DW_TAG_subprogram
	.short	1113                            # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a50:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8a55:0x5 DW_TAG_formal_parameter
	.long	35141                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	92                              # Abbrev [92] 0x8a5b:0x2e DW_TAG_subprogram
	.short	1114                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2824                            # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	93                              # Abbrev [93] 0x8a61:0xa DW_TAG_formal_parameter
	.short	603                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2824                            # DW_AT_decl_line
	.long	35465                           # DW_AT_type
	.byte	93                              # Abbrev [93] 0x8a6b:0xa DW_TAG_formal_parameter
	.short	997                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2824                            # DW_AT_decl_line
	.long	3927                            # DW_AT_type
	.byte	93                              # Abbrev [93] 0x8a75:0xa DW_TAG_formal_parameter
	.short	1115                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2824                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	121                             # Abbrev [121] 0x8a7f:0x9 DW_TAG_formal_parameter
	.byte	219                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	2824                            # DW_AT_decl_line
	.long	10436                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x8a89:0x5 DW_TAG_pointer_type
	.long	13691                           # DW_AT_type
	.byte	81                              # Abbrev [81] 0x8a8e:0xb DW_TAG_subprogram
	.short	1116                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a93:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8a99:0xb DW_TAG_subprogram
	.short	1117                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	173                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8a9e:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8aa4:0xb DW_TAG_subprogram
	.short	1118                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8aa9:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8aaf:0xb DW_TAG_subprogram
	.short	1119                            # DW_AT_name
	.byte	24                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8ab4:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8aba:0xc DW_TAG_subprogram
	.short	1120                            # DW_AT_name
	.byte	29                              # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8ac0:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8ac6:0xb DW_TAG_subprogram
	.short	1121                            # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	244                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8acb:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8ad1:0xb DW_TAG_subprogram
	.short	1122                            # DW_AT_name
	.byte	22                              # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8ad6:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8adc:0xb DW_TAG_subprogram
	.short	1123                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	203                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8ae1:0x5 DW_TAG_formal_parameter
	.long	12776                           # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8ae7:0xc DW_TAG_subprogram
	.short	1124                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	270                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8aed:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	109                             # Abbrev [109] 0x8af3:0x11 DW_TAG_subprogram
	.short	1125                            # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.short	274                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8af9:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8afe:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x8b04:0x51 DW_TAG_subprogram
	.ascii	"\332\005"                      # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.short	1153                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3178                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2644                            # DW_AT_type
                                        # DW_AT_external
	.byte	122                             # Abbrev [122] 0x8b16:0xc DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.short	960                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3178                            # DW_AT_decl_line
	.long	6059                            # DW_AT_type
	.byte	13                              # Abbrev [13] 0x8b22:0xc DW_TAG_variable
	.ascii	"\250\004"                      # DW_AT_location
	.short	1240                            # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3180                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	14                              # Abbrev [14] 0x8b2e:0x13 DW_TAG_lexical_block
	.ascii	"\333\005"                      # DW_AT_low_pc
	.long	.Ltmp4049-.Ltmp4031             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x8b35:0xb DW_TAG_variable
	.ascii	"\251\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3183                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	14                              # Abbrev [14] 0x8b41:0x13 DW_TAG_lexical_block
	.ascii	"\334\005"                      # DW_AT_low_pc
	.long	.Ltmp4055-.Ltmp4051             # DW_AT_high_pc
	.byte	16                              # Abbrev [16] 0x8b48:0xb DW_TAG_variable
	.ascii	"\252\004"                      # DW_AT_location
	.byte	148                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	3187                            # DW_AT_decl_line
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8b55:0x10 DW_TAG_subprogram
	.short	1126                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	182                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8b5a:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b5f:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8b65:0x1a DW_TAG_subprogram
	.short	1127                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	177                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8b6a:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b6f:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b74:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b79:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8b7f:0x1a DW_TAG_subprogram
	.short	1128                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	184                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8b84:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b89:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b8e:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8b93:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8b99:0x1a DW_TAG_subprogram
	.short	1129                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8b9e:0x5 DW_TAG_formal_parameter
	.long	6059                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8ba3:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8ba8:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bad:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	81                              # Abbrev [81] 0x8bb3:0x10 DW_TAG_subprogram
	.short	1130                            # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.byte	189                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8bb8:0x5 DW_TAG_formal_parameter
	.long	12781                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bbd:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x8bc3:0x2d DW_TAG_subprogram
	.short	1131                            # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	113                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	13691                           # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8bcc:0x5 DW_TAG_formal_parameter
	.long	18517                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bd1:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bd6:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bdb:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8be0:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8be5:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bea:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	79                              # Abbrev [79] 0x8bf0:0x32 DW_TAG_subprogram
	.short	1132                            # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	114                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3911                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	45                              # Abbrev [45] 0x8bf9:0x5 DW_TAG_formal_parameter
	.long	18517                           # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8bfe:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c03:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c08:0x5 DW_TAG_formal_parameter
	.long	3931                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c0d:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c12:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c17:0x5 DW_TAG_formal_parameter
	.long	2644                            # DW_AT_type
	.byte	45                              # Abbrev [45] 0x8c1c:0x5 DW_TAG_formal_parameter
	.long	3910                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x8c22:0xd DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	30                              # Abbrev [30] 0x8c27:0x7 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.short	1000                            # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	78                              # Abbrev [78] 0x8c2f:0x5 DW_TAG_volatile_type
	.long	2644                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0x8c34:0x5 DW_TAG_pointer_type
	.long	35897                           # DW_AT_type
	.byte	25                              # Abbrev [25] 0x8c39:0x5 DW_TAG_const_type
	.long	35902                           # DW_AT_type
	.byte	60                              # Abbrev [60] 0x8c3e:0xa DW_TAG_typedef
	.long	35912                           # DW_AT_type
	.short	1182                            # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	396                             # DW_AT_decl_line
	.byte	54                              # Abbrev [54] 0x8c48:0x95 DW_TAG_structure_type
	.byte	52                              # DW_AT_byte_size
	.byte	9                               # DW_AT_decl_file
	.short	382                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0x8c4d:0xb DW_TAG_member
	.short	1169                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	383                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c58:0xb DW_TAG_member
	.short	1170                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	384                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c63:0xb DW_TAG_member
	.short	1171                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	385                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c6e:0xb DW_TAG_member
	.short	1172                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	386                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c79:0xb DW_TAG_member
	.short	1173                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	387                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c84:0xb DW_TAG_member
	.short	1174                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	388                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c8f:0xb DW_TAG_member
	.short	1175                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	389                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8c9a:0xb DW_TAG_member
	.short	1176                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	390                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8ca5:0xb DW_TAG_member
	.short	1177                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	391                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8cb0:0xb DW_TAG_member
	.short	1178                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	392                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8cbb:0xb DW_TAG_member
	.short	1179                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	393                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8cc6:0xb DW_TAG_member
	.short	1180                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	394                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	55                              # Abbrev [55] 0x8cd1:0xb DW_TAG_member
	.short	1181                            # DW_AT_name
	.long	2644                            # DW_AT_type
	.byte	9                               # DW_AT_decl_file
	.short	395                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x8cdd:0x5 DW_TAG_pointer_type
	.long	10648                           # DW_AT_type
	.byte	4                               # Abbrev [4] 0x8ce2:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8ce7:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	80                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x8cee:0xc DW_TAG_array_type
	.long	96                              # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8cf3:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	200                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x8cfa:0x12 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8cff:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x8d05:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	7                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x8d0c:0x12 DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8d11:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	5                               # Abbrev [5] 0x8d17:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	4                               # Abbrev [4] 0x8d1e:0xc DW_TAG_array_type
	.long	13691                           # DW_AT_type
	.byte	5                               # Abbrev [5] 0x8d23:0x6 DW_TAG_subrange_type
	.long	100                             # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	127                             # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
	.long	.Ldebug_ranges27-.Lrnglists_table_base0
	.long	.Ldebug_ranges28-.Lrnglists_table_base0
	.long	.Ldebug_ranges29-.Lrnglists_table_base0
	.long	.Ldebug_ranges30-.Lrnglists_table_base0
	.long	.Ldebug_ranges31-.Lrnglists_table_base0
	.long	.Ldebug_ranges32-.Lrnglists_table_base0
	.long	.Ldebug_ranges33-.Lrnglists_table_base0
	.long	.Ldebug_ranges34-.Lrnglists_table_base0
	.long	.Ldebug_ranges35-.Lrnglists_table_base0
	.long	.Ldebug_ranges36-.Lrnglists_table_base0
	.long	.Ldebug_ranges37-.Lrnglists_table_base0
	.long	.Ldebug_ranges38-.Lrnglists_table_base0
	.long	.Ldebug_ranges39-.Lrnglists_table_base0
	.long	.Ldebug_ranges40-.Lrnglists_table_base0
	.long	.Ldebug_ranges41-.Lrnglists_table_base0
	.long	.Ldebug_ranges42-.Lrnglists_table_base0
	.long	.Ldebug_ranges43-.Lrnglists_table_base0
	.long	.Ldebug_ranges44-.Lrnglists_table_base0
	.long	.Ldebug_ranges45-.Lrnglists_table_base0
	.long	.Ldebug_ranges46-.Lrnglists_table_base0
	.long	.Ldebug_ranges47-.Lrnglists_table_base0
	.long	.Ldebug_ranges48-.Lrnglists_table_base0
	.long	.Ldebug_ranges49-.Lrnglists_table_base0
	.long	.Ldebug_ranges50-.Lrnglists_table_base0
	.long	.Ldebug_ranges51-.Lrnglists_table_base0
	.long	.Ldebug_ranges52-.Lrnglists_table_base0
	.long	.Ldebug_ranges53-.Lrnglists_table_base0
	.long	.Ldebug_ranges54-.Lrnglists_table_base0
	.long	.Ldebug_ranges55-.Lrnglists_table_base0
	.long	.Ldebug_ranges56-.Lrnglists_table_base0
	.long	.Ldebug_ranges57-.Lrnglists_table_base0
	.long	.Ldebug_ranges58-.Lrnglists_table_base0
	.long	.Ldebug_ranges59-.Lrnglists_table_base0
	.long	.Ldebug_ranges60-.Lrnglists_table_base0
	.long	.Ldebug_ranges61-.Lrnglists_table_base0
	.long	.Ldebug_ranges62-.Lrnglists_table_base0
	.long	.Ldebug_ranges63-.Lrnglists_table_base0
	.long	.Ldebug_ranges64-.Lrnglists_table_base0
	.long	.Ldebug_ranges65-.Lrnglists_table_base0
	.long	.Ldebug_ranges66-.Lrnglists_table_base0
	.long	.Ldebug_ranges67-.Lrnglists_table_base0
	.long	.Ldebug_ranges68-.Lrnglists_table_base0
	.long	.Ldebug_ranges69-.Lrnglists_table_base0
	.long	.Ldebug_ranges70-.Lrnglists_table_base0
	.long	.Ldebug_ranges71-.Lrnglists_table_base0
	.long	.Ldebug_ranges72-.Lrnglists_table_base0
	.long	.Ldebug_ranges73-.Lrnglists_table_base0
	.long	.Ldebug_ranges74-.Lrnglists_table_base0
	.long	.Ldebug_ranges75-.Lrnglists_table_base0
	.long	.Ldebug_ranges76-.Lrnglists_table_base0
	.long	.Ldebug_ranges77-.Lrnglists_table_base0
	.long	.Ldebug_ranges78-.Lrnglists_table_base0
	.long	.Ldebug_ranges79-.Lrnglists_table_base0
	.long	.Ldebug_ranges80-.Lrnglists_table_base0
	.long	.Ldebug_ranges81-.Lrnglists_table_base0
	.long	.Ldebug_ranges82-.Lrnglists_table_base0
	.long	.Ldebug_ranges83-.Lrnglists_table_base0
	.long	.Ldebug_ranges84-.Lrnglists_table_base0
	.long	.Ldebug_ranges85-.Lrnglists_table_base0
	.long	.Ldebug_ranges86-.Lrnglists_table_base0
	.long	.Ldebug_ranges87-.Lrnglists_table_base0
	.long	.Ldebug_ranges88-.Lrnglists_table_base0
	.long	.Ldebug_ranges89-.Lrnglists_table_base0
	.long	.Ldebug_ranges90-.Lrnglists_table_base0
	.long	.Ldebug_ranges91-.Lrnglists_table_base0
	.long	.Ldebug_ranges92-.Lrnglists_table_base0
	.long	.Ldebug_ranges93-.Lrnglists_table_base0
	.long	.Ldebug_ranges94-.Lrnglists_table_base0
	.long	.Ldebug_ranges95-.Lrnglists_table_base0
	.long	.Ldebug_ranges96-.Lrnglists_table_base0
	.long	.Ldebug_ranges97-.Lrnglists_table_base0
	.long	.Ldebug_ranges98-.Lrnglists_table_base0
	.long	.Ldebug_ranges99-.Lrnglists_table_base0
	.long	.Ldebug_ranges100-.Lrnglists_table_base0
	.long	.Ldebug_ranges101-.Lrnglists_table_base0
	.long	.Ldebug_ranges102-.Lrnglists_table_base0
	.long	.Ldebug_ranges103-.Lrnglists_table_base0
	.long	.Ldebug_ranges104-.Lrnglists_table_base0
	.long	.Ldebug_ranges105-.Lrnglists_table_base0
	.long	.Ldebug_ranges106-.Lrnglists_table_base0
	.long	.Ldebug_ranges107-.Lrnglists_table_base0
	.long	.Ldebug_ranges108-.Lrnglists_table_base0
	.long	.Ldebug_ranges109-.Lrnglists_table_base0
	.long	.Ldebug_ranges110-.Lrnglists_table_base0
	.long	.Ldebug_ranges111-.Lrnglists_table_base0
	.long	.Ldebug_ranges112-.Lrnglists_table_base0
	.long	.Ldebug_ranges113-.Lrnglists_table_base0
	.long	.Ldebug_ranges114-.Lrnglists_table_base0
	.long	.Ldebug_ranges115-.Lrnglists_table_base0
	.long	.Ldebug_ranges116-.Lrnglists_table_base0
	.long	.Ldebug_ranges117-.Lrnglists_table_base0
	.long	.Ldebug_ranges118-.Lrnglists_table_base0
	.long	.Ldebug_ranges119-.Lrnglists_table_base0
	.long	.Ldebug_ranges120-.Lrnglists_table_base0
	.long	.Ldebug_ranges121-.Lrnglists_table_base0
	.long	.Ldebug_ranges122-.Lrnglists_table_base0
	.long	.Ldebug_ranges123-.Lrnglists_table_base0
	.long	.Ldebug_ranges124-.Lrnglists_table_base0
	.long	.Ldebug_ranges125-.Lrnglists_table_base0
	.long	.Ldebug_ranges126-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp121-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp122-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp123-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp213-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp237-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp288-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp289-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp339-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp343-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp349-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp622-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp628-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp749-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp750-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp781-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp805-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp806-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp818-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp814-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp817-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp820-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp825-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp826-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp828-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp828-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp829-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp842-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp843-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp860-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp848-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp851-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp852-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp860-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp851-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp852-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp860-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp865-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp873-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp874-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp875-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp884-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp893-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp894-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp895-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp906-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp949-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp958-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp982-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp960-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp962-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp966-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp971-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp974-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1081-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1104-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1144-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1149-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1324-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1166-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1169-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1179-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1197-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1200-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1201-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1265-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1227-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1258-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1265-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1322-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges27:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1271-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1296-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1309-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1649-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1662-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges28:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1282-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1293-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1304-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1306-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges29:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1301-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1303-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1309-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1320-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges30:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1341-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1404-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges31:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1355-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1381-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges32:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1361-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1362-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1375-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1381-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges33:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1381-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1400-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges34:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1376-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1377-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1382-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1383-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1385-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges35:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1387-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1388-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1389-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1391-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1392-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1400-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges36:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1429-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1430-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1431-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1432-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges37:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges38:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1439-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1442-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1444-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1445-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1517-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1525-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges39:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1467-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1475-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges40:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1471-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1472-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1475-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1476-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1484-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges41:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1504-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1516-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1566-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1594-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1642-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1645-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges42:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1516-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1546-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1565-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges43:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1548-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1552-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1555-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1558-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1564-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges44:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1566-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1581-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1634-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1639-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1646-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges45:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1687-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1717-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges46:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1694-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges47:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1698-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1699-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1700-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1703-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1704-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1711-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges48:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1722-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1725-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1741-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges49:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1758-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1761-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1762-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1763-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1797-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges50:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1785-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1786-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1787-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1796-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges51:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1974-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1975-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1977-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1982-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges52:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2027-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2028-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2032-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2040-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges53:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2051-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2052-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2057-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2065-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges54:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2126-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2128-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges55:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2132-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2135-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2145-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges56:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2186-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2187-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2188-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2197-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges57:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2242-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3482-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges58:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2252-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2420-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges59:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2257-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2258-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2259-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2262-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges60:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2268-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2419-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2422-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges61:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2287-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2288-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2292-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges62:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2438-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2439-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2440-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2444-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges63:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2295-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2296-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2297-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges64:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2295-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2296-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2308-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2314-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges65:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2314-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2315-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2316-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges66:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2325-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2351-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges67:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2323-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2324-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2336-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges68:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2342-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2343-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2344-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2351-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges69:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2351-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2352-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2353-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2361-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges70:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2382-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2383-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2384-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2390-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges71:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2519-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2520-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2521-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2528-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges72:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2565-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2566-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2567-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2573-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges73:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2595-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2596-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2597-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2603-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges74:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2637-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2638-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2639-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2645-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges75:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2646-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2647-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges76:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2645-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2646-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2658-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2664-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges77:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2664-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2665-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2667-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2674-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges78:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2718-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2719-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2720-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2726-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges79:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2726-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2727-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2728-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges80:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2726-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2727-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2739-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2745-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges81:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2745-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2746-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2748-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2755-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges82:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2787-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2788-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2789-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2795-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges83:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2796-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2797-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges84:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2795-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2796-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2808-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2813-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges85:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2813-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2814-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2815-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2821-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges86:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2834-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2835-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2872-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2878-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges87:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2854-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2855-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2856-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2872-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges88:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2854-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2855-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2865-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2872-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges89:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2880-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2897-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2917-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2933-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges90:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2890-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2897-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2915-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2916-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2926-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2933-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges91:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2896-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2931-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2932-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges92:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2895-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2896-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2931-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2932-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges93:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2897-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2898-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2899-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2915-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2933-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2934-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2935-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges94:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2897-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2898-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2908-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2915-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2933-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2934-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2944-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2951-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges95:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2914-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2950-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges96:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2913-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2914-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2949-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2950-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges97:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2959-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2960-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3018-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges98:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2987-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2989-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges99:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2986-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp2987-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp2998-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3004-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges100:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3005-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3013-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges101:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3053-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3062-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges102:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3100-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3109-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges103:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3129-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3130-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3131-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges104:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3129-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3130-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3140-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3148-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges105:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3433-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3484-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges106:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3177-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3483-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3484-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3512-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges107:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3178-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3433-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3434-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3438-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges108:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3433-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3434-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3439-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges109:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3504-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3505-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3506-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3512-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges110:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3187-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3202-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3292-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3293-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3442-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3448-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges111:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3211-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3233-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3513-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3514-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges112:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3277-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3278-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3279-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3287-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges113:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3289-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3290-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3291-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3292-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges114:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges115:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges116:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3346-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3377-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3414-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3432-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges117:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3452-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3453-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3454-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3455-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3456-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3457-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges118:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3459-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3460-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3461-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3471-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges119:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3473-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3474-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3475-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3476-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3477-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3478-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3479-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3480-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges120:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3544-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3557-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3559-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3572-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3574-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3587-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3589-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3602-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3604-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3617-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges121:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3547-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3553-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3562-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3568-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3577-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3583-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3592-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3598-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3607-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3613-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges122:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3764-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3773-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3775-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3777-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges123:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3782-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3800-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3802-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3804-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3810-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3827-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3830-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3832-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges124:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3839-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3846-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3848-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3849-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges125:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3995-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp3997-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3999-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4028-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges126:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp3999-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4004-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp4007-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp4028-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	5008                            # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"x264_src/encoder/encoder.c"    # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/x264-test/src" # string offset=132
.Linfo_string3:
	.asciz	"char"                          # string offset=166
.Linfo_string4:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=171
.Linfo_string5:
	.asciz	"slice_order"                   # string offset=191
.Linfo_string6:
	.asciz	"unsigned char"                 # string offset=203
.Linfo_string7:
	.asciz	"__uint8_t"                     # string offset=217
.Linfo_string8:
	.asciz	"uint8_t"                       # string offset=227
.Linfo_string9:
	.asciz	"slice_name"                    # string offset=235
.Linfo_string10:
	.asciz	"tga_dump_rate"                 # string offset=246
.Linfo_string11:
	.asciz	"int"                           # string offset=260
.Linfo_string12:
	.asciz	"i_chroma_qp_table"             # string offset=264
.Linfo_string13:
	.asciz	"x264_ue_size_tab"              # string offset=282
.Linfo_string14:
	.asciz	"x264_scan8"                    # string offset=299
.Linfo_string15:
	.asciz	"x264_mb_partition_pixel_table" # string offset=310
.Linfo_string16:
	.asciz	"x264_mb_type_list_table"       # string offset=340
.Linfo_string17:
	.asciz	"x264_mb_pred_mode16x16_fix"    # string offset=364
.Linfo_string18:
	.asciz	"x264_mb_pred_mode4x4_fix"      # string offset=391
.Linfo_string19:
	.asciz	"signed char"                   # string offset=416
.Linfo_string20:
	.asciz	"__int8_t"                      # string offset=428
.Linfo_string21:
	.asciz	"int8_t"                        # string offset=437
.Linfo_string22:
	.asciz	"x264_mb_pred_mode8x8c_fix"     # string offset=444
.Linfo_string23:
	.asciz	"unsigned int"                  # string offset=470
.Linfo_string24:
	.asciz	"PROFILE_BASELINE"              # string offset=483
.Linfo_string25:
	.asciz	"PROFILE_MAIN"                  # string offset=500
.Linfo_string26:
	.asciz	"PROFILE_EXTENDED"              # string offset=513
.Linfo_string27:
	.asciz	"PROFILE_HIGH"                  # string offset=530
.Linfo_string28:
	.asciz	"PROFILE_HIGH10"                # string offset=543
.Linfo_string29:
	.asciz	"PROFILE_HIGH422"               # string offset=558
.Linfo_string30:
	.asciz	"PROFILE_HIGH444"               # string offset=574
.Linfo_string31:
	.asciz	"PROFILE_HIGH444_PREDICTIVE"    # string offset=590
.Linfo_string32:
	.asciz	"profile_e"                     # string offset=617
.Linfo_string33:
	.asciz	"NAL_UNKNOWN"                   # string offset=627
.Linfo_string34:
	.asciz	"NAL_SLICE"                     # string offset=639
.Linfo_string35:
	.asciz	"NAL_SLICE_DPA"                 # string offset=649
.Linfo_string36:
	.asciz	"NAL_SLICE_DPB"                 # string offset=663
.Linfo_string37:
	.asciz	"NAL_SLICE_DPC"                 # string offset=677
.Linfo_string38:
	.asciz	"NAL_SLICE_IDR"                 # string offset=691
.Linfo_string39:
	.asciz	"NAL_SEI"                       # string offset=705
.Linfo_string40:
	.asciz	"NAL_SPS"                       # string offset=713
.Linfo_string41:
	.asciz	"NAL_PPS"                       # string offset=721
.Linfo_string42:
	.asciz	"NAL_AUD"                       # string offset=729
.Linfo_string43:
	.asciz	"NAL_FILLER"                    # string offset=737
.Linfo_string44:
	.asciz	"nal_unit_type_e"               # string offset=748
.Linfo_string45:
	.asciz	"NAL_PRIORITY_DISPOSABLE"       # string offset=764
.Linfo_string46:
	.asciz	"NAL_PRIORITY_LOW"              # string offset=788
.Linfo_string47:
	.asciz	"NAL_PRIORITY_HIGH"             # string offset=805
.Linfo_string48:
	.asciz	"NAL_PRIORITY_HIGHEST"          # string offset=823
.Linfo_string49:
	.asciz	"nal_priority_e"                # string offset=844
.Linfo_string50:
	.asciz	"PIC_STRUCT_AUTO"               # string offset=859
.Linfo_string51:
	.asciz	"PIC_STRUCT_PROGRESSIVE"        # string offset=875
.Linfo_string52:
	.asciz	"PIC_STRUCT_TOP_BOTTOM"         # string offset=898
.Linfo_string53:
	.asciz	"PIC_STRUCT_BOTTOM_TOP"         # string offset=920
.Linfo_string54:
	.asciz	"PIC_STRUCT_TOP_BOTTOM_TOP"     # string offset=942
.Linfo_string55:
	.asciz	"PIC_STRUCT_BOTTOM_TOP_BOTTOM"  # string offset=968
.Linfo_string56:
	.asciz	"PIC_STRUCT_DOUBLE"             # string offset=997
.Linfo_string57:
	.asciz	"PIC_STRUCT_TRIPLE"             # string offset=1015
.Linfo_string58:
	.asciz	"pic_struct_e"                  # string offset=1033
.Linfo_string59:
	.asciz	"SLICE_TYPE_P"                  # string offset=1046
.Linfo_string60:
	.asciz	"SLICE_TYPE_B"                  # string offset=1059
.Linfo_string61:
	.asciz	"SLICE_TYPE_I"                  # string offset=1072
.Linfo_string62:
	.asciz	"SLICE_TYPE_SP"                 # string offset=1085
.Linfo_string63:
	.asciz	"SLICE_TYPE_SI"                 # string offset=1099
.Linfo_string64:
	.asciz	"slice_type_e"                  # string offset=1113
.Linfo_string65:
	.asciz	"I_4x4"                         # string offset=1126
.Linfo_string66:
	.asciz	"I_8x8"                         # string offset=1132
.Linfo_string67:
	.asciz	"I_16x16"                       # string offset=1138
.Linfo_string68:
	.asciz	"I_PCM"                         # string offset=1146
.Linfo_string69:
	.asciz	"P_L0"                          # string offset=1152
.Linfo_string70:
	.asciz	"P_8x8"                         # string offset=1157
.Linfo_string71:
	.asciz	"P_SKIP"                        # string offset=1163
.Linfo_string72:
	.asciz	"B_DIRECT"                      # string offset=1170
.Linfo_string73:
	.asciz	"B_L0_L0"                       # string offset=1179
.Linfo_string74:
	.asciz	"B_L0_L1"                       # string offset=1187
.Linfo_string75:
	.asciz	"B_L0_BI"                       # string offset=1195
.Linfo_string76:
	.asciz	"B_L1_L0"                       # string offset=1203
.Linfo_string77:
	.asciz	"B_L1_L1"                       # string offset=1211
.Linfo_string78:
	.asciz	"B_L1_BI"                       # string offset=1219
.Linfo_string79:
	.asciz	"B_BI_L0"                       # string offset=1227
.Linfo_string80:
	.asciz	"B_BI_L1"                       # string offset=1235
.Linfo_string81:
	.asciz	"B_BI_BI"                       # string offset=1243
.Linfo_string82:
	.asciz	"B_8x8"                         # string offset=1251
.Linfo_string83:
	.asciz	"B_SKIP"                        # string offset=1257
.Linfo_string84:
	.asciz	"X264_MBTYPE_MAX"               # string offset=1264
.Linfo_string85:
	.asciz	"mb_class_e"                    # string offset=1280
.Linfo_string86:
	.asciz	"D_L0_4x4"                      # string offset=1291
.Linfo_string87:
	.asciz	"D_L0_8x4"                      # string offset=1300
.Linfo_string88:
	.asciz	"D_L0_4x8"                      # string offset=1309
.Linfo_string89:
	.asciz	"D_L0_8x8"                      # string offset=1318
.Linfo_string90:
	.asciz	"D_L1_4x4"                      # string offset=1327
.Linfo_string91:
	.asciz	"D_L1_8x4"                      # string offset=1336
.Linfo_string92:
	.asciz	"D_L1_4x8"                      # string offset=1345
.Linfo_string93:
	.asciz	"D_L1_8x8"                      # string offset=1354
.Linfo_string94:
	.asciz	"D_BI_4x4"                      # string offset=1363
.Linfo_string95:
	.asciz	"D_BI_8x4"                      # string offset=1372
.Linfo_string96:
	.asciz	"D_BI_4x8"                      # string offset=1381
.Linfo_string97:
	.asciz	"D_BI_8x8"                      # string offset=1390
.Linfo_string98:
	.asciz	"D_DIRECT_8x8"                  # string offset=1399
.Linfo_string99:
	.asciz	"D_8x8"                         # string offset=1412
.Linfo_string100:
	.asciz	"D_16x8"                        # string offset=1418
.Linfo_string101:
	.asciz	"D_8x16"                        # string offset=1425
.Linfo_string102:
	.asciz	"D_16x16"                       # string offset=1432
.Linfo_string103:
	.asciz	"X264_PARTTYPE_MAX"             # string offset=1440
.Linfo_string104:
	.asciz	"mb_partition_e"                # string offset=1458
.Linfo_string105:
	.asciz	"PIXEL_16x16"                   # string offset=1473
.Linfo_string106:
	.asciz	"PIXEL_16x8"                    # string offset=1485
.Linfo_string107:
	.asciz	"PIXEL_8x16"                    # string offset=1496
.Linfo_string108:
	.asciz	"PIXEL_8x8"                     # string offset=1507
.Linfo_string109:
	.asciz	"PIXEL_8x4"                     # string offset=1517
.Linfo_string110:
	.asciz	"PIXEL_4x8"                     # string offset=1527
.Linfo_string111:
	.asciz	"PIXEL_4x4"                     # string offset=1537
.Linfo_string112:
	.asciz	"PIXEL_4x2"                     # string offset=1547
.Linfo_string113:
	.asciz	"PIXEL_2x4"                     # string offset=1557
.Linfo_string114:
	.asciz	"PIXEL_2x2"                     # string offset=1567
.Linfo_string115:
	.asciz	"I_PRED_16x16_V"                # string offset=1577
.Linfo_string116:
	.asciz	"I_PRED_16x16_H"                # string offset=1592
.Linfo_string117:
	.asciz	"I_PRED_16x16_DC"               # string offset=1607
.Linfo_string118:
	.asciz	"I_PRED_16x16_P"                # string offset=1623
.Linfo_string119:
	.asciz	"I_PRED_16x16_DC_LEFT"          # string offset=1638
.Linfo_string120:
	.asciz	"I_PRED_16x16_DC_TOP"           # string offset=1659
.Linfo_string121:
	.asciz	"I_PRED_16x16_DC_128"           # string offset=1679
.Linfo_string122:
	.asciz	"intra16x16_pred_e"             # string offset=1699
.Linfo_string123:
	.asciz	"I_PRED_8x8_V"                  # string offset=1717
.Linfo_string124:
	.asciz	"I_PRED_8x8_H"                  # string offset=1730
.Linfo_string125:
	.asciz	"I_PRED_8x8_DC"                 # string offset=1743
.Linfo_string126:
	.asciz	"I_PRED_8x8_DDL"                # string offset=1757
.Linfo_string127:
	.asciz	"I_PRED_8x8_DDR"                # string offset=1772
.Linfo_string128:
	.asciz	"I_PRED_8x8_VR"                 # string offset=1787
.Linfo_string129:
	.asciz	"I_PRED_8x8_HD"                 # string offset=1801
.Linfo_string130:
	.asciz	"I_PRED_8x8_VL"                 # string offset=1815
.Linfo_string131:
	.asciz	"I_PRED_8x8_HU"                 # string offset=1829
.Linfo_string132:
	.asciz	"I_PRED_8x8_DC_LEFT"            # string offset=1843
.Linfo_string133:
	.asciz	"I_PRED_8x8_DC_TOP"             # string offset=1862
.Linfo_string134:
	.asciz	"I_PRED_8x8_DC_128"             # string offset=1880
.Linfo_string135:
	.asciz	"intra8x8_pred_e"               # string offset=1898
.Linfo_string136:
	.asciz	"I_PRED_CHROMA_DC"              # string offset=1914
.Linfo_string137:
	.asciz	"I_PRED_CHROMA_H"               # string offset=1931
.Linfo_string138:
	.asciz	"I_PRED_CHROMA_V"               # string offset=1947
.Linfo_string139:
	.asciz	"I_PRED_CHROMA_P"               # string offset=1963
.Linfo_string140:
	.asciz	"I_PRED_CHROMA_DC_LEFT"         # string offset=1979
.Linfo_string141:
	.asciz	"I_PRED_CHROMA_DC_TOP"          # string offset=2001
.Linfo_string142:
	.asciz	"I_PRED_CHROMA_DC_128"          # string offset=2022
.Linfo_string143:
	.asciz	"intra_chroma_pred_e"           # string offset=2043
.Linfo_string144:
	.asciz	"float"                         # string offset=2063
.Linfo_string145:
	.asciz	"long"                          # string offset=2069
.Linfo_string146:
	.asciz	"intptr_t"                      # string offset=2074
.Linfo_string147:
	.asciz	"double"                        # string offset=2083
.Linfo_string148:
	.asciz	"i"                             # string offset=2090
.Linfo_string149:
	.asciz	"__uint32_t"                    # string offset=2092
.Linfo_string150:
	.asciz	"uint32_t"                      # string offset=2103
.Linfo_string151:
	.asciz	"b"                             # string offset=2112
.Linfo_string152:
	.asciz	"unsigned short"                # string offset=2114
.Linfo_string153:
	.asciz	"__uint16_t"                    # string offset=2129
.Linfo_string154:
	.asciz	"uint16_t"                      # string offset=2140
.Linfo_string155:
	.asciz	"c"                             # string offset=2149
.Linfo_string156:
	.asciz	"x264_union32_t"                # string offset=2151
.Linfo_string157:
	.asciz	"unsigned long"                 # string offset=2166
.Linfo_string158:
	.asciz	"__uint64_t"                    # string offset=2180
.Linfo_string159:
	.asciz	"uint64_t"                      # string offset=2191
.Linfo_string160:
	.asciz	"x264_malloc"                   # string offset=2200
.Linfo_string161:
	.asciz	"x264_cqm_parse_file"           # string offset=2212
.Linfo_string162:
	.asciz	"param"                         # string offset=2232
.Linfo_string163:
	.asciz	"cpu"                           # string offset=2238
.Linfo_string164:
	.asciz	"i_threads"                     # string offset=2242
.Linfo_string165:
	.asciz	"b_sliced_threads"              # string offset=2252
.Linfo_string166:
	.asciz	"b_deterministic"               # string offset=2269
.Linfo_string167:
	.asciz	"i_sync_lookahead"              # string offset=2285
.Linfo_string168:
	.asciz	"i_width"                       # string offset=2302
.Linfo_string169:
	.asciz	"i_height"                      # string offset=2310
.Linfo_string170:
	.asciz	"i_csp"                         # string offset=2319
.Linfo_string171:
	.asciz	"i_level_idc"                   # string offset=2325
.Linfo_string172:
	.asciz	"i_frame_total"                 # string offset=2337
.Linfo_string173:
	.asciz	"i_nal_hrd"                     # string offset=2351
.Linfo_string174:
	.asciz	"vui"                           # string offset=2361
.Linfo_string175:
	.asciz	"i_sar_height"                  # string offset=2365
.Linfo_string176:
	.asciz	"i_sar_width"                   # string offset=2378
.Linfo_string177:
	.asciz	"i_overscan"                    # string offset=2390
.Linfo_string178:
	.asciz	"i_vidformat"                   # string offset=2401
.Linfo_string179:
	.asciz	"b_fullrange"                   # string offset=2413
.Linfo_string180:
	.asciz	"i_colorprim"                   # string offset=2425
.Linfo_string181:
	.asciz	"i_transfer"                    # string offset=2437
.Linfo_string182:
	.asciz	"i_colmatrix"                   # string offset=2448
.Linfo_string183:
	.asciz	"i_chroma_loc"                  # string offset=2460
.Linfo_string184:
	.asciz	"i_frame_reference"             # string offset=2473
.Linfo_string185:
	.asciz	"i_keyint_max"                  # string offset=2491
.Linfo_string186:
	.asciz	"i_keyint_min"                  # string offset=2504
.Linfo_string187:
	.asciz	"i_scenecut_threshold"          # string offset=2517
.Linfo_string188:
	.asciz	"b_intra_refresh"               # string offset=2538
.Linfo_string189:
	.asciz	"i_bframe"                      # string offset=2554
.Linfo_string190:
	.asciz	"i_bframe_adaptive"             # string offset=2563
.Linfo_string191:
	.asciz	"i_bframe_bias"                 # string offset=2581
.Linfo_string192:
	.asciz	"i_bframe_pyramid"              # string offset=2595
.Linfo_string193:
	.asciz	"b_deblocking_filter"           # string offset=2612
.Linfo_string194:
	.asciz	"i_deblocking_filter_alphac0"   # string offset=2632
.Linfo_string195:
	.asciz	"i_deblocking_filter_beta"      # string offset=2660
.Linfo_string196:
	.asciz	"b_cabac"                       # string offset=2685
.Linfo_string197:
	.asciz	"i_cabac_init_idc"              # string offset=2693
.Linfo_string198:
	.asciz	"b_interlaced"                  # string offset=2710
.Linfo_string199:
	.asciz	"b_constrained_intra"           # string offset=2723
.Linfo_string200:
	.asciz	"i_cqm_preset"                  # string offset=2743
.Linfo_string201:
	.asciz	"psz_cqm_file"                  # string offset=2756
.Linfo_string202:
	.asciz	"cqm_4iy"                       # string offset=2769
.Linfo_string203:
	.asciz	"cqm_4ic"                       # string offset=2777
.Linfo_string204:
	.asciz	"cqm_4py"                       # string offset=2785
.Linfo_string205:
	.asciz	"cqm_4pc"                       # string offset=2793
.Linfo_string206:
	.asciz	"cqm_8iy"                       # string offset=2801
.Linfo_string207:
	.asciz	"cqm_8py"                       # string offset=2809
.Linfo_string208:
	.asciz	"pf_log"                        # string offset=2817
.Linfo_string209:
	.asciz	"gp_offset"                     # string offset=2824
.Linfo_string210:
	.asciz	"fp_offset"                     # string offset=2834
.Linfo_string211:
	.asciz	"overflow_arg_area"             # string offset=2844
.Linfo_string212:
	.asciz	"reg_save_area"                 # string offset=2862
.Linfo_string213:
	.asciz	"__va_list_tag"                 # string offset=2876
.Linfo_string214:
	.asciz	"p_log_private"                 # string offset=2890
.Linfo_string215:
	.asciz	"i_log_level"                   # string offset=2904
.Linfo_string216:
	.asciz	"b_visualize"                   # string offset=2916
.Linfo_string217:
	.asciz	"psz_dump_yuv"                  # string offset=2928
.Linfo_string218:
	.asciz	"analyse"                       # string offset=2941
.Linfo_string219:
	.asciz	"intra"                         # string offset=2949
.Linfo_string220:
	.asciz	"inter"                         # string offset=2955
.Linfo_string221:
	.asciz	"b_transform_8x8"               # string offset=2961
.Linfo_string222:
	.asciz	"i_weighted_pred"               # string offset=2977
.Linfo_string223:
	.asciz	"b_weighted_bipred"             # string offset=2993
.Linfo_string224:
	.asciz	"i_direct_mv_pred"              # string offset=3011
.Linfo_string225:
	.asciz	"i_chroma_qp_offset"            # string offset=3028
.Linfo_string226:
	.asciz	"i_me_method"                   # string offset=3047
.Linfo_string227:
	.asciz	"i_me_range"                    # string offset=3059
.Linfo_string228:
	.asciz	"i_mv_range"                    # string offset=3070
.Linfo_string229:
	.asciz	"i_mv_range_thread"             # string offset=3081
.Linfo_string230:
	.asciz	"i_subpel_refine"               # string offset=3099
.Linfo_string231:
	.asciz	"b_chroma_me"                   # string offset=3115
.Linfo_string232:
	.asciz	"b_mixed_references"            # string offset=3127
.Linfo_string233:
	.asciz	"i_trellis"                     # string offset=3146
.Linfo_string234:
	.asciz	"b_fast_pskip"                  # string offset=3156
.Linfo_string235:
	.asciz	"b_dct_decimate"                # string offset=3169
.Linfo_string236:
	.asciz	"i_noise_reduction"             # string offset=3184
.Linfo_string237:
	.asciz	"f_psy_rd"                      # string offset=3202
.Linfo_string238:
	.asciz	"f_psy_trellis"                 # string offset=3211
.Linfo_string239:
	.asciz	"b_psy"                         # string offset=3225
.Linfo_string240:
	.asciz	"i_luma_deadzone"               # string offset=3231
.Linfo_string241:
	.asciz	"b_psnr"                        # string offset=3247
.Linfo_string242:
	.asciz	"b_ssim"                        # string offset=3254
.Linfo_string243:
	.asciz	"rc"                            # string offset=3261
.Linfo_string244:
	.asciz	"i_rc_method"                   # string offset=3264
.Linfo_string245:
	.asciz	"i_qp_constant"                 # string offset=3276
.Linfo_string246:
	.asciz	"i_qp_min"                      # string offset=3290
.Linfo_string247:
	.asciz	"i_qp_max"                      # string offset=3299
.Linfo_string248:
	.asciz	"i_qp_step"                     # string offset=3308
.Linfo_string249:
	.asciz	"i_bitrate"                     # string offset=3318
.Linfo_string250:
	.asciz	"f_rf_constant"                 # string offset=3328
.Linfo_string251:
	.asciz	"f_rf_constant_max"             # string offset=3342
.Linfo_string252:
	.asciz	"f_rate_tolerance"              # string offset=3360
.Linfo_string253:
	.asciz	"i_vbv_max_bitrate"             # string offset=3377
.Linfo_string254:
	.asciz	"i_vbv_buffer_size"             # string offset=3395
.Linfo_string255:
	.asciz	"f_vbv_buffer_init"             # string offset=3413
.Linfo_string256:
	.asciz	"f_ip_factor"                   # string offset=3431
.Linfo_string257:
	.asciz	"f_pb_factor"                   # string offset=3443
.Linfo_string258:
	.asciz	"i_aq_mode"                     # string offset=3455
.Linfo_string259:
	.asciz	"f_aq_strength"                 # string offset=3465
.Linfo_string260:
	.asciz	"b_mb_tree"                     # string offset=3479
.Linfo_string261:
	.asciz	"i_lookahead"                   # string offset=3489
.Linfo_string262:
	.asciz	"b_stat_write"                  # string offset=3501
.Linfo_string263:
	.asciz	"psz_stat_out"                  # string offset=3514
.Linfo_string264:
	.asciz	"b_stat_read"                   # string offset=3527
.Linfo_string265:
	.asciz	"psz_stat_in"                   # string offset=3539
.Linfo_string266:
	.asciz	"f_qcompress"                   # string offset=3551
.Linfo_string267:
	.asciz	"f_qblur"                       # string offset=3563
.Linfo_string268:
	.asciz	"f_complexity_blur"             # string offset=3571
.Linfo_string269:
	.asciz	"zones"                         # string offset=3589
.Linfo_string270:
	.asciz	"i_start"                       # string offset=3595
.Linfo_string271:
	.asciz	"i_end"                         # string offset=3603
.Linfo_string272:
	.asciz	"b_force_qp"                    # string offset=3609
.Linfo_string273:
	.asciz	"i_qp"                          # string offset=3620
.Linfo_string274:
	.asciz	"f_bitrate_factor"              # string offset=3625
.Linfo_string275:
	.asciz	"x264_zone_t"                   # string offset=3642
.Linfo_string276:
	.asciz	"i_zones"                       # string offset=3654
.Linfo_string277:
	.asciz	"psz_zones"                     # string offset=3662
.Linfo_string278:
	.asciz	"b_aud"                         # string offset=3672
.Linfo_string279:
	.asciz	"b_repeat_headers"              # string offset=3678
.Linfo_string280:
	.asciz	"b_annexb"                      # string offset=3695
.Linfo_string281:
	.asciz	"i_sps_id"                      # string offset=3704
.Linfo_string282:
	.asciz	"b_vfr_input"                   # string offset=3713
.Linfo_string283:
	.asciz	"i_fps_num"                     # string offset=3725
.Linfo_string284:
	.asciz	"i_fps_den"                     # string offset=3735
.Linfo_string285:
	.asciz	"i_timebase_num"                # string offset=3745
.Linfo_string286:
	.asciz	"i_timebase_den"                # string offset=3760
.Linfo_string287:
	.asciz	"b_dts_compress"                # string offset=3775
.Linfo_string288:
	.asciz	"b_tff"                         # string offset=3790
.Linfo_string289:
	.asciz	"b_pic_struct"                  # string offset=3796
.Linfo_string290:
	.asciz	"b_fake_interlaced"             # string offset=3809
.Linfo_string291:
	.asciz	"i_slice_max_size"              # string offset=3827
.Linfo_string292:
	.asciz	"i_slice_max_mbs"               # string offset=3844
.Linfo_string293:
	.asciz	"i_slice_count"                 # string offset=3860
.Linfo_string294:
	.asciz	"param_free"                    # string offset=3874
.Linfo_string295:
	.asciz	"x264_param_t"                  # string offset=3885
.Linfo_string296:
	.asciz	"thread"                        # string offset=3898
.Linfo_string297:
	.asciz	"thread_handle"                 # string offset=3905
.Linfo_string298:
	.asciz	"b_thread_active"               # string offset=3919
.Linfo_string299:
	.asciz	"i_thread_phase"                # string offset=3935
.Linfo_string300:
	.asciz	"i_threadslice_start"           # string offset=3950
.Linfo_string301:
	.asciz	"i_threadslice_end"             # string offset=3970
.Linfo_string302:
	.asciz	"out"                           # string offset=3988
.Linfo_string303:
	.asciz	"i_nal"                         # string offset=3992
.Linfo_string304:
	.asciz	"i_nals_allocated"              # string offset=3998
.Linfo_string305:
	.asciz	"nal"                           # string offset=4015
.Linfo_string306:
	.asciz	"i_ref_idc"                     # string offset=4019
.Linfo_string307:
	.asciz	"i_type"                        # string offset=4029
.Linfo_string308:
	.asciz	"i_payload"                     # string offset=4036
.Linfo_string309:
	.asciz	"p_payload"                     # string offset=4046
.Linfo_string310:
	.asciz	"x264_nal_t"                    # string offset=4056
.Linfo_string311:
	.asciz	"i_bitstream"                   # string offset=4067
.Linfo_string312:
	.asciz	"p_bitstream"                   # string offset=4079
.Linfo_string313:
	.asciz	"bs"                            # string offset=4091
.Linfo_string314:
	.asciz	"p_start"                       # string offset=4094
.Linfo_string315:
	.asciz	"p"                             # string offset=4102
.Linfo_string316:
	.asciz	"p_end"                         # string offset=4104
.Linfo_string317:
	.asciz	"cur_bits"                      # string offset=4110
.Linfo_string318:
	.asciz	"i_left"                        # string offset=4119
.Linfo_string319:
	.asciz	"i_bits_encoded"                # string offset=4126
.Linfo_string320:
	.asciz	"bs_s"                          # string offset=4141
.Linfo_string321:
	.asciz	"bs_t"                          # string offset=4146
.Linfo_string322:
	.asciz	"nal_buffer"                    # string offset=4151
.Linfo_string323:
	.asciz	"nal_buffer_size"               # string offset=4162
.Linfo_string324:
	.asciz	"i_frame"                       # string offset=4178
.Linfo_string325:
	.asciz	"i_frame_num"                   # string offset=4186
.Linfo_string326:
	.asciz	"i_thread_frames"               # string offset=4198
.Linfo_string327:
	.asciz	"i_nal_type"                    # string offset=4214
.Linfo_string328:
	.asciz	"i_nal_ref_idc"                 # string offset=4225
.Linfo_string329:
	.asciz	"i_disp_fields"                 # string offset=4239
.Linfo_string330:
	.asciz	"i_disp_fields_last_frame"      # string offset=4253
.Linfo_string331:
	.asciz	"i_prev_duration"               # string offset=4278
.Linfo_string332:
	.asciz	"i_coded_fields"                # string offset=4294
.Linfo_string333:
	.asciz	"i_cpb_delay"                   # string offset=4309
.Linfo_string334:
	.asciz	"i_coded_fields_lookahead"      # string offset=4321
.Linfo_string335:
	.asciz	"i_cpb_delay_lookahead"         # string offset=4346
.Linfo_string336:
	.asciz	"b_queued_intra_refresh"        # string offset=4368
.Linfo_string337:
	.asciz	"sps_array"                     # string offset=4391
.Linfo_string338:
	.asciz	"i_id"                          # string offset=4401
.Linfo_string339:
	.asciz	"i_profile_idc"                 # string offset=4406
.Linfo_string340:
	.asciz	"b_constraint_set0"             # string offset=4420
.Linfo_string341:
	.asciz	"b_constraint_set1"             # string offset=4438
.Linfo_string342:
	.asciz	"b_constraint_set2"             # string offset=4456
.Linfo_string343:
	.asciz	"i_log2_max_frame_num"          # string offset=4474
.Linfo_string344:
	.asciz	"i_poc_type"                    # string offset=4495
.Linfo_string345:
	.asciz	"i_log2_max_poc_lsb"            # string offset=4506
.Linfo_string346:
	.asciz	"b_delta_pic_order_always_zero" # string offset=4525
.Linfo_string347:
	.asciz	"i_offset_for_non_ref_pic"      # string offset=4555
.Linfo_string348:
	.asciz	"i_offset_for_top_to_bottom_field" # string offset=4580
.Linfo_string349:
	.asciz	"i_num_ref_frames_in_poc_cycle" # string offset=4613
.Linfo_string350:
	.asciz	"i_offset_for_ref_frame"        # string offset=4643
.Linfo_string351:
	.asciz	"i_num_ref_frames"              # string offset=4666
.Linfo_string352:
	.asciz	"b_gaps_in_frame_num_value_allowed" # string offset=4683
.Linfo_string353:
	.asciz	"i_mb_width"                    # string offset=4717
.Linfo_string354:
	.asciz	"i_mb_height"                   # string offset=4728
.Linfo_string355:
	.asciz	"b_frame_mbs_only"              # string offset=4740
.Linfo_string356:
	.asciz	"b_mb_adaptive_frame_field"     # string offset=4757
.Linfo_string357:
	.asciz	"b_direct8x8_inference"         # string offset=4783
.Linfo_string358:
	.asciz	"b_crop"                        # string offset=4805
.Linfo_string359:
	.asciz	"crop"                          # string offset=4812
.Linfo_string360:
	.asciz	"i_right"                       # string offset=4817
.Linfo_string361:
	.asciz	"i_top"                         # string offset=4825
.Linfo_string362:
	.asciz	"i_bottom"                      # string offset=4831
.Linfo_string363:
	.asciz	"b_vui"                         # string offset=4840
.Linfo_string364:
	.asciz	"b_aspect_ratio_info_present"   # string offset=4846
.Linfo_string365:
	.asciz	"b_overscan_info_present"       # string offset=4874
.Linfo_string366:
	.asciz	"b_overscan_info"               # string offset=4898
.Linfo_string367:
	.asciz	"b_signal_type_present"         # string offset=4914
.Linfo_string368:
	.asciz	"b_color_description_present"   # string offset=4936
.Linfo_string369:
	.asciz	"b_chroma_loc_info_present"     # string offset=4964
.Linfo_string370:
	.asciz	"i_chroma_loc_top"              # string offset=4990
.Linfo_string371:
	.asciz	"i_chroma_loc_bottom"           # string offset=5007
.Linfo_string372:
	.asciz	"b_timing_info_present"         # string offset=5027
.Linfo_string373:
	.asciz	"i_num_units_in_tick"           # string offset=5049
.Linfo_string374:
	.asciz	"i_time_scale"                  # string offset=5069
.Linfo_string375:
	.asciz	"b_fixed_frame_rate"            # string offset=5082
.Linfo_string376:
	.asciz	"b_nal_hrd_parameters_present"  # string offset=5101
.Linfo_string377:
	.asciz	"b_vcl_hrd_parameters_present"  # string offset=5130
.Linfo_string378:
	.asciz	"hrd"                           # string offset=5159
.Linfo_string379:
	.asciz	"i_cpb_cnt"                     # string offset=5163
.Linfo_string380:
	.asciz	"i_bit_rate_scale"              # string offset=5173
.Linfo_string381:
	.asciz	"i_cpb_size_scale"              # string offset=5190
.Linfo_string382:
	.asciz	"i_bit_rate_value"              # string offset=5207
.Linfo_string383:
	.asciz	"i_cpb_size_value"              # string offset=5224
.Linfo_string384:
	.asciz	"i_bit_rate_unscaled"           # string offset=5241
.Linfo_string385:
	.asciz	"i_cpb_size_unscaled"           # string offset=5261
.Linfo_string386:
	.asciz	"b_cbr_hrd"                     # string offset=5281
.Linfo_string387:
	.asciz	"i_initial_cpb_removal_delay_length" # string offset=5291
.Linfo_string388:
	.asciz	"i_cpb_removal_delay_length"    # string offset=5326
.Linfo_string389:
	.asciz	"i_dpb_output_delay_length"     # string offset=5353
.Linfo_string390:
	.asciz	"i_time_offset_length"          # string offset=5379
.Linfo_string391:
	.asciz	"b_pic_struct_present"          # string offset=5400
.Linfo_string392:
	.asciz	"b_bitstream_restriction"       # string offset=5421
.Linfo_string393:
	.asciz	"b_motion_vectors_over_pic_boundaries" # string offset=5445
.Linfo_string394:
	.asciz	"i_max_bytes_per_pic_denom"     # string offset=5482
.Linfo_string395:
	.asciz	"i_max_bits_per_mb_denom"       # string offset=5508
.Linfo_string396:
	.asciz	"i_log2_max_mv_length_horizontal" # string offset=5532
.Linfo_string397:
	.asciz	"i_log2_max_mv_length_vertical" # string offset=5564
.Linfo_string398:
	.asciz	"i_num_reorder_frames"          # string offset=5594
.Linfo_string399:
	.asciz	"i_max_dec_frame_buffering"     # string offset=5615
.Linfo_string400:
	.asciz	"b_qpprime_y_zero_transform_bypass" # string offset=5641
.Linfo_string401:
	.asciz	"x264_sps_t"                    # string offset=5675
.Linfo_string402:
	.asciz	"sps"                           # string offset=5686
.Linfo_string403:
	.asciz	"pps_array"                     # string offset=5690
.Linfo_string404:
	.asciz	"b_pic_order"                   # string offset=5700
.Linfo_string405:
	.asciz	"i_num_slice_groups"            # string offset=5712
.Linfo_string406:
	.asciz	"i_num_ref_idx_l0_default_active" # string offset=5731
.Linfo_string407:
	.asciz	"i_num_ref_idx_l1_default_active" # string offset=5763
.Linfo_string408:
	.asciz	"b_weighted_pred"               # string offset=5795
.Linfo_string409:
	.asciz	"i_pic_init_qp"                 # string offset=5811
.Linfo_string410:
	.asciz	"i_pic_init_qs"                 # string offset=5825
.Linfo_string411:
	.asciz	"i_chroma_qp_index_offset"      # string offset=5839
.Linfo_string412:
	.asciz	"b_deblocking_filter_control"   # string offset=5864
.Linfo_string413:
	.asciz	"b_constrained_intra_pred"      # string offset=5892
.Linfo_string414:
	.asciz	"b_redundant_pic_cnt"           # string offset=5917
.Linfo_string415:
	.asciz	"b_transform_8x8_mode"          # string offset=5937
.Linfo_string416:
	.asciz	"scaling_list"                  # string offset=5958
.Linfo_string417:
	.asciz	"x264_pps_t"                    # string offset=5971
.Linfo_string418:
	.asciz	"pps"                           # string offset=5982
.Linfo_string419:
	.asciz	"i_idr_pic_id"                  # string offset=5986
.Linfo_string420:
	.asciz	"i_dts_compress_multiplier"     # string offset=5999
.Linfo_string421:
	.asciz	"dequant4_mf"                   # string offset=6025
.Linfo_string422:
	.asciz	"dequant8_mf"                   # string offset=6037
.Linfo_string423:
	.asciz	"unquant4_mf"                   # string offset=6049
.Linfo_string424:
	.asciz	"unquant8_mf"                   # string offset=6061
.Linfo_string425:
	.asciz	"quant4_mf"                     # string offset=6073
.Linfo_string426:
	.asciz	"quant8_mf"                     # string offset=6083
.Linfo_string427:
	.asciz	"quant4_bias"                   # string offset=6093
.Linfo_string428:
	.asciz	"quant8_bias"                   # string offset=6105
.Linfo_string429:
	.asciz	"cost_mv"                       # string offset=6117
.Linfo_string430:
	.asciz	"cost_mv_fpel"                  # string offset=6125
.Linfo_string431:
	.asciz	"chroma_qp_table"               # string offset=6138
.Linfo_string432:
	.asciz	"sh"                            # string offset=6154
.Linfo_string433:
	.asciz	"i_first_mb"                    # string offset=6157
.Linfo_string434:
	.asciz	"i_last_mb"                     # string offset=6168
.Linfo_string435:
	.asciz	"i_pps_id"                      # string offset=6178
.Linfo_string436:
	.asciz	"b_mbaff"                       # string offset=6187
.Linfo_string437:
	.asciz	"b_field_pic"                   # string offset=6195
.Linfo_string438:
	.asciz	"b_bottom_field"                # string offset=6207
.Linfo_string439:
	.asciz	"i_poc"                         # string offset=6222
.Linfo_string440:
	.asciz	"i_delta_poc_bottom"            # string offset=6228
.Linfo_string441:
	.asciz	"i_delta_poc"                   # string offset=6247
.Linfo_string442:
	.asciz	"i_redundant_pic_cnt"           # string offset=6259
.Linfo_string443:
	.asciz	"b_direct_spatial_mv_pred"      # string offset=6279
.Linfo_string444:
	.asciz	"b_num_ref_idx_override"        # string offset=6304
.Linfo_string445:
	.asciz	"i_num_ref_idx_l0_active"       # string offset=6327
.Linfo_string446:
	.asciz	"i_num_ref_idx_l1_active"       # string offset=6351
.Linfo_string447:
	.asciz	"b_ref_pic_list_reordering_l0"  # string offset=6375
.Linfo_string448:
	.asciz	"b_ref_pic_list_reordering_l1"  # string offset=6404
.Linfo_string449:
	.asciz	"ref_pic_list_order"            # string offset=6433
.Linfo_string450:
	.asciz	"idc"                           # string offset=6452
.Linfo_string451:
	.asciz	"arg"                           # string offset=6456
.Linfo_string452:
	.asciz	"weight"                        # string offset=6460
.Linfo_string453:
	.asciz	"cachea"                        # string offset=6467
.Linfo_string454:
	.asciz	"short"                         # string offset=6474
.Linfo_string455:
	.asciz	"__int16_t"                     # string offset=6480
.Linfo_string456:
	.asciz	"int16_t"                       # string offset=6490
.Linfo_string457:
	.asciz	"cacheb"                        # string offset=6498
.Linfo_string458:
	.asciz	"i_denom"                       # string offset=6505
.Linfo_string459:
	.asciz	"__int32_t"                     # string offset=6513
.Linfo_string460:
	.asciz	"int32_t"                       # string offset=6523
.Linfo_string461:
	.asciz	"i_scale"                       # string offset=6531
.Linfo_string462:
	.asciz	"i_offset"                      # string offset=6539
.Linfo_string463:
	.asciz	"weightfn"                      # string offset=6548
.Linfo_string464:
	.asciz	"weight_fn_t"                   # string offset=6557
.Linfo_string465:
	.asciz	"x264_weight_t"                 # string offset=6569
.Linfo_string466:
	.asciz	"i_mmco_remove_from_end"        # string offset=6583
.Linfo_string467:
	.asciz	"i_mmco_command_count"          # string offset=6606
.Linfo_string468:
	.asciz	"mmco"                          # string offset=6627
.Linfo_string469:
	.asciz	"i_difference_of_pic_nums"      # string offset=6632
.Linfo_string470:
	.asciz	"i_qp_delta"                    # string offset=6657
.Linfo_string471:
	.asciz	"b_sp_for_swidth"               # string offset=6668
.Linfo_string472:
	.asciz	"i_qs_delta"                    # string offset=6684
.Linfo_string473:
	.asciz	"i_disable_deblocking_filter_idc" # string offset=6695
.Linfo_string474:
	.asciz	"i_alpha_c0_offset"             # string offset=6727
.Linfo_string475:
	.asciz	"i_beta_offset"                 # string offset=6745
.Linfo_string476:
	.asciz	"x264_slice_header_t"           # string offset=6759
.Linfo_string477:
	.asciz	"cabac"                         # string offset=6779
.Linfo_string478:
	.asciz	"i_low"                         # string offset=6785
.Linfo_string479:
	.asciz	"i_range"                       # string offset=6791
.Linfo_string480:
	.asciz	"i_queue"                       # string offset=6799
.Linfo_string481:
	.asciz	"i_bytes_outstanding"           # string offset=6807
.Linfo_string482:
	.asciz	"f8_bits_encoded"               # string offset=6827
.Linfo_string483:
	.asciz	"state"                         # string offset=6843
.Linfo_string484:
	.asciz	"x264_cabac_t"                  # string offset=6849
.Linfo_string485:
	.asciz	"frames"                        # string offset=6862
.Linfo_string486:
	.asciz	"current"                       # string offset=6869
.Linfo_string487:
	.asciz	"i_qpplus1"                     # string offset=6877
.Linfo_string488:
	.asciz	"i_pts"                         # string offset=6887
.Linfo_string489:
	.asciz	"__int64_t"                     # string offset=6893
.Linfo_string490:
	.asciz	"int64_t"                       # string offset=6903
.Linfo_string491:
	.asciz	"i_reordered_pts"               # string offset=6911
.Linfo_string492:
	.asciz	"i_duration"                    # string offset=6927
.Linfo_string493:
	.asciz	"i_cpb_duration"                # string offset=6938
.Linfo_string494:
	.asciz	"i_dpb_output_delay"            # string offset=6953
.Linfo_string495:
	.asciz	"i_coded"                       # string offset=6972
.Linfo_string496:
	.asciz	"i_field_cnt"                   # string offset=6980
.Linfo_string497:
	.asciz	"b_kept_as_ref"                 # string offset=6992
.Linfo_string498:
	.asciz	"i_pic_struct"                  # string offset=7006
.Linfo_string499:
	.asciz	"b_keyframe"                    # string offset=7019
.Linfo_string500:
	.asciz	"b_fdec"                        # string offset=7030
.Linfo_string501:
	.asciz	"b_last_minigop_bframe"         # string offset=7037
.Linfo_string502:
	.asciz	"i_bframes"                     # string offset=7059
.Linfo_string503:
	.asciz	"f_qp_avg_rc"                   # string offset=7069
.Linfo_string504:
	.asciz	"f_qp_avg_aq"                   # string offset=7081
.Linfo_string505:
	.asciz	"i_poc_l0ref0"                  # string offset=7093
.Linfo_string506:
	.asciz	"i_plane"                       # string offset=7106
.Linfo_string507:
	.asciz	"i_stride"                      # string offset=7114
.Linfo_string508:
	.asciz	"i_lines"                       # string offset=7123
.Linfo_string509:
	.asciz	"i_stride_lowres"               # string offset=7131
.Linfo_string510:
	.asciz	"i_width_lowres"                # string offset=7147
.Linfo_string511:
	.asciz	"i_lines_lowres"                # string offset=7162
.Linfo_string512:
	.asciz	"plane"                         # string offset=7177
.Linfo_string513:
	.asciz	"filtered"                      # string offset=7183
.Linfo_string514:
	.asciz	"lowres"                        # string offset=7192
.Linfo_string515:
	.asciz	"integral"                      # string offset=7199
.Linfo_string516:
	.asciz	"buffer"                        # string offset=7208
.Linfo_string517:
	.asciz	"buffer_lowres"                 # string offset=7215
.Linfo_string518:
	.asciz	"weighted"                      # string offset=7229
.Linfo_string519:
	.asciz	"b_duplicate"                   # string offset=7238
.Linfo_string520:
	.asciz	"orig"                          # string offset=7250
.Linfo_string521:
	.asciz	"mb_type"                       # string offset=7255
.Linfo_string522:
	.asciz	"mb_partition"                  # string offset=7263
.Linfo_string523:
	.asciz	"mv"                            # string offset=7276
.Linfo_string524:
	.asciz	"mv16x16"                       # string offset=7279
.Linfo_string525:
	.asciz	"lowres_mvs"                    # string offset=7287
.Linfo_string526:
	.asciz	"lowres_costs"                  # string offset=7298
.Linfo_string527:
	.asciz	"lowres_mv_costs"               # string offset=7311
.Linfo_string528:
	.asciz	"ref"                           # string offset=7327
.Linfo_string529:
	.asciz	"i_ref"                         # string offset=7331
.Linfo_string530:
	.asciz	"ref_poc"                       # string offset=7337
.Linfo_string531:
	.asciz	"inv_ref_poc"                   # string offset=7345
.Linfo_string532:
	.asciz	"i_cost_est"                    # string offset=7357
.Linfo_string533:
	.asciz	"i_cost_est_aq"                 # string offset=7368
.Linfo_string534:
	.asciz	"i_satd"                        # string offset=7382
.Linfo_string535:
	.asciz	"i_intra_mbs"                   # string offset=7389
.Linfo_string536:
	.asciz	"i_row_satds"                   # string offset=7401
.Linfo_string537:
	.asciz	"i_row_satd"                    # string offset=7413
.Linfo_string538:
	.asciz	"i_row_bits"                    # string offset=7424
.Linfo_string539:
	.asciz	"f_row_qp"                      # string offset=7435
.Linfo_string540:
	.asciz	"f_qp_offset"                   # string offset=7444
.Linfo_string541:
	.asciz	"f_qp_offset_aq"                # string offset=7456
.Linfo_string542:
	.asciz	"b_intra_calculated"            # string offset=7471
.Linfo_string543:
	.asciz	"i_intra_cost"                  # string offset=7490
.Linfo_string544:
	.asciz	"i_propagate_cost"              # string offset=7503
.Linfo_string545:
	.asciz	"i_inv_qscale_factor"           # string offset=7520
.Linfo_string546:
	.asciz	"b_scenecut"                    # string offset=7540
.Linfo_string547:
	.asciz	"f_weighted_cost_delta"         # string offset=7551
.Linfo_string548:
	.asciz	"i_pixel_sum"                   # string offset=7573
.Linfo_string549:
	.asciz	"i_pixel_ssd"                   # string offset=7585
.Linfo_string550:
	.asciz	"hrd_timing"                    # string offset=7597
.Linfo_string551:
	.asciz	"cpb_initial_arrival_time"      # string offset=7608
.Linfo_string552:
	.asciz	"cpb_final_arrival_time"        # string offset=7633
.Linfo_string553:
	.asciz	"cpb_removal_time"              # string offset=7656
.Linfo_string554:
	.asciz	"dpb_output_time"               # string offset=7673
.Linfo_string555:
	.asciz	"x264_hrd_t"                    # string offset=7689
.Linfo_string556:
	.asciz	"i_planned_type"                # string offset=7700
.Linfo_string557:
	.asciz	"i_planned_satd"                # string offset=7715
.Linfo_string558:
	.asciz	"f_planned_cpb_duration"        # string offset=7730
.Linfo_string559:
	.asciz	"i_lines_completed"             # string offset=7753
.Linfo_string560:
	.asciz	"i_lines_weighted"              # string offset=7771
.Linfo_string561:
	.asciz	"i_reference_count"             # string offset=7788
.Linfo_string562:
	.asciz	"mutex"                         # string offset=7806
.Linfo_string563:
	.asciz	"cv"                            # string offset=7812
.Linfo_string564:
	.asciz	"f_pir_position"                # string offset=7815
.Linfo_string565:
	.asciz	"i_pir_start_col"               # string offset=7830
.Linfo_string566:
	.asciz	"i_pir_end_col"                 # string offset=7846
.Linfo_string567:
	.asciz	"i_frames_since_pir"            # string offset=7860
.Linfo_string568:
	.asciz	"x264_frame"                    # string offset=7879
.Linfo_string569:
	.asciz	"x264_frame_t"                  # string offset=7890
.Linfo_string570:
	.asciz	"unused"                        # string offset=7903
.Linfo_string571:
	.asciz	"blank_unused"                  # string offset=7910
.Linfo_string572:
	.asciz	"reference"                     # string offset=7923
.Linfo_string573:
	.asciz	"i_last_keyframe"               # string offset=7933
.Linfo_string574:
	.asciz	"i_input"                       # string offset=7949
.Linfo_string575:
	.asciz	"i_max_dpb"                     # string offset=7957
.Linfo_string576:
	.asciz	"i_max_ref0"                    # string offset=7967
.Linfo_string577:
	.asciz	"i_max_ref1"                    # string offset=7978
.Linfo_string578:
	.asciz	"i_delay"                       # string offset=7989
.Linfo_string579:
	.asciz	"i_bframe_delay"                # string offset=7997
.Linfo_string580:
	.asciz	"i_bframe_delay_time"           # string offset=8012
.Linfo_string581:
	.asciz	"i_init_delta"                  # string offset=8032
.Linfo_string582:
	.asciz	"i_prev_reordered_pts"          # string offset=8045
.Linfo_string583:
	.asciz	"i_largest_pts"                 # string offset=8066
.Linfo_string584:
	.asciz	"i_second_largest_pts"          # string offset=8080
.Linfo_string585:
	.asciz	"b_have_lowres"                 # string offset=8101
.Linfo_string586:
	.asciz	"b_have_sub8x8_esa"             # string offset=8115
.Linfo_string587:
	.asciz	"fenc"                          # string offset=8133
.Linfo_string588:
	.asciz	"fdec"                          # string offset=8138
.Linfo_string589:
	.asciz	"i_ref0"                        # string offset=8143
.Linfo_string590:
	.asciz	"fref0"                         # string offset=8150
.Linfo_string591:
	.asciz	"i_ref1"                        # string offset=8156
.Linfo_string592:
	.asciz	"fref1"                         # string offset=8163
.Linfo_string593:
	.asciz	"b_ref_reorder"                 # string offset=8169
.Linfo_string594:
	.asciz	"initial_cpb_removal_delay"     # string offset=8183
.Linfo_string595:
	.asciz	"initial_cpb_removal_delay_offset" # string offset=8209
.Linfo_string596:
	.asciz	"i_reordered_pts_delay"         # string offset=8242
.Linfo_string597:
	.asciz	"dct"                           # string offset=8264
.Linfo_string598:
	.asciz	"luma16x16_dc"                  # string offset=8268
.Linfo_string599:
	.asciz	"chroma_dc"                     # string offset=8281
.Linfo_string600:
	.asciz	"luma8x8"                       # string offset=8291
.Linfo_string601:
	.asciz	"luma4x4"                       # string offset=8299
.Linfo_string602:
	.asciz	"mb"                            # string offset=8307
.Linfo_string603:
	.asciz	"i_mb_count"                    # string offset=8310
.Linfo_string604:
	.asciz	"i_mb_stride"                   # string offset=8321
.Linfo_string605:
	.asciz	"i_b8_stride"                   # string offset=8333
.Linfo_string606:
	.asciz	"i_b4_stride"                   # string offset=8345
.Linfo_string607:
	.asciz	"i_mb_x"                        # string offset=8357
.Linfo_string608:
	.asciz	"i_mb_y"                        # string offset=8364
.Linfo_string609:
	.asciz	"i_mb_xy"                       # string offset=8371
.Linfo_string610:
	.asciz	"i_b8_xy"                       # string offset=8379
.Linfo_string611:
	.asciz	"i_b4_xy"                       # string offset=8387
.Linfo_string612:
	.asciz	"b_trellis"                     # string offset=8395
.Linfo_string613:
	.asciz	"b_noise_reduction"             # string offset=8405
.Linfo_string614:
	.asciz	"i_psy_rd"                      # string offset=8423
.Linfo_string615:
	.asciz	"i_psy_trellis"                 # string offset=8432
.Linfo_string616:
	.asciz	"mv_min"                        # string offset=8446
.Linfo_string617:
	.asciz	"mv_max"                        # string offset=8453
.Linfo_string618:
	.asciz	"mv_min_spel"                   # string offset=8460
.Linfo_string619:
	.asciz	"mv_max_spel"                   # string offset=8472
.Linfo_string620:
	.asciz	"mv_min_fpel"                   # string offset=8484
.Linfo_string621:
	.asciz	"mv_max_fpel"                   # string offset=8496
.Linfo_string622:
	.asciz	"i_neighbour"                   # string offset=8508
.Linfo_string623:
	.asciz	"i_neighbour8"                  # string offset=8520
.Linfo_string624:
	.asciz	"i_neighbour4"                  # string offset=8533
.Linfo_string625:
	.asciz	"i_neighbour_intra"             # string offset=8546
.Linfo_string626:
	.asciz	"i_neighbour_frame"             # string offset=8564
.Linfo_string627:
	.asciz	"i_mb_type_top"                 # string offset=8582
.Linfo_string628:
	.asciz	"i_mb_type_left"                # string offset=8596
.Linfo_string629:
	.asciz	"i_mb_type_topleft"             # string offset=8611
.Linfo_string630:
	.asciz	"i_mb_type_topright"            # string offset=8629
.Linfo_string631:
	.asciz	"i_mb_prev_xy"                  # string offset=8648
.Linfo_string632:
	.asciz	"i_mb_left_xy"                  # string offset=8661
.Linfo_string633:
	.asciz	"i_mb_top_xy"                   # string offset=8674
.Linfo_string634:
	.asciz	"i_mb_topleft_xy"               # string offset=8686
.Linfo_string635:
	.asciz	"i_mb_topright_xy"              # string offset=8702
.Linfo_string636:
	.asciz	"type"                          # string offset=8719
.Linfo_string637:
	.asciz	"partition"                     # string offset=8724
.Linfo_string638:
	.asciz	"qp"                            # string offset=8734
.Linfo_string639:
	.asciz	"cbp"                           # string offset=8737
.Linfo_string640:
	.asciz	"intra4x4_pred_mode"            # string offset=8741
.Linfo_string641:
	.asciz	"non_zero_count"                # string offset=8760
.Linfo_string642:
	.asciz	"chroma_pred_mode"              # string offset=8775
.Linfo_string643:
	.asciz	"mvd"                           # string offset=8792
.Linfo_string644:
	.asciz	"mvr"                           # string offset=8796
.Linfo_string645:
	.asciz	"skipbp"                        # string offset=8800
.Linfo_string646:
	.asciz	"mb_transform_size"             # string offset=8807
.Linfo_string647:
	.asciz	"slice_table"                   # string offset=8825
.Linfo_string648:
	.asciz	"p_weight_buf"                  # string offset=8837
.Linfo_string649:
	.asciz	"i_partition"                   # string offset=8850
.Linfo_string650:
	.asciz	"i_sub_partition"               # string offset=8862
.Linfo_string651:
	.asciz	"i_cbp_luma"                    # string offset=8878
.Linfo_string652:
	.asciz	"i_cbp_chroma"                  # string offset=8889
.Linfo_string653:
	.asciz	"i_intra16x16_pred_mode"        # string offset=8902
.Linfo_string654:
	.asciz	"i_chroma_pred_mode"            # string offset=8925
.Linfo_string655:
	.asciz	"i_skip_intra"                  # string offset=8944
.Linfo_string656:
	.asciz	"b_skip_mc"                     # string offset=8957
.Linfo_string657:
	.asciz	"b_reencode_mb"                 # string offset=8967
.Linfo_string658:
	.asciz	"ip_offset"                     # string offset=8981
.Linfo_string659:
	.asciz	"pic"                           # string offset=8991
.Linfo_string660:
	.asciz	"fenc_buf"                      # string offset=8995
.Linfo_string661:
	.asciz	"fdec_buf"                      # string offset=9004
.Linfo_string662:
	.asciz	"i4x4_fdec_buf"                 # string offset=9013
.Linfo_string663:
	.asciz	"i8x8_fdec_buf"                 # string offset=9027
.Linfo_string664:
	.asciz	"i8x8_dct_buf"                  # string offset=9041
.Linfo_string665:
	.asciz	"i4x4_dct_buf"                  # string offset=9054
.Linfo_string666:
	.asciz	"i4x4_nnz_buf"                  # string offset=9067
.Linfo_string667:
	.asciz	"i8x8_nnz_buf"                  # string offset=9080
.Linfo_string668:
	.asciz	"i4x4_cbp"                      # string offset=9093
.Linfo_string669:
	.asciz	"i8x8_cbp"                      # string offset=9102
.Linfo_string670:
	.asciz	"fenc_dct8"                     # string offset=9111
.Linfo_string671:
	.asciz	"fenc_dct4"                     # string offset=9121
.Linfo_string672:
	.asciz	"fenc_hadamard_cache"           # string offset=9131
.Linfo_string673:
	.asciz	"fenc_satd_cache"               # string offset=9151
.Linfo_string674:
	.asciz	"p_fenc"                        # string offset=9167
.Linfo_string675:
	.asciz	"p_fenc_plane"                  # string offset=9174
.Linfo_string676:
	.asciz	"p_fdec"                        # string offset=9187
.Linfo_string677:
	.asciz	"i_fref"                        # string offset=9194
.Linfo_string678:
	.asciz	"p_fref"                        # string offset=9201
.Linfo_string679:
	.asciz	"p_fref_w"                      # string offset=9208
.Linfo_string680:
	.asciz	"p_integral"                    # string offset=9217
.Linfo_string681:
	.asciz	"cache"                         # string offset=9228
.Linfo_string682:
	.asciz	"skip"                          # string offset=9234
.Linfo_string683:
	.asciz	"direct_mv"                     # string offset=9239
.Linfo_string684:
	.asciz	"direct_ref"                    # string offset=9249
.Linfo_string685:
	.asciz	"direct_partition"              # string offset=9260
.Linfo_string686:
	.asciz	"pskip_mv"                      # string offset=9277
.Linfo_string687:
	.asciz	"i_neighbour_transform_size"    # string offset=9286
.Linfo_string688:
	.asciz	"i_neighbour_interlaced"        # string offset=9313
.Linfo_string689:
	.asciz	"i_cbp_top"                     # string offset=9336
.Linfo_string690:
	.asciz	"i_cbp_left"                    # string offset=9346
.Linfo_string691:
	.asciz	"i_chroma_qp"                   # string offset=9357
.Linfo_string692:
	.asciz	"i_last_qp"                     # string offset=9369
.Linfo_string693:
	.asciz	"i_last_dqp"                    # string offset=9379
.Linfo_string694:
	.asciz	"b_variable_qp"                 # string offset=9390
.Linfo_string695:
	.asciz	"b_lossless"                    # string offset=9404
.Linfo_string696:
	.asciz	"b_direct_auto_read"            # string offset=9415
.Linfo_string697:
	.asciz	"b_direct_auto_write"           # string offset=9434
.Linfo_string698:
	.asciz	"i_trellis_lambda2"             # string offset=9454
.Linfo_string699:
	.asciz	"i_psy_rd_lambda"               # string offset=9472
.Linfo_string700:
	.asciz	"i_chroma_lambda2_offset"       # string offset=9488
.Linfo_string701:
	.asciz	"dist_scale_factor_buf"         # string offset=9512
.Linfo_string702:
	.asciz	"dist_scale_factor"             # string offset=9534
.Linfo_string703:
	.asciz	"bipred_weight_buf"             # string offset=9552
.Linfo_string704:
	.asciz	"bipred_weight"                 # string offset=9570
.Linfo_string705:
	.asciz	"map_col_to_list0"              # string offset=9584
.Linfo_string706:
	.asciz	"ref_blind_dupe"                # string offset=9601
.Linfo_string707:
	.asciz	"deblock_ref_table"             # string offset=9616
.Linfo_string708:
	.asciz	"x264_ratecontrol_t"            # string offset=9634
.Linfo_string709:
	.asciz	"stat"                          # string offset=9653
.Linfo_string710:
	.asciz	"frame"                         # string offset=9658
.Linfo_string711:
	.asciz	"i_mv_bits"                     # string offset=9664
.Linfo_string712:
	.asciz	"i_tex_bits"                    # string offset=9674
.Linfo_string713:
	.asciz	"i_misc_bits"                   # string offset=9685
.Linfo_string714:
	.asciz	"i_mb_count_i"                  # string offset=9697
.Linfo_string715:
	.asciz	"i_mb_count_p"                  # string offset=9710
.Linfo_string716:
	.asciz	"i_mb_count_skip"               # string offset=9723
.Linfo_string717:
	.asciz	"i_mb_count_8x8dct"             # string offset=9739
.Linfo_string718:
	.asciz	"i_mb_count_ref"                # string offset=9757
.Linfo_string719:
	.asciz	"i_mb_partition"                # string offset=9772
.Linfo_string720:
	.asciz	"i_mb_cbp"                      # string offset=9787
.Linfo_string721:
	.asciz	"i_mb_pred_mode"                # string offset=9796
.Linfo_string722:
	.asciz	"i_direct_score"                # string offset=9811
.Linfo_string723:
	.asciz	"i_ssd"                         # string offset=9826
.Linfo_string724:
	.asciz	"f_ssim"                        # string offset=9832
.Linfo_string725:
	.asciz	"i_frame_count"                 # string offset=9839
.Linfo_string726:
	.asciz	"i_frame_size"                  # string offset=9853
.Linfo_string727:
	.asciz	"f_frame_qp"                    # string offset=9866
.Linfo_string728:
	.asciz	"i_consecutive_bframes"         # string offset=9877
.Linfo_string729:
	.asciz	"i_ssd_global"                  # string offset=9899
.Linfo_string730:
	.asciz	"f_psnr_average"                # string offset=9912
.Linfo_string731:
	.asciz	"f_psnr_mean_y"                 # string offset=9927
.Linfo_string732:
	.asciz	"f_psnr_mean_u"                 # string offset=9941
.Linfo_string733:
	.asciz	"f_psnr_mean_v"                 # string offset=9955
.Linfo_string734:
	.asciz	"f_ssim_mean_y"                 # string offset=9969
.Linfo_string735:
	.asciz	"i_direct_frames"               # string offset=9983
.Linfo_string736:
	.asciz	"i_wpred"                       # string offset=9999
.Linfo_string737:
	.asciz	"nr_residual_sum"               # string offset=10007
.Linfo_string738:
	.asciz	"nr_offset"                     # string offset=10023
.Linfo_string739:
	.asciz	"nr_count"                      # string offset=10033
.Linfo_string740:
	.asciz	"scratch_buffer"                # string offset=10042
.Linfo_string741:
	.asciz	"intra_border_backup"           # string offset=10057
.Linfo_string742:
	.asciz	"deblock_strength"              # string offset=10077
.Linfo_string743:
	.asciz	"predict_16x16"                 # string offset=10094
.Linfo_string744:
	.asciz	"x264_predict_t"                # string offset=10108
.Linfo_string745:
	.asciz	"predict_8x8c"                  # string offset=10123
.Linfo_string746:
	.asciz	"predict_8x8"                   # string offset=10136
.Linfo_string747:
	.asciz	"x264_predict8x8_t"             # string offset=10148
.Linfo_string748:
	.asciz	"predict_4x4"                   # string offset=10166
.Linfo_string749:
	.asciz	"predict_8x8_filter"            # string offset=10178
.Linfo_string750:
	.asciz	"x264_predict_8x8_filter_t"     # string offset=10197
.Linfo_string751:
	.asciz	"pixf"                          # string offset=10223
.Linfo_string752:
	.asciz	"sad"                           # string offset=10228
.Linfo_string753:
	.asciz	"x264_pixel_cmp_t"              # string offset=10232
.Linfo_string754:
	.asciz	"ssd"                           # string offset=10249
.Linfo_string755:
	.asciz	"satd"                          # string offset=10253
.Linfo_string756:
	.asciz	"ssim"                          # string offset=10258
.Linfo_string757:
	.asciz	"sa8d"                          # string offset=10263
.Linfo_string758:
	.asciz	"mbcmp"                         # string offset=10268
.Linfo_string759:
	.asciz	"mbcmp_unaligned"               # string offset=10274
.Linfo_string760:
	.asciz	"fpelcmp"                       # string offset=10290
.Linfo_string761:
	.asciz	"fpelcmp_x3"                    # string offset=10298
.Linfo_string762:
	.asciz	"x264_pixel_cmp_x3_t"           # string offset=10309
.Linfo_string763:
	.asciz	"fpelcmp_x4"                    # string offset=10329
.Linfo_string764:
	.asciz	"x264_pixel_cmp_x4_t"           # string offset=10340
.Linfo_string765:
	.asciz	"sad_aligned"                   # string offset=10360
.Linfo_string766:
	.asciz	"var2_8x8"                      # string offset=10372
.Linfo_string767:
	.asciz	"var"                           # string offset=10381
.Linfo_string768:
	.asciz	"hadamard_ac"                   # string offset=10385
.Linfo_string769:
	.asciz	"ssim_4x4x2_core"               # string offset=10397
.Linfo_string770:
	.asciz	"ssim_end4"                     # string offset=10413
.Linfo_string771:
	.asciz	"sad_x3"                        # string offset=10423
.Linfo_string772:
	.asciz	"sad_x4"                        # string offset=10430
.Linfo_string773:
	.asciz	"satd_x3"                       # string offset=10437
.Linfo_string774:
	.asciz	"satd_x4"                       # string offset=10445
.Linfo_string775:
	.asciz	"ads"                           # string offset=10453
.Linfo_string776:
	.asciz	"intra_mbcmp_x3_16x16"          # string offset=10457
.Linfo_string777:
	.asciz	"intra_satd_x3_16x16"           # string offset=10478
.Linfo_string778:
	.asciz	"intra_sad_x3_16x16"            # string offset=10498
.Linfo_string779:
	.asciz	"intra_mbcmp_x3_8x8c"           # string offset=10517
.Linfo_string780:
	.asciz	"intra_satd_x3_8x8c"            # string offset=10537
.Linfo_string781:
	.asciz	"intra_sad_x3_8x8c"             # string offset=10556
.Linfo_string782:
	.asciz	"intra_mbcmp_x3_4x4"            # string offset=10574
.Linfo_string783:
	.asciz	"intra_satd_x3_4x4"             # string offset=10593
.Linfo_string784:
	.asciz	"intra_sad_x3_4x4"              # string offset=10611
.Linfo_string785:
	.asciz	"intra_mbcmp_x3_8x8"            # string offset=10628
.Linfo_string786:
	.asciz	"intra_sa8d_x3_8x8"             # string offset=10647
.Linfo_string787:
	.asciz	"intra_sad_x3_8x8"              # string offset=10665
.Linfo_string788:
	.asciz	"x264_pixel_function_t"         # string offset=10682
.Linfo_string789:
	.asciz	"mc"                            # string offset=10704
.Linfo_string790:
	.asciz	"mc_luma"                       # string offset=10707
.Linfo_string791:
	.asciz	"get_ref"                       # string offset=10715
.Linfo_string792:
	.asciz	"mc_chroma"                     # string offset=10723
.Linfo_string793:
	.asciz	"avg"                           # string offset=10733
.Linfo_string794:
	.asciz	"copy"                          # string offset=10737
.Linfo_string795:
	.asciz	"copy_16x16_unaligned"          # string offset=10742
.Linfo_string796:
	.asciz	"plane_copy"                    # string offset=10763
.Linfo_string797:
	.asciz	"hpel_filter"                   # string offset=10774
.Linfo_string798:
	.asciz	"prefetch_fenc"                 # string offset=10786
.Linfo_string799:
	.asciz	"prefetch_ref"                  # string offset=10800
.Linfo_string800:
	.asciz	"memcpy_aligned"                # string offset=10813
.Linfo_string801:
	.asciz	"size_t"                        # string offset=10828
.Linfo_string802:
	.asciz	"memzero_aligned"               # string offset=10835
.Linfo_string803:
	.asciz	"integral_init4h"               # string offset=10851
.Linfo_string804:
	.asciz	"integral_init8h"               # string offset=10867
.Linfo_string805:
	.asciz	"integral_init4v"               # string offset=10883
.Linfo_string806:
	.asciz	"integral_init8v"               # string offset=10899
.Linfo_string807:
	.asciz	"frame_init_lowres_core"        # string offset=10915
.Linfo_string808:
	.asciz	"offsetadd"                     # string offset=10938
.Linfo_string809:
	.asciz	"offsetsub"                     # string offset=10948
.Linfo_string810:
	.asciz	"weight_cache"                  # string offset=10958
.Linfo_string811:
	.asciz	"mbtree_propagate_cost"         # string offset=10971
.Linfo_string812:
	.asciz	"x264_mc_functions_t"           # string offset=10993
.Linfo_string813:
	.asciz	"dctf"                          # string offset=11013
.Linfo_string814:
	.asciz	"sub4x4_dct"                    # string offset=11018
.Linfo_string815:
	.asciz	"add4x4_idct"                   # string offset=11029
.Linfo_string816:
	.asciz	"sub8x8_dct"                    # string offset=11041
.Linfo_string817:
	.asciz	"sub8x8_dct_dc"                 # string offset=11052
.Linfo_string818:
	.asciz	"add8x8_idct"                   # string offset=11066
.Linfo_string819:
	.asciz	"add8x8_idct_dc"                # string offset=11078
.Linfo_string820:
	.asciz	"sub16x16_dct"                  # string offset=11093
.Linfo_string821:
	.asciz	"add16x16_idct"                 # string offset=11106
.Linfo_string822:
	.asciz	"add16x16_idct_dc"              # string offset=11120
.Linfo_string823:
	.asciz	"sub8x8_dct8"                   # string offset=11137
.Linfo_string824:
	.asciz	"add8x8_idct8"                  # string offset=11149
.Linfo_string825:
	.asciz	"sub16x16_dct8"                 # string offset=11162
.Linfo_string826:
	.asciz	"add16x16_idct8"                # string offset=11176
.Linfo_string827:
	.asciz	"dct4x4dc"                      # string offset=11191
.Linfo_string828:
	.asciz	"idct4x4dc"                     # string offset=11200
.Linfo_string829:
	.asciz	"x264_dct_function_t"           # string offset=11210
.Linfo_string830:
	.asciz	"zigzagf"                       # string offset=11230
.Linfo_string831:
	.asciz	"scan_8x8"                      # string offset=11238
.Linfo_string832:
	.asciz	"scan_4x4"                      # string offset=11247
.Linfo_string833:
	.asciz	"sub_8x8"                       # string offset=11256
.Linfo_string834:
	.asciz	"sub_4x4"                       # string offset=11264
.Linfo_string835:
	.asciz	"sub_4x4ac"                     # string offset=11272
.Linfo_string836:
	.asciz	"interleave_8x8_cavlc"          # string offset=11282
.Linfo_string837:
	.asciz	"x264_zigzag_function_t"        # string offset=11303
.Linfo_string838:
	.asciz	"quantf"                        # string offset=11326
.Linfo_string839:
	.asciz	"quant_8x8"                     # string offset=11333
.Linfo_string840:
	.asciz	"quant_4x4"                     # string offset=11343
.Linfo_string841:
	.asciz	"quant_4x4_dc"                  # string offset=11353
.Linfo_string842:
	.asciz	"quant_2x2_dc"                  # string offset=11366
.Linfo_string843:
	.asciz	"dequant_8x8"                   # string offset=11379
.Linfo_string844:
	.asciz	"dequant_4x4"                   # string offset=11391
.Linfo_string845:
	.asciz	"dequant_4x4_dc"                # string offset=11403
.Linfo_string846:
	.asciz	"denoise_dct"                   # string offset=11418
.Linfo_string847:
	.asciz	"decimate_score15"              # string offset=11430
.Linfo_string848:
	.asciz	"decimate_score16"              # string offset=11447
.Linfo_string849:
	.asciz	"decimate_score64"              # string offset=11464
.Linfo_string850:
	.asciz	"coeff_last"                    # string offset=11481
.Linfo_string851:
	.asciz	"coeff_level_run"               # string offset=11492
.Linfo_string852:
	.asciz	"last"                          # string offset=11508
.Linfo_string853:
	.asciz	"level"                         # string offset=11513
.Linfo_string854:
	.asciz	"run"                           # string offset=11519
.Linfo_string855:
	.asciz	"x264_run_level_t"              # string offset=11523
.Linfo_string856:
	.asciz	"x264_quant_function_t"         # string offset=11540
.Linfo_string857:
	.asciz	"loopf"                         # string offset=11562
.Linfo_string858:
	.asciz	"deblock_luma"                  # string offset=11568
.Linfo_string859:
	.asciz	"x264_deblock_inter_t"          # string offset=11581
.Linfo_string860:
	.asciz	"deblock_chroma"                # string offset=11602
.Linfo_string861:
	.asciz	"deblock_luma_intra"            # string offset=11617
.Linfo_string862:
	.asciz	"x264_deblock_intra_t"          # string offset=11636
.Linfo_string863:
	.asciz	"deblock_chroma_intra"          # string offset=11657
.Linfo_string864:
	.asciz	"x264_deblock_function_t"       # string offset=11678
.Linfo_string865:
	.asciz	"lookahead"                     # string offset=11702
.Linfo_string866:
	.asciz	"b_exit_thread"                 # string offset=11712
.Linfo_string867:
	.asciz	"b_analyse_keyframe"            # string offset=11726
.Linfo_string868:
	.asciz	"i_slicetype_length"            # string offset=11745
.Linfo_string869:
	.asciz	"last_nonb"                     # string offset=11764
.Linfo_string870:
	.asciz	"ifbuf"                         # string offset=11774
.Linfo_string871:
	.asciz	"list"                          # string offset=11780
.Linfo_string872:
	.asciz	"i_max_size"                    # string offset=11785
.Linfo_string873:
	.asciz	"i_size"                        # string offset=11796
.Linfo_string874:
	.asciz	"cv_fill"                       # string offset=11803
.Linfo_string875:
	.asciz	"cv_empty"                      # string offset=11811
.Linfo_string876:
	.asciz	"x264_synch_frame_list_t"       # string offset=11820
.Linfo_string877:
	.asciz	"next"                          # string offset=11844
.Linfo_string878:
	.asciz	"ofbuf"                         # string offset=11849
.Linfo_string879:
	.asciz	"x264_lookahead_t"              # string offset=11855
.Linfo_string880:
	.asciz	"x264_t"                        # string offset=11872
.Linfo_string881:
	.asciz	"spec_strdup"                   # string offset=11879
.Linfo_string882:
	.asciz	"x264_reduce_fraction"          # string offset=11891
.Linfo_string883:
	.asciz	"x264_log"                      # string offset=11912
.Linfo_string884:
	.asciz	"x264_sps_init"                 # string offset=11921
.Linfo_string885:
	.asciz	"x264_pps_init"                 # string offset=11935
.Linfo_string886:
	.asciz	"x264_validate_levels"          # string offset=11949
.Linfo_string887:
	.asciz	"x264_cqm_init"                 # string offset=11970
.Linfo_string888:
	.asciz	"x264_free"                     # string offset=11984
.Linfo_string889:
	.asciz	"x264_rdo_init"                 # string offset=11994
.Linfo_string890:
	.asciz	"x264_predict_16x16_init"       # string offset=12008
.Linfo_string891:
	.asciz	"x264_predict_8x8c_init"        # string offset=12032
.Linfo_string892:
	.asciz	"x264_predict_8x8_init"         # string offset=12055
.Linfo_string893:
	.asciz	"x264_predict_4x4_init"         # string offset=12077
.Linfo_string894:
	.asciz	"x264_init_vlc_tables"          # string offset=12099
.Linfo_string895:
	.asciz	"x264_pixel_init"               # string offset=12120
.Linfo_string896:
	.asciz	"x264_dct_init"                 # string offset=12136
.Linfo_string897:
	.asciz	"x264_zigzag_init"              # string offset=12150
.Linfo_string898:
	.asciz	"x264_mc_init"                  # string offset=12167
.Linfo_string899:
	.asciz	"x264_quant_init"               # string offset=12180
.Linfo_string900:
	.asciz	"x264_deblock_init"             # string offset=12196
.Linfo_string901:
	.asciz	"x264_dct_init_weights"         # string offset=12214
.Linfo_string902:
	.asciz	"strcmp"                        # string offset=12236
.Linfo_string903:
	.asciz	"sprintf"                       # string offset=12243
.Linfo_string904:
	.asciz	"x264_analyse_init_costs"       # string offset=12251
.Linfo_string905:
	.asciz	"pow"                           # string offset=12275
.Linfo_string906:
	.asciz	"x264_lookahead_init"           # string offset=12279
.Linfo_string907:
	.asciz	"x264_frame_pop_unused"         # string offset=12299
.Linfo_string908:
	.asciz	"x264_macroblock_cache_allocate" # string offset=12321
.Linfo_string909:
	.asciz	"x264_macroblock_thread_allocate" # string offset=12352
.Linfo_string910:
	.asciz	"x264_ratecontrol_new"          # string offset=12384
.Linfo_string911:
	.asciz	"fopen"                         # string offset=12405
.Linfo_string912:
	.asciz	"_flags"                        # string offset=12411
.Linfo_string913:
	.asciz	"_IO_read_ptr"                  # string offset=12418
.Linfo_string914:
	.asciz	"_IO_read_end"                  # string offset=12431
.Linfo_string915:
	.asciz	"_IO_read_base"                 # string offset=12444
.Linfo_string916:
	.asciz	"_IO_write_base"                # string offset=12458
.Linfo_string917:
	.asciz	"_IO_write_ptr"                 # string offset=12473
.Linfo_string918:
	.asciz	"_IO_write_end"                 # string offset=12487
.Linfo_string919:
	.asciz	"_IO_buf_base"                  # string offset=12501
.Linfo_string920:
	.asciz	"_IO_buf_end"                   # string offset=12514
.Linfo_string921:
	.asciz	"_IO_save_base"                 # string offset=12526
.Linfo_string922:
	.asciz	"_IO_backup_base"               # string offset=12540
.Linfo_string923:
	.asciz	"_IO_save_end"                  # string offset=12556
.Linfo_string924:
	.asciz	"_markers"                      # string offset=12569
.Linfo_string925:
	.asciz	"_IO_marker"                    # string offset=12578
.Linfo_string926:
	.asciz	"_chain"                        # string offset=12589
.Linfo_string927:
	.asciz	"_fileno"                       # string offset=12596
.Linfo_string928:
	.asciz	"_flags2"                       # string offset=12604
.Linfo_string929:
	.asciz	"_old_offset"                   # string offset=12612
.Linfo_string930:
	.asciz	"__off_t"                       # string offset=12624
.Linfo_string931:
	.asciz	"_cur_column"                   # string offset=12632
.Linfo_string932:
	.asciz	"_vtable_offset"                # string offset=12644
.Linfo_string933:
	.asciz	"_shortbuf"                     # string offset=12659
.Linfo_string934:
	.asciz	"_lock"                         # string offset=12669
.Linfo_string935:
	.asciz	"_IO_lock_t"                    # string offset=12675
.Linfo_string936:
	.asciz	"_offset"                       # string offset=12686
.Linfo_string937:
	.asciz	"__off64_t"                     # string offset=12694
.Linfo_string938:
	.asciz	"_codecvt"                      # string offset=12704
.Linfo_string939:
	.asciz	"_IO_codecvt"                   # string offset=12713
.Linfo_string940:
	.asciz	"_wide_data"                    # string offset=12725
.Linfo_string941:
	.asciz	"_IO_wide_data"                 # string offset=12736
.Linfo_string942:
	.asciz	"_freeres_list"                 # string offset=12750
.Linfo_string943:
	.asciz	"_freeres_buf"                  # string offset=12764
.Linfo_string944:
	.asciz	"__pad5"                        # string offset=12777
.Linfo_string945:
	.asciz	"_mode"                         # string offset=12784
.Linfo_string946:
	.asciz	"_unused2"                      # string offset=12790
.Linfo_string947:
	.asciz	"_IO_FILE"                      # string offset=12799
.Linfo_string948:
	.asciz	"FILE"                          # string offset=12808
.Linfo_string949:
	.asciz	"fclose"                        # string offset=12813
.Linfo_string950:
	.asciz	"x264_clip3"                    # string offset=12820
.Linfo_string951:
	.asciz	"v"                             # string offset=12831
.Linfo_string952:
	.asciz	"i_min"                         # string offset=12833
.Linfo_string953:
	.asciz	"i_max"                         # string offset=12839
.Linfo_string954:
	.asciz	"x264_clip3f"                   # string offset=12845
.Linfo_string955:
	.asciz	"f_min"                         # string offset=12857
.Linfo_string956:
	.asciz	"f_max"                         # string offset=12863
.Linfo_string957:
	.asciz	"x264_cpu_num_processors"       # string offset=12869
.Linfo_string958:
	.asciz	"log2f"                         # string offset=12893
.Linfo_string959:
	.asciz	"mbcmp_init"                    # string offset=12899
.Linfo_string960:
	.asciz	"h"                             # string offset=12910
.Linfo_string961:
	.asciz	"x264_ratecontrol_init_reconfigurable" # string offset=12912
.Linfo_string962:
	.asciz	"x264_nal_start"                # string offset=12949
.Linfo_string963:
	.asciz	"bs_init"                       # string offset=12964
.Linfo_string964:
	.asciz	"s"                             # string offset=12972
.Linfo_string965:
	.asciz	"p_data"                        # string offset=12974
.Linfo_string966:
	.asciz	"i_data"                        # string offset=12981
.Linfo_string967:
	.asciz	"offset"                        # string offset=12988
.Linfo_string968:
	.asciz	"endian_fix32"                  # string offset=12995
.Linfo_string969:
	.asciz	"x"                             # string offset=13008
.Linfo_string970:
	.asciz	"bs_pos"                        # string offset=13010
.Linfo_string971:
	.asciz	"x264_nal_end"                  # string offset=13017
.Linfo_string972:
	.asciz	"x264_nal_check_buffer"         # string offset=13030
.Linfo_string973:
	.asciz	"new_out"                       # string offset=13052
.Linfo_string974:
	.asciz	"x264_sps_write"                # string offset=13060
.Linfo_string975:
	.asciz	"x264_pps_write"                # string offset=13075
.Linfo_string976:
	.asciz	"x264_sei_version_write"        # string offset=13090
.Linfo_string977:
	.asciz	"x264_nal_encode"               # string offset=13113
.Linfo_string978:
	.asciz	"x264_frame_pop_blank_unused"   # string offset=13129
.Linfo_string979:
	.asciz	"x264_frame_unshift"            # string offset=13157
.Linfo_string980:
	.asciz	"x264_thread_sync_context"      # string offset=13176
.Linfo_string981:
	.asciz	"dst"                           # string offset=13201
.Linfo_string982:
	.asciz	"src"                           # string offset=13205
.Linfo_string983:
	.asciz	"f"                             # string offset=13209
.Linfo_string984:
	.asciz	"x264_reference_update"         # string offset=13211
.Linfo_string985:
	.asciz	"j"                             # string offset=13233
.Linfo_string986:
	.asciz	"x264_reference_reset"          # string offset=13235
.Linfo_string987:
	.asciz	"x264_reference_build_list"     # string offset=13256
.Linfo_string988:
	.asciz	"b_ok"                          # string offset=13282
.Linfo_string989:
	.asciz	"t"                             # string offset=13287
.Linfo_string990:
	.asciz	"diff"                          # string offset=13289
.Linfo_string991:
	.asciz	"idx"                           # string offset=13294
.Linfo_string992:
	.asciz	"w"                             # string offset=13298
.Linfo_string993:
	.asciz	"x264_reference_check_reorder"  # string offset=13300
.Linfo_string994:
	.asciz	"x264_weighted_reference_duplicate" # string offset=13329
.Linfo_string995:
	.asciz	"newframe"                      # string offset=13363
.Linfo_string996:
	.asciz	"bs_write"                      # string offset=13372
.Linfo_string997:
	.asciz	"i_count"                       # string offset=13381
.Linfo_string998:
	.asciz	"i_bits"                        # string offset=13389
.Linfo_string999:
	.asciz	"endian_fix64"                  # string offset=13396
.Linfo_string1000:
	.asciz	"endian_fix"                    # string offset=13409
.Linfo_string1001:
	.asciz	"bs_write1"                     # string offset=13420
.Linfo_string1002:
	.asciz	"i_bit"                         # string offset=13430
.Linfo_string1003:
	.asciz	"bs_rbsp_trailing"              # string offset=13436
.Linfo_string1004:
	.asciz	"x264_weighted_pred_init"       # string offset=13453
.Linfo_string1005:
	.asciz	"i_padv"                        # string offset=13477
.Linfo_string1006:
	.asciz	"denom"                         # string offset=13484
.Linfo_string1007:
	.asciz	"weightluma"                    # string offset=13490
.Linfo_string1008:
	.asciz	"buffer_next"                   # string offset=13501
.Linfo_string1009:
	.asciz	"stride"                        # string offset=13513
.Linfo_string1010:
	.asciz	"width"                         # string offset=13520
.Linfo_string1011:
	.asciz	"height"                        # string offset=13526
.Linfo_string1012:
	.asciz	"x264_slice_init"               # string offset=13533
.Linfo_string1013:
	.asciz	"i_global_qp"                   # string offset=13549
.Linfo_string1014:
	.asciz	"x264_frame_push_unused"        # string offset=13561
.Linfo_string1015:
	.asciz	"x264_thread_sync_ratecontrol"  # string offset=13584
.Linfo_string1016:
	.asciz	"x264_frame_shift"              # string offset=13613
.Linfo_string1017:
	.asciz	"x264_frame_push"               # string offset=13630
.Linfo_string1018:
	.asciz	"x264_frame_copy_picture"       # string offset=13646
.Linfo_string1019:
	.asciz	"i_dts"                         # string offset=13670
.Linfo_string1020:
	.asciz	"img"                           # string offset=13676
.Linfo_string1021:
	.asciz	"x264_image_t"                  # string offset=13680
.Linfo_string1022:
	.asciz	"opaque"                        # string offset=13693
.Linfo_string1023:
	.asciz	"x264_picture_t"                # string offset=13700
.Linfo_string1024:
	.asciz	"x264_frame_expand_border_mod16" # string offset=13715
.Linfo_string1025:
	.asciz	"x264_lookahead_get_frames"     # string offset=13746
.Linfo_string1026:
	.asciz	"x264_frame_pop"                # string offset=13772
.Linfo_string1027:
	.asciz	"x264_lookahead_is_empty"       # string offset=13787
.Linfo_string1028:
	.asciz	"x264_weight_plane_analyse"     # string offset=13811
.Linfo_string1029:
	.asciz	"x264_frame_init_lowres"        # string offset=13837
.Linfo_string1030:
	.asciz	"x264_macroblock_tree_read"     # string offset=13860
.Linfo_string1031:
	.asciz	"x264_adaptive_quant_frame"     # string offset=13886
.Linfo_string1032:
	.asciz	"x264_lookahead_put_frame"      # string offset=13912
.Linfo_string1033:
	.asciz	"x264_ratecontrol_set_weights"  # string offset=13937
.Linfo_string1034:
	.asciz	"x264_sei_recovery_point_write" # string offset=13966
.Linfo_string1035:
	.asciz	"x264_sei_pic_timing_write"     # string offset=13996
.Linfo_string1036:
	.asciz	"x264_ratecontrol_start"        # string offset=14022
.Linfo_string1037:
	.asciz	"x264_ratecontrol_qp"           # string offset=14045
.Linfo_string1038:
	.asciz	"x264_reference_build_list_optimal" # string offset=14065
.Linfo_string1039:
	.asciz	"x264_macroblock_bipred_init"   # string offset=14099
.Linfo_string1040:
	.asciz	"x264_macroblock_slice_init"    # string offset=14127
.Linfo_string1041:
	.asciz	"x264_weight_scale_plane"       # string offset=14154
.Linfo_string1042:
	.asciz	"x264_thread_sync_stat"         # string offset=14178
.Linfo_string1043:
	.asciz	"x264_psnr"                     # string offset=14200
.Linfo_string1044:
	.asciz	"i_sqe"                         # string offset=14210
.Linfo_string1045:
	.asciz	"f_mse"                         # string offset=14216
.Linfo_string1046:
	.asciz	"x264_frame_dump_to_file"       # string offset=14222
.Linfo_string1047:
	.asciz	"yuvfile"                       # string offset=14246
.Linfo_string1048:
	.asciz	"ff"                            # string offset=14254
.Linfo_string1049:
	.asciz	"y"                             # string offset=14257
.Linfo_string1050:
	.asciz	"x264_frame_dump"               # string offset=14259
.Linfo_string1051:
	.asciz	"x264_hrd_fullness"             # string offset=14275
.Linfo_string1052:
	.asciz	"x264_sei_buffering_period_write" # string offset=14293
.Linfo_string1053:
	.asciz	"x264_ratecontrol_end"          # string offset=14325
.Linfo_string1054:
	.asciz	"x264_filler_write"             # string offset=14346
.Linfo_string1055:
	.asciz	"x264_noise_reduction_update"   # string offset=14364
.Linfo_string1056:
	.asciz	"log10"                         # string offset=14392
.Linfo_string1057:
	.asciz	"snprintf"                      # string offset=14398
.Linfo_string1058:
	.asciz	"strlen"                        # string offset=14407
.Linfo_string1059:
	.asciz	"x264_frame_push_blank_unused"  # string offset=14414
.Linfo_string1060:
	.asciz	"fwrite"                        # string offset=14443
.Linfo_string1061:
	.asciz	"fseek"                         # string offset=14450
.Linfo_string1062:
	.asciz	"x264_analyse_weight_frame"     # string offset=14456
.Linfo_string1063:
	.asciz	"x264_threads_distribute_ratecontrol" # string offset=14482
.Linfo_string1064:
	.asciz	"x264_threads_merge_ratecontrol" # string offset=14518
.Linfo_string1065:
	.asciz	"x264_slice_write"              # string offset=14549
.Linfo_string1066:
	.asciz	"bs_bak"                        # string offset=14566
.Linfo_string1067:
	.asciz	"cabac_bak"                     # string offset=14573
.Linfo_string1068:
	.asciz	"i_skip_bak"                    # string offset=14583
.Linfo_string1069:
	.asciz	"cabac_prevbyte_bak"            # string offset=14594
.Linfo_string1070:
	.asciz	"i_skip"                        # string offset=14613
.Linfo_string1071:
	.asciz	"mb_xy"                         # string offset=14620
.Linfo_string1072:
	.asciz	"overhead_guess"                # string offset=14626
.Linfo_string1073:
	.asciz	"slice_max_size"                # string offset=14641
.Linfo_string1074:
	.asciz	"starting_bits"                 # string offset=14656
.Linfo_string1075:
	.asciz	"b_deblock"                     # string offset=14670
.Linfo_string1076:
	.asciz	"b_hpel"                        # string offset=14680
.Linfo_string1077:
	.asciz	"total_bits"                    # string offset=14687
.Linfo_string1078:
	.asciz	"mb_size"                       # string offset=14698
.Linfo_string1079:
	.asciz	"mb_spos"                       # string offset=14706
.Linfo_string1080:
	.asciz	"b_intra"                       # string offset=14714
.Linfo_string1081:
	.asciz	"i_list"                        # string offset=14722
.Linfo_string1082:
	.asciz	"cbpsum"                        # string offset=14729
.Linfo_string1083:
	.asciz	"mvy_limit"                     # string offset=14736
.Linfo_string1084:
	.asciz	"bs_realign"                    # string offset=14746
.Linfo_string1085:
	.asciz	"x264_slice_header_write"       # string offset=14757
.Linfo_string1086:
	.asciz	"chroma_weight_l0_flag"         # string offset=14781
.Linfo_string1087:
	.asciz	"luma_weight_l0_flag"           # string offset=14803
.Linfo_string1088:
	.asciz	"bs_write_ue_big"               # string offset=14823
.Linfo_string1089:
	.asciz	"val"                           # string offset=14839
.Linfo_string1090:
	.asciz	"size"                          # string offset=14843
.Linfo_string1091:
	.asciz	"tmp"                           # string offset=14848
.Linfo_string1092:
	.asciz	"bs_write_se"                   # string offset=14852
.Linfo_string1093:
	.asciz	"bs_align_1"                    # string offset=14864
.Linfo_string1094:
	.asciz	"bs_flush"                      # string offset=14875
.Linfo_string1095:
	.asciz	"x264_cabac_pos"                # string offset=14884
.Linfo_string1096:
	.asciz	"cb"                            # string offset=14899
.Linfo_string1097:
	.asciz	"x264_bitstream_check_buffer"   # string offset=14902
.Linfo_string1098:
	.asciz	"fail"                          # string offset=14930
.Linfo_string1099:
	.asciz	"delta"                         # string offset=14935
.Linfo_string1100:
	.asciz	"x264_macroblock_thread_init"   # string offset=14941
.Linfo_string1101:
	.asciz	"x264_cabac_context_init"       # string offset=14969
.Linfo_string1102:
	.asciz	"x264_cabac_encode_init"        # string offset=14993
.Linfo_string1103:
	.asciz	"x264_macroblock_cache_load"    # string offset=15016
.Linfo_string1104:
	.asciz	"x264_macroblock_analyse"       # string offset=15043
.Linfo_string1105:
	.asciz	"x264_macroblock_encode"        # string offset=15067
.Linfo_string1106:
	.asciz	"x264_cabac_mb_skip"            # string offset=15090
.Linfo_string1107:
	.asciz	"x264_macroblock_write_cabac"   # string offset=15109
.Linfo_string1108:
	.asciz	"x264_cabac_encode_terminal_c"  # string offset=15137
.Linfo_string1109:
	.asciz	"x264_macroblock_write_cavlc"   # string offset=15166
.Linfo_string1110:
	.asciz	"x264_macroblock_cache_save"    # string offset=15194
.Linfo_string1111:
	.asciz	"x264_macroblock_cache_load_deblock" # string offset=15221
.Linfo_string1112:
	.asciz	"x264_ratecontrol_mb"           # string offset=15256
.Linfo_string1113:
	.asciz	"x264_cabac_encode_flush"       # string offset=15276
.Linfo_string1114:
	.asciz	"x264_print_intra"              # string offset=15300
.Linfo_string1115:
	.asciz	"b_print_pcm"                   # string offset=15317
.Linfo_string1116:
	.asciz	"x264_lookahead_delete"         # string offset=15329
.Linfo_string1117:
	.asciz	"x264_frame_delete"             # string offset=15351
.Linfo_string1118:
	.asciz	"x264_ratecontrol_summary"      # string offset=15369
.Linfo_string1119:
	.asciz	"x264_ratecontrol_delete"       # string offset=15394
.Linfo_string1120:
	.asciz	"free"                          # string offset=15418
.Linfo_string1121:
	.asciz	"x264_cqm_delete"               # string offset=15423
.Linfo_string1122:
	.asciz	"x264_analyse_free_costs"       # string offset=15439
.Linfo_string1123:
	.asciz	"x264_frame_delete_list"        # string offset=15463
.Linfo_string1124:
	.asciz	"x264_macroblock_cache_free"    # string offset=15486
.Linfo_string1125:
	.asciz	"x264_macroblock_thread_free"   # string offset=15513
.Linfo_string1126:
	.asciz	"x264_frame_deblock_row"        # string offset=15541
.Linfo_string1127:
	.asciz	"x264_frame_expand_border"      # string offset=15564
.Linfo_string1128:
	.asciz	"x264_frame_filter"             # string offset=15589
.Linfo_string1129:
	.asciz	"x264_frame_expand_border_filtered" # string offset=15607
.Linfo_string1130:
	.asciz	"x264_frame_cond_broadcast"     # string offset=15641
.Linfo_string1131:
	.asciz	"x264_pixel_ssd_wxh"            # string offset=15667
.Linfo_string1132:
	.asciz	"x264_pixel_ssim_wxh"           # string offset=15686
.Linfo_string1133:
	.asciz	"DW_ATE_signed_8"               # string offset=15706
.Linfo_string1134:
	.asciz	"DW_ATE_signed_64"              # string offset=15722
.Linfo_string1135:
	.asciz	"DW_ATE_signed_32"              # string offset=15739
.Linfo_string1136:
	.asciz	"DW_ATE_unsigned_64"            # string offset=15756
.Linfo_string1137:
	.asciz	"DW_ATE_unsigned_32"            # string offset=15775
.Linfo_string1138:
	.asciz	"DW_ATE_unsigned_1"             # string offset=15794
.Linfo_string1139:
	.asciz	"x264_encoder_open_96"          # string offset=15812
.Linfo_string1140:
	.asciz	"x264_validate_parameters"      # string offset=15833
.Linfo_string1141:
	.asciz	"x264_set_aspect_ratio"         # string offset=15858
.Linfo_string1142:
	.asciz	"x264_encoder_reconfig"         # string offset=15880
.Linfo_string1143:
	.asciz	"x264_encoder_parameters"       # string offset=15902
.Linfo_string1144:
	.asciz	"x264_encoder_headers"          # string offset=15926
.Linfo_string1145:
	.asciz	"x264_encoder_encapsulate_nals" # string offset=15947
.Linfo_string1146:
	.asciz	"x264_encoder_intra_refresh"    # string offset=15977
.Linfo_string1147:
	.asciz	"x264_encoder_encode"           # string offset=16004
.Linfo_string1148:
	.asciz	"x264_encoder_frame_end"        # string offset=16024
.Linfo_string1149:
	.asciz	"x264_reference_hierarchy_reset" # string offset=16047
.Linfo_string1150:
	.asciz	"x264_threaded_slices_write"    # string offset=16078
.Linfo_string1151:
	.asciz	"x264_slices_write"             # string offset=16105
.Linfo_string1152:
	.asciz	"x264_encoder_close"            # string offset=16123
.Linfo_string1153:
	.asciz	"x264_encoder_delayed_frames"   # string offset=16142
.Linfo_string1154:
	.asciz	"x264_slice_header_init"        # string offset=16170
.Linfo_string1155:
	.asciz	"x264_fdec_filter_row"          # string offset=16193
.Linfo_string1156:
	.asciz	"buf"                           # string offset=16214
.Linfo_string1157:
	.asciz	"temp"                          # string offset=16218
.Linfo_string1158:
	.asciz	"new_timebase_den"              # string offset=16223
.Linfo_string1159:
	.asciz	"init_nal_count"                # string offset=16240
.Linfo_string1160:
	.asciz	"allocate_threadlocal_data"     # string offset=16255
.Linfo_string1161:
	.asciz	"max_threads"                   # string offset=16281
.Linfo_string1162:
	.asciz	"score"                         # string offset=16293
.Linfo_string1163:
	.asciz	"qp_p"                          # string offset=16299
.Linfo_string1164:
	.asciz	"max_slices"                    # string offset=16304
.Linfo_string1165:
	.asciz	"maxrate"                       # string offset=16315
.Linfo_string1166:
	.asciz	"bufsize"                       # string offset=16323
.Linfo_string1167:
	.asciz	"fps"                           # string offset=16331
.Linfo_string1168:
	.asciz	"l"                             # string offset=16335
.Linfo_string1169:
	.asciz	"level_idc"                     # string offset=16337
.Linfo_string1170:
	.asciz	"mbps"                          # string offset=16347
.Linfo_string1171:
	.asciz	"frame_size"                    # string offset=16352
.Linfo_string1172:
	.asciz	"dpb"                           # string offset=16363
.Linfo_string1173:
	.asciz	"bitrate"                       # string offset=16367
.Linfo_string1174:
	.asciz	"cpb"                           # string offset=16375
.Linfo_string1175:
	.asciz	"mv_range"                      # string offset=16379
.Linfo_string1176:
	.asciz	"mvs_per_2mb"                   # string offset=16388
.Linfo_string1177:
	.asciz	"slice_rate"                    # string offset=16400
.Linfo_string1178:
	.asciz	"mincr"                         # string offset=16411
.Linfo_string1179:
	.asciz	"bipred8x8"                     # string offset=16417
.Linfo_string1180:
	.asciz	"direct8x8"                     # string offset=16427
.Linfo_string1181:
	.asciz	"frame_only"                    # string offset=16437
.Linfo_string1182:
	.asciz	"x264_level_t"                  # string offset=16448
.Linfo_string1183:
	.asciz	"maxrate_bak"                   # string offset=16461
.Linfo_string1184:
	.asciz	"r"                             # string offset=16473
.Linfo_string1185:
	.asciz	"max_range"                     # string offset=16475
.Linfo_string1186:
	.asciz	"r2"                            # string offset=16485
.Linfo_string1187:
	.asciz	"qp_i"                          # string offset=16488
.Linfo_string1188:
	.asciz	"qp_b"                          # string offset=16493
.Linfo_string1189:
	.asciz	"initial"                       # string offset=16498
.Linfo_string1190:
	.asciz	"i_w"                           # string offset=16506
.Linfo_string1191:
	.asciz	"i_h"                           # string offset=16510
.Linfo_string1192:
	.asciz	"old_h"                         # string offset=16514
.Linfo_string1193:
	.asciz	"old_w"                         # string offset=16520
.Linfo_string1194:
	.asciz	"rc_reconfig"                   # string offset=16526
.Linfo_string1195:
	.asciz	"ret"                           # string offset=16538
.Linfo_string1196:
	.asciz	"pp_nal"                        # string offset=16542
.Linfo_string1197:
	.asciz	"pi_nal"                        # string offset=16549
.Linfo_string1198:
	.asciz	"start"                         # string offset=16556
.Linfo_string1199:
	.asciz	"nal_size"                      # string offset=16562
.Linfo_string1200:
	.asciz	"previous_nal_size"             # string offset=16571
.Linfo_string1201:
	.asciz	"long_startcode"                # string offset=16589
.Linfo_string1202:
	.asciz	"pic_in"                        # string offset=16604
.Linfo_string1203:
	.asciz	"pic_out"                       # string offset=16611
.Linfo_string1204:
	.asciz	"overhead"                      # string offset=16619
.Linfo_string1205:
	.asciz	"thread_prev"                   # string offset=16628
.Linfo_string1206:
	.asciz	"thread_current"                # string offset=16640
.Linfo_string1207:
	.asciz	"thread_oldest"                 # string offset=16655
.Linfo_string1208:
	.asciz	"pic_type"                      # string offset=16669
.Linfo_string1209:
	.asciz	"pocdiff"                       # string offset=16678
.Linfo_string1210:
	.asciz	"increment"                     # string offset=16686
.Linfo_string1211:
	.asciz	"time_to_recovery"              # string offset=16696
.Linfo_string1212:
	.asciz	"psz_message"                   # string offset=16713
.Linfo_string1213:
	.asciz	"nal_tmp"                       # string offset=16725
.Linfo_string1214:
	.asciz	"filler"                        # string offset=16733
.Linfo_string1215:
	.asciz	"prev_reordered_pts"            # string offset=16740
.Linfo_string1216:
	.asciz	"total_size"                    # string offset=16759
.Linfo_string1217:
	.asciz	"next_size"                     # string offset=16770
.Linfo_string1218:
	.asciz	"overflow"                      # string offset=16780
.Linfo_string1219:
	.asciz	"ssim_y"                        # string offset=16789
.Linfo_string1220:
	.asciz	"b_hasdelayframe"               # string offset=16796
.Linfo_string1221:
	.asciz	"i_slice_num"                   # string offset=16812
.Linfo_string1222:
	.asciz	"last_thread_mb"                # string offset=16824
.Linfo_string1223:
	.asciz	"list_count"                    # string offset=16839
.Linfo_string1224:
	.asciz	"i_yuv_size"                    # string offset=16850
.Linfo_string1225:
	.asciz	"i_mb_count_size"               # string offset=16861
.Linfo_string1226:
	.asciz	"i_slice"                       # string offset=16877
.Linfo_string1227:
	.asciz	"den"                           # string offset=16885
.Linfo_string1228:
	.asciz	"i_mb_list_count"               # string offset=16889
.Linfo_string1229:
	.asciz	"i_i8x8"                        # string offset=16905
.Linfo_string1230:
	.asciz	"i_intra"                       # string offset=16912
.Linfo_string1231:
	.asciz	"i_all_intra"                   # string offset=16920
.Linfo_string1232:
	.asciz	"duration"                      # string offset=16932
.Linfo_string1233:
	.asciz	"f_bitrate"                     # string offset=16941
.Linfo_string1234:
	.asciz	"fixed_pred_modes"              # string offset=16951
.Linfo_string1235:
	.asciz	"sum_pred_modes"                # string offset=16968
.Linfo_string1236:
	.asciz	"i_den"                         # string offset=16983
.Linfo_string1237:
	.asciz	"i_mb_size"                     # string offset=16989
.Linfo_string1238:
	.asciz	"l0"                            # string offset=16999
.Linfo_string1239:
	.asciz	"l1"                            # string offset=17002
.Linfo_string1240:
	.asciz	"delayed_frames"                # string offset=17005
.Linfo_string1241:
	.asciz	"pred_frame_num"                # string offset=17020
.Linfo_string1242:
	.asciz	"deblock_thresh"                # string offset=17035
.Linfo_string1243:
	.asciz	"mb_y"                          # string offset=17050
.Linfo_string1244:
	.asciz	"b_inloop"                      # string offset=17055
.Linfo_string1245:
	.asciz	"b_measure_quality"             # string offset=17064
.Linfo_string1246:
	.asciz	"min_y"                         # string offset=17082
.Linfo_string1247:
	.asciz	"max_y"                         # string offset=17088
.Linfo_string1248:
	.asciz	"b_end"                         # string offset=17094
.Linfo_string1249:
	.asciz	"b_start"                       # string offset=17100
.Linfo_string1250:
	.asciz	"end"                           # string offset=17108
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.long	.Linfo_string148
	.long	.Linfo_string149
	.long	.Linfo_string150
	.long	.Linfo_string151
	.long	.Linfo_string152
	.long	.Linfo_string153
	.long	.Linfo_string154
	.long	.Linfo_string155
	.long	.Linfo_string156
	.long	.Linfo_string157
	.long	.Linfo_string158
	.long	.Linfo_string159
	.long	.Linfo_string160
	.long	.Linfo_string161
	.long	.Linfo_string162
	.long	.Linfo_string163
	.long	.Linfo_string164
	.long	.Linfo_string165
	.long	.Linfo_string166
	.long	.Linfo_string167
	.long	.Linfo_string168
	.long	.Linfo_string169
	.long	.Linfo_string170
	.long	.Linfo_string171
	.long	.Linfo_string172
	.long	.Linfo_string173
	.long	.Linfo_string174
	.long	.Linfo_string175
	.long	.Linfo_string176
	.long	.Linfo_string177
	.long	.Linfo_string178
	.long	.Linfo_string179
	.long	.Linfo_string180
	.long	.Linfo_string181
	.long	.Linfo_string182
	.long	.Linfo_string183
	.long	.Linfo_string184
	.long	.Linfo_string185
	.long	.Linfo_string186
	.long	.Linfo_string187
	.long	.Linfo_string188
	.long	.Linfo_string189
	.long	.Linfo_string190
	.long	.Linfo_string191
	.long	.Linfo_string192
	.long	.Linfo_string193
	.long	.Linfo_string194
	.long	.Linfo_string195
	.long	.Linfo_string196
	.long	.Linfo_string197
	.long	.Linfo_string198
	.long	.Linfo_string199
	.long	.Linfo_string200
	.long	.Linfo_string201
	.long	.Linfo_string202
	.long	.Linfo_string203
	.long	.Linfo_string204
	.long	.Linfo_string205
	.long	.Linfo_string206
	.long	.Linfo_string207
	.long	.Linfo_string208
	.long	.Linfo_string209
	.long	.Linfo_string210
	.long	.Linfo_string211
	.long	.Linfo_string212
	.long	.Linfo_string213
	.long	.Linfo_string214
	.long	.Linfo_string215
	.long	.Linfo_string216
	.long	.Linfo_string217
	.long	.Linfo_string218
	.long	.Linfo_string219
	.long	.Linfo_string220
	.long	.Linfo_string221
	.long	.Linfo_string222
	.long	.Linfo_string223
	.long	.Linfo_string224
	.long	.Linfo_string225
	.long	.Linfo_string226
	.long	.Linfo_string227
	.long	.Linfo_string228
	.long	.Linfo_string229
	.long	.Linfo_string230
	.long	.Linfo_string231
	.long	.Linfo_string232
	.long	.Linfo_string233
	.long	.Linfo_string234
	.long	.Linfo_string235
	.long	.Linfo_string236
	.long	.Linfo_string237
	.long	.Linfo_string238
	.long	.Linfo_string239
	.long	.Linfo_string240
	.long	.Linfo_string241
	.long	.Linfo_string242
	.long	.Linfo_string243
	.long	.Linfo_string244
	.long	.Linfo_string245
	.long	.Linfo_string246
	.long	.Linfo_string247
	.long	.Linfo_string248
	.long	.Linfo_string249
	.long	.Linfo_string250
	.long	.Linfo_string251
	.long	.Linfo_string252
	.long	.Linfo_string253
	.long	.Linfo_string254
	.long	.Linfo_string255
	.long	.Linfo_string256
	.long	.Linfo_string257
	.long	.Linfo_string258
	.long	.Linfo_string259
	.long	.Linfo_string260
	.long	.Linfo_string261
	.long	.Linfo_string262
	.long	.Linfo_string263
	.long	.Linfo_string264
	.long	.Linfo_string265
	.long	.Linfo_string266
	.long	.Linfo_string267
	.long	.Linfo_string268
	.long	.Linfo_string269
	.long	.Linfo_string270
	.long	.Linfo_string271
	.long	.Linfo_string272
	.long	.Linfo_string273
	.long	.Linfo_string274
	.long	.Linfo_string275
	.long	.Linfo_string276
	.long	.Linfo_string277
	.long	.Linfo_string278
	.long	.Linfo_string279
	.long	.Linfo_string280
	.long	.Linfo_string281
	.long	.Linfo_string282
	.long	.Linfo_string283
	.long	.Linfo_string284
	.long	.Linfo_string285
	.long	.Linfo_string286
	.long	.Linfo_string287
	.long	.Linfo_string288
	.long	.Linfo_string289
	.long	.Linfo_string290
	.long	.Linfo_string291
	.long	.Linfo_string292
	.long	.Linfo_string293
	.long	.Linfo_string294
	.long	.Linfo_string295
	.long	.Linfo_string296
	.long	.Linfo_string297
	.long	.Linfo_string298
	.long	.Linfo_string299
	.long	.Linfo_string300
	.long	.Linfo_string301
	.long	.Linfo_string302
	.long	.Linfo_string303
	.long	.Linfo_string304
	.long	.Linfo_string305
	.long	.Linfo_string306
	.long	.Linfo_string307
	.long	.Linfo_string308
	.long	.Linfo_string309
	.long	.Linfo_string310
	.long	.Linfo_string311
	.long	.Linfo_string312
	.long	.Linfo_string313
	.long	.Linfo_string314
	.long	.Linfo_string315
	.long	.Linfo_string316
	.long	.Linfo_string317
	.long	.Linfo_string318
	.long	.Linfo_string319
	.long	.Linfo_string320
	.long	.Linfo_string321
	.long	.Linfo_string322
	.long	.Linfo_string323
	.long	.Linfo_string324
	.long	.Linfo_string325
	.long	.Linfo_string326
	.long	.Linfo_string327
	.long	.Linfo_string328
	.long	.Linfo_string329
	.long	.Linfo_string330
	.long	.Linfo_string331
	.long	.Linfo_string332
	.long	.Linfo_string333
	.long	.Linfo_string334
	.long	.Linfo_string335
	.long	.Linfo_string336
	.long	.Linfo_string337
	.long	.Linfo_string338
	.long	.Linfo_string339
	.long	.Linfo_string340
	.long	.Linfo_string341
	.long	.Linfo_string342
	.long	.Linfo_string343
	.long	.Linfo_string344
	.long	.Linfo_string345
	.long	.Linfo_string346
	.long	.Linfo_string347
	.long	.Linfo_string348
	.long	.Linfo_string349
	.long	.Linfo_string350
	.long	.Linfo_string351
	.long	.Linfo_string352
	.long	.Linfo_string353
	.long	.Linfo_string354
	.long	.Linfo_string355
	.long	.Linfo_string356
	.long	.Linfo_string357
	.long	.Linfo_string358
	.long	.Linfo_string359
	.long	.Linfo_string360
	.long	.Linfo_string361
	.long	.Linfo_string362
	.long	.Linfo_string363
	.long	.Linfo_string364
	.long	.Linfo_string365
	.long	.Linfo_string366
	.long	.Linfo_string367
	.long	.Linfo_string368
	.long	.Linfo_string369
	.long	.Linfo_string370
	.long	.Linfo_string371
	.long	.Linfo_string372
	.long	.Linfo_string373
	.long	.Linfo_string374
	.long	.Linfo_string375
	.long	.Linfo_string376
	.long	.Linfo_string377
	.long	.Linfo_string378
	.long	.Linfo_string379
	.long	.Linfo_string380
	.long	.Linfo_string381
	.long	.Linfo_string382
	.long	.Linfo_string383
	.long	.Linfo_string384
	.long	.Linfo_string385
	.long	.Linfo_string386
	.long	.Linfo_string387
	.long	.Linfo_string388
	.long	.Linfo_string389
	.long	.Linfo_string390
	.long	.Linfo_string391
	.long	.Linfo_string392
	.long	.Linfo_string393
	.long	.Linfo_string394
	.long	.Linfo_string395
	.long	.Linfo_string396
	.long	.Linfo_string397
	.long	.Linfo_string398
	.long	.Linfo_string399
	.long	.Linfo_string400
	.long	.Linfo_string401
	.long	.Linfo_string402
	.long	.Linfo_string403
	.long	.Linfo_string404
	.long	.Linfo_string405
	.long	.Linfo_string406
	.long	.Linfo_string407
	.long	.Linfo_string408
	.long	.Linfo_string409
	.long	.Linfo_string410
	.long	.Linfo_string411
	.long	.Linfo_string412
	.long	.Linfo_string413
	.long	.Linfo_string414
	.long	.Linfo_string415
	.long	.Linfo_string416
	.long	.Linfo_string417
	.long	.Linfo_string418
	.long	.Linfo_string419
	.long	.Linfo_string420
	.long	.Linfo_string421
	.long	.Linfo_string422
	.long	.Linfo_string423
	.long	.Linfo_string424
	.long	.Linfo_string425
	.long	.Linfo_string426
	.long	.Linfo_string427
	.long	.Linfo_string428
	.long	.Linfo_string429
	.long	.Linfo_string430
	.long	.Linfo_string431
	.long	.Linfo_string432
	.long	.Linfo_string433
	.long	.Linfo_string434
	.long	.Linfo_string435
	.long	.Linfo_string436
	.long	.Linfo_string437
	.long	.Linfo_string438
	.long	.Linfo_string439
	.long	.Linfo_string440
	.long	.Linfo_string441
	.long	.Linfo_string442
	.long	.Linfo_string443
	.long	.Linfo_string444
	.long	.Linfo_string445
	.long	.Linfo_string446
	.long	.Linfo_string447
	.long	.Linfo_string448
	.long	.Linfo_string449
	.long	.Linfo_string450
	.long	.Linfo_string451
	.long	.Linfo_string452
	.long	.Linfo_string453
	.long	.Linfo_string454
	.long	.Linfo_string455
	.long	.Linfo_string456
	.long	.Linfo_string457
	.long	.Linfo_string458
	.long	.Linfo_string459
	.long	.Linfo_string460
	.long	.Linfo_string461
	.long	.Linfo_string462
	.long	.Linfo_string463
	.long	.Linfo_string464
	.long	.Linfo_string465
	.long	.Linfo_string466
	.long	.Linfo_string467
	.long	.Linfo_string468
	.long	.Linfo_string469
	.long	.Linfo_string470
	.long	.Linfo_string471
	.long	.Linfo_string472
	.long	.Linfo_string473
	.long	.Linfo_string474
	.long	.Linfo_string475
	.long	.Linfo_string476
	.long	.Linfo_string477
	.long	.Linfo_string478
	.long	.Linfo_string479
	.long	.Linfo_string480
	.long	.Linfo_string481
	.long	.Linfo_string482
	.long	.Linfo_string483
	.long	.Linfo_string484
	.long	.Linfo_string485
	.long	.Linfo_string486
	.long	.Linfo_string487
	.long	.Linfo_string488
	.long	.Linfo_string489
	.long	.Linfo_string490
	.long	.Linfo_string491
	.long	.Linfo_string492
	.long	.Linfo_string493
	.long	.Linfo_string494
	.long	.Linfo_string495
	.long	.Linfo_string496
	.long	.Linfo_string497
	.long	.Linfo_string498
	.long	.Linfo_string499
	.long	.Linfo_string500
	.long	.Linfo_string501
	.long	.Linfo_string502
	.long	.Linfo_string503
	.long	.Linfo_string504
	.long	.Linfo_string505
	.long	.Linfo_string506
	.long	.Linfo_string507
	.long	.Linfo_string508
	.long	.Linfo_string509
	.long	.Linfo_string510
	.long	.Linfo_string511
	.long	.Linfo_string512
	.long	.Linfo_string513
	.long	.Linfo_string514
	.long	.Linfo_string515
	.long	.Linfo_string516
	.long	.Linfo_string517
	.long	.Linfo_string518
	.long	.Linfo_string519
	.long	.Linfo_string520
	.long	.Linfo_string521
	.long	.Linfo_string522
	.long	.Linfo_string523
	.long	.Linfo_string524
	.long	.Linfo_string525
	.long	.Linfo_string526
	.long	.Linfo_string527
	.long	.Linfo_string528
	.long	.Linfo_string529
	.long	.Linfo_string530
	.long	.Linfo_string531
	.long	.Linfo_string532
	.long	.Linfo_string533
	.long	.Linfo_string534
	.long	.Linfo_string535
	.long	.Linfo_string536
	.long	.Linfo_string537
	.long	.Linfo_string538
	.long	.Linfo_string539
	.long	.Linfo_string540
	.long	.Linfo_string541
	.long	.Linfo_string542
	.long	.Linfo_string543
	.long	.Linfo_string544
	.long	.Linfo_string545
	.long	.Linfo_string546
	.long	.Linfo_string547
	.long	.Linfo_string548
	.long	.Linfo_string549
	.long	.Linfo_string550
	.long	.Linfo_string551
	.long	.Linfo_string552
	.long	.Linfo_string553
	.long	.Linfo_string554
	.long	.Linfo_string555
	.long	.Linfo_string556
	.long	.Linfo_string557
	.long	.Linfo_string558
	.long	.Linfo_string559
	.long	.Linfo_string560
	.long	.Linfo_string561
	.long	.Linfo_string562
	.long	.Linfo_string563
	.long	.Linfo_string564
	.long	.Linfo_string565
	.long	.Linfo_string566
	.long	.Linfo_string567
	.long	.Linfo_string568
	.long	.Linfo_string569
	.long	.Linfo_string570
	.long	.Linfo_string571
	.long	.Linfo_string572
	.long	.Linfo_string573
	.long	.Linfo_string574
	.long	.Linfo_string575
	.long	.Linfo_string576
	.long	.Linfo_string577
	.long	.Linfo_string578
	.long	.Linfo_string579
	.long	.Linfo_string580
	.long	.Linfo_string581
	.long	.Linfo_string582
	.long	.Linfo_string583
	.long	.Linfo_string584
	.long	.Linfo_string585
	.long	.Linfo_string586
	.long	.Linfo_string587
	.long	.Linfo_string588
	.long	.Linfo_string589
	.long	.Linfo_string590
	.long	.Linfo_string591
	.long	.Linfo_string592
	.long	.Linfo_string593
	.long	.Linfo_string594
	.long	.Linfo_string595
	.long	.Linfo_string596
	.long	.Linfo_string597
	.long	.Linfo_string598
	.long	.Linfo_string599
	.long	.Linfo_string600
	.long	.Linfo_string601
	.long	.Linfo_string602
	.long	.Linfo_string603
	.long	.Linfo_string604
	.long	.Linfo_string605
	.long	.Linfo_string606
	.long	.Linfo_string607
	.long	.Linfo_string608
	.long	.Linfo_string609
	.long	.Linfo_string610
	.long	.Linfo_string611
	.long	.Linfo_string612
	.long	.Linfo_string613
	.long	.Linfo_string614
	.long	.Linfo_string615
	.long	.Linfo_string616
	.long	.Linfo_string617
	.long	.Linfo_string618
	.long	.Linfo_string619
	.long	.Linfo_string620
	.long	.Linfo_string621
	.long	.Linfo_string622
	.long	.Linfo_string623
	.long	.Linfo_string624
	.long	.Linfo_string625
	.long	.Linfo_string626
	.long	.Linfo_string627
	.long	.Linfo_string628
	.long	.Linfo_string629
	.long	.Linfo_string630
	.long	.Linfo_string631
	.long	.Linfo_string632
	.long	.Linfo_string633
	.long	.Linfo_string634
	.long	.Linfo_string635
	.long	.Linfo_string636
	.long	.Linfo_string637
	.long	.Linfo_string638
	.long	.Linfo_string639
	.long	.Linfo_string640
	.long	.Linfo_string641
	.long	.Linfo_string642
	.long	.Linfo_string643
	.long	.Linfo_string644
	.long	.Linfo_string645
	.long	.Linfo_string646
	.long	.Linfo_string647
	.long	.Linfo_string648
	.long	.Linfo_string649
	.long	.Linfo_string650
	.long	.Linfo_string651
	.long	.Linfo_string652
	.long	.Linfo_string653
	.long	.Linfo_string654
	.long	.Linfo_string655
	.long	.Linfo_string656
	.long	.Linfo_string657
	.long	.Linfo_string658
	.long	.Linfo_string659
	.long	.Linfo_string660
	.long	.Linfo_string661
	.long	.Linfo_string662
	.long	.Linfo_string663
	.long	.Linfo_string664
	.long	.Linfo_string665
	.long	.Linfo_string666
	.long	.Linfo_string667
	.long	.Linfo_string668
	.long	.Linfo_string669
	.long	.Linfo_string670
	.long	.Linfo_string671
	.long	.Linfo_string672
	.long	.Linfo_string673
	.long	.Linfo_string674
	.long	.Linfo_string675
	.long	.Linfo_string676
	.long	.Linfo_string677
	.long	.Linfo_string678
	.long	.Linfo_string679
	.long	.Linfo_string680
	.long	.Linfo_string681
	.long	.Linfo_string682
	.long	.Linfo_string683
	.long	.Linfo_string684
	.long	.Linfo_string685
	.long	.Linfo_string686
	.long	.Linfo_string687
	.long	.Linfo_string688
	.long	.Linfo_string689
	.long	.Linfo_string690
	.long	.Linfo_string691
	.long	.Linfo_string692
	.long	.Linfo_string693
	.long	.Linfo_string694
	.long	.Linfo_string695
	.long	.Linfo_string696
	.long	.Linfo_string697
	.long	.Linfo_string698
	.long	.Linfo_string699
	.long	.Linfo_string700
	.long	.Linfo_string701
	.long	.Linfo_string702
	.long	.Linfo_string703
	.long	.Linfo_string704
	.long	.Linfo_string705
	.long	.Linfo_string706
	.long	.Linfo_string707
	.long	.Linfo_string708
	.long	.Linfo_string709
	.long	.Linfo_string710
	.long	.Linfo_string711
	.long	.Linfo_string712
	.long	.Linfo_string713
	.long	.Linfo_string714
	.long	.Linfo_string715
	.long	.Linfo_string716
	.long	.Linfo_string717
	.long	.Linfo_string718
	.long	.Linfo_string719
	.long	.Linfo_string720
	.long	.Linfo_string721
	.long	.Linfo_string722
	.long	.Linfo_string723
	.long	.Linfo_string724
	.long	.Linfo_string725
	.long	.Linfo_string726
	.long	.Linfo_string727
	.long	.Linfo_string728
	.long	.Linfo_string729
	.long	.Linfo_string730
	.long	.Linfo_string731
	.long	.Linfo_string732
	.long	.Linfo_string733
	.long	.Linfo_string734
	.long	.Linfo_string735
	.long	.Linfo_string736
	.long	.Linfo_string737
	.long	.Linfo_string738
	.long	.Linfo_string739
	.long	.Linfo_string740
	.long	.Linfo_string741
	.long	.Linfo_string742
	.long	.Linfo_string743
	.long	.Linfo_string744
	.long	.Linfo_string745
	.long	.Linfo_string746
	.long	.Linfo_string747
	.long	.Linfo_string748
	.long	.Linfo_string749
	.long	.Linfo_string750
	.long	.Linfo_string751
	.long	.Linfo_string752
	.long	.Linfo_string753
	.long	.Linfo_string754
	.long	.Linfo_string755
	.long	.Linfo_string756
	.long	.Linfo_string757
	.long	.Linfo_string758
	.long	.Linfo_string759
	.long	.Linfo_string760
	.long	.Linfo_string761
	.long	.Linfo_string762
	.long	.Linfo_string763
	.long	.Linfo_string764
	.long	.Linfo_string765
	.long	.Linfo_string766
	.long	.Linfo_string767
	.long	.Linfo_string768
	.long	.Linfo_string769
	.long	.Linfo_string770
	.long	.Linfo_string771
	.long	.Linfo_string772
	.long	.Linfo_string773
	.long	.Linfo_string774
	.long	.Linfo_string775
	.long	.Linfo_string776
	.long	.Linfo_string777
	.long	.Linfo_string778
	.long	.Linfo_string779
	.long	.Linfo_string780
	.long	.Linfo_string781
	.long	.Linfo_string782
	.long	.Linfo_string783
	.long	.Linfo_string784
	.long	.Linfo_string785
	.long	.Linfo_string786
	.long	.Linfo_string787
	.long	.Linfo_string788
	.long	.Linfo_string789
	.long	.Linfo_string790
	.long	.Linfo_string791
	.long	.Linfo_string792
	.long	.Linfo_string793
	.long	.Linfo_string794
	.long	.Linfo_string795
	.long	.Linfo_string796
	.long	.Linfo_string797
	.long	.Linfo_string798
	.long	.Linfo_string799
	.long	.Linfo_string800
	.long	.Linfo_string801
	.long	.Linfo_string802
	.long	.Linfo_string803
	.long	.Linfo_string804
	.long	.Linfo_string805
	.long	.Linfo_string806
	.long	.Linfo_string807
	.long	.Linfo_string808
	.long	.Linfo_string809
	.long	.Linfo_string810
	.long	.Linfo_string811
	.long	.Linfo_string812
	.long	.Linfo_string813
	.long	.Linfo_string814
	.long	.Linfo_string815
	.long	.Linfo_string816
	.long	.Linfo_string817
	.long	.Linfo_string818
	.long	.Linfo_string819
	.long	.Linfo_string820
	.long	.Linfo_string821
	.long	.Linfo_string822
	.long	.Linfo_string823
	.long	.Linfo_string824
	.long	.Linfo_string825
	.long	.Linfo_string826
	.long	.Linfo_string827
	.long	.Linfo_string828
	.long	.Linfo_string829
	.long	.Linfo_string830
	.long	.Linfo_string831
	.long	.Linfo_string832
	.long	.Linfo_string833
	.long	.Linfo_string834
	.long	.Linfo_string835
	.long	.Linfo_string836
	.long	.Linfo_string837
	.long	.Linfo_string838
	.long	.Linfo_string839
	.long	.Linfo_string840
	.long	.Linfo_string841
	.long	.Linfo_string842
	.long	.Linfo_string843
	.long	.Linfo_string844
	.long	.Linfo_string845
	.long	.Linfo_string846
	.long	.Linfo_string847
	.long	.Linfo_string848
	.long	.Linfo_string849
	.long	.Linfo_string850
	.long	.Linfo_string851
	.long	.Linfo_string852
	.long	.Linfo_string853
	.long	.Linfo_string854
	.long	.Linfo_string855
	.long	.Linfo_string856
	.long	.Linfo_string857
	.long	.Linfo_string858
	.long	.Linfo_string859
	.long	.Linfo_string860
	.long	.Linfo_string861
	.long	.Linfo_string862
	.long	.Linfo_string863
	.long	.Linfo_string864
	.long	.Linfo_string865
	.long	.Linfo_string866
	.long	.Linfo_string867
	.long	.Linfo_string868
	.long	.Linfo_string869
	.long	.Linfo_string870
	.long	.Linfo_string871
	.long	.Linfo_string872
	.long	.Linfo_string873
	.long	.Linfo_string874
	.long	.Linfo_string875
	.long	.Linfo_string876
	.long	.Linfo_string877
	.long	.Linfo_string878
	.long	.Linfo_string879
	.long	.Linfo_string880
	.long	.Linfo_string881
	.long	.Linfo_string882
	.long	.Linfo_string883
	.long	.Linfo_string884
	.long	.Linfo_string885
	.long	.Linfo_string886
	.long	.Linfo_string887
	.long	.Linfo_string888
	.long	.Linfo_string889
	.long	.Linfo_string890
	.long	.Linfo_string891
	.long	.Linfo_string892
	.long	.Linfo_string893
	.long	.Linfo_string894
	.long	.Linfo_string895
	.long	.Linfo_string896
	.long	.Linfo_string897
	.long	.Linfo_string898
	.long	.Linfo_string899
	.long	.Linfo_string900
	.long	.Linfo_string901
	.long	.Linfo_string902
	.long	.Linfo_string903
	.long	.Linfo_string904
	.long	.Linfo_string905
	.long	.Linfo_string906
	.long	.Linfo_string907
	.long	.Linfo_string908
	.long	.Linfo_string909
	.long	.Linfo_string910
	.long	.Linfo_string911
	.long	.Linfo_string912
	.long	.Linfo_string913
	.long	.Linfo_string914
	.long	.Linfo_string915
	.long	.Linfo_string916
	.long	.Linfo_string917
	.long	.Linfo_string918
	.long	.Linfo_string919
	.long	.Linfo_string920
	.long	.Linfo_string921
	.long	.Linfo_string922
	.long	.Linfo_string923
	.long	.Linfo_string924
	.long	.Linfo_string925
	.long	.Linfo_string926
	.long	.Linfo_string927
	.long	.Linfo_string928
	.long	.Linfo_string929
	.long	.Linfo_string930
	.long	.Linfo_string931
	.long	.Linfo_string932
	.long	.Linfo_string933
	.long	.Linfo_string934
	.long	.Linfo_string935
	.long	.Linfo_string936
	.long	.Linfo_string937
	.long	.Linfo_string938
	.long	.Linfo_string939
	.long	.Linfo_string940
	.long	.Linfo_string941
	.long	.Linfo_string942
	.long	.Linfo_string943
	.long	.Linfo_string944
	.long	.Linfo_string945
	.long	.Linfo_string946
	.long	.Linfo_string947
	.long	.Linfo_string948
	.long	.Linfo_string949
	.long	.Linfo_string950
	.long	.Linfo_string951
	.long	.Linfo_string952
	.long	.Linfo_string953
	.long	.Linfo_string954
	.long	.Linfo_string955
	.long	.Linfo_string956
	.long	.Linfo_string957
	.long	.Linfo_string958
	.long	.Linfo_string959
	.long	.Linfo_string960
	.long	.Linfo_string961
	.long	.Linfo_string962
	.long	.Linfo_string963
	.long	.Linfo_string964
	.long	.Linfo_string965
	.long	.Linfo_string966
	.long	.Linfo_string967
	.long	.Linfo_string968
	.long	.Linfo_string969
	.long	.Linfo_string970
	.long	.Linfo_string971
	.long	.Linfo_string972
	.long	.Linfo_string973
	.long	.Linfo_string974
	.long	.Linfo_string975
	.long	.Linfo_string976
	.long	.Linfo_string977
	.long	.Linfo_string978
	.long	.Linfo_string979
	.long	.Linfo_string980
	.long	.Linfo_string981
	.long	.Linfo_string982
	.long	.Linfo_string983
	.long	.Linfo_string984
	.long	.Linfo_string985
	.long	.Linfo_string986
	.long	.Linfo_string987
	.long	.Linfo_string988
	.long	.Linfo_string989
	.long	.Linfo_string990
	.long	.Linfo_string991
	.long	.Linfo_string992
	.long	.Linfo_string993
	.long	.Linfo_string994
	.long	.Linfo_string995
	.long	.Linfo_string996
	.long	.Linfo_string997
	.long	.Linfo_string998
	.long	.Linfo_string999
	.long	.Linfo_string1000
	.long	.Linfo_string1001
	.long	.Linfo_string1002
	.long	.Linfo_string1003
	.long	.Linfo_string1004
	.long	.Linfo_string1005
	.long	.Linfo_string1006
	.long	.Linfo_string1007
	.long	.Linfo_string1008
	.long	.Linfo_string1009
	.long	.Linfo_string1010
	.long	.Linfo_string1011
	.long	.Linfo_string1012
	.long	.Linfo_string1013
	.long	.Linfo_string1014
	.long	.Linfo_string1015
	.long	.Linfo_string1016
	.long	.Linfo_string1017
	.long	.Linfo_string1018
	.long	.Linfo_string1019
	.long	.Linfo_string1020
	.long	.Linfo_string1021
	.long	.Linfo_string1022
	.long	.Linfo_string1023
	.long	.Linfo_string1024
	.long	.Linfo_string1025
	.long	.Linfo_string1026
	.long	.Linfo_string1027
	.long	.Linfo_string1028
	.long	.Linfo_string1029
	.long	.Linfo_string1030
	.long	.Linfo_string1031
	.long	.Linfo_string1032
	.long	.Linfo_string1033
	.long	.Linfo_string1034
	.long	.Linfo_string1035
	.long	.Linfo_string1036
	.long	.Linfo_string1037
	.long	.Linfo_string1038
	.long	.Linfo_string1039
	.long	.Linfo_string1040
	.long	.Linfo_string1041
	.long	.Linfo_string1042
	.long	.Linfo_string1043
	.long	.Linfo_string1044
	.long	.Linfo_string1045
	.long	.Linfo_string1046
	.long	.Linfo_string1047
	.long	.Linfo_string1048
	.long	.Linfo_string1049
	.long	.Linfo_string1050
	.long	.Linfo_string1051
	.long	.Linfo_string1052
	.long	.Linfo_string1053
	.long	.Linfo_string1054
	.long	.Linfo_string1055
	.long	.Linfo_string1056
	.long	.Linfo_string1057
	.long	.Linfo_string1058
	.long	.Linfo_string1059
	.long	.Linfo_string1060
	.long	.Linfo_string1061
	.long	.Linfo_string1062
	.long	.Linfo_string1063
	.long	.Linfo_string1064
	.long	.Linfo_string1065
	.long	.Linfo_string1066
	.long	.Linfo_string1067
	.long	.Linfo_string1068
	.long	.Linfo_string1069
	.long	.Linfo_string1070
	.long	.Linfo_string1071
	.long	.Linfo_string1072
	.long	.Linfo_string1073
	.long	.Linfo_string1074
	.long	.Linfo_string1075
	.long	.Linfo_string1076
	.long	.Linfo_string1077
	.long	.Linfo_string1078
	.long	.Linfo_string1079
	.long	.Linfo_string1080
	.long	.Linfo_string1081
	.long	.Linfo_string1082
	.long	.Linfo_string1083
	.long	.Linfo_string1084
	.long	.Linfo_string1085
	.long	.Linfo_string1086
	.long	.Linfo_string1087
	.long	.Linfo_string1088
	.long	.Linfo_string1089
	.long	.Linfo_string1090
	.long	.Linfo_string1091
	.long	.Linfo_string1092
	.long	.Linfo_string1093
	.long	.Linfo_string1094
	.long	.Linfo_string1095
	.long	.Linfo_string1096
	.long	.Linfo_string1097
	.long	.Linfo_string1098
	.long	.Linfo_string1099
	.long	.Linfo_string1100
	.long	.Linfo_string1101
	.long	.Linfo_string1102
	.long	.Linfo_string1103
	.long	.Linfo_string1104
	.long	.Linfo_string1105
	.long	.Linfo_string1106
	.long	.Linfo_string1107
	.long	.Linfo_string1108
	.long	.Linfo_string1109
	.long	.Linfo_string1110
	.long	.Linfo_string1111
	.long	.Linfo_string1112
	.long	.Linfo_string1113
	.long	.Linfo_string1114
	.long	.Linfo_string1115
	.long	.Linfo_string1116
	.long	.Linfo_string1117
	.long	.Linfo_string1118
	.long	.Linfo_string1119
	.long	.Linfo_string1120
	.long	.Linfo_string1121
	.long	.Linfo_string1122
	.long	.Linfo_string1123
	.long	.Linfo_string1124
	.long	.Linfo_string1125
	.long	.Linfo_string1126
	.long	.Linfo_string1127
	.long	.Linfo_string1128
	.long	.Linfo_string1129
	.long	.Linfo_string1130
	.long	.Linfo_string1131
	.long	.Linfo_string1132
	.long	.Linfo_string1133
	.long	.Linfo_string1134
	.long	.Linfo_string1135
	.long	.Linfo_string1136
	.long	.Linfo_string1137
	.long	.Linfo_string1138
	.long	.Linfo_string1139
	.long	.Linfo_string1140
	.long	.Linfo_string1141
	.long	.Linfo_string1142
	.long	.Linfo_string1143
	.long	.Linfo_string1144
	.long	.Linfo_string1145
	.long	.Linfo_string1146
	.long	.Linfo_string1147
	.long	.Linfo_string1148
	.long	.Linfo_string1149
	.long	.Linfo_string1150
	.long	.Linfo_string1151
	.long	.Linfo_string1152
	.long	.Linfo_string1153
	.long	.Linfo_string1154
	.long	.Linfo_string1155
	.long	.Linfo_string1156
	.long	.Linfo_string1157
	.long	.Linfo_string1158
	.long	.Linfo_string1159
	.long	.Linfo_string1160
	.long	.Linfo_string1161
	.long	.Linfo_string1162
	.long	.Linfo_string1163
	.long	.Linfo_string1164
	.long	.Linfo_string1165
	.long	.Linfo_string1166
	.long	.Linfo_string1167
	.long	.Linfo_string1168
	.long	.Linfo_string1169
	.long	.Linfo_string1170
	.long	.Linfo_string1171
	.long	.Linfo_string1172
	.long	.Linfo_string1173
	.long	.Linfo_string1174
	.long	.Linfo_string1175
	.long	.Linfo_string1176
	.long	.Linfo_string1177
	.long	.Linfo_string1178
	.long	.Linfo_string1179
	.long	.Linfo_string1180
	.long	.Linfo_string1181
	.long	.Linfo_string1182
	.long	.Linfo_string1183
	.long	.Linfo_string1184
	.long	.Linfo_string1185
	.long	.Linfo_string1186
	.long	.Linfo_string1187
	.long	.Linfo_string1188
	.long	.Linfo_string1189
	.long	.Linfo_string1190
	.long	.Linfo_string1191
	.long	.Linfo_string1192
	.long	.Linfo_string1193
	.long	.Linfo_string1194
	.long	.Linfo_string1195
	.long	.Linfo_string1196
	.long	.Linfo_string1197
	.long	.Linfo_string1198
	.long	.Linfo_string1199
	.long	.Linfo_string1200
	.long	.Linfo_string1201
	.long	.Linfo_string1202
	.long	.Linfo_string1203
	.long	.Linfo_string1204
	.long	.Linfo_string1205
	.long	.Linfo_string1206
	.long	.Linfo_string1207
	.long	.Linfo_string1208
	.long	.Linfo_string1209
	.long	.Linfo_string1210
	.long	.Linfo_string1211
	.long	.Linfo_string1212
	.long	.Linfo_string1213
	.long	.Linfo_string1214
	.long	.Linfo_string1215
	.long	.Linfo_string1216
	.long	.Linfo_string1217
	.long	.Linfo_string1218
	.long	.Linfo_string1219
	.long	.Linfo_string1220
	.long	.Linfo_string1221
	.long	.Linfo_string1222
	.long	.Linfo_string1223
	.long	.Linfo_string1224
	.long	.Linfo_string1225
	.long	.Linfo_string1226
	.long	.Linfo_string1227
	.long	.Linfo_string1228
	.long	.Linfo_string1229
	.long	.Linfo_string1230
	.long	.Linfo_string1231
	.long	.Linfo_string1232
	.long	.Linfo_string1233
	.long	.Linfo_string1234
	.long	.Linfo_string1235
	.long	.Linfo_string1236
	.long	.Linfo_string1237
	.long	.Linfo_string1238
	.long	.Linfo_string1239
	.long	.Linfo_string1240
	.long	.Linfo_string1241
	.long	.Linfo_string1242
	.long	.Linfo_string1243
	.long	.Linfo_string1244
	.long	.Linfo_string1245
	.long	.Linfo_string1246
	.long	.Linfo_string1247
	.long	.Linfo_string1248
	.long	.Linfo_string1249
	.long	.Linfo_string1250
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	.L.str
	.quad	.L.str.1
	.quad	.L.str.2
	.quad	.L.str.3
	.quad	.L.str.4
	.quad	.L.str.5
	.quad	.L.str.6
	.quad	.L.str.7
	.quad	.L.str.8
	.quad	.L.str.9
	.quad	.L.str.10
	.quad	.L.str.11
	.quad	.L.str.12
	.quad	.L.str.13
	.quad	.L.str.14
	.quad	.L.str.15
	.quad	.L.str.16
	.quad	.L.str.18
	.quad	.L.str.19
	.quad	.L.str.20
	.quad	.L.str.21
	.quad	.L.str.22
	.quad	.L.str.23
	.quad	.L.str.24
	.quad	.L.str.25
	.quad	.L.str.26
	.quad	.L.str.27
	.quad	.L.str.28
	.quad	.L.str.29
	.quad	.L.str.30
	.quad	.L.str.31
	.quad	.L.str.32
	.quad	.L.str.33
	.quad	.L.str.34
	.quad	.L.str.35
	.quad	.L.str.36
	.quad	.L.str.37
	.quad	.L.str.38
	.quad	.L.str.39
	.quad	.L.str.40
	.quad	.L.str.41
	.quad	.L.str.42
	.quad	.L.str.43
	.quad	.L.str.44
	.quad	.L.str.45
	.quad	.L.str.46
	.quad	.L.str.47
	.quad	.L.str.48
	.quad	.L.str.49
	.quad	tga_dump_rate
	.quad	.L.str.50
	.quad	.L.str.51
	.quad	.L.str.52
	.quad	.L.str.53
	.quad	.L.str.54
	.quad	.L.str.55
	.quad	.L.str.56
	.quad	.L.str.57
	.quad	.L.str.58
	.quad	.L.str.59
	.quad	.L.str.60
	.quad	.L.str.61
	.quad	.L.str.62
	.quad	.L.str.63
	.quad	.L.str.64
	.quad	.L.str.65
	.quad	.L.str.66
	.quad	.L.str.67
	.quad	.L.str.68
	.quad	.L.str.69
	.quad	.L.str.70
	.quad	.L.str.71
	.quad	.L.str.72
	.quad	.L.str.73
	.quad	.L.str.74
	.quad	i_chroma_qp_table
	.quad	x264_ue_size_tab
	.quad	.L.str.75
	.quad	.L.str.76
	.quad	.L.str.77
	.quad	.L.str.78
	.quad	.L.str.79
	.quad	.L.str.80
	.quad	.L.str.81
	.quad	.L.str.82
	.quad	.L.str.83
	.quad	.L.str.84
	.quad	x264_mb_type_list_table
	.quad	x264_mb_pred_mode8x8c_fix
	.quad	.Lfunc_begin0
	.quad	.Ltmp198
	.quad	.Ltmp211
	.quad	.Ltmp259
	.quad	.Ltmp2
	.quad	.Ltmp10
	.quad	.Ltmp11
	.quad	.Ltmp16
	.quad	.Ltmp21
	.quad	.Ltmp25
	.quad	.Ltmp27
	.quad	.Ltmp28
	.quad	.Ltmp29
	.quad	.Ltmp37
	.quad	.Ltmp41
	.quad	.Ltmp42
	.quad	.Ltmp43
	.quad	.Ltmp45
	.quad	.Ltmp60
	.quad	.Ltmp61
	.quad	.Ltmp83
	.quad	.Ltmp88
	.quad	.Ltmp93
	.quad	.Ltmp100
	.quad	.Ltmp105
	.quad	.Ltmp106
	.quad	.Ltmp107
	.quad	.Ltmp108
	.quad	.Ltmp109
	.quad	.Ltmp112
	.quad	.Ltmp113
	.quad	.Ltmp114
	.quad	.Ltmp115
	.quad	.Ltmp116
	.quad	.Ltmp117
	.quad	.Ltmp118
	.quad	.Ltmp119
	.quad	.Ltmp120
	.quad	.Ltmp126
	.quad	.Ltmp128
	.quad	.Ltmp130
	.quad	.Ltmp132
	.quad	.Ltmp140
	.quad	.Ltmp144
	.quad	.Ltmp146
	.quad	.Ltmp149
	.quad	.Ltmp157
	.quad	.Ltmp161
	.quad	.Ltmp167
	.quad	.Ltmp176
	.quad	.Ltmp179
	.quad	.Ltmp180
	.quad	.Ltmp182
	.quad	.Ltmp184
	.quad	.Ltmp188
	.quad	.Ltmp190
	.quad	.Ltmp194
	.quad	.Ltmp202
	.quad	.Ltmp209
	.quad	.Ltmp215
	.quad	.Ltmp219
	.quad	.Ltmp224
	.quad	.Ltmp229
	.quad	.Ltmp243
	.quad	.Ltmp247
	.quad	.Ltmp252
	.quad	.Ltmp258
	.quad	.Ltmp263
	.quad	.Ltmp269
	.quad	.Ltmp274
	.quad	.Ltmp275
	.quad	.Ltmp278
	.quad	.Ltmp281
	.quad	.Ltmp287
	.quad	.Lfunc_begin1
	.quad	.Ltmp299
	.quad	.Ltmp307
	.quad	.Ltmp354
	.quad	.Ltmp366
	.quad	.Ltmp373
	.quad	.Ltmp376
	.quad	.Ltmp378
	.quad	.Ltmp380
	.quad	.Ltmp424
	.quad	.Ltmp429
	.quad	.Ltmp440
	.quad	.Ltmp459
	.quad	.Ltmp466
	.quad	.Ltmp476
	.quad	.Ltmp493
	.quad	.Ltmp497
	.quad	.Ltmp498
	.quad	.Ltmp525
	.quad	.Ltmp528
	.quad	.Ltmp531
	.quad	.Ltmp552
	.quad	.Ltmp563
	.quad	.Ltmp568
	.quad	.Ltmp577
	.quad	.Ltmp586
	.quad	.Ltmp588
	.quad	.Ltmp600
	.quad	.Ltmp607
	.quad	.Ltmp631
	.quad	.Ltmp636
	.quad	.Ltmp641
	.quad	.Ltmp644
	.quad	.Ltmp298
	.quad	.Ltmp304
	.quad	.Ltmp315
	.quad	.Ltmp323
	.quad	.Ltmp327
	.quad	.Ltmp348
	.quad	.Ltmp350
	.quad	.Ltmp369
	.quad	.Ltmp371
	.quad	.Ltmp396
	.quad	.Ltmp398
	.quad	.Ltmp403
	.quad	.Ltmp406
	.quad	.Ltmp412
	.quad	.Ltmp417
	.quad	.Ltmp456
	.quad	.Ltmp482
	.quad	.Ltmp487
	.quad	.Ltmp615
	.quad	.Ltmp621
	.quad	.Ltmp626
	.quad	.Ltmp656
	.quad	.Ltmp691
	.quad	.Lfunc_begin2
	.quad	.Ltmp697
	.quad	.Ltmp703
	.quad	.Ltmp711
	.quad	.Ltmp718
	.quad	.Ltmp721
	.quad	.Lfunc_begin3
	.quad	.Lfunc_begin4
	.quad	.Ltmp736
	.quad	.Ltmp791
	.quad	.Ltmp796
	.quad	.Lfunc_begin5
	.quad	.Lfunc_begin6
	.quad	.Ltmp808
	.quad	.Ltmp811
	.quad	.Ltmp821
	.quad	.Ltmp830
	.quad	.Ltmp840
	.quad	.Ltmp844
	.quad	.Ltmp853
	.quad	.Ltmp863
	.quad	.Ltmp869
	.quad	.Ltmp870
	.quad	.Ltmp877
	.quad	.Ltmp820
	.quad	.Ltmp831
	.quad	.Ltmp836
	.quad	.Ltmp843
	.quad	.Ltmp854
	.quad	.Ltmp859
	.quad	.Ltmp866
	.quad	.Ltmp878
	.quad	.Ltmp883
	.quad	.Ltmp885
	.quad	.Lfunc_begin7
	.quad	.Ltmp891
	.quad	.Ltmp898
	.quad	.Ltmp900
	.quad	.Ltmp905
	.quad	.Lfunc_begin8
	.quad	.Ltmp910
	.quad	.Ltmp930
	.quad	.Ltmp950
	.quad	.Ltmp957
	.quad	.Ltmp969
	.quad	.Lfunc_begin9
	.quad	.Ltmp987
	.quad	.Ltmp996
	.quad	.Lfunc_begin10
	.quad	.Lfunc_begin11
	.quad	.Ltmp1009
	.quad	.Ltmp1014
	.quad	.Ltmp1022
	.quad	.Ltmp1036
	.quad	.Ltmp1038
	.quad	.Ltmp1040
	.quad	.Ltmp1148
	.quad	.Ltmp1134
	.quad	.Ltmp1184
	.quad	.Ltmp1190
	.quad	.Ltmp1194
	.quad	.Ltmp1207
	.quad	.Ltmp1213
	.quad	.Ltmp1653
	.quad	.Ltmp1297
	.quad	.Ltmp1326
	.quad	.Ltmp1330
	.quad	.Ltmp1333
	.quad	.Ltmp1363
	.quad	.Ltmp1366
	.quad	.Ltmp1344
	.quad	.Ltmp1346
	.quad	.Ltmp1348
	.quad	.Ltmp1353
	.quad	.Ltmp1355
	.quad	.Ltmp1359
	.quad	.Ltmp1379
	.quad	.Ltmp1393
	.quad	.Ltmp1410
	.quad	.Ltmp1427
	.quad	.Ltmp1435
	.quad	.Ltmp1517
	.quad	.Ltmp1529
	.quad	.Ltmp1530
	.quad	.Ltmp1450
	.quad	.Ltmp1451
	.quad	.Ltmp1453
	.quad	.Ltmp1664
	.quad	.Ltmp1665
	.quad	.Ltmp1462
	.quad	.Ltmp1464
	.quad	.Ltmp1468
	.quad	.Ltmp1477
	.quad	.Ltmp1504
	.quad	.Ltmp1598
	.quad	.Ltmp1624
	.quad	.Ltmp1026
	.quad	.Ltmp1030
	.quad	.Ltmp1055
	.quad	.Ltmp1056
	.quad	.Ltmp1064
	.quad	.Ltmp1067
	.quad	.Ltmp1074
	.quad	.Ltmp1075
	.quad	.Ltmp1082
	.quad	.Ltmp1087
	.quad	.Ltmp1093
	.quad	.Ltmp1100
	.quad	.Ltmp1109
	.quad	.Ltmp1111
	.quad	.Ltmp1118
	.quad	.Ltmp1121
	.quad	.Ltmp1137
	.quad	.Ltmp1138
	.quad	.Ltmp1152
	.quad	.Ltmp1155
	.quad	.Ltmp1228
	.quad	.Ltmp1236
	.quad	.Ltmp1244
	.quad	.Ltmp1245
	.quad	.Ltmp1249
	.quad	.Ltmp1253
	.quad	.Ltmp1254
	.quad	.Ltmp1275
	.quad	.Ltmp1282
	.quad	.Ltmp1285
	.quad	.Ltmp1293
	.quad	.Ltmp1299
	.quad	.Ltmp1309
	.quad	.Ltmp1312
	.quad	.Ltmp1319
	.quad	.Ltmp1394
	.quad	.Ltmp1399
	.quad	.Ltmp1434
	.quad	.Ltmp1456
	.quad	.Ltmp1457
	.quad	.Ltmp1467
	.quad	.Ltmp1478
	.quad	.Ltmp1483
	.quad	.Ltmp1490
	.quad	.Ltmp1491
	.quad	.Ltmp1497
	.quad	.Ltmp1498
	.quad	.Ltmp1518
	.quad	.Ltmp1524
	.quad	.Ltmp1533
	.quad	.Ltmp1534
	.quad	.Ltmp1569
	.quad	.Ltmp1571
	.quad	.Ltmp1581
	.quad	.Ltmp1590
	.quad	.Ltmp1591
	.quad	.Ltmp1631
	.quad	.Ltmp1640
	.quad	.Ltmp1652
	.quad	.Ltmp1656
	.quad	.Ltmp1668
	.quad	.Ltmp1671
	.quad	.Lfunc_begin12
	.quad	.Ltmp1680
	.quad	.Ltmp1689
	.quad	.Ltmp1691
	.quad	.Ltmp1695
	.quad	.Ltmp1704
	.quad	.Ltmp1745
	.quad	.Ltmp1770
	.quad	.Ltmp1775
	.quad	.Ltmp1778
	.quad	.Ltmp1781
	.quad	.Ltmp1782
	.quad	.Ltmp1789
	.quad	.Ltmp1800
	.quad	.Ltmp1805
	.quad	.Ltmp1818
	.quad	.Ltmp1829
	.quad	.Ltmp1830
	.quad	.Ltmp1833
	.quad	.Ltmp1861
	.quad	.Ltmp1908
	.quad	.Ltmp1922
	.quad	.Ltmp1924
	.quad	.Ltmp1929
	.quad	.Ltmp1933
	.quad	.Ltmp1940
	.quad	.Ltmp1947
	.quad	.Ltmp1954
	.quad	.Ltmp1960
	.quad	.Ltmp1968
	.quad	.Ltmp1987
	.quad	.Ltmp1995
	.quad	.Ltmp2000
	.quad	.Ltmp2003
	.quad	.Ltmp2020
	.quad	.Ltmp2025
	.quad	.Ltmp2044
	.quad	.Ltmp2049
	.quad	.Ltmp1688
	.quad	.Ltmp1694
	.quad	.Ltmp1705
	.quad	.Ltmp1710
	.quad	.Ltmp1718
	.quad	.Ltmp1744
	.quad	.Ltmp1749
	.quad	.Ltmp1751
	.quad	.Ltmp1759
	.quad	.Ltmp1790
	.quad	.Ltmp1795
	.quad	.Ltmp1799
	.quad	.Ltmp1938
	.quad	.Ltmp1945
	.quad	.Ltmp1952
	.quad	.Ltmp1958
	.quad	.Ltmp1965
	.quad	.Ltmp1972
	.quad	.Ltmp1981
	.quad	.Ltmp1984
	.quad	.Ltmp1990
	.quad	.Ltmp1991
	.quad	.Ltmp1994
	.quad	.Ltmp2013
	.quad	.Ltmp2021
	.quad	.Ltmp2022
	.quad	.Ltmp2037
	.quad	.Ltmp2042
	.quad	.Ltmp2045
	.quad	.Ltmp2062
	.quad	.Ltmp2066
	.quad	.Lfunc_begin13
	.quad	.Ltmp2071
	.quad	.Ltmp2097
	.quad	.Ltmp2101
	.quad	.Ltmp2102
	.quad	.Lfunc_begin14
	.quad	.Lfunc_begin15
	.quad	.Ltmp2130
	.quad	.Ltmp2149
	.quad	.Ltmp2156
	.quad	.Ltmp2163
	.quad	.Ltmp2175
	.quad	.Ltmp2178
	.quad	.Ltmp2179
	.quad	.Ltmp2190
	.quad	.Ltmp2198
	.quad	.Ltmp2207
	.quad	.Ltmp2148
	.quad	.Ltmp2170
	.quad	.Ltmp2173
	.quad	.Ltmp2191
	.quad	.Ltmp2196
	.quad	.Lfunc_begin16
	.quad	.Ltmp2235
	.quad	.Ltmp2247
	.quad	.Ltmp2255
	.quad	.Ltmp2260
	.quad	.Ltmp2271
	.quad	.Ltmp2281
	.quad	.Ltmp2285
	.quad	.Ltmp2292
	.quad	.Ltmp2293
	.quad	.Ltmp2422
	.quad	.Ltmp2432
	.quad	.Ltmp2436
	.quad	.Ltmp2312
	.quad	.Ltmp2321
	.quad	.Ltmp2340
	.quad	.Ltmp2349
	.quad	.Ltmp2359
	.quad	.Ltmp2445
	.quad	.Ltmp2448
	.quad	.Ltmp2455
	.quad	.Ltmp2458
	.quad	.Ltmp2366
	.quad	.Ltmp2376
	.quad	.Ltmp2380
	.quad	.Ltmp2388
	.quad	.Ltmp2394
	.quad	.Ltmp2400
	.quad	.Ltmp2406
	.quad	.Ltmp2415
	.quad	.Ltmp2463
	.quad	.Ltmp2472
	.quad	.Ltmp2478
	.quad	.Ltmp2484
	.quad	.Ltmp2493
	.quad	.Ltmp2497
	.quad	.Ltmp2498
	.quad	.Ltmp2503
	.quad	.Ltmp2513
	.quad	.Ltmp2517
	.quad	.Ltmp2526
	.quad	.Ltmp2531
	.quad	.Ltmp2534
	.quad	.Ltmp2540
	.quad	.Ltmp2543
	.quad	.Ltmp2551
	.quad	.Ltmp2559
	.quad	.Ltmp2563
	.quad	.Ltmp2571
	.quad	.Ltmp2581
	.quad	.Ltmp2589
	.quad	.Ltmp2593
	.quad	.Ltmp2601
	.quad	.Ltmp2606
	.quad	.Ltmp2609
	.quad	.Ltmp2615
	.quad	.Ltmp2622
	.quad	.Ltmp2632
	.quad	.Ltmp2635
	.quad	.Ltmp2643
	.quad	.Ltmp2662
	.quad	.Ltmp2672
	.quad	.Ltmp2674
	.quad	.Ltmp2678
	.quad	.Ltmp2680
	.quad	.Ltmp2685
	.quad	.Ltmp2689
	.quad	.Ltmp2692
	.quad	.Ltmp2697
	.quad	.Ltmp2703
	.quad	.Ltmp2713
	.quad	.Ltmp2716
	.quad	.Ltmp2724
	.quad	.Ltmp2743
	.quad	.Ltmp2753
	.quad	.Ltmp2755
	.quad	.Ltmp2759
	.quad	.Ltmp2761
	.quad	.Ltmp2766
	.quad	.Ltmp2772
	.quad	.Ltmp2782
	.quad	.Ltmp2785
	.quad	.Ltmp2793
	.quad	.Ltmp2811
	.quad	.Ltmp2819
	.quad	.Ltmp2821
	.quad	.Ltmp2827
	.quad	.Ltmp2830
	.quad	.Ltmp2832
	.quad	.Ltmp2876
	.quad	.Ltmp2837
	.quad	.Ltmp2847
	.quad	.Ltmp2852
	.quad	.Ltmp2870
	.quad	.Ltmp2879
	.quad	.Ltmp2954
	.quad	.Ltmp2957
	.quad	.Ltmp3016
	.quad	.Ltmp2961
	.quad	.Ltmp2965
	.quad	.Ltmp2971
	.quad	.Ltmp2975
	.quad	.Ltmp2978
	.quad	.Ltmp2980
	.quad	.Ltmp2984
	.quad	.Ltmp3002
	.quad	.Ltmp3011
	.quad	.Ltmp3019
	.quad	.Ltmp3023
	.quad	.Ltmp3025
	.quad	.Ltmp3031
	.quad	.Ltmp3036
	.quad	.Ltmp3046
	.quad	.Ltmp3050
	.quad	.Ltmp3060
	.quad	.Ltmp3063
	.quad	.Ltmp3072
	.quad	.Ltmp3078
	.quad	.Ltmp3083
	.quad	.Ltmp3093
	.quad	.Ltmp3097
	.quad	.Ltmp3107
	.quad	.Ltmp3112
	.quad	.Ltmp3121
	.quad	.Ltmp3127
	.quad	.Ltmp3146
	.quad	.Ltmp3151
	.quad	.Ltmp3152
	.quad	.Ltmp3156
	.quad	.Ltmp3158
	.quad	.Ltmp3161
	.quad	.Ltmp3175
	.quad	.Ltmp3436
	.quad	.Ltmp3440
	.quad	.Ltmp3486
	.quad	.Ltmp3498
	.quad	.Ltmp3502
	.quad	.Ltmp3510
	.quad	.Ltmp3189
	.quad	.Ltmp3217
	.quad	.Ltmp3225
	.quad	.Ltmp3259
	.quad	.Ltmp3270
	.quad	.Ltmp3274
	.quad	.Ltmp3283
	.quad	.Ltmp3290
	.quad	.Ltmp3334
	.quad	.Ltmp3316
	.quad	.Ltmp3326
	.quad	.Ltmp3378
	.quad	.Ltmp3398
	.quad	.Ltmp3452
	.quad	.Ltmp3463
	.quad	.Ltmp2263
	.quad	.Ltmp3164
	.quad	.Ltmp3165
	.quad	.Ltmp3208
	.quad	.Ltmp3209
	.quad	.Ltmp3210
	.quad	.Ltmp3211
	.quad	.Ltmp3219
	.quad	.Ltmp3223
	.quad	.Ltmp3233
	.quad	.Ltmp3243
	.quad	.Ltmp3251
	.quad	.Ltmp3252
	.quad	.Ltmp3255
	.quad	.Ltmp3288
	.quad	.Ltmp3303
	.quad	.Ltmp3401
	.quad	.Ltmp3405
	.quad	.Ltmp3408
	.quad	.Ltmp3451
	.quad	.Ltmp3464
	.quad	.Ltmp3469
	.quad	.Ltmp3481
	.quad	.Ltmp3514
	.quad	.Lfunc_begin17
	.quad	.Ltmp3529
	.quad	.Ltmp3542
	.quad	.Ltmp3620
	.quad	.Ltmp3632
	.quad	.Ltmp3641
	.quad	.Ltmp3672
	.quad	.Ltmp3673
	.quad	.Ltmp3682
	.quad	.Ltmp3683
	.quad	.Ltmp3693
	.quad	.Ltmp3695
	.quad	.Ltmp3703
	.quad	.Ltmp3706
	.quad	.Ltmp3728
	.quad	.Ltmp3735
	.quad	.Ltmp3782
	.quad	.Ltmp3862
	.quad	.Ltmp3864
	.quad	.Ltmp3867
	.quad	.Ltmp3950
	.quad	.Ltmp3967
	.quad	.Ltmp3524
	.quad	.Ltmp3535
	.quad	.Ltmp3538
	.quad	.Ltmp3539
	.quad	.Ltmp3552
	.quad	.Ltmp3554
	.quad	.Ltmp3557
	.quad	.Ltmp3567
	.quad	.Ltmp3569
	.quad	.Ltmp3572
	.quad	.Ltmp3582
	.quad	.Ltmp3584
	.quad	.Ltmp3587
	.quad	.Ltmp3597
	.quad	.Ltmp3599
	.quad	.Ltmp3602
	.quad	.Ltmp3612
	.quad	.Ltmp3614
	.quad	.Ltmp3617
	.quad	.Ltmp3635
	.quad	.Ltmp3640
	.quad	.Ltmp3675
	.quad	.Ltmp3679
	.quad	.Ltmp3680
	.quad	.Ltmp3685
	.quad	.Ltmp3689
	.quad	.Ltmp3691
	.quad	.Ltmp3698
	.quad	.Ltmp3702
	.quad	.Ltmp3724
	.quad	.Ltmp3725
	.quad	.Ltmp3751
	.quad	.Ltmp3752
	.quad	.Ltmp3759
	.quad	.Ltmp3763
	.quad	.Ltmp3764
	.quad	.Ltmp3810
	.quad	.Ltmp3838
	.quad	.Ltmp3851
	.quad	.Ltmp3857
	.quad	.Ltmp3953
	.quad	.Ltmp3958
	.quad	.Ltmp3963
	.quad	.Ltmp3972
	.quad	.Ltmp3975
	.quad	.Ltmp3977
	.quad	.Ltmp3978
	.quad	.Ltmp3981
	.quad	.Ltmp3984
	.quad	.Ltmp3985
	.quad	.Ltmp3986
	.quad	.Ltmp3987
	.quad	.Ltmp3991
	.quad	.Ltmp3992
	.quad	.Ltmp3993
	.quad	.Ltmp3994
	.quad	.Ltmp4000
	.quad	.Ltmp4001
	.quad	.Ltmp4002
	.quad	.Ltmp4003
	.quad	.Ltmp4004
	.quad	.Ltmp4021
	.quad	.Ltmp4027
	.quad	.Lfunc_begin18
	.quad	.Ltmp4031
	.quad	.Ltmp4051
	.quad	.Lfunc_begin19
	.quad	.Ltmp4084
	.quad	.Ltmp4087
	.quad	.Lfunc_begin20
	.quad	.Ltmp4124
	.quad	.Ltmp4125
	.quad	.Ltmp4133
	.quad	.Ltmp4138
	.quad	.Ltmp4162
	.quad	.Ltmp4134
	.quad	.Ltmp4140
	.quad	.Ltmp4143
	.quad	.Ltmp4144
	.quad	.Ltmp4152
	.quad	.Ltmp4163
	.quad	.Ltmp4165
	.quad	.Ltmp4167
	.quad	.Ltmp4175
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
