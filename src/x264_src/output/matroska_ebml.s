	.text
	.file	"matroska_ebml.c"
	.file	0 "/home/yjs/workspace/x264-test/src" "x264_src/output/matroska_ebml.c" md5 0x1fa174e60935636d7a8dc8807d29ae1b
	.globl	mk_create_writer                # -- Begin function mk_create_writer
	.p2align	4, 0x90
	.type	mk_create_writer,@function
mk_create_writer:                       # @mk_create_writer
.Lfunc_begin0:
	.loc	0 288 0                         # x264_src/output/matroska_ebml.c:288:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_create_writer:filename <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
.Ltmp0:
	.loc	0 289 20 prologue_end           # x264_src/output/matroska_ebml.c:289:20
	movl	$1, %edi
.Ltmp1:
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	movl	$104, %esi
	callq	calloc@PLT
.Ltmp2:
	#DEBUG_VALUE: mk_create_writer:w <- $rax
	.loc	0 290 10                        # x264_src/output/matroska_ebml.c:290:10
	testq	%rax, %rax
.Ltmp3:
	.loc	0 290 9 is_stmt 0               # x264_src/output/matroska_ebml.c:290:9
	je	.LBB0_13
.Ltmp4:
# %bb.1:                                # %if.else.i
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %rbx
.Ltmp5:
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	.loc	0 72 13 is_stmt 1               # x264_src/output/matroska_ebml.c:72:13
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc@PLT
.Ltmp6:
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 73 14                         # x264_src/output/matroska_ebml.c:73:14
	testq	%rax, %rax
.Ltmp7:
	.loc	0 73 13 is_stmt 0               # x264_src/output/matroska_ebml.c:73:13
	je	.LBB0_12
.Ltmp8:
# %bb.2:                                # %if.end5
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $rax
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 79 14 is_stmt 1               # x264_src/output/matroska_ebml.c:79:14
	movq	%rbx, 24(%rax)
.Ltmp9:
	.loc	0 82 19                         # x264_src/output/matroska_ebml.c:82:19
	movq	%rbx, %r15
	addq	$48, %r15
.Ltmp10:
	.loc	0 85 13                         # x264_src/output/matroska_ebml.c:85:13
	movq	%r15, 8(%rax)
	.loc	0 86 23                         # x264_src/output/matroska_ebml.c:86:23
	movq	%rax, 48(%rbx)
.Ltmp11:
	.loc	0 295 13                        # x264_src/output/matroska_ebml.c:295:13
	movq	%rax, 16(%rbx)
	cmpb	$45, (%r14)
	jne	.LBB0_4
.Ltmp12:
# %bb.3:                                # %if.end5.tail
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	.loc	0 302 10                        # x264_src/output/matroska_ebml.c:302:10
	cmpb	$0, 1(%r14)
.Ltmp13:
	.loc	0 302 9 is_stmt 0               # x264_src/output/matroska_ebml.c:302:9
	je	.LBB0_7
.Ltmp14:
.LBB0_4:                                # %if.else
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	.loc	0 305 17 is_stmt 1              # x264_src/output/matroska_ebml.c:305:17
	movl	$.L.str.1, %esi
	movq	%r14, %rdi
	callq	fopen64@PLT
.Ltmp15:
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, (%rbx)
.Ltmp16:
	.loc	0 306 10 is_stmt 1              # x264_src/output/matroska_ebml.c:306:10
	testq	%rax, %rax
.Ltmp17:
	.loc	0 306 9 is_stmt 0               # x264_src/output/matroska_ebml.c:306:9
	je	.LBB0_8
.Ltmp18:
.LBB0_5:                                # %if.end15
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	.loc	0 313 18 is_stmt 1              # x264_src/output/matroska_ebml.c:313:18
	movq	$1000000, 64(%rbx)              # imm = 0xF4240
	jmp	.LBB0_14
.Ltmp19:
.LBB0_7:                                # %if.then8
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	.loc	0 303 17                        # x264_src/output/matroska_ebml.c:303:17
	movq	stdout@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, (%rbx)
.Ltmp20:
	.loc	0 306 10 is_stmt 1              # x264_src/output/matroska_ebml.c:306:10
	testq	%rax, %rax
.Ltmp21:
	.loc	0 306 9 is_stmt 0               # x264_src/output/matroska_ebml.c:306:9
	jne	.LBB0_5
.Ltmp22:
.LBB0_8:                                # %if.then14
	#DEBUG_VALUE: mk_create_writer:filename <- $r14
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 213 31 is_stmt 1              # x264_src/output/matroska_ebml.c:213:31
	movq	40(%rbx), %r14
.Ltmp23:
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: cur <- $r14
	.loc	0 213 5 is_stmt 0               # x264_src/output/matroska_ebml.c:213:5
	testq	%r14, %r14
	je	.LBB0_10
.Ltmp24:
	.p2align	4, 0x90
.LBB0_9:                                # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	#DEBUG_VALUE: cur <- $r14
	#DEBUG_VALUE: cur <- $r14
	.loc	0 215 21 is_stmt 1              # x264_src/output/matroska_ebml.c:215:21
	movq	(%r14), %r12
.Ltmp25:
	#DEBUG_VALUE: mk_destroy_contexts:next <- $r12
	.loc	0 216 20                        # x264_src/output/matroska_ebml.c:216:20
	movq	40(%r14), %rdi
	.loc	0 216 9 is_stmt 0               # x264_src/output/matroska_ebml.c:216:9
	callq	free@PLT
.Ltmp26:
	.loc	0 217 9 is_stmt 1               # x264_src/output/matroska_ebml.c:217:9
	movq	%r14, %rdi
	callq	free@PLT
.Ltmp27:
	#DEBUG_VALUE: cur <- $r12
	.loc	0 0 9 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:9
	movq	%r12, %r14
.Ltmp28:
	.loc	0 213 5 is_stmt 1               # x264_src/output/matroska_ebml.c:213:5
	testq	%r12, %r12
	jne	.LBB0_9
.Ltmp29:
.LBB0_10:                               # %for.cond.cleanup.i
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 220 31                        # x264_src/output/matroska_ebml.c:220:31
	movq	(%r15), %r14
.Ltmp30:
	#DEBUG_VALUE: cur <- $r14
	.loc	0 220 5 is_stmt 0               # x264_src/output/matroska_ebml.c:220:5
	testq	%r14, %r14
	je	.LBB0_12
.Ltmp31:
	.p2align	4, 0x90
.LBB0_11:                               # %for.body6.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	#DEBUG_VALUE: cur <- $r14
	#DEBUG_VALUE: cur <- $r14
	.loc	0 222 21 is_stmt 1              # x264_src/output/matroska_ebml.c:222:21
	movq	(%r14), %r15
.Ltmp32:
	#DEBUG_VALUE: mk_destroy_contexts:next <- $r15
	.loc	0 223 20                        # x264_src/output/matroska_ebml.c:223:20
	movq	40(%r14), %rdi
	.loc	0 223 9 is_stmt 0               # x264_src/output/matroska_ebml.c:223:9
	callq	free@PLT
.Ltmp33:
	.loc	0 224 9 is_stmt 1               # x264_src/output/matroska_ebml.c:224:9
	movq	%r14, %rdi
	callq	free@PLT
.Ltmp34:
	#DEBUG_VALUE: cur <- $r15
	.loc	0 0 9 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:9
	movq	%r15, %r14
.Ltmp35:
	.loc	0 220 5 is_stmt 1               # x264_src/output/matroska_ebml.c:220:5
	testq	%r15, %r15
	jne	.LBB0_11
.Ltmp36:
.LBB0_12:                               # %if.then4
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_create_writer:w <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	%rbx, %rdi
	callq	free@PLT
.Ltmp37:
.LBB0_13:                               # %cleanup
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	xorl	%ebx, %ebx
.Ltmp38:
.LBB0_14:                               # %cleanup
	#DEBUG_VALUE: mk_create_writer:filename <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 316 1 is_stmt 1               # x264_src/output/matroska_ebml.c:316:1
	movq	%rbx, %rax
	.loc	0 316 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:316:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp39:
.Lfunc_end0:
	.size	mk_create_writer, .Lfunc_end0-mk_create_writer
	.cfi_endproc
	.file	1 "/usr/include/x86_64-linux-gnu/bits/types" "struct_FILE.h" md5 0x1bad07471b7974df4ecc1d1c2ca207e6
	.file	2 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	3 "/home/yjs/workspace" "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h" md5 0x2c44e821a2b1951cde2eb0fb2e656867
	.file	4 "/usr/include/x86_64-linux-gnu/bits/types" "FILE.h" md5 0x571f9fb6223c42439075fdde11a0de5d
	.file	5 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h" md5 0x55bcbdc3159515ebd91d351a70d505f4
	.file	6 "x264_src/output" "matroska_ebml.h" md5 0x1745c5eb41455b01e98496f56a8b1e8e
	.file	7 "/usr/include" "stdio.h" md5 0xf31eefcc3f15835fc5a4023a625cf609
	.file	8 "/usr/include" "stdlib.h" md5 0x02258fad21adf111bb9df9825e61954a
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_create_context
	.type	mk_create_context,@function
mk_create_context:                      # @mk_create_context
.Lfunc_begin1:
	.loc	0 62 0 is_stmt 1                # x264_src/output/matroska_ebml.c:62:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_create_context:w <- $rdi
	#DEBUG_VALUE: mk_create_context:parent <- $rsi
	#DEBUG_VALUE: mk_create_context:id <- $edx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movl	%edx, %ebp
	movq	%rsi, %r14
	movq	%rdi, %rbx
.Ltmp40:
	.loc	0 65 12 prologue_end            # x264_src/output/matroska_ebml.c:65:12
	movq	40(%rdi), %rax
	.loc	0 65 9 is_stmt 0                # x264_src/output/matroska_ebml.c:65:9
	testq	%rax, %rax
.Ltmp41:
	.loc	0 65 9                          # x264_src/output/matroska_ebml.c:65:9
	je	.LBB1_4
.Ltmp42:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 68 36 is_stmt 1               # x264_src/output/matroska_ebml.c:68:36
	movq	(%rax), %rcx
	.loc	0 68 21 is_stmt 0               # x264_src/output/matroska_ebml.c:68:21
	movq	%rcx, 40(%rbx)
	jmp	.LBB1_2
.Ltmp43:
.LBB1_4:                                # %if.else
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	.loc	0 72 13 is_stmt 1               # x264_src/output/matroska_ebml.c:72:13
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc@PLT
.Ltmp44:
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 73 14                         # x264_src/output/matroska_ebml.c:73:14
	testq	%rax, %rax
.Ltmp45:
	.loc	0 73 13 is_stmt 0               # x264_src/output/matroska_ebml.c:73:13
	je	.LBB1_5
.Ltmp46:
.LBB1_2:                                # %if.end6
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 78 15 is_stmt 1               # x264_src/output/matroska_ebml.c:78:15
	movq	%r14, 16(%rax)
	.loc	0 79 14                         # x264_src/output/matroska_ebml.c:79:14
	movq	%rbx, 24(%rax)
	.loc	0 80 11                         # x264_src/output/matroska_ebml.c:80:11
	movl	%ebp, 32(%rax)
.Ltmp47:
	.loc	0 82 19                         # x264_src/output/matroska_ebml.c:82:19
	movq	48(%rbx), %rcx
	.loc	0 82 9 is_stmt 0                # x264_src/output/matroska_ebml.c:82:9
	testq	%rcx, %rcx
.Ltmp48:
	.loc	0 82 9                          # x264_src/output/matroska_ebml.c:82:9
	je	.LBB1_3
.Ltmp49:
# %bb.6:                                # %if.then11
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 83 33 is_stmt 1               # x264_src/output/matroska_ebml.c:83:33
	movq	%rax, 8(%rcx)
.Ltmp50:
	.loc	0 84 18                         # x264_src/output/matroska_ebml.c:84:18
	movq	24(%rax), %rbx
.Ltmp51:
	#DEBUG_VALUE: mk_create_context:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 84 25 is_stmt 0               # x264_src/output/matroska_ebml.c:84:25
	movq	48(%rbx), %rcx
	jmp	.LBB1_7
.Ltmp52:
.LBB1_3:
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 0 25                          # x264_src/output/matroska_ebml.c:0:25
	xorl	%ecx, %ecx
.Ltmp53:
.LBB1_7:                                # %if.end15
	#DEBUG_VALUE: mk_create_context:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 84 25                         # x264_src/output/matroska_ebml.c:84:25
	leaq	48(%rbx), %rdx
	.loc	0 84 13                         # x264_src/output/matroska_ebml.c:84:13
	movq	%rcx, (%rax)
	.loc	0 85 13 is_stmt 1               # x264_src/output/matroska_ebml.c:85:13
	movq	%rdx, 8(%rax)
	.loc	0 86 23                         # x264_src/output/matroska_ebml.c:86:23
	movq	%rax, 48(%rbx)
	.loc	0 89 1 epilogue_begin           # x264_src/output/matroska_ebml.c:89:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp54:
	#DEBUG_VALUE: mk_create_context:parent <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp55:
	#DEBUG_VALUE: mk_create_context:id <- [DW_OP_LLVM_entry_value 1] $edx
	.cfi_def_cfa_offset 8
	retq
.Ltmp56:
.LBB1_5:
	.cfi_def_cfa_offset 32
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:id <- $ebp
	#DEBUG_VALUE: mk_create_context:c <- $rax
	.loc	0 0 1 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:1
	xorl	%eax, %eax
.Ltmp57:
	.loc	0 89 1 epilogue_begin           # x264_src/output/matroska_ebml.c:89:1
	popq	%rbx
.Ltmp58:
	#DEBUG_VALUE: mk_create_context:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp59:
	#DEBUG_VALUE: mk_create_context:parent <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp60:
	#DEBUG_VALUE: mk_create_context:id <- [DW_OP_LLVM_entry_value 1] $edx
	.cfi_def_cfa_offset 8
	retq
.Ltmp61:
.Lfunc_end1:
	.size	mk_create_context, .Lfunc_end1-mk_create_context
	.cfi_endproc
                                        # -- End function
	.globl	mk_writeHeader                  # -- Begin function mk_writeHeader
	.p2align	4, 0x90
	.type	mk_writeHeader,@function
mk_writeHeader:                         # @mk_writeHeader
.Lfunc_begin2:
	.loc	0 325 0 is_stmt 1               # x264_src/output/matroska_ebml.c:325:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_writeHeader:w <- $rdi
	#DEBUG_VALUE: mk_writeHeader:writing_app <- $rsi
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r9
	#DEBUG_VALUE: mk_writeHeader:timescale <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:width <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:height <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_width <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_height <- [DW_OP_plus_uconst 128] [$rsp+0]
	movl	$-1, %eax
.Ltmp62:
	.loc	0 328 9 prologue_end            # x264_src/output/matroska_ebml.c:328:9
	cmpb	$0, 96(%rdi)
.Ltmp63:
	.loc	0 328 9 is_stmt 0               # x264_src/output/matroska_ebml.c:328:9
	je	.LBB2_1
.Ltmp64:
# %bb.139:                              # %cleanup
	#DEBUG_VALUE: mk_writeHeader:w <- $rdi
	#DEBUG_VALUE: mk_writeHeader:writing_app <- $rsi
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r9
	#DEBUG_VALUE: mk_writeHeader:timescale <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:width <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:height <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_width <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_height <- [DW_OP_plus_uconst 128] [$rsp+0]
	.loc	0 390 1 is_stmt 1               # x264_src/output/matroska_ebml.c:390:1
	retq
.Ltmp65:
.LBB2_1:                                # %if.end
	#DEBUG_VALUE: mk_writeHeader:w <- $rdi
	#DEBUG_VALUE: mk_writeHeader:writing_app <- $rsi
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r9
	#DEBUG_VALUE: mk_writeHeader:timescale <- [DW_OP_plus_uconst 96] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:width <- [DW_OP_plus_uconst 104] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:height <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_width <- [DW_OP_plus_uconst 120] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:d_height <- [DW_OP_plus_uconst 128] [$rsp+0]
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
.Ltmp66:
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	.loc	0 0 1 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:1
	movq	96(%rsp), %rax
	.loc	0 331 18 is_stmt 1              # x264_src/output/matroska_ebml.c:331:18
	movq	%rax, 64(%rdi)
	.loc	0 332 21                        # x264_src/output/matroska_ebml.c:332:21
	movq	%r9, 56(%rdi)
.Ltmp67:
	.loc	0 334 40                        # x264_src/output/matroska_ebml.c:334:40
	movq	16(%rdi), %rbx
.Ltmp68:
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	.loc	0 65 12                         # x264_src/output/matroska_ebml.c:65:12
	movq	40(%rdi), %r12
	.loc	0 65 9 is_stmt 0                # x264_src/output/matroska_ebml.c:65:9
	testq	%r12, %r12
.Ltmp69:
	.loc	0 65 9                          # x264_src/output/matroska_ebml.c:65:9
	je	.LBB2_3
.Ltmp70:
# %bb.2:                                # %if.then.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	#DEBUG_VALUE: mk_create_context:c <- $r12
	.loc	0 68 36 is_stmt 1               # x264_src/output/matroska_ebml.c:68:36
	movq	(%r12), %rax
	.loc	0 68 21 is_stmt 0               # x264_src/output/matroska_ebml.c:68:21
	movq	%rax, 40(%r14)
	jmp	.LBB2_4
.Ltmp71:
.LBB2_3:                                # %if.else.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	.loc	0 72 13 is_stmt 1               # x264_src/output/matroska_ebml.c:72:13
	movl	$1, %edi
	movl	$56, %esi
	movq	%r9, %r15
.Ltmp72:
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- $r15
	.loc	0 0 13 is_stmt 0                # x264_src/output/matroska_ebml.c:0:13
	movl	%r8d, %ebp
.Ltmp73:
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- $ebp
	movq	%rcx, %r12
.Ltmp74:
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $r12
	movq	%rdx, %r13
.Ltmp75:
	#DEBUG_VALUE: mk_writeHeader:codec_id <- $r13
	.loc	0 72 13                         # x264_src/output/matroska_ebml.c:72:13
	callq	calloc@PLT
.Ltmp76:
	.loc	0 0 13                          # x264_src/output/matroska_ebml.c:0:13
	movq	%r13, %rdx
	movq	%r12, %rcx
	movl	%ebp, %r8d
	movq	%r15, %r9
	.loc	0 72 13                         # x264_src/output/matroska_ebml.c:72:13
	movq	%rax, %r12
.Ltmp77:
	#DEBUG_VALUE: mk_writeHeader:codec_private <- $rcx
	#DEBUG_VALUE: mk_create_context:c <- $r12
	.loc	0 73 14 is_stmt 1               # x264_src/output/matroska_ebml.c:73:14
	testq	%rax, %rax
.Ltmp78:
	.loc	0 73 13 is_stmt 0               # x264_src/output/matroska_ebml.c:73:13
	je	.LBB2_137
.Ltmp79:
.LBB2_4:                                # %if.end6.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	#DEBUG_VALUE: mk_create_context:c <- $r12
	#DEBUG_VALUE: mk_create_context:c <- $r12
	.loc	0 78 15 is_stmt 1               # x264_src/output/matroska_ebml.c:78:15
	movq	%rbx, 16(%r12)
	.loc	0 79 14                         # x264_src/output/matroska_ebml.c:79:14
	movq	%r14, 24(%r12)
	.loc	0 80 11                         # x264_src/output/matroska_ebml.c:80:11
	movl	$440786851, 32(%r12)            # imm = 0x1A45DFA3
.Ltmp80:
	.loc	0 82 19                         # x264_src/output/matroska_ebml.c:82:19
	movq	48(%r14), %rax
	.loc	0 82 9 is_stmt 0                # x264_src/output/matroska_ebml.c:82:9
	testq	%rax, %rax
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	movq	%rdx, 24(%rsp)                  # 8-byte Spill
.Ltmp81:
	.loc	0 82 9                          # x264_src/output/matroska_ebml.c:82:9
	je	.LBB2_6
.Ltmp82:
# %bb.5:                                # %if.then11.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	#DEBUG_VALUE: mk_create_context:c <- $r12
	.loc	0 83 33 is_stmt 1               # x264_src/output/matroska_ebml.c:83:33
	movq	%r12, 8(%rax)
.Ltmp83:
	.loc	0 84 18                         # x264_src/output/matroska_ebml.c:84:18
	movq	24(%r12), %rcx
	.loc	0 84 25 is_stmt 0               # x264_src/output/matroska_ebml.c:84:25
	movq	48(%rcx), %rax
	jmp	.LBB2_7
.Ltmp84:
.LBB2_6:
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	#DEBUG_VALUE: mk_create_context:c <- $r12
	.loc	0 0 25                          # x264_src/output/matroska_ebml.c:0:25
	xorl	%eax, %eax
	movq	%r14, %rcx
.Ltmp85:
.LBB2_7:                                # %do.body
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_create_context:parent <- $rbx
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	#DEBUG_VALUE: mk_create_context:c <- $r12
	movl	%r8d, 4(%rsp)                   # 4-byte Spill
	.loc	0 84 25                         # x264_src/output/matroska_ebml.c:84:25
	leaq	48(%rcx), %rdx
	.loc	0 84 13                         # x264_src/output/matroska_ebml.c:84:13
	movq	%rax, (%r12)
	.loc	0 85 13 is_stmt 1               # x264_src/output/matroska_ebml.c:85:13
	movq	%rdx, 8(%r12)
	.loc	0 86 23                         # x264_src/output/matroska_ebml.c:86:23
	movq	%r12, 48(%rcx)
.Ltmp86:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %r13d
.Ltmp87:
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp88:
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	2(%r13), %r15d
.Ltmp89:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp90:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_12
.Ltmp91:
# %bb.8:                                # %if.then.i68.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movq	%r9, %rbp
	leal	(%rax,%rax), %ecx
.Ltmp92:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp93:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_9:                                # %while.cond.i72.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp94:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp95:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_9
.Ltmp96:
# %bb.10:                               # %while.end.i76.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp97:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp98:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp99:
# %bb.11:                               # %if.end.i81.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 0 13                          # x264_src/output/matroska_ebml.c:0:13
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp100:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB2_13
.Ltmp101:
.LBB2_12:                               # %entry.if.end11_crit_edge.i61.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 33 is_stmt 0                # x264_src/output/matroska_ebml.c:0:33
	movq	%r9, 8(%rsp)                    # 8-byte Spill
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
	movl	%r13d, %ecx
.Ltmp102:
.LBB2_13:                               # %land.rhs.preheader.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17030
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -122
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-31166, (%rax,%rcx)            # imm = 0x8642
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r12)
.Ltmp103:
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	3(%r13), %ebp
.Ltmp104:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp105:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_18
.Ltmp106:
# %bb.14:                               # %if.then.i.i515
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp107:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp108:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_15:                               # %while.cond.i.i519
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp109:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp110:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_15
.Ltmp111:
# %bb.16:                               # %while.end.i.i523
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp112:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp113:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp114:
# %bb.17:                               # %if.end.i.i528
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp115:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %r15d
	jmp	.LBB2_19
.Ltmp116:
.LBB2_18:                               # %entry.if.end11_crit_edge.i.i509
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp117:
.LBB2_19:                               # %do.body31.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-127, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp118:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	4(%r13), %r15d
.Ltmp119:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp120:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_24
.Ltmp121:
# %bb.20:                               # %if.then.i.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp122:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp123:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_21:                               # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp124:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp125:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_21
.Ltmp126:
# %bb.22:                               # %while.end.i.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp127:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp128:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp129:
# %bb.23:                               # %if.end.i.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp130:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebp
	jmp	.LBB2_25
.Ltmp131:
.LBB2_24:                               # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp132:
.LBB2_25:                               # %do.body8
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17030
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$1, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r12)
.Ltmp133:
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp134:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	6(%r13), %ebx
.Ltmp135:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebx
.Ltmp136:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_30
.Ltmp137:
# %bb.26:                               # %if.then.i68.i571
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp138:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp139:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_27:                               # %while.cond.i72.i575
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp140:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp141:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebx
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_27
.Ltmp142:
# %bb.28:                               # %while.end.i76.i579
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp143:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp144:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp145:
# %bb.29:                               # %if.end.i81.i584
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%r12)
.Ltmp146:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %r15d
	jmp	.LBB2_31
.Ltmp147:
.LBB2_30:                               # %entry.if.end11_crit_edge.i61.i563
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp148:
.LBB2_31:                               # %land.rhs.preheader.i317
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17143
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -9
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-2238, (%rax,%rcx)             # imm = 0xF742
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebx, 48(%r12)
.Ltmp149:
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	7(%r13), %ebp
.Ltmp150:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp151:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_36
.Ltmp152:
# %bb.32:                               # %if.then.i.i543
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp153:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp154:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_33:                               # %while.cond.i.i547
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp155:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp156:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_33
.Ltmp157:
# %bb.34:                               # %while.end.i.i551
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp158:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp159:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp160:
# %bb.35:                               # %if.end.i.i556
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp161:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebx
	jmp	.LBB2_37
.Ltmp162:
.LBB2_36:                               # %entry.if.end11_crit_edge.i.i536
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp163:
.LBB2_37:                               # %do.body31.i320
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-127, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp164:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	8(%r13), %r15d
.Ltmp165:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp166:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_42
.Ltmp167:
# %bb.38:                               # %if.then.i.i333
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp168:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp169:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_39:                               # %while.cond.i.i337
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp170:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp171:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_39
.Ltmp172:
# %bb.40:                               # %while.end.i.i341
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp173:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp174:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp175:
# %bb.41:                               # %if.end.i.i346
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp176:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebp
	jmp	.LBB2_43
.Ltmp177:
.LBB2_42:                               # %entry.if.end11_crit_edge.i.i326
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp178:
.LBB2_43:                               # %do.body15
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17143
	#DEBUG_VALUE: mk_write_uint:ui <- 1
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 1
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$1, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r12)
.Ltmp179:
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp180:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	10(%r13), %ebx
.Ltmp181:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebx
.Ltmp182:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_48
.Ltmp183:
# %bb.44:                               # %if.then.i68.i627
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp184:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp185:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_45:                               # %while.cond.i72.i631
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp186:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp187:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebx
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_45
.Ltmp188:
# %bb.46:                               # %while.end.i76.i635
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp189:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp190:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp191:
# %bb.47:                               # %if.end.i81.i640
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%r12)
.Ltmp192:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %r15d
	jmp	.LBB2_49
.Ltmp193:
.LBB2_48:                               # %entry.if.end11_crit_edge.i61.i619
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp194:
.LBB2_49:                               # %land.rhs.preheader.i359
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17138
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -14
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-3518, (%rax,%rcx)             # imm = 0xF242
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebx, 48(%r12)
.Ltmp195:
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	11(%r13), %ebp
.Ltmp196:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp197:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_54
.Ltmp198:
# %bb.50:                               # %if.then.i.i599
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp199:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp200:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_51:                               # %while.cond.i.i603
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp201:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp202:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_51
.Ltmp203:
# %bb.52:                               # %while.end.i.i607
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp204:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp205:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp206:
# %bb.53:                               # %if.end.i.i612
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp207:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebx
	jmp	.LBB2_55
.Ltmp208:
.LBB2_54:                               # %entry.if.end11_crit_edge.i.i592
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp209:
.LBB2_55:                               # %do.body31.i362
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-127, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp210:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	12(%r13), %r15d
.Ltmp211:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp212:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_60
.Ltmp213:
# %bb.56:                               # %if.then.i.i375
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp214:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp215:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_57:                               # %while.cond.i.i379
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp216:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp217:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_57
.Ltmp218:
# %bb.58:                               # %while.end.i.i383
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp219:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp220:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp221:
# %bb.59:                               # %if.end.i.i388
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp222:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebp
	jmp	.LBB2_61
.Ltmp223:
.LBB2_60:                               # %entry.if.end11_crit_edge.i.i368
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp224:
.LBB2_61:                               # %do.body22
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17138
	#DEBUG_VALUE: mk_write_uint:ui <- 4
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 4
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$4, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r12)
.Ltmp225:
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp226:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	14(%r13), %ebx
.Ltmp227:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebx
.Ltmp228:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_66
.Ltmp229:
# %bb.62:                               # %if.then.i68.i683
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp230:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp231:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_63:                               # %while.cond.i72.i687
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp232:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp233:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebx
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_63
.Ltmp234:
# %bb.64:                               # %while.end.i76.i691
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp235:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp236:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp237:
# %bb.65:                               # %if.end.i81.i696
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%r12)
.Ltmp238:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %r15d
	jmp	.LBB2_67
.Ltmp239:
.LBB2_66:                               # %entry.if.end11_crit_edge.i61.i675
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp240:
.LBB2_67:                               # %land.rhs.preheader.i401
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17139
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -13
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-3262, (%rax,%rcx)             # imm = 0xF342
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebx, 48(%r12)
.Ltmp241:
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	15(%r13), %ebp
.Ltmp242:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp243:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_72
.Ltmp244:
# %bb.68:                               # %if.then.i.i655
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp245:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp246:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_69:                               # %while.cond.i.i659
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp247:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp248:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_69
.Ltmp249:
# %bb.70:                               # %while.end.i.i663
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp250:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp251:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp252:
# %bb.71:                               # %if.end.i.i668
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp253:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebx
	jmp	.LBB2_73
.Ltmp254:
.LBB2_72:                               # %entry.if.end11_crit_edge.i.i648
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp255:
.LBB2_73:                               # %do.body31.i404
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_write_size:c <- $r12
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-127, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp256:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	16(%r13), %r15d
.Ltmp257:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp258:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_78
.Ltmp259:
# %bb.74:                               # %if.then.i.i417
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp260:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp261:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_75:                               # %while.cond.i.i421
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp262:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp263:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_75
.Ltmp264:
# %bb.76:                               # %while.end.i.i425
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp265:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp266:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp267:
# %bb.77:                               # %if.end.i.i430
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp268:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebp
	jmp	.LBB2_79
.Ltmp269:
.LBB2_78:                               # %entry.if.end11_crit_edge.i.i410
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp270:
.LBB2_79:                               # %do.body29
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17139
	#DEBUG_VALUE: mk_write_uint:ui <- 8
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 8
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$8, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r12)
.Ltmp271:
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:str <- undef
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp272:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	addl	$18, %r13d
.Ltmp273:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r13d
.Ltmp274:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_84
.Ltmp275:
# %bb.80:                               # %if.then.i68.i711
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp276:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp277:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_81:                               # %while.cond.i72.i715
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp278:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp279:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r13d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_81
.Ltmp280:
# %bb.82:                               # %while.end.i76.i719
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp281:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp282:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp283:
# %bb.83:                               # %if.end.i81.i724
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp284:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %r15d
	jmp	.LBB2_85
.Ltmp285:
.LBB2_84:                               # %entry.if.end11_crit_edge.i61.i703
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp286:
.LBB2_85:                               # %do.body2.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17026
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -126
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-32190, (%rax,%rcx)            # imm = 0x8242
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r13d, 48(%r12)
.Ltmp287:
	.loc	0 235 5                         # x264_src/output/matroska_ebml.c:235:5
	movq	%r12, %rdi
	movl	$8, %esi
	callq	mk_write_size
.Ltmp288:
	testl	%eax, %eax
.Ltmp289:
	.loc	0 235 5 is_stmt 0               # x264_src/output/matroska_ebml.c:235:5
	js	.LBB2_137
.Ltmp290:
# %bb.86:                               # %do.body10.i
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %r13d
.Ltmp291:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp292:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	8(%r13), %ebp
.Ltmp293:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp294:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_91
.Ltmp295:
# %bb.87:                               # %if.then.i.i446
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp296:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp297:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB2_88:                               # %while.cond.i.i450
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp298:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp299:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_88
.Ltmp300:
# %bb.89:                               # %while.end.i.i454
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp301:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp302:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp303:
# %bb.90:                               # %if.end.i.i459
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp304:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB2_92
.Ltmp305:
.LBB2_91:                               # %entry.if.end11_crit_edge.i.i439
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
	movl	%r13d, %ecx
.Ltmp306:
.LBB2_92:                               # %do.body36
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_string:c <- $r12
	#DEBUG_VALUE: mk_write_string:id <- 17026
	#DEBUG_VALUE: mk_write_string:len <- 8
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 8
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	movabsq	$7019831366685843821, %rdx      # imm = 0x616B736F7274616D
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%rdx, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp307:
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp308:
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	addl	$10, %r13d
.Ltmp309:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r13d
.Ltmp310:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_97
.Ltmp311:
# %bb.93:                               # %if.then.i68.i739
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp312:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp313:
	#DEBUG_VALUE: dn <- $eax
.LBB2_94:                               # %while.cond.i72.i743
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %ebx
.Ltmp314:
	#DEBUG_VALUE: dn <- $ebx
	#DEBUG_VALUE: dn <- $ebx
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%rbx,%rbx), %eax
.Ltmp315:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%ebx, %r13d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_94
.Ltmp316:
# %bb.95:                               # %while.end.i76.i747
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%ebx, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp317:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp318:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp319:
# %bb.96:                               # %if.end.i81.i752
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%ebx, 52(%r12)
.Ltmp320:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ebp
	jmp	.LBB2_98
.Ltmp321:
.LBB2_97:                               # %entry.if.end11_crit_edge.i61.i731
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp322:
.LBB2_98:                               # %land.rhs.preheader.i471
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_id:c <- $r12
	#DEBUG_VALUE: mk_write_id:id <- 17031
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 66
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -121
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-30910, (%rax,%rcx)            # imm = 0x8742
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r13d, 48(%r12)
.Ltmp323:
	#DEBUG_VALUE: mk_write_uint:i <- 6
	.loc	0 256 5                         # x264_src/output/matroska_ebml.c:256:5
	movq	%r12, %rdi
	movl	$1, %esi
	callq	mk_write_size
.Ltmp324:
	testl	%eax, %eax
.Ltmp325:
	.loc	0 256 5 is_stmt 0               # x264_src/output/matroska_ebml.c:256:5
	js	.LBB2_137
.Ltmp326:
# %bb.99:                               # %do.body31.i474
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %ecx
.Ltmp327:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp328:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %ebx
.Ltmp329:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebx
.Ltmp330:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB2_104
.Ltmp331:
# %bb.100:                              # %if.then.i.i488
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp332:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp333:
	#DEBUG_VALUE: dn <- $eax
.LBB2_101:                              # %while.cond.i.i492
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp334:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp335:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebx
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB2_101
.Ltmp336:
# %bb.102:                              # %while.end.i.i496
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp337:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp338:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB2_137
.Ltmp339:
# %bb.103:                              # %if.end.i.i501
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%r12)
.Ltmp340:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB2_105
.Ltmp341:
.LBB2_104:                              # %entry.if.end11_crit_edge.i.i480
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp342:
.LBB2_105:                              # %do.body43
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_write_uint:c <- $r12
	#DEBUG_VALUE: mk_write_uint:id <- 17031
	#DEBUG_VALUE: mk_write_uint:ui <- 2
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 32 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 40 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 48 8] 0
	#DEBUG_VALUE: mk_write_uint:c_ui <- [DW_OP_LLVM_fragment 56 8] 2
	#DEBUG_VALUE: mk_write_uint:i <- 6
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebx
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$2, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebx, 48(%r12)
.Ltmp343:
	.loc	0 342 5                         # x264_src/output/matroska_ebml.c:342:5
	movl	$2, %edx
	movq	%r12, %rdi
	movl	$17029, %esi                    # imm = 0x4285
	callq	mk_write_uint
.Ltmp344:
	testl	%eax, %eax
.Ltmp345:
	.loc	0 342 5 is_stmt 0               # x264_src/output/matroska_ebml.c:342:5
	js	.LBB2_137
.Ltmp346:
# %bb.106:                              # %do.body50
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 343 5 is_stmt 1               # x264_src/output/matroska_ebml.c:343:5
	movq	%r12, %rdi
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp347:
	testl	%eax, %eax
.Ltmp348:
	.loc	0 343 5 is_stmt 0               # x264_src/output/matroska_ebml.c:343:5
	js	.LBB2_137
.Ltmp349:
# %bb.107:                              # %do.end56
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 345 40 is_stmt 1              # x264_src/output/matroska_ebml.c:345:40
	movq	16(%r14), %rsi
	.loc	0 345 15 is_stmt 0              # x264_src/output/matroska_ebml.c:345:15
	movq	%r14, %rdi
	movl	$408125543, %edx                # imm = 0x18538067
	callq	mk_create_context
.Ltmp350:
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 345 13                        # x264_src/output/matroska_ebml.c:345:13
	testq	%rax, %rax
.Ltmp351:
	.loc	0 345 9                         # x264_src/output/matroska_ebml.c:345:9
	je	.LBB2_137
.Ltmp352:
# %bb.108:                              # %do.body62
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %r12
.Ltmp353:
	.loc	0 347 5 is_stmt 1               # x264_src/output/matroska_ebml.c:347:5
	movq	%rax, %rdi
	callq	mk_flush_context_id
.Ltmp354:
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	testl	%eax, %eax
.Ltmp355:
	.loc	0 347 5 is_stmt 0               # x264_src/output/matroska_ebml.c:347:5
	js	.LBB2_137
.Ltmp356:
# %bb.109:                              # %do.body69
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 348 5 is_stmt 1               # x264_src/output/matroska_ebml.c:348:5
	movq	%r12, %rdi
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp357:
	testl	%eax, %eax
.Ltmp358:
	.loc	0 348 5 is_stmt 0               # x264_src/output/matroska_ebml.c:348:5
	js	.LBB2_137
.Ltmp359:
# %bb.110:                              # %do.end75
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 350 40 is_stmt 1              # x264_src/output/matroska_ebml.c:350:40
	movq	16(%r14), %rsi
	.loc	0 350 15 is_stmt 0              # x264_src/output/matroska_ebml.c:350:15
	movq	%r14, %rdi
	movl	$357149030, %edx                # imm = 0x1549A966
	callq	mk_create_context
.Ltmp360:
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 350 13                        # x264_src/output/matroska_ebml.c:350:13
	testq	%rax, %rax
.Ltmp361:
	.loc	0 350 9                         # x264_src/output/matroska_ebml.c:350:9
	je	.LBB2_137
.Ltmp362:
# %bb.111:                              # %do.body81
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %r12
.Ltmp363:
	.loc	0 352 5 is_stmt 1               # x264_src/output/matroska_ebml.c:352:5
	movl	$.L.str.3, %edx
	movq	%rax, %rdi
	movl	$19840, %esi                    # imm = 0x4D80
	callq	mk_write_string
.Ltmp364:
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	testl	%eax, %eax
.Ltmp365:
	.loc	0 352 5 is_stmt 0               # x264_src/output/matroska_ebml.c:352:5
	js	.LBB2_137
.Ltmp366:
# %bb.112:                              # %do.body88
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 353 5 is_stmt 1               # x264_src/output/matroska_ebml.c:353:5
	movq	%r12, %rdi
	movl	$22337, %esi                    # imm = 0x5741
	movq	32(%rsp), %rdx                  # 8-byte Reload
	callq	mk_write_string
.Ltmp367:
	testl	%eax, %eax
.Ltmp368:
	.loc	0 353 5 is_stmt 0               # x264_src/output/matroska_ebml.c:353:5
	js	.LBB2_137
.Ltmp369:
# %bb.113:                              # %do.body95
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 354 5 is_stmt 1               # x264_src/output/matroska_ebml.c:354:5
	movq	64(%r14), %rdx
	movq	%r12, %rdi
	movl	$2807729, %esi                  # imm = 0x2AD7B1
	callq	mk_write_uint
.Ltmp370:
	testl	%eax, %eax
.Ltmp371:
	.loc	0 354 5 is_stmt 0               # x264_src/output/matroska_ebml.c:354:5
	js	.LBB2_137
.Ltmp372:
# %bb.114:                              # %do.body103
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 355 5 is_stmt 1               # x264_src/output/matroska_ebml.c:355:5
	movq	%r12, %rdi
	callq	mk_write_float
.Ltmp373:
	testl	%eax, %eax
.Ltmp374:
	.loc	0 355 5 is_stmt 0               # x264_src/output/matroska_ebml.c:355:5
	js	.LBB2_137
.Ltmp375:
# %bb.115:                              # %do.end109
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 356 26 is_stmt 1              # x264_src/output/matroska_ebml.c:356:26
	movl	48(%r12), %eax
	.loc	0 356 32 is_stmt 0              # x264_src/output/matroska_ebml.c:356:32
	addl	$-4, %eax
	.loc	0 356 8                         # x264_src/output/matroska_ebml.c:356:8
	leaq	8(%r14), %rsi
	.loc	0 356 21                        # x264_src/output/matroska_ebml.c:356:21
	movl	%eax, 8(%r14)
.Ltmp376:
	.loc	0 357 5 is_stmt 1               # x264_src/output/matroska_ebml.c:357:5
	movq	%r12, %rdi
	callq	mk_close_context
.Ltmp377:
	testl	%eax, %eax
.Ltmp378:
	.loc	0 357 5 is_stmt 0               # x264_src/output/matroska_ebml.c:357:5
	js	.LBB2_137
.Ltmp379:
# %bb.116:                              # %do.end117
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	.loc	0 359 40 is_stmt 1              # x264_src/output/matroska_ebml.c:359:40
	movq	16(%r14), %rsi
	.loc	0 359 15 is_stmt 0              # x264_src/output/matroska_ebml.c:359:15
	movq	%r14, %rdi
	movl	$374648427, %edx                # imm = 0x1654AE6B
	callq	mk_create_context
.Ltmp380:
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 359 13                        # x264_src/output/matroska_ebml.c:359:13
	testq	%rax, %rax
.Ltmp381:
	.loc	0 359 9                         # x264_src/output/matroska_ebml.c:359:9
	je	.LBB2_137
.Ltmp382:
# %bb.117:                              # %if.end122
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %r12
.Ltmp383:
	.loc	0 361 16 is_stmt 1              # x264_src/output/matroska_ebml.c:361:16
	movq	%r14, %rdi
	movq	%rax, %rsi
	movl	$174, %edx
	callq	mk_create_context
.Ltmp384:
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rax
	.loc	0 361 14 is_stmt 0              # x264_src/output/matroska_ebml.c:361:14
	testq	%rax, %rax
.Ltmp385:
	.loc	0 361 9                         # x264_src/output/matroska_ebml.c:361:9
	je	.LBB2_137
.Ltmp386:
# %bb.118:                              # %do.body127
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %rbp
.Ltmp387:
	.loc	0 363 5 is_stmt 1               # x264_src/output/matroska_ebml.c:363:5
	movl	$1, %edx
	movq	%rax, %rdi
	movl	$215, %esi
	callq	mk_write_uint
.Ltmp388:
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	testl	%eax, %eax
.Ltmp389:
	.loc	0 363 5 is_stmt 0               # x264_src/output/matroska_ebml.c:363:5
	js	.LBB2_137
.Ltmp390:
# %bb.119:                              # %do.body134
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 364 5 is_stmt 1               # x264_src/output/matroska_ebml.c:364:5
	movl	$1, %edx
	movq	%rbp, %rdi
	movl	$29637, %esi                    # imm = 0x73C5
	callq	mk_write_uint
.Ltmp391:
	testl	%eax, %eax
.Ltmp392:
	.loc	0 364 5 is_stmt 0               # x264_src/output/matroska_ebml.c:364:5
	js	.LBB2_137
.Ltmp393:
# %bb.120:                              # %do.body141
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 365 5 is_stmt 1               # x264_src/output/matroska_ebml.c:365:5
	movl	$1, %edx
	movq	%rbp, %rdi
	movl	$131, %esi
	callq	mk_write_uint
.Ltmp394:
	testl	%eax, %eax
.Ltmp395:
	.loc	0 365 5 is_stmt 0               # x264_src/output/matroska_ebml.c:365:5
	js	.LBB2_137
.Ltmp396:
# %bb.121:                              # %do.body148
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 366 5 is_stmt 1               # x264_src/output/matroska_ebml.c:366:5
	movq	%rbp, %rdi
	movl	$156, %esi
	xorl	%edx, %edx
	callq	mk_write_uint
.Ltmp397:
	testl	%eax, %eax
.Ltmp398:
	.loc	0 366 5 is_stmt 0               # x264_src/output/matroska_ebml.c:366:5
	js	.LBB2_137
.Ltmp399:
# %bb.122:                              # %do.body155
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 367 5 is_stmt 1               # x264_src/output/matroska_ebml.c:367:5
	movq	%rbp, %rdi
	movl	$134, %esi
	movq	24(%rsp), %rdx                  # 8-byte Reload
	callq	mk_write_string
.Ltmp400:
	testl	%eax, %eax
.Ltmp401:
	.loc	0 367 5 is_stmt 0               # x264_src/output/matroska_ebml.c:367:5
	js	.LBB2_137
.Ltmp402:
# %bb.123:                              # %do.end161
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 368 9 is_stmt 1               # x264_src/output/matroska_ebml.c:368:9
	cmpl	$0, 4(%rsp)                     # 4-byte Folded Reload
.Ltmp403:
	.loc	0 368 9 is_stmt 0               # x264_src/output/matroska_ebml.c:368:9
	je	.LBB2_125
.Ltmp404:
# %bb.124:                              # %do.body164
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 369 9 is_stmt 1               # x264_src/output/matroska_ebml.c:369:9
	movq	%rbp, %rdi
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movl	4(%rsp), %edx                   # 4-byte Reload
	callq	mk_write_bin
.Ltmp405:
	testl	%eax, %eax
.Ltmp406:
	.loc	0 369 9 is_stmt 0               # x264_src/output/matroska_ebml.c:369:9
	js	.LBB2_137
.Ltmp407:
.LBB2_125:                              # %if.end171
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 370 9 is_stmt 1               # x264_src/output/matroska_ebml.c:370:9
	cmpq	$0, 8(%rsp)                     # 8-byte Folded Reload
.Ltmp408:
	.loc	0 370 9 is_stmt 0               # x264_src/output/matroska_ebml.c:370:9
	je	.LBB2_127
.Ltmp409:
# %bb.126:                              # %do.body174
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 371 9 is_stmt 1               # x264_src/output/matroska_ebml.c:371:9
	movq	%rbp, %rdi
	movl	$2352003, %esi                  # imm = 0x23E383
	movq	8(%rsp), %rdx                   # 8-byte Reload
	callq	mk_write_uint
.Ltmp410:
	testl	%eax, %eax
.Ltmp411:
	.loc	0 371 9 is_stmt 0               # x264_src/output/matroska_ebml.c:371:9
	js	.LBB2_137
.Ltmp412:
.LBB2_127:                              # %if.end181
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	.loc	0 373 15 is_stmt 1              # x264_src/output/matroska_ebml.c:373:15
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movl	$224, %edx
	callq	mk_create_context
.Ltmp413:
	#DEBUG_VALUE: mk_writeHeader:v <- $rax
	.loc	0 373 13 is_stmt 0              # x264_src/output/matroska_ebml.c:373:13
	testq	%rax, %rax
.Ltmp414:
	.loc	0 373 9                         # x264_src/output/matroska_ebml.c:373:9
	je	.LBB2_137
.Ltmp415:
# %bb.128:                              # %do.body186
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $rax
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%rax, %r15
.Ltmp416:
	.loc	0 375 5 is_stmt 1               # x264_src/output/matroska_ebml.c:375:5
	movl	104(%rsp), %edx
	movq	%rax, %rdi
	movl	$176, %esi
	callq	mk_write_uint
.Ltmp417:
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	testl	%eax, %eax
.Ltmp418:
	.loc	0 375 5 is_stmt 0               # x264_src/output/matroska_ebml.c:375:5
	js	.LBB2_137
.Ltmp419:
# %bb.129:                              # %do.body194
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 376 5 is_stmt 1               # x264_src/output/matroska_ebml.c:376:5
	movl	112(%rsp), %edx
	movq	%r15, %rdi
	movl	$186, %esi
	callq	mk_write_uint
.Ltmp420:
	testl	%eax, %eax
.Ltmp421:
	.loc	0 376 5 is_stmt 0               # x264_src/output/matroska_ebml.c:376:5
	js	.LBB2_137
.Ltmp422:
# %bb.130:                              # %do.body203
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 377 5 is_stmt 1               # x264_src/output/matroska_ebml.c:377:5
	movl	120(%rsp), %edx
	movq	%r15, %rdi
	movl	$21680, %esi                    # imm = 0x54B0
	callq	mk_write_uint
.Ltmp423:
	testl	%eax, %eax
.Ltmp424:
	.loc	0 377 5 is_stmt 0               # x264_src/output/matroska_ebml.c:377:5
	js	.LBB2_137
.Ltmp425:
# %bb.131:                              # %do.body212
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 378 5 is_stmt 1               # x264_src/output/matroska_ebml.c:378:5
	movl	128(%rsp), %edx
	movq	%r15, %rdi
	movl	$21690, %esi                    # imm = 0x54BA
	callq	mk_write_uint
.Ltmp426:
	testl	%eax, %eax
.Ltmp427:
	.loc	0 378 5 is_stmt 0               # x264_src/output/matroska_ebml.c:378:5
	js	.LBB2_137
.Ltmp428:
# %bb.132:                              # %do.body221
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 379 5 is_stmt 1               # x264_src/output/matroska_ebml.c:379:5
	movq	%r15, %rdi
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp429:
	testl	%eax, %eax
.Ltmp430:
	.loc	0 379 5 is_stmt 0               # x264_src/output/matroska_ebml.c:379:5
	js	.LBB2_137
.Ltmp431:
# %bb.133:                              # %do.body229
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 381 5 is_stmt 1               # x264_src/output/matroska_ebml.c:381:5
	movq	%rbp, %rdi
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp432:
	testl	%eax, %eax
.Ltmp433:
	.loc	0 381 5 is_stmt 0               # x264_src/output/matroska_ebml.c:381:5
	js	.LBB2_137
.Ltmp434:
# %bb.134:                              # %do.body237
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 383 5 is_stmt 1               # x264_src/output/matroska_ebml.c:383:5
	movq	%r12, %rdi
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp435:
	testl	%eax, %eax
.Ltmp436:
	.loc	0 383 5 is_stmt 0               # x264_src/output/matroska_ebml.c:383:5
	js	.LBB2_137
.Ltmp437:
# %bb.135:                              # %do.body245
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 385 5 is_stmt 1               # x264_src/output/matroska_ebml.c:385:5
	movq	16(%r14), %rdi
	callq	mk_flush_context_data
.Ltmp438:
	testl	%eax, %eax
	movl	$-1, %eax
.Ltmp439:
	.loc	0 385 5 is_stmt 0               # x264_src/output/matroska_ebml.c:385:5
	js	.LBB2_138
.Ltmp440:
# %bb.136:                              # %do.end253
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_writeHeader:c <- $r12
	#DEBUG_VALUE: mk_writeHeader:ti <- $rbp
	#DEBUG_VALUE: mk_writeHeader:v <- $r15
	.loc	0 387 21 is_stmt 1              # x264_src/output/matroska_ebml.c:387:21
	movb	$1, 96(%r14)
	xorl	%eax, %eax
	jmp	.LBB2_138
.Ltmp441:
.LBB2_137:
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_create_context:id <- 440786851
	.loc	0 0 21 is_stmt 0                # x264_src/output/matroska_ebml.c:0:21
	movl	$-1, %eax
.Ltmp442:
.LBB2_138:
	#DEBUG_VALUE: mk_writeHeader:w <- $r14
	#DEBUG_VALUE: mk_writeHeader:writing_app <- [DW_OP_plus_uconst 32] [$rsp+0]
	#DEBUG_VALUE: mk_writeHeader:codec_id <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_writeHeader:codec_private <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: mk_writeHeader:codec_private_size <- [DW_OP_LLVM_entry_value 1] $r8d
	#DEBUG_VALUE: mk_writeHeader:default_frame_duration <- [DW_OP_LLVM_entry_value 1] $r9
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp443:
	#DEBUG_VALUE: mk_writeHeader:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r13
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
	.loc	0 390 1 is_stmt 1               # x264_src/output/matroska_ebml.c:390:1
	retq
.Ltmp444:
.Lfunc_end2:
	.size	mk_writeHeader, .Lfunc_end2-mk_writeHeader
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_uint
	.type	mk_write_uint,@function
mk_write_uint:                          # @mk_write_uint
.Lfunc_begin3:
	.loc	0 249 0                         # x264_src/output/matroska_ebml.c:249:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_uint:c <- $rdi
	#DEBUG_VALUE: mk_write_uint:id <- $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rdi, %rbx
.Ltmp445:
	.loc	0 250 29 prologue_end           # x264_src/output/matroska_ebml.c:250:29
	movq	%rdx, %rax
	bswapq	%rax
	movq	%rax, (%rsp)
.Ltmp446:
	#DEBUG_VALUE: mk_write_uint:i <- 0
	.loc	0 253 5                         # x264_src/output/matroska_ebml.c:253:5
	callq	mk_write_id
.Ltmp447:
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	.loc	0 0 5 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:5
	movl	$-1, %ebp
	.loc	0 253 5                         # x264_src/output/matroska_ebml.c:253:5
	testl	%eax, %eax
.Ltmp448:
	.loc	0 253 5                         # x264_src/output/matroska_ebml.c:253:5
	js	.LBB3_16
.Ltmp449:
# %bb.1:                                # %land.rhs.preheader
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 0
	#DEBUG_VALUE: mk_write_uint:i <- 0
	.loc	0 0 5                           # x264_src/output/matroska_ebml.c:0:5
	xorl	%r15d, %r15d
	.loc	0 254 21 is_stmt 1              # x264_src/output/matroska_ebml.c:254:21
	movq	%r14, %rax
	shrq	$56, %rax
	.loc	0 254 5 is_stmt 0               # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp450:
# %bb.2:                                # %while.body
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 0
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%r14, %rax
	shrq	$48, %rax
.Ltmp451:
	#DEBUG_VALUE: mk_write_uint:i <- 1
	movl	$1, %r15d
	.loc	0 254 21                        # x264_src/output/matroska_ebml.c:254:21
	testb	%al, %al
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp452:
# %bb.3:                                # %while.body.1
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 1
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%r14, %rax
	shrq	$40, %rax
.Ltmp453:
	#DEBUG_VALUE: mk_write_uint:i <- 2
	movl	$2, %r15d
	.loc	0 254 21                        # x264_src/output/matroska_ebml.c:254:21
	testb	%al, %al
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp454:
# %bb.4:                                # %while.body.2
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 2
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movq	%r14, %rax
	shrq	$32, %rax
.Ltmp455:
	#DEBUG_VALUE: mk_write_uint:i <- 3
	movl	$3, %r15d
	.loc	0 254 21                        # x264_src/output/matroska_ebml.c:254:21
	testb	%al, %al
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp456:
# %bb.5:                                # %while.body.3
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 3
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movl	%r14d, %eax
	shrl	$24, %eax
.Ltmp457:
	#DEBUG_VALUE: mk_write_uint:i <- 4
	movl	$4, %r15d
	.loc	0 254 21                        # x264_src/output/matroska_ebml.c:254:21
	testb	%al, %al
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp458:
# %bb.6:                                # %while.body.4
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 4
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movl	%r14d, %eax
	shrl	$16, %eax
.Ltmp459:
	#DEBUG_VALUE: mk_write_uint:i <- 5
	movl	$5, %r15d
	.loc	0 254 21                        # x264_src/output/matroska_ebml.c:254:21
	testb	%al, %al
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	jne	.LBB3_8
.Ltmp460:
# %bb.7:                                # %while.body.5
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- $r14
	#DEBUG_VALUE: mk_write_uint:i <- 5
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	shrl	$8, %r14d
.Ltmp461:
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_write_uint:i <- 6
	xorl	%r15d, %r15d
	.loc	0 254 5                         # x264_src/output/matroska_ebml.c:254:5
	cmpb	$1, %r14b
	adcl	$6, %r15d
.Ltmp462:
.LBB3_8:                                # %do.body23
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 0 5                           # x264_src/output/matroska_ebml.c:0:5
	movl	$8, %r14d
.Ltmp463:
	.loc	0 256 5 is_stmt 1               # x264_src/output/matroska_ebml.c:256:5
	subl	%r15d, %r14d
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	mk_write_size
.Ltmp464:
	testl	%eax, %eax
.Ltmp465:
	.loc	0 256 5 is_stmt 0               # x264_src/output/matroska_ebml.c:256:5
	js	.LBB3_16
.Ltmp466:
# %bb.9:                                # %do.body31
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp467:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp468:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r14), %r12d
.Ltmp469:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp470:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB3_10
.Ltmp471:
# %bb.11:                               # %if.then.i
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp472:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp473:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB3_12:                               # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp474:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp475:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB3_12
.Ltmp476:
# %bb.13:                               # %while.end.i
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp477:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp478:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB3_16
.Ltmp479:
# %bb.14:                               # %if.end.i
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%rbx)
.Ltmp480:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB3_15
.Ltmp481:
.LBB3_10:                               # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp482:
.LBB3_15:                               # %mk_append_context_data.exit
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r14d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 257 5 is_stmt 1               # x264_src/output/matroska_ebml.c:257:5
	movl	%r15d, %edx
	leaq	(%rsp,%rdx), %rsi
.Ltmp483:
	#DEBUG_VALUE: mk_append_context_data:data <- $rsi
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 46 is_stmt 0              # x264_src/output/matroska_ebml.c:110:46
	movl	%r14d, %edx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	callq	memcpy@PLT
.Ltmp484:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%rbx)
	xorl	%ebp, %ebp
.Ltmp485:
.LBB3_16:                               # %cleanup
	#DEBUG_VALUE: mk_write_uint:c <- $rbx
	#DEBUG_VALUE: mk_write_uint:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_uint:ui <- [DW_OP_LLVM_entry_value 1] $rdx
	.loc	0 259 1                         # x264_src/output/matroska_ebml.c:259:1
	movl	%ebp, %eax
	.loc	0 259 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:259:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp486:
	#DEBUG_VALUE: mk_write_uint:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp487:
.Lfunc_end3:
	.size	mk_write_uint, .Lfunc_end3-mk_write_uint
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_string
	.type	mk_write_string,@function
mk_write_string:                        # @mk_write_string
.Lfunc_begin4:
	.loc	0 231 0 is_stmt 1               # x264_src/output/matroska_ebml.c:231:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_string:c <- $rdi
	#DEBUG_VALUE: mk_write_string:id <- $esi
	#DEBUG_VALUE: mk_write_string:str <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp488:
	.loc	0 232 18 prologue_end           # x264_src/output/matroska_ebml.c:232:18
	movq	%rdx, %rdi
.Ltmp489:
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	callq	strlen@PLT
.Ltmp490:
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:id <- $ebp
	movq	%rax, %r15
.Ltmp491:
	#DEBUG_VALUE: mk_write_string:len <- $r15
	.loc	0 234 5                         # x264_src/output/matroska_ebml.c:234:5
	movq	%rbx, %rdi
	movl	%ebp, %esi
	callq	mk_write_id
.Ltmp492:
	.loc	0 0 5 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:5
	movl	$-1, %ebp
.Ltmp493:
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 234 5                         # x264_src/output/matroska_ebml.c:234:5
	testl	%eax, %eax
.Ltmp494:
	.loc	0 234 5                         # x264_src/output/matroska_ebml.c:234:5
	js	.LBB4_9
.Ltmp495:
# %bb.1:                                # %do.body2
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	.loc	0 235 5 is_stmt 1               # x264_src/output/matroska_ebml.c:235:5
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	mk_write_size
.Ltmp496:
	testl	%eax, %eax
.Ltmp497:
	.loc	0 235 5 is_stmt 0               # x264_src/output/matroska_ebml.c:235:5
	js	.LBB4_9
.Ltmp498:
# %bb.2:                                # %do.body10
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp499:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp500:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r15), %r12d
.Ltmp501:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp502:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB4_3
.Ltmp503:
# %bb.4:                                # %if.then.i
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp504:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp505:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB4_5:                                # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp506:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp507:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB4_5
.Ltmp508:
# %bb.6:                                # %while.end.i
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp509:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp510:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB4_9
.Ltmp511:
# %bb.7:                                # %if.end.i
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%rbx)
.Ltmp512:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB4_8
.Ltmp513:
.LBB4_3:                                # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp514:
.LBB4_8:                                # %mk_append_context_data.exit
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 46                        # x264_src/output/matroska_ebml.c:110:46
	movl	%r15d, %edx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r14, %rsi
	callq	memcpy@PLT
.Ltmp515:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%rbx)
	xorl	%ebp, %ebp
.Ltmp516:
.LBB4_9:                                # %cleanup
	#DEBUG_VALUE: mk_write_string:c <- $rbx
	#DEBUG_VALUE: mk_write_string:id <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_string:str <- $r14
	#DEBUG_VALUE: mk_write_string:len <- $r15
	.loc	0 238 1                         # x264_src/output/matroska_ebml.c:238:1
	movl	%ebp, %eax
	.loc	0 238 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:238:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp517:
	#DEBUG_VALUE: mk_write_string:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp518:
	#DEBUG_VALUE: mk_write_string:str <- [DW_OP_LLVM_entry_value 1] $rdx
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp519:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp520:
.Lfunc_end4:
	.size	mk_write_string, .Lfunc_end4-mk_write_string
	.cfi_endproc
	.file	9 "/usr/include" "string.h" md5 0xf443da8025a0b7c1498fb6c554ec788d
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_close_context
	.type	mk_close_context,@function
mk_close_context:                       # @mk_close_context
.Lfunc_begin5:
	.loc	0 188 0 is_stmt 1               # x264_src/output/matroska_ebml.c:188:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_close_context:c <- $rdi
	#DEBUG_VALUE: mk_close_context:off <- $rsi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, %rbx
.Ltmp521:
	.loc	0 189 12 prologue_end           # x264_src/output/matroska_ebml.c:189:12
	movl	32(%rdi), %esi
.Ltmp522:
	#DEBUG_VALUE: mk_close_context:off <- $r15
	.loc	0 189 9 is_stmt 0               # x264_src/output/matroska_ebml.c:189:9
	testl	%esi, %esi
.Ltmp523:
	.loc	0 189 9                         # x264_src/output/matroska_ebml.c:189:9
	je	.LBB5_3
.Ltmp524:
# %bb.1:                                # %do.body
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	.loc	0 191 9 is_stmt 1               # x264_src/output/matroska_ebml.c:191:9
	movq	16(%rbx), %rdi
	callq	mk_write_id
.Ltmp525:
	.loc	0 0 9 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:9
	movl	$-1, %r14d
	.loc	0 191 9                         # x264_src/output/matroska_ebml.c:191:9
	testl	%eax, %eax
.Ltmp526:
	.loc	0 191 9                         # x264_src/output/matroska_ebml.c:191:9
	js	.LBB5_21
.Ltmp527:
# %bb.2:                                # %do.body3
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	.loc	0 192 9 is_stmt 1               # x264_src/output/matroska_ebml.c:192:9
	movq	16(%rbx), %rdi
	movl	48(%rbx), %esi
	callq	mk_write_size
.Ltmp528:
	testl	%eax, %eax
.Ltmp529:
	.loc	0 192 9 is_stmt 0               # x264_src/output/matroska_ebml.c:192:9
	js	.LBB5_21
.Ltmp530:
.LBB5_3:                                # %if.end10
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	.loc	0 195 12 is_stmt 1              # x264_src/output/matroska_ebml.c:195:12
	movq	16(%rbx), %rax
	.loc	0 195 9 is_stmt 0               # x264_src/output/matroska_ebml.c:195:9
	testq	%rax, %rax
	sete	%cl
	testq	%r15, %r15
	sete	%dl
	.loc	0 195 19                        # x264_src/output/matroska_ebml.c:195:19
	orb	%cl, %dl
	jne	.LBB5_5
.Ltmp531:
# %bb.4:                                # %if.then14
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	.loc	0 196 28 is_stmt 1              # x264_src/output/matroska_ebml.c:196:28
	movl	48(%rax), %eax
	.loc	0 196 14 is_stmt 0              # x264_src/output/matroska_ebml.c:196:14
	addl	%eax, (%r15)
.Ltmp532:
.LBB5_5:                                # %do.body18
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 174 13 is_stmt 1              # x264_src/output/matroska_ebml.c:174:13
	movl	48(%rbx), %r14d
	testq	%r14, %r14
.Ltmp533:
	.loc	0 174 9 is_stmt 0               # x264_src/output/matroska_ebml.c:174:9
	je	.LBB5_17
.Ltmp534:
# %bb.6:                                # %if.end.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- $r15
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 177 12 is_stmt 1              # x264_src/output/matroska_ebml.c:177:12
	movq	16(%rbx), %r12
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	40(%rbx), %r15
.Ltmp535:
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	testq	%r12, %r12
.Ltmp536:
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	je	.LBB5_15
.Ltmp537:
# %bb.7:                                # %do.body.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %ecx
.Ltmp538:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp539:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r14), %ebp
.Ltmp540:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp541:
	#DEBUG_VALUE: mk_append_context_data:size <- undef
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB5_8
.Ltmp542:
# %bb.9:                                # %if.then.i.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp543:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp544:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB5_10:                               # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp545:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp546:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB5_10
.Ltmp547:
# %bb.11:                               # %while.end.i.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp548:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp549:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB5_12
.Ltmp550:
# %bb.13:                               # %if.end.i.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r12)
.Ltmp551:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB5_14
.Ltmp552:
.LBB5_15:                               # %if.else.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 179 47                        # x264_src/output/matroska_ebml.c:179:47
	movq	24(%rbx), %rax
	.loc	0 179 54 is_stmt 0              # x264_src/output/matroska_ebml.c:179:54
	movq	(%rax), %rcx
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	movl	$1, %edx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	fwrite@PLT
.Ltmp553:
	.loc	0 0 14                          # x264_src/output/matroska_ebml.c:0:14
	movl	$-1, %r14d
	.loc	0 179 59                        # x264_src/output/matroska_ebml.c:179:59
	cmpq	$1, %rax
.Ltmp554:
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	je	.LBB5_16
	jmp	.LBB5_21
.Ltmp555:
.LBB5_8:                                # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 1              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp556:
.LBB5_14:                               # %mk_append_context_data.exit.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.Ltmp557:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp558:
.LBB5_16:                               # %if.end14.i
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 182 14                        # x264_src/output/matroska_ebml.c:182:14
	movl	$0, 48(%rbx)
.Ltmp559:
.LBB5_17:                               # %do.end23
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 200 12                        # x264_src/output/matroska_ebml.c:200:12
	movq	(%rbx), %rcx
.Ltmp560:
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	8(%rbx), %rax
	xorl	%r14d, %r14d
.Ltmp561:
	.loc	0 200 9                         # x264_src/output/matroska_ebml.c:200:9
	testq	%rcx, %rcx
.Ltmp562:
	.loc	0 200 9                         # x264_src/output/matroska_ebml.c:200:9
	je	.LBB5_18
.Ltmp563:
# %bb.19:                               # %if.then25
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 201 23 is_stmt 1              # x264_src/output/matroska_ebml.c:201:23
	movq	%rax, 8(%rcx)
.Ltmp564:
	.loc	0 202 21                        # x264_src/output/matroska_ebml.c:202:21
	movq	(%rbx), %rcx
	jmp	.LBB5_20
.Ltmp565:
.LBB5_18:
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 0 21 is_stmt 0                # x264_src/output/matroska_ebml.c:0:21
	xorl	%ecx, %ecx
.Ltmp566:
.LBB5_20:                               # %if.end28
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 202 16                        # x264_src/output/matroska_ebml.c:202:16
	movq	%rcx, (%rax)
	.loc	0 203 18 is_stmt 1              # x264_src/output/matroska_ebml.c:203:18
	movq	24(%rbx), %rax
	.loc	0 203 25 is_stmt 0              # x264_src/output/matroska_ebml.c:203:25
	movq	40(%rax), %rcx
	.loc	0 203 13                        # x264_src/output/matroska_ebml.c:203:13
	movq	%rcx, (%rbx)
	.loc	0 204 24 is_stmt 1              # x264_src/output/matroska_ebml.c:204:24
	movq	%rbx, 40(%rax)
.Ltmp567:
.LBB5_21:                               # %return
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 207 1                         # x264_src/output/matroska_ebml.c:207:1
	movl	%r14d, %eax
	.loc	0 207 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:207:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp568:
	#DEBUG_VALUE: mk_close_context:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp569:
.LBB5_12:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: mk_close_context:c <- $rbx
	#DEBUG_VALUE: mk_close_context:off <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 0 1                           # x264_src/output/matroska_ebml.c:0:1
	movl	$-1, %r14d
.Ltmp570:
	.loc	0 103 13 is_stmt 1              # x264_src/output/matroska_ebml.c:103:13
	jmp	.LBB5_21
.Ltmp571:
.Lfunc_end5:
	.size	mk_close_context, .Lfunc_end5-mk_close_context
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_flush_context_id
	.type	mk_flush_context_id,@function
mk_flush_context_id:                    # @mk_flush_context_id
.Lfunc_begin6:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_flush_context_id:c <- $rdi
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	.loc	0 161 13 prologue_end           # x264_src/output/matroska_ebml.c:161:13
	movl	32(%rdi), %esi
	xorl	%ecx, %ecx
	.loc	0 161 10 is_stmt 0              # x264_src/output/matroska_ebml.c:161:10
	testl	%esi, %esi
.Ltmp572:
	.loc	0 161 9                         # x264_src/output/matroska_ebml.c:161:9
	je	.LBB6_10
.Ltmp573:
# %bb.1:                                # %do.body
	#DEBUG_VALUE: mk_flush_context_id:c <- $rdi
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
.Ltmp574:
	.loc	0 164 5 is_stmt 1               # x264_src/output/matroska_ebml.c:164:5
	movq	16(%rdi), %rdi
.Ltmp575:
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	callq	mk_write_id
.Ltmp576:
	.loc	0 0 5 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:5
	movl	$-1, %ecx
	.loc	0 164 5                         # x264_src/output/matroska_ebml.c:164:5
	testl	%eax, %eax
.Ltmp577:
	.loc	0 164 5                         # x264_src/output/matroska_ebml.c:164:5
	js	.LBB6_9
.Ltmp578:
# %bb.2:                                # %do.body4
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	.loc	0 165 5 is_stmt 1               # x264_src/output/matroska_ebml.c:165:5
	movq	16(%rbx), %r14
.Ltmp579:
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r14), %ecx
.Ltmp580:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r14), %eax
.Ltmp581:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %ebp
.Ltmp582:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp583:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB6_3
.Ltmp584:
# %bb.4:                                # %if.then.i
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp585:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp586:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB6_5:                                # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp587:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp588:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB6_5
.Ltmp589:
# %bb.6:                                # %while.end.i
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r14), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp590:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
	movl	$-1, %ecx
.Ltmp591:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB6_9
.Ltmp592:
# %bb.7:                                # %if.end.i
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r14)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%r14)
.Ltmp593:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r14), %ecx
	jmp	.LBB6_8
.Ltmp594:
.LBB6_3:                                # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r14), %rax
.Ltmp595:
.LBB6_8:                                # %do.end11
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-1, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r14)
.Ltmp596:
	.loc	0 167 11                        # x264_src/output/matroska_ebml.c:167:11
	movl	$0, 32(%rbx)
	xorl	%ecx, %ecx
.Ltmp597:
.LBB6_9:
	#DEBUG_VALUE: mk_flush_context_id:c <- $rbx
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	.loc	0 0 11 is_stmt 0                # x264_src/output/matroska_ebml.c:0:11
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp598:
	#DEBUG_VALUE: mk_flush_context_id:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
.Ltmp599:
.LBB6_10:                               # %cleanup
	#DEBUG_VALUE: mk_flush_context_id:c <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_id:ff <- -1
	.loc	0 170 1 is_stmt 1               # x264_src/output/matroska_ebml.c:170:1
	movl	%ecx, %eax
	retq
.Ltmp600:
.Lfunc_end6:
	.size	mk_flush_context_id, .Lfunc_end6-mk_flush_context_id
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_float
	.type	mk_write_float,@function
mk_write_float:                         # @mk_write_float
.Lfunc_begin7:
	.loc	0 280 0                         # x264_src/output/matroska_ebml.c:280:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_float:c <- $rdi
	#DEBUG_VALUE: mk_write_id:c <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
.Ltmp601:
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	.loc	0 93 22 prologue_end            # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rdi), %r14d
.Ltmp602:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rdi), %eax
.Ltmp603:
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	2(%r14), %r15d
.Ltmp604:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp605:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB7_5
.Ltmp606:
# %bb.1:                                # %if.then.i68.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp607:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp608:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB7_2:                                # %while.cond.i72.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp609:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp610:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB7_2
.Ltmp611:
# %bb.3:                                # %while.end.i76.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp612:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp613:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB7_21
.Ltmp614:
# %bb.4:                                # %if.end.i81.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp615:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB7_6
.Ltmp616:
.LBB7_5:                                # %entry.if.end11_crit_edge.i61.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
	movl	%r14d, %ecx
.Ltmp617:
.LBB7_6:                                # %do.body1
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-30396, (%rax,%rcx)            # imm = 0x8944
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%rbx)
.Ltmp618:
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	3(%r14), %ebp
.Ltmp619:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp620:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB7_11
.Ltmp621:
# %bb.7:                                # %if.then.i.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp622:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp623:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB7_8:                                # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp624:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp625:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB7_8
.Ltmp626:
# %bb.9:                                # %while.end.i.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp627:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp628:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB7_21
.Ltmp629:
# %bb.10:                               # %if.end.i.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%rbx)
.Ltmp630:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %r15d
	jmp	.LBB7_12
.Ltmp631:
.LBB7_11:                               # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp632:
.LBB7_12:                               # %do.body7
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- 4
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -124
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%r15d, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-124, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%rbx)
.Ltmp633:
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	addl	$7, %r14d
.Ltmp634:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
	.loc	0 95 12 is_stmt 0               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r14d
.Ltmp635:
	.loc	0 95 9                          # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB7_17
.Ltmp636:
# %bb.13:                               # %if.then.i.i26
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp637:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp638:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB7_14:                               # %while.cond.i.i30
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp639:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp640:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %r14d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB7_14
.Ltmp641:
# %bb.15:                               # %while.end.i.i34
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp642:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp643:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB7_21
.Ltmp644:
# %bb.16:                               # %if.end.i.i39
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%rbx)
.Ltmp645:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ebp
	jmp	.LBB7_18
.Ltmp646:
.LBB7_21:
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_id:id <- 17545
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 68
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -119
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 0 33 is_stmt 0                # x264_src/output/matroska_ebml.c:0:33
	movl	$-1, %eax
	jmp	.LBB7_22
.Ltmp647:
.LBB7_17:                               # %entry.if.end11_crit_edge.i.i20
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp648:
.LBB7_18:                               # %mk_write_float_raw.exit
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c <- $rbx
	#DEBUG_VALUE: mk_write_float_raw:f <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:u <- 0.000000e+00
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ebp, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movl	$0, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r14d, 48(%rbx)
	xorl	%eax, %eax
.Ltmp649:
.LBB7_22:                               # %return
	#DEBUG_VALUE: mk_write_float:c <- $rbx
	#DEBUG_VALUE: mk_write_float:id <- 17545
	#DEBUG_VALUE: mk_write_float:f <- 0.000000e+00
	.loc	0 285 1 epilogue_begin          # x264_src/output/matroska_ebml.c:285:1
	popq	%rbx
.Ltmp650:
	#DEBUG_VALUE: mk_write_float:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp651:
.Lfunc_end7:
	.size	mk_write_float, .Lfunc_end7-mk_write_float
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_bin
	.type	mk_write_bin,@function
mk_write_bin:                           # @mk_write_bin
.Lfunc_begin8:
	.loc	0 241 0                         # x264_src/output/matroska_ebml.c:241:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_bin:c <- $rdi
	#DEBUG_VALUE: mk_write_bin:data <- $rsi
	#DEBUG_VALUE: mk_write_bin:size <- $edx
	#DEBUG_VALUE: mk_write_id:c <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %r15d
	movq	%rsi, %r14
	movq	%rdi, %rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
.Ltmp652:
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	.loc	0 93 22 prologue_end            # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rdi), %ecx
.Ltmp653:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rdi), %eax
.Ltmp654:
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	2(%rcx), %ebp
.Ltmp655:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp656:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB8_1
.Ltmp657:
# %bb.2:                                # %if.then.i68.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp658:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp659:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB8_3:                                # %while.cond.i72.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp660:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp661:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB8_3
.Ltmp662:
# %bb.4:                                # %while.end.i76.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp663:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp664:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB8_5
.Ltmp665:
# %bb.6:                                # %if.end.i81.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp666:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB8_7
.Ltmp667:
.LBB8_1:                                # %entry.if.end11_crit_edge.i61.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp668:
.LBB8_7:                                # %do.body1
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movw	$-23965, (%rax,%rcx)            # imm = 0xA263
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%rbx)
.Ltmp669:
	.loc	0 243 5                         # x264_src/output/matroska_ebml.c:243:5
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	mk_write_size
.Ltmp670:
	.loc	0 0 5 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:5
	movl	$-1, %ecx
	.loc	0 243 5                         # x264_src/output/matroska_ebml.c:243:5
	testl	%eax, %eax
.Ltmp671:
	.loc	0 243 5                         # x264_src/output/matroska_ebml.c:243:5
	js	.LBB8_15
.Ltmp672:
# %bb.8:                                # %do.body7
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp673:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp674:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r15), %ebp
.Ltmp675:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp676:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB8_9
.Ltmp677:
# %bb.10:                               # %if.then.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp678:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp679:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB8_11:                               # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp680:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp681:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB8_11
.Ltmp682:
# %bb.12:                               # %while.end.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp683:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
	movl	$-1, %ecx
.Ltmp684:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB8_15
.Ltmp685:
# %bb.13:                               # %if.end.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp686:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB8_14
.Ltmp687:
.LBB8_9:                                # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp688:
.LBB8_14:                               # %mk_append_context_data.exit
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 46                        # x264_src/output/matroska_ebml.c:110:46
	movl	%r15d, %edx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r14, %rsi
	callq	memcpy@PLT
.Ltmp689:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%rbx)
	xorl	%ecx, %ecx
	jmp	.LBB8_15
.Ltmp690:
.LBB8_5:
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	#DEBUG_VALUE: mk_write_id:id <- 25506
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 99
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -94
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 0 14 is_stmt 0                # x264_src/output/matroska_ebml.c:0:14
	movl	$-1, %ecx
.Ltmp691:
.LBB8_15:                               # %return
	#DEBUG_VALUE: mk_write_bin:c <- $rbx
	#DEBUG_VALUE: mk_write_bin:data <- $r14
	#DEBUG_VALUE: mk_write_bin:size <- $r15d
	#DEBUG_VALUE: mk_write_bin:id <- 25506
	.loc	0 246 1 is_stmt 1               # x264_src/output/matroska_ebml.c:246:1
	movl	%ecx, %eax
	.loc	0 246 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:246:1
	popq	%rbx
.Ltmp692:
	#DEBUG_VALUE: mk_write_bin:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp693:
	#DEBUG_VALUE: mk_write_bin:data <- [DW_OP_LLVM_entry_value 1] $rsi
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp694:
	#DEBUG_VALUE: mk_write_bin:size <- [DW_OP_LLVM_entry_value 1] $edx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp695:
.Lfunc_end8:
	.size	mk_write_bin, .Lfunc_end8-mk_write_bin
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_flush_context_data
	.type	mk_flush_context_data,@function
mk_flush_context_data:                  # @mk_flush_context_data
.Lfunc_begin9:
	.loc	0 173 0 is_stmt 1               # x264_src/output/matroska_ebml.c:173:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_flush_context_data:c <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	0 174 13 prologue_end           # x264_src/output/matroska_ebml.c:174:13
	movl	48(%rdi), %r14d
	xorl	%eax, %eax
	testq	%r14, %r14
.Ltmp696:
	.loc	0 174 9 is_stmt 0               # x264_src/output/matroska_ebml.c:174:9
	je	.LBB9_12
.Ltmp697:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: mk_flush_context_data:c <- $rdi
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movq	%rdi, %rbx
.Ltmp698:
	.loc	0 177 12 is_stmt 1              # x264_src/output/matroska_ebml.c:177:12
	movq	16(%rdi), %r12
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	40(%rdi), %r15
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	testq	%r12, %r12
.Ltmp699:
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	je	.LBB9_10
.Ltmp700:
# %bb.2:                                # %do.body
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %ecx
.Ltmp701:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp702:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r14), %ebp
.Ltmp703:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp704:
	#DEBUG_VALUE: mk_append_context_data:size <- undef
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB9_3
.Ltmp705:
# %bb.4:                                # %if.then.i
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp706:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp707:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB9_5:                                # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp708:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp709:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB9_5
.Ltmp710:
# %bb.6:                                # %while.end.i
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp711:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp712:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB9_7
.Ltmp713:
# %bb.8:                                # %if.end.i
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r12)
.Ltmp714:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB9_9
.Ltmp715:
.LBB9_10:                               # %if.else
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 179 47                        # x264_src/output/matroska_ebml.c:179:47
	movq	24(%rbx), %rax
	.loc	0 179 54 is_stmt 0              # x264_src/output/matroska_ebml.c:179:54
	movq	(%rax), %rcx
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	movl	$1, %edx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	fwrite@PLT
.Ltmp716:
	movq	%rax, %rcx
	movl	$-1, %eax
	.loc	0 179 59                        # x264_src/output/matroska_ebml.c:179:59
	cmpq	$1, %rcx
.Ltmp717:
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	je	.LBB9_11
	jmp	.LBB9_12
.Ltmp718:
.LBB9_3:                                # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 1              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp719:
.LBB9_9:                                # %mk_append_context_data.exit
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.Ltmp720:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp721:
.LBB9_11:                               # %if.end14
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	.loc	0 182 14                        # x264_src/output/matroska_ebml.c:182:14
	movl	$0, 48(%rbx)
	xorl	%eax, %eax
.Ltmp722:
.LBB9_12:                               # %return
	#DEBUG_VALUE: mk_flush_context_data:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 185 1 epilogue_begin          # x264_src/output/matroska_ebml.c:185:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp723:
.LBB9_7:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: mk_flush_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 0 1 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:1
	movl	$-1, %eax
.Ltmp724:
	.loc	0 103 13 is_stmt 1              # x264_src/output/matroska_ebml.c:103:13
	jmp	.LBB9_12
.Ltmp725:
.Lfunc_end9:
	.size	mk_flush_context_data, .Lfunc_end9-mk_flush_context_data
	.cfi_endproc
                                        # -- End function
	.globl	mk_start_frame                  # -- Begin function mk_start_frame
	.p2align	4, 0x90
	.type	mk_start_frame,@function
mk_start_frame:                         # @mk_start_frame
.Lfunc_begin10:
	.loc	0 452 0                         # x264_src/output/matroska_ebml.c:452:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_start_frame:w <- $rdi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp726:
	.loc	0 453 9 prologue_end            # x264_src/output/matroska_ebml.c:453:9
	callq	mk_flush_frame
.Ltmp727:
	#DEBUG_VALUE: mk_start_frame:w <- $rbx
	.loc	0 453 29 is_stmt 0              # x264_src/output/matroska_ebml.c:453:29
	testl	%eax, %eax
.Ltmp728:
	.loc	0 453 9                         # x264_src/output/matroska_ebml.c:453:9
	js	.LBB10_1
.Ltmp729:
# %bb.2:                                # %if.end
	#DEBUG_VALUE: mk_start_frame:w <- $rbx
	.loc	0 456 18 is_stmt 1              # x264_src/output/matroska_ebml.c:456:18
	movw	$1, 97(%rbx)
	.loc	0 458 18                        # x264_src/output/matroska_ebml.c:458:18
	movb	$0, 99(%rbx)
	xorl	%eax, %eax
	.loc	0 461 1 epilogue_begin          # x264_src/output/matroska_ebml.c:461:1
	popq	%rbx
.Ltmp730:
	#DEBUG_VALUE: mk_start_frame:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 8
	retq
.Ltmp731:
.LBB10_1:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: mk_start_frame:w <- $rbx
	.loc	0 0 1 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:1
	movl	$-1, %eax
	.loc	0 461 1 epilogue_begin          # x264_src/output/matroska_ebml.c:461:1
	popq	%rbx
.Ltmp732:
	#DEBUG_VALUE: mk_start_frame:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 8
	retq
.Ltmp733:
.Lfunc_end10:
	.size	mk_start_frame, .Lfunc_end10-mk_start_frame
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_flush_frame
	.type	mk_flush_frame,@function
mk_flush_frame:                         # @mk_flush_frame
.Lfunc_begin11:
	.loc	0 403 0 is_stmt 1               # x264_src/output/matroska_ebml.c:403:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_flush_frame:w <- $rdi
	xorl	%eax, %eax
.Ltmp734:
	.loc	0 408 10 prologue_end           # x264_src/output/matroska_ebml.c:408:10
	cmpb	$0, 97(%rdi)
.Ltmp735:
	.loc	0 408 9 is_stmt 0               # x264_src/output/matroska_ebml.c:408:9
	je	.LBB11_58
.Ltmp736:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: mk_flush_frame:w <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	.loc	0 411 28 is_stmt 1              # x264_src/output/matroska_ebml.c:411:28
	movq	64(%rdi), %rcx
	.loc	0 411 16 is_stmt 0              # x264_src/output/matroska_ebml.c:411:16
	movq	80(%rdi), %rax
	.loc	0 411 24                        # x264_src/output/matroska_ebml.c:411:24
	movq	%rax, %rdx
	orq	%rcx, %rdx
	shrq	$32, %rdx
	je	.LBB11_3
.Ltmp737:
# %bb.2:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	cqto
	idivq	%rcx
	movq	%rax, %r14
	.loc	0 411 38                        # x264_src/output/matroska_ebml.c:411:38
	subq	72(%rbx), %r14
.Ltmp738:
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	.loc	0 412 25 is_stmt 1              # x264_src/output/matroska_ebml.c:412:25
	movswq	%r14w, %rax
	cmpq	%r14, %rax
	jne	.LBB11_4
	jmp	.LBB11_5
.Ltmp739:
.LBB11_3:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 411 24                        # x264_src/output/matroska_ebml.c:411:24
	xorl	%edx, %edx
	divl	%ecx
	movl	%eax, %r14d
	.loc	0 411 38 is_stmt 0              # x264_src/output/matroska_ebml.c:411:38
	subq	72(%rbx), %r14
.Ltmp740:
	#DEBUG_VALUE: mk_flush_frame:delta <- undef
	.loc	0 412 25 is_stmt 1              # x264_src/output/matroska_ebml.c:412:25
	movswq	%r14w, %rax
	cmpq	%r14, %rax
	je	.LBB11_5
.Ltmp741:
.LBB11_4:                               # %do.body
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 413 9                         # x264_src/output/matroska_ebml.c:413:9
	movq	%rbx, %rdi
	callq	mk_close_cluster
.Ltmp742:
	testl	%eax, %eax
.Ltmp743:
	.loc	0 413 9 is_stmt 0               # x264_src/output/matroska_ebml.c:413:9
	js	.LBB11_56
.Ltmp744:
.LBB11_5:                               # %if.end6
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 415 10 is_stmt 1              # x264_src/output/matroska_ebml.c:415:10
	cmpq	$0, 24(%rbx)
.Ltmp745:
	.loc	0 415 9 is_stmt 0               # x264_src/output/matroska_ebml.c:415:9
	je	.LBB11_8
.Ltmp746:
# %bb.6:                                # %if.end28
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	.loc	0 427 16 is_stmt 1              # x264_src/output/matroska_ebml.c:427:16
	movq	32(%rbx), %rax
	.loc	0 427 13 is_stmt 0              # x264_src/output/matroska_ebml.c:427:13
	testq	%rax, %rax
	je	.LBB11_20
.Ltmp747:
.LBB11_7:                               # %cond.true
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	.loc	0 427 34                        # x264_src/output/matroska_ebml.c:427:34
	movl	48(%rax), %ebp
.Ltmp748:
	.loc	0 430 5 is_stmt 1               # x264_src/output/matroska_ebml.c:430:5
	addl	$4, %ebp
	jmp	.LBB11_21
.Ltmp749:
.LBB11_8:                               # %if.then8
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 417 49                        # x264_src/output/matroska_ebml.c:417:49
	movq	64(%rbx), %rcx
	.loc	0 417 35 is_stmt 0              # x264_src/output/matroska_ebml.c:417:35
	movq	80(%rbx), %rax
	.loc	0 417 44                        # x264_src/output/matroska_ebml.c:417:44
	movq	%rax, %rdx
	orq	%rcx, %rdx
	shrq	$32, %rdx
	je	.LBB11_11
.Ltmp750:
# %bb.9:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	cqto
	idivq	%rcx
	jmp	.LBB11_12
.Ltmp751:
.LBB11_11:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ecx
                                        # kill: def $eax killed $eax def $rax
.Ltmp752:
.LBB11_12:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 417 30                        # x264_src/output/matroska_ebml.c:417:30
	movq	%rax, 72(%rbx)
	.loc	0 418 47 is_stmt 1              # x264_src/output/matroska_ebml.c:418:47
	movq	16(%rbx), %r14
.Ltmp753:
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	.loc	0 65 12                         # x264_src/output/matroska_ebml.c:65:12
	movq	40(%rbx), %rdi
	.loc	0 65 9 is_stmt 0                # x264_src/output/matroska_ebml.c:65:9
	testq	%rdi, %rdi
.Ltmp754:
	.loc	0 65 9                          # x264_src/output/matroska_ebml.c:65:9
	je	.LBB11_14
.Ltmp755:
# %bb.13:                               # %if.then.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 68 36 is_stmt 1               # x264_src/output/matroska_ebml.c:68:36
	movq	(%rdi), %rax
	.loc	0 68 21 is_stmt 0               # x264_src/output/matroska_ebml.c:68:21
	movq	%rax, 40(%rbx)
	jmp	.LBB11_15
.Ltmp756:
.LBB11_14:                              # %if.else.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	.loc	0 72 13 is_stmt 1               # x264_src/output/matroska_ebml.c:72:13
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc@PLT
.Ltmp757:
	movq	%rax, %rdi
.Ltmp758:
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 73 14                         # x264_src/output/matroska_ebml.c:73:14
	testq	%rax, %rax
.Ltmp759:
	.loc	0 73 13 is_stmt 0               # x264_src/output/matroska_ebml.c:73:13
	je	.LBB11_55
.Ltmp760:
.LBB11_15:                              # %if.end6.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 78 15 is_stmt 1               # x264_src/output/matroska_ebml.c:78:15
	movq	%r14, 16(%rdi)
	.loc	0 79 14                         # x264_src/output/matroska_ebml.c:79:14
	movq	%rbx, 24(%rdi)
	.loc	0 80 11                         # x264_src/output/matroska_ebml.c:80:11
	movl	$524531317, 32(%rdi)            # imm = 0x1F43B675
.Ltmp761:
	.loc	0 82 19                         # x264_src/output/matroska_ebml.c:82:19
	movq	48(%rbx), %rax
	.loc	0 82 9 is_stmt 0                # x264_src/output/matroska_ebml.c:82:9
	testq	%rax, %rax
.Ltmp762:
	.loc	0 82 9                          # x264_src/output/matroska_ebml.c:82:9
	je	.LBB11_17
.Ltmp763:
# %bb.16:                               # %if.then11.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 83 33 is_stmt 1               # x264_src/output/matroska_ebml.c:83:33
	movq	%rdi, 8(%rax)
.Ltmp764:
	.loc	0 84 18                         # x264_src/output/matroska_ebml.c:84:18
	movq	24(%rdi), %rcx
	.loc	0 84 25 is_stmt 0               # x264_src/output/matroska_ebml.c:84:25
	movq	48(%rcx), %rax
	jmp	.LBB11_18
.Ltmp765:
.LBB11_17:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 0 25                          # x264_src/output/matroska_ebml.c:0:25
	xorl	%eax, %eax
	movq	%rbx, %rcx
.Ltmp766:
.LBB11_18:                              # %do.body19
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_create_context:parent <- $r14
	#DEBUG_VALUE: mk_create_context:w <- $rbx
	#DEBUG_VALUE: mk_create_context:id <- 524531317
	#DEBUG_VALUE: mk_create_context:c <- $rdi
	.loc	0 84 25                         # x264_src/output/matroska_ebml.c:84:25
	leaq	48(%rcx), %rdx
	.loc	0 84 13                         # x264_src/output/matroska_ebml.c:84:13
	movq	%rax, (%rdi)
	.loc	0 85 13 is_stmt 1               # x264_src/output/matroska_ebml.c:85:13
	movq	%rdx, 8(%rdi)
	.loc	0 86 23                         # x264_src/output/matroska_ebml.c:86:23
	movq	%rdi, 48(%rcx)
.Ltmp767:
	.loc	0 418 20                        # x264_src/output/matroska_ebml.c:418:20
	movq	%rdi, 24(%rbx)
.Ltmp768:
	.loc	0 422 9                         # x264_src/output/matroska_ebml.c:422:9
	movq	72(%rbx), %rdx
	movl	$231, %esi
	callq	mk_write_uint
.Ltmp769:
	testl	%eax, %eax
.Ltmp770:
	.loc	0 422 9 is_stmt 0               # x264_src/output/matroska_ebml.c:422:9
	js	.LBB11_56
.Ltmp771:
# %bb.19:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	xorl	%r14d, %r14d
.Ltmp772:
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	.loc	0 427 16 is_stmt 1              # x264_src/output/matroska_ebml.c:427:16
	movq	32(%rbx), %rax
	.loc	0 427 13 is_stmt 0              # x264_src/output/matroska_ebml.c:427:13
	testq	%rax, %rax
	jne	.LBB11_7
.Ltmp773:
.LBB11_20:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	.loc	0 0 13                          # x264_src/output/matroska_ebml.c:0:13
	movl	$4, %ebp
.Ltmp774:
.LBB11_21:                              # %cond.end
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	.loc	0 429 5 is_stmt 1               # x264_src/output/matroska_ebml.c:429:5
	movq	24(%rbx), %r15
.Ltmp775:
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r15), %ecx
.Ltmp776:
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r15), %eax
.Ltmp777:
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %r12d
.Ltmp778:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp779:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB11_26
.Ltmp780:
# %bb.22:                               # %if.then.i95.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp781:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp782:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB11_23:                              # %while.cond.i99.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp783:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp784:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB11_23
.Ltmp785:
# %bb.24:                               # %while.end.i103.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r15), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp786:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp787:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB11_56
.Ltmp788:
# %bb.25:                               # %if.end.i108.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r15)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r15)
.Ltmp789:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r15), %ecx
	jmp	.LBB11_27
.Ltmp790:
.LBB11_26:                              # %entry.if.end11_crit_edge.i88.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r15), %rax
.Ltmp791:
.LBB11_27:                              # %do.body39
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	#DEBUG_VALUE: mk_write_id:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_id:id <- 163
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] -93
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-93, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%r15)
.Ltmp792:
	.loc	0 430 5                         # x264_src/output/matroska_ebml.c:430:5
	movq	24(%rbx), %rdi
	movl	%ebp, %esi
	callq	mk_write_size
.Ltmp793:
	movl	%eax, %ecx
	movl	$-1, %eax
	testl	%ecx, %ecx
.Ltmp794:
	.loc	0 430 5 is_stmt 0               # x264_src/output/matroska_ebml.c:430:5
	js	.LBB11_57
.Ltmp795:
# %bb.28:                               # %do.body47
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:fsize <- $ebp
	.loc	0 431 5 is_stmt 1               # x264_src/output/matroska_ebml.c:431:5
	movq	24(%rbx), %r15
.Ltmp796:
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r15), %ecx
.Ltmp797:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r15), %eax
.Ltmp798:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %ebp
.Ltmp799:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp800:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB11_33
.Ltmp801:
# %bb.29:                               # %if.then.i.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp802:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp803:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB11_30:                              # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp804:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp805:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB11_30
.Ltmp806:
# %bb.31:                               # %while.end.i.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r15), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp807:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp808:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB11_56
.Ltmp809:
# %bb.32:                               # %if.end.i.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r15)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%r15)
.Ltmp810:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r15), %ecx
	jmp	.LBB11_34
.Ltmp811:
.LBB11_33:                              # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r15), %rax
.Ltmp812:
.LBB11_34:                              # %do.end54
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_write_size:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_write_size:size <- 1
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] 0
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] -127
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$-127, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r15)
.Ltmp813:
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] undef
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	.loc	0 435 28                        # x264_src/output/matroska_ebml.c:435:28
	movzbl	98(%rbx), %ebp
.Ltmp814:
	.loc	0 435 37 is_stmt 0              # x264_src/output/matroska_ebml.c:435:37
	shlb	$7, %bpl
	.loc	0 435 43                        # x264_src/output/matroska_ebml.c:435:43
	orb	99(%rbx), %bpl
.Ltmp815:
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	.loc	0 436 5 is_stmt 1               # x264_src/output/matroska_ebml.c:436:5
	movq	24(%rbx), %r15
.Ltmp816:
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r15), %ecx
.Ltmp817:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r15), %eax
.Ltmp818:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	3(%rcx), %r12d
.Ltmp819:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp820:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB11_39
.Ltmp821:
# %bb.35:                               # %if.then.i143
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp822:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp823:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB11_36:                              # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp824:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp825:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB11_36
.Ltmp826:
# %bb.37:                               # %while.end.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r15), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp827:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp828:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB11_56
.Ltmp829:
# %bb.38:                               # %if.end.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r15)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r15)
.Ltmp830:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r15), %ecx
	jmp	.LBB11_40
.Ltmp831:
.LBB11_39:                              # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r15), %rax
.Ltmp832:
.LBB11_40:                              # %do.end69
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movl	%r14d, %edx
	shrl	$8, %edx
.Ltmp833:
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%dl, (%rax,%rcx)
	movb	%r14b, 1(%rax,%rcx)
	movb	%bpl, 2(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%r15)
.Ltmp834:
	.loc	0 437 12                        # x264_src/output/matroska_ebml.c:437:12
	movq	32(%rbx), %rax
	.loc	0 437 9 is_stmt 0               # x264_src/output/matroska_ebml.c:437:9
	testq	%rax, %rax
.Ltmp835:
	.loc	0 437 9                         # x264_src/output/matroska_ebml.c:437:9
	je	.LBB11_50
.Ltmp836:
# %bb.41:                               # %do.body73
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:delta <- $r14
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 8 8] $r14b
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 16 8] $bpl
	.loc	0 439 9 is_stmt 1               # x264_src/output/matroska_ebml.c:439:9
	movq	24(%rbx), %r12
	movq	40(%rax), %r14
.Ltmp837:
	movl	48(%rax), %r15d
.Ltmp838:
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %ecx
.Ltmp839:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp840:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r15), %ebp
.Ltmp841:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp842:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB11_48
.Ltmp843:
# %bb.42:                               # %if.then.i156
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp844:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp845:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB11_43:                              # %while.cond.i160
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp846:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp847:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB11_43
.Ltmp848:
# %bb.44:                               # %while.end.i164
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp849:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp850:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB11_56
.Ltmp851:
# %bb.45:                               # %if.end.i169
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r12)
.Ltmp852:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB11_49
.Ltmp853:
.LBB11_48:                              # %entry.if.end11_crit_edge.i149
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_flush_frame:c_delta_flags <- [DW_OP_LLVM_fragment 0 8] $dl
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp854:
.LBB11_49:                              # %do.end84
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- $r15d
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.Ltmp855:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp856:
	.loc	0 440 12                        # x264_src/output/matroska_ebml.c:440:12
	movq	32(%rbx), %rax
	.loc	0 440 25 is_stmt 0              # x264_src/output/matroska_ebml.c:440:25
	movl	$0, 48(%rax)
.Ltmp857:
.LBB11_50:                              # %if.end87
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 443 17 is_stmt 1              # x264_src/output/matroska_ebml.c:443:17
	movb	$0, 97(%rbx)
.Ltmp858:
	.loc	0 445 12                        # x264_src/output/matroska_ebml.c:445:12
	movq	24(%rbx), %rax
	.loc	0 445 27 is_stmt 0              # x264_src/output/matroska_ebml.c:445:27
	cmpl	$1048577, 48(%rax)              # imm = 0x100001
.Ltmp859:
	.loc	0 445 9                         # x264_src/output/matroska_ebml.c:445:9
	jb	.LBB11_52
.Ltmp860:
# %bb.51:                               # %do.body94
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 446 9 is_stmt 1               # x264_src/output/matroska_ebml.c:446:9
	movq	%rbx, %rdi
	callq	mk_close_cluster
.Ltmp861:
	movl	%eax, %ecx
	movl	$-1, %eax
	testl	%ecx, %ecx
.Ltmp862:
	.loc	0 446 9 is_stmt 0               # x264_src/output/matroska_ebml.c:446:9
	js	.LBB11_57
.Ltmp863:
.LBB11_52:                              # %if.end102
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	xorl	%eax, %eax
	jmp	.LBB11_57
.Ltmp864:
.LBB11_55:                              # %mk_create_context.exit.thread
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 418 20 is_stmt 1              # x264_src/output/matroska_ebml.c:418:20
	movq	$0, 24(%rbx)
.Ltmp865:
.LBB11_56:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	.loc	0 0 20 is_stmt 0                # x264_src/output/matroska_ebml.c:0:20
	movl	$-1, %eax
.Ltmp866:
.LBB11_57:
	#DEBUG_VALUE: mk_flush_frame:w <- $rbx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp867:
	#DEBUG_VALUE: mk_flush_frame:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	.cfi_restore %r12
	.cfi_restore %r13
	.cfi_restore %r14
	.cfi_restore %r15
	.cfi_restore %rbp
.Ltmp868:
.LBB11_58:                              # %cleanup
	#DEBUG_VALUE: mk_flush_frame:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 449 1 is_stmt 1               # x264_src/output/matroska_ebml.c:449:1
	retq
.Ltmp869:
.Lfunc_end11:
	.size	mk_flush_frame, .Lfunc_end11-mk_flush_frame
	.cfi_endproc
                                        # -- End function
	.globl	mk_set_frame_flags              # -- Begin function mk_set_frame_flags
	.p2align	4, 0x90
	.type	mk_set_frame_flags,@function
mk_set_frame_flags:                     # @mk_set_frame_flags
.Lfunc_begin12:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_set_frame_flags:w <- $rdi
	#DEBUG_VALUE: mk_set_frame_flags:timestamp <- $rsi
	#DEBUG_VALUE: mk_set_frame_flags:keyframe <- $edx
	#DEBUG_VALUE: mk_set_frame_flags:skippable <- $ecx
	.loc	0 465 10 prologue_end           # x264_src/output/matroska_ebml.c:465:10
	cmpb	$0, 97(%rdi)
.Ltmp870:
	.loc	0 465 9 is_stmt 0               # x264_src/output/matroska_ebml.c:465:9
	je	.LBB12_1
.Ltmp871:
# %bb.2:                                # %if.end
	#DEBUG_VALUE: mk_set_frame_flags:w <- $rdi
	#DEBUG_VALUE: mk_set_frame_flags:timestamp <- $rsi
	#DEBUG_VALUE: mk_set_frame_flags:keyframe <- $edx
	#DEBUG_VALUE: mk_set_frame_flags:skippable <- $ecx
	.loc	0 468 18 is_stmt 1              # x264_src/output/matroska_ebml.c:468:18
	movq	%rsi, 80(%rdi)
	.loc	0 469 30                        # x264_src/output/matroska_ebml.c:469:30
	testl	%edx, %edx
	.loc	0 469 18 is_stmt 0              # x264_src/output/matroska_ebml.c:469:18
	setne	98(%rdi)
	.loc	0 470 30 is_stmt 1              # x264_src/output/matroska_ebml.c:470:30
	testl	%ecx, %ecx
	.loc	0 470 18 is_stmt 0              # x264_src/output/matroska_ebml.c:470:18
	setne	99(%rdi)
	xorl	%eax, %eax
.Ltmp872:
	.loc	0 472 25 is_stmt 1              # x264_src/output/matroska_ebml.c:472:25
	cmpq	%rsi, 88(%rdi)
.Ltmp873:
	.loc	0 472 9 is_stmt 0               # x264_src/output/matroska_ebml.c:472:9
	jge	.LBB12_4
.Ltmp874:
# %bb.3:                                # %if.then9
	#DEBUG_VALUE: mk_set_frame_flags:w <- $rdi
	#DEBUG_VALUE: mk_set_frame_flags:timestamp <- $rsi
	#DEBUG_VALUE: mk_set_frame_flags:keyframe <- $edx
	#DEBUG_VALUE: mk_set_frame_flags:skippable <- $ecx
	.loc	0 473 25 is_stmt 1              # x264_src/output/matroska_ebml.c:473:25
	movq	%rsi, 88(%rdi)
.Ltmp875:
.LBB12_4:                               # %return
	#DEBUG_VALUE: mk_set_frame_flags:w <- $rdi
	#DEBUG_VALUE: mk_set_frame_flags:timestamp <- $rsi
	#DEBUG_VALUE: mk_set_frame_flags:keyframe <- $edx
	#DEBUG_VALUE: mk_set_frame_flags:skippable <- $ecx
	.loc	0 476 1                         # x264_src/output/matroska_ebml.c:476:1
	retq
.Ltmp876:
.LBB12_1:
	#DEBUG_VALUE: mk_set_frame_flags:w <- $rdi
	#DEBUG_VALUE: mk_set_frame_flags:timestamp <- $rsi
	#DEBUG_VALUE: mk_set_frame_flags:keyframe <- $edx
	#DEBUG_VALUE: mk_set_frame_flags:skippable <- $ecx
	.loc	0 0 1 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:1
	movl	$-1, %eax
	.loc	0 476 1                         # x264_src/output/matroska_ebml.c:476:1
	retq
.Ltmp877:
.Lfunc_end12:
	.size	mk_set_frame_flags, .Lfunc_end12-mk_set_frame_flags
	.cfi_endproc
                                        # -- End function
	.globl	mk_add_frame_data               # -- Begin function mk_add_frame_data
	.p2align	4, 0x90
	.type	mk_add_frame_data,@function
mk_add_frame_data:                      # @mk_add_frame_data
.Lfunc_begin13:
	.loc	0 479 0 is_stmt 1               # x264_src/output/matroska_ebml.c:479:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $edx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	$-1, %ebp
.Ltmp878:
	.loc	0 480 10 prologue_end           # x264_src/output/matroska_ebml.c:480:10
	cmpb	$0, 97(%rdi)
.Ltmp879:
	.loc	0 480 9 is_stmt 0               # x264_src/output/matroska_ebml.c:480:9
	je	.LBB13_17
.Ltmp880:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $edx
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movl	%edx, %ebx
.Ltmp881:
	.loc	0 483 13 is_stmt 1              # x264_src/output/matroska_ebml.c:483:13
	movq	32(%rdi), %r14
	.loc	0 483 10 is_stmt 0              # x264_src/output/matroska_ebml.c:483:10
	testq	%r14, %r14
.Ltmp882:
	.loc	0 483 9                         # x264_src/output/matroska_ebml.c:483:9
	jne	.LBB13_10
.Ltmp883:
# %bb.2:                                # %if.then2
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:w <- $rdi
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	.loc	0 65 12 is_stmt 1               # x264_src/output/matroska_ebml.c:65:12
	movq	40(%rdi), %r14
	.loc	0 65 9 is_stmt 0                # x264_src/output/matroska_ebml.c:65:9
	testq	%r14, %r14
.Ltmp884:
	.loc	0 65 9                          # x264_src/output/matroska_ebml.c:65:9
	je	.LBB13_6
.Ltmp885:
# %bb.3:                                # %if.then.i
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:w <- $rdi
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 68 36 is_stmt 1               # x264_src/output/matroska_ebml.c:68:36
	movq	(%r14), %rax
	.loc	0 68 21 is_stmt 0               # x264_src/output/matroska_ebml.c:68:21
	movq	%rax, 40(%rdi)
	jmp	.LBB13_4
.Ltmp886:
.LBB13_6:                               # %if.else.i
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:w <- $rdi
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	.loc	0 0 21                          # x264_src/output/matroska_ebml.c:0:21
	movq	%rdi, %r14
.Ltmp887:
	#DEBUG_VALUE: mk_create_context:w <- $r14
	#DEBUG_VALUE: mk_add_frame_data:w <- $r14
	.loc	0 72 13 is_stmt 1               # x264_src/output/matroska_ebml.c:72:13
	movl	$1, %edi
	movq	%rsi, %r15
.Ltmp888:
	#DEBUG_VALUE: mk_add_frame_data:data <- $r15
	movl	$56, %esi
	callq	calloc@PLT
.Ltmp889:
	.loc	0 0 13 is_stmt 0                # x264_src/output/matroska_ebml.c:0:13
	movq	%r14, %rdi
	movq	%r15, %rsi
	.loc	0 72 13                         # x264_src/output/matroska_ebml.c:72:13
	movq	%rax, %r14
.Ltmp890:
	#DEBUG_VALUE: mk_create_context:w <- $rdi
	#DEBUG_VALUE: mk_add_frame_data:w <- $rdi
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 73 14 is_stmt 1               # x264_src/output/matroska_ebml.c:73:14
	testq	%rax, %rax
.Ltmp891:
	.loc	0 73 13 is_stmt 0               # x264_src/output/matroska_ebml.c:73:13
	je	.LBB13_7
.Ltmp892:
.LBB13_4:                               # %if.end6.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $r14
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 78 15 is_stmt 1               # x264_src/output/matroska_ebml.c:78:15
	movq	$0, 16(%r14)
	.loc	0 79 14                         # x264_src/output/matroska_ebml.c:79:14
	movq	%rdi, 24(%r14)
	.loc	0 80 11                         # x264_src/output/matroska_ebml.c:80:11
	movl	$0, 32(%r14)
.Ltmp893:
	.loc	0 82 19                         # x264_src/output/matroska_ebml.c:82:19
	movq	48(%rdi), %rax
	.loc	0 82 9 is_stmt 0                # x264_src/output/matroska_ebml.c:82:9
	testq	%rax, %rax
.Ltmp894:
	.loc	0 82 9                          # x264_src/output/matroska_ebml.c:82:9
	je	.LBB13_5
.Ltmp895:
# %bb.8:                                # %if.then11.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 83 33 is_stmt 1               # x264_src/output/matroska_ebml.c:83:33
	movq	%r14, 8(%rax)
.Ltmp896:
	.loc	0 84 18                         # x264_src/output/matroska_ebml.c:84:18
	movq	24(%r14), %rcx
	.loc	0 84 25 is_stmt 0               # x264_src/output/matroska_ebml.c:84:25
	movq	48(%rcx), %rax
	jmp	.LBB13_9
.Ltmp897:
.LBB13_5:
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 0 25                          # x264_src/output/matroska_ebml.c:0:25
	xorl	%eax, %eax
	movq	%rdi, %rcx
.Ltmp898:
.LBB13_9:                               # %mk_create_context.exit
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_create_context:parent <- 0
	#DEBUG_VALUE: mk_create_context:id <- 0
	#DEBUG_VALUE: mk_create_context:c <- $r14
	.loc	0 84 25                         # x264_src/output/matroska_ebml.c:84:25
	leaq	48(%rcx), %rdx
	.loc	0 84 13                         # x264_src/output/matroska_ebml.c:84:13
	movq	%rax, (%r14)
	.loc	0 85 13 is_stmt 1               # x264_src/output/matroska_ebml.c:85:13
	movq	%rdx, 8(%r14)
	.loc	0 86 23                         # x264_src/output/matroska_ebml.c:86:23
	movq	%r14, 48(%rcx)
.Ltmp899:
	.loc	0 484 24                        # x264_src/output/matroska_ebml.c:484:24
	movq	%r14, 32(%rdi)
.Ltmp900:
.LBB13_10:                              # %if.end7
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r14), %ecx
.Ltmp901:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r14), %eax
.Ltmp902:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%rbx), %r15d
.Ltmp903:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp904:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB13_11
.Ltmp905:
# %bb.12:                               # %if.then.i15
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movq	%rsi, %r12
	leal	(%rax,%rax), %ecx
.Ltmp906:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp907:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB13_13:                              # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp908:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp909:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB13_13
.Ltmp910:
# %bb.14:                               # %while.end.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r14), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp911:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp912:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB13_17
.Ltmp913:
# %bb.15:                               # %if.end.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r14)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r14)
.Ltmp914:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r14), %ecx
	movq	%r12, %rsi
	jmp	.LBB13_16
.Ltmp915:
.LBB13_11:                              # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r14), %rax
.Ltmp916:
.LBB13_16:                              # %if.end11.i
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:c <- $r14
	#DEBUG_VALUE: mk_append_context_data:size <- $ebx
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 46                        # x264_src/output/matroska_ebml.c:110:46
	movl	%ebx, %edx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	callq	memcpy@PLT
.Ltmp917:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%r14)
	xorl	%ebp, %ebp
.Ltmp918:
.LBB13_17:                              # %return
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_add_frame_data:size <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 488 1                         # x264_src/output/matroska_ebml.c:488:1
	movl	%ebp, %eax
	.loc	0 488 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:488:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp919:
.LBB13_7:                               # %mk_create_context.exit.thread
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: mk_add_frame_data:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_add_frame_data:data <- $r15
	#DEBUG_VALUE: mk_add_frame_data:size <- $ebx
	.loc	0 484 24 is_stmt 1              # x264_src/output/matroska_ebml.c:484:24
	movq	$0, 32(%rdi)
.Ltmp920:
	.loc	0 484 13 is_stmt 0              # x264_src/output/matroska_ebml.c:484:13
	jmp	.LBB13_17
.Ltmp921:
.Lfunc_end13:
	.size	mk_add_frame_data, .Lfunc_end13-mk_add_frame_data
	.cfi_endproc
                                        # -- End function
	.globl	mk_close                        # -- Begin function mk_close
	.p2align	4, 0x90
	.type	mk_close,@function
mk_close:                               # @mk_close
.Lfunc_begin14:
	.loc	0 491 0 is_stmt 1               # x264_src/output/matroska_ebml.c:491:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_close:w <- $rdi
	#DEBUG_VALUE: mk_close:last_delta <- $rsi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
.Ltmp922:
	#DEBUG_VALUE: mk_close:ret <- 0
	.loc	0 493 9 prologue_end            # x264_src/output/matroska_ebml.c:493:9
	callq	mk_flush_frame
.Ltmp923:
	#DEBUG_VALUE: mk_close:last_delta <- $r14
	#DEBUG_VALUE: mk_close:w <- $rbx
	.loc	0 493 29 is_stmt 0              # x264_src/output/matroska_ebml.c:493:29
	testl	%eax, %eax
	.loc	0 493 33                        # x264_src/output/matroska_ebml.c:493:33
	js	.LBB14_3
.Ltmp924:
# %bb.1:                                # %lor.lhs.false
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- $r14
	#DEBUG_VALUE: mk_close:ret <- 0
	.loc	0 493 36                        # x264_src/output/matroska_ebml.c:493:36
	movq	%rbx, %rdi
	callq	mk_close_cluster
.Ltmp925:
	.loc	0 0 36                          # x264_src/output/matroska_ebml.c:0:36
	xorl	%r12d, %r12d
	.loc	0 493 58                        # x264_src/output/matroska_ebml.c:493:58
	testl	%eax, %eax
.Ltmp926:
	.loc	0 493 9                         # x264_src/output/matroska_ebml.c:493:9
	js	.LBB14_3
.Ltmp927:
# %bb.2:                                # %if.end
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- $r14
	#DEBUG_VALUE: mk_close:ret <- 0
	#DEBUG_VALUE: mk_close:ret <- $r12d
	.loc	0 495 9 is_stmt 1               # x264_src/output/matroska_ebml.c:495:9
	cmpb	$0, 96(%rbx)
	.loc	0 495 25 is_stmt 0              # x264_src/output/matroska_ebml.c:495:25
	jne	.LBB14_4
	jmp	.LBB14_22
.Ltmp928:
.LBB14_3:                               # %if.then
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- $r14
	#DEBUG_VALUE: mk_close:ret <- 0
	.loc	0 0 25                          # x264_src/output/matroska_ebml.c:0:25
	movl	$-1, %r12d
.Ltmp929:
	#DEBUG_VALUE: mk_close:ret <- -1
	#DEBUG_VALUE: mk_close:ret <- $r12d
	.loc	0 495 9                         # x264_src/output/matroska_ebml.c:495:9
	cmpb	$0, 96(%rbx)
	.loc	0 495 25                        # x264_src/output/matroska_ebml.c:495:25
	je	.LBB14_22
.Ltmp930:
.LBB14_4:                               # %land.lhs.true
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- $r14
	#DEBUG_VALUE: mk_close:ret <- $r12d
	.loc	0 497 19 is_stmt 1              # x264_src/output/matroska_ebml.c:497:19
	movq	(%rbx), %rdi
	.loc	0 497 26 is_stmt 0              # x264_src/output/matroska_ebml.c:497:26
	movl	8(%rbx), %esi
	.loc	0 497 9                         # x264_src/output/matroska_ebml.c:497:9
	xorl	%edx, %edx
	callq	fseek@PLT
.Ltmp931:
	.loc	0 500 36 is_stmt 1              # x264_src/output/matroska_ebml.c:500:36
	movq	16(%rbx), %r15
.Ltmp932:
	.loc	0 498 37                        # x264_src/output/matroska_ebml.c:498:37
	movq	56(%rbx), %rax
	.loc	0 498 34 is_stmt 0              # x264_src/output/matroska_ebml.c:498:34
	testq	%rax, %rax
	cmovneq	%rax, %r14
.Ltmp933:
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: last_frametime <- $r14
	.loc	0 499 49 is_stmt 1              # x264_src/output/matroska_ebml.c:499:49
	addq	88(%rbx), %r14
.Ltmp934:
	#DEBUG_VALUE: total_duration <- $r14
	.loc	0 500 75                        # x264_src/output/matroska_ebml.c:500:75
	cvtsi2sdq	64(%rbx), %xmm1
.Ltmp935:
	#DEBUG_VALUE: mk_write_float_raw:f <- undef
	#DEBUG_VALUE: mk_write_float_raw:u <- undef
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] undef
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] undef
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] undef
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r15), %ecx
.Ltmp936:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r15), %eax
.Ltmp937:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	4(%rcx), %ebp
.Ltmp938:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp939:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB14_9
.Ltmp940:
# %bb.5:                                # %if.then.i.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movsd	%xmm1, 8(%rsp)                  # 8-byte Spill
	leal	(%rax,%rax), %ecx
.Ltmp941:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp942:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB14_6:                               # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp943:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp944:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB14_6
.Ltmp945:
# %bb.7:                                # %while.end.i.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r15), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp946:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp947:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB14_18
.Ltmp948:
# %bb.8:                                # %if.end.i.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r15)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r15)
.Ltmp949:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r15), %ecx
	movsd	8(%rsp), %xmm1                  # 8-byte Reload
                                        # xmm1 = mem[0],zero
	jmp	.LBB14_10
.Ltmp950:
.LBB14_9:                               # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r15), %rax
.Ltmp951:
.LBB14_10:                              # %lor.lhs.false18
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: total_duration <- $r14
	#DEBUG_VALUE: mk_write_float_raw:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 500 0 is_stmt 1               # x264_src/output/matroska_ebml.c:500:0
	cvtsi2sd	%r14, %xmm0
	divsd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm0
.Ltmp952:
	#DEBUG_VALUE: mk_write_float_raw:u <- $xmm0
	#DEBUG_VALUE: mk_write_float_raw:f <- $xmm0
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movd	%xmm0, %edx
.Ltmp953:
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 24 8] $dl
	movl	%edx, %esi
	shrl	$24, %esi
.Ltmp954:
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 0 8] $sil
	movl	%edx, %edi
	shrl	$16, %edi
.Ltmp955:
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 8 8] $dil
	movl	%edx, %r8d
	shrl	$8, %r8d
.Ltmp956:
	#DEBUG_VALUE: mk_write_float_raw:c_f <- [DW_OP_LLVM_fragment 16 8] $r8b
	.loc	0 110 28 is_stmt 1              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5 is_stmt 0               # x264_src/output/matroska_ebml.c:110:5
	movb	%sil, (%rax,%rcx)
	movb	%dil, 1(%rax,%rcx)
	movb	%r8b, 2(%rax,%rcx)
	movb	%dl, 3(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r15)
.Ltmp957:
	.loc	0 501 39                        # x264_src/output/matroska_ebml.c:501:39
	movq	16(%rbx), %r13
.Ltmp958:
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	.loc	0 174 13                        # x264_src/output/matroska_ebml.c:174:13
	movl	48(%r13), %r14d
.Ltmp959:
	testq	%r14, %r14
.Ltmp960:
	.loc	0 174 9 is_stmt 0               # x264_src/output/matroska_ebml.c:174:9
	je	.LBB14_22
.Ltmp961:
# %bb.11:                               # %if.end.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	.loc	0 177 12 is_stmt 1              # x264_src/output/matroska_ebml.c:177:12
	movq	16(%r13), %rbp
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	40(%r13), %rsi
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	testq	%rbp, %rbp
.Ltmp962:
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	je	.LBB14_17
.Ltmp963:
# %bb.12:                               # %do.body.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- $rsi
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbp), %ecx
.Ltmp964:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbp), %eax
.Ltmp965:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%r14), %r15d
.Ltmp966:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp967:
	#DEBUG_VALUE: mk_append_context_data:size <- undef
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB14_19
.Ltmp968:
# %bb.13:                               # %if.then.i.i51
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- $rsi
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
.Ltmp969:
	#DEBUG_VALUE: mk_append_context_data:data <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	movl	%r12d, 8(%rsp)                  # 4-byte Spill
.Ltmp970:
	#DEBUG_VALUE: mk_close:ret <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	leal	(%rax,%rax), %ecx
.Ltmp971:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp972:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB14_14:                              # %while.cond.i.i55
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp973:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp974:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB14_14
.Ltmp975:
# %bb.15:                               # %while.end.i.i59
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbp), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp976:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp977:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB14_18
.Ltmp978:
# %bb.16:                               # %if.end.i.i64
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbp)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbp)
.Ltmp979:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbp), %ecx
	movl	8(%rsp), %r12d                  # 4-byte Reload
	movq	16(%rsp), %rsi                  # 8-byte Reload
	jmp	.LBB14_20
.Ltmp980:
.LBB14_18:
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 0 33 is_stmt 0                # x264_src/output/matroska_ebml.c:0:33
	movl	$-1, %ebp
.Ltmp981:
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 213 31 is_stmt 1              # x264_src/output/matroska_ebml.c:213:31
	movq	40(%rbx), %r14
.Ltmp982:
	#DEBUG_VALUE: cur <- undef
	.loc	0 213 5 is_stmt 0               # x264_src/output/matroska_ebml.c:213:5
	testq	%r14, %r14
	jne	.LBB14_24
	jmp	.LBB14_25
.Ltmp983:
.LBB14_17:                              # %if.else.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	.loc	0 179 47 is_stmt 1              # x264_src/output/matroska_ebml.c:179:47
	movq	24(%r13), %rax
	.loc	0 179 54 is_stmt 0              # x264_src/output/matroska_ebml.c:179:54
	movq	(%rax), %rcx
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	movl	$1, %edx
	movq	%rsi, %rdi
	movq	%r14, %rsi
	callq	fwrite@PLT
.Ltmp984:
	.loc	0 0 14                          # x264_src/output/matroska_ebml.c:0:14
	movl	$-1, %ebp
	.loc	0 179 59                        # x264_src/output/matroska_ebml.c:179:59
	cmpq	$1, %rax
.Ltmp985:
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	je	.LBB14_21
	jmp	.LBB14_23
.Ltmp986:
.LBB14_19:                              # %entry.if.end11_crit_edge.i.i46
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- $rsi
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 1              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbp), %rax
.Ltmp987:
.LBB14_20:                              # %mk_append_context_data.exit.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	#DEBUG_VALUE: mk_append_context_data:c <- $rbp
	#DEBUG_VALUE: mk_append_context_data:data <- $rsi
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r14, %rdx
	callq	memcpy@PLT
.Ltmp988:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%rbp)
.Ltmp989:
.LBB14_21:                              # %if.end14.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_flush_context_data:c <- $r13
	.loc	0 182 14                        # x264_src/output/matroska_ebml.c:182:14
	movl	$0, 48(%r13)
.Ltmp990:
.LBB14_22:                              # %if.end25
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	.loc	0 0 14 is_stmt 0                # x264_src/output/matroska_ebml.c:0:14
	movl	%r12d, %ebp
.Ltmp991:
	#DEBUG_VALUE: mk_close:ret <- $ebp
.LBB14_23:                              # %if.end25
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $r12d
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 213 31 is_stmt 1              # x264_src/output/matroska_ebml.c:213:31
	movq	40(%rbx), %r14
.Ltmp992:
	#DEBUG_VALUE: cur <- $r14
	.loc	0 213 5 is_stmt 0               # x264_src/output/matroska_ebml.c:213:5
	testq	%r14, %r14
	je	.LBB14_25
.Ltmp993:
	.p2align	4, 0x90
.LBB14_24:                              # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	#DEBUG_VALUE: cur <- $r14
	.loc	0 215 21 is_stmt 1              # x264_src/output/matroska_ebml.c:215:21
	movq	(%r14), %r15
.Ltmp994:
	#DEBUG_VALUE: mk_destroy_contexts:next <- $r15
	.loc	0 216 20                        # x264_src/output/matroska_ebml.c:216:20
	movq	40(%r14), %rdi
	.loc	0 216 9 is_stmt 0               # x264_src/output/matroska_ebml.c:216:9
	callq	free@PLT
.Ltmp995:
	.loc	0 217 9 is_stmt 1               # x264_src/output/matroska_ebml.c:217:9
	movq	%r14, %rdi
	callq	free@PLT
.Ltmp996:
	#DEBUG_VALUE: cur <- $r15
	.loc	0 0 9 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:9
	movq	%r15, %r14
.Ltmp997:
	.loc	0 213 5 is_stmt 1               # x264_src/output/matroska_ebml.c:213:5
	testq	%r15, %r15
	jne	.LBB14_24
.Ltmp998:
.LBB14_25:                              # %for.cond.cleanup.i
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	leaq	40(%rbx), %r15
.Ltmp999:
	.loc	0 220 31 is_stmt 1              # x264_src/output/matroska_ebml.c:220:31
	movq	48(%rbx), %r14
.Ltmp1000:
	#DEBUG_VALUE: cur <- $r14
	.loc	0 220 5 is_stmt 0               # x264_src/output/matroska_ebml.c:220:5
	testq	%r14, %r14
	je	.LBB14_27
.Ltmp1001:
	.p2align	4, 0x90
.LBB14_26:                              # %for.body6.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	#DEBUG_VALUE: cur <- $r14
	#DEBUG_VALUE: cur <- $r14
	.loc	0 222 21 is_stmt 1              # x264_src/output/matroska_ebml.c:222:21
	movq	(%r14), %r12
.Ltmp1002:
	#DEBUG_VALUE: mk_destroy_contexts:next <- $r12
	.loc	0 223 20                        # x264_src/output/matroska_ebml.c:223:20
	movq	40(%r14), %rdi
	.loc	0 223 9 is_stmt 0               # x264_src/output/matroska_ebml.c:223:9
	callq	free@PLT
.Ltmp1003:
	.loc	0 224 9 is_stmt 1               # x264_src/output/matroska_ebml.c:224:9
	movq	%r14, %rdi
	callq	free@PLT
.Ltmp1004:
	#DEBUG_VALUE: cur <- $r12
	.loc	0 0 9 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:9
	movq	%r12, %r14
.Ltmp1005:
	.loc	0 220 5 is_stmt 1               # x264_src/output/matroska_ebml.c:220:5
	testq	%r12, %r12
	jne	.LBB14_26
.Ltmp1006:
.LBB14_27:                              # %mk_destroy_contexts.exit
	#DEBUG_VALUE: mk_close:w <- $rbx
	#DEBUG_VALUE: mk_close:last_delta <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: mk_close:ret <- $ebp
	#DEBUG_VALUE: mk_destroy_contexts:w <- $rbx
	.loc	0 227 40                        # x264_src/output/matroska_ebml.c:227:40
	movq	$0, 16(%rbx)
	.loc	0 227 30 is_stmt 0              # x264_src/output/matroska_ebml.c:227:30
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
.Ltmp1007:
	.loc	0 505 16 is_stmt 1              # x264_src/output/matroska_ebml.c:505:16
	movq	(%rbx), %rdi
	.loc	0 505 5 is_stmt 0               # x264_src/output/matroska_ebml.c:505:5
	callq	fclose@PLT
.Ltmp1008:
	.loc	0 506 5 is_stmt 1               # x264_src/output/matroska_ebml.c:506:5
	movq	%rbx, %rdi
	callq	free@PLT
.Ltmp1009:
	.loc	0 507 5                         # x264_src/output/matroska_ebml.c:507:5
	movl	%ebp, %eax
	.loc	0 507 5 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:507:5
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1010:
	#DEBUG_VALUE: mk_close:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1011:
	#DEBUG_VALUE: mk_close:ret <- $eax
	.cfi_def_cfa_offset 8
	retq
.Ltmp1012:
.Lfunc_end14:
	.size	mk_close, .Lfunc_end14-mk_close
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_close_cluster
	.type	mk_close_cluster,@function
mk_close_cluster:                       # @mk_close_cluster
.Lfunc_begin15:
	.loc	0 393 0 is_stmt 1               # x264_src/output/matroska_ebml.c:393:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_close_cluster:w <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
.Ltmp1013:
	.loc	0 394 12 prologue_end           # x264_src/output/matroska_ebml.c:394:12
	movq	24(%rdi), %rdi
.Ltmp1014:
	#DEBUG_VALUE: mk_close_cluster:w <- $rbx
	.loc	0 394 20 is_stmt 0              # x264_src/output/matroska_ebml.c:394:20
	testq	%rdi, %rdi
.Ltmp1015:
	.loc	0 394 9                         # x264_src/output/matroska_ebml.c:394:9
	je	.LBB15_13
.Ltmp1016:
# %bb.1:                                # %do.body
	#DEBUG_VALUE: mk_close_cluster:w <- $rbx
	.loc	0 396 5 is_stmt 1               # x264_src/output/matroska_ebml.c:396:5
	xorl	%esi, %esi
	callq	mk_close_context
.Ltmp1017:
	.loc	0 0 5 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:5
	movl	$-1, %ecx
	.loc	0 396 5                         # x264_src/output/matroska_ebml.c:396:5
	testl	%eax, %eax
.Ltmp1018:
	.loc	0 396 5                         # x264_src/output/matroska_ebml.c:396:5
	js	.LBB15_14
.Ltmp1019:
# %bb.2:                                # %do.end
	#DEBUG_VALUE: mk_close_cluster:w <- $rbx
	.loc	0 397 16 is_stmt 1              # x264_src/output/matroska_ebml.c:397:16
	movq	$0, 24(%rbx)
.Ltmp1020:
	.loc	0 398 5                         # x264_src/output/matroska_ebml.c:398:5
	movq	16(%rbx), %r15
.Ltmp1021:
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	.loc	0 174 13                        # x264_src/output/matroska_ebml.c:174:13
	movl	48(%r15), %ebx
.Ltmp1022:
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	testq	%rbx, %rbx
.Ltmp1023:
	.loc	0 174 9 is_stmt 0               # x264_src/output/matroska_ebml.c:174:9
	je	.LBB15_13
.Ltmp1024:
# %bb.3:                                # %if.end.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	.loc	0 177 12 is_stmt 1              # x264_src/output/matroska_ebml.c:177:12
	movq	16(%r15), %r12
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movq	40(%r15), %r14
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	testq	%r12, %r12
.Ltmp1025:
	.loc	0 177 9                         # x264_src/output/matroska_ebml.c:177:9
	je	.LBB15_11
.Ltmp1026:
# %bb.4:                                # %do.body.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%r12), %ecx
.Ltmp1027:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%r12), %eax
.Ltmp1028:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	(%rcx,%rbx), %ebp
.Ltmp1029:
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %ebp
.Ltmp1030:
	#DEBUG_VALUE: mk_append_context_data:size <- undef
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB15_5
.Ltmp1031:
# %bb.6:                                # %if.then.i.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1032:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1033:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB15_7:                               # %while.cond.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp1034:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp1035:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %ebp
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB15_7
.Ltmp1036:
# %bb.8:                                # %while.end.i.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%r12), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1037:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
	movl	$-1, %ecx
.Ltmp1038:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB15_14
.Ltmp1039:
# %bb.9:                                # %if.end.i.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%r12)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%r12)
.Ltmp1040:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%r12), %ecx
	jmp	.LBB15_10
.Ltmp1041:
.LBB15_11:                              # %if.else.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	.loc	0 179 47                        # x264_src/output/matroska_ebml.c:179:47
	movq	24(%r15), %rax
	.loc	0 179 54 is_stmt 0              # x264_src/output/matroska_ebml.c:179:54
	movq	(%rax), %rcx
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	movl	$1, %edx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	fwrite@PLT
.Ltmp1042:
	.loc	0 0 14                          # x264_src/output/matroska_ebml.c:0:14
	movl	$-1, %ecx
	.loc	0 179 59                        # x264_src/output/matroska_ebml.c:179:59
	cmpq	$1, %rax
.Ltmp1043:
	.loc	0 179 14                        # x264_src/output/matroska_ebml.c:179:14
	je	.LBB15_12
	jmp	.LBB15_14
.Ltmp1044:
.LBB15_5:                               # %entry.if.end11_crit_edge.i.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 23 is_stmt 1              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%r12), %rax
.Ltmp1045:
.LBB15_10:                              # %mk_append_context_data.exit.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	#DEBUG_VALUE: mk_append_context_data:c <- $r12
	#DEBUG_VALUE: mk_append_context_data:data <- $r14
	#DEBUG_VALUE: mk_append_context_data:ns <- $ebp
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %edi
	addq	%rax, %rdi
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movq	%r14, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.Ltmp1046:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%ebp, 48(%r12)
.Ltmp1047:
.LBB15_12:                              # %if.end14.i
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: mk_flush_context_data:c <- $r15
	.loc	0 182 14                        # x264_src/output/matroska_ebml.c:182:14
	movl	$0, 48(%r15)
.Ltmp1048:
.LBB15_13:                              # %return
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 0 14 is_stmt 0                # x264_src/output/matroska_ebml.c:0:14
	xorl	%ecx, %ecx
.Ltmp1049:
.LBB15_14:                              # %return
	#DEBUG_VALUE: mk_close_cluster:w <- [DW_OP_LLVM_entry_value 1] $rdi
	.loc	0 400 1 is_stmt 1               # x264_src/output/matroska_ebml.c:400:1
	movl	%ecx, %eax
	.loc	0 400 1 epilogue_begin is_stmt 0 # x264_src/output/matroska_ebml.c:400:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1050:
.Lfunc_end15:
	.size	mk_close_cluster, .Lfunc_end15-mk_close_cluster
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_id
	.type	mk_write_id,@function
mk_write_id:                            # @mk_write_id
.Lfunc_begin16:
	.loc	0 118 0 is_stmt 1               # x264_src/output/matroska_ebml.c:118:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_id:c <- $rdi
	#DEBUG_VALUE: mk_write_id:id <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp1051:
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 119 44 prologue_end           # x264_src/output/matroska_ebml.c:119:44
	movl	%esi, %r15d
	shrl	$16, %r15d
.Ltmp1052:
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	.loc	0 119 54 is_stmt 0              # x264_src/output/matroska_ebml.c:119:54
	movl	%esi, %r14d
	shrl	$8, %r14d
.Ltmp1053:
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	.loc	0 121 9 is_stmt 1               # x264_src/output/matroska_ebml.c:121:9
	cmpl	$16777216, %esi                 # imm = 0x1000000
.Ltmp1054:
	.loc	0 121 9 is_stmt 0               # x264_src/output/matroska_ebml.c:121:9
	jae	.LBB16_7
.Ltmp1055:
# %bb.1:                                # %if.end
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	.loc	0 95 17 is_stmt 1               # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1056:
	.loc	0 123 9                         # x264_src/output/matroska_ebml.c:123:9
	testb	%r15b, %r15b
.Ltmp1057:
	.loc	0 123 9 is_stmt 0               # x264_src/output/matroska_ebml.c:123:9
	je	.LBB16_14
.Ltmp1058:
# %bb.2:                                # %if.then10
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
	.loc	0 93 28 is_stmt 0               # x264_src/output/matroska_ebml.c:93:28
	leal	3(%rcx), %r12d
.Ltmp1059:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12 is_stmt 1               # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp1060:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB16_20
.Ltmp1061:
# %bb.3:                                # %if.then.i41
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1062:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1063:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB16_4:                               # %while.cond.i45
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp1064:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp1065:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB16_4
.Ltmp1066:
# %bb.5:                                # %while.end.i49
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1067:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1068:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB16_22
.Ltmp1069:
# %bb.6:                                # %if.end.i54
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%rbx)
.Ltmp1070:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB16_21
.Ltmp1071:
.LBB16_7:                               # %if.then
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1072:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1073:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	4(%rcx), %r12d
.Ltmp1074:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp1075:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB16_12
.Ltmp1076:
# %bb.8:                                # %if.then.i
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1077:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1078:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB16_9:                               # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp1079:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp1080:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB16_9
.Ltmp1081:
# %bb.10:                               # %while.end.i
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1082:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1083:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB16_22
.Ltmp1084:
# %bb.11:                               # %if.end.i
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%rbx)
.Ltmp1085:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB16_13
.Ltmp1086:
.LBB16_12:                              # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1087:
.LBB16_13:                              # %if.end11.i
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	movl	%ebp, %edx
	shrl	$24, %edx
.Ltmp1088:
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 0 8] $dl
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%dl, (%rax,%rcx)
	movb	%r15b, 1(%rax,%rcx)
	movb	%r14b, 2(%rax,%rcx)
	movb	%bpl, 3(%rax,%rcx)
.Ltmp1089:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%rbx)
	jmp	.LBB16_33
.Ltmp1090:
.LBB16_14:                              # %if.end13
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1091:
	.loc	0 125 9                         # x264_src/output/matroska_ebml.c:125:9
	testb	%r14b, %r14b
.Ltmp1092:
	.loc	0 125 9 is_stmt 0               # x264_src/output/matroska_ebml.c:125:9
	je	.LBB16_23
.Ltmp1093:
# %bb.15:                               # %if.then16
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 28 is_stmt 1               # x264_src/output/matroska_ebml.c:93:28
	leal	2(%rcx), %r15d
.Ltmp1094:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp1095:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB16_29
.Ltmp1096:
# %bb.16:                               # %if.then.i68
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1097:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1098:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB16_17:                              # %while.cond.i72
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp1099:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp1100:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB16_17
.Ltmp1101:
# %bb.18:                               # %while.end.i76
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1102:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1103:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB16_22
.Ltmp1104:
# %bb.19:                               # %if.end.i81
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp1105:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB16_30
.Ltmp1106:
.LBB16_20:                              # %entry.if.end11_crit_edge.i34
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1107:
.LBB16_21:                              # %if.end11.i37
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%r15b, (%rax,%rcx)
	movb	%r14b, 1(%rax,%rcx)
	movb	%bpl, 2(%rax,%rcx)
.Ltmp1108:
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%rbx)
	jmp	.LBB16_33
.Ltmp1109:
.LBB16_23:                              # %if.end20
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %r14d
.Ltmp1110:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r14d
.Ltmp1111:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB16_31
.Ltmp1112:
# %bb.24:                               # %if.then.i95
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1113:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1114:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB16_25:                              # %while.cond.i99
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp1115:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp1116:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %r14d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB16_25
.Ltmp1117:
# %bb.26:                               # %while.end.i103
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1118:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1119:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB16_22
.Ltmp1120:
# %bb.27:                               # %if.end.i108
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%rbx)
.Ltmp1121:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB16_32
.Ltmp1122:
.LBB16_22:
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	.loc	0 0 33 is_stmt 0                # x264_src/output/matroska_ebml.c:0:33
	movl	$-1, %eax
.Ltmp1123:
	.loc	0 103 13 is_stmt 1              # x264_src/output/matroska_ebml.c:103:13
	jmp	.LBB16_34
.Ltmp1124:
.LBB16_29:                              # %entry.if.end11_crit_edge.i61
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1125:
.LBB16_30:                              # %if.end11.i64
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 16 8] $r14b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%r14b, (%rax,%rcx)
	movb	%bpl, 1(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%rbx)
	jmp	.LBB16_33
.Ltmp1126:
.LBB16_31:                              # %entry.if.end11_crit_edge.i88
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 8 8] $r15b
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1127:
.LBB16_32:                              # %if.end11.i91
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%bpl, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r14d, 48(%rbx)
.Ltmp1128:
.LBB16_33:                              # %cleanup
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	.loc	0 0 14 is_stmt 0                # x264_src/output/matroska_ebml.c:0:14
	xorl	%eax, %eax
.Ltmp1129:
.LBB16_34:                              # %cleanup
	#DEBUG_VALUE: mk_write_id:c <- $rbx
	#DEBUG_VALUE: mk_write_id:id <- $ebp
	#DEBUG_VALUE: mk_write_id:c_id <- [DW_OP_LLVM_fragment 24 8] $bpl
	.loc	0 128 1 epilogue_begin is_stmt 1 # x264_src/output/matroska_ebml.c:128:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1130:
	#DEBUG_VALUE: mk_write_id:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp1131:
	#DEBUG_VALUE: mk_write_id:id <- [DW_OP_LLVM_entry_value 1] $esi
	.cfi_def_cfa_offset 8
	retq
.Ltmp1132:
.Lfunc_end16:
	.size	mk_write_id, .Lfunc_end16-mk_write_id
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function mk_write_size
	.type	mk_write_size,@function
mk_write_size:                          # @mk_write_size
.Lfunc_begin17:
	.loc	0 131 0                         # x264_src/output/matroska_ebml.c:131:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: mk_write_size:c <- $rdi
	#DEBUG_VALUE: mk_write_size:size <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp1133:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] undef
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] undef
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] undef
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 134 14 prologue_end           # x264_src/output/matroska_ebml.c:134:14
	cmpl	$126, %esi
.Ltmp1134:
	.loc	0 134 9 is_stmt 0               # x264_src/output/matroska_ebml.c:134:9
	ja	.LBB17_6
.Ltmp1135:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] undef
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1136:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1137:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	1(%rcx), %r14d
.Ltmp1138:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r14d
.Ltmp1139:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB17_12
.Ltmp1140:
# %bb.2:                                # %if.then.i
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1141:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1142:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB17_3:                               # %while.cond.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r15d
.Ltmp1143:
	#DEBUG_VALUE: dn <- $r15d
	#DEBUG_VALUE: dn <- $r15d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r15,%r15), %eax
.Ltmp1144:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r15d, %r14d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB17_3
.Ltmp1145:
# %bb.4:                                # %while.end.i
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r15d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1146:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1147:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB17_28
.Ltmp1148:
# %bb.5:                                # %if.end.i
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r15d, 52(%rbx)
.Ltmp1149:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB17_13
.Ltmp1150:
.LBB17_6:                               # %if.end
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%ebp, %r14d
	shrl	$8, %r14d
.Ltmp1151:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	.loc	0 139 14 is_stmt 1              # x264_src/output/matroska_ebml.c:139:14
	cmpl	$16382, %ebp                    # imm = 0x3FFE
.Ltmp1152:
	.loc	0 139 9 is_stmt 0               # x264_src/output/matroska_ebml.c:139:9
	ja	.LBB17_14
.Ltmp1153:
# %bb.7:                                # %if.then14
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] undef
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1154:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1155:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	2(%rcx), %r15d
.Ltmp1156:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r15d
.Ltmp1157:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB17_20
.Ltmp1158:
# %bb.8:                                # %if.then.i69
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1159:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1160:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB17_9:                               # %while.cond.i73
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp1161:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp1162:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r15d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB17_9
.Ltmp1163:
# %bb.10:                               # %while.end.i77
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1164:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1165:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB17_28
.Ltmp1166:
# %bb.11:                               # %if.end.i82
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp1167:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB17_21
.Ltmp1168:
.LBB17_12:                              # %entry.if.end11_crit_edge.i
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1169:
.LBB17_13:                              # %if.end11.i
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 1
	#DEBUG_VALUE: mk_append_context_data:ns <- $r14d
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	orb	$-128, %bpl
.Ltmp1170:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_write_size:size <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%bpl, (%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r14d, 48(%rbx)
	jmp	.LBB17_42
.Ltmp1171:
.LBB17_14:                              # %if.end22
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%ebp, %r15d
	shrl	$16, %r15d
.Ltmp1172:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	.loc	0 144 14 is_stmt 1              # x264_src/output/matroska_ebml.c:144:14
	cmpl	$2097150, %ebp                  # imm = 0x1FFFFE
.Ltmp1173:
	.loc	0 144 9 is_stmt 0               # x264_src/output/matroska_ebml.c:144:9
	ja	.LBB17_22
.Ltmp1174:
# %bb.15:                               # %if.then25
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] undef
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1175:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1176:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	3(%rcx), %r12d
.Ltmp1177:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r12d
.Ltmp1178:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB17_29
.Ltmp1179:
# %bb.16:                               # %if.then.i96
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	leal	(%rax,%rax), %ecx
.Ltmp1180:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1181:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB17_17:                              # %while.cond.i100
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r13d
.Ltmp1182:
	#DEBUG_VALUE: dn <- $r13d
	#DEBUG_VALUE: dn <- $r13d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(,%r13,2), %eax
.Ltmp1183:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r13d, %r12d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB17_17
.Ltmp1184:
# %bb.18:                               # %while.end.i104
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r13d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1185:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1186:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB17_28
.Ltmp1187:
# %bb.19:                               # %if.end.i109
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r13d, 52(%rbx)
.Ltmp1188:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	jmp	.LBB17_30
.Ltmp1189:
.LBB17_20:                              # %entry.if.end11_crit_edge.i62
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1190:
.LBB17_21:                              # %if.end11.i65
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 2
	#DEBUG_VALUE: mk_append_context_data:ns <- $r15d
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	orb	$64, %r14b
.Ltmp1191:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%r14b, (%rax,%rcx)
	movb	%bpl, 1(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r15d, 48(%rbx)
	jmp	.LBB17_42
.Ltmp1192:
.LBB17_22:                              # %if.end33
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%ebp, %edx
	shrl	$24, %edx
.Ltmp1193:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	.loc	0 149 14 is_stmt 1              # x264_src/output/matroska_ebml.c:149:14
	cmpl	$268435454, %ebp                # imm = 0xFFFFFFE
.Ltmp1194:
	.loc	0 149 9 is_stmt 0               # x264_src/output/matroska_ebml.c:149:9
	ja	.LBB17_31
.Ltmp1195:
# %bb.23:                               # %if.then36
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] undef
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	.loc	0 93 22 is_stmt 1               # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1196:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1197:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	4(%rcx), %r13d
.Ltmp1198:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r13d
.Ltmp1199:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB17_37
.Ltmp1200:
# %bb.24:                               # %if.then.i123
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movl	%edx, 4(%rsp)                   # 4-byte Spill
	leal	(%rax,%rax), %ecx
.Ltmp1201:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1202:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB17_25:                              # %while.cond.i127
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp1203:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp1204:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r13d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB17_25
.Ltmp1205:
# %bb.26:                               # %while.end.i131
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1206:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1207:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB17_28
.Ltmp1208:
# %bb.27:                               # %if.end.i136
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp1209:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	movl	4(%rsp), %edx                   # 4-byte Reload
	jmp	.LBB17_38
.Ltmp1210:
.LBB17_29:                              # %entry.if.end11_crit_edge.i89
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 110 23 is_stmt 0              # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1211:
.LBB17_30:                              # %if.end11.i92
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 3
	#DEBUG_VALUE: mk_append_context_data:ns <- $r12d
	.loc	0 0 0                           # x264_src/output/matroska_ebml.c:0:0
	orb	$32, %r15b
.Ltmp1212:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%r15b, (%rax,%rcx)
	movb	%r14b, 1(%rax,%rcx)
	movb	%bpl, 2(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r12d, 48(%rbx)
	jmp	.LBB17_42
.Ltmp1213:
.LBB17_31:                              # %if.end44
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:data <- undef
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	.loc	0 93 22                         # x264_src/output/matroska_ebml.c:93:22
	movl	48(%rbx), %ecx
.Ltmp1214:
	.loc	0 95 17                         # x264_src/output/matroska_ebml.c:95:17
	movl	52(%rbx), %eax
.Ltmp1215:
	.loc	0 93 28                         # x264_src/output/matroska_ebml.c:93:28
	leal	5(%rcx), %r13d
.Ltmp1216:
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 95 12                         # x264_src/output/matroska_ebml.c:95:12
	cmpl	%eax, %r13d
.Ltmp1217:
	.loc	0 95 9 is_stmt 0                # x264_src/output/matroska_ebml.c:95:9
	jbe	.LBB17_39
.Ltmp1218:
# %bb.32:                               # %if.then.i150
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 0 9                           # x264_src/output/matroska_ebml.c:0:9
	movl	%edx, 4(%rsp)                   # 4-byte Spill
.Ltmp1219:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_plus_uconst 4, DW_OP_deref, DW_OP_LLVM_fragment 8 8] $rsp
	leal	(%rax,%rax), %ecx
.Ltmp1220:
	.loc	0 98 23 is_stmt 1               # x264_src/output/matroska_ebml.c:98:23
	testl	%eax, %eax
	movl	$16, %eax
	cmovnel	%ecx, %eax
.Ltmp1221:
	#DEBUG_VALUE: dn <- $eax
	.p2align	4, 0x90
.LBB17_33:                              # %while.cond.i154
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_plus_uconst 4, DW_OP_deref, DW_OP_LLVM_fragment 8 8] $rsp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	movl	%eax, %r12d
.Ltmp1222:
	#DEBUG_VALUE: dn <- $r12d
	#DEBUG_VALUE: dn <- $r12d
	.loc	0 100 16 is_stmt 1              # x264_src/output/matroska_ebml.c:100:16
	leal	(%r12,%r12), %eax
.Ltmp1223:
	#DEBUG_VALUE: dn <- $eax
	.loc	0 99 19                         # x264_src/output/matroska_ebml.c:99:19
	cmpl	%r12d, %r13d
	.loc	0 99 9 is_stmt 0                # x264_src/output/matroska_ebml.c:99:9
	ja	.LBB17_33
.Ltmp1224:
# %bb.34:                               # %while.end.i158
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_plus_uconst 4, DW_OP_deref, DW_OP_LLVM_fragment 8 8] $rsp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dn <- $eax
	.loc	0 102 26 is_stmt 1              # x264_src/output/matroska_ebml.c:102:26
	movq	40(%rbx), %rdi
	.loc	0 102 32 is_stmt 0              # x264_src/output/matroska_ebml.c:102:32
	movl	%r12d, %esi
	.loc	0 102 14                        # x264_src/output/matroska_ebml.c:102:14
	callq	realloc@PLT
.Ltmp1225:
	#DEBUG_VALUE: dp <- $rax
	.loc	0 103 14 is_stmt 1              # x264_src/output/matroska_ebml.c:103:14
	testq	%rax, %rax
.Ltmp1226:
	.loc	0 103 13 is_stmt 0              # x264_src/output/matroska_ebml.c:103:13
	je	.LBB17_28
.Ltmp1227:
# %bb.35:                               # %if.end.i163
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_plus_uconst 4, DW_OP_deref, DW_OP_LLVM_fragment 8 8] $rsp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	#DEBUG_VALUE: dp <- $rax
	.loc	0 106 17 is_stmt 1              # x264_src/output/matroska_ebml.c:106:17
	movq	%rax, 40(%rbx)
	.loc	0 107 18                        # x264_src/output/matroska_ebml.c:107:18
	movl	%r12d, 52(%rbx)
.Ltmp1228:
	.loc	0 110 33                        # x264_src/output/matroska_ebml.c:110:33
	movl	48(%rbx), %ecx
	movl	4(%rsp), %edx                   # 4-byte Reload
	jmp	.LBB17_40
.Ltmp1229:
.LBB17_28:
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	.loc	0 0 33 is_stmt 0                # x264_src/output/matroska_ebml.c:0:33
	movl	$-1, %eax
.Ltmp1230:
	.loc	0 103 13 is_stmt 1              # x264_src/output/matroska_ebml.c:103:13
	jmp	.LBB17_43
.Ltmp1231:
.LBB17_37:                              # %entry.if.end11_crit_edge.i116
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1232:
.LBB17_38:                              # %if.end11.i119
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 4
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 0 0 is_stmt 0                 # x264_src/output/matroska_ebml.c:0:0
	orb	$16, %dl
.Ltmp1233:
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	.loc	0 110 28                        # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	%dl, (%rax,%rcx)
	movb	%r15b, 1(%rax,%rcx)
	movb	%r14b, 2(%rax,%rcx)
	movb	%bpl, 3(%rax,%rcx)
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	jmp	.LBB17_41
.Ltmp1234:
.LBB17_39:                              # %entry.if.end11_crit_edge.i143
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 23                        # x264_src/output/matroska_ebml.c:110:23
	movq	40(%rbx), %rax
.Ltmp1235:
.LBB17_40:                              # %if.end11.i146
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	#DEBUG_VALUE: mk_append_context_data:c <- $rbx
	#DEBUG_VALUE: mk_append_context_data:size <- 5
	#DEBUG_VALUE: mk_append_context_data:ns <- $r13d
	.loc	0 110 28 is_stmt 0              # x264_src/output/matroska_ebml.c:110:28
	movl	%ecx, %ecx
	.loc	0 110 5                         # x264_src/output/matroska_ebml.c:110:5
	movb	$8, (%rax,%rcx)
	movb	%dl, 1(%rax,%rcx)
	movb	%r15b, 2(%rax,%rcx)
	movb	%r14b, 3(%rax,%rcx)
	movb	%bpl, 4(%rax,%rcx)
.Ltmp1236:
.LBB17_41:                              # %cleanup
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- $ebp
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 8 8] $dl
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 16 8] $r15b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 24 8] $r14b
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 112 14 is_stmt 1              # x264_src/output/matroska_ebml.c:112:14
	movl	%r13d, 48(%rbx)
.Ltmp1237:
.LBB17_42:                              # %cleanup
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 32 8] $bpl
	.loc	0 0 14 is_stmt 0                # x264_src/output/matroska_ebml.c:0:14
	xorl	%eax, %eax
.Ltmp1238:
.LBB17_43:                              # %cleanup
	#DEBUG_VALUE: mk_write_size:c <- $rbx
	#DEBUG_VALUE: mk_write_size:size <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: mk_write_size:c_size <- [DW_OP_LLVM_fragment 0 8] 8
	.loc	0 155 1 epilogue_begin is_stmt 1 # x264_src/output/matroska_ebml.c:155:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp1239:
	#DEBUG_VALUE: mk_write_size:c <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1240:
.Lfunc_end17:
	.size	mk_write_size, .Lfunc_end17-mk_write_size
	.cfi_endproc
                                        # -- End function
	.type	.L.str.1,@object                # @.str.1
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1:
	.asciz	"wb"
	.size	.L.str.1, 3

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"Haali Matroska Writer b0"
	.size	.L.str.3, 25

	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	266                             # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
	.long	.Ldebug_loc93-.Lloclists_table_base0
	.long	.Ldebug_loc94-.Lloclists_table_base0
	.long	.Ldebug_loc95-.Lloclists_table_base0
	.long	.Ldebug_loc96-.Lloclists_table_base0
	.long	.Ldebug_loc97-.Lloclists_table_base0
	.long	.Ldebug_loc98-.Lloclists_table_base0
	.long	.Ldebug_loc99-.Lloclists_table_base0
	.long	.Ldebug_loc100-.Lloclists_table_base0
	.long	.Ldebug_loc101-.Lloclists_table_base0
	.long	.Ldebug_loc102-.Lloclists_table_base0
	.long	.Ldebug_loc103-.Lloclists_table_base0
	.long	.Ldebug_loc104-.Lloclists_table_base0
	.long	.Ldebug_loc105-.Lloclists_table_base0
	.long	.Ldebug_loc106-.Lloclists_table_base0
	.long	.Ldebug_loc107-.Lloclists_table_base0
	.long	.Ldebug_loc108-.Lloclists_table_base0
	.long	.Ldebug_loc109-.Lloclists_table_base0
	.long	.Ldebug_loc110-.Lloclists_table_base0
	.long	.Ldebug_loc111-.Lloclists_table_base0
	.long	.Ldebug_loc112-.Lloclists_table_base0
	.long	.Ldebug_loc113-.Lloclists_table_base0
	.long	.Ldebug_loc114-.Lloclists_table_base0
	.long	.Ldebug_loc115-.Lloclists_table_base0
	.long	.Ldebug_loc116-.Lloclists_table_base0
	.long	.Ldebug_loc117-.Lloclists_table_base0
	.long	.Ldebug_loc118-.Lloclists_table_base0
	.long	.Ldebug_loc119-.Lloclists_table_base0
	.long	.Ldebug_loc120-.Lloclists_table_base0
	.long	.Ldebug_loc121-.Lloclists_table_base0
	.long	.Ldebug_loc122-.Lloclists_table_base0
	.long	.Ldebug_loc123-.Lloclists_table_base0
	.long	.Ldebug_loc124-.Lloclists_table_base0
	.long	.Ldebug_loc125-.Lloclists_table_base0
	.long	.Ldebug_loc126-.Lloclists_table_base0
	.long	.Ldebug_loc127-.Lloclists_table_base0
	.long	.Ldebug_loc128-.Lloclists_table_base0
	.long	.Ldebug_loc129-.Lloclists_table_base0
	.long	.Ldebug_loc130-.Lloclists_table_base0
	.long	.Ldebug_loc131-.Lloclists_table_base0
	.long	.Ldebug_loc132-.Lloclists_table_base0
	.long	.Ldebug_loc133-.Lloclists_table_base0
	.long	.Ldebug_loc134-.Lloclists_table_base0
	.long	.Ldebug_loc135-.Lloclists_table_base0
	.long	.Ldebug_loc136-.Lloclists_table_base0
	.long	.Ldebug_loc137-.Lloclists_table_base0
	.long	.Ldebug_loc138-.Lloclists_table_base0
	.long	.Ldebug_loc139-.Lloclists_table_base0
	.long	.Ldebug_loc140-.Lloclists_table_base0
	.long	.Ldebug_loc141-.Lloclists_table_base0
	.long	.Ldebug_loc142-.Lloclists_table_base0
	.long	.Ldebug_loc143-.Lloclists_table_base0
	.long	.Ldebug_loc144-.Lloclists_table_base0
	.long	.Ldebug_loc145-.Lloclists_table_base0
	.long	.Ldebug_loc146-.Lloclists_table_base0
	.long	.Ldebug_loc147-.Lloclists_table_base0
	.long	.Ldebug_loc148-.Lloclists_table_base0
	.long	.Ldebug_loc149-.Lloclists_table_base0
	.long	.Ldebug_loc150-.Lloclists_table_base0
	.long	.Ldebug_loc151-.Lloclists_table_base0
	.long	.Ldebug_loc152-.Lloclists_table_base0
	.long	.Ldebug_loc153-.Lloclists_table_base0
	.long	.Ldebug_loc154-.Lloclists_table_base0
	.long	.Ldebug_loc155-.Lloclists_table_base0
	.long	.Ldebug_loc156-.Lloclists_table_base0
	.long	.Ldebug_loc157-.Lloclists_table_base0
	.long	.Ldebug_loc158-.Lloclists_table_base0
	.long	.Ldebug_loc159-.Lloclists_table_base0
	.long	.Ldebug_loc160-.Lloclists_table_base0
	.long	.Ldebug_loc161-.Lloclists_table_base0
	.long	.Ldebug_loc162-.Lloclists_table_base0
	.long	.Ldebug_loc163-.Lloclists_table_base0
	.long	.Ldebug_loc164-.Lloclists_table_base0
	.long	.Ldebug_loc165-.Lloclists_table_base0
	.long	.Ldebug_loc166-.Lloclists_table_base0
	.long	.Ldebug_loc167-.Lloclists_table_base0
	.long	.Ldebug_loc168-.Lloclists_table_base0
	.long	.Ldebug_loc169-.Lloclists_table_base0
	.long	.Ldebug_loc170-.Lloclists_table_base0
	.long	.Ldebug_loc171-.Lloclists_table_base0
	.long	.Ldebug_loc172-.Lloclists_table_base0
	.long	.Ldebug_loc173-.Lloclists_table_base0
	.long	.Ldebug_loc174-.Lloclists_table_base0
	.long	.Ldebug_loc175-.Lloclists_table_base0
	.long	.Ldebug_loc176-.Lloclists_table_base0
	.long	.Ldebug_loc177-.Lloclists_table_base0
	.long	.Ldebug_loc178-.Lloclists_table_base0
	.long	.Ldebug_loc179-.Lloclists_table_base0
	.long	.Ldebug_loc180-.Lloclists_table_base0
	.long	.Ldebug_loc181-.Lloclists_table_base0
	.long	.Ldebug_loc182-.Lloclists_table_base0
	.long	.Ldebug_loc183-.Lloclists_table_base0
	.long	.Ldebug_loc184-.Lloclists_table_base0
	.long	.Ldebug_loc185-.Lloclists_table_base0
	.long	.Ldebug_loc186-.Lloclists_table_base0
	.long	.Ldebug_loc187-.Lloclists_table_base0
	.long	.Ldebug_loc188-.Lloclists_table_base0
	.long	.Ldebug_loc189-.Lloclists_table_base0
	.long	.Ldebug_loc190-.Lloclists_table_base0
	.long	.Ldebug_loc191-.Lloclists_table_base0
	.long	.Ldebug_loc192-.Lloclists_table_base0
	.long	.Ldebug_loc193-.Lloclists_table_base0
	.long	.Ldebug_loc194-.Lloclists_table_base0
	.long	.Ldebug_loc195-.Lloclists_table_base0
	.long	.Ldebug_loc196-.Lloclists_table_base0
	.long	.Ldebug_loc197-.Lloclists_table_base0
	.long	.Ldebug_loc198-.Lloclists_table_base0
	.long	.Ldebug_loc199-.Lloclists_table_base0
	.long	.Ldebug_loc200-.Lloclists_table_base0
	.long	.Ldebug_loc201-.Lloclists_table_base0
	.long	.Ldebug_loc202-.Lloclists_table_base0
	.long	.Ldebug_loc203-.Lloclists_table_base0
	.long	.Ldebug_loc204-.Lloclists_table_base0
	.long	.Ldebug_loc205-.Lloclists_table_base0
	.long	.Ldebug_loc206-.Lloclists_table_base0
	.long	.Ldebug_loc207-.Lloclists_table_base0
	.long	.Ldebug_loc208-.Lloclists_table_base0
	.long	.Ldebug_loc209-.Lloclists_table_base0
	.long	.Ldebug_loc210-.Lloclists_table_base0
	.long	.Ldebug_loc211-.Lloclists_table_base0
	.long	.Ldebug_loc212-.Lloclists_table_base0
	.long	.Ldebug_loc213-.Lloclists_table_base0
	.long	.Ldebug_loc214-.Lloclists_table_base0
	.long	.Ldebug_loc215-.Lloclists_table_base0
	.long	.Ldebug_loc216-.Lloclists_table_base0
	.long	.Ldebug_loc217-.Lloclists_table_base0
	.long	.Ldebug_loc218-.Lloclists_table_base0
	.long	.Ldebug_loc219-.Lloclists_table_base0
	.long	.Ldebug_loc220-.Lloclists_table_base0
	.long	.Ldebug_loc221-.Lloclists_table_base0
	.long	.Ldebug_loc222-.Lloclists_table_base0
	.long	.Ldebug_loc223-.Lloclists_table_base0
	.long	.Ldebug_loc224-.Lloclists_table_base0
	.long	.Ldebug_loc225-.Lloclists_table_base0
	.long	.Ldebug_loc226-.Lloclists_table_base0
	.long	.Ldebug_loc227-.Lloclists_table_base0
	.long	.Ldebug_loc228-.Lloclists_table_base0
	.long	.Ldebug_loc229-.Lloclists_table_base0
	.long	.Ldebug_loc230-.Lloclists_table_base0
	.long	.Ldebug_loc231-.Lloclists_table_base0
	.long	.Ldebug_loc232-.Lloclists_table_base0
	.long	.Ldebug_loc233-.Lloclists_table_base0
	.long	.Ldebug_loc234-.Lloclists_table_base0
	.long	.Ldebug_loc235-.Lloclists_table_base0
	.long	.Ldebug_loc236-.Lloclists_table_base0
	.long	.Ldebug_loc237-.Lloclists_table_base0
	.long	.Ldebug_loc238-.Lloclists_table_base0
	.long	.Ldebug_loc239-.Lloclists_table_base0
	.long	.Ldebug_loc240-.Lloclists_table_base0
	.long	.Ldebug_loc241-.Lloclists_table_base0
	.long	.Ldebug_loc242-.Lloclists_table_base0
	.long	.Ldebug_loc243-.Lloclists_table_base0
	.long	.Ldebug_loc244-.Lloclists_table_base0
	.long	.Ldebug_loc245-.Lloclists_table_base0
	.long	.Ldebug_loc246-.Lloclists_table_base0
	.long	.Ldebug_loc247-.Lloclists_table_base0
	.long	.Ldebug_loc248-.Lloclists_table_base0
	.long	.Ldebug_loc249-.Lloclists_table_base0
	.long	.Ldebug_loc250-.Lloclists_table_base0
	.long	.Ldebug_loc251-.Lloclists_table_base0
	.long	.Ldebug_loc252-.Lloclists_table_base0
	.long	.Ldebug_loc253-.Lloclists_table_base0
	.long	.Ldebug_loc254-.Lloclists_table_base0
	.long	.Ldebug_loc255-.Lloclists_table_base0
	.long	.Ldebug_loc256-.Lloclists_table_base0
	.long	.Ldebug_loc257-.Lloclists_table_base0
	.long	.Ldebug_loc258-.Lloclists_table_base0
	.long	.Ldebug_loc259-.Lloclists_table_base0
	.long	.Ldebug_loc260-.Lloclists_table_base0
	.long	.Ldebug_loc261-.Lloclists_table_base0
	.long	.Ldebug_loc262-.Lloclists_table_base0
	.long	.Ldebug_loc263-.Lloclists_table_base0
	.long	.Ldebug_loc264-.Lloclists_table_base0
	.long	.Ldebug_loc265-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin0-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp1-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp23-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end0-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp6-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp6-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp37-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp6-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp12-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp27-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp27-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp29-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp25-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp29-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp32-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp30-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp34-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp51-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp51-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp52-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp52-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp53-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp53-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp56-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp58-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp58-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp54-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp56-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp59-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp59-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp55-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp55-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp56-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp43-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp44-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp57-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp70-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp443-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp443-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp66-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp79-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp74-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp74-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp79-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp79-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp72-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp72-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp79-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	224                             # 96
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	232                             # 104
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	240                             # 112
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	248                             # 120
	.byte	0                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp70-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp70-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp71-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp91-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp350-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp350-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp354-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp354-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp360-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp364-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp364-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp380-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp380-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp384-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp384-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	134                             # 17030
	.byte	133                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	32                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp103-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp103-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	134                             # 17030
	.byte	133                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	134                             # 18446744073709551494
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp89-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp93-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp94-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp95-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp97-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp97-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp101-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp103-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp121-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	129                             # 18446744073709551489
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp104-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp121-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp108-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp109-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp109-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp110-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp112-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp112-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp116-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp123-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp124-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp124-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp125-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp127-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp131-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	32                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp149-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp133-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	247                             # 18446744073709551607
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp135-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp139-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp140-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp140-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp141-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp141-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp143-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp143-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp147-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp149-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	129                             # 18446744073709551489
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp150-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp167-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp154-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp156-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp156-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp158-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp158-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp162-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp165-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp170-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp170-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp177-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp179-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp229-.Lfunc_begin0         #   ending offset
	.byte	32                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp179-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp195-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp229-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp179-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp198-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	242                             # 18446744073709551602
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp181-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp198-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp185-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp186-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp186-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp187-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp187-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp189-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp189-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp193-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	129                             # 18446744073709551489
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp196-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp213-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp200-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp201-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp201-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp202-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp202-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp204-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp204-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp208-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp211-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp229-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp215-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp216-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp216-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp217-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp217-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp219-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp219-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp223-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp225-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp275-.Lfunc_begin0         #   ending offset
	.byte	32                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp225-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp241-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp241-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp275-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp225-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp244-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	243                             # 18446744073709551603
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp227-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp244-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp231-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp232-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp233-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp233-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp235-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp235-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp239-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp241-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	129                             # 18446744073709551489
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp242-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp246-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp247-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp247-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp248-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp250-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp250-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp254-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp257-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp275-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp261-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp262-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp263-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp263-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp265-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp265-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp269-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp271-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	130                             # 18446744073709551490
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp273-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp277-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp278-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp278-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp279-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp279-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp281-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp281-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp285-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp293-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp311-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp297-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp298-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp298-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp299-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp299-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp301-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp301-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp305-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp307-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	32                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp307-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp323-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp323-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp307-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp326-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	66                              # 66
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	135                             # 18446744073709551495
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp309-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp326-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp313-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp314-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp314-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp315-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp317-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp317-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp321-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc93:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp329-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp346-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc94:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp333-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp334-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp334-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp335-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp335-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp337-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc95:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp337-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp341-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc96:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp384-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp388-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp388-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc97:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp417-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp417-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp441-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc98:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp486-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc99:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc100:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp461-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc101:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp446-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp451-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp453-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp453-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp455-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp455-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp457-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp457-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp459-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp459-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp461-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	53                              # DW_OP_lit5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp461-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp462-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	54                              # DW_OP_lit6
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc102:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp484-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc103:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp469-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc104:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp474-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp474-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp475-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp475-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp477-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc105:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc106:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp489-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp489-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc107:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp490-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp490-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp493-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp493-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc108:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp490-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp490-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp518-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp518-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc109:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp519-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc110:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc111:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp505-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp506-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp506-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp507-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp507-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp509-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc112:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp509-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp513-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc113:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp568-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp568-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp569-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc114:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin5-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp535-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp535-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc115:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc116:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc117:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc118:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc119:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp544-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp545-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp545-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp546-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp546-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp548-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc120:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp548-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp569-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end5-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc121:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin6-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp598-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end6-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc122:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp582-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp597-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc123:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp586-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp587-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp587-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp588-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp588-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp590-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc124:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp590-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp594-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc125:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp650-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end7-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc126:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin7-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp621-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc127:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp601-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp621-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	68                              # 68
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	137                             # 18446744073709551497
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc128:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp621-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc129:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp609-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc130:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp612-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc131:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp618-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	132                             # 18446744073709551492
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc132:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp619-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc133:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp623-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp627-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc134:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp627-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp631-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc135:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc136:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc137:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	6                               # Loc expr size
	.byte	158                             # DW_OP_implicit_value
	.byte	4                               # 4
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               #  
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc138:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc139:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc140:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc141:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp649-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc142:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp639-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp640-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc143:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp646-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc144:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp692-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp692-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc145:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp693-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp693-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc146:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp694-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end8-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc147:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin8-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp657-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp657-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp672-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc148:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp672-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	99                              # 99
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	162                             # 18446744073709551522
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc149:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp672-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc150:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp659-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp661-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp661-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp663-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc151:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp663-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp667-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc152:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp690-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc153:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp679-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp680-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp680-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp681-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp681-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp683-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc154:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp683-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp687-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc155:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp700-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp722-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp722-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp723-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp723-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc156:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp723-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc157:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp723-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc158:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp703-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp723-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc159:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp707-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp709-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp709-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc160:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp711-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc161:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin10-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp727-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp730-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp731-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end10-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc162:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin11-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp737-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp737-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp867-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp867-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end11-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc163:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp739-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp746-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp772-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc164:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp758-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp769-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc165:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp774-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc166:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp776-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	16                              # DW_OP_constu
	.byte	163                             # 163
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc167:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp776-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	26                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	163                             # 18446744073709551523
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc168:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp778-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc169:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp782-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp783-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp784-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp786-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc170:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp786-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp790-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc171:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	16                              # DW_OP_constu
	.byte	129                             # 18446744073709551489
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	1                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc172:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp799-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp814-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc173:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp803-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp804-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp804-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp805-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp805-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp807-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc174:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp807-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp811-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc175:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp815-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp815-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp833-.Lfunc_begin0         #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp837-.Lfunc_begin0         #   ending offset
	.byte	9                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp837-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp841-.Lfunc_begin0         #   ending offset
	.byte	8                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp853-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp854-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc176:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp819-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp836-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc177:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp823-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp824-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp824-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp825-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp825-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp827-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc178:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp827-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp831-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc179:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp841-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp857-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc180:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp845-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp846-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp846-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp847-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp847-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp849-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc181:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp849-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp853-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc182:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp887-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp892-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc183:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp888-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp888-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp892-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp892-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp919-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc184:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin13-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp883-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp918-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp918-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp919-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp919-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end13-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc185:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp883-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp887-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp887-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp890-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp892-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc186:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp885-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp886-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp890-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp900-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc187:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp903-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp918-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc188:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp907-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp908-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp908-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp909-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp909-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp911-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc189:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp911-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp915-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc190:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp923-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp923-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc191:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin14-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp923-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp923-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp933-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp933-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc192:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp922-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp927-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp927-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp928-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp928-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp929-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp929-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp970-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp970-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp991-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp991-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1011-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end14-.Lfunc_begin0     #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc193:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp933-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp934-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc194:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp934-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp959-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc195:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc196:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	97                              # DW_OP_reg17
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc197:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp953-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp954-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp954-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp955-.Lfunc_begin0         #   ending offset
	.byte	8                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp955-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp956-.Lfunc_begin0         #   ending offset
	.byte	11                              # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp956-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc198:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp938-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp961-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc199:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp942-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp943-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp943-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp944-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp944-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp946-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc200:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp946-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp950-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc201:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp990-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc202:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc203:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp969-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp969-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp988-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc204:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp966-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc205:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp972-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp973-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp973-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp974-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp974-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp976-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc206:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp976-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc207:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp991-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1010-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc208:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp992-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp996-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp996-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc209:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp994-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1002-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc210:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1000-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1004-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1006-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc211:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin15-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1014-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1022-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end15-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc212:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc213:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc214:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1029-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc215:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1033-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1034-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1035-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc216:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1037-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc217:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1130-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc218:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin16-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end16-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc219:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1052-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1053-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   ending offset
	.byte	11                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1114-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1114-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	8                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   ending offset
	.byte	10                              # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1127-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1131-.Lfunc_begin0        #   ending offset
	.byte	5                               # Loc expr size
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc220:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc221:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc222:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1059-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc223:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1063-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1064-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1065-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc224:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1067-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc225:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1074-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1090-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc226:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1078-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1079-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1080-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc227:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1082-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1086-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc228:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1128-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc229:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc230:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc231:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1094-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc232:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1098-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1099-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1100-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1100-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc233:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1102-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc234:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1128-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc235:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1110-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1128-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc236:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1114-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1115-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1116-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1116-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc237:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1118-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1122-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc238:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1239-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc239:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin17-.Lfunc_begin0   #   starting offset
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc240:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1133-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1151-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1172-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1193-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   ending offset
	.byte	12                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1219-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1219-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	17                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	119                             # DW_OP_breg7
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   ending offset
	.byte	4                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   ending offset
	.byte	15                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   ending offset
	.byte	16                              # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	95                              # super-register DW_OP_reg15
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1237-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   ending offset
	.byte	9                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	86                              # super-register DW_OP_reg6
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1238-.Lfunc_begin0        #   starting offset
	.uleb128 .Lfunc_end17-.Lfunc_begin0     #   ending offset
	.byte	4                               # Loc expr size
	.byte	56                              # DW_OP_lit8
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc241:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc242:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	49                              # DW_OP_lit1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc243:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1138-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc244:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1142-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1143-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1143-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1144-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1144-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1146-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc245:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1146-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc246:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc247:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	50                              # DW_OP_lit2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc248:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1156-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc249:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1160-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1161-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1161-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1162-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1162-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc250:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1164-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc251:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc252:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	51                              # DW_OP_lit3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc253:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1177-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc254:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1181-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1182-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1183-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1183-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc255:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1185-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc256:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc257:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	52                              # DW_OP_lit4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc258:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1198-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc259:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1202-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1203-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1204-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1206-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc260:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1206-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc261:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc262:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	53                              # DW_OP_lit5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	2                               # Loc expr size
	.byte	53                              # DW_OP_lit5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc263:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1216-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc264:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1221-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1222-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1222-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1223-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1223-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc265:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp1225-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1229-.Lfunc_begin0        #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	110                             # DW_AT_linkage_name
	.byte	37                              # DW_FORM_strx1
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	55                              # DW_TAG_restrict_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	11                              # DW_TAG_lexical_block
	.byte	1                               # DW_CHILDREN_yes
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	54                              # DW_AT_calling_convention
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	54                              # DW_AT_calling_convention
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	55                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	56                              # Abbreviation Code
	.byte	23                              # DW_TAG_union_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	57                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	58                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	59                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	60                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	61                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x19ff DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	2                               # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin0      # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x8 DW_TAG_variable
	.long	51                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	302                             # DW_AT_decl_line
	.byte	3                               # Abbrev [3] 0x33:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x38:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x3f:0x4 DW_TAG_base_type
	.byte	3                               # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	6                               # Abbrev [6] 0x43:0x4 DW_TAG_base_type
	.byte	4                               # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	7                               # Abbrev [7] 0x47:0xb DW_TAG_variable
	.long	82                              # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	305                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	0
	.byte	3                               # Abbrev [3] 0x52:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x57:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	2                               # Abbrev [2] 0x5e:0x8 DW_TAG_variable
	.long	102                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	340                             # DW_AT_decl_line
	.byte	3                               # Abbrev [3] 0x66:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x6b:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	7                               # Abbrev [7] 0x72:0xb DW_TAG_variable
	.long	125                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	352                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	1
	.byte	3                               # Abbrev [3] 0x7d:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x82:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	25                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x89:0x4 DW_TAG_base_type
	.byte	5                               # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0x8d:0x4 DW_TAG_base_type
	.byte	6                               # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0x91:0x5 DW_TAG_pointer_type
	.long	63                              # DW_AT_type
	.byte	9                               # Abbrev [9] 0x96:0x1 DW_TAG_pointer_type
	.byte	10                              # Abbrev [10] 0x97:0x29 DW_TAG_subprogram
	.byte	7                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	192                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x9f:0x8 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0xa7:0x8 DW_TAG_formal_parameter
	.byte	10                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0xaf:0x8 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0xb7:0x8 DW_TAG_variable
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0xc0:0x5 DW_TAG_pointer_type
	.long	197                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0xc5:0x8 DW_TAG_typedef
	.long	205                             # DW_AT_type
	.byte	79                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	14                              # Abbrev [14] 0xcd:0x4e DW_TAG_structure_type
	.byte	79                              # DW_AT_name
	.byte	56                              # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	31                              # DW_AT_decl_line
	.byte	15                              # Abbrev [15] 0xd2:0x9 DW_TAG_member
	.byte	8                               # DW_AT_name
	.long	283                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0xdb:0x9 DW_TAG_member
	.byte	9                               # DW_AT_name
	.long	288                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0xe4:0x9 DW_TAG_member
	.byte	10                              # DW_AT_name
	.long	283                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0xed:0x9 DW_TAG_member
	.byte	11                              # DW_AT_name
	.long	293                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0xf6:0x9 DW_TAG_member
	.byte	75                              # DW_AT_name
	.long	839                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0xff:0x9 DW_TAG_member
	.byte	76                              # DW_AT_name
	.long	150                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x108:0x9 DW_TAG_member
	.byte	77                              # DW_AT_name
	.long	839                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x111:0x9 DW_TAG_member
	.byte	78                              # DW_AT_name
	.long	839                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x11b:0x5 DW_TAG_pointer_type
	.long	205                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x120:0x5 DW_TAG_pointer_type
	.long	283                             # DW_AT_type
	.byte	8                               # Abbrev [8] 0x125:0x5 DW_TAG_pointer_type
	.long	298                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x12a:0x8 DW_TAG_typedef
	.long	306                             # DW_AT_type
	.byte	74                              # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	14                              # Abbrev [14] 0x132:0x96 DW_TAG_structure_type
	.byte	74                              # DW_AT_name
	.byte	104                             # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	15                              # Abbrev [15] 0x137:0x9 DW_TAG_member
	.byte	12                              # DW_AT_name
	.long	456                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x140:0x9 DW_TAG_member
	.byte	56                              # DW_AT_name
	.long	839                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x149:0x9 DW_TAG_member
	.byte	58                              # DW_AT_name
	.long	192                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x152:0x9 DW_TAG_member
	.byte	59                              # DW_AT_name
	.long	192                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x15b:0x9 DW_TAG_member
	.byte	60                              # DW_AT_name
	.long	192                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x164:0x9 DW_TAG_member
	.byte	61                              # DW_AT_name
	.long	192                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x16d:0x9 DW_TAG_member
	.byte	62                              # DW_AT_name
	.long	192                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x176:0x9 DW_TAG_member
	.byte	63                              # DW_AT_name
	.long	843                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x17f:0x9 DW_TAG_member
	.byte	66                              # DW_AT_name
	.long	843                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x188:0x9 DW_TAG_member
	.byte	67                              # DW_AT_name
	.long	843                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x191:0x9 DW_TAG_member
	.byte	68                              # DW_AT_name
	.long	843                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x19a:0x9 DW_TAG_member
	.byte	69                              # DW_AT_name
	.long	843                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1a3:0x9 DW_TAG_member
	.byte	70                              # DW_AT_name
	.long	768                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1ac:0x9 DW_TAG_member
	.byte	71                              # DW_AT_name
	.long	768                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	97                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1b5:0x9 DW_TAG_member
	.byte	72                              # DW_AT_name
	.long	768                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	98                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1be:0x9 DW_TAG_member
	.byte	73                              # DW_AT_name
	.long	768                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	99                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x1c8:0x5 DW_TAG_pointer_type
	.long	461                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x1cd:0x8 DW_TAG_typedef
	.long	469                             # DW_AT_type
	.byte	55                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.byte	7                               # DW_AT_decl_line
	.byte	14                              # Abbrev [14] 0x1d5:0x10b DW_TAG_structure_type
	.byte	54                              # DW_AT_name
	.byte	216                             # DW_AT_byte_size
	.byte	1                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	15                              # Abbrev [15] 0x1da:0x9 DW_TAG_member
	.byte	13                              # DW_AT_name
	.long	736                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1e3:0x9 DW_TAG_member
	.byte	15                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1ec:0x9 DW_TAG_member
	.byte	16                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1f5:0x9 DW_TAG_member
	.byte	17                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x1fe:0x9 DW_TAG_member
	.byte	18                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x207:0x9 DW_TAG_member
	.byte	19                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x210:0x9 DW_TAG_member
	.byte	20                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x219:0x9 DW_TAG_member
	.byte	21                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x222:0x9 DW_TAG_member
	.byte	22                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x22b:0x9 DW_TAG_member
	.byte	23                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x234:0x9 DW_TAG_member
	.byte	24                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x23d:0x9 DW_TAG_member
	.byte	25                              # DW_AT_name
	.long	145                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x246:0x9 DW_TAG_member
	.byte	26                              # DW_AT_name
	.long	740                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x24f:0x9 DW_TAG_member
	.byte	28                              # DW_AT_name
	.long	747                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x258:0x9 DW_TAG_member
	.byte	29                              # DW_AT_name
	.long	736                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x261:0x9 DW_TAG_member
	.byte	30                              # DW_AT_name
	.long	736                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x26a:0x9 DW_TAG_member
	.byte	31                              # DW_AT_name
	.long	752                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x273:0x9 DW_TAG_member
	.byte	34                              # DW_AT_name
	.long	764                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x27c:0x9 DW_TAG_member
	.byte	36                              # DW_AT_name
	.long	768                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	130                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x285:0x9 DW_TAG_member
	.byte	38                              # DW_AT_name
	.long	772                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	131                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x28e:0x9 DW_TAG_member
	.byte	39                              # DW_AT_name
	.long	784                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x297:0x9 DW_TAG_member
	.byte	41                              # DW_AT_name
	.long	793                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2a0:0x9 DW_TAG_member
	.byte	43                              # DW_AT_name
	.long	801                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2a9:0x9 DW_TAG_member
	.byte	45                              # DW_AT_name
	.long	808                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2b2:0x9 DW_TAG_member
	.byte	47                              # DW_AT_name
	.long	747                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2bb:0x9 DW_TAG_member
	.byte	48                              # DW_AT_name
	.long	150                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2c4:0x9 DW_TAG_member
	.byte	49                              # DW_AT_name
	.long	815                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2cd:0x9 DW_TAG_member
	.byte	52                              # DW_AT_name
	.long	736                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	15                              # Abbrev [15] 0x2d6:0x9 DW_TAG_member
	.byte	53                              # DW_AT_name
	.long	827                             # DW_AT_type
	.byte	1                               # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	196                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x2e0:0x4 DW_TAG_base_type
	.byte	14                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	8                               # Abbrev [8] 0x2e4:0x5 DW_TAG_pointer_type
	.long	745                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x2e9:0x2 DW_TAG_structure_type
	.byte	27                              # DW_AT_name
                                        # DW_AT_declaration
	.byte	8                               # Abbrev [8] 0x2eb:0x5 DW_TAG_pointer_type
	.long	469                             # DW_AT_type
	.byte	13                              # Abbrev [13] 0x2f0:0x8 DW_TAG_typedef
	.long	760                             # DW_AT_type
	.byte	33                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x2f8:0x4 DW_TAG_base_type
	.byte	32                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0x2fc:0x4 DW_TAG_base_type
	.byte	35                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	5                               # Abbrev [5] 0x300:0x4 DW_TAG_base_type
	.byte	37                              # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x304:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x309:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x310:0x5 DW_TAG_pointer_type
	.long	789                             # DW_AT_type
	.byte	17                              # Abbrev [17] 0x315:0x4 DW_TAG_typedef
	.byte	40                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	13                              # Abbrev [13] 0x319:0x8 DW_TAG_typedef
	.long	760                             # DW_AT_type
	.byte	42                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	153                             # DW_AT_decl_line
	.byte	8                               # Abbrev [8] 0x321:0x5 DW_TAG_pointer_type
	.long	806                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x326:0x2 DW_TAG_structure_type
	.byte	44                              # DW_AT_name
                                        # DW_AT_declaration
	.byte	8                               # Abbrev [8] 0x328:0x5 DW_TAG_pointer_type
	.long	813                             # DW_AT_type
	.byte	16                              # Abbrev [16] 0x32d:0x2 DW_TAG_structure_type
	.byte	46                              # DW_AT_name
                                        # DW_AT_declaration
	.byte	13                              # Abbrev [13] 0x32f:0x8 DW_TAG_typedef
	.long	823                             # DW_AT_type
	.byte	51                              # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	18                              # DW_AT_decl_line
	.byte	5                               # Abbrev [5] 0x337:0x4 DW_TAG_base_type
	.byte	50                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	3                               # Abbrev [3] 0x33b:0xc DW_TAG_array_type
	.long	63                              # DW_AT_type
	.byte	4                               # Abbrev [4] 0x340:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	20                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x347:0x4 DW_TAG_base_type
	.byte	57                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	13                              # Abbrev [13] 0x34b:0x8 DW_TAG_typedef
	.long	851                             # DW_AT_type
	.byte	65                              # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.byte	27                              # DW_AT_decl_line
	.byte	13                              # Abbrev [13] 0x353:0x8 DW_TAG_typedef
	.long	760                             # DW_AT_type
	.byte	64                              # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	18                              # Abbrev [18] 0x35b:0x29 DW_TAG_subprogram
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x35f:0x8 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	209                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x367:0x8 DW_TAG_variable
	.byte	8                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	211                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	19                              # Abbrev [19] 0x36f:0xa DW_TAG_lexical_block
	.byte	12                              # Abbrev [12] 0x370:0x8 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	213                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	19                              # Abbrev [19] 0x379:0xa DW_TAG_lexical_block
	.byte	12                              # Abbrev [12] 0x37a:0x8 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x384:0xa7 DW_TAG_subprogram
	.byte	2                               # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	114                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	287                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	293                             # DW_AT_type
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x394:0xa DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	126                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	287                             # DW_AT_decl_line
	.long	1093                            # DW_AT_type
	.byte	22                              # Abbrev [22] 0x39e:0xa DW_TAG_variable
	.byte	1                               # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	289                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x3a8:0x28 DW_TAG_inlined_subroutine
	.long	151                             # DW_AT_abstract_origin
	.byte	3                               # DW_AT_low_pc
	.long	.Ltmp11-.Ltmp5                  # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	295                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x3b6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	159                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x3bd:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	167                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x3c3:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	175                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x3c9:0x6 DW_TAG_variable
	.byte	2                               # DW_AT_location
	.long	183                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x3d0:0x36 DW_TAG_inlined_subroutine
	.long	859                             # DW_AT_abstract_origin
	.byte	4                               # DW_AT_low_pc
	.long	.Ltmp36-.Ltmp22                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	308                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x3de:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	863                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x3e5:0x6 DW_TAG_variable
	.byte	4                               # DW_AT_location
	.long	871                             # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x3eb:0xd DW_TAG_lexical_block
	.byte	4                               # DW_AT_low_pc
	.long	.Ltmp29-.Ltmp22                 # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x3f1:0x6 DW_TAG_variable
	.byte	3                               # DW_AT_location
	.long	880                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x3f8:0xd DW_TAG_lexical_block
	.byte	5                               # DW_AT_low_pc
	.long	.Ltmp36-.Ltmp29                 # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x3fe:0x6 DW_TAG_variable
	.byte	5                               # DW_AT_location
	.long	890                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x406:0x6 DW_TAG_call_site
	.long	1067                            # DW_AT_call_origin
	.byte	6                               # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x40c:0x6 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.byte	7                               # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x412:0x6 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.byte	8                               # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x418:0x6 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.byte	9                               # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x41e:0x6 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.byte	10                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x424:0x6 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.byte	11                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x42b:0x15 DW_TAG_subprogram
	.byte	84                              # DW_AT_linkage_name
	.byte	85                              # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.short	270                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	456                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x435:0x5 DW_TAG_formal_parameter
	.long	1088                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x43a:0x5 DW_TAG_formal_parameter
	.long	1088                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x440:0x5 DW_TAG_restrict_type
	.long	1093                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x445:0x5 DW_TAG_pointer_type
	.long	1098                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0x44a:0x5 DW_TAG_const_type
	.long	63                              # DW_AT_type
	.byte	33                              # Abbrev [33] 0x44f:0xb DW_TAG_subprogram
	.byte	86                              # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x454:0x5 DW_TAG_formal_parameter
	.long	150                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x45a:0x25 DW_TAG_subprogram
	.byte	12                              # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	151                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x466:0x6 DW_TAG_formal_parameter
	.byte	6                               # DW_AT_location
	.long	159                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x46c:0x6 DW_TAG_formal_parameter
	.byte	7                               # DW_AT_location
	.long	167                             # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x472:0x6 DW_TAG_formal_parameter
	.byte	8                               # DW_AT_location
	.long	175                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x478:0x6 DW_TAG_variable
	.byte	9                               # DW_AT_location
	.long	183                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	10                              # Abbrev [10] 0x47f:0x3b DW_TAG_subprogram
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x487:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x48f:0x8 DW_TAG_formal_parameter
	.byte	76                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	1210                            # DW_AT_type
	.byte	11                              # Abbrev [11] 0x497:0x8 DW_TAG_formal_parameter
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x49f:0x8 DW_TAG_variable
	.byte	89                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	19                              # Abbrev [19] 0x4a7:0x12 DW_TAG_lexical_block
	.byte	12                              # Abbrev [12] 0x4a8:0x8 DW_TAG_variable
	.byte	90                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x4b0:0x8 DW_TAG_variable
	.byte	91                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.long	150                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x4ba:0x5 DW_TAG_pointer_type
	.long	1215                            # DW_AT_type
	.byte	36                              # Abbrev [36] 0x4bf:0x1 DW_TAG_const_type
	.byte	10                              # Abbrev [10] 0x4c0:0x21 DW_TAG_subprogram
	.byte	92                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x4c8:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x4d0:0x8 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	117                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x4d8:0x8 DW_TAG_variable
	.byte	93                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	119                             # DW_AT_decl_line
	.long	1249                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x4e1:0xc DW_TAG_array_type
	.long	1261                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x4e6:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	5                               # Abbrev [5] 0x4ed:0x4 DW_TAG_base_type
	.byte	94                              # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	10                              # Abbrev [10] 0x4f1:0x31 DW_TAG_subprogram
	.byte	95                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x4f9:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x501:0x8 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x509:0x8 DW_TAG_formal_parameter
	.byte	96                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x511:0x8 DW_TAG_variable
	.byte	97                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.long	1314                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x519:0x8 DW_TAG_variable
	.byte	98                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	251                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x522:0xc DW_TAG_array_type
	.long	1261                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x527:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	10                              # Abbrev [10] 0x52e:0x21 DW_TAG_subprogram
	.byte	99                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x536:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x53e:0x8 DW_TAG_formal_parameter
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	130                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	12                              # Abbrev [12] 0x546:0x8 DW_TAG_variable
	.byte	100                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	132                             # DW_AT_decl_line
	.long	1359                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	3                               # Abbrev [3] 0x54f:0xc DW_TAG_array_type
	.long	1261                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x554:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	5                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	10                              # Abbrev [10] 0x55b:0x29 DW_TAG_subprogram
	.byte	101                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x563:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x56b:0x8 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	11                              # Abbrev [11] 0x573:0x8 DW_TAG_formal_parameter
	.byte	102                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	230                             # DW_AT_decl_line
	.long	1093                            # DW_AT_type
	.byte	12                              # Abbrev [12] 0x57b:0x8 DW_TAG_variable
	.byte	103                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	232                             # DW_AT_decl_line
	.long	815                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x584:0x7d9 DW_TAG_subprogram
	.byte	13                              # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	115                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x594:0xa DW_TAG_formal_parameter
	.byte	10                              # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x59e:0xa DW_TAG_formal_parameter
	.byte	11                              # DW_AT_location
	.byte	127                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	318                             # DW_AT_decl_line
	.long	1093                            # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5a8:0xa DW_TAG_formal_parameter
	.byte	12                              # DW_AT_location
	.byte	128                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	319                             # DW_AT_decl_line
	.long	1093                            # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5b2:0xa DW_TAG_formal_parameter
	.byte	13                              # DW_AT_location
	.byte	129                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	320                             # DW_AT_decl_line
	.long	1210                            # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5bc:0xa DW_TAG_formal_parameter
	.byte	14                              # DW_AT_location
	.byte	130                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	320                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5c6:0xa DW_TAG_formal_parameter
	.byte	15                              # DW_AT_location
	.byte	131                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	321                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5d0:0xa DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	66                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	322                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5da:0xa DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	132                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	323                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5e4:0xa DW_TAG_formal_parameter
	.byte	18                              # DW_AT_location
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	323                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5ee:0xa DW_TAG_formal_parameter
	.byte	19                              # DW_AT_location
	.byte	134                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x5f8:0xa DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.byte	135                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	324                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x602:0xa DW_TAG_variable
	.byte	22                              # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	326                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x60c:0xa DW_TAG_variable
	.byte	96                              # DW_AT_location
	.byte	136                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	326                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x616:0xa DW_TAG_variable
	.byte	97                              # DW_AT_location
	.byte	137                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	326                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x620:0x2d DW_TAG_inlined_subroutine
	.long	151                             # DW_AT_abstract_origin
	.byte	14                              # DW_AT_low_pc
	.long	.Ltmp86-.Ltmp68                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	334                             # DW_AT_call_line
	.byte	15                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x62e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	159                             # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x635:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	167                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x63c:0xa DW_TAG_formal_parameter
	.ascii	"\243\277\227\322\001"          # DW_AT_const_value
	.long	175                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x646:0x6 DW_TAG_variable
	.byte	21                              # DW_AT_location
	.long	183                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x64d:0x118 DW_TAG_inlined_subroutine
	.long	1265                            # DW_AT_abstract_origin
	.byte	15                              # DW_AT_low_pc
	.long	.Ltmp133-.Ltmp86                # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	336                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x65b:0x6 DW_TAG_formal_parameter
	.byte	23                              # DW_AT_location
	.long	1273                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x661:0x6 DW_TAG_formal_parameter
	.byte	24                              # DW_AT_location
	.long	1281                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x667:0x6 DW_TAG_formal_parameter
	.byte	25                              # DW_AT_location
	.long	1289                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x66d:0x6 DW_TAG_variable
	.byte	26                              # DW_AT_location
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x673:0x6 DW_TAG_variable
	.byte	27                              # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x679:0x60 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	15                              # DW_AT_low_pc
	.long	.Ltmp103-.Ltmp86                # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x686:0x6 DW_TAG_formal_parameter
	.byte	28                              # DW_AT_location
	.long	1224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x68c:0x6 DW_TAG_formal_parameter
	.byte	29                              # DW_AT_location
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x692:0x6 DW_TAG_variable
	.byte	30                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x698:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	15                              # DW_AT_low_pc
	.long	.Ltmp88-.Ltmp86                 # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x6a4:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	16                              # DW_AT_low_pc
	.long	.Ltmp103-.Ltmp88                # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x6b1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x6b8:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x6be:0x6 DW_TAG_variable
	.byte	31                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x6c4:0x13 DW_TAG_lexical_block
	.byte	17                              # DW_AT_low_pc
	.long	.Ltmp100-.Ltmp92                # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x6ca:0x6 DW_TAG_variable
	.byte	32                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x6d0:0x6 DW_TAG_variable
	.byte	33                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x6d9:0x56 DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp118-.Ltmp103               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	256                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x6e7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x6ee:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x6f4:0x6 DW_TAG_variable
	.byte	34                              # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x6fa:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	18                              # DW_AT_low_pc
	.long	.Ltmp118-.Ltmp103               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x707:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x70e:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x714:0x6 DW_TAG_variable
	.byte	35                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x71a:0x13 DW_TAG_lexical_block
	.byte	19                              # DW_AT_low_pc
	.long	.Ltmp115-.Ltmp107               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x720:0x6 DW_TAG_variable
	.byte	36                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x726:0x6 DW_TAG_variable
	.byte	37                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x72f:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	20                              # DW_AT_low_pc
	.long	.Ltmp133-.Ltmp118               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x73d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x744:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x74a:0x6 DW_TAG_variable
	.byte	38                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x750:0x13 DW_TAG_lexical_block
	.byte	21                              # DW_AT_low_pc
	.long	.Ltmp130-.Ltmp122               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x756:0x6 DW_TAG_variable
	.byte	39                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x75c:0x6 DW_TAG_variable
	.byte	40                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x765:0x11e DW_TAG_inlined_subroutine
	.long	1265                            # DW_AT_abstract_origin
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp179-.Ltmp133               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	337                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x773:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1273                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x77a:0x8 DW_TAG_formal_parameter
	.ascii	"\367\205\001"                  # DW_AT_const_value
	.long	1281                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x782:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1289                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x788:0x6 DW_TAG_variable
	.byte	41                              # DW_AT_location
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x78e:0x6 DW_TAG_variable
	.byte	42                              # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x794:0x63 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp149-.Ltmp133               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x7a1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x7a8:0x8 DW_TAG_formal_parameter
	.ascii	"\367\205\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x7b0:0x6 DW_TAG_variable
	.byte	43                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x7b6:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	22                              # DW_AT_low_pc
	.long	.Ltmp134-.Ltmp133               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x7c2:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	23                              # DW_AT_low_pc
	.long	.Ltmp149-.Ltmp134               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x7cf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x7d6:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x7dc:0x6 DW_TAG_variable
	.byte	44                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x7e2:0x13 DW_TAG_lexical_block
	.byte	24                              # DW_AT_low_pc
	.long	.Ltmp146-.Ltmp138               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x7e8:0x6 DW_TAG_variable
	.byte	45                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x7ee:0x6 DW_TAG_variable
	.byte	46                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x7f7:0x56 DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.byte	25                              # DW_AT_low_pc
	.long	.Ltmp164-.Ltmp149               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	256                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x805:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x80c:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x812:0x6 DW_TAG_variable
	.byte	47                              # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x818:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	25                              # DW_AT_low_pc
	.long	.Ltmp164-.Ltmp149               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x825:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x82c:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x832:0x6 DW_TAG_variable
	.byte	48                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x838:0x13 DW_TAG_lexical_block
	.byte	26                              # DW_AT_low_pc
	.long	.Ltmp161-.Ltmp153               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x83e:0x6 DW_TAG_variable
	.byte	49                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x844:0x6 DW_TAG_variable
	.byte	50                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x84d:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	27                              # DW_AT_low_pc
	.long	.Ltmp179-.Ltmp164               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x85b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x862:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x868:0x6 DW_TAG_variable
	.byte	51                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x86e:0x13 DW_TAG_lexical_block
	.byte	28                              # DW_AT_low_pc
	.long	.Ltmp176-.Ltmp168               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x874:0x6 DW_TAG_variable
	.byte	52                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x87a:0x6 DW_TAG_variable
	.byte	53                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x883:0x11e DW_TAG_inlined_subroutine
	.long	1265                            # DW_AT_abstract_origin
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp225-.Ltmp179               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	338                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x891:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1273                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x898:0x8 DW_TAG_formal_parameter
	.ascii	"\362\205\001"                  # DW_AT_const_value
	.long	1281                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x8a0:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	1289                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x8a6:0x6 DW_TAG_variable
	.byte	54                              # DW_AT_location
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x8ac:0x6 DW_TAG_variable
	.byte	55                              # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x8b2:0x63 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp195-.Ltmp179               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x8bf:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x8c6:0x8 DW_TAG_formal_parameter
	.ascii	"\362\205\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x8ce:0x6 DW_TAG_variable
	.byte	56                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x8d4:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	29                              # DW_AT_low_pc
	.long	.Ltmp180-.Ltmp179               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x8e0:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	30                              # DW_AT_low_pc
	.long	.Ltmp195-.Ltmp180               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x8ed:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x8f4:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x8fa:0x6 DW_TAG_variable
	.byte	57                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x900:0x13 DW_TAG_lexical_block
	.byte	31                              # DW_AT_low_pc
	.long	.Ltmp192-.Ltmp184               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x906:0x6 DW_TAG_variable
	.byte	58                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x90c:0x6 DW_TAG_variable
	.byte	59                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x915:0x56 DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp210-.Ltmp195               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	256                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x923:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x92a:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x930:0x6 DW_TAG_variable
	.byte	60                              # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x936:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp210-.Ltmp195               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x943:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x94a:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x950:0x6 DW_TAG_variable
	.byte	61                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x956:0x13 DW_TAG_lexical_block
	.byte	33                              # DW_AT_low_pc
	.long	.Ltmp207-.Ltmp199               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x95c:0x6 DW_TAG_variable
	.byte	62                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x962:0x6 DW_TAG_variable
	.byte	63                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x96b:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	34                              # DW_AT_low_pc
	.long	.Ltmp225-.Ltmp210               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x979:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x980:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x986:0x6 DW_TAG_variable
	.byte	64                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x98c:0x13 DW_TAG_lexical_block
	.byte	35                              # DW_AT_low_pc
	.long	.Ltmp222-.Ltmp214               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x992:0x6 DW_TAG_variable
	.byte	65                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x998:0x6 DW_TAG_variable
	.byte	66                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x9a1:0x11e DW_TAG_inlined_subroutine
	.long	1265                            # DW_AT_abstract_origin
	.byte	36                              # DW_AT_low_pc
	.long	.Ltmp271-.Ltmp225               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	339                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x9af:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1273                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x9b6:0x8 DW_TAG_formal_parameter
	.ascii	"\363\205\001"                  # DW_AT_const_value
	.long	1281                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0x9be:0x6 DW_TAG_formal_parameter
	.byte	8                               # DW_AT_const_value
	.long	1289                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x9c4:0x6 DW_TAG_variable
	.byte	67                              # DW_AT_location
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x9ca:0x6 DW_TAG_variable
	.byte	68                              # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x9d0:0x63 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	36                              # DW_AT_low_pc
	.long	.Ltmp241-.Ltmp225               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x9dd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x9e4:0x8 DW_TAG_formal_parameter
	.ascii	"\363\205\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x9ec:0x6 DW_TAG_variable
	.byte	69                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x9f2:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	36                              # DW_AT_low_pc
	.long	.Ltmp226-.Ltmp225               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x9fe:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	37                              # DW_AT_low_pc
	.long	.Ltmp241-.Ltmp226               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xa0b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xa12:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa18:0x6 DW_TAG_variable
	.byte	70                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xa1e:0x13 DW_TAG_lexical_block
	.byte	38                              # DW_AT_low_pc
	.long	.Ltmp238-.Ltmp230               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xa24:0x6 DW_TAG_variable
	.byte	71                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa2a:0x6 DW_TAG_variable
	.byte	72                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0xa33:0x56 DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp256-.Ltmp241               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	256                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xa41:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xa48:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa4e:0x6 DW_TAG_variable
	.byte	73                              # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xa54:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	39                              # DW_AT_low_pc
	.long	.Ltmp256-.Ltmp241               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xa61:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xa68:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa6e:0x6 DW_TAG_variable
	.byte	74                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xa74:0x13 DW_TAG_lexical_block
	.byte	40                              # DW_AT_low_pc
	.long	.Ltmp253-.Ltmp245               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xa7a:0x6 DW_TAG_variable
	.byte	75                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xa80:0x6 DW_TAG_variable
	.byte	76                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0xa89:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	41                              # DW_AT_low_pc
	.long	.Ltmp271-.Ltmp256               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xa97:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xa9e:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xaa4:0x6 DW_TAG_variable
	.byte	77                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xaaa:0x13 DW_TAG_lexical_block
	.byte	42                              # DW_AT_low_pc
	.long	.Ltmp268-.Ltmp260               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xab0:0x6 DW_TAG_variable
	.byte	78                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xab6:0x6 DW_TAG_variable
	.byte	79                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0xabf:0xbb DW_TAG_inlined_subroutine
	.long	1371                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp307-.Ltmp271               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	340                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xacd:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1379                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xad4:0x8 DW_TAG_formal_parameter
	.ascii	"\202\205\001"                  # DW_AT_const_value
	.long	1387                            # DW_AT_abstract_origin
	.byte	40                              # Abbrev [40] 0xadc:0x6 DW_TAG_variable
	.byte	8                               # DW_AT_const_value
	.long	1403                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xae2:0x63 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp287-.Ltmp271               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	234                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xaef:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xaf6:0x8 DW_TAG_formal_parameter
	.ascii	"\202\205\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xafe:0x6 DW_TAG_variable
	.byte	80                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0xb04:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	43                              # DW_AT_low_pc
	.long	.Ltmp272-.Ltmp271               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0xb10:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	44                              # DW_AT_low_pc
	.long	.Ltmp287-.Ltmp272               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xb1d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xb24:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb2a:0x6 DW_TAG_variable
	.byte	81                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xb30:0x13 DW_TAG_lexical_block
	.byte	45                              # DW_AT_low_pc
	.long	.Ltmp284-.Ltmp276               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xb36:0x6 DW_TAG_variable
	.byte	82                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb3c:0x6 DW_TAG_variable
	.byte	83                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0xb45:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	46                              # DW_AT_low_pc
	.long	.Ltmp307-.Ltmp290               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	236                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xb52:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xb59:0x6 DW_TAG_formal_parameter
	.byte	8                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb5f:0x6 DW_TAG_variable
	.byte	84                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xb65:0x13 DW_TAG_lexical_block
	.byte	47                              # DW_AT_low_pc
	.long	.Ltmp304-.Ltmp296               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xb6b:0x6 DW_TAG_variable
	.byte	85                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb71:0x6 DW_TAG_variable
	.byte	86                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0xb7a:0xc8 DW_TAG_inlined_subroutine
	.long	1265                            # DW_AT_abstract_origin
	.byte	48                              # DW_AT_low_pc
	.long	.Ltmp343-.Ltmp307               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	341                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xb88:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1273                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xb8f:0x8 DW_TAG_formal_parameter
	.ascii	"\207\205\001"                  # DW_AT_const_value
	.long	1281                            # DW_AT_abstract_origin
	.byte	39                              # Abbrev [39] 0xb97:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1289                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xb9d:0x6 DW_TAG_variable
	.byte	87                              # DW_AT_location
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xba3:0x6 DW_TAG_variable
	.byte	88                              # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0xba9:0x63 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	48                              # DW_AT_low_pc
	.long	.Ltmp323-.Ltmp307               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	253                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xbb6:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xbbd:0x8 DW_TAG_formal_parameter
	.ascii	"\207\205\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xbc5:0x6 DW_TAG_variable
	.byte	89                              # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0xbcb:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	48                              # DW_AT_low_pc
	.long	.Ltmp308-.Ltmp307               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0xbd7:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	49                              # DW_AT_low_pc
	.long	.Ltmp323-.Ltmp308               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xbe4:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xbeb:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xbf1:0x6 DW_TAG_variable
	.byte	90                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xbf7:0x13 DW_TAG_lexical_block
	.byte	50                              # DW_AT_low_pc
	.long	.Ltmp320-.Ltmp312               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xbfd:0x6 DW_TAG_variable
	.byte	91                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xc03:0x6 DW_TAG_variable
	.byte	92                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0xc0c:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	51                              # DW_AT_low_pc
	.long	.Ltmp343-.Ltmp326               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xc1a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xc21:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xc27:0x6 DW_TAG_variable
	.byte	93                              # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xc2d:0x13 DW_TAG_lexical_block
	.byte	52                              # DW_AT_low_pc
	.long	.Ltmp340-.Ltmp332               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xc33:0x6 DW_TAG_variable
	.byte	94                              # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xc39:0x6 DW_TAG_variable
	.byte	95                              # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xc42:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	53                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc48:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	54                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc4e:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	55                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc54:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	56                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc5a:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	57                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc60:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	58                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc66:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	59                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc6c:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	60                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc72:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	61                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc78:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	62                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc7e:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	63                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc84:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	64                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc8a:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	65                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc90:0x6 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.byte	66                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc96:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	67                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xc9c:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	68                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xca2:0x6 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.byte	69                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xca8:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	70                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcae:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	71                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcb4:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	72                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcba:0x6 DW_TAG_call_site
	.long	1114                            # DW_AT_call_origin
	.byte	73                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcc0:0x6 DW_TAG_call_site
	.long	4020                            # DW_AT_call_origin
	.byte	74                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcc6:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	75                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xccc:0x6 DW_TAG_call_site
	.long	1114                            # DW_AT_call_origin
	.byte	76                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcd2:0x6 DW_TAG_call_site
	.long	4127                            # DW_AT_call_origin
	.byte	77                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcd8:0x6 DW_TAG_call_site
	.long	4127                            # DW_AT_call_origin
	.byte	78                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcde:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	79                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xce4:0x6 DW_TAG_call_site
	.long	4248                            # DW_AT_call_origin
	.byte	80                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcea:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	81                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcf0:0x6 DW_TAG_call_site
	.long	1114                            # DW_AT_call_origin
	.byte	82                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcf6:0x6 DW_TAG_call_site
	.long	1114                            # DW_AT_call_origin
	.byte	83                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xcfc:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	84                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd02:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	85                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd08:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	86                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd0e:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	87                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd14:0x6 DW_TAG_call_site
	.long	4127                            # DW_AT_call_origin
	.byte	88                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd1a:0x6 DW_TAG_call_site
	.long	4614                            # DW_AT_call_origin
	.byte	89                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd20:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	90                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd26:0x6 DW_TAG_call_site
	.long	1114                            # DW_AT_call_origin
	.byte	91                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd2c:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	92                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd32:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	93                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd38:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	94                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd3e:0x6 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.byte	95                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd44:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	96                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd4a:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	97                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd50:0x6 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.byte	98                              # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xd56:0x6 DW_TAG_call_site
	.long	4866                            # DW_AT_call_origin
	.byte	99                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0xd5d:0x14 DW_TAG_subprogram
	.byte	104                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.short	551                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	150                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0xd66:0x5 DW_TAG_formal_parameter
	.long	150                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0xd6b:0x5 DW_TAG_formal_parameter
	.long	815                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0xd71:0x157 DW_TAG_subprogram
	.ascii	"\311\001"                      # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1326                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xd7e:0x7 DW_TAG_formal_parameter
	.ascii	"\356\001"                      # DW_AT_location
	.long	1334                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xd85:0x7 DW_TAG_formal_parameter
	.ascii	"\357\001"                      # DW_AT_location
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xd8c:0x7 DW_TAG_variable
	.ascii	"\360\001"                      # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0xd93:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	21                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xd9c:0x7 DW_TAG_formal_parameter
	.ascii	"\361\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xda3:0x7 DW_TAG_formal_parameter
	.ascii	"\362\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xdaa:0x7 DW_TAG_variable
	.ascii	"\363\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xdb1:0x16 DW_TAG_lexical_block
	.ascii	"\312\001"                      # DW_AT_low_pc
	.long	.Ltmp1149-.Ltmp1141             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xdb8:0x7 DW_TAG_variable
	.ascii	"\364\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xdbf:0x7 DW_TAG_variable
	.ascii	"\365\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xdc8:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	22                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	142                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xdd1:0x7 DW_TAG_formal_parameter
	.ascii	"\366\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xdd8:0x7 DW_TAG_formal_parameter
	.ascii	"\367\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xddf:0x7 DW_TAG_variable
	.ascii	"\370\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xde6:0x16 DW_TAG_lexical_block
	.ascii	"\313\001"                      # DW_AT_low_pc
	.long	.Ltmp1167-.Ltmp1159             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xded:0x7 DW_TAG_variable
	.ascii	"\371\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xdf4:0x7 DW_TAG_variable
	.ascii	"\372\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xdfd:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	23                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	147                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xe06:0x7 DW_TAG_formal_parameter
	.ascii	"\373\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xe0d:0x7 DW_TAG_formal_parameter
	.ascii	"\374\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe14:0x7 DW_TAG_variable
	.ascii	"\375\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xe1b:0x16 DW_TAG_lexical_block
	.ascii	"\314\001"                      # DW_AT_low_pc
	.long	.Ltmp1188-.Ltmp1180             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xe22:0x7 DW_TAG_variable
	.ascii	"\376\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe29:0x7 DW_TAG_variable
	.ascii	"\377\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xe32:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	24                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	152                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xe3b:0x7 DW_TAG_formal_parameter
	.ascii	"\200\002"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xe42:0x7 DW_TAG_formal_parameter
	.ascii	"\201\002"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe49:0x7 DW_TAG_variable
	.ascii	"\202\002"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xe50:0x16 DW_TAG_lexical_block
	.ascii	"\315\001"                      # DW_AT_low_pc
	.long	.Ltmp1209-.Ltmp1201             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xe57:0x7 DW_TAG_variable
	.ascii	"\203\002"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe5e:0x7 DW_TAG_variable
	.ascii	"\204\002"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0xe67:0x30 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	25                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	154                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xe70:0x7 DW_TAG_formal_parameter
	.ascii	"\205\002"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xe77:0x7 DW_TAG_formal_parameter
	.ascii	"\206\002"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe7e:0x7 DW_TAG_variable
	.ascii	"\207\002"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0xe85:0x11 DW_TAG_lexical_block
	.byte	26                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xe87:0x7 DW_TAG_variable
	.ascii	"\210\002"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xe8e:0x7 DW_TAG_variable
	.ascii	"\211\002"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0xe97:0xd DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\316\001"                      # DW_AT_low_pc
	.long	.Ltmp1237-.Ltmp1236             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	28                              # Abbrev [28] 0xea4:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\317\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xeab:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\320\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xeb2:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\321\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xeb9:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\322\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xec0:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\323\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0xec8:0x77 DW_TAG_subprogram
	.byte	100                             # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1265                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xed4:0x6 DW_TAG_formal_parameter
	.byte	98                              # DW_AT_location
	.long	1273                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xeda:0x6 DW_TAG_formal_parameter
	.byte	99                              # DW_AT_location
	.long	1281                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xee0:0x6 DW_TAG_formal_parameter
	.byte	100                             # DW_AT_location
	.long	1289                            # DW_AT_abstract_origin
	.byte	44                              # Abbrev [44] 0xee6:0x8 DW_TAG_variable
	.byte	2                               # DW_AT_location
	.byte	145
	.byte	0
	.long	1297                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xeee:0x6 DW_TAG_variable
	.byte	101                             # DW_AT_location
	.long	1305                            # DW_AT_abstract_origin
	.byte	45                              # Abbrev [45] 0xef4:0x38 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	0                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	257                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xefe:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xf05:0x6 DW_TAG_formal_parameter
	.byte	102                             # DW_AT_location
	.long	1167                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0xf0b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf12:0x6 DW_TAG_variable
	.byte	103                             # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xf18:0x13 DW_TAG_lexical_block
	.byte	101                             # DW_AT_low_pc
	.long	.Ltmp480-.Ltmp472               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0xf1e:0x6 DW_TAG_variable
	.byte	104                             # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf24:0x6 DW_TAG_variable
	.byte	105                             # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xf2c:0x6 DW_TAG_call_site
	.long	4949                            # DW_AT_call_origin
	.byte	102                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xf32:0x6 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.byte	103                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xf38:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	104                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0xf3f:0x75 DW_TAG_subprogram
	.byte	112                             # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	116                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
	.byte	47                              # Abbrev [47] 0xf4e:0x9 DW_TAG_formal_parameter
	.byte	113                             # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	47                              # Abbrev [47] 0xf57:0x9 DW_TAG_formal_parameter
	.byte	114                             # DW_AT_location
	.byte	138                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	187                             # DW_AT_decl_line
	.long	6649                            # DW_AT_type
	.byte	42                              # Abbrev [42] 0xf60:0x3b DW_TAG_inlined_subroutine
	.long	5241                            # DW_AT_abstract_origin
	.byte	1                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	198                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xf69:0x6 DW_TAG_formal_parameter
	.byte	115                             # DW_AT_location
	.long	5249                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0xf6f:0x2b DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	2                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	178                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0xf78:0x6 DW_TAG_formal_parameter
	.byte	116                             # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0xf7e:0x6 DW_TAG_formal_parameter
	.byte	117                             # DW_AT_location
	.long	1167                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf84:0x6 DW_TAG_variable
	.byte	118                             # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0xf8a:0xf DW_TAG_lexical_block
	.byte	3                               # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0xf8c:0x6 DW_TAG_variable
	.byte	119                             # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xf92:0x6 DW_TAG_variable
	.byte	120                             # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0xf9b:0x6 DW_TAG_call_site
	.long	4949                            # DW_AT_call_origin
	.byte	113                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xfa1:0x6 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.byte	114                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xfa7:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	115                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0xfad:0x6 DW_TAG_call_site
	.long	5258                            # DW_AT_call_origin
	.byte	116                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	46                              # Abbrev [46] 0xfb4:0x6b DW_TAG_subprogram
	.byte	117                             # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	117                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
	.byte	47                              # Abbrev [47] 0xfc3:0x9 DW_TAG_formal_parameter
	.byte	121                             # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	157                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	48                              # Abbrev [48] 0xfcc:0x12 DW_TAG_variable
	.ascii	"\377\377\377\377\377\377\377\377\377\001" # DW_AT_const_value
	.byte	139                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	159                             # DW_AT_decl_line
	.long	1261                            # DW_AT_type
	.byte	37                              # Abbrev [37] 0xfde:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	118                             # DW_AT_low_pc
	.long	.Ltmp596-.Ltmp579               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	165                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0xfeb:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0xff2:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0xff8:0x6 DW_TAG_variable
	.byte	122                             # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0xffe:0x13 DW_TAG_lexical_block
	.byte	119                             # DW_AT_low_pc
	.long	.Ltmp593-.Ltmp585               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1004:0x6 DW_TAG_variable
	.byte	123                             # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x100a:0x6 DW_TAG_variable
	.byte	124                             # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1012:0x6 DW_TAG_call_site
	.long	4949                            # DW_AT_call_origin
	.byte	120                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1018:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	121                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x101f:0x79 DW_TAG_subprogram
	.byte	105                             # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1371                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x102b:0x6 DW_TAG_formal_parameter
	.byte	106                             # DW_AT_location
	.long	1379                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1031:0x6 DW_TAG_formal_parameter
	.byte	107                             # DW_AT_location
	.long	1387                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1037:0x6 DW_TAG_formal_parameter
	.byte	108                             # DW_AT_location
	.long	1395                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x103d:0x6 DW_TAG_variable
	.byte	109                             # DW_AT_location
	.long	1403                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1043:0x3c DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	106                             # DW_AT_low_pc
	.long	.Ltmp516-.Ltmp498               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	236                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1050:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x1057:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1167                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x105e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1065:0x6 DW_TAG_variable
	.byte	110                             # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x106b:0x13 DW_TAG_lexical_block
	.byte	107                             # DW_AT_low_pc
	.long	.Ltmp512-.Ltmp504               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1071:0x6 DW_TAG_variable
	.byte	111                             # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1077:0x6 DW_TAG_variable
	.byte	112                             # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x107f:0x6 DW_TAG_call_site
	.long	5226                            # DW_AT_call_origin
	.byte	108                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1085:0x6 DW_TAG_call_site
	.long	4949                            # DW_AT_call_origin
	.byte	109                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x108b:0x6 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.byte	110                             # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1091:0x6 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.byte	111                             # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	49                              # Abbrev [49] 0x1098:0x16e DW_TAG_subprogram
	.byte	122                             # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	118                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	3                               # DW_AT_calling_convention
	.long	736                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x10a9:0xa DW_TAG_formal_parameter
	.byte	125                             # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	50                              # Abbrev [50] 0x10b3:0xc DW_TAG_formal_parameter
	.ascii	"\211\211\001"                  # DW_AT_const_value
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	50                              # Abbrev [50] 0x10bf:0xa DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	279                             # DW_AT_decl_line
	.long	137                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x10c9:0x66 DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.byte	123                             # DW_AT_low_pc
	.long	.Ltmp618-.Ltmp601               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	281                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x10d7:0x6 DW_TAG_formal_parameter
	.byte	126                             # DW_AT_location
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x10dd:0x8 DW_TAG_formal_parameter
	.ascii	"\211\211\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x10e5:0x6 DW_TAG_variable
	.byte	127                             # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x10eb:0xc DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	123                             # DW_AT_low_pc
	.long	.Ltmp603-.Ltmp601               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x10f7:0x37 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	124                             # DW_AT_low_pc
	.long	.Ltmp618-.Ltmp603               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1104:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x110b:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1111:0x7 DW_TAG_variable
	.ascii	"\200\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1118:0x15 DW_TAG_lexical_block
	.byte	125                             # DW_AT_low_pc
	.long	.Ltmp615-.Ltmp607               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x111e:0x7 DW_TAG_variable
	.ascii	"\201\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1125:0x7 DW_TAG_variable
	.ascii	"\202\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x112f:0x5a DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.byte	126                             # DW_AT_low_pc
	.long	.Ltmp633-.Ltmp618               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	282                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x113d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1144:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x114a:0x7 DW_TAG_variable
	.ascii	"\203\001"                      # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1151:0x37 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	126                             # DW_AT_low_pc
	.long	.Ltmp633-.Ltmp618               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x115e:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1165:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x116b:0x7 DW_TAG_variable
	.ascii	"\204\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1172:0x15 DW_TAG_lexical_block
	.byte	127                             # DW_AT_low_pc
	.long	.Ltmp630-.Ltmp622               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1178:0x7 DW_TAG_variable
	.ascii	"\205\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x117f:0x7 DW_TAG_variable
	.ascii	"\206\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1189:0x67 DW_TAG_inlined_subroutine
	.long	5298                            # DW_AT_abstract_origin
	.ascii	"\200\001"                      # DW_AT_low_pc
	.long	.Ltmp649-.Ltmp633               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	283                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1198:0x7 DW_TAG_formal_parameter
	.ascii	"\207\001"                      # DW_AT_location
	.long	5307                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x119f:0x7 DW_TAG_formal_parameter
	.ascii	"\210\001"                      # DW_AT_location
	.long	5316                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x11a6:0x7 DW_TAG_variable
	.ascii	"\211\001"                      # DW_AT_location
	.long	5351                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x11ad:0x7 DW_TAG_variable
	.ascii	"\212\001"                      # DW_AT_location
	.long	5360                            # DW_AT_abstract_origin
	.byte	23                              # Abbrev [23] 0x11b4:0x3b DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\200\001"                      # DW_AT_low_pc
	.long	.Ltmp649-.Ltmp633               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	276                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x11c3:0x7 DW_TAG_formal_parameter
	.ascii	"\213\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x11ca:0x7 DW_TAG_formal_parameter
	.ascii	"\214\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x11d1:0x7 DW_TAG_variable
	.ascii	"\215\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x11d8:0x16 DW_TAG_lexical_block
	.ascii	"\201\001"                      # DW_AT_low_pc
	.long	.Ltmp645-.Ltmp637               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x11df:0x7 DW_TAG_variable
	.ascii	"\216\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x11e6:0x7 DW_TAG_variable
	.ascii	"\217\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x11f0:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\202\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x11f7:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\203\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x11fe:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\204\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	51                              # Abbrev [51] 0x1206:0xfc DW_TAG_subprogram
	.ascii	"\205\001"                      # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	119                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	3                               # DW_AT_calling_convention
	.long	736                             # DW_AT_type
	.byte	47                              # Abbrev [47] 0x1217:0xa DW_TAG_formal_parameter
	.ascii	"\220\001"                      # DW_AT_location
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	52                              # Abbrev [52] 0x1221:0xb DW_TAG_formal_parameter
	.ascii	"\242\307\001"                  # DW_AT_const_value
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	47                              # Abbrev [47] 0x122c:0xa DW_TAG_formal_parameter
	.ascii	"\221\001"                      # DW_AT_location
	.byte	76                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.long	1210                            # DW_AT_type
	.byte	47                              # Abbrev [47] 0x1236:0xa DW_TAG_formal_parameter
	.ascii	"\222\001"                      # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	240                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	37                              # Abbrev [37] 0x1240:0x6b DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.ascii	"\206\001"                      # DW_AT_low_pc
	.long	.Ltmp669-.Ltmp652               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	242                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x124e:0x7 DW_TAG_formal_parameter
	.ascii	"\223\001"                      # DW_AT_location
	.long	1224                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1255:0x8 DW_TAG_formal_parameter
	.ascii	"\242\307\001"                  # DW_AT_const_value
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x125d:0x7 DW_TAG_variable
	.ascii	"\224\001"                      # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x1264:0xd DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\206\001"                      # DW_AT_low_pc
	.long	.Ltmp654-.Ltmp652               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x1271:0x39 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\207\001"                      # DW_AT_low_pc
	.long	.Ltmp669-.Ltmp654               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x127f:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1286:0x6 DW_TAG_formal_parameter
	.byte	2                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x128c:0x7 DW_TAG_variable
	.ascii	"\225\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1293:0x16 DW_TAG_lexical_block
	.ascii	"\210\001"                      # DW_AT_low_pc
	.long	.Ltmp666-.Ltmp658               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x129a:0x7 DW_TAG_variable
	.ascii	"\226\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x12a1:0x7 DW_TAG_variable
	.ascii	"\227\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	37                              # Abbrev [37] 0x12ab:0x41 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\211\001"                      # DW_AT_low_pc
	.long	.Ltmp690-.Ltmp672               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	244                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x12b9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x12c0:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1167                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x12c7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x12ce:0x7 DW_TAG_variable
	.ascii	"\230\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x12d5:0x16 DW_TAG_lexical_block
	.ascii	"\212\001"                      # DW_AT_low_pc
	.long	.Ltmp686-.Ltmp678               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x12dc:0x7 DW_TAG_variable
	.ascii	"\231\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x12e3:0x7 DW_TAG_variable
	.ascii	"\232\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x12ec:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\213\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x12f3:0x7 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.ascii	"\214\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x12fa:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\215\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x1302:0x53 DW_TAG_subprogram
	.ascii	"\216\001"                      # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	5241                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x130f:0x7 DW_TAG_formal_parameter
	.ascii	"\233\001"                      # DW_AT_location
	.long	5249                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1316:0x30 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	4                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	178                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x131f:0x7 DW_TAG_formal_parameter
	.ascii	"\234\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1326:0x7 DW_TAG_formal_parameter
	.ascii	"\235\001"                      # DW_AT_location
	.long	1167                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x132d:0x7 DW_TAG_variable
	.ascii	"\236\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0x1334:0x11 DW_TAG_lexical_block
	.byte	5                               # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x1336:0x7 DW_TAG_variable
	.ascii	"\237\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x133d:0x7 DW_TAG_variable
	.ascii	"\240\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1346:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\217\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x134d:0x7 DW_TAG_call_site
	.long	5258                            # DW_AT_call_origin
	.ascii	"\220\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	34                              # Abbrev [34] 0x1355:0x115 DW_TAG_subprogram
	.ascii	"\301\001"                      # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	1216                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1362:0x7 DW_TAG_formal_parameter
	.ascii	"\331\001"                      # DW_AT_location
	.long	1224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1369:0x7 DW_TAG_formal_parameter
	.ascii	"\332\001"                      # DW_AT_location
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1370:0x7 DW_TAG_variable
	.ascii	"\333\001"                      # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1377:0x34 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	15                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	122                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1380:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1387:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x138d:0x7 DW_TAG_variable
	.ascii	"\341\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1394:0x16 DW_TAG_lexical_block
	.ascii	"\302\001"                      # DW_AT_low_pc
	.long	.Ltmp1085-.Ltmp1077             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x139b:0x7 DW_TAG_variable
	.ascii	"\342\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x13a2:0x7 DW_TAG_variable
	.ascii	"\343\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x13ab:0x8 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	16                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	42                              # Abbrev [42] 0x13b3:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	17                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	124                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x13bc:0x7 DW_TAG_formal_parameter
	.ascii	"\334\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x13c3:0x7 DW_TAG_formal_parameter
	.ascii	"\335\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x13ca:0x7 DW_TAG_variable
	.ascii	"\336\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x13d1:0x16 DW_TAG_lexical_block
	.ascii	"\303\001"                      # DW_AT_low_pc
	.long	.Ltmp1070-.Ltmp1062             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x13d8:0x7 DW_TAG_variable
	.ascii	"\337\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x13df:0x7 DW_TAG_variable
	.ascii	"\340\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x13e8:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	18                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	126                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x13f1:0x7 DW_TAG_formal_parameter
	.ascii	"\345\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x13f8:0x7 DW_TAG_formal_parameter
	.ascii	"\346\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x13ff:0x7 DW_TAG_variable
	.ascii	"\347\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1406:0x16 DW_TAG_lexical_block
	.ascii	"\304\001"                      # DW_AT_low_pc
	.long	.Ltmp1105-.Ltmp1097             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x140d:0x7 DW_TAG_variable
	.ascii	"\350\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1414:0x7 DW_TAG_variable
	.ascii	"\351\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	42                              # Abbrev [42] 0x141d:0x30 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	19                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	127                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1426:0x7 DW_TAG_formal_parameter
	.ascii	"\344\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x142d:0x7 DW_TAG_formal_parameter
	.ascii	"\352\001"                      # DW_AT_location
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1434:0x7 DW_TAG_variable
	.ascii	"\353\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0x143b:0x11 DW_TAG_lexical_block
	.byte	20                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x143d:0x7 DW_TAG_variable
	.ascii	"\354\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1444:0x7 DW_TAG_variable
	.ascii	"\355\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x144d:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\305\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1454:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\306\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x145b:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\307\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1462:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\310\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0x146a:0xf DW_TAG_subprogram
	.byte	105                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	407                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	823                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x1473:0x5 DW_TAG_formal_parameter
	.long	1093                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	10                              # Abbrev [10] 0x1479:0x11 DW_TAG_subprogram
	.byte	106                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	11                              # Abbrev [11] 0x1481:0x8 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	172                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0x148a:0x1e DW_TAG_subprogram
	.byte	107                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.short	681                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	823                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x1493:0x5 DW_TAG_formal_parameter
	.long	5288                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x1498:0x5 DW_TAG_formal_parameter
	.long	815                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x149d:0x5 DW_TAG_formal_parameter
	.long	815                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x14a2:0x5 DW_TAG_formal_parameter
	.long	5293                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	31                              # Abbrev [31] 0x14a8:0x5 DW_TAG_restrict_type
	.long	1210                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x14ad:0x5 DW_TAG_restrict_type
	.long	456                             # DW_AT_type
	.byte	54                              # Abbrev [54] 0x14b2:0x48 DW_TAG_subprogram
	.byte	108                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	261                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_inline
	.byte	55                              # Abbrev [55] 0x14bb:0x9 DW_TAG_formal_parameter
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	261                             # DW_AT_decl_line
	.long	192                             # DW_AT_type
	.byte	55                              # Abbrev [55] 0x14c4:0x9 DW_TAG_formal_parameter
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	261                             # DW_AT_decl_line
	.long	137                             # DW_AT_type
	.byte	56                              # Abbrev [56] 0x14cd:0x1a DW_TAG_union_type
	.byte	4                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.short	263                             # DW_AT_decl_line
	.byte	57                              # Abbrev [57] 0x14d2:0xa DW_TAG_member
	.byte	109                             # DW_AT_name
	.long	137                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	265                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	57                              # Abbrev [57] 0x14dc:0xa DW_TAG_member
	.byte	110                             # DW_AT_name
	.long	839                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	266                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0x14e7:0x9 DW_TAG_variable
	.byte	110                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	267                             # DW_AT_decl_line
	.long	5325                            # DW_AT_type
	.byte	58                              # Abbrev [58] 0x14f0:0x9 DW_TAG_variable
	.byte	111                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.long	1249                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x14fa:0x24 DW_TAG_subprogram
	.ascii	"\221\001"                      # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	120                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	451                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x150b:0xb DW_TAG_formal_parameter
	.ascii	"\241\001"                      # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	451                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	28                              # Abbrev [28] 0x1516:0x7 DW_TAG_call_site
	.long	5406                            # DW_AT_call_origin
	.ascii	"\222\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	59                              # Abbrev [59] 0x151e:0x1e4 DW_TAG_subprogram
	.ascii	"\223\001"                      # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	121                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x152f:0xb DW_TAG_formal_parameter
	.ascii	"\242\001"                      # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	402                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x153a:0xb DW_TAG_variable
	.ascii	"\243\001"                      # DW_AT_location
	.byte	140                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	404                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x1545:0xb DW_TAG_variable
	.ascii	"\245\001"                      # DW_AT_location
	.byte	141                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	405                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x1550:0xb DW_TAG_variable
	.ascii	"\257\001"                      # DW_AT_location
	.byte	142                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	406                             # DW_AT_decl_line
	.long	6654                            # DW_AT_type
	.byte	23                              # Abbrev [23] 0x155b:0x2f DW_TAG_inlined_subroutine
	.long	151                             # DW_AT_abstract_origin
	.ascii	"\224\001"                      # DW_AT_low_pc
	.long	.Ltmp767-.Ltmp753               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	418                             # DW_AT_call_line
	.byte	22                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x156a:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	159                             # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x1571:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	167                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1578:0xa DW_TAG_formal_parameter
	.ascii	"\365\354\216\372\001"          # DW_AT_const_value
	.long	175                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1582:0x7 DW_TAG_variable
	.ascii	"\244\001"                      # DW_AT_location
	.long	183                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x158a:0x6b DW_TAG_inlined_subroutine
	.long	1216                            # DW_AT_abstract_origin
	.ascii	"\225\001"                      # DW_AT_low_pc
	.long	.Ltmp792-.Ltmp775               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	429                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1599:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1224                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x15a0:0x7 DW_TAG_formal_parameter
	.ascii	"\246\001"                      # DW_AT_location
	.long	1232                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x15a7:0x7 DW_TAG_variable
	.ascii	"\247\001"                      # DW_AT_location
	.long	1240                            # DW_AT_abstract_origin
	.byte	38                              # Abbrev [38] 0x15ae:0xd DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\225\001"                      # DW_AT_low_pc
	.long	.Ltmp777-.Ltmp775               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	0                               # DW_AT_call_line
	.byte	37                              # Abbrev [37] 0x15bb:0x39 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\226\001"                      # DW_AT_low_pc
	.long	.Ltmp792-.Ltmp777               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	127                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x15c9:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x15d0:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x15d6:0x7 DW_TAG_variable
	.ascii	"\250\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x15dd:0x16 DW_TAG_lexical_block
	.ascii	"\227\001"                      # DW_AT_low_pc
	.long	.Ltmp789-.Ltmp781               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x15e4:0x7 DW_TAG_variable
	.ascii	"\251\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x15eb:0x7 DW_TAG_variable
	.ascii	"\252\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x15f5:0x5d DW_TAG_inlined_subroutine
	.long	1326                            # DW_AT_abstract_origin
	.ascii	"\230\001"                      # DW_AT_low_pc
	.long	.Ltmp813-.Ltmp796               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	431                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1604:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1334                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x160b:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1342                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1611:0x7 DW_TAG_variable
	.ascii	"\253\001"                      # DW_AT_location
	.long	1350                            # DW_AT_abstract_origin
	.byte	37                              # Abbrev [37] 0x1618:0x39 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\230\001"                      # DW_AT_low_pc
	.long	.Ltmp813-.Ltmp796               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.byte	137                             # DW_AT_call_line
	.byte	16                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1626:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x162d:0x6 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1633:0x7 DW_TAG_variable
	.ascii	"\254\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x163a:0x16 DW_TAG_lexical_block
	.ascii	"\231\001"                      # DW_AT_low_pc
	.long	.Ltmp810-.Ltmp802               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1641:0x7 DW_TAG_variable
	.ascii	"\255\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1648:0x7 DW_TAG_variable
	.ascii	"\256\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	45                              # Abbrev [45] 0x1652:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	6                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	436                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x165c:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1663:0x6 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1669:0x7 DW_TAG_variable
	.ascii	"\260\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1670:0x16 DW_TAG_lexical_block
	.ascii	"\232\001"                      # DW_AT_low_pc
	.long	.Ltmp830-.Ltmp822               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1677:0x7 DW_TAG_variable
	.ascii	"\261\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x167e:0x7 DW_TAG_variable
	.ascii	"\262\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x1687:0x42 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\233\001"                      # DW_AT_low_pc
	.long	.Ltmp856-.Ltmp838               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	439                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1696:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	92
	.long	1159                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x169d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1167                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x16a4:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x16ab:0x7 DW_TAG_variable
	.ascii	"\263\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x16b2:0x16 DW_TAG_lexical_block
	.ascii	"\234\001"                      # DW_AT_low_pc
	.long	.Ltmp852-.Ltmp844               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x16b9:0x7 DW_TAG_variable
	.ascii	"\264\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x16c0:0x7 DW_TAG_variable
	.ascii	"\265\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x16c9:0x7 DW_TAG_call_site
	.long	5890                            # DW_AT_call_origin
	.ascii	"\235\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16d0:0x7 DW_TAG_call_site
	.long	3784                            # DW_AT_call_origin
	.ascii	"\236\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16d7:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\237\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16de:0x7 DW_TAG_call_site
	.long	3441                            # DW_AT_call_origin
	.ascii	"\240\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16e5:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\241\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16ec:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\242\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16f3:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\243\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x16fa:0x7 DW_TAG_call_site
	.long	5890                            # DW_AT_call_origin
	.ascii	"\244\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	59                              # Abbrev [59] 0x1702:0x7e DW_TAG_subprogram
	.ascii	"\273\001"                      # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	125                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	392                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x1713:0xb DW_TAG_formal_parameter
	.ascii	"\323\001"                      # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	392                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x171e:0x4c DW_TAG_inlined_subroutine
	.long	5241                            # DW_AT_abstract_origin
	.ascii	"\274\001"                      # DW_AT_low_pc
	.long	.Ltmp1048-.Ltmp1021             # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	398                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x172d:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	5249                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1734:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	14                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	178                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x173d:0x7 DW_TAG_formal_parameter
	.ascii	"\324\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1744:0x7 DW_TAG_formal_parameter
	.ascii	"\325\001"                      # DW_AT_location
	.long	1167                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x174b:0x7 DW_TAG_variable
	.ascii	"\326\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1752:0x16 DW_TAG_lexical_block
	.ascii	"\275\001"                      # DW_AT_low_pc
	.long	.Ltmp1040-.Ltmp1032             # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1759:0x7 DW_TAG_variable
	.ascii	"\327\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1760:0x7 DW_TAG_variable
	.ascii	"\330\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x176a:0x7 DW_TAG_call_site
	.long	3903                            # DW_AT_call_origin
	.ascii	"\276\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1771:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\277\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1778:0x7 DW_TAG_call_site
	.long	5258                            # DW_AT_call_origin
	.ascii	"\300\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x1780:0x3e DW_TAG_subprogram
	.ascii	"\245\001"                      # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	122                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_external
	.byte	60                              # Abbrev [60] 0x1791:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	60                              # Abbrev [60] 0x179c:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	84
	.byte	143                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	60                              # Abbrev [60] 0x17a7:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.byte	72                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	736                             # DW_AT_type
	.byte	60                              # Abbrev [60] 0x17b2:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.byte	73                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	463                             # DW_AT_decl_line
	.long	736                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x17be:0x9f DW_TAG_subprogram
	.ascii	"\246\001"                      # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	123                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x17cf:0xb DW_TAG_formal_parameter
	.ascii	"\266\001"                      # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x17da:0xb DW_TAG_formal_parameter
	.ascii	"\267\001"                      # DW_AT_location
	.byte	76                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.long	1210                            # DW_AT_type
	.byte	21                              # Abbrev [21] 0x17e5:0xb DW_TAG_formal_parameter
	.ascii	"\270\001"                      # DW_AT_location
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	478                             # DW_AT_decl_line
	.long	839                             # DW_AT_type
	.byte	23                              # Abbrev [23] 0x17f0:0x2a DW_TAG_inlined_subroutine
	.long	151                             # DW_AT_abstract_origin
	.ascii	"\247\001"                      # DW_AT_low_pc
	.long	.Ltmp899-.Ltmp883               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	484                             # DW_AT_call_line
	.byte	26                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x17ff:0x7 DW_TAG_formal_parameter
	.ascii	"\271\001"                      # DW_AT_location
	.long	159                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x1806:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	167                             # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x180c:0x6 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_const_value
	.long	175                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1812:0x7 DW_TAG_variable
	.ascii	"\272\001"                      # DW_AT_location
	.long	183                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	23                              # Abbrev [23] 0x181a:0x3b DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.ascii	"\250\001"                      # DW_AT_low_pc
	.long	.Ltmp918-.Ltmp900               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	487                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x1829:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	94
	.long	1159                            # DW_AT_abstract_origin
	.byte	24                              # Abbrev [24] 0x1830:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	83
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1837:0x7 DW_TAG_variable
	.ascii	"\273\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x183e:0x16 DW_TAG_lexical_block
	.ascii	"\251\001"                      # DW_AT_low_pc
	.long	.Ltmp914-.Ltmp906               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1845:0x7 DW_TAG_variable
	.ascii	"\274\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x184c:0x7 DW_TAG_variable
	.ascii	"\275\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x1855:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\252\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x185d:0x175 DW_TAG_subprogram
	.ascii	"\253\001"                      # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14     # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	124                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_external
	.byte	21                              # Abbrev [21] 0x186e:0xb DW_TAG_formal_parameter
	.ascii	"\276\001"                      # DW_AT_location
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
	.long	293                             # DW_AT_type
	.byte	21                              # Abbrev [21] 0x1879:0xb DW_TAG_formal_parameter
	.ascii	"\277\001"                      # DW_AT_location
	.byte	144                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	490                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x1884:0xb DW_TAG_variable
	.ascii	"\300\001"                      # DW_AT_location
	.byte	145                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	492                             # DW_AT_decl_line
	.long	736                             # DW_AT_type
	.byte	43                              # Abbrev [43] 0x188f:0xbc DW_TAG_lexical_block
	.byte	7                               # DW_AT_ranges
	.byte	22                              # Abbrev [22] 0x1891:0xb DW_TAG_variable
	.ascii	"\301\001"                      # DW_AT_location
	.byte	146                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	498                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	22                              # Abbrev [22] 0x189c:0xb DW_TAG_variable
	.ascii	"\302\001"                      # DW_AT_location
	.byte	147                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	499                             # DW_AT_decl_line
	.long	843                             # DW_AT_type
	.byte	45                              # Abbrev [45] 0x18a7:0x5c DW_TAG_inlined_subroutine
	.long	5298                            # DW_AT_abstract_origin
	.byte	8                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	500                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x18b1:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	5307                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x18b8:0x7 DW_TAG_formal_parameter
	.ascii	"\303\001"                      # DW_AT_location
	.long	5316                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x18bf:0x7 DW_TAG_variable
	.ascii	"\304\001"                      # DW_AT_location
	.long	5351                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x18c6:0x7 DW_TAG_variable
	.ascii	"\305\001"                      # DW_AT_location
	.long	5360                            # DW_AT_abstract_origin
	.byte	45                              # Abbrev [45] 0x18cd:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	9                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	276                             # DW_AT_call_line
	.byte	12                              # DW_AT_call_column
	.byte	24                              # Abbrev [24] 0x18d7:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	95
	.long	1159                            # DW_AT_abstract_origin
	.byte	25                              # Abbrev [25] 0x18de:0x6 DW_TAG_formal_parameter
	.byte	4                               # DW_AT_const_value
	.long	1175                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x18e4:0x7 DW_TAG_variable
	.ascii	"\306\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x18eb:0x16 DW_TAG_lexical_block
	.ascii	"\254\001"                      # DW_AT_low_pc
	.long	.Ltmp949-.Ltmp941               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x18f2:0x7 DW_TAG_variable
	.ascii	"\307\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x18f9:0x7 DW_TAG_variable
	.ascii	"\310\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	45                              # Abbrev [45] 0x1903:0x47 DW_TAG_inlined_subroutine
	.long	5241                            # DW_AT_abstract_origin
	.byte	10                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	501                             # DW_AT_call_line
	.byte	13                              # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x190d:0x7 DW_TAG_formal_parameter
	.ascii	"\311\001"                      # DW_AT_location
	.long	5249                            # DW_AT_abstract_origin
	.byte	42                              # Abbrev [42] 0x1914:0x35 DW_TAG_inlined_subroutine
	.long	1151                            # DW_AT_abstract_origin
	.byte	11                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.byte	178                             # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x191d:0x7 DW_TAG_formal_parameter
	.ascii	"\312\001"                      # DW_AT_location
	.long	1159                            # DW_AT_abstract_origin
	.byte	35                              # Abbrev [35] 0x1924:0x7 DW_TAG_formal_parameter
	.ascii	"\313\001"                      # DW_AT_location
	.long	1167                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x192b:0x7 DW_TAG_variable
	.ascii	"\314\001"                      # DW_AT_location
	.long	1183                            # DW_AT_abstract_origin
	.byte	27                              # Abbrev [27] 0x1932:0x16 DW_TAG_lexical_block
	.ascii	"\255\001"                      # DW_AT_low_pc
	.long	.Ltmp979-.Ltmp971               # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1939:0x7 DW_TAG_variable
	.ascii	"\315\001"                      # DW_AT_location
	.long	1192                            # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x1940:0x7 DW_TAG_variable
	.ascii	"\316\001"                      # DW_AT_location
	.long	1200                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	45                              # Abbrev [45] 0x194b:0x32 DW_TAG_inlined_subroutine
	.long	859                             # DW_AT_abstract_origin
	.byte	12                              # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	504                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	35                              # Abbrev [35] 0x1955:0x7 DW_TAG_formal_parameter
	.ascii	"\317\001"                      # DW_AT_location
	.long	863                             # DW_AT_abstract_origin
	.byte	26                              # Abbrev [26] 0x195c:0x7 DW_TAG_variable
	.ascii	"\321\001"                      # DW_AT_location
	.long	871                             # DW_AT_abstract_origin
	.byte	43                              # Abbrev [43] 0x1963:0xa DW_TAG_lexical_block
	.byte	13                              # DW_AT_ranges
	.byte	26                              # Abbrev [26] 0x1965:0x7 DW_TAG_variable
	.ascii	"\320\001"                      # DW_AT_location
	.long	880                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x196d:0xf DW_TAG_lexical_block
	.ascii	"\256\001"                      # DW_AT_low_pc
	.long	.Ltmp1006-.Ltmp999              # DW_AT_high_pc
	.byte	26                              # Abbrev [26] 0x1974:0x7 DW_TAG_variable
	.ascii	"\322\001"                      # DW_AT_location
	.long	890                             # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	28                              # Abbrev [28] 0x197d:0x7 DW_TAG_call_site
	.long	5406                            # DW_AT_call_origin
	.ascii	"\257\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1984:0x7 DW_TAG_call_site
	.long	5890                            # DW_AT_call_origin
	.ascii	"\260\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x198b:0x7 DW_TAG_call_site
	.long	6610                            # DW_AT_call_origin
	.ascii	"\261\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1992:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\262\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x1999:0x7 DW_TAG_call_site
	.long	3421                            # DW_AT_call_origin
	.ascii	"\263\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19a0:0x7 DW_TAG_call_site
	.long	5258                            # DW_AT_call_origin
	.ascii	"\264\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19a7:0x7 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.ascii	"\265\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19ae:0x7 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.ascii	"\266\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19b5:0x7 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.ascii	"\267\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19bc:0x7 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.ascii	"\270\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19c3:0x7 DW_TAG_call_site
	.long	6635                            # DW_AT_call_origin
	.ascii	"\271\001"                      # DW_AT_call_return_pc
	.byte	28                              # Abbrev [28] 0x19ca:0x7 DW_TAG_call_site
	.long	1103                            # DW_AT_call_origin
	.ascii	"\272\001"                      # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	41                              # Abbrev [41] 0x19d2:0x19 DW_TAG_subprogram
	.byte	112                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.short	713                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x19db:0x5 DW_TAG_formal_parameter
	.long	456                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x19e0:0x5 DW_TAG_formal_parameter
	.long	760                             # DW_AT_type
	.byte	30                              # Abbrev [30] 0x19e5:0x5 DW_TAG_formal_parameter
	.long	736                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	61                              # Abbrev [61] 0x19eb:0xe DW_TAG_subprogram
	.byte	113                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	178                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	736                             # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	30                              # Abbrev [30] 0x19f3:0x5 DW_TAG_formal_parameter
	.long	456                             # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	8                               # Abbrev [8] 0x19f9:0x5 DW_TAG_pointer_type
	.long	839                             # DW_AT_type
	.byte	3                               # Abbrev [3] 0x19fe:0xc DW_TAG_array_type
	.long	1261                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x1a03:0x6 DW_TAG_subrange_type
	.long	67                              # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	27                              # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
	.long	.Ldebug_ranges9-.Lrnglists_table_base0
	.long	.Ldebug_ranges10-.Lrnglists_table_base0
	.long	.Ldebug_ranges11-.Lrnglists_table_base0
	.long	.Ldebug_ranges12-.Lrnglists_table_base0
	.long	.Ldebug_ranges13-.Lrnglists_table_base0
	.long	.Ldebug_ranges14-.Lrnglists_table_base0
	.long	.Ldebug_ranges15-.Lrnglists_table_base0
	.long	.Ldebug_ranges16-.Lrnglists_table_base0
	.long	.Ldebug_ranges17-.Lrnglists_table_base0
	.long	.Ldebug_ranges18-.Lrnglists_table_base0
	.long	.Ldebug_ranges19-.Lrnglists_table_base0
	.long	.Ldebug_ranges20-.Lrnglists_table_base0
	.long	.Ldebug_ranges21-.Lrnglists_table_base0
	.long	.Ldebug_ranges22-.Lrnglists_table_base0
	.long	.Ldebug_ranges23-.Lrnglists_table_base0
	.long	.Ldebug_ranges24-.Lrnglists_table_base0
	.long	.Ldebug_ranges25-.Lrnglists_table_base0
	.long	.Ldebug_ranges26-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp466-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp483-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp532-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp559-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp552-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp555-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp558-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp543-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp551-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp570-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp700-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp721-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp724-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp725-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp706-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp724-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp725-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp834-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp930-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp990-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp952-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges9:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp935-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp951-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp956-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp957-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges10:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp958-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp983-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp990-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges11:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp963-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp980-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp986-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp989-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges12:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp991-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp1007-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges13:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp981-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp983-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp991-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp998-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges14:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1026-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1041-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1044-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1047-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges15:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1087-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1088-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges16:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1055-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1056-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1089-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1091-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1108-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges17:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1058-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1071-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1108-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges18:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1093-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1106-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges19:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1109-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1126-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1128-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges20:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1113-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1121-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1123-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1124-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges21:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1135-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1150-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1169-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1170-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1171-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges22:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1153-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1168-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1190-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1191-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1192-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges23:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1174-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1189-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1211-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1212-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges24:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1195-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1210-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1232-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1233-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges25:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1213-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1234-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1236-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges26:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1220-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1228-.Lfunc_begin0        #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp1230-.Lfunc_begin0        #   starting offset
	.uleb128 .Ltmp1231-.Lfunc_begin0        #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	596                             # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"x264_src/output/matroska_ebml.c" # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/x264-test/src" # string offset=137
.Linfo_string3:
	.asciz	"char"                          # string offset=171
.Linfo_string4:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=176
.Linfo_string5:
	.asciz	"float"                         # string offset=196
.Linfo_string6:
	.asciz	"double"                        # string offset=202
.Linfo_string7:
	.asciz	"mk_create_context"             # string offset=209
.Linfo_string8:
	.asciz	"next"                          # string offset=227
.Linfo_string9:
	.asciz	"prev"                          # string offset=232
.Linfo_string10:
	.asciz	"parent"                        # string offset=237
.Linfo_string11:
	.asciz	"owner"                         # string offset=244
.Linfo_string12:
	.asciz	"fp"                            # string offset=250
.Linfo_string13:
	.asciz	"_flags"                        # string offset=253
.Linfo_string14:
	.asciz	"int"                           # string offset=260
.Linfo_string15:
	.asciz	"_IO_read_ptr"                  # string offset=264
.Linfo_string16:
	.asciz	"_IO_read_end"                  # string offset=277
.Linfo_string17:
	.asciz	"_IO_read_base"                 # string offset=290
.Linfo_string18:
	.asciz	"_IO_write_base"                # string offset=304
.Linfo_string19:
	.asciz	"_IO_write_ptr"                 # string offset=319
.Linfo_string20:
	.asciz	"_IO_write_end"                 # string offset=333
.Linfo_string21:
	.asciz	"_IO_buf_base"                  # string offset=347
.Linfo_string22:
	.asciz	"_IO_buf_end"                   # string offset=360
.Linfo_string23:
	.asciz	"_IO_save_base"                 # string offset=372
.Linfo_string24:
	.asciz	"_IO_backup_base"               # string offset=386
.Linfo_string25:
	.asciz	"_IO_save_end"                  # string offset=402
.Linfo_string26:
	.asciz	"_markers"                      # string offset=415
.Linfo_string27:
	.asciz	"_IO_marker"                    # string offset=424
.Linfo_string28:
	.asciz	"_chain"                        # string offset=435
.Linfo_string29:
	.asciz	"_fileno"                       # string offset=442
.Linfo_string30:
	.asciz	"_flags2"                       # string offset=450
.Linfo_string31:
	.asciz	"_old_offset"                   # string offset=458
.Linfo_string32:
	.asciz	"long"                          # string offset=470
.Linfo_string33:
	.asciz	"__off_t"                       # string offset=475
.Linfo_string34:
	.asciz	"_cur_column"                   # string offset=483
.Linfo_string35:
	.asciz	"unsigned short"                # string offset=495
.Linfo_string36:
	.asciz	"_vtable_offset"                # string offset=510
.Linfo_string37:
	.asciz	"signed char"                   # string offset=525
.Linfo_string38:
	.asciz	"_shortbuf"                     # string offset=537
.Linfo_string39:
	.asciz	"_lock"                         # string offset=547
.Linfo_string40:
	.asciz	"_IO_lock_t"                    # string offset=553
.Linfo_string41:
	.asciz	"_offset"                       # string offset=564
.Linfo_string42:
	.asciz	"__off64_t"                     # string offset=572
.Linfo_string43:
	.asciz	"_codecvt"                      # string offset=582
.Linfo_string44:
	.asciz	"_IO_codecvt"                   # string offset=591
.Linfo_string45:
	.asciz	"_wide_data"                    # string offset=603
.Linfo_string46:
	.asciz	"_IO_wide_data"                 # string offset=614
.Linfo_string47:
	.asciz	"_freeres_list"                 # string offset=628
.Linfo_string48:
	.asciz	"_freeres_buf"                  # string offset=642
.Linfo_string49:
	.asciz	"__pad5"                        # string offset=655
.Linfo_string50:
	.asciz	"unsigned long"                 # string offset=662
.Linfo_string51:
	.asciz	"size_t"                        # string offset=676
.Linfo_string52:
	.asciz	"_mode"                         # string offset=683
.Linfo_string53:
	.asciz	"_unused2"                      # string offset=689
.Linfo_string54:
	.asciz	"_IO_FILE"                      # string offset=698
.Linfo_string55:
	.asciz	"FILE"                          # string offset=707
.Linfo_string56:
	.asciz	"duration_ptr"                  # string offset=712
.Linfo_string57:
	.asciz	"unsigned int"                  # string offset=725
.Linfo_string58:
	.asciz	"root"                          # string offset=738
.Linfo_string59:
	.asciz	"cluster"                       # string offset=743
.Linfo_string60:
	.asciz	"frame"                         # string offset=751
.Linfo_string61:
	.asciz	"freelist"                      # string offset=757
.Linfo_string62:
	.asciz	"actlist"                       # string offset=766
.Linfo_string63:
	.asciz	"def_duration"                  # string offset=774
.Linfo_string64:
	.asciz	"__int64_t"                     # string offset=787
.Linfo_string65:
	.asciz	"int64_t"                       # string offset=797
.Linfo_string66:
	.asciz	"timescale"                     # string offset=805
.Linfo_string67:
	.asciz	"cluster_tc_scaled"             # string offset=815
.Linfo_string68:
	.asciz	"frame_tc"                      # string offset=833
.Linfo_string69:
	.asciz	"max_frame_tc"                  # string offset=842
.Linfo_string70:
	.asciz	"wrote_header"                  # string offset=855
.Linfo_string71:
	.asciz	"in_frame"                      # string offset=868
.Linfo_string72:
	.asciz	"keyframe"                      # string offset=877
.Linfo_string73:
	.asciz	"skippable"                     # string offset=886
.Linfo_string74:
	.asciz	"mk_writer"                     # string offset=896
.Linfo_string75:
	.asciz	"id"                            # string offset=906
.Linfo_string76:
	.asciz	"data"                          # string offset=909
.Linfo_string77:
	.asciz	"d_cur"                         # string offset=914
.Linfo_string78:
	.asciz	"d_max"                         # string offset=920
.Linfo_string79:
	.asciz	"mk_context"                    # string offset=926
.Linfo_string80:
	.asciz	"w"                             # string offset=937
.Linfo_string81:
	.asciz	"c"                             # string offset=939
.Linfo_string82:
	.asciz	"mk_destroy_contexts"           # string offset=941
.Linfo_string83:
	.asciz	"cur"                           # string offset=961
.Linfo_string84:
	.asciz	"fopen64"                       # string offset=965
.Linfo_string85:
	.asciz	"fopen"                         # string offset=973
.Linfo_string86:
	.asciz	"free"                          # string offset=979
.Linfo_string87:
	.asciz	"mk_append_context_data"        # string offset=984
.Linfo_string88:
	.asciz	"size"                          # string offset=1007
.Linfo_string89:
	.asciz	"ns"                            # string offset=1012
.Linfo_string90:
	.asciz	"dn"                            # string offset=1015
.Linfo_string91:
	.asciz	"dp"                            # string offset=1018
.Linfo_string92:
	.asciz	"mk_write_id"                   # string offset=1021
.Linfo_string93:
	.asciz	"c_id"                          # string offset=1033
.Linfo_string94:
	.asciz	"unsigned char"                 # string offset=1038
.Linfo_string95:
	.asciz	"mk_write_uint"                 # string offset=1052
.Linfo_string96:
	.asciz	"ui"                            # string offset=1066
.Linfo_string97:
	.asciz	"c_ui"                          # string offset=1069
.Linfo_string98:
	.asciz	"i"                             # string offset=1074
.Linfo_string99:
	.asciz	"mk_write_size"                 # string offset=1076
.Linfo_string100:
	.asciz	"c_size"                        # string offset=1090
.Linfo_string101:
	.asciz	"mk_write_string"               # string offset=1097
.Linfo_string102:
	.asciz	"str"                           # string offset=1113
.Linfo_string103:
	.asciz	"len"                           # string offset=1117
.Linfo_string104:
	.asciz	"realloc"                       # string offset=1121
.Linfo_string105:
	.asciz	"strlen"                        # string offset=1129
.Linfo_string106:
	.asciz	"mk_flush_context_data"         # string offset=1136
.Linfo_string107:
	.asciz	"fwrite"                        # string offset=1158
.Linfo_string108:
	.asciz	"mk_write_float_raw"            # string offset=1165
.Linfo_string109:
	.asciz	"f"                             # string offset=1184
.Linfo_string110:
	.asciz	"u"                             # string offset=1186
.Linfo_string111:
	.asciz	"c_f"                           # string offset=1188
.Linfo_string112:
	.asciz	"fseek"                         # string offset=1192
.Linfo_string113:
	.asciz	"fclose"                        # string offset=1198
.Linfo_string114:
	.asciz	"mk_create_writer"              # string offset=1205
.Linfo_string115:
	.asciz	"mk_writeHeader"                # string offset=1222
.Linfo_string116:
	.asciz	"mk_close_context"              # string offset=1237
.Linfo_string117:
	.asciz	"mk_flush_context_id"           # string offset=1254
.Linfo_string118:
	.asciz	"mk_write_float"                # string offset=1274
.Linfo_string119:
	.asciz	"mk_write_bin"                  # string offset=1289
.Linfo_string120:
	.asciz	"mk_start_frame"                # string offset=1302
.Linfo_string121:
	.asciz	"mk_flush_frame"                # string offset=1317
.Linfo_string122:
	.asciz	"mk_set_frame_flags"            # string offset=1332
.Linfo_string123:
	.asciz	"mk_add_frame_data"             # string offset=1351
.Linfo_string124:
	.asciz	"mk_close"                      # string offset=1369
.Linfo_string125:
	.asciz	"mk_close_cluster"              # string offset=1378
.Linfo_string126:
	.asciz	"filename"                      # string offset=1395
.Linfo_string127:
	.asciz	"writing_app"                   # string offset=1404
.Linfo_string128:
	.asciz	"codec_id"                      # string offset=1416
.Linfo_string129:
	.asciz	"codec_private"                 # string offset=1425
.Linfo_string130:
	.asciz	"codec_private_size"            # string offset=1439
.Linfo_string131:
	.asciz	"default_frame_duration"        # string offset=1458
.Linfo_string132:
	.asciz	"width"                         # string offset=1481
.Linfo_string133:
	.asciz	"height"                        # string offset=1487
.Linfo_string134:
	.asciz	"d_width"                       # string offset=1494
.Linfo_string135:
	.asciz	"d_height"                      # string offset=1502
.Linfo_string136:
	.asciz	"ti"                            # string offset=1511
.Linfo_string137:
	.asciz	"v"                             # string offset=1514
.Linfo_string138:
	.asciz	"off"                           # string offset=1516
.Linfo_string139:
	.asciz	"ff"                            # string offset=1520
.Linfo_string140:
	.asciz	"delta"                         # string offset=1523
.Linfo_string141:
	.asciz	"fsize"                         # string offset=1529
.Linfo_string142:
	.asciz	"c_delta_flags"                 # string offset=1535
.Linfo_string143:
	.asciz	"timestamp"                     # string offset=1549
.Linfo_string144:
	.asciz	"last_delta"                    # string offset=1559
.Linfo_string145:
	.asciz	"ret"                           # string offset=1570
.Linfo_string146:
	.asciz	"last_frametime"                # string offset=1574
.Linfo_string147:
	.asciz	"total_duration"                # string offset=1589
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	.L.str.1
	.quad	.L.str.3
	.quad	.Lfunc_begin0
	.quad	.Ltmp5
	.quad	.Ltmp22
	.quad	.Ltmp29
	.quad	.Ltmp15
	.quad	.Ltmp26
	.quad	.Ltmp27
	.quad	.Ltmp33
	.quad	.Ltmp34
	.quad	.Ltmp37
	.quad	.Lfunc_begin1
	.quad	.Lfunc_begin2
	.quad	.Ltmp68
	.quad	.Ltmp86
	.quad	.Ltmp88
	.quad	.Ltmp92
	.quad	.Ltmp103
	.quad	.Ltmp107
	.quad	.Ltmp118
	.quad	.Ltmp122
	.quad	.Ltmp133
	.quad	.Ltmp134
	.quad	.Ltmp138
	.quad	.Ltmp149
	.quad	.Ltmp153
	.quad	.Ltmp164
	.quad	.Ltmp168
	.quad	.Ltmp179
	.quad	.Ltmp180
	.quad	.Ltmp184
	.quad	.Ltmp195
	.quad	.Ltmp199
	.quad	.Ltmp210
	.quad	.Ltmp214
	.quad	.Ltmp225
	.quad	.Ltmp226
	.quad	.Ltmp230
	.quad	.Ltmp241
	.quad	.Ltmp245
	.quad	.Ltmp256
	.quad	.Ltmp260
	.quad	.Ltmp271
	.quad	.Ltmp272
	.quad	.Ltmp276
	.quad	.Ltmp290
	.quad	.Ltmp296
	.quad	.Ltmp307
	.quad	.Ltmp308
	.quad	.Ltmp312
	.quad	.Ltmp326
	.quad	.Ltmp332
	.quad	.Ltmp97
	.quad	.Ltmp112
	.quad	.Ltmp127
	.quad	.Ltmp143
	.quad	.Ltmp158
	.quad	.Ltmp173
	.quad	.Ltmp189
	.quad	.Ltmp204
	.quad	.Ltmp219
	.quad	.Ltmp235
	.quad	.Ltmp250
	.quad	.Ltmp265
	.quad	.Ltmp281
	.quad	.Ltmp288
	.quad	.Ltmp301
	.quad	.Ltmp317
	.quad	.Ltmp324
	.quad	.Ltmp337
	.quad	.Ltmp344
	.quad	.Ltmp347
	.quad	.Ltmp350
	.quad	.Ltmp354
	.quad	.Ltmp357
	.quad	.Ltmp360
	.quad	.Ltmp364
	.quad	.Ltmp367
	.quad	.Ltmp370
	.quad	.Ltmp373
	.quad	.Ltmp377
	.quad	.Ltmp380
	.quad	.Ltmp384
	.quad	.Ltmp388
	.quad	.Ltmp391
	.quad	.Ltmp394
	.quad	.Ltmp397
	.quad	.Ltmp400
	.quad	.Ltmp405
	.quad	.Ltmp410
	.quad	.Ltmp413
	.quad	.Ltmp417
	.quad	.Ltmp420
	.quad	.Ltmp423
	.quad	.Ltmp426
	.quad	.Ltmp429
	.quad	.Ltmp432
	.quad	.Ltmp435
	.quad	.Ltmp438
	.quad	.Lfunc_begin3
	.quad	.Ltmp472
	.quad	.Ltmp447
	.quad	.Ltmp464
	.quad	.Ltmp477
	.quad	.Lfunc_begin4
	.quad	.Ltmp498
	.quad	.Ltmp504
	.quad	.Ltmp490
	.quad	.Ltmp492
	.quad	.Ltmp496
	.quad	.Ltmp509
	.quad	.Lfunc_begin5
	.quad	.Ltmp525
	.quad	.Ltmp528
	.quad	.Ltmp548
	.quad	.Ltmp553
	.quad	.Lfunc_begin6
	.quad	.Ltmp579
	.quad	.Ltmp585
	.quad	.Ltmp576
	.quad	.Ltmp590
	.quad	.Lfunc_begin7
	.quad	.Ltmp601
	.quad	.Ltmp603
	.quad	.Ltmp607
	.quad	.Ltmp618
	.quad	.Ltmp622
	.quad	.Ltmp633
	.quad	.Ltmp637
	.quad	.Ltmp612
	.quad	.Ltmp627
	.quad	.Ltmp642
	.quad	.Lfunc_begin8
	.quad	.Ltmp652
	.quad	.Ltmp654
	.quad	.Ltmp658
	.quad	.Ltmp672
	.quad	.Ltmp678
	.quad	.Ltmp663
	.quad	.Ltmp670
	.quad	.Ltmp683
	.quad	.Lfunc_begin9
	.quad	.Ltmp711
	.quad	.Ltmp716
	.quad	.Lfunc_begin10
	.quad	.Ltmp727
	.quad	.Lfunc_begin11
	.quad	.Ltmp753
	.quad	.Ltmp775
	.quad	.Ltmp777
	.quad	.Ltmp781
	.quad	.Ltmp796
	.quad	.Ltmp802
	.quad	.Ltmp822
	.quad	.Ltmp838
	.quad	.Ltmp844
	.quad	.Ltmp742
	.quad	.Ltmp769
	.quad	.Ltmp786
	.quad	.Ltmp793
	.quad	.Ltmp807
	.quad	.Ltmp827
	.quad	.Ltmp849
	.quad	.Ltmp861
	.quad	.Lfunc_begin12
	.quad	.Lfunc_begin13
	.quad	.Ltmp883
	.quad	.Ltmp900
	.quad	.Ltmp906
	.quad	.Ltmp911
	.quad	.Lfunc_begin14
	.quad	.Ltmp941
	.quad	.Ltmp971
	.quad	.Ltmp999
	.quad	.Ltmp923
	.quad	.Ltmp925
	.quad	.Ltmp931
	.quad	.Ltmp946
	.quad	.Ltmp976
	.quad	.Ltmp984
	.quad	.Ltmp995
	.quad	.Ltmp996
	.quad	.Ltmp1003
	.quad	.Ltmp1004
	.quad	.Ltmp1008
	.quad	.Ltmp1009
	.quad	.Lfunc_begin15
	.quad	.Ltmp1021
	.quad	.Ltmp1032
	.quad	.Ltmp1017
	.quad	.Ltmp1037
	.quad	.Ltmp1042
	.quad	.Lfunc_begin16
	.quad	.Ltmp1077
	.quad	.Ltmp1062
	.quad	.Ltmp1097
	.quad	.Ltmp1067
	.quad	.Ltmp1082
	.quad	.Ltmp1102
	.quad	.Ltmp1118
	.quad	.Lfunc_begin17
	.quad	.Ltmp1141
	.quad	.Ltmp1159
	.quad	.Ltmp1180
	.quad	.Ltmp1201
	.quad	.Ltmp1236
	.quad	.Ltmp1146
	.quad	.Ltmp1164
	.quad	.Ltmp1185
	.quad	.Ltmp1206
	.quad	.Ltmp1225
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
