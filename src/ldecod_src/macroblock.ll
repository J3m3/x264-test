; ModuleID = 'ldecod_src/macroblock.c'
source_filename = "ldecod_src/macroblock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.macroblock = type { ptr, ptr, ptr, i32, %struct.BlockPos, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [3 x i32], i32, i32, i32, i32, i16, i8, i8, i16, i16, ptr, ptr, ptr, ptr, i16, [2 x [4 x [4 x [2 x i16]]]], i32, [3 x i64], [3 x i64], [3 x i64], i32, [4 x i8], [4 x i8], i8, i8, i8, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.BlockPos = type { i16, i16 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.pic_motion_params = type { [2 x ptr], [2 x %struct.MotionVector], [2 x i8] }
%struct.MotionVector = type { i16, i16 }
%struct.datapartition = type { ptr, %struct.DecodingEnvironment, ptr }
%struct.DecodingEnvironment = type { i32, i32, i32, ptr, ptr }
%struct.pix_pos = type { i32, i32, i16, i16, i16, i16 }

@QP_SCALE_CR = internal unnamed_addr constant [52 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1D\1E\1F  !\22\22##$$%%%&&&''''", align 16
@PicPos = external local_unnamed_addr global ptr, align 8
@SetB8Mode.p_v2b8 = internal unnamed_addr constant [5 x i8] c"\04\05\06\07\0B", align 1
@SetB8Mode.p_v2pd = internal unnamed_addr constant [5 x i8] c"\00\00\00\00\FF", align 1
@SetB8Mode.b_v2b8 = internal unnamed_addr constant [14 x i8] c"\00\04\04\04\05\06\05\06\05\06\07\07\07\0B", align 1
@SetB8Mode.b_v2pd = internal unnamed_addr constant [14 x i8] c"\02\00\01\02\00\00\01\01\02\02\00\01\02\FF", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"writeCoeff4x4_CAVLC: Invalid block type\00", align 1
@po2 = internal unnamed_addr constant [64 x i64] [i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128, i64 256, i64 512, i64 1024, i64 2048, i64 4096, i64 8192, i64 16384, i64 32768, i64 65536, i64 131072, i64 262144, i64 524288, i64 1048576, i64 2097152, i64 4194304, i64 8388608, i64 16777216, i64 33554432, i64 67108864, i64 134217728, i64 268435456, i64 536870912, i64 1073741824, i64 2147483648, i64 4294967296, i64 8589934592, i64 17179869184, i64 34359738368, i64 68719476736, i64 137438953472, i64 274877906944, i64 549755813888, i64 1099511627776, i64 2199023255552, i64 4398046511104, i64 8796093022208, i64 17592186044416, i64 35184372088832, i64 70368744177664, i64 140737488355328, i64 281474976710656, i64 562949953421312, i64 1125899906842624, i64 2251799813685248, i64 4503599627370496, i64 9007199254740992, i64 18014398509481984, i64 36028797018963968, i64 72057594037927936, i64 144115188075855872, i64 288230376151711744, i64 576460752303423488, i64 1152921504606846976, i64 2305843009213693952, i64 4611686018427387904, i64 -9223372036854775808], align 16
@interpret_mb_mode_B.offset2pdir16x16 = internal unnamed_addr constant <{ i16, i16, i16, i16, [8 x i16] }> <{ i16 0, i16 0, i16 1, i16 2, [8 x i16] zeroinitializer }>, align 16
@interpret_mb_mode_B.offset2pdir16x8 = internal unnamed_addr constant [22 x [2 x i16]] [[2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 0, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 0], [2 x i16] zeroinitializer, [2 x i16] [i16 0, i16 2], [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 2], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 0], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 2], [2 x i16] zeroinitializer], align 16
@interpret_mb_mode_B.offset2pdir8x16 = internal unnamed_addr constant [22 x [2 x i16]] [[2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 0, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 0], [2 x i16] zeroinitializer, [2 x i16] [i16 0, i16 2], [2 x i16] zeroinitializer, [2 x i16] [i16 1, i16 2], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 0], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 1], [2 x i16] zeroinitializer, [2 x i16] [i16 2, i16 2]], align 16
@interpret_mb_mode_I.ICBPTAB = internal unnamed_addr constant [6 x i16] [i16 0, i16 16, i16 32, i16 15, i16 31, i16 47], align 2
@__const.interpret_mb_mode_SI.ICBPTAB = private unnamed_addr constant [6 x i32] [i32 0, i32 16, i32 32, i32 15, i32 31, i32 47], align 16
@assignSE2partition = internal constant [2 x [20 x i8]] [[20 x i8] zeroinitializer, [20 x i8] c"\00\00\00\00\00\00\00\01\01\01\01\00\02\02\02\02\00\00\00\00"], align 16
@.str.3 = private unnamed_addr constant [33 x i8] c"illegal chroma intra pred mode!\0A\00", align 1
@BLOCK_STEP = internal unnamed_addr constant [8 x [2 x i32]] [[2 x i32] zeroinitializer, [2 x i32] [i32 4, i32 4], [2 x i32] [i32 4, i32 2], [2 x i32] [i32 2, i32 4], [2 x i32] [i32 2, i32 2], [2 x i32] [i32 2, i32 1], [2 x i32] [i32 1, i32 2], [2 x i32] [i32 1, i32 1]], align 16
@SNGL_SCAN = internal unnamed_addr constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\03\03"], align 16
@FIELD_SCAN = internal unnamed_addr constant [16 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03", [2 x i8] c"\02\00", [2 x i8] c"\02\01", [2 x i8] c"\02\02", [2 x i8] c"\02\03", [2 x i8] c"\03\00", [2 x i8] c"\03\01", [2 x i8] c"\03\02", [2 x i8] c"\03\03"], align 16
@cofuv_blk_x = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\00\01\00\01", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\00\01\00\01", [4 x i8] c"\00\01\00\01", [4 x i8] c"\00\01\00\01", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03", [4 x i8] c"\00\01\00\01", [4 x i8] c"\02\03\02\03"]], align 16
@cofuv_blk_y = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\00\01\01", [4 x i8] c"\00\00\01\01", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\01\01", [4 x i8] c"\02\02\03\03", [4 x i8] c"\00\00\01\01", [4 x i8] c"\02\02\03\03", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\01\01", [4 x i8] c"\00\00\01\01", [4 x i8] c"\02\02\03\03", [4 x i8] c"\02\02\03\03", [4 x i8] c"\00\00\01\01", [4 x i8] c"\00\00\01\01", [4 x i8] c"\02\02\03\03", [4 x i8] c"\02\02\03\03"]], align 16
@subblk_offset_y = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\00\00\04\04", [4 x i8] c"\00\00\04\04", [4 x i8] c"\08\08\0C\0C", [4 x i8] c"\08\08\0C\0C"]], align 16
@subblk_offset_x = internal unnamed_addr constant [3 x [8 x [4 x i8]]] [[8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] c"\00\04\00\04", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], [8 x [4 x i8]] [[4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C", [4 x i8] c"\00\04\00\04", [4 x i8] c"\08\0C\08\0C"]], align 16
@cbp_blk_chroma = internal unnamed_addr constant [8 x [4 x i8]] [[4 x i8] c"\10\11\12\13", [4 x i8] c"\14\15\16\17", [4 x i8] c"\18\19\1A\1B", [4 x i8] c"\1C\1D\1E\1F", [4 x i8] c" !\22#", [4 x i8] c"$%&'", [4 x i8] c"()*+", [4 x i8] c",-./"], align 16
@.str.5 = private unnamed_addr constant [28 x i8] c"mb_qp_delta is out of range\00", align 1
@SNGL_SCAN8x8 = internal unnamed_addr constant [64 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\01\00", [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\01", [2 x i8] c"\02\00", [2 x i8] c"\03\00", [2 x i8] c"\02\01", [2 x i8] c"\01\02", [2 x i8] c"\00\03", [2 x i8] c"\00\04", [2 x i8] c"\01\03", [2 x i8] c"\02\02", [2 x i8] c"\03\01", [2 x i8] c"\04\00", [2 x i8] c"\05\00", [2 x i8] c"\04\01", [2 x i8] c"\03\02", [2 x i8] c"\02\03", [2 x i8] c"\01\04", [2 x i8] c"\00\05", [2 x i8] c"\00\06", [2 x i8] c"\01\05", [2 x i8] c"\02\04", [2 x i8] c"\03\03", [2 x i8] c"\04\02", [2 x i8] c"\05\01", [2 x i8] c"\06\00", [2 x i8] c"\07\00", [2 x i8] c"\06\01", [2 x i8] c"\05\02", [2 x i8] c"\04\03", [2 x i8] c"\03\04", [2 x i8] c"\02\05", [2 x i8] c"\01\06", [2 x i8] c"\00\07", [2 x i8] c"\01\07", [2 x i8] c"\02\06", [2 x i8] c"\03\05", [2 x i8] c"\04\04", [2 x i8] c"\05\03", [2 x i8] c"\06\02", [2 x i8] c"\07\01", [2 x i8] c"\07\02", [2 x i8] c"\06\03", [2 x i8] c"\05\04", [2 x i8] c"\04\05", [2 x i8] c"\03\06", [2 x i8] c"\02\07", [2 x i8] c"\03\07", [2 x i8] c"\04\06", [2 x i8] c"\05\05", [2 x i8] c"\06\04", [2 x i8] c"\07\03", [2 x i8] c"\07\04", [2 x i8] c"\06\05", [2 x i8] c"\05\06", [2 x i8] c"\04\07", [2 x i8] c"\05\07", [2 x i8] c"\06\06", [2 x i8] c"\07\05", [2 x i8] c"\07\06", [2 x i8] c"\06\07", [2 x i8] c"\07\07"], align 16
@FIELD_SCAN8x8 = internal unnamed_addr constant [64 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\00\02", [2 x i8] c"\01\00", [2 x i8] c"\01\01", [2 x i8] c"\00\03", [2 x i8] c"\00\04", [2 x i8] c"\01\02", [2 x i8] c"\02\00", [2 x i8] c"\01\03", [2 x i8] c"\00\05", [2 x i8] c"\00\06", [2 x i8] c"\00\07", [2 x i8] c"\01\04", [2 x i8] c"\02\01", [2 x i8] c"\03\00", [2 x i8] c"\02\02", [2 x i8] c"\01\05", [2 x i8] c"\01\06", [2 x i8] c"\01\07", [2 x i8] c"\02\03", [2 x i8] c"\03\01", [2 x i8] c"\04\00", [2 x i8] c"\03\02", [2 x i8] c"\02\04", [2 x i8] c"\02\05", [2 x i8] c"\02\06", [2 x i8] c"\02\07", [2 x i8] c"\03\03", [2 x i8] c"\04\01", [2 x i8] c"\05\00", [2 x i8] c"\04\02", [2 x i8] c"\03\04", [2 x i8] c"\03\05", [2 x i8] c"\03\06", [2 x i8] c"\03\07", [2 x i8] c"\04\03", [2 x i8] c"\05\01", [2 x i8] c"\06\00", [2 x i8] c"\05\02", [2 x i8] c"\04\04", [2 x i8] c"\04\05", [2 x i8] c"\04\06", [2 x i8] c"\04\07", [2 x i8] c"\05\03", [2 x i8] c"\06\01", [2 x i8] c"\06\02", [2 x i8] c"\05\04", [2 x i8] c"\05\05", [2 x i8] c"\05\06", [2 x i8] c"\05\07", [2 x i8] c"\06\03", [2 x i8] c"\07\00", [2 x i8] c"\07\01", [2 x i8] c"\06\04", [2 x i8] c"\06\05", [2 x i8] c"\06\06", [2 x i8] c"\06\07", [2 x i8] c"\07\02", [2 x i8] c"\07\03", [2 x i8] c"\07\04", [2 x i8] c"\07\05", [2 x i8] c"\07\06", [2 x i8] c"\07\07"], align 16
@SCAN_YUV422 = internal unnamed_addr constant [8 x [2 x i8]] [[2 x i8] zeroinitializer, [2 x i8] c"\00\01", [2 x i8] c"\01\00", [2 x i8] c"\00\02", [2 x i8] c"\00\03", [2 x i8] c"\01\01", [2 x i8] c"\01\02", [2 x i8] c"\01\03"], align 16
@readCoeff4x4_CAVLC.incVlc = internal unnamed_addr constant [7 x i32] [i32 0, i32 3, i32 6, i32 12, i32 24, i32 48, i32 32768], align 16
@str = private unnamed_addr constant [23 x i8] c"Unsupported slice type\00", align 1
@str.7 = private unnamed_addr constant [32 x i8] c"Unsupported entropy coding mode\00", align 1
@str.8 = private unnamed_addr constant [32 x i8] c"Partition Mode is not supported\00", align 1
@switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420 = private unnamed_addr constant [5 x i64] [i64 13480, i64 13488, i64 13488, i64 13480, i64 13480], align 8

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @set_chroma_qp(ptr nocapture noundef %currMB) local_unnamed_addr #0 {
entry:
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %1 = load ptr, ptr %currMB, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %1, i64 13520
  %2 = load ptr, ptr %dec_picture2, align 8
  %bitdepth_chroma_qp_scale = getelementptr inbounds i8, ptr %0, i64 849056
  %qp = getelementptr inbounds i8, ptr %currMB, i64 68
  %3 = load i32, ptr %qp, align 4
  %chroma_qp_offset = getelementptr inbounds i8, ptr %2, i64 300
  %qpc = getelementptr inbounds i8, ptr %currMB, i64 72
  %4 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %sub = sub nsw i32 0, %4
  %5 = load i32, ptr %chroma_qp_offset, align 4
  %add = add nsw i32 %5, %3
  %cond.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add, i32 %sub)
  %cond.i4.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i, i32 51)
  %cmp8 = icmp slt i32 %cond.i.i, 0
  br i1 %cmp8, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %idxprom15 = zext nneg i32 %cond.i4.i to i64
  %arrayidx16 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15
  %6 = load i8, ptr %arrayidx16, align 1
  %conv = zext i8 %6 to i32
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %conv, %cond.false ], [ %cond.i4.i, %entry ]
  store i32 %cond, ptr %qpc, align 4
  %7 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add24 = add nsw i32 %7, %cond
  %arrayidx27 = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24, ptr %arrayidx27, align 4
  %8 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %sub.1 = sub nsw i32 0, %8
  %arrayidx.1 = getelementptr inbounds i8, ptr %2, i64 304
  %9 = load i32, ptr %arrayidx.1, align 4
  %add.1 = add nsw i32 %9, %3
  %cond.i.i.1 = tail call noundef i32 @llvm.smax.i32(i32 %add.1, i32 %sub.1)
  %cond.i4.i.1 = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1, i32 51)
  %cmp8.1 = icmp slt i32 %cond.i.i.1, 0
  br i1 %cmp8.1, label %cond.end.1, label %cond.false.1

cond.false.1:                                     ; preds = %cond.end
  %idxprom15.1 = zext nneg i32 %cond.i4.i.1 to i64
  %arrayidx16.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1
  %10 = load i8, ptr %arrayidx16.1, align 1
  %conv.1 = zext i8 %10 to i32
  br label %cond.end.1

cond.end.1:                                       ; preds = %cond.false.1, %cond.end
  %cond.1 = phi i32 [ %conv.1, %cond.false.1 ], [ %cond.i4.i.1, %cond.end ]
  %arrayidx4.1 = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1, ptr %arrayidx4.1, align 4
  %11 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add24.1 = add nsw i32 %11, %cond.1
  %arrayidx27.1 = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1, ptr %arrayidx27.1, align 4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @update_qp(ptr nocapture noundef %currMB, i32 noundef %qp) local_unnamed_addr #0 {
entry:
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %qp2 = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %qp, ptr %qp2, align 4
  %bitdepth_luma_qp_scale = getelementptr inbounds i8, ptr %0, i64 849052
  %1 = load i32, ptr %bitdepth_luma_qp_scale, align 4
  %add = add nsw i32 %1, %qp
  %qp_scaled = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add, ptr %qp_scaled, align 8
  %2 = load ptr, ptr %currMB, align 8
  %dec_picture2.i = getelementptr inbounds i8, ptr %2, i64 13520
  %3 = load ptr, ptr %dec_picture2.i, align 8
  %bitdepth_chroma_qp_scale.i = getelementptr inbounds i8, ptr %0, i64 849056
  %chroma_qp_offset.i = getelementptr inbounds i8, ptr %3, i64 300
  %qpc.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %4 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %sub.i = sub nsw i32 0, %4
  %5 = load i32, ptr %chroma_qp_offset.i, align 4
  %add.i = add nsw i32 %5, %qp
  %cond.i.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.i, i32 %sub.i)
  %cond.i4.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i, i32 51)
  %cmp8.i = icmp slt i32 %cond.i.i.i, 0
  br i1 %cmp8.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %entry
  %idxprom15.i = zext nneg i32 %cond.i4.i.i to i64
  %arrayidx16.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i
  %6 = load i8, ptr %arrayidx16.i, align 1
  %conv.i = zext i8 %6 to i32
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %entry
  %cond.i = phi i32 [ %conv.i, %cond.false.i ], [ %cond.i4.i.i, %entry ]
  store i32 %cond.i, ptr %qpc.i, align 4
  %7 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %add24.i = add nsw i32 %7, %cond.i
  %arrayidx27.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i, ptr %arrayidx27.i, align 4
  %8 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %sub.1.i = sub nsw i32 0, %8
  %arrayidx.1.i = getelementptr inbounds i8, ptr %3, i64 304
  %9 = load i32, ptr %arrayidx.1.i, align 4
  %add.1.i = add nsw i32 %9, %qp
  %cond.i.i.1.i = tail call noundef i32 @llvm.smax.i32(i32 %add.1.i, i32 %sub.1.i)
  %cond.i4.i.1.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i, i32 51)
  %cmp8.1.i = icmp slt i32 %cond.i.i.1.i, 0
  br i1 %cmp8.1.i, label %set_chroma_qp.exit, label %cond.false.1.i

cond.false.1.i:                                   ; preds = %cond.end.i
  %idxprom15.1.i = zext nneg i32 %cond.i4.i.1.i to i64
  %arrayidx16.1.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i
  %10 = load i8, ptr %arrayidx16.1.i, align 1
  %conv.1.i = zext i8 %10 to i32
  br label %set_chroma_qp.exit

set_chroma_qp.exit:                               ; preds = %cond.end.i, %cond.false.1.i
  %cond.1.i = phi i32 [ %conv.1.i, %cond.false.1.i ], [ %cond.i4.i.1.i, %cond.end.i ]
  %arrayidx4.1.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i, ptr %arrayidx4.1.i, align 4
  %11 = load i32, ptr %bitdepth_chroma_qp_scale.i, align 8
  %add24.1.i = add nsw i32 %11, %cond.1.i
  %arrayidx27.1.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i, ptr %arrayidx27.1.i, align 4
  %cmp = icmp eq i32 %add, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %set_chroma_qp.exit
  %lossless_qpprime_flag = getelementptr inbounds i8, ptr %0, i64 849092
  %12 = load i32, ptr %lossless_qpprime_flag, align 4
  %cmp5 = icmp eq i32 %12, 1
  %13 = zext i1 %cmp5 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %set_chroma_qp.exit
  %land.ext = phi i32 [ 0, %set_chroma_qp.exit ], [ %13, %land.rhs ]
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext, ptr %is_lossless, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @invScaleCoeff(ptr nocapture noundef %currMB, i32 noundef %level, i32 noundef %run, i32 noundef %qp_per, i32 noundef %i, i32 noundef %j, i32 noundef %i0, i32 noundef %j0, i32 noundef %coef_ctr, ptr nocapture noundef readonly %pos_scan4x4, ptr nocapture noundef readonly %InvLevelScale4x4) local_unnamed_addr #2 {
entry:
  %cmp.not = icmp eq i32 %level, 0
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %add = add nsw i32 %run, 1
  %add1 = add nsw i32 %add, %coef_ctr
  %idxprom = sext i32 %add1 to i64
  %arrayidx = getelementptr inbounds [2 x i8], ptr %pos_scan4x4, i64 %idxprom
  %0 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %0 to i32
  %arrayidx5 = getelementptr inbounds i8, ptr %arrayidx, i64 1
  %1 = load i8, ptr %arrayidx5, align 1
  %conv6 = zext i8 %1 to i32
  %shl = shl i32 %j, 2
  %add7 = add nsw i32 %shl, %i
  %cmp.i = icmp sgt i32 %add7, 63
  br i1 %cmp.i, label %i64_power2.exit, label %cond.false.i

cond.false.i:                                     ; preds = %if.then
  %idxprom.i = sext i32 %add7 to i64
  %arrayidx.i = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i
  %2 = load i64, ptr %arrayidx.i, align 8
  br label %i64_power2.exit

i64_power2.exit:                                  ; preds = %if.then, %cond.false.i
  %cond.i = phi i64 [ %2, %cond.false.i ], [ 0, %if.then ]
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %3 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %3, %cond.i
  store i64 %or, ptr %cbp_blk, align 8
  %idxprom9 = zext i8 %1 to i64
  %idxprom11 = zext i8 %0 to i64
  %arrayidx12 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom9, i64 %idxprom11
  %4 = load i32, ptr %arrayidx12, align 4
  %mul = mul nsw i32 %4, %level
  %shl13 = shl i32 %mul, %qp_per
  %add.i = add nsw i32 %shl13, 8
  %shr.i = ashr i32 %add.i, 4
  %5 = load ptr, ptr %currMB, align 8
  %cof = getelementptr inbounds i8, ptr %5, i64 1272
  %6 = load ptr, ptr %cof, align 8
  %7 = load ptr, ptr %6, align 8
  %add17 = add nsw i32 %shl, %conv6
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds ptr, ptr %7, i64 %idxprom18
  %8 = load ptr, ptr %arrayidx19, align 8
  %shl20 = shl i32 %i, 2
  %add21 = add nsw i32 %shl20, %conv
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds i32, ptr %8, i64 %idxprom22
  store i32 %shr.i, ptr %arrayidx23, align 4
  br label %if.end

if.end:                                           ; preds = %i64_power2.exit, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @start_macroblock(ptr noundef %currSlice, ptr noundef %currMB) local_unnamed_addr #3 {
entry:
  %0 = load ptr, ptr %currSlice, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %currSlice, i64 13520
  %1 = load ptr, ptr %dec_picture2, align 8
  %current_mb_nr = getelementptr inbounds i8, ptr %currSlice, i64 108
  %2 = load i32, ptr %current_mb_nr, align 4
  %mb_data = getelementptr inbounds i8, ptr %currSlice, i64 13512
  %3 = load ptr, ptr %mb_data, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, ptr %3, i64 %idxprom
  store ptr %arrayidx, ptr %currMB, align 8
  store ptr %currSlice, ptr %arrayidx, align 8
  %4 = load ptr, ptr %currMB, align 8
  %p_Vid3 = getelementptr inbounds i8, ptr %4, i64 8
  store ptr %0, ptr %p_Vid3, align 8
  %5 = load ptr, ptr %currMB, align 8
  %mbAddrX = getelementptr inbounds i8, ptr %5, i64 24
  store i32 %2, ptr %mbAddrX, align 8
  %mb_aff_frame_flag = getelementptr inbounds i8, ptr %currSlice, i64 128
  %6 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %width = getelementptr inbounds i8, ptr %0, i64 848780
  %7 = load i32, ptr %width, align 4
  %div = sdiv i32 %7, 8
  %rem = srem i32 %2, %div
  %conv = trunc i32 %rem to i16
  %8 = load ptr, ptr %currMB, align 8
  %mb = getelementptr inbounds i8, ptr %8, i64 28
  store i16 %conv, ptr %mb, align 4
  %9 = load i32, ptr %width, align 4
  %div6 = sdiv i32 %9, 8
  %div7 = sdiv i32 %2, %div6
  %div7.tr = trunc i32 %div7 to i16
  %conv9 = shl i16 %div7.tr, 1
  %10 = load ptr, ptr %currMB, align 8
  %y = getelementptr inbounds i8, ptr %10, i64 30
  store i16 %conv9, ptr %y, align 2
  %11 = load ptr, ptr %currMB, align 8
  %mb11 = getelementptr inbounds i8, ptr %11, i64 28
  %12 = load i16, ptr %mb11, align 4
  %13 = and i16 %12, 1
  %y15 = getelementptr inbounds i8, ptr %11, i64 30
  %14 = load i16, ptr %y15, align 2
  %add = add i16 %14, %13
  store i16 %add, ptr %y15, align 2
  %15 = load ptr, ptr %currMB, align 8
  %mb18 = getelementptr inbounds i8, ptr %15, i64 28
  %16 = load i16, ptr %mb18, align 4
  %17 = ashr i16 %16, 1
  store i16 %17, ptr %mb18, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %18 = load ptr, ptr %currMB, align 8
  %mb22 = getelementptr inbounds i8, ptr %18, i64 28
  %19 = load ptr, ptr @PicPos, align 8
  %arrayidx24 = getelementptr inbounds %struct.BlockPos, ptr %19, i64 %idxprom
  %20 = load i32, ptr %arrayidx24, align 2
  store i32 %20, ptr %mb22, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load ptr, ptr %currMB, align 8
  %mb25 = getelementptr inbounds i8, ptr %21, i64 28
  %22 = load i16, ptr %mb25, align 4
  %conv27 = sext i16 %22 to i32
  %mul28 = shl nsw i32 %conv27, 2
  %block_x = getelementptr inbounds i8, ptr %21, i64 32
  store i32 %mul28, ptr %block_x, align 8
  %23 = load ptr, ptr %currMB, align 8
  %y30 = getelementptr inbounds i8, ptr %23, i64 30
  %24 = load i16, ptr %y30, align 2
  %conv31 = sext i16 %24 to i32
  %mul32 = shl nsw i32 %conv31, 2
  %block_y = getelementptr inbounds i8, ptr %23, i64 36
  store i32 %mul32, ptr %block_y, align 4
  %25 = load ptr, ptr %currMB, align 8
  %block_y33 = getelementptr inbounds i8, ptr %25, i64 36
  %26 = load i32, ptr %block_y33, align 4
  %block_y_aff = getelementptr inbounds i8, ptr %25, i64 40
  store i32 %26, ptr %block_y_aff, align 8
  %27 = load ptr, ptr %currMB, align 8
  %mb34 = getelementptr inbounds i8, ptr %27, i64 28
  %28 = load i16, ptr %mb34, align 4
  %conv36 = sext i16 %28 to i32
  %mul37 = shl nsw i32 %conv36, 4
  %pix_x = getelementptr inbounds i8, ptr %27, i64 44
  store i32 %mul37, ptr %pix_x, align 4
  %29 = load ptr, ptr %currMB, align 8
  %y39 = getelementptr inbounds i8, ptr %29, i64 30
  %30 = load i16, ptr %y39, align 2
  %conv40 = sext i16 %30 to i32
  %mul41 = shl nsw i32 %conv40, 4
  %pix_y = getelementptr inbounds i8, ptr %29, i64 48
  store i32 %mul41, ptr %pix_y, align 8
  %31 = load ptr, ptr %currMB, align 8
  %mb42 = getelementptr inbounds i8, ptr %31, i64 28
  %32 = load i16, ptr %mb42, align 4
  %conv44 = sext i16 %32 to i32
  %mb_cr_size_x = getelementptr inbounds i8, ptr %0, i64 849108
  %33 = load i32, ptr %mb_cr_size_x, align 4
  %mul45 = mul nsw i32 %33, %conv44
  %pix_c_x = getelementptr inbounds i8, ptr %31, i64 52
  store i32 %mul45, ptr %pix_c_x, align 4
  %34 = load ptr, ptr %currMB, align 8
  %y47 = getelementptr inbounds i8, ptr %34, i64 30
  %35 = load i16, ptr %y47, align 2
  %conv48 = sext i16 %35 to i32
  %mb_cr_size_y = getelementptr inbounds i8, ptr %0, i64 849112
  %36 = load i32, ptr %mb_cr_size_y, align 8
  %mul49 = mul nsw i32 %36, %conv48
  %pix_c_y = getelementptr inbounds i8, ptr %34, i64 56
  store i32 %mul49, ptr %pix_c_y, align 8
  %37 = load ptr, ptr %currMB, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %37, i64 96
  store i32 0, ptr %is_intra_block, align 8
  %current_slice_nr = getelementptr inbounds i8, ptr %currSlice, i64 116
  %38 = load i16, ptr %current_slice_nr, align 4
  %39 = load ptr, ptr %currMB, align 8
  %slice_nr = getelementptr inbounds i8, ptr %39, i64 108
  store i16 %38, ptr %slice_nr, align 4
  %slice_id = getelementptr inbounds i8, ptr %1, i64 216
  %40 = load ptr, ptr %slice_id, align 8
  %41 = load ptr, ptr %currMB, align 8
  %mb51 = getelementptr inbounds i8, ptr %41, i64 28
  %y52 = getelementptr inbounds i8, ptr %41, i64 30
  %42 = load i16, ptr %y52, align 2
  %idxprom53 = sext i16 %42 to i64
  %arrayidx54 = getelementptr inbounds ptr, ptr %40, i64 %idxprom53
  %43 = load ptr, ptr %arrayidx54, align 8
  %44 = load i16, ptr %mb51, align 4
  %idxprom57 = sext i16 %44 to i64
  %arrayidx58 = getelementptr inbounds i16, ptr %43, i64 %idxprom57
  store i16 %38, ptr %arrayidx58, align 2
  %45 = load ptr, ptr %currMB, align 8
  tail call void @CheckAvailabilityOfNeighbors(ptr noundef %45) #14
  %46 = load ptr, ptr %currMB, align 8
  %47 = load i32, ptr %mb_aff_frame_flag, align 8
  tail call void @init_motion_vector_prediction(ptr noundef %46, i32 noundef %47) #14
  %active_sps = getelementptr inbounds i8, ptr %currSlice, i64 24
  %48 = load ptr, ptr %active_sps, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %48, i64 36
  %49 = load i32, ptr %chroma_format_idc, align 4
  tail call void @set_read_and_store_CBP(ptr noundef nonnull %currMB, i32 noundef %49) #14
  %50 = load ptr, ptr %currMB, align 8
  %mb_type = getelementptr inbounds i8, ptr %50, i64 152
  store i16 0, ptr %mb_type, align 8
  %51 = load ptr, ptr %currMB, align 8
  %delta_quant = getelementptr inbounds i8, ptr %51, i64 112
  store i16 0, ptr %delta_quant, align 8
  %52 = load ptr, ptr %currMB, align 8
  %cbp = getelementptr inbounds i8, ptr %52, i64 284
  store i32 0, ptr %cbp, align 4
  %53 = load ptr, ptr %currMB, align 8
  %c_ipred_mode = getelementptr inbounds i8, ptr %53, i64 373
  store i8 0, ptr %c_ipred_mode, align 1
  %slice_type = getelementptr inbounds i8, ptr %currSlice, i64 164
  %54 = load i32, ptr %slice_type, align 4
  switch i32 %54, label %if.then65 [
    i32 2, label %if.end76
    i32 1, label %if.else69
  ]

if.then65:                                        ; preds = %if.end
  %55 = load ptr, ptr %currMB, align 8
  %mvd = getelementptr inbounds i8, ptr %55, i64 154
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(64) %mvd, i8 0, i64 64, i1 false)
  br label %if.end76

if.else69:                                        ; preds = %if.end
  %56 = load ptr, ptr %currMB, align 8
  %mvd70 = getelementptr inbounds i8, ptr %56, i64 154
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(128) %mvd70, i8 0, i64 128, i1 false)
  br label %if.end76

if.end76:                                         ; preds = %if.end, %if.then65, %if.else69
  %57 = load ptr, ptr %currMB, align 8
  %cbp_blk = getelementptr inbounds i8, ptr %57, i64 288
  store i64 0, ptr %cbp_blk, align 8
  %58 = load ptr, ptr %currMB, align 8
  %cbp_bits = getelementptr inbounds i8, ptr %58, i64 312
  store i64 0, ptr %cbp_bits, align 8
  %59 = load ptr, ptr %currMB, align 8
  %cbp_bits_8x8 = getelementptr inbounds i8, ptr %59, i64 336
  store i64 0, ptr %cbp_bits_8x8, align 8
  %60 = load ptr, ptr %currMB, align 8
  %arrayidx80.1 = getelementptr inbounds i8, ptr %60, i64 296
  store i64 0, ptr %arrayidx80.1, align 8
  %61 = load ptr, ptr %currMB, align 8
  %arrayidx82.1 = getelementptr inbounds i8, ptr %61, i64 320
  store i64 0, ptr %arrayidx82.1, align 8
  %62 = load ptr, ptr %currMB, align 8
  %arrayidx84.1 = getelementptr inbounds i8, ptr %62, i64 344
  store i64 0, ptr %arrayidx84.1, align 8
  %63 = load ptr, ptr %currMB, align 8
  %arrayidx80.2 = getelementptr inbounds i8, ptr %63, i64 304
  store i64 0, ptr %arrayidx80.2, align 8
  %64 = load ptr, ptr %currMB, align 8
  %arrayidx82.2 = getelementptr inbounds i8, ptr %64, i64 328
  store i64 0, ptr %arrayidx82.2, align 8
  %65 = load ptr, ptr %currMB, align 8
  %arrayidx84.2 = getelementptr inbounds i8, ptr %65, i64 352
  store i64 0, ptr %arrayidx84.2, align 8
  %is_reset_coeff = getelementptr inbounds i8, ptr %currSlice, i64 1240
  %66 = load i32, ptr %is_reset_coeff, align 8
  %cmp85 = icmp eq i32 %66, 0
  br i1 %cmp85, label %if.then87, label %if.end117

if.then87:                                        ; preds = %if.end76
  %mb_rres = getelementptr inbounds i8, ptr %currSlice, i64 1264
  %67 = load ptr, ptr %mb_rres, align 8
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %68, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %69, i8 0, i64 1024, i1 false)
  %70 = load ptr, ptr %mb_rres, align 8
  %arrayidx91 = getelementptr inbounds i8, ptr %70, i64 8
  %71 = load ptr, ptr %arrayidx91, align 8
  %72 = load ptr, ptr %71, align 8
  %73 = load i32, ptr %mb_cr_size_x, align 4
  %74 = load i32, ptr %mb_cr_size_y, align 8
  %mul95 = shl i32 %73, 2
  %mul97 = mul i32 %mul95, %74
  %conv.i = sext i32 %mul97 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %72, i8 0, i64 %conv.i, i1 false)
  %75 = load ptr, ptr %mb_rres, align 8
  %arrayidx100 = getelementptr inbounds i8, ptr %75, i64 16
  %76 = load ptr, ptr %arrayidx100, align 8
  %77 = load ptr, ptr %76, align 8
  %78 = load i32, ptr %mb_cr_size_x, align 4
  %79 = load i32, ptr %mb_cr_size_y, align 8
  %mul104 = shl i32 %78, 2
  %mul106 = mul i32 %mul104, %79
  %conv.i203 = sext i32 %mul106 to i64
  tail call void @llvm.memset.p0.i64(ptr align 1 %77, i8 0, i64 %conv.i203, i1 false)
  %cof = getelementptr inbounds i8, ptr %currSlice, i64 1272
  %80 = load ptr, ptr %cof, align 8
  %81 = load ptr, ptr %80, align 8
  %82 = load ptr, ptr %81, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %82, i8 0, i64 1024, i1 false)
  %83 = load ptr, ptr %cof, align 8
  %arrayidx111 = getelementptr inbounds i8, ptr %83, i64 8
  %84 = load ptr, ptr %arrayidx111, align 8
  %85 = load ptr, ptr %84, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %85, i8 0, i64 1024, i1 false)
  %86 = load ptr, ptr %cof, align 8
  %arrayidx114 = getelementptr inbounds i8, ptr %86, i64 16
  %87 = load ptr, ptr %arrayidx114, align 8
  %88 = load ptr, ptr %87, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %88, i8 0, i64 1024, i1 false)
  store i32 1, ptr %is_reset_coeff, align 8
  br label %if.end117

if.end117:                                        ; preds = %if.then87, %if.end76
  %DFDisableIdc = getelementptr inbounds i8, ptr %currSlice, i64 1220
  %89 = load i16, ptr %DFDisableIdc, align 4
  %90 = load ptr, ptr %currMB, align 8
  %DFDisableIdc118 = getelementptr inbounds i8, ptr %90, i64 376
  store i16 %89, ptr %DFDisableIdc118, align 8
  %DFAlphaC0Offset = getelementptr inbounds i8, ptr %currSlice, i64 1222
  %91 = load i16, ptr %DFAlphaC0Offset, align 2
  %92 = load ptr, ptr %currMB, align 8
  %DFAlphaC0Offset119 = getelementptr inbounds i8, ptr %92, i64 378
  store i16 %91, ptr %DFAlphaC0Offset119, align 2
  %DFBetaOffset = getelementptr inbounds i8, ptr %currSlice, i64 1224
  %93 = load i16, ptr %DFBetaOffset, align 8
  %94 = load ptr, ptr %currMB, align 8
  %DFBetaOffset120 = getelementptr inbounds i8, ptr %94, i64 380
  store i16 %93, ptr %DFBetaOffset120, align 4
  %95 = load ptr, ptr %currMB, align 8
  %list_offset = getelementptr inbounds i8, ptr %95, i64 114
  store i16 0, ptr %list_offset, align 2
  %96 = load ptr, ptr %currMB, align 8
  %mixedModeEdgeFlag = getelementptr inbounds i8, ptr %96, i64 472
  store i8 0, ptr %mixedModeEdgeFlag, align 8
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare void @CheckAvailabilityOfNeighbors(ptr noundef) local_unnamed_addr #5

declare void @init_motion_vector_prediction(ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @set_read_and_store_CBP(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local range(i32 0, 2) i32 @exit_macroblock(ptr noundef %currSlice, i32 noundef %eos_bit) local_unnamed_addr #3 {
entry:
  %0 = load ptr, ptr %currSlice, align 8
  %num_dec_mb = getelementptr inbounds i8, ptr %currSlice, i64 112
  %1 = load i32, ptr %num_dec_mb, align 8
  %inc = add i32 %1, 1
  store i32 %inc, ptr %num_dec_mb, align 8
  %current_mb_nr = getelementptr inbounds i8, ptr %currSlice, i64 108
  %2 = load i32, ptr %current_mb_nr, align 4
  %PicSizeInMbs = getelementptr inbounds i8, ptr %0, i64 849012
  %3 = load i32, ptr %PicSizeInMbs, align 4
  %sub = add i32 %3, -1
  %cmp = icmp eq i32 %2, %sub
  br i1 %cmp, label %cleanup, label %if.else

if.else:                                          ; preds = %entry
  %call = tail call i32 @FmoGetNextMBNr(ptr noundef nonnull %0, i32 noundef %2) #14
  store i32 %call, ptr %current_mb_nr, align 4
  %cmp5 = icmp eq i32 %call, -1
  br i1 %cmp5, label %cleanup, label %if.end

if.end:                                           ; preds = %if.else
  %nal_startcode_follows = getelementptr inbounds i8, ptr %currSlice, i64 13432
  %4 = load ptr, ptr %nal_startcode_follows, align 8
  %call7 = tail call i32 %4(ptr noundef nonnull %currSlice, i32 noundef %eos_bit) #14
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %cleanup, label %if.end10

if.end10:                                         ; preds = %if.end
  %slice_type = getelementptr inbounds i8, ptr %currSlice, i64 164
  %5 = load i32, ptr %slice_type, align 4
  switch i32 %5, label %lor.lhs.false14 [
    i32 2, label %cleanup
    i32 4, label %cleanup
  ]

lor.lhs.false14:                                  ; preds = %if.end10
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %6, i64 12
  %7 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp15 = icmp eq i32 %7, 1
  br i1 %cmp15, label %cleanup, label %if.end17

if.end17:                                         ; preds = %lor.lhs.false14
  %cod_counter = getelementptr inbounds i8, ptr %currSlice, i64 120
  %8 = load i32, ptr %cod_counter, align 8
  %cmp18 = icmp slt i32 %8, 1
  %. = zext i1 %cmp18 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %lor.lhs.false14, %if.end10, %if.end10, %if.end, %if.else, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %if.else ], [ 0, %if.end ], [ 1, %if.end10 ], [ 1, %if.end10 ], [ 1, %lor.lhs.false14 ], [ %., %if.end17 ]
  ret i32 %retval.0
}

declare i32 @FmoGetNextMBNr(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local void @setup_slice_methods(ptr noundef %currSlice) local_unnamed_addr #3 {
entry:
  %slice_type = getelementptr inbounds i8, ptr %currSlice, i64 164
  %0 = load i32, ptr %slice_type, align 4
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb1
    i32 1, label %sw.bb11
    i32 2, label %sw.bb20
    i32 4, label %sw.bb30
  ]

sw.bb:                                            ; preds = %entry
  %interpret_mb_mode = getelementptr inbounds i8, ptr %currSlice, i64 13456
  store ptr @interpret_mb_mode_P, ptr %interpret_mb_mode, align 8
  %read_motion_info_from_NAL = getelementptr inbounds i8, ptr %currSlice, i64 13440
  store ptr @read_motion_info_from_NAL_p_slice, ptr %read_motion_info_from_NAL, align 8
  %read_one_macroblock = getelementptr inbounds i8, ptr %currSlice, i64 13448
  store ptr @read_one_macroblock_p_slice, ptr %read_one_macroblock, align 8
  %decode_one_component = getelementptr inbounds i8, ptr %currSlice, i64 13416
  store ptr @decode_one_component_p_slice, ptr %decode_one_component, align 8
  %update_direct_mv_info = getelementptr inbounds i8, ptr %currSlice, i64 13496
  store ptr null, ptr %update_direct_mv_info, align 8
  %view_id = getelementptr inbounds i8, ptr %currSlice, i64 1176
  %1 = load i32, ptr %view_id, align 8
  %tobool.not = icmp eq i32 %1, 0
  %cond = select i1 %tobool.not, ptr @init_lists_p_slice, ptr @init_lists_p_slice_mvc
  %init_lists = getelementptr inbounds i8, ptr %currSlice, i64 13464
  store ptr %cond, ptr %init_lists, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %interpret_mb_mode2 = getelementptr inbounds i8, ptr %currSlice, i64 13456
  store ptr @interpret_mb_mode_P, ptr %interpret_mb_mode2, align 8
  %read_motion_info_from_NAL3 = getelementptr inbounds i8, ptr %currSlice, i64 13440
  store ptr @read_motion_info_from_NAL_p_slice, ptr %read_motion_info_from_NAL3, align 8
  %read_one_macroblock4 = getelementptr inbounds i8, ptr %currSlice, i64 13448
  store ptr @read_one_macroblock_p_slice, ptr %read_one_macroblock4, align 8
  %decode_one_component5 = getelementptr inbounds i8, ptr %currSlice, i64 13416
  store ptr @decode_one_component_sp_slice, ptr %decode_one_component5, align 8
  %update_direct_mv_info6 = getelementptr inbounds i8, ptr %currSlice, i64 13496
  store ptr null, ptr %update_direct_mv_info6, align 8
  %view_id7 = getelementptr inbounds i8, ptr %currSlice, i64 1176
  %2 = load i32, ptr %view_id7, align 8
  %tobool8.not = icmp eq i32 %2, 0
  %cond9 = select i1 %tobool8.not, ptr @init_lists_p_slice, ptr @init_lists_p_slice_mvc
  %init_lists10 = getelementptr inbounds i8, ptr %currSlice, i64 13464
  store ptr %cond9, ptr %init_lists10, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %interpret_mb_mode12 = getelementptr inbounds i8, ptr %currSlice, i64 13456
  store ptr @interpret_mb_mode_B, ptr %interpret_mb_mode12, align 8
  %read_motion_info_from_NAL13 = getelementptr inbounds i8, ptr %currSlice, i64 13440
  store ptr @read_motion_info_from_NAL_b_slice, ptr %read_motion_info_from_NAL13, align 8
  %read_one_macroblock14 = getelementptr inbounds i8, ptr %currSlice, i64 13448
  store ptr @read_one_macroblock_b_slice, ptr %read_one_macroblock14, align 8
  %decode_one_component15 = getelementptr inbounds i8, ptr %currSlice, i64 13416
  store ptr @decode_one_component_b_slice, ptr %decode_one_component15, align 8
  tail call void @update_direct_types(ptr noundef nonnull %currSlice) #14
  %view_id16 = getelementptr inbounds i8, ptr %currSlice, i64 1176
  %3 = load i32, ptr %view_id16, align 8
  %tobool17.not = icmp eq i32 %3, 0
  %cond18 = select i1 %tobool17.not, ptr @init_lists_b_slice, ptr @init_lists_b_slice_mvc
  %init_lists19 = getelementptr inbounds i8, ptr %currSlice, i64 13464
  store ptr %cond18, ptr %init_lists19, align 8
  br label %sw.epilog

sw.bb20:                                          ; preds = %entry
  %interpret_mb_mode21 = getelementptr inbounds i8, ptr %currSlice, i64 13456
  store ptr @interpret_mb_mode_I, ptr %interpret_mb_mode21, align 8
  %read_motion_info_from_NAL22 = getelementptr inbounds i8, ptr %currSlice, i64 13440
  store ptr null, ptr %read_motion_info_from_NAL22, align 8
  %read_one_macroblock23 = getelementptr inbounds i8, ptr %currSlice, i64 13448
  store ptr @read_one_macroblock_i_slice, ptr %read_one_macroblock23, align 8
  %decode_one_component24 = getelementptr inbounds i8, ptr %currSlice, i64 13416
  store ptr @decode_one_component_i_slice, ptr %decode_one_component24, align 8
  %update_direct_mv_info25 = getelementptr inbounds i8, ptr %currSlice, i64 13496
  store ptr null, ptr %update_direct_mv_info25, align 8
  %view_id26 = getelementptr inbounds i8, ptr %currSlice, i64 1176
  %4 = load i32, ptr %view_id26, align 8
  %tobool27.not = icmp eq i32 %4, 0
  %cond28 = select i1 %tobool27.not, ptr @init_lists_i_slice, ptr @init_lists_i_slice_mvc
  %init_lists29 = getelementptr inbounds i8, ptr %currSlice, i64 13464
  store ptr %cond28, ptr %init_lists29, align 8
  br label %sw.epilog

sw.bb30:                                          ; preds = %entry
  %interpret_mb_mode31 = getelementptr inbounds i8, ptr %currSlice, i64 13456
  store ptr @interpret_mb_mode_SI, ptr %interpret_mb_mode31, align 8
  %read_motion_info_from_NAL32 = getelementptr inbounds i8, ptr %currSlice, i64 13440
  store ptr null, ptr %read_motion_info_from_NAL32, align 8
  %read_one_macroblock33 = getelementptr inbounds i8, ptr %currSlice, i64 13448
  store ptr @read_one_macroblock_i_slice, ptr %read_one_macroblock33, align 8
  %decode_one_component34 = getelementptr inbounds i8, ptr %currSlice, i64 13416
  store ptr @decode_one_component_i_slice, ptr %decode_one_component34, align 8
  %update_direct_mv_info35 = getelementptr inbounds i8, ptr %currSlice, i64 13496
  store ptr null, ptr %update_direct_mv_info35, align 8
  %view_id36 = getelementptr inbounds i8, ptr %currSlice, i64 1176
  %5 = load i32, ptr %view_id36, align 8
  %tobool37.not = icmp eq i32 %5, 0
  %cond38 = select i1 %tobool37.not, ptr @init_lists_i_slice, ptr @init_lists_i_slice_mvc
  %init_lists39 = getelementptr inbounds i8, ptr %currSlice, i64 13464
  store ptr %cond38, ptr %init_lists39, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %puts = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb30, %sw.bb20, %sw.bb11, %sw.bb1, %sw.bb
  %mb_aff_frame_flag = getelementptr inbounds i8, ptr %currSlice, i64 128
  %6 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool40.not = icmp eq i32 %6, 0
  %spec.select = select i1 %tobool40.not, ptr @intrapred_chroma, ptr @intrapred_chroma_mbaff
  %7 = getelementptr inbounds i8, ptr %currSlice, i64 13472
  store ptr %spec.select, ptr %7, align 8
  %8 = load ptr, ptr %currSlice, align 8
  %active_pps = getelementptr inbounds i8, ptr %8, i64 8
  %9 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %9, i64 12
  %10 = load i32, ptr %entropy_coding_mode_flag, align 4
  switch i32 %10, label %sw.default96 [
    i32 1, label %sw.bb42
    i32 0, label %sw.bb66
  ]

sw.bb42:                                          ; preds = %sw.epilog
  %active_sps = getelementptr inbounds i8, ptr %8, i64 16
  %11 = load ptr, ptr %active_sps, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %11, i64 36
  %12 = load i32, ptr %chroma_format_idc, align 4
  switch i32 %12, label %if.else61 [
    i32 3, label %land.lhs.true
    i32 2, label %if.then52
    i32 0, label %if.then59
  ]

land.lhs.true:                                    ; preds = %sw.bb42
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %8, i64 849280
  %13 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp45 = icmp eq i32 %13, 0
  br i1 %cmp45, label %if.then46, label %if.else61

if.then46:                                        ; preds = %land.lhs.true
  %read_CBP_and_coeffs_from_NAL = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CABAC_444, ptr %read_CBP_and_coeffs_from_NAL, align 8
  br label %sw.epilog98

if.then52:                                        ; preds = %sw.bb42
  %read_CBP_and_coeffs_from_NAL53 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CABAC_422, ptr %read_CBP_and_coeffs_from_NAL53, align 8
  br label %sw.epilog98

if.then59:                                        ; preds = %sw.bb42
  %read_CBP_and_coeffs_from_NAL60 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CABAC_400, ptr %read_CBP_and_coeffs_from_NAL60, align 8
  br label %sw.epilog98

if.else61:                                        ; preds = %sw.bb42, %land.lhs.true
  %read_CBP_and_coeffs_from_NAL62 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CABAC_420, ptr %read_CBP_and_coeffs_from_NAL62, align 8
  br label %sw.epilog98

sw.bb66:                                          ; preds = %sw.epilog
  %active_sps68 = getelementptr inbounds i8, ptr %8, i64 16
  %14 = load ptr, ptr %active_sps68, align 8
  %chroma_format_idc69 = getelementptr inbounds i8, ptr %14, i64 36
  %15 = load i32, ptr %chroma_format_idc69, align 4
  switch i32 %15, label %if.else91 [
    i32 3, label %land.lhs.true71
    i32 2, label %if.then82
    i32 0, label %if.then89
  ]

land.lhs.true71:                                  ; preds = %sw.bb66
  %separate_colour_plane_flag73 = getelementptr inbounds i8, ptr %8, i64 849280
  %16 = load i32, ptr %separate_colour_plane_flag73, align 8
  %cmp74 = icmp eq i32 %16, 0
  br i1 %cmp74, label %if.then75, label %if.else91

if.then75:                                        ; preds = %land.lhs.true71
  %read_CBP_and_coeffs_from_NAL76 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CAVLC_444, ptr %read_CBP_and_coeffs_from_NAL76, align 8
  br label %sw.epilog98

if.then82:                                        ; preds = %sw.bb66
  %read_CBP_and_coeffs_from_NAL83 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CAVLC_422, ptr %read_CBP_and_coeffs_from_NAL83, align 8
  br label %sw.epilog98

if.then89:                                        ; preds = %sw.bb66
  %read_CBP_and_coeffs_from_NAL90 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CAVLC_400, ptr %read_CBP_and_coeffs_from_NAL90, align 8
  br label %sw.epilog98

if.else91:                                        ; preds = %sw.bb66, %land.lhs.true71
  %read_CBP_and_coeffs_from_NAL92 = getelementptr inbounds i8, ptr %currSlice, i64 13408
  store ptr @read_CBP_and_coeffs_from_NAL_CAVLC_420, ptr %read_CBP_and_coeffs_from_NAL92, align 8
  br label %sw.epilog98

sw.default96:                                     ; preds = %sw.epilog
  %puts155 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.7)
  br label %sw.epilog98

sw.epilog98:                                      ; preds = %if.then75, %if.then89, %if.else91, %if.then82, %if.then46, %if.then59, %if.else61, %if.then52, %sw.default96
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_P(ptr nocapture noundef %currMB) #6 {
entry:
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  %cmp = icmp slt i16 %0, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  %1 = trunc i16 %0 to i8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(4) %b8mode, i8 %1, i64 4, i1 false)
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 0, ptr %b8pdir, align 8
  br label %if.end52

if.else:                                          ; preds = %entry
  %2 = and i16 %0, 32766
  %or.cond = icmp eq i16 %2, 4
  br i1 %or.cond, label %if.then11, label %if.else16

if.then11:                                        ; preds = %if.else
  %cmp9 = icmp eq i16 %0, 5
  store i16 8, ptr %mb_type, align 8
  %conv15 = zext i1 %cmp9 to i32
  %3 = load ptr, ptr %currMB, align 8
  %allrefzero = getelementptr inbounds i8, ptr %3, i64 124
  store i32 %conv15, ptr %allrefzero, align 4
  br label %if.end52

if.else16:                                        ; preds = %if.else
  %is_intra_block38 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block38, align 8
  switch i16 %0, label %if.else37 [
    i16 6, label %if.then20
    i16 31, label %if.then30
  ]

if.then20:                                        ; preds = %if.else16
  store i16 9, ptr %mb_type, align 8
  %b8mode22 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 185273099, ptr %b8mode22, align 4
  %b8pdir24 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir24, align 8
  br label %if.end52

if.then30:                                        ; preds = %if.else16
  store i16 14, ptr %mb_type, align 8
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 -1, ptr %cbp, align 4
  %i16mode = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 0, ptr %i16mode, align 8
  %b8mode33 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode33, align 4
  %b8pdir35 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir35, align 8
  br label %if.end52

if.else37:                                        ; preds = %if.else16
  store i16 10, ptr %mb_type, align 8
  %narrow = add nsw i16 %0, -7
  %sub = sext i16 %narrow to i32
  %shr = lshr i32 %sub, 2
  %idxprom = zext nneg i32 %shr to i64
  %arrayidx = getelementptr inbounds [6 x i16], ptr @interpret_mb_mode_I.ICBPTAB, i64 0, i64 %idxprom
  %4 = load i16, ptr %arrayidx, align 2
  %conv41 = sext i16 %4 to i32
  %cbp42 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %conv41, ptr %cbp42, align 4
  %and = and i32 %sub, 3
  %i16mode45 = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 %and, ptr %i16mode45, align 8
  %b8mode46 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode46, align 4
  %b8pdir48 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir48, align 8
  br label %if.end52

if.end52:                                         ; preds = %if.then11, %if.then30, %if.else37, %if.then20, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_motion_info_from_NAL_p_slice(ptr noundef %currMB) #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %1 = load ptr, ptr %currMB, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %2 = load i16, ptr %mb_type, align 8
  %cmp = icmp eq i16 %2, 8
  %narrow = select i1 %cmp, i16 4, i16 %2
  %spec.select = sext i16 %narrow to i64
  %arrayidx7 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %spec.select
  %3 = load i32, ptr %arrayidx7, align 8
  %arrayidx11 = getelementptr inbounds i8, ptr %arrayidx7, i64 4
  %4 = load i32, ptr %arrayidx11, align 4
  %dec_picture12 = getelementptr inbounds i8, ptr %1, i64 13520
  %5 = load ptr, ptr %dec_picture12, align 8
  %list_offset13 = getelementptr inbounds i8, ptr %currMB, i64 114
  %6 = load i16, ptr %list_offset13, align 2
  %listX = getelementptr inbounds i8, ptr %1, i64 264
  %idxprom15 = sext i16 %6 to i64
  %arrayidx16 = getelementptr inbounds [6 x ptr], ptr %listX, i64 0, i64 %idxprom15
  %7 = load ptr, ptr %arrayidx16, align 8
  store i32 3, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %8 = load ptr, ptr %partArr, align 8
  %num_ref_idx_active = getelementptr inbounds i8, ptr %1, i64 136
  %9 = load i32, ptr %num_ref_idx_active, align 8
  br i1 %cmp, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %allrefzero = getelementptr inbounds i8, ptr %1, i64 124
  %10 = load i32, ptr %allrefzero, align 4
  %tobool.not = icmp ne i32 %10, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %lor.ext = phi i1 [ false, %entry ], [ %tobool.not, %lor.rhs ]
  %readRefPictureIdx.i = getelementptr inbounds i8, ptr %currMB, i64 464
  store ptr @readRefPictureIdx_Null, ptr %readRefPictureIdx.i, align 8
  %cmp.i = icmp sgt i32 %9, 1
  br i1 %cmp.i, label %if.then.i, label %prepareListforRefIdx.exit

if.then.i:                                        ; preds = %lor.end
  %active_pps.i = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load ptr, ptr %active_pps.i, align 8
  %entropy_coding_mode_flag.i = getelementptr inbounds i8, ptr %11, i64 12
  %12 = load i32, ptr %entropy_coding_mode_flag.i, align 4
  %cmp1.i = icmp eq i32 %12, 0
  br i1 %cmp1.i, label %if.then2.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %13 = load ptr, ptr %8, align 8
  %ei_flag.i = getelementptr inbounds i8, ptr %13, i64 24
  %14 = load i32, ptr %ei_flag.i, align 8
  %tobool.not.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i, label %if.else10.i, label %if.then2.i

if.then2.i:                                       ; preds = %lor.lhs.false.i, %if.then.i
  %mapping.i = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping.i, align 8
  br i1 %lor.ext, label %prepareListforRefIdx.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then2.i
  %cmp5.i = icmp eq i32 %9, 2
  %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i = select i1 %cmp5.i, ptr @readRefPictureIdx_FLC, ptr @readRefPictureIdx_VLC
  br label %if.end16.sink.split.i

if.else10.i:                                      ; preds = %lor.lhs.false.i
  %reading.i = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readRefFrame_CABAC, ptr %reading.i, align 8
  br i1 %lor.ext, label %prepareListforRefIdx.exit, label %if.end16.sink.split.i

if.end16.sink.split.i:                            ; preds = %if.else10.i, %if.then4.i
  %readRefPictureIdx_FLC.sink.i = phi ptr [ %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i, %if.then4.i ], [ @readRefPictureIdx_VLC, %if.else10.i ]
  store ptr %readRefPictureIdx_FLC.sink.i, ptr %readRefPictureIdx.i, align 8
  br label %prepareListforRefIdx.exit

prepareListforRefIdx.exit:                        ; preds = %lor.end, %if.then2.i, %if.else10.i, %if.end16.sink.split.i
  %mv_info25 = getelementptr inbounds i8, ptr %5, i64 152
  %15 = load ptr, ptr %mv_info25, align 8
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %16 = load i32, ptr %block_y, align 4
  %idxprom26 = sext i32 %16 to i64
  %arrayidx27 = getelementptr inbounds ptr, ptr %15, i64 %idxprom26
  call fastcc void @readMBRefPictureIdx(ptr noundef nonnull %currSE, ptr noundef %8, ptr noundef nonnull %currMB, ptr noundef %arrayidx27, i32 noundef 0, i32 noundef %4, i32 noundef %3)
  store i32 5, ptr %currSE, align 8
  %17 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %18, i64 12
  %19 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp33 = icmp eq i32 %19, 0
  br i1 %cmp33, label %for.body.lr.ph, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %prepareListforRefIdx.exit
  %20 = load ptr, ptr %17, align 8
  %ei_flag = getelementptr inbounds i8, ptr %20, i64 24
  %21 = load i32, ptr %ei_flag, align 8
  %tobool35.not = icmp eq i32 %21, 0
  %spec.select119 = select i1 %tobool35.not, i64 40, i64 32
  %spec.select120 = select i1 %tobool35.not, ptr @read_MVD_CABAC, ptr @linfo_se
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %lor.lhs.false, %prepareListforRefIdx.exit
  %.sink = phi i64 [ 32, %prepareListforRefIdx.exit ], [ %spec.select119, %lor.lhs.false ]
  %linfo_se.sink = phi ptr [ @linfo_se, %prepareListforRefIdx.exit ], [ %spec.select120, %lor.lhs.false ]
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 %.sink
  store ptr %linfo_se.sink, ptr %mapping, align 8
  call fastcc void @readMBMotionVectors(ptr noundef nonnull %currSE, ptr noundef %17, ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef %3, i32 noundef %4)
  %22 = load i32, ptr %block_y, align 4
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %23 = sext i32 %22 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ %23, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %24 = load ptr, ptr %mv_info25, align 8
  %arrayidx43 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv
  %25 = load ptr, ptr %arrayidx43, align 8
  %26 = load i32, ptr %block_x, align 8
  %idxprom44 = sext i32 %26 to i64
  %arrayidx45 = getelementptr inbounds %struct.pic_motion_params, ptr %25, i64 %idxprom44
  %ref_idx = getelementptr inbounds i8, ptr %arrayidx45, i64 24
  %27 = load i8, ptr %ref_idx, align 8
  %idxprom48 = sext i8 %27 to i64
  %arrayidx49 = getelementptr inbounds ptr, ptr %7, i64 %idxprom48
  %28 = load ptr, ptr %arrayidx49, align 8
  store ptr %28, ptr %arrayidx45, align 8
  %incdec.ptr = getelementptr inbounds i8, ptr %arrayidx45, i64 32
  %ref_idx51 = getelementptr inbounds i8, ptr %arrayidx45, i64 56
  %29 = load i8, ptr %ref_idx51, align 8
  %idxprom54 = sext i8 %29 to i64
  %arrayidx55 = getelementptr inbounds ptr, ptr %7, i64 %idxprom54
  %30 = load ptr, ptr %arrayidx55, align 8
  store ptr %30, ptr %incdec.ptr, align 8
  %incdec.ptr58 = getelementptr inbounds i8, ptr %arrayidx45, i64 64
  %ref_idx59 = getelementptr inbounds i8, ptr %arrayidx45, i64 88
  %31 = load i8, ptr %ref_idx59, align 8
  %idxprom62 = sext i8 %31 to i64
  %arrayidx63 = getelementptr inbounds ptr, ptr %7, i64 %idxprom62
  %32 = load ptr, ptr %arrayidx63, align 8
  store ptr %32, ptr %incdec.ptr58, align 8
  %incdec.ptr66 = getelementptr inbounds i8, ptr %arrayidx45, i64 96
  %ref_idx67 = getelementptr inbounds i8, ptr %arrayidx45, i64 120
  %33 = load i8, ptr %ref_idx67, align 8
  %idxprom70 = sext i8 %33 to i64
  %arrayidx71 = getelementptr inbounds ptr, ptr %7, i64 %idxprom70
  %34 = load ptr, ptr %arrayidx71, align 8
  store ptr %34, ptr %incdec.ptr66, align 8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %35 = load i32, ptr %block_y, align 4
  %36 = add nsw i32 %35, 3
  %37 = sext i32 %36 to i64
  %cmp39 = icmp slt i64 %indvars.iv, %37
  br i1 %cmp39, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_one_macroblock_p_slice(ptr noundef %currMB) #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %2 = load i32, ptr %mbAddrX, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %3 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %3 to i64
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %4 = load ptr, ptr %dec_picture2, align 8
  %motion3 = getelementptr inbounds i8, ptr %4, i64 184
  %mb_aff_frame_flag = getelementptr inbounds i8, ptr %0, i64 128
  %5 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool.not = icmp eq i32 %5, 0
  %and = and i32 %2, 1
  %tobool4.not = icmp eq i32 %and, 0
  %or.cond619 = select i1 %tobool.not, i1 true, i1 %tobool4.not
  br i1 %or.cond619, label %if.end9, label %if.end9.thread

if.end9.thread:                                   ; preds = %entry
  %mb_data = getelementptr inbounds i8, ptr %1, i64 848888
  %6 = load ptr, ptr %mb_data, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr %struct.macroblock, ptr %6, i64 %7
  %arrayidx7 = getelementptr i8, ptr %8, i64 -480
  %mb_type = getelementptr i8, ptr %8, i64 -328
  %9 = load i16, ptr %mb_type, align 8
  %cmp = icmp eq i16 %9, 0
  %conv8 = zext i1 %cmp to i32
  br label %cond.false

if.end9:                                          ; preds = %entry
  br i1 %tobool4.not, label %cond.end, label %if.end9.cond.false_crit_edge

if.end9.cond.false_crit_edge:                     ; preds = %if.end9
  %mb_data13.phi.trans.insert = getelementptr inbounds i8, ptr %1, i64 848888
  %.pre = load ptr, ptr %mb_data13.phi.trans.insert, align 8
  %.pre655 = sext i32 %2 to i64
  br label %cond.false

cond.false:                                       ; preds = %if.end9.cond.false_crit_edge, %if.end9.thread
  %.pre-phi = phi i64 [ %.pre655, %if.end9.cond.false_crit_edge ], [ %7, %if.end9.thread ]
  %10 = phi ptr [ %.pre, %if.end9.cond.false_crit_edge ], [ %6, %if.end9.thread ]
  %prevMbSkipped.0629 = phi i32 [ 0, %if.end9.cond.false_crit_edge ], [ %conv8, %if.end9.thread ]
  %topMB.0627 = phi ptr [ null, %if.end9.cond.false_crit_edge ], [ %arrayidx7, %if.end9.thread ]
  %11 = getelementptr %struct.macroblock, ptr %10, i64 %.pre-phi
  %mb_field = getelementptr i8, ptr %11, i64 -96
  %12 = load i32, ptr %mb_field, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.end9, %cond.false
  %prevMbSkipped.0630 = phi i32 [ %prevMbSkipped.0629, %cond.false ], [ 0, %if.end9 ]
  %topMB.0628 = phi ptr [ %topMB.0627, %cond.false ], [ null, %if.end9 ]
  %cond = phi i32 [ %12, %cond.false ], [ 0, %if.end9 ]
  %mb_field17 = getelementptr inbounds i8, ptr %currMB, i64 384
  store i32 %cond, ptr %mb_field17, align 8
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %13 = load i32, ptr %qp, align 4
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %13, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %1, i64 849052
  %14 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %14, %13
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %15 = load ptr, ptr %dec_picture2, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %1, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %15, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %16 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %16
  %17 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %17, %13
  %cond.i.i.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %cond.end
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %18 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %18 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.end
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %cond.end ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %19 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %19, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %20 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %20
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %15, i64 304
  %21 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %21, %13
  %cond.i.i.1.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %22 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %22 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %23 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %23, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i = icmp eq i32 %add.i, 0
  br i1 %cmp.i, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %1, i64 849092
  %24 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %24, 1
  %25 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %25, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  store i32 2, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %26 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %27 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %27, i64 12
  %28 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp21 = icmp eq i32 %28, 0
  br i1 %cmp21, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %update_qp.exit
  %29 = load ptr, ptr %26, align 8
  %ei_flag = getelementptr inbounds i8, ptr %29, i64 24
  %30 = load i32, ptr %ei_flag, align 8
  %tobool23.not = icmp eq i32 %30, 0
  br i1 %tobool23.not, label %if.end25, label %if.then24

if.then24:                                        ; preds = %lor.lhs.false, %update_qp.exit
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping, align 8
  %.pre650 = load i32, ptr %entropy_coding_mode_flag, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %lor.lhs.false
  %31 = phi i32 [ %.pre650, %if.then24 ], [ %28, %lor.lhs.false ]
  %cmp28 = icmp eq i32 %31, 1
  br i1 %cmp28, label %if.then30, label %if.else115

if.then30:                                        ; preds = %if.end25
  %32 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool32.not = icmp ne i32 %32, 0
  %tobool37 = icmp ne i32 %prevMbSkipped.0630, 0
  %or.cond = select i1 %tobool4.not, i1 true, i1 %tobool37
  %or.cond614 = select i1 %tobool32.not, i1 %or.cond, i1 false
  br i1 %or.cond614, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.then30
  %mbAvailA.i = getelementptr inbounds i8, ptr %currMB, i64 404
  %33 = load i32, ptr %mbAvailA.i, align 4
  %tobool.not.i = icmp eq i32 %33, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.sink.split.i

if.else.i:                                        ; preds = %if.then38
  %mbAvailB.i = getelementptr inbounds i8, ptr %currMB, i64 408
  %34 = load i32, ptr %mbAvailB.i, align 8
  %tobool3.not.i = icmp eq i32 %34, 0
  br i1 %tobool3.not.i, label %field_flag_inference.exit, label %if.end.sink.split.i

if.end.sink.split.i:                              ; preds = %if.else.i, %if.then38
  %.sink656 = phi i64 [ 388, %if.then38 ], [ 392, %if.else.i ]
  %mbAddrB.i = getelementptr inbounds i8, ptr %currMB, i64 %.sink656
  %.sink.in.i = getelementptr inbounds i8, ptr %1, i64 848888
  %.sink.i = load ptr, ptr %.sink.in.i, align 8
  %.sink16.i = load i32, ptr %mbAddrB.i, align 4
  %idxprom5.i = sext i32 %.sink16.i to i64
  %mb_field7.i = getelementptr inbounds %struct.macroblock, ptr %.sink.i, i64 %idxprom5.i, i32 45
  %35 = load i32, ptr %mb_field7.i, align 8
  br label %field_flag_inference.exit

field_flag_inference.exit:                        ; preds = %if.else.i, %if.end.sink.split.i
  %cond.sink.i = phi i32 [ 0, %if.else.i ], [ %35, %if.end.sink.split.i ]
  store i32 %cond.sink.i, ptr %mb_field17, align 8
  br label %if.end39

if.end39:                                         ; preds = %field_flag_inference.exit, %if.then30
  tail call void @CheckAvailabilityOfNeighborsCABAC(ptr noundef nonnull %currMB) #14
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @read_skip_flag_CABAC_p_slice, ptr %reading, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %26, i64 40
  %36 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %36(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %37 = load i32, ptr %value1, align 4
  %conv40 = trunc i32 %37 to i16
  %mb_type41 = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 %conv40, ptr %mb_type41, align 8
  %tobool43.not = icmp eq i32 %37, 0
  %conv44 = zext i1 %tobool43.not to i8
  %skip_flag = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 %conv44, ptr %skip_flag, align 2
  %38 = load ptr, ptr %26, align 8
  %ei_flag46 = getelementptr inbounds i8, ptr %38, i64 24
  %39 = load i32, ptr %ei_flag46, align 8
  %tobool47.not = icmp eq i32 %39, 0
  br i1 %tobool47.not, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.end39
  %ei_flag49 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag49, align 2
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.end39
  %40 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool52.not = icmp eq i32 %40, 0
  br i1 %tobool52.not, label %if.end96, label %if.then53

if.then53:                                        ; preds = %if.end50
  br i1 %tobool4.not, label %if.then57, label %if.else63

if.then57:                                        ; preds = %if.then53
  br i1 %tobool43.not, label %if.then83, label %if.then75

if.else63:                                        ; preds = %if.then53
  %skip_flag64 = getelementptr inbounds i8, ptr %topMB.0628, i64 374
  %41 = load i8, ptr %skip_flag64, align 2
  %tobool66.not = icmp eq i8 %41, 0
  %or.cond643.not = select i1 %tobool66.not, i1 true, i1 %tobool43.not
  br i1 %or.cond643.not, label %if.end85, label %if.then75

if.then75:                                        ; preds = %if.else63, %if.then57
  store ptr @readFieldModeInfo_CABAC, ptr %reading, align 8
  %42 = load ptr, ptr %readSyntaxElement, align 8
  %call78 = call i32 %42(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  %43 = load i32, ptr %value1, align 4
  store i32 %43, ptr %mb_field17, align 8
  br label %if.end85

if.then83:                                        ; preds = %if.then57
  %call84 = call i32 @check_next_mb_and_get_field_mode_CABAC_p_slice(ptr noundef nonnull %0, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  br label %if.end85

if.end85:                                         ; preds = %if.else63, %if.then75, %if.then83
  %44 = load i32, ptr %mb_field17, align 8
  %tobool87.not = icmp eq i32 %44, 0
  %cond91 = select i1 %tobool4.not, i16 2, i16 4
  %cond94 = select i1 %tobool87.not, i16 0, i16 %cond91
  %list_offset = getelementptr inbounds i8, ptr %currMB, i64 114
  store i16 %cond94, ptr %list_offset, align 2
  call void @CheckAvailabilityOfNeighborsCABAC(ptr noundef nonnull %currMB) #14
  %.pre653 = load i16, ptr %mb_type41, align 8
  br label %if.end96

if.end96:                                         ; preds = %if.end85, %if.end50
  %45 = phi i16 [ %.pre653, %if.end85 ], [ %conv40, %if.end50 ]
  %cmp99.not = icmp eq i16 %45, 0
  br i1 %cmp99.not, label %if.end247, label %if.then101

if.then101:                                       ; preds = %if.end96
  store ptr @readMB_typeInfo_CABAC_p_slice, ptr %reading, align 8
  %46 = load ptr, ptr %readSyntaxElement, align 8
  %call104 = call i32 %46(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  %47 = load i32, ptr %value1, align 4
  %conv106 = trunc i32 %47 to i16
  store i16 %conv106, ptr %mb_type41, align 8
  %48 = load ptr, ptr %26, align 8
  %ei_flag109 = getelementptr inbounds i8, ptr %48, i64 24
  %49 = load i32, ptr %ei_flag109, align 8
  %tobool110.not = icmp eq i32 %49, 0
  br i1 %tobool110.not, label %if.then111, label %if.end247

if.then111:                                       ; preds = %if.then101
  %ei_flag112 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag112, align 2
  br label %if.end247

if.else115:                                       ; preds = %if.end25
  %cod_counter = getelementptr inbounds i8, ptr %0, i64 120
  %50 = load i32, ptr %cod_counter, align 8
  %cmp116 = icmp eq i32 %50, -1
  br i1 %cmp116, label %if.then118, label %if.end123

if.then118:                                       ; preds = %if.else115
  %readSyntaxElement119 = getelementptr inbounds i8, ptr %26, i64 40
  %51 = load ptr, ptr %readSyntaxElement119, align 8
  %call120 = call i32 %51(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %value1121 = getelementptr inbounds i8, ptr %currSE, i64 4
  %52 = load i32, ptr %value1121, align 4
  store i32 %52, ptr %cod_counter, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then118, %if.else115
  %53 = phi i32 [ %52, %if.then118 ], [ %50, %if.else115 ]
  %cmp125 = icmp eq i32 %53, 0
  br i1 %cmp125, label %if.then127, label %if.else167

if.then127:                                       ; preds = %if.end123
  %54 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool129.not = icmp ne i32 %54, 0
  %tobool138.not = icmp ne i32 %prevMbSkipped.0630, 0
  %or.cond615.not = select i1 %tobool4.not, i1 true, i1 %tobool138.not
  %or.cond644 = select i1 %tobool129.not, i1 %or.cond615.not, i1 false
  br i1 %or.cond644, label %if.then139, label %if.end144

if.then139:                                       ; preds = %if.then127
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %55 = load ptr, ptr %26, align 8
  %call141 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %55) #14
  %value1142 = getelementptr inbounds i8, ptr %currSE, i64 4
  %56 = load i32, ptr %value1142, align 4
  store i32 %56, ptr %mb_field17, align 8
  br label %if.end144

if.end144:                                        ; preds = %if.then139, %if.then127
  %readSyntaxElement145 = getelementptr inbounds i8, ptr %26, i64 40
  %57 = load ptr, ptr %readSyntaxElement145, align 8
  %call146 = call i32 %57(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %58 = load i32, ptr %slice_type, align 4
  switch i32 %58, label %if.end144.if.end155_crit_edge [
    i32 0, label %if.then153
    i32 3, label %if.then153
  ]

if.end144.if.end155_crit_edge:                    ; preds = %if.end144
  %value1156.phi.trans.insert = getelementptr inbounds i8, ptr %currSE, i64 4
  %.pre652 = load i32, ptr %value1156.phi.trans.insert, align 4
  br label %if.end155

if.then153:                                       ; preds = %if.end144, %if.end144
  %value1154 = getelementptr inbounds i8, ptr %currSE, i64 4
  %59 = load i32, ptr %value1154, align 4
  %inc = add nsw i32 %59, 1
  store i32 %inc, ptr %value1154, align 4
  br label %if.end155

if.end155:                                        ; preds = %if.end144.if.end155_crit_edge, %if.then153
  %60 = phi i32 [ %.pre652, %if.end144.if.end155_crit_edge ], [ %inc, %if.then153 ]
  %conv157 = trunc i32 %60 to i16
  %mb_type158 = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 %conv157, ptr %mb_type158, align 8
  %61 = load ptr, ptr %26, align 8
  %ei_flag160 = getelementptr inbounds i8, ptr %61, i64 24
  %62 = load i32, ptr %ei_flag160, align 8
  %tobool161.not = icmp eq i32 %62, 0
  br i1 %tobool161.not, label %if.then162, label %if.end164

if.then162:                                       ; preds = %if.end155
  %ei_flag163 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag163, align 2
  br label %if.end164

if.end164:                                        ; preds = %if.then162, %if.end155
  %63 = load i32, ptr %cod_counter, align 8
  %dec = add nsw i32 %63, -1
  store i32 %dec, ptr %cod_counter, align 8
  %skip_flag166 = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 0, ptr %skip_flag166, align 2
  br label %if.end235

if.else167:                                       ; preds = %if.end123
  %dec169 = add nsw i32 %53, -1
  store i32 %dec169, ptr %cod_counter, align 8
  %mb_type170 = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 0, ptr %mb_type170, align 8
  %ei_flag171 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag171, align 2
  %skip_flag172 = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 1, ptr %skip_flag172, align 2
  %64 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool174.not = icmp eq i32 %64, 0
  br i1 %tobool174.not, label %if.end235, label %if.then175

if.then175:                                       ; preds = %if.else167
  %65 = load i32, ptr %cod_counter, align 8
  %66 = or i32 %65, %and
  %brmerge.not = icmp eq i32 %66, 0
  br i1 %brmerge.not, label %if.then183, label %if.else191

if.then183:                                       ; preds = %if.then175
  %len184 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len184, align 4
  %67 = load ptr, ptr %26, align 8
  %call186 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %67) #14
  %68 = load ptr, ptr %26, align 8
  %frame_bitoffset = getelementptr inbounds i8, ptr %68, i64 8
  %69 = load i32, ptr %frame_bitoffset, align 8
  %dec188 = add nsw i32 %69, -1
  store i32 %dec188, ptr %frame_bitoffset, align 8
  %value1189 = getelementptr inbounds i8, ptr %currSE, i64 4
  %70 = load i32, ptr %value1189, align 4
  store i32 %70, ptr %mb_field17, align 8
  br label %if.end235

if.else191:                                       ; preds = %if.then175
  %cmp193 = icmp sgt i32 %65, 0
  %brmerge618.not = and i1 %tobool4.not, %cmp193
  br i1 %brmerge618.not, label %if.then199, label %if.end235

if.then199:                                       ; preds = %if.else191
  %sub200 = add nsw i32 %2, -2
  %call201 = call i32 @mb_is_available(i32 noundef %sub200, ptr noundef nonnull %currMB) #14
  %tobool202.not = icmp eq i32 %call201, 0
  %PicWidthInMbs214.phi.trans.insert = getelementptr inbounds i8, ptr %1, i64 848996
  %.pre651 = load i32, ptr %PicWidthInMbs214.phi.trans.insert, align 4
  %.pre654 = shl i32 %.pre651, 1
  br i1 %tobool202.not, label %if.else213, label %land.lhs.true203

land.lhs.true203:                                 ; preds = %if.then199
  %rem = urem i32 %2, %.pre654
  %cmp204.not = icmp eq i32 %rem, 0
  br i1 %cmp204.not, label %if.else213, label %if.then206

if.then206:                                       ; preds = %land.lhs.true203
  %mb_data207 = getelementptr inbounds i8, ptr %1, i64 848888
  %71 = load ptr, ptr %mb_data207, align 8
  %idxprom209 = sext i32 %sub200 to i64
  %mb_field211 = getelementptr inbounds %struct.macroblock, ptr %71, i64 %idxprom209, i32 45
  %72 = load i32, ptr %mb_field211, align 8
  store i32 %72, ptr %mb_field17, align 8
  br label %if.end235

if.else213:                                       ; preds = %if.then199, %land.lhs.true203
  %sub216 = sub i32 %2, %.pre654
  %call217 = call i32 @mb_is_available(i32 noundef %sub216, ptr noundef nonnull %currMB) #14
  %tobool218.not = icmp eq i32 %call217, 0
  br i1 %tobool218.not, label %if.else228, label %if.then219

if.then219:                                       ; preds = %if.else213
  %PicWidthInMbs214 = getelementptr inbounds i8, ptr %1, i64 848996
  %mb_data220 = getelementptr inbounds i8, ptr %1, i64 848888
  %73 = load ptr, ptr %mb_data220, align 8
  %74 = load i32, ptr %PicWidthInMbs214, align 4
  %mul222 = shl i32 %74, 1
  %sub223 = sub i32 %2, %mul222
  %idxprom224 = zext i32 %sub223 to i64
  %mb_field226 = getelementptr inbounds %struct.macroblock, ptr %73, i64 %idxprom224, i32 45
  %75 = load i32, ptr %mb_field226, align 8
  store i32 %75, ptr %mb_field17, align 8
  br label %if.end235

if.else228:                                       ; preds = %if.else213
  store i32 0, ptr %mb_field17, align 8
  br label %if.end235

if.end235:                                        ; preds = %if.else191, %if.else167, %if.then219, %if.else228, %if.then206, %if.then183, %if.end164
  %76 = load i32, ptr %mb_field17, align 8
  %tobool237.not = icmp eq i32 %76, 0
  %cond241 = select i1 %tobool4.not, i16 2, i16 4
  %cond244 = select i1 %tobool237.not, i16 0, i16 %cond241
  %list_offset246 = getelementptr inbounds i8, ptr %currMB, i64 114
  store i16 %cond244, ptr %list_offset246, align 2
  br label %if.end247

if.end247:                                        ; preds = %if.end96, %if.then111, %if.then101, %if.end235
  %77 = load i32, ptr %mb_field17, align 8
  %conv249 = trunc i32 %77 to i8
  %78 = load ptr, ptr %motion3, align 8
  %idxprom251 = sext i32 %2 to i64
  %arrayidx252 = getelementptr inbounds i8, ptr %78, i64 %idxprom251
  store i8 %conv249, ptr %arrayidx252, align 1
  %79 = load i32, ptr %mb_field17, align 8
  %tobool254.not = icmp eq i32 %79, 0
  %block_y266 = getelementptr inbounds i8, ptr %currMB, i64 36
  %80 = load i32, ptr %block_y266, align 4
  br i1 %tobool254.not, label %cond.end267, label %cond.true255

cond.true255:                                     ; preds = %if.end247
  br i1 %tobool4.not, label %cond.false260, label %cond.true258

cond.true258:                                     ; preds = %cond.true255
  %sub259 = add nsw i32 %80, -4
  %shr = ashr i32 %sub259, 1
  br label %cond.end267

cond.false260:                                    ; preds = %cond.true255
  %shr262 = ashr i32 %80, 1
  br label %cond.end267

cond.end267:                                      ; preds = %if.end247, %cond.true258, %cond.false260
  %cond268 = phi i32 [ %shr, %cond.true258 ], [ %shr262, %cond.false260 ], [ %80, %if.end247 ]
  %block_y_aff = getelementptr inbounds i8, ptr %currMB, i64 40
  store i32 %cond268, ptr %block_y_aff, align 8
  %siblock = getelementptr inbounds i8, ptr %0, i64 13528
  %81 = load ptr, ptr %siblock, align 8
  %mb = getelementptr inbounds i8, ptr %currMB, i64 28
  %y = getelementptr inbounds i8, ptr %currMB, i64 30
  %82 = load i16, ptr %y, align 2
  %idxprom269 = sext i16 %82 to i64
  %arrayidx270 = getelementptr inbounds ptr, ptr %81, i64 %idxprom269
  %83 = load ptr, ptr %arrayidx270, align 8
  %84 = load i16, ptr %mb, align 4
  %idxprom272 = sext i16 %84 to i64
  %arrayidx273 = getelementptr inbounds i32, ptr %83, i64 %idxprom272
  store i32 0, ptr %arrayidx273, align 4
  %interpret_mb_mode = getelementptr inbounds i8, ptr %0, i64 13456
  %85 = load ptr, ptr %interpret_mb_mode, align 8
  call void %85(ptr noundef nonnull %currMB) #14
  %86 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool275.not = icmp eq i32 %86, 0
  br i1 %tobool275.not, label %if.end285, label %if.then276

if.then276:                                       ; preds = %cond.end267
  %87 = load i32, ptr %mb_field17, align 8
  %tobool278.not = icmp eq i32 %87, 0
  br i1 %tobool278.not, label %if.end285, label %if.then279

if.then279:                                       ; preds = %if.then276
  %num_ref_idx_active = getelementptr inbounds i8, ptr %0, i64 136
  %88 = load <2 x i32>, ptr %num_ref_idx_active, align 8
  %89 = shl <2 x i32> %88, <i32 1, i32 1>
  store <2 x i32> %89, ptr %num_ref_idx_active, align 8
  br label %if.end285

if.end285:                                        ; preds = %if.then276, %if.then279, %cond.end267
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  store i32 1, ptr %NoMbPartLessThan8x8Flag, align 8
  %mb_type286 = getelementptr inbounds i8, ptr %currMB, i64 152
  %90 = load i16, ptr %mb_type286, align 8
  %cmp288 = icmp eq i16 %90, 8
  br i1 %cmp288, label %if.then290, label %if.end330

if.then290:                                       ; preds = %if.end285
  store i32 2, ptr %currSE, align 8
  %91 = load ptr, ptr %partArr, align 8
  %92 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag297 = getelementptr inbounds i8, ptr %92, i64 12
  %93 = load i32, ptr %entropy_coding_mode_flag297, align 4
  %cmp298 = icmp eq i32 %93, 0
  br i1 %cmp298, label %if.end308, label %lor.lhs.false300

lor.lhs.false300:                                 ; preds = %if.then290
  %94 = load ptr, ptr %91, align 8
  %ei_flag302 = getelementptr inbounds i8, ptr %94, i64 24
  %95 = load i32, ptr %ei_flag302, align 8
  %tobool303.not = icmp eq i32 %95, 0
  %spec.select658 = select i1 %tobool303.not, i64 40, i64 32
  %spec.select659 = select i1 %tobool303.not, ptr @readB8_typeInfo_CABAC_p_slice, ptr @linfo_ue
  br label %if.end308

if.end308:                                        ; preds = %lor.lhs.false300, %if.then290
  %.sink657 = phi i64 [ 32, %if.then290 ], [ %spec.select658, %lor.lhs.false300 ]
  %readB8_typeInfo_CABAC_p_slice.sink = phi ptr [ @linfo_ue, %if.then290 ], [ %spec.select659, %lor.lhs.false300 ]
  %reading307 = getelementptr inbounds i8, ptr %currSE, i64 %.sink657
  store ptr %readB8_typeInfo_CABAC_p_slice.sink, ptr %reading307, align 8
  %readSyntaxElement311 = getelementptr inbounds i8, ptr %91, i64 40
  %value1313 = getelementptr inbounds i8, ptr %currSE, i64 4
  %b8mode.i = getelementptr inbounds i8, ptr %currMB, i64 364
  %b8pdir.i = getelementptr inbounds i8, ptr %currMB, i64 368
  %active_sps = getelementptr inbounds i8, ptr %1, i64 16
  %96 = load ptr, ptr %readSyntaxElement311, align 8
  %call312 = call i32 %96(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %91) #14
  %97 = load i32, ptr %value1313, align 4
  %98 = load ptr, ptr %currMB, align 8
  %slice_type.i = getelementptr inbounds i8, ptr %98, i64 164
  %99 = load i32, ptr %slice_type.i, align 4
  %cmp.i622 = icmp eq i32 %99, 1
  %idxprom.i = sext i32 %97 to i64
  %arrayidx.i = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i
  %arrayidx4.i = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i
  %arrayidx8.i = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i
  %arrayidx13.i = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i
  %.sink.in = select i1 %cmp.i622, ptr %arrayidx.i, ptr %arrayidx8.i
  %arrayidx13.sink.i = select i1 %cmp.i622, ptr %arrayidx4.i, ptr %arrayidx13.i
  %.sink = load i8, ptr %.sink.in, align 1
  %.fr = freeze i8 %.sink
  store i8 %.fr, ptr %b8mode.i, align 1
  %100 = load i8, ptr %arrayidx13.sink.i, align 1
  store i8 %100, ptr %b8pdir.i, align 1
  %cmp317 = icmp eq i8 %.fr, 0
  br i1 %cmp317, label %land.lhs.true319, label %lor.end

land.lhs.true319:                                 ; preds = %if.end308
  %101 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %101, i64 3144
  %102 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool320.not = icmp eq i32 %102, 0
  br i1 %tobool320.not, label %lor.end.thread638, label %lor.end.thread

lor.end.thread:                                   ; preds = %land.lhs.true319
  %103 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %104 = and i32 %103, 1
  br label %lor.end.thread638

lor.end:                                          ; preds = %if.end308
  %cmp325 = icmp eq i8 %.fr, 4
  %105 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %106 = and i32 %105, 1
  %spec.select = select i1 %cmp325, i32 %106, i32 0
  br label %lor.end.thread638

lor.end.thread638:                                ; preds = %lor.end, %land.lhs.true319, %lor.end.thread
  %107 = phi i32 [ %104, %lor.end.thread ], [ 0, %land.lhs.true319 ], [ %spec.select, %lor.end ]
  store i32 %107, ptr %NoMbPartLessThan8x8Flag, align 8
  %108 = load ptr, ptr %readSyntaxElement311, align 8
  %call312.1 = call i32 %108(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %91) #14
  %109 = load i32, ptr %value1313, align 4
  %110 = load ptr, ptr %currMB, align 8
  %slice_type.i.1 = getelementptr inbounds i8, ptr %110, i64 164
  %111 = load i32, ptr %slice_type.i.1, align 4
  %cmp.i622.1 = icmp eq i32 %111, 1
  %idxprom.i.1 = sext i32 %109 to i64
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %currMB, i64 365
  %arrayidx.i.1 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.1
  %arrayidx4.i.1 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.1
  %arrayidx8.i.1 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.1
  %arrayidx13.i.1 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.1
  %.sink647.in = select i1 %cmp.i622.1, ptr %arrayidx.i.1, ptr %arrayidx8.i.1
  %arrayidx13.sink.i.1 = select i1 %cmp.i622.1, ptr %arrayidx4.i.1, ptr %arrayidx13.i.1
  %.sink647 = load i8, ptr %.sink647.in, align 1
  %.fr.1 = freeze i8 %.sink647
  store i8 %.fr.1, ptr %arrayidx2.i.1, align 1
  %arrayidx6.i.1 = getelementptr inbounds i8, ptr %currMB, i64 369
  %112 = load i8, ptr %arrayidx13.sink.i.1, align 1
  store i8 %112, ptr %arrayidx6.i.1, align 1
  %cmp317.1 = icmp eq i8 %.fr.1, 0
  br i1 %cmp317.1, label %land.lhs.true319.1, label %lor.end.1

lor.end.1:                                        ; preds = %lor.end.thread638
  %cmp325.1 = icmp eq i8 %.fr.1, 4
  %113 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %114 = and i32 %113, 1
  %spec.select.1 = select i1 %cmp325.1, i32 %114, i32 0
  br label %lor.end.thread638.1

land.lhs.true319.1:                               ; preds = %lor.end.thread638
  %115 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.1 = getelementptr inbounds i8, ptr %115, i64 3144
  %116 = load i32, ptr %direct_8x8_inference_flag.1, align 4
  %tobool320.not.1 = icmp eq i32 %116, 0
  br i1 %tobool320.not.1, label %lor.end.thread638.1, label %lor.end.thread.1

lor.end.thread.1:                                 ; preds = %land.lhs.true319.1
  %117 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %118 = and i32 %117, 1
  br label %lor.end.thread638.1

lor.end.thread638.1:                              ; preds = %lor.end.thread.1, %land.lhs.true319.1, %lor.end.1
  %119 = phi i32 [ %118, %lor.end.thread.1 ], [ 0, %land.lhs.true319.1 ], [ %spec.select.1, %lor.end.1 ]
  store i32 %119, ptr %NoMbPartLessThan8x8Flag, align 8
  %120 = load ptr, ptr %readSyntaxElement311, align 8
  %call312.2 = call i32 %120(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %91) #14
  %121 = load i32, ptr %value1313, align 4
  %122 = load ptr, ptr %currMB, align 8
  %slice_type.i.2 = getelementptr inbounds i8, ptr %122, i64 164
  %123 = load i32, ptr %slice_type.i.2, align 4
  %cmp.i622.2 = icmp eq i32 %123, 1
  %idxprom.i.2 = sext i32 %121 to i64
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %currMB, i64 366
  %arrayidx.i.2 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.2
  %arrayidx4.i.2 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.2
  %arrayidx8.i.2 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.2
  %arrayidx13.i.2 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.2
  %.sink648.in = select i1 %cmp.i622.2, ptr %arrayidx.i.2, ptr %arrayidx8.i.2
  %arrayidx13.sink.i.2 = select i1 %cmp.i622.2, ptr %arrayidx4.i.2, ptr %arrayidx13.i.2
  %.sink648 = load i8, ptr %.sink648.in, align 1
  %.fr.2 = freeze i8 %.sink648
  store i8 %.fr.2, ptr %arrayidx2.i.2, align 1
  %arrayidx6.i.2 = getelementptr inbounds i8, ptr %currMB, i64 370
  %124 = load i8, ptr %arrayidx13.sink.i.2, align 1
  store i8 %124, ptr %arrayidx6.i.2, align 1
  %cmp317.2 = icmp eq i8 %.fr.2, 0
  br i1 %cmp317.2, label %land.lhs.true319.2, label %lor.end.2

lor.end.2:                                        ; preds = %lor.end.thread638.1
  %cmp325.2 = icmp eq i8 %.fr.2, 4
  %125 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %126 = and i32 %125, 1
  %spec.select.2 = select i1 %cmp325.2, i32 %126, i32 0
  br label %lor.end.thread638.2

land.lhs.true319.2:                               ; preds = %lor.end.thread638.1
  %127 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.2 = getelementptr inbounds i8, ptr %127, i64 3144
  %128 = load i32, ptr %direct_8x8_inference_flag.2, align 4
  %tobool320.not.2 = icmp eq i32 %128, 0
  br i1 %tobool320.not.2, label %lor.end.thread638.2, label %lor.end.thread.2

lor.end.thread.2:                                 ; preds = %land.lhs.true319.2
  %129 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %130 = and i32 %129, 1
  br label %lor.end.thread638.2

lor.end.thread638.2:                              ; preds = %lor.end.thread.2, %land.lhs.true319.2, %lor.end.2
  %131 = phi i32 [ %130, %lor.end.thread.2 ], [ 0, %land.lhs.true319.2 ], [ %spec.select.2, %lor.end.2 ]
  store i32 %131, ptr %NoMbPartLessThan8x8Flag, align 8
  %132 = load ptr, ptr %readSyntaxElement311, align 8
  %call312.3 = call i32 %132(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %91) #14
  %133 = load i32, ptr %value1313, align 4
  %134 = load ptr, ptr %currMB, align 8
  %slice_type.i.3 = getelementptr inbounds i8, ptr %134, i64 164
  %135 = load i32, ptr %slice_type.i.3, align 4
  %cmp.i622.3 = icmp eq i32 %135, 1
  %idxprom.i.3 = sext i32 %133 to i64
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %currMB, i64 367
  %arrayidx.i.3 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.3
  %arrayidx4.i.3 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.3
  %arrayidx8.i.3 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.3
  %arrayidx13.i.3 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.3
  %.sink649.in = select i1 %cmp.i622.3, ptr %arrayidx.i.3, ptr %arrayidx8.i.3
  %arrayidx13.sink.i.3 = select i1 %cmp.i622.3, ptr %arrayidx4.i.3, ptr %arrayidx13.i.3
  %.sink649 = load i8, ptr %.sink649.in, align 1
  %.fr.3 = freeze i8 %.sink649
  store i8 %.fr.3, ptr %arrayidx2.i.3, align 1
  %arrayidx6.i.3 = getelementptr inbounds i8, ptr %currMB, i64 371
  %136 = load i8, ptr %arrayidx13.sink.i.3, align 1
  store i8 %136, ptr %arrayidx6.i.3, align 1
  %cmp317.3 = icmp eq i8 %.fr.3, 0
  br i1 %cmp317.3, label %land.lhs.true319.3, label %lor.end.3

lor.end.3:                                        ; preds = %lor.end.thread638.2
  %cmp325.3 = icmp eq i8 %.fr.3, 4
  %137 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %138 = and i32 %137, 1
  %spec.select.3 = select i1 %cmp325.3, i32 %138, i32 0
  br label %lor.end.thread638.3

land.lhs.true319.3:                               ; preds = %lor.end.thread638.2
  %139 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.3 = getelementptr inbounds i8, ptr %139, i64 3144
  %140 = load i32, ptr %direct_8x8_inference_flag.3, align 4
  %tobool320.not.3 = icmp eq i32 %140, 0
  br i1 %tobool320.not.3, label %lor.end.thread638.3, label %lor.end.thread.3

lor.end.thread.3:                                 ; preds = %land.lhs.true319.3
  %141 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %142 = and i32 %141, 1
  br label %lor.end.thread638.3

lor.end.thread638.3:                              ; preds = %lor.end.thread.3, %land.lhs.true319.3, %lor.end.3
  %143 = phi i32 [ %142, %lor.end.thread.3 ], [ 0, %land.lhs.true319.3 ], [ %spec.select.3, %lor.end.3 ]
  store i32 %143, ptr %NoMbPartLessThan8x8Flag, align 8
  call fastcc void @init_macroblock(ptr noundef nonnull %currMB)
  %read_motion_info_from_NAL = getelementptr inbounds i8, ptr %0, i64 13440
  %144 = load ptr, ptr %read_motion_info_from_NAL, align 8
  call void %144(ptr noundef nonnull %currMB) #14
  %.pr = load i16, ptr %mb_type286, align 8
  br label %if.end330

if.end330:                                        ; preds = %lor.end.thread638.3, %if.end285
  %145 = phi i16 [ %.pr, %lor.end.thread638.3 ], [ %90, %if.end285 ]
  %cmp333 = icmp eq i16 %145, 9
  br i1 %cmp333, label %land.lhs.true335, label %if.else367

land.lhs.true335:                                 ; preds = %if.end330
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %146 = load i32, ptr %Transform8x8Mode, align 4
  %tobool336.not = icmp eq i32 %146, 0
  br i1 %tobool336.not, label %if.else367, label %if.then337

if.then337:                                       ; preds = %land.lhs.true335
  store i32 0, ptr %currSE, align 8
  %147 = load ptr, ptr %partArr, align 8
  %reading343 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading343, align 8
  %148 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag345 = getelementptr inbounds i8, ptr %148, i64 12
  %149 = load i32, ptr %entropy_coding_mode_flag345, align 4
  %cmp346 = icmp eq i32 %149, 0
  br i1 %cmp346, label %if.then352, label %lor.lhs.false348

lor.lhs.false348:                                 ; preds = %if.then337
  %150 = load ptr, ptr %147, align 8
  %ei_flag350 = getelementptr inbounds i8, ptr %150, i64 24
  %151 = load i32, ptr %ei_flag350, align 8
  %tobool351.not = icmp eq i32 %151, 0
  br i1 %tobool351.not, label %if.else356, label %if.then352

if.then352:                                       ; preds = %lor.lhs.false348, %if.then337
  %len353 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len353, align 4
  %152 = load ptr, ptr %147, align 8
  %call355 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %152) #14
  br label %if.end359

if.else356:                                       ; preds = %lor.lhs.false348
  %readSyntaxElement357 = getelementptr inbounds i8, ptr %147, i64 40
  %153 = load ptr, ptr %readSyntaxElement357, align 8
  %call358 = call i32 %153(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %147) #14
  br label %if.end359

if.end359:                                        ; preds = %if.else356, %if.then352
  %value1360 = getelementptr inbounds i8, ptr %currSE, i64 4
  %154 = load i32, ptr %value1360, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %154, ptr %luma_transform_size_8x8_flag, align 4
  %tobool362.not = icmp eq i32 %154, 0
  br i1 %tobool362.not, label %if.end369, label %if.then363

if.then363:                                       ; preds = %if.end359
  store i16 13, ptr %mb_type286, align 8
  %b8mode365 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 218959117, ptr %b8mode365, align 4
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir, align 8
  br label %if.end369

if.else367:                                       ; preds = %land.lhs.true335, %if.end330
  %luma_transform_size_8x8_flag368 = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 0, ptr %luma_transform_size_8x8_flag368, align 4
  br label %if.end369

if.end369:                                        ; preds = %if.end359, %if.then363, %if.else367
  %155 = load ptr, ptr %active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds i8, ptr %155, i64 2204
  %156 = load i32, ptr %constrained_intra_pred_flag, align 4
  %tobool371.not = icmp eq i32 %156, 0
  br i1 %tobool371.not, label %if.end379, label %if.then372

if.then372:                                       ; preds = %if.end369
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %157 = load i32, ptr %is_intra_block, align 8
  %cmp373 = icmp eq i32 %157, 0
  br i1 %cmp373, label %if.then375, label %if.end379

if.then375:                                       ; preds = %if.then372
  %intra_block = getelementptr inbounds i8, ptr %0, i64 13544
  %158 = load ptr, ptr %intra_block, align 8
  %arrayidx377 = getelementptr inbounds i8, ptr %158, i64 %idxprom251
  store i8 0, ptr %arrayidx377, align 1
  br label %if.end379

if.end379:                                        ; preds = %if.then372, %if.then375, %if.end369
  %159 = load i16, ptr %mb_type286, align 8
  %cmp382.not = icmp eq i16 %159, 8
  br i1 %cmp382.not, label %if.then396, label %if.end385

if.end385:                                        ; preds = %if.end379
  call fastcc void @init_macroblock(ptr noundef nonnull %currMB)
  %.pr641 = load i16, ptr %mb_type286, align 8
  switch i16 %.pr641, label %if.then396 [
    i16 0, label %if.then390
    i16 14, label %if.else418
  ]

if.then390:                                       ; preds = %if.end385
  call void @skip_macroblock(ptr noundef nonnull %currMB)
  br label %if.end431

if.then396:                                       ; preds = %if.end379, %if.end385
  %is_intra_block397 = getelementptr inbounds i8, ptr %currMB, i64 96
  %160 = load i32, ptr %is_intra_block397, align 8
  %cmp398 = icmp eq i32 %160, 1
  br i1 %cmp398, label %if.then400, label %if.end401

if.then400:                                       ; preds = %if.then396
  call fastcc void @read_ipred_modes(ptr noundef nonnull %currMB)
  %.pr642 = load i32, ptr %is_intra_block397, align 8
  br label %if.end401

if.end401:                                        ; preds = %if.then400, %if.then396
  %161 = phi i32 [ %.pr642, %if.then400 ], [ %160, %if.then396 ]
  %cmp403 = icmp eq i32 %161, 0
  br i1 %cmp403, label %land.lhs.true405, label %if.end417

land.lhs.true405:                                 ; preds = %if.end401
  %162 = load i16, ptr %mb_type286, align 8
  switch i16 %162, label %if.then415 [
    i16 0, label %if.end417
    i16 8, label %if.end417
  ]

if.then415:                                       ; preds = %land.lhs.true405
  %read_motion_info_from_NAL416 = getelementptr inbounds i8, ptr %0, i64 13440
  %163 = load ptr, ptr %read_motion_info_from_NAL416, align 8
  call void %163(ptr noundef nonnull %currMB) #14
  br label %if.end417

if.end417:                                        ; preds = %land.lhs.true405, %land.lhs.true405, %if.then415, %if.end401
  %read_CBP_and_coeffs_from_NAL = getelementptr inbounds i8, ptr %0, i64 13408
  %164 = load ptr, ptr %read_CBP_and_coeffs_from_NAL, align 8
  call void %164(ptr noundef nonnull %currMB) #14
  br label %if.end431

if.else418:                                       ; preds = %if.end385
  %165 = load i32, ptr %dp_mode, align 8
  %tobool420.not = icmp eq i32 %165, 0
  br i1 %tobool420.not, label %if.else424, label %land.lhs.true421

land.lhs.true421:                                 ; preds = %if.else418
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %166 = load i32, ptr %dpB_NotPresent, align 8
  %tobool422.not = icmp eq i32 %166, 0
  br i1 %tobool422.not, label %if.else424, label %if.then423

if.then423:                                       ; preds = %land.lhs.true421
  %currMB.val = load ptr, ptr %currMB, align 8
  %currMB.val620 = load ptr, ptr %p_Vid1, align 8
  call fastcc void @concealIPCMcoeffs(ptr %currMB.val, ptr %currMB.val620)
  br label %if.end431

if.else424:                                       ; preds = %land.lhs.true421, %if.else418
  %167 = load ptr, ptr %partArr, align 8
  %arrayidx426 = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom, i64 7
  %168 = load i8, ptr %arrayidx426, align 1
  %idxprom427 = zext i8 %168 to i64
  %arrayidx428 = getelementptr inbounds %struct.datapartition, ptr %167, i64 %idxprom427
  call fastcc void @read_IPCM_coeffs_from_NAL(ptr noundef nonnull %0, ptr noundef %arrayidx428)
  br label %if.end431

if.end431:                                        ; preds = %if.end417, %if.else424, %if.then423, %if.then390
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal noundef i32 @decode_one_component_p_slice(ptr noundef %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #3 {
entry:
  %ipmode_DPCM = getelementptr inbounds i8, ptr %currMB, i64 372
  store i8 9, ptr %ipmode_DPCM, align 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.else50 [
    i16 14, label %if.then
    i16 10, label %if.then6
    i16 9, label %if.then13
    i16 13, label %if.then20
    i16 0, label %if.then27
    i16 1, label %if.then34
    i16 2, label %if.then41
    i16 3, label %if.then48
  ]

if.then:                                          ; preds = %entry
  %call = tail call i32 @mb_pred_ipcm(ptr noundef nonnull %currMB) #14
  br label %if.end58

if.then6:                                         ; preds = %entry
  %call7 = tail call i32 @mb_pred_intra16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then13:                                        ; preds = %entry
  %call14 = tail call i32 @mb_pred_intra4x4(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end58

if.then20:                                        ; preds = %entry
  %call21 = tail call i32 @mb_pred_intra8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end58

if.then27:                                        ; preds = %entry
  %call28 = tail call i32 @mb_pred_skip(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end58

if.then34:                                        ; preds = %entry
  %call35 = tail call i32 @mb_pred_p_inter16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then41:                                        ; preds = %entry
  %call42 = tail call i32 @mb_pred_p_inter16x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then48:                                        ; preds = %entry
  %call49 = tail call i32 @mb_pred_p_inter8x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.else50:                                        ; preds = %entry
  %call51 = tail call i32 @mb_pred_p_inter8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.end58:                                         ; preds = %if.then6, %if.then20, %if.then34, %if.then48, %if.else50, %if.then41, %if.then27, %if.then13, %if.then
  ret i32 1
}

declare void @init_lists_p_slice_mvc(ptr noundef) #5

declare void @init_lists_p_slice(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal noundef i32 @decode_one_component_sp_slice(ptr noundef %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #3 {
entry:
  %ipmode_DPCM = getelementptr inbounds i8, ptr %currMB, i64 372
  store i8 9, ptr %ipmode_DPCM, align 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.else50 [
    i16 14, label %if.then
    i16 10, label %if.then6
    i16 9, label %if.then13
    i16 13, label %if.then20
    i16 0, label %if.then27
    i16 1, label %if.then34
    i16 2, label %if.then41
    i16 3, label %if.then48
  ]

if.then:                                          ; preds = %entry
  %call = tail call i32 @mb_pred_ipcm(ptr noundef nonnull %currMB) #14
  br label %if.end58

if.then6:                                         ; preds = %entry
  %call7 = tail call i32 @mb_pred_intra16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then13:                                        ; preds = %entry
  %call14 = tail call i32 @mb_pred_intra4x4(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end58

if.then20:                                        ; preds = %entry
  %call21 = tail call i32 @mb_pred_intra8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end58

if.then27:                                        ; preds = %entry
  %call28 = tail call i32 @mb_pred_sp_skip(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then34:                                        ; preds = %entry
  %call35 = tail call i32 @mb_pred_p_inter16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then41:                                        ; preds = %entry
  %call42 = tail call i32 @mb_pred_p_inter16x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.then48:                                        ; preds = %entry
  %call49 = tail call i32 @mb_pred_p_inter8x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.else50:                                        ; preds = %entry
  %call51 = tail call i32 @mb_pred_p_inter8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end58

if.end58:                                         ; preds = %if.then6, %if.then20, %if.then34, %if.then48, %if.else50, %if.then41, %if.then27, %if.then13, %if.then
  ret i32 1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @interpret_mb_mode_B(ptr nocapture noundef %currMB) #7 {
entry:
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  %conv = sext i16 %0 to i32
  switch i16 %0, label %if.else11 [
    i16 0, label %if.then
    i16 23, label %if.then6
  ]

if.then:                                          ; preds = %entry
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode, align 4
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 33686018, ptr %b8pdir, align 8
  br label %if.end104

if.then6:                                         ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block, align 8
  %b8mode7 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 185273099, ptr %b8mode7, align 4
  %b8pdir9 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir9, align 8
  br label %if.end104

if.else11:                                        ; preds = %entry
  %1 = add i16 %0, -24
  %or.cond = icmp ult i16 %1, 24
  br i1 %or.cond, label %if.then18, label %if.else28

if.then18:                                        ; preds = %if.else11
  %is_intra_block19 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block19, align 8
  %b8mode20 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode20, align 4
  %b8pdir22 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir22, align 8
  %sub = add nsw i32 %conv, -24
  %shr = lshr i32 %sub, 2
  %idxprom = zext nneg i32 %shr to i64
  %arrayidx = getelementptr inbounds [6 x i16], ptr @interpret_mb_mode_I.ICBPTAB, i64 0, i64 %idxprom
  %2 = load i16, ptr %arrayidx, align 2
  %conv25 = sext i16 %2 to i32
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %conv25, ptr %cbp, align 4
  %and = and i32 %conv, 3
  %i16mode = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 %and, ptr %i16mode, align 8
  br label %if.end104

if.else28:                                        ; preds = %if.else11
  %cmp30 = icmp eq i16 %0, 22
  br i1 %cmp30, label %if.end104, label %if.else33

if.else33:                                        ; preds = %if.else28
  %cmp35 = icmp slt i16 %0, 4
  %b8pdir40 = getelementptr inbounds i8, ptr %currMB, i64 368
  br i1 %cmp35, label %if.then37, label %if.else45

if.then37:                                        ; preds = %if.else33
  %b8mode38 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 16843009, ptr %b8mode38, align 4
  %idxprom42 = sext i16 %0 to i64
  %arrayidx43 = getelementptr inbounds [12 x i16], ptr @interpret_mb_mode_B.offset2pdir16x16, i64 0, i64 %idxprom42
  %3 = load i16, ptr %arrayidx43, align 2
  %4 = trunc i16 %3 to i8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(4) %b8pdir40, i8 %4, i64 4, i1 false)
  br label %if.end104

if.else45:                                        ; preds = %if.else33
  %cmp47 = icmp eq i16 %0, 48
  %b8mode51 = getelementptr inbounds i8, ptr %currMB, i64 364
  br i1 %cmp47, label %if.then49, label %if.else57

if.then49:                                        ; preds = %if.else45
  %is_intra_block50 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block50, align 8
  store i32 0, ptr %b8mode51, align 4
  store i32 -1, ptr %b8pdir40, align 8
  %cbp55 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 -1, ptr %cbp55, align 4
  %i16mode56 = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 0, ptr %i16mode56, align 8
  br label %if.end104

if.else57:                                        ; preds = %if.else45
  %and59 = and i32 %conv, 1
  %cmp60 = icmp eq i32 %and59, 0
  %idxprom68 = zext nneg i16 %0 to i64
  %arrayidx77.2 = getelementptr inbounds i8, ptr %currMB, i64 370
  %arrayidx77.3 = getelementptr inbounds i8, ptr %currMB, i64 371
  br i1 %cmp60, label %if.then62, label %if.else78

if.then62:                                        ; preds = %if.else57
  store i32 33686018, ptr %b8mode51, align 4
  %arrayidx73 = getelementptr inbounds [22 x [2 x i16]], ptr @interpret_mb_mode_B.offset2pdir16x8, i64 0, i64 %idxprom68, i64 0
  %5 = load i16, ptr %arrayidx73, align 4
  %conv74 = trunc i16 %5 to i8
  store i8 %conv74, ptr %b8pdir40, align 1
  %arrayidx77.1 = getelementptr inbounds i8, ptr %currMB, i64 369
  store i8 %conv74, ptr %arrayidx77.1, align 1
  %arrayidx73.2 = getelementptr inbounds [22 x [2 x i16]], ptr @interpret_mb_mode_B.offset2pdir16x8, i64 0, i64 %idxprom68, i64 1
  %6 = load i16, ptr %arrayidx73.2, align 2
  %conv74.2 = trunc i16 %6 to i8
  store i8 %conv74.2, ptr %arrayidx77.2, align 1
  store i8 %conv74.2, ptr %arrayidx77.3, align 1
  br label %if.end104

if.else78:                                        ; preds = %if.else57
  store i32 50529027, ptr %b8mode51, align 4
  %arrayidx91 = getelementptr inbounds [22 x [2 x i16]], ptr @interpret_mb_mode_B.offset2pdir8x16, i64 0, i64 %idxprom68, i64 0
  %7 = load i16, ptr %arrayidx91, align 4
  %conv92 = trunc i16 %7 to i8
  store i8 %conv92, ptr %b8pdir40, align 1
  %arrayidx91.1 = getelementptr inbounds [22 x [2 x i16]], ptr @interpret_mb_mode_B.offset2pdir8x16, i64 0, i64 %idxprom68, i64 1
  %8 = load i16, ptr %arrayidx91.1, align 2
  %conv92.1 = trunc i16 %8 to i8
  %arrayidx95.1 = getelementptr inbounds i8, ptr %currMB, i64 369
  store i8 %conv92.1, ptr %arrayidx95.1, align 1
  store i8 %conv92, ptr %arrayidx77.2, align 1
  store i8 %conv92.1, ptr %arrayidx77.3, align 1
  br label %if.end104

if.end104:                                        ; preds = %if.else78, %if.then62, %if.else28, %if.then6, %if.then49, %if.then37, %if.then18, %if.then
  %mbmode.0 = phi i16 [ 0, %if.then ], [ 9, %if.then6 ], [ 10, %if.then18 ], [ 1, %if.then37 ], [ 14, %if.then49 ], [ 8, %if.else28 ], [ 2, %if.then62 ], [ 3, %if.else78 ]
  store i16 %mbmode.0, ptr %mb_type, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_motion_info_from_NAL_b_slice(ptr noundef %currMB) #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %2 = load ptr, ptr %dec_picture2, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %3 = load i16, ptr %mb_type, align 8
  %cmp = icmp eq i16 %3, 8
  %narrow = select i1 %cmp, i16 4, i16 %3
  %spec.select = sext i16 %narrow to i64
  %arrayidx7 = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %spec.select
  %4 = load i32, ptr %arrayidx7, align 8
  %arrayidx11 = getelementptr inbounds i8, ptr %arrayidx7, i64 4
  %5 = load i32, ptr %arrayidx11, align 4
  %list_offset12 = getelementptr inbounds i8, ptr %currMB, i64 114
  %6 = load i16, ptr %list_offset12, align 2
  %conv13 = sext i16 %6 to i64
  %listX = getelementptr inbounds i8, ptr %0, i64 264
  %arrayidx15 = getelementptr inbounds [6 x ptr], ptr %listX, i64 0, i64 %conv13
  %7 = load ptr, ptr %arrayidx15, align 8
  %add17 = add nsw i64 %conv13, 1
  %arrayidx19 = getelementptr inbounds [6 x ptr], ptr %listX, i64 0, i64 %add17
  %8 = load ptr, ptr %arrayidx19, align 8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %update_direct_mv_info = getelementptr inbounds i8, ptr %0, i64 13496
  %9 = load ptr, ptr %update_direct_mv_info, align 8
  tail call void %9(ptr noundef nonnull %currMB) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 3, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %10 = load ptr, ptr %partArr, align 8
  %num_ref_idx_active = getelementptr inbounds i8, ptr %0, i64 136
  %11 = load i32, ptr %num_ref_idx_active, align 8
  %readRefPictureIdx.i = getelementptr inbounds i8, ptr %currMB, i64 464
  store ptr @readRefPictureIdx_Null, ptr %readRefPictureIdx.i, align 8
  %cmp.i = icmp sgt i32 %11, 1
  br i1 %cmp.i, label %if.then.i, label %prepareListforRefIdx.exit

if.then.i:                                        ; preds = %if.end
  %12 = load ptr, ptr %p_Vid1, align 8
  %active_pps.i = getelementptr inbounds i8, ptr %12, i64 8
  %13 = load ptr, ptr %active_pps.i, align 8
  %entropy_coding_mode_flag.i = getelementptr inbounds i8, ptr %13, i64 12
  %14 = load i32, ptr %entropy_coding_mode_flag.i, align 4
  %cmp1.i = icmp eq i32 %14, 0
  br i1 %cmp1.i, label %if.then2.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.then.i
  %15 = load ptr, ptr %10, align 8
  %ei_flag.i = getelementptr inbounds i8, ptr %15, i64 24
  %16 = load i32, ptr %ei_flag.i, align 8
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %if.else10.i, label %if.then2.i

if.then2.i:                                       ; preds = %lor.lhs.false.i, %if.then.i
  %mapping.i = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping.i, align 8
  %cmp5.i = icmp eq i32 %11, 2
  %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i = select i1 %cmp5.i, ptr @readRefPictureIdx_FLC, ptr @readRefPictureIdx_VLC
  br label %if.end16.sink.split.i

if.else10.i:                                      ; preds = %lor.lhs.false.i
  %reading.i = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readRefFrame_CABAC, ptr %reading.i, align 8
  br label %if.end16.sink.split.i

if.end16.sink.split.i:                            ; preds = %if.else10.i, %if.then2.i
  %readRefPictureIdx_FLC.sink.i = phi ptr [ %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i, %if.then2.i ], [ @readRefPictureIdx_VLC, %if.else10.i ]
  store ptr %readRefPictureIdx_FLC.sink.i, ptr %readRefPictureIdx.i, align 8
  br label %prepareListforRefIdx.exit

prepareListforRefIdx.exit:                        ; preds = %if.end, %if.end16.sink.split.i
  %mv_info = getelementptr inbounds i8, ptr %2, i64 152
  %17 = load ptr, ptr %mv_info, align 8
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %18 = load i32, ptr %block_y, align 4
  %idxprom28 = sext i32 %18 to i64
  %arrayidx29 = getelementptr inbounds ptr, ptr %17, i64 %idxprom28
  call fastcc void @readMBRefPictureIdx(ptr noundef nonnull %currSE, ptr noundef %10, ptr noundef nonnull %currMB, ptr noundef %arrayidx29, i32 noundef 0, i32 noundef %5, i32 noundef %4)
  %arrayidx31 = getelementptr inbounds i8, ptr %0, i64 140
  %19 = load i32, ptr %arrayidx31, align 4
  store ptr @readRefPictureIdx_Null, ptr %readRefPictureIdx.i, align 8
  %cmp.i146 = icmp sgt i32 %19, 1
  br i1 %cmp.i146, label %if.then.i147, label %prepareListforRefIdx.exit163

if.then.i147:                                     ; preds = %prepareListforRefIdx.exit
  %20 = load ptr, ptr %p_Vid1, align 8
  %active_pps.i149 = getelementptr inbounds i8, ptr %20, i64 8
  %21 = load ptr, ptr %active_pps.i149, align 8
  %entropy_coding_mode_flag.i150 = getelementptr inbounds i8, ptr %21, i64 12
  %22 = load i32, ptr %entropy_coding_mode_flag.i150, align 4
  %cmp1.i151 = icmp eq i32 %22, 0
  br i1 %cmp1.i151, label %if.then2.i155, label %lor.lhs.false.i152

lor.lhs.false.i152:                               ; preds = %if.then.i147
  %23 = load ptr, ptr %10, align 8
  %ei_flag.i153 = getelementptr inbounds i8, ptr %23, i64 24
  %24 = load i32, ptr %ei_flag.i153, align 8
  %tobool.not.i154 = icmp eq i32 %24, 0
  br i1 %tobool.not.i154, label %if.else10.i161, label %if.then2.i155

if.then2.i155:                                    ; preds = %lor.lhs.false.i152, %if.then.i147
  %mapping.i156 = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping.i156, align 8
  %cmp5.i157 = icmp eq i32 %19, 2
  %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i158 = select i1 %cmp5.i157, ptr @readRefPictureIdx_FLC, ptr @readRefPictureIdx_VLC
  br label %if.end16.sink.split.i159

if.else10.i161:                                   ; preds = %lor.lhs.false.i152
  %reading.i162 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readRefFrame_CABAC, ptr %reading.i162, align 8
  br label %if.end16.sink.split.i159

if.end16.sink.split.i159:                         ; preds = %if.else10.i161, %if.then2.i155
  %readRefPictureIdx_FLC.sink.i160 = phi ptr [ %readRefPictureIdx_FLC.readRefPictureIdx_VLC.i158, %if.then2.i155 ], [ @readRefPictureIdx_VLC, %if.else10.i161 ]
  store ptr %readRefPictureIdx_FLC.sink.i160, ptr %readRefPictureIdx.i, align 8
  br label %prepareListforRefIdx.exit163

prepareListforRefIdx.exit163:                     ; preds = %prepareListforRefIdx.exit, %if.end16.sink.split.i159
  %25 = load ptr, ptr %mv_info, align 8
  %26 = load i32, ptr %block_y, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds ptr, ptr %25, i64 %idxprom34
  call fastcc void @readMBRefPictureIdx(ptr noundef nonnull %currSE, ptr noundef %10, ptr noundef nonnull %currMB, ptr noundef %arrayidx35, i32 noundef 1, i32 noundef %5, i32 noundef %4)
  store i32 5, ptr %currSE, align 8
  %27 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %28 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %28, i64 12
  %29 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp41 = icmp eq i32 %29, 0
  br i1 %cmp41, label %for.body.lr.ph, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %prepareListforRefIdx.exit163
  %30 = load ptr, ptr %27, align 8
  %ei_flag = getelementptr inbounds i8, ptr %30, i64 24
  %31 = load i32, ptr %ei_flag, align 8
  %tobool.not = icmp eq i32 %31, 0
  %spec.select174 = select i1 %tobool.not, i64 40, i64 32
  %spec.select175 = select i1 %tobool.not, ptr @read_MVD_CABAC, ptr @linfo_se
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %lor.lhs.false, %prepareListforRefIdx.exit163
  %.sink = phi i64 [ 32, %prepareListforRefIdx.exit163 ], [ %spec.select174, %lor.lhs.false ]
  %linfo_se.sink = phi ptr [ @linfo_se, %prepareListforRefIdx.exit163 ], [ %spec.select175, %lor.lhs.false ]
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 %.sink
  store ptr %linfo_se.sink, ptr %mapping, align 8
  call fastcc void @readMBMotionVectors(ptr noundef nonnull %currSE, ptr noundef %27, ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef %4, i32 noundef %5)
  call fastcc void @readMBMotionVectors(ptr noundef nonnull %currSE, ptr noundef %27, ptr noundef nonnull %currMB, i32 noundef 1, i32 noundef %4, i32 noundef %5)
  %32 = load i32, ptr %block_y, align 4
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %33 = sext i32 %32 to i64
  br label %for.body55.lr.ph

for.body55.lr.ph:                                 ; preds = %for.inc89, %for.body.lr.ph
  %indvars.iv171 = phi i64 [ %33, %for.body.lr.ph ], [ %indvars.iv.next172, %for.inc89 ]
  %34 = load i32, ptr %block_x, align 8
  %35 = sext i32 %34 to i64
  br label %for.body55

for.body55:                                       ; preds = %for.body55.lr.ph, %cond.end85
  %indvars.iv = phi i64 [ %35, %for.body55.lr.ph ], [ %indvars.iv.next, %cond.end85 ]
  %36 = load ptr, ptr %mv_info, align 8
  %arrayidx59 = getelementptr inbounds ptr, ptr %36, i64 %indvars.iv171
  %37 = load ptr, ptr %arrayidx59, align 8
  %arrayidx61 = getelementptr inbounds %struct.pic_motion_params, ptr %37, i64 %indvars.iv
  %ref_idx62 = getelementptr inbounds i8, ptr %arrayidx61, i64 24
  %38 = load i8, ptr %ref_idx62, align 8
  %cmp66 = icmp sgt i8 %38, -1
  br i1 %cmp66, label %cond.true68, label %cond.end72

cond.true68:                                      ; preds = %for.body55
  %idxprom69 = zext nneg i8 %38 to i64
  %arrayidx70 = getelementptr inbounds ptr, ptr %7, i64 %idxprom69
  %39 = load ptr, ptr %arrayidx70, align 8
  br label %cond.end72

cond.end72:                                       ; preds = %for.body55, %cond.true68
  %cond73 = phi ptr [ %39, %cond.true68 ], [ null, %for.body55 ]
  store ptr %cond73, ptr %arrayidx61, align 8
  %arrayidx76 = getelementptr inbounds i8, ptr %arrayidx61, i64 25
  %40 = load i8, ptr %arrayidx76, align 1
  %cmp79 = icmp sgt i8 %40, -1
  br i1 %cmp79, label %cond.true81, label %cond.end85

cond.true81:                                      ; preds = %cond.end72
  %idxprom82 = zext nneg i8 %40 to i64
  %arrayidx83 = getelementptr inbounds ptr, ptr %8, i64 %idxprom82
  %41 = load ptr, ptr %arrayidx83, align 8
  br label %cond.end85

cond.end85:                                       ; preds = %cond.end72, %cond.true81
  %cond86 = phi ptr [ %41, %cond.true81 ], [ null, %cond.end72 ]
  %arrayidx88 = getelementptr inbounds i8, ptr %arrayidx61, i64 8
  store ptr %cond86, ptr %arrayidx88, align 8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %42 = load i32, ptr %block_x, align 8
  %43 = add nsw i32 %42, 3
  %44 = sext i32 %43 to i64
  %cmp53 = icmp slt i64 %indvars.iv, %44
  br i1 %cmp53, label %for.body55, label %for.inc89

for.inc89:                                        ; preds = %cond.end85
  %.pre = load i32, ptr %block_y, align 4
  %indvars.iv.next172 = add nsw i64 %indvars.iv171, 1
  %45 = add nsw i32 %.pre, 3
  %46 = sext i32 %45 to i64
  %cmp48 = icmp slt i64 %indvars.iv171, %46
  br i1 %cmp48, label %for.body55.lr.ph, label %for.end91

for.end91:                                        ; preds = %for.inc89
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_one_macroblock_b_slice(ptr noundef %currMB) #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %2 = load i32, ptr %mbAddrX, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %3 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %3 to i64
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %4 = load ptr, ptr %dec_picture2, align 8
  %motion3 = getelementptr inbounds i8, ptr %4, i64 184
  %mb_aff_frame_flag = getelementptr inbounds i8, ptr %0, i64 128
  %5 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool.not = icmp eq i32 %5, 0
  %and = and i32 %2, 1
  %tobool4.not = icmp eq i32 %and, 0
  %or.cond663 = select i1 %tobool.not, i1 true, i1 %tobool4.not
  br i1 %or.cond663, label %if.end8, label %if.end8.thread

if.end8.thread:                                   ; preds = %entry
  %mb_data = getelementptr inbounds i8, ptr %1, i64 848888
  %6 = load ptr, ptr %mb_data, align 8
  %7 = sext i32 %2 to i64
  %8 = getelementptr %struct.macroblock, ptr %6, i64 %7
  %arrayidx7 = getelementptr i8, ptr %8, i64 -480
  %skip_flag = getelementptr i8, ptr %8, i64 -106
  %9 = load i8, ptr %skip_flag, align 2
  %conv = sext i8 %9 to i32
  br label %cond.false

if.end8:                                          ; preds = %entry
  br i1 %tobool4.not, label %cond.end, label %if.end8.cond.false_crit_edge

if.end8.cond.false_crit_edge:                     ; preds = %if.end8
  %mb_data11.phi.trans.insert = getelementptr inbounds i8, ptr %1, i64 848888
  %.pre = load ptr, ptr %mb_data11.phi.trans.insert, align 8
  %.pre703 = sext i32 %2 to i64
  br label %cond.false

cond.false:                                       ; preds = %if.end8.cond.false_crit_edge, %if.end8.thread
  %.pre-phi = phi i64 [ %.pre703, %if.end8.cond.false_crit_edge ], [ %7, %if.end8.thread ]
  %10 = phi ptr [ %.pre, %if.end8.cond.false_crit_edge ], [ %6, %if.end8.thread ]
  %prevMbSkipped.0677 = phi i32 [ 0, %if.end8.cond.false_crit_edge ], [ %conv, %if.end8.thread ]
  %topMB.0675 = phi ptr [ null, %if.end8.cond.false_crit_edge ], [ %arrayidx7, %if.end8.thread ]
  %11 = getelementptr %struct.macroblock, ptr %10, i64 %.pre-phi
  %mb_field = getelementptr i8, ptr %11, i64 -96
  %12 = load i32, ptr %mb_field, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.end8, %cond.false
  %prevMbSkipped.0678 = phi i32 [ %prevMbSkipped.0677, %cond.false ], [ 0, %if.end8 ]
  %topMB.0676 = phi ptr [ %topMB.0675, %cond.false ], [ null, %if.end8 ]
  %cond = phi i32 [ %12, %cond.false ], [ 0, %if.end8 ]
  %mb_field15 = getelementptr inbounds i8, ptr %currMB, i64 384
  store i32 %cond, ptr %mb_field15, align 8
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %13 = load i32, ptr %qp, align 4
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %13, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %1, i64 849052
  %14 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %14, %13
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %15 = load ptr, ptr %dec_picture2, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %1, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %15, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %16 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %16
  %17 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %17, %13
  %cond.i.i.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %cond.end
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %18 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %18 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.end
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %cond.end ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %19 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %19, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %20 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %20
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %15, i64 304
  %21 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %21, %13
  %cond.i.i.1.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %22 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %22 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %23 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %23, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i = icmp eq i32 %add.i, 0
  br i1 %cmp.i, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %1, i64 849092
  %24 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %24, 1
  %25 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %25, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  store i32 2, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %26 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %27 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %27, i64 12
  %28 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp19 = icmp eq i32 %28, 0
  br i1 %cmp19, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %update_qp.exit
  %29 = load ptr, ptr %26, align 8
  %ei_flag = getelementptr inbounds i8, ptr %29, i64 24
  %30 = load i32, ptr %ei_flag, align 8
  %tobool21.not = icmp eq i32 %30, 0
  br i1 %tobool21.not, label %if.end23, label %if.then22

if.then22:                                        ; preds = %lor.lhs.false, %update_qp.exit
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping, align 8
  %.pre698 = load i32, ptr %entropy_coding_mode_flag, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %lor.lhs.false
  %31 = phi i32 [ %.pre698, %if.then22 ], [ %28, %lor.lhs.false ]
  %cmp26 = icmp eq i32 %31, 1
  br i1 %cmp26, label %if.then28, label %if.else122

if.then28:                                        ; preds = %if.end23
  %32 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool30.not = icmp ne i32 %32, 0
  %tobool35 = icmp ne i32 %prevMbSkipped.0678, 0
  %or.cond = select i1 %tobool4.not, i1 true, i1 %tobool35
  %or.cond658 = select i1 %tobool30.not, i1 %or.cond, i1 false
  br i1 %or.cond658, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.then28
  %mbAvailA.i = getelementptr inbounds i8, ptr %currMB, i64 404
  %33 = load i32, ptr %mbAvailA.i, align 4
  %tobool.not.i = icmp eq i32 %33, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end.sink.split.i

if.else.i:                                        ; preds = %if.then36
  %mbAvailB.i = getelementptr inbounds i8, ptr %currMB, i64 408
  %34 = load i32, ptr %mbAvailB.i, align 8
  %tobool3.not.i = icmp eq i32 %34, 0
  br i1 %tobool3.not.i, label %field_flag_inference.exit, label %if.end.sink.split.i

if.end.sink.split.i:                              ; preds = %if.else.i, %if.then36
  %.sink704 = phi i64 [ 388, %if.then36 ], [ 392, %if.else.i ]
  %mbAddrB.i = getelementptr inbounds i8, ptr %currMB, i64 %.sink704
  %.sink.in.i = getelementptr inbounds i8, ptr %1, i64 848888
  %.sink.i = load ptr, ptr %.sink.in.i, align 8
  %.sink16.i = load i32, ptr %mbAddrB.i, align 4
  %idxprom5.i = sext i32 %.sink16.i to i64
  %mb_field7.i = getelementptr inbounds %struct.macroblock, ptr %.sink.i, i64 %idxprom5.i, i32 45
  %35 = load i32, ptr %mb_field7.i, align 8
  br label %field_flag_inference.exit

field_flag_inference.exit:                        ; preds = %if.else.i, %if.end.sink.split.i
  %cond.sink.i = phi i32 [ 0, %if.else.i ], [ %35, %if.end.sink.split.i ]
  store i32 %cond.sink.i, ptr %mb_field15, align 8
  br label %if.end37

if.end37:                                         ; preds = %field_flag_inference.exit, %if.then28
  tail call void @CheckAvailabilityOfNeighborsCABAC(ptr noundef nonnull %currMB) #14
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @read_skip_flag_CABAC_b_slice, ptr %reading, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %26, i64 40
  %36 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %36(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %37 = load i32, ptr %value1, align 4
  %conv38 = trunc i32 %37 to i16
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 %conv38, ptr %mb_type, align 8
  %tobool40.not = icmp eq i32 %37, 0
  %conv41 = zext i1 %tobool40.not to i8
  %skip_flag42 = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 %conv41, ptr %skip_flag42, align 2
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %38 = load i32, ptr %value2, align 8
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %38, ptr %cbp, align 4
  %39 = load ptr, ptr %26, align 8
  %ei_flag44 = getelementptr inbounds i8, ptr %39, i64 24
  %40 = load i32, ptr %ei_flag44, align 8
  %tobool45.not = icmp eq i32 %40, 0
  br i1 %tobool45.not, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end37
  %ei_flag47 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag47, align 2
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.end37
  %cmp54 = icmp eq i32 %38, 0
  %or.cond466 = select i1 %tobool40.not, i1 %cmp54, i1 false
  br i1 %or.cond466, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end48
  %cod_counter = getelementptr inbounds i8, ptr %0, i64 120
  store i32 0, ptr %cod_counter, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end48
  %41 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool59.not = icmp eq i32 %41, 0
  br i1 %tobool59.not, label %if.end103, label %if.then60

if.then60:                                        ; preds = %if.end57
  br i1 %tobool4.not, label %if.then64, label %if.else70

if.then64:                                        ; preds = %if.then60
  %42 = load i8, ptr %skip_flag42, align 2
  %tobool67.not = icmp eq i8 %42, 0
  br i1 %tobool67.not, label %if.then82, label %if.then90

if.else70:                                        ; preds = %if.then60
  %skip_flag71 = getelementptr inbounds i8, ptr %topMB.0676, i64 374
  %43 = load i8, ptr %skip_flag71, align 2
  %tobool73.not = icmp eq i8 %43, 0
  br i1 %tobool73.not, label %if.end92, label %if.end78

if.end78:                                         ; preds = %if.else70
  %44 = load i8, ptr %skip_flag42, align 2
  %tobool75.not = icmp eq i8 %44, 0
  br i1 %tobool75.not, label %if.then82, label %if.end92

if.then82:                                        ; preds = %if.then64, %if.end78
  store ptr @readFieldModeInfo_CABAC, ptr %reading, align 8
  %45 = load ptr, ptr %readSyntaxElement, align 8
  %call85 = call i32 %45(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  %46 = load i32, ptr %value1, align 4
  store i32 %46, ptr %mb_field15, align 8
  br label %if.end92

if.then90:                                        ; preds = %if.then64
  %call91 = call i32 @check_next_mb_and_get_field_mode_CABAC_b_slice(ptr noundef nonnull %0, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  br label %if.end92

if.end92:                                         ; preds = %if.else70, %if.then82, %if.end78, %if.then90
  %47 = load i32, ptr %mb_field15, align 8
  %tobool94.not = icmp eq i32 %47, 0
  %cond98 = select i1 %tobool4.not, i16 2, i16 4
  %cond101 = select i1 %tobool94.not, i16 0, i16 %cond98
  %list_offset = getelementptr inbounds i8, ptr %currMB, i64 114
  store i16 %cond101, ptr %list_offset, align 2
  call void @CheckAvailabilityOfNeighborsCABAC(ptr noundef nonnull %currMB) #14
  br label %if.end103

if.end103:                                        ; preds = %if.end92, %if.end57
  %48 = load i16, ptr %mb_type, align 8
  %cmp106.not = icmp eq i16 %48, 0
  br i1 %cmp106.not, label %if.end255, label %if.then108

if.then108:                                       ; preds = %if.end103
  store ptr @readMB_typeInfo_CABAC_b_slice, ptr %reading, align 8
  %49 = load ptr, ptr %readSyntaxElement, align 8
  %call111 = call i32 %49(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %26) #14
  %50 = load i32, ptr %value1, align 4
  %conv113 = trunc i32 %50 to i16
  store i16 %conv113, ptr %mb_type, align 8
  %51 = load ptr, ptr %26, align 8
  %ei_flag116 = getelementptr inbounds i8, ptr %51, i64 24
  %52 = load i32, ptr %ei_flag116, align 8
  %tobool117.not = icmp eq i32 %52, 0
  br i1 %tobool117.not, label %if.then118, label %if.end255

if.then118:                                       ; preds = %if.then108
  %ei_flag119 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag119, align 2
  br label %if.end255

if.else122:                                       ; preds = %if.end23
  %cod_counter123 = getelementptr inbounds i8, ptr %0, i64 120
  %53 = load i32, ptr %cod_counter123, align 8
  %cmp124 = icmp eq i32 %53, -1
  br i1 %cmp124, label %if.then126, label %if.end131

if.then126:                                       ; preds = %if.else122
  %readSyntaxElement127 = getelementptr inbounds i8, ptr %26, i64 40
  %54 = load ptr, ptr %readSyntaxElement127, align 8
  %call128 = call i32 %54(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %value1129 = getelementptr inbounds i8, ptr %currSE, i64 4
  %55 = load i32, ptr %value1129, align 4
  store i32 %55, ptr %cod_counter123, align 8
  br label %if.end131

if.end131:                                        ; preds = %if.then126, %if.else122
  %56 = phi i32 [ %55, %if.then126 ], [ %53, %if.else122 ]
  %cmp133 = icmp eq i32 %56, 0
  br i1 %cmp133, label %if.then135, label %if.else175

if.then135:                                       ; preds = %if.end131
  %57 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool137.not = icmp ne i32 %57, 0
  %tobool146.not = icmp ne i32 %prevMbSkipped.0678, 0
  %or.cond659.not = select i1 %tobool4.not, i1 true, i1 %tobool146.not
  %or.cond692 = select i1 %tobool137.not, i1 %or.cond659.not, i1 false
  br i1 %or.cond692, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.then135
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %58 = load ptr, ptr %26, align 8
  %call149 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %58) #14
  %value1150 = getelementptr inbounds i8, ptr %currSE, i64 4
  %59 = load i32, ptr %value1150, align 4
  store i32 %59, ptr %mb_field15, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.then135
  %readSyntaxElement153 = getelementptr inbounds i8, ptr %26, i64 40
  %60 = load ptr, ptr %readSyntaxElement153, align 8
  %call154 = call i32 %60(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %26) #14
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %61 = load i32, ptr %slice_type, align 4
  switch i32 %61, label %if.end152.if.end163_crit_edge [
    i32 0, label %if.then161
    i32 3, label %if.then161
  ]

if.end152.if.end163_crit_edge:                    ; preds = %if.end152
  %value1164.phi.trans.insert = getelementptr inbounds i8, ptr %currSE, i64 4
  %.pre700 = load i32, ptr %value1164.phi.trans.insert, align 4
  br label %if.end163

if.then161:                                       ; preds = %if.end152, %if.end152
  %value1162 = getelementptr inbounds i8, ptr %currSE, i64 4
  %62 = load i32, ptr %value1162, align 4
  %inc = add nsw i32 %62, 1
  store i32 %inc, ptr %value1162, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.end152.if.end163_crit_edge, %if.then161
  %63 = phi i32 [ %.pre700, %if.end152.if.end163_crit_edge ], [ %inc, %if.then161 ]
  %conv165 = trunc i32 %63 to i16
  %mb_type166 = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 %conv165, ptr %mb_type166, align 8
  %64 = load ptr, ptr %26, align 8
  %ei_flag168 = getelementptr inbounds i8, ptr %64, i64 24
  %65 = load i32, ptr %ei_flag168, align 8
  %tobool169.not = icmp eq i32 %65, 0
  br i1 %tobool169.not, label %if.then170, label %if.end172

if.then170:                                       ; preds = %if.end163
  %ei_flag171 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag171, align 2
  br label %if.end172

if.end172:                                        ; preds = %if.then170, %if.end163
  %66 = load i32, ptr %cod_counter123, align 8
  %dec = add nsw i32 %66, -1
  store i32 %dec, ptr %cod_counter123, align 8
  %skip_flag174 = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 0, ptr %skip_flag174, align 2
  br label %if.end243

if.else175:                                       ; preds = %if.end131
  %dec177 = add nsw i32 %56, -1
  store i32 %dec177, ptr %cod_counter123, align 8
  %mb_type178 = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 0, ptr %mb_type178, align 8
  %ei_flag179 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag179, align 2
  %skip_flag180 = getelementptr inbounds i8, ptr %currMB, i64 374
  store i8 1, ptr %skip_flag180, align 2
  %67 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool182.not = icmp eq i32 %67, 0
  br i1 %tobool182.not, label %if.end243, label %if.then183

if.then183:                                       ; preds = %if.else175
  %68 = load i32, ptr %cod_counter123, align 8
  %69 = or i32 %68, %and
  %brmerge.not = icmp eq i32 %69, 0
  br i1 %brmerge.not, label %if.then191, label %if.else199

if.then191:                                       ; preds = %if.then183
  %len192 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len192, align 4
  %70 = load ptr, ptr %26, align 8
  %call194 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %70) #14
  %71 = load ptr, ptr %26, align 8
  %frame_bitoffset = getelementptr inbounds i8, ptr %71, i64 8
  %72 = load i32, ptr %frame_bitoffset, align 8
  %dec196 = add nsw i32 %72, -1
  store i32 %dec196, ptr %frame_bitoffset, align 8
  %value1197 = getelementptr inbounds i8, ptr %currSE, i64 4
  %73 = load i32, ptr %value1197, align 4
  store i32 %73, ptr %mb_field15, align 8
  br label %if.end243

if.else199:                                       ; preds = %if.then183
  %cmp201 = icmp sgt i32 %68, 0
  %brmerge662.not = and i1 %tobool4.not, %cmp201
  br i1 %brmerge662.not, label %if.then207, label %if.end243

if.then207:                                       ; preds = %if.else199
  %sub208 = add nsw i32 %2, -2
  %call209 = call i32 @mb_is_available(i32 noundef %sub208, ptr noundef nonnull %currMB) #14
  %tobool210.not = icmp eq i32 %call209, 0
  %PicWidthInMbs222.phi.trans.insert = getelementptr inbounds i8, ptr %1, i64 848996
  %.pre699 = load i32, ptr %PicWidthInMbs222.phi.trans.insert, align 4
  %.pre702 = shl i32 %.pre699, 1
  br i1 %tobool210.not, label %if.else221, label %land.lhs.true211

land.lhs.true211:                                 ; preds = %if.then207
  %rem = urem i32 %2, %.pre702
  %cmp212.not = icmp eq i32 %rem, 0
  br i1 %cmp212.not, label %if.else221, label %if.then214

if.then214:                                       ; preds = %land.lhs.true211
  %mb_data215 = getelementptr inbounds i8, ptr %1, i64 848888
  %74 = load ptr, ptr %mb_data215, align 8
  %idxprom217 = sext i32 %sub208 to i64
  %mb_field219 = getelementptr inbounds %struct.macroblock, ptr %74, i64 %idxprom217, i32 45
  %75 = load i32, ptr %mb_field219, align 8
  store i32 %75, ptr %mb_field15, align 8
  br label %if.end243

if.else221:                                       ; preds = %if.then207, %land.lhs.true211
  %sub224 = sub i32 %2, %.pre702
  %call225 = call i32 @mb_is_available(i32 noundef %sub224, ptr noundef nonnull %currMB) #14
  %tobool226.not = icmp eq i32 %call225, 0
  br i1 %tobool226.not, label %if.else236, label %if.then227

if.then227:                                       ; preds = %if.else221
  %PicWidthInMbs222 = getelementptr inbounds i8, ptr %1, i64 848996
  %mb_data228 = getelementptr inbounds i8, ptr %1, i64 848888
  %76 = load ptr, ptr %mb_data228, align 8
  %77 = load i32, ptr %PicWidthInMbs222, align 4
  %mul230 = shl i32 %77, 1
  %sub231 = sub i32 %2, %mul230
  %idxprom232 = zext i32 %sub231 to i64
  %mb_field234 = getelementptr inbounds %struct.macroblock, ptr %76, i64 %idxprom232, i32 45
  %78 = load i32, ptr %mb_field234, align 8
  store i32 %78, ptr %mb_field15, align 8
  br label %if.end243

if.else236:                                       ; preds = %if.else221
  store i32 0, ptr %mb_field15, align 8
  br label %if.end243

if.end243:                                        ; preds = %if.else199, %if.else175, %if.then227, %if.else236, %if.then214, %if.then191, %if.end172
  %79 = load i32, ptr %mb_field15, align 8
  %tobool245.not = icmp eq i32 %79, 0
  %cond249 = select i1 %tobool4.not, i16 2, i16 4
  %cond252 = select i1 %tobool245.not, i16 0, i16 %cond249
  %list_offset254 = getelementptr inbounds i8, ptr %currMB, i64 114
  store i16 %cond252, ptr %list_offset254, align 2
  br label %if.end255

if.end255:                                        ; preds = %if.end103, %if.then118, %if.then108, %if.end243
  %80 = load i32, ptr %mb_field15, align 8
  %conv257 = trunc i32 %80 to i8
  %81 = load ptr, ptr %motion3, align 8
  %idxprom259 = sext i32 %2 to i64
  %arrayidx260 = getelementptr inbounds i8, ptr %81, i64 %idxprom259
  store i8 %conv257, ptr %arrayidx260, align 1
  %82 = load i32, ptr %mb_field15, align 8
  %tobool262.not = icmp eq i32 %82, 0
  %block_y274 = getelementptr inbounds i8, ptr %currMB, i64 36
  %83 = load i32, ptr %block_y274, align 4
  br i1 %tobool262.not, label %cond.end275, label %cond.true263

cond.true263:                                     ; preds = %if.end255
  br i1 %tobool4.not, label %cond.false268, label %cond.true266

cond.true266:                                     ; preds = %cond.true263
  %sub267 = add nsw i32 %83, -4
  %shr = ashr i32 %sub267, 1
  br label %cond.end275

cond.false268:                                    ; preds = %cond.true263
  %shr270 = ashr i32 %83, 1
  br label %cond.end275

cond.end275:                                      ; preds = %if.end255, %cond.true266, %cond.false268
  %cond276 = phi i32 [ %shr, %cond.true266 ], [ %shr270, %cond.false268 ], [ %83, %if.end255 ]
  %block_y_aff = getelementptr inbounds i8, ptr %currMB, i64 40
  store i32 %cond276, ptr %block_y_aff, align 8
  %siblock = getelementptr inbounds i8, ptr %0, i64 13528
  %84 = load ptr, ptr %siblock, align 8
  %mb = getelementptr inbounds i8, ptr %currMB, i64 28
  %y = getelementptr inbounds i8, ptr %currMB, i64 30
  %85 = load i16, ptr %y, align 2
  %idxprom277 = sext i16 %85 to i64
  %arrayidx278 = getelementptr inbounds ptr, ptr %84, i64 %idxprom277
  %86 = load ptr, ptr %arrayidx278, align 8
  %87 = load i16, ptr %mb, align 4
  %idxprom280 = sext i16 %87 to i64
  %arrayidx281 = getelementptr inbounds i32, ptr %86, i64 %idxprom280
  store i32 0, ptr %arrayidx281, align 4
  %interpret_mb_mode = getelementptr inbounds i8, ptr %0, i64 13456
  %88 = load ptr, ptr %interpret_mb_mode, align 8
  call void %88(ptr noundef nonnull %currMB) #14
  %89 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool283.not = icmp eq i32 %89, 0
  br i1 %tobool283.not, label %if.end293, label %if.then284

if.then284:                                       ; preds = %cond.end275
  %90 = load i32, ptr %mb_field15, align 8
  %tobool286.not = icmp eq i32 %90, 0
  br i1 %tobool286.not, label %if.end293, label %if.then287

if.then287:                                       ; preds = %if.then284
  %num_ref_idx_active = getelementptr inbounds i8, ptr %0, i64 136
  %91 = load <2 x i32>, ptr %num_ref_idx_active, align 8
  %92 = shl <2 x i32> %91, <i32 1, i32 1>
  store <2 x i32> %92, ptr %num_ref_idx_active, align 8
  br label %if.end293

if.end293:                                        ; preds = %if.then284, %if.then287, %cond.end275
  %mb_type294 = getelementptr inbounds i8, ptr %currMB, i64 152
  %93 = load i16, ptr %mb_type294, align 8
  switch i16 %93, label %land.end349 [
    i16 8, label %if.then298
    i16 0, label %land.rhs343
  ]

if.then298:                                       ; preds = %if.end293
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  store i32 1, ptr %NoMbPartLessThan8x8Flag, align 8
  store i32 2, ptr %currSE, align 8
  %94 = load ptr, ptr %partArr, align 8
  %active_pps304 = getelementptr inbounds i8, ptr %0, i64 16
  %95 = load ptr, ptr %active_pps304, align 8
  %entropy_coding_mode_flag305 = getelementptr inbounds i8, ptr %95, i64 12
  %96 = load i32, ptr %entropy_coding_mode_flag305, align 4
  %cmp306 = icmp eq i32 %96, 0
  br i1 %cmp306, label %if.end316, label %lor.lhs.false308

lor.lhs.false308:                                 ; preds = %if.then298
  %97 = load ptr, ptr %94, align 8
  %ei_flag310 = getelementptr inbounds i8, ptr %97, i64 24
  %98 = load i32, ptr %ei_flag310, align 8
  %tobool311.not = icmp eq i32 %98, 0
  %spec.select706 = select i1 %tobool311.not, i64 40, i64 32
  %spec.select707 = select i1 %tobool311.not, ptr @readB8_typeInfo_CABAC_b_slice, ptr @linfo_ue
  br label %if.end316

if.end316:                                        ; preds = %lor.lhs.false308, %if.then298
  %.sink705 = phi i64 [ 32, %if.then298 ], [ %spec.select706, %lor.lhs.false308 ]
  %readB8_typeInfo_CABAC_b_slice.sink = phi ptr [ @linfo_ue, %if.then298 ], [ %spec.select707, %lor.lhs.false308 ]
  %reading315 = getelementptr inbounds i8, ptr %currSE, i64 %.sink705
  store ptr %readB8_typeInfo_CABAC_b_slice.sink, ptr %reading315, align 8
  %readSyntaxElement319 = getelementptr inbounds i8, ptr %94, i64 40
  %value1321 = getelementptr inbounds i8, ptr %currSE, i64 4
  %b8mode.i = getelementptr inbounds i8, ptr %currMB, i64 364
  %b8pdir.i = getelementptr inbounds i8, ptr %currMB, i64 368
  %active_sps = getelementptr inbounds i8, ptr %0, i64 24
  %99 = load ptr, ptr %readSyntaxElement319, align 8
  %call320 = call i32 %99(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %94) #14
  %100 = load i32, ptr %value1321, align 4
  %101 = load ptr, ptr %currMB, align 8
  %slice_type.i = getelementptr inbounds i8, ptr %101, i64 164
  %102 = load i32, ptr %slice_type.i, align 4
  %cmp.i666 = icmp eq i32 %102, 1
  %idxprom.i = sext i32 %100 to i64
  %arrayidx.i = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i
  %arrayidx4.i = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i
  %arrayidx8.i = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i
  %arrayidx13.i = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i
  %.sink.in = select i1 %cmp.i666, ptr %arrayidx.i, ptr %arrayidx8.i
  %arrayidx13.sink.i = select i1 %cmp.i666, ptr %arrayidx4.i, ptr %arrayidx13.i
  %.sink = load i8, ptr %.sink.in, align 1
  %.fr = freeze i8 %.sink
  store i8 %.fr, ptr %b8mode.i, align 1
  %103 = load i8, ptr %arrayidx13.sink.i, align 1
  store i8 %103, ptr %b8pdir.i, align 1
  %cmp325 = icmp eq i8 %.fr, 0
  br i1 %cmp325, label %land.lhs.true327, label %lor.end

land.lhs.true327:                                 ; preds = %if.end316
  %104 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %104, i64 3144
  %105 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool328.not = icmp eq i32 %105, 0
  br i1 %tobool328.not, label %lor.end.thread686, label %lor.end.thread

lor.end.thread:                                   ; preds = %land.lhs.true327
  %106 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %107 = and i32 %106, 1
  br label %lor.end.thread686

lor.end:                                          ; preds = %if.end316
  %cmp333 = icmp eq i8 %.fr, 4
  %108 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %109 = and i32 %108, 1
  %spec.select = select i1 %cmp333, i32 %109, i32 0
  br label %lor.end.thread686

lor.end.thread686:                                ; preds = %lor.end, %land.lhs.true327, %lor.end.thread
  %110 = phi i32 [ %107, %lor.end.thread ], [ 0, %land.lhs.true327 ], [ %spec.select, %lor.end ]
  store i32 %110, ptr %NoMbPartLessThan8x8Flag, align 8
  %111 = load ptr, ptr %readSyntaxElement319, align 8
  %call320.1 = call i32 %111(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %94) #14
  %112 = load i32, ptr %value1321, align 4
  %113 = load ptr, ptr %currMB, align 8
  %slice_type.i.1 = getelementptr inbounds i8, ptr %113, i64 164
  %114 = load i32, ptr %slice_type.i.1, align 4
  %cmp.i666.1 = icmp eq i32 %114, 1
  %idxprom.i.1 = sext i32 %112 to i64
  %arrayidx2.i.1 = getelementptr inbounds i8, ptr %currMB, i64 365
  %arrayidx.i.1 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.1
  %arrayidx4.i.1 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.1
  %arrayidx8.i.1 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.1
  %arrayidx13.i.1 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.1
  %.sink695.in = select i1 %cmp.i666.1, ptr %arrayidx.i.1, ptr %arrayidx8.i.1
  %arrayidx13.sink.i.1 = select i1 %cmp.i666.1, ptr %arrayidx4.i.1, ptr %arrayidx13.i.1
  %.sink695 = load i8, ptr %.sink695.in, align 1
  %.fr.1 = freeze i8 %.sink695
  store i8 %.fr.1, ptr %arrayidx2.i.1, align 1
  %arrayidx6.i.1 = getelementptr inbounds i8, ptr %currMB, i64 369
  %115 = load i8, ptr %arrayidx13.sink.i.1, align 1
  store i8 %115, ptr %arrayidx6.i.1, align 1
  %cmp325.1 = icmp eq i8 %.fr.1, 0
  br i1 %cmp325.1, label %land.lhs.true327.1, label %lor.end.1

lor.end.1:                                        ; preds = %lor.end.thread686
  %cmp333.1 = icmp eq i8 %.fr.1, 4
  %116 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %117 = and i32 %116, 1
  %spec.select.1 = select i1 %cmp333.1, i32 %117, i32 0
  br label %lor.end.thread686.1

land.lhs.true327.1:                               ; preds = %lor.end.thread686
  %118 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.1 = getelementptr inbounds i8, ptr %118, i64 3144
  %119 = load i32, ptr %direct_8x8_inference_flag.1, align 4
  %tobool328.not.1 = icmp eq i32 %119, 0
  br i1 %tobool328.not.1, label %lor.end.thread686.1, label %lor.end.thread.1

lor.end.thread.1:                                 ; preds = %land.lhs.true327.1
  %120 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %121 = and i32 %120, 1
  br label %lor.end.thread686.1

lor.end.thread686.1:                              ; preds = %lor.end.thread.1, %land.lhs.true327.1, %lor.end.1
  %122 = phi i32 [ %121, %lor.end.thread.1 ], [ 0, %land.lhs.true327.1 ], [ %spec.select.1, %lor.end.1 ]
  store i32 %122, ptr %NoMbPartLessThan8x8Flag, align 8
  %123 = load ptr, ptr %readSyntaxElement319, align 8
  %call320.2 = call i32 %123(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %94) #14
  %124 = load i32, ptr %value1321, align 4
  %125 = load ptr, ptr %currMB, align 8
  %slice_type.i.2 = getelementptr inbounds i8, ptr %125, i64 164
  %126 = load i32, ptr %slice_type.i.2, align 4
  %cmp.i666.2 = icmp eq i32 %126, 1
  %idxprom.i.2 = sext i32 %124 to i64
  %arrayidx2.i.2 = getelementptr inbounds i8, ptr %currMB, i64 366
  %arrayidx.i.2 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.2
  %arrayidx4.i.2 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.2
  %arrayidx8.i.2 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.2
  %arrayidx13.i.2 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.2
  %.sink696.in = select i1 %cmp.i666.2, ptr %arrayidx.i.2, ptr %arrayidx8.i.2
  %arrayidx13.sink.i.2 = select i1 %cmp.i666.2, ptr %arrayidx4.i.2, ptr %arrayidx13.i.2
  %.sink696 = load i8, ptr %.sink696.in, align 1
  %.fr.2 = freeze i8 %.sink696
  store i8 %.fr.2, ptr %arrayidx2.i.2, align 1
  %arrayidx6.i.2 = getelementptr inbounds i8, ptr %currMB, i64 370
  %127 = load i8, ptr %arrayidx13.sink.i.2, align 1
  store i8 %127, ptr %arrayidx6.i.2, align 1
  %cmp325.2 = icmp eq i8 %.fr.2, 0
  br i1 %cmp325.2, label %land.lhs.true327.2, label %lor.end.2

lor.end.2:                                        ; preds = %lor.end.thread686.1
  %cmp333.2 = icmp eq i8 %.fr.2, 4
  %128 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %129 = and i32 %128, 1
  %spec.select.2 = select i1 %cmp333.2, i32 %129, i32 0
  br label %lor.end.thread686.2

land.lhs.true327.2:                               ; preds = %lor.end.thread686.1
  %130 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.2 = getelementptr inbounds i8, ptr %130, i64 3144
  %131 = load i32, ptr %direct_8x8_inference_flag.2, align 4
  %tobool328.not.2 = icmp eq i32 %131, 0
  br i1 %tobool328.not.2, label %lor.end.thread686.2, label %lor.end.thread.2

lor.end.thread.2:                                 ; preds = %land.lhs.true327.2
  %132 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %133 = and i32 %132, 1
  br label %lor.end.thread686.2

lor.end.thread686.2:                              ; preds = %lor.end.thread.2, %land.lhs.true327.2, %lor.end.2
  %134 = phi i32 [ %133, %lor.end.thread.2 ], [ 0, %land.lhs.true327.2 ], [ %spec.select.2, %lor.end.2 ]
  store i32 %134, ptr %NoMbPartLessThan8x8Flag, align 8
  %135 = load ptr, ptr %readSyntaxElement319, align 8
  %call320.3 = call i32 %135(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %94) #14
  %136 = load i32, ptr %value1321, align 4
  %137 = load ptr, ptr %currMB, align 8
  %slice_type.i.3 = getelementptr inbounds i8, ptr %137, i64 164
  %138 = load i32, ptr %slice_type.i.3, align 4
  %cmp.i666.3 = icmp eq i32 %138, 1
  %idxprom.i.3 = sext i32 %136 to i64
  %arrayidx2.i.3 = getelementptr inbounds i8, ptr %currMB, i64 367
  %arrayidx.i.3 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom.i.3
  %arrayidx4.i.3 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom.i.3
  %arrayidx8.i.3 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom.i.3
  %arrayidx13.i.3 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom.i.3
  %.sink697.in = select i1 %cmp.i666.3, ptr %arrayidx.i.3, ptr %arrayidx8.i.3
  %arrayidx13.sink.i.3 = select i1 %cmp.i666.3, ptr %arrayidx4.i.3, ptr %arrayidx13.i.3
  %.sink697 = load i8, ptr %.sink697.in, align 1
  %.fr.3 = freeze i8 %.sink697
  store i8 %.fr.3, ptr %arrayidx2.i.3, align 1
  %arrayidx6.i.3 = getelementptr inbounds i8, ptr %currMB, i64 371
  %139 = load i8, ptr %arrayidx13.sink.i.3, align 1
  store i8 %139, ptr %arrayidx6.i.3, align 1
  %cmp325.3 = icmp eq i8 %.fr.3, 0
  br i1 %cmp325.3, label %land.lhs.true327.3, label %lor.end.3

lor.end.3:                                        ; preds = %lor.end.thread686.2
  %cmp333.3 = icmp eq i8 %.fr.3, 4
  %140 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %141 = and i32 %140, 1
  %spec.select.3 = select i1 %cmp333.3, i32 %141, i32 0
  br label %lor.end.thread686.3

land.lhs.true327.3:                               ; preds = %lor.end.thread686.2
  %142 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag.3 = getelementptr inbounds i8, ptr %142, i64 3144
  %143 = load i32, ptr %direct_8x8_inference_flag.3, align 4
  %tobool328.not.3 = icmp eq i32 %143, 0
  br i1 %tobool328.not.3, label %lor.end.thread686.3, label %lor.end.thread.3

lor.end.thread.3:                                 ; preds = %land.lhs.true327.3
  %144 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %145 = and i32 %144, 1
  br label %lor.end.thread686.3

lor.end.thread686.3:                              ; preds = %lor.end.thread.3, %land.lhs.true327.3, %lor.end.3
  %146 = phi i32 [ %145, %lor.end.thread.3 ], [ 0, %land.lhs.true327.3 ], [ %spec.select.3, %lor.end.3 ]
  store i32 %146, ptr %NoMbPartLessThan8x8Flag, align 8
  call fastcc void @init_macroblock(ptr noundef nonnull %currMB)
  %read_motion_info_from_NAL = getelementptr inbounds i8, ptr %0, i64 13440
  %147 = load ptr, ptr %read_motion_info_from_NAL, align 8
  call void %147(ptr noundef nonnull %currMB) #14
  %.pre701 = load i16, ptr %mb_type294, align 8
  br label %if.end353

land.rhs343:                                      ; preds = %if.end293
  %active_sps344 = getelementptr inbounds i8, ptr %0, i64 24
  %148 = load ptr, ptr %active_sps344, align 8
  %direct_8x8_inference_flag345 = getelementptr inbounds i8, ptr %148, i64 3144
  %149 = load i32, ptr %direct_8x8_inference_flag345, align 4
  %tobool346.not = icmp ne i32 %149, 0
  %150 = zext i1 %tobool346.not to i32
  br label %land.end349

land.end349:                                      ; preds = %if.end293, %land.rhs343
  %not. = phi i32 [ %150, %land.rhs343 ], [ 1, %if.end293 ]
  %NoMbPartLessThan8x8Flag352 = getelementptr inbounds i8, ptr %currMB, i64 424
  store i32 %not., ptr %NoMbPartLessThan8x8Flag352, align 8
  br label %if.end353

if.end353:                                        ; preds = %land.end349, %lor.end.thread686.3
  %151 = phi i16 [ %93, %land.end349 ], [ %.pre701, %lor.end.thread686.3 ]
  %cmp356 = icmp eq i16 %151, 9
  br i1 %cmp356, label %land.lhs.true358, label %if.else390

land.lhs.true358:                                 ; preds = %if.end353
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %152 = load i32, ptr %Transform8x8Mode, align 4
  %tobool359.not = icmp eq i32 %152, 0
  br i1 %tobool359.not, label %if.else390, label %if.then360

if.then360:                                       ; preds = %land.lhs.true358
  store i32 0, ptr %currSE, align 8
  %153 = load ptr, ptr %partArr, align 8
  %reading366 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading366, align 8
  %154 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag368 = getelementptr inbounds i8, ptr %154, i64 12
  %155 = load i32, ptr %entropy_coding_mode_flag368, align 4
  %cmp369 = icmp eq i32 %155, 0
  br i1 %cmp369, label %if.then375, label %lor.lhs.false371

lor.lhs.false371:                                 ; preds = %if.then360
  %156 = load ptr, ptr %153, align 8
  %ei_flag373 = getelementptr inbounds i8, ptr %156, i64 24
  %157 = load i32, ptr %ei_flag373, align 8
  %tobool374.not = icmp eq i32 %157, 0
  br i1 %tobool374.not, label %if.else379, label %if.then375

if.then375:                                       ; preds = %lor.lhs.false371, %if.then360
  %len376 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len376, align 4
  %158 = load ptr, ptr %153, align 8
  %call378 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %158) #14
  br label %if.end382

if.else379:                                       ; preds = %lor.lhs.false371
  %readSyntaxElement380 = getelementptr inbounds i8, ptr %153, i64 40
  %159 = load ptr, ptr %readSyntaxElement380, align 8
  %call381 = call i32 %159(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %153) #14
  br label %if.end382

if.end382:                                        ; preds = %if.else379, %if.then375
  %value1383 = getelementptr inbounds i8, ptr %currSE, i64 4
  %160 = load i32, ptr %value1383, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %160, ptr %luma_transform_size_8x8_flag, align 4
  %tobool385.not = icmp eq i32 %160, 0
  br i1 %tobool385.not, label %if.end392, label %if.then386

if.then386:                                       ; preds = %if.end382
  store i16 13, ptr %mb_type294, align 8
  %b8mode388 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 218959117, ptr %b8mode388, align 4
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir, align 8
  br label %if.end392

if.else390:                                       ; preds = %land.lhs.true358, %if.end353
  %luma_transform_size_8x8_flag391 = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 0, ptr %luma_transform_size_8x8_flag391, align 4
  br label %if.end392

if.end392:                                        ; preds = %if.end382, %if.then386, %if.else390
  %161 = load ptr, ptr %active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds i8, ptr %161, i64 2204
  %162 = load i32, ptr %constrained_intra_pred_flag, align 4
  %tobool394.not = icmp eq i32 %162, 0
  br i1 %tobool394.not, label %if.end401, label %land.lhs.true395

land.lhs.true395:                                 ; preds = %if.end392
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %163 = load i32, ptr %is_intra_block, align 8
  %cmp396 = icmp eq i32 %163, 0
  br i1 %cmp396, label %if.then398, label %if.end401

if.then398:                                       ; preds = %land.lhs.true395
  %intra_block = getelementptr inbounds i8, ptr %0, i64 13544
  %164 = load ptr, ptr %intra_block, align 8
  %arrayidx400 = getelementptr inbounds i8, ptr %164, i64 %idxprom259
  store i8 0, ptr %arrayidx400, align 1
  br label %if.end401

if.end401:                                        ; preds = %if.then398, %land.lhs.true395, %if.end392
  %165 = load i16, ptr %mb_type294, align 8
  %cmp404.not = icmp eq i16 %165, 8
  br i1 %cmp404.not, label %if.then430, label %if.end407

if.end407:                                        ; preds = %if.end401
  call fastcc void @init_macroblock(ptr noundef nonnull %currMB)
  %.pr = load i16, ptr %mb_type294, align 8
  switch i16 %.pr, label %if.then430 [
    i16 0, label %land.lhs.true412
    i16 14, label %if.else452
  ]

land.lhs.true412:                                 ; preds = %if.end407
  %cod_counter413 = getelementptr inbounds i8, ptr %0, i64 120
  %166 = load i32, ptr %cod_counter413, align 8
  %cmp414 = icmp sgt i32 %166, -1
  br i1 %cmp414, label %if.then416, label %if.then430

if.then416:                                       ; preds = %land.lhs.true412
  %cbp417 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 0, ptr %cbp417, align 4
  %167 = load ptr, ptr %0, align 8
  %active_pps.i = getelementptr inbounds i8, ptr %167, i64 8
  %168 = load ptr, ptr %active_pps.i, align 8
  %entropy_coding_mode_flag.i = getelementptr inbounds i8, ptr %168, i64 12
  %169 = load i32, ptr %entropy_coding_mode_flag.i, align 4
  %cmp.i669 = icmp eq i32 %169, 0
  br i1 %cmp.i669, label %if.then.i670, label %reset_coeffs.exit

if.then.i670:                                     ; preds = %if.then416
  %nz_coeff.i = getelementptr inbounds i8, ptr %167, i64 848832
  %170 = load ptr, ptr %nz_coeff.i, align 8
  %current_mb_nr.i = getelementptr inbounds i8, ptr %0, i64 108
  %171 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i671 = zext i32 %171 to i64
  %arrayidx.i672 = getelementptr inbounds ptr, ptr %170, i64 %idxprom.i671
  %172 = load ptr, ptr %arrayidx.i672, align 8
  %173 = load ptr, ptr %172, align 8
  %174 = load ptr, ptr %173, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %174, i8 0, i64 48, i1 false)
  br label %reset_coeffs.exit

reset_coeffs.exit:                                ; preds = %if.then416, %if.then.i670
  %175 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag419 = getelementptr inbounds i8, ptr %175, i64 12
  %176 = load i32, ptr %entropy_coding_mode_flag419, align 4
  %cmp420 = icmp eq i32 %176, 1
  br i1 %cmp420, label %if.then422, label %if.end465

if.then422:                                       ; preds = %reset_coeffs.exit
  store i32 -1, ptr %cod_counter413, align 8
  br label %if.end465

if.then430:                                       ; preds = %if.end407, %if.end401, %land.lhs.true412
  %is_intra_block431 = getelementptr inbounds i8, ptr %currMB, i64 96
  %177 = load i32, ptr %is_intra_block431, align 8
  %cmp432 = icmp eq i32 %177, 1
  br i1 %cmp432, label %if.then434, label %if.end435

if.then434:                                       ; preds = %if.then430
  call fastcc void @read_ipred_modes(ptr noundef nonnull %currMB)
  %.pr691 = load i32, ptr %is_intra_block431, align 8
  br label %if.end435

if.end435:                                        ; preds = %if.then434, %if.then430
  %178 = phi i32 [ %.pr691, %if.then434 ], [ %177, %if.then430 ]
  %cmp437 = icmp eq i32 %178, 0
  br i1 %cmp437, label %land.lhs.true439, label %if.end451

land.lhs.true439:                                 ; preds = %if.end435
  %179 = load i16, ptr %mb_type294, align 8
  switch i16 %179, label %if.then449 [
    i16 0, label %if.end451
    i16 8, label %if.end451
  ]

if.then449:                                       ; preds = %land.lhs.true439
  %read_motion_info_from_NAL450 = getelementptr inbounds i8, ptr %0, i64 13440
  %180 = load ptr, ptr %read_motion_info_from_NAL450, align 8
  call void %180(ptr noundef nonnull %currMB) #14
  br label %if.end451

if.end451:                                        ; preds = %land.lhs.true439, %land.lhs.true439, %if.then449, %if.end435
  %read_CBP_and_coeffs_from_NAL = getelementptr inbounds i8, ptr %0, i64 13408
  %181 = load ptr, ptr %read_CBP_and_coeffs_from_NAL, align 8
  call void %181(ptr noundef nonnull %currMB) #14
  br label %if.end465

if.else452:                                       ; preds = %if.end407
  %182 = load i32, ptr %dp_mode, align 8
  %tobool454.not = icmp eq i32 %182, 0
  br i1 %tobool454.not, label %if.else458, label %land.lhs.true455

land.lhs.true455:                                 ; preds = %if.else452
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %183 = load i32, ptr %dpB_NotPresent, align 8
  %tobool456.not = icmp eq i32 %183, 0
  br i1 %tobool456.not, label %if.else458, label %if.then457

if.then457:                                       ; preds = %land.lhs.true455
  %currMB.val = load ptr, ptr %currMB, align 8
  %currMB.val664 = load ptr, ptr %p_Vid1, align 8
  call fastcc void @concealIPCMcoeffs(ptr %currMB.val, ptr %currMB.val664)
  br label %if.end465

if.else458:                                       ; preds = %land.lhs.true455, %if.else452
  %184 = load ptr, ptr %partArr, align 8
  %arrayidx460 = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom, i64 7
  %185 = load i8, ptr %arrayidx460, align 1
  %idxprom461 = zext i8 %185 to i64
  %arrayidx462 = getelementptr inbounds %struct.datapartition, ptr %184, i64 %idxprom461
  call fastcc void @read_IPCM_coeffs_from_NAL(ptr noundef nonnull %0, ptr noundef %arrayidx462)
  br label %if.end465

if.end465:                                        ; preds = %if.end451, %if.else458, %if.then457, %reset_coeffs.exit, %if.then422
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal noundef i32 @decode_one_component_b_slice(ptr noundef %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #3 {
entry:
  %ipmode_DPCM = getelementptr inbounds i8, ptr %currMB, i64 372
  store i8 9, ptr %ipmode_DPCM, align 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.else66 [
    i16 14, label %if.then
    i16 10, label %if.then6
    i16 9, label %if.then13
    i16 13, label %if.then20
    i16 1, label %if.then27
    i16 2, label %if.then34
    i16 3, label %if.then41
    i16 0, label %if.then48
  ]

if.then:                                          ; preds = %entry
  %call = tail call i32 @mb_pred_ipcm(ptr noundef nonnull %currMB) #14
  br label %if.end75

if.then6:                                         ; preds = %entry
  %call7 = tail call i32 @mb_pred_intra16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end75

if.then13:                                        ; preds = %entry
  %call14 = tail call i32 @mb_pred_intra4x4(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.then20:                                        ; preds = %entry
  %call21 = tail call i32 @mb_pred_intra8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.then27:                                        ; preds = %entry
  %call28 = tail call i32 @mb_pred_p_inter16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end75

if.then34:                                        ; preds = %entry
  %call35 = tail call i32 @mb_pred_p_inter16x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end75

if.then41:                                        ; preds = %entry
  %call42 = tail call i32 @mb_pred_p_inter8x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end75

if.then48:                                        ; preds = %entry
  %1 = load ptr, ptr %currMB, align 8
  %direct_spatial_mv_pred_flag = getelementptr inbounds i8, ptr %1, i64 132
  %2 = load i32, ptr %direct_spatial_mv_pred_flag, align 4
  %cmp49 = icmp eq i32 %2, 0
  %active_sps = getelementptr inbounds i8, ptr %1, i64 24
  %3 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %3, i64 3144
  %4 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool.not = icmp eq i32 %4, 0
  br i1 %cmp49, label %if.then51, label %if.else56

if.then51:                                        ; preds = %if.then48
  br i1 %tobool.not, label %if.else54, label %if.then52

if.then52:                                        ; preds = %if.then51
  %call53 = tail call i32 @mb_pred_b_d8x8temporal(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.else54:                                        ; preds = %if.then51
  %call55 = tail call i32 @mb_pred_b_d4x4temporal(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.else56:                                        ; preds = %if.then48
  br i1 %tobool.not, label %if.else62, label %if.then60

if.then60:                                        ; preds = %if.else56
  %call61 = tail call i32 @mb_pred_b_d8x8spatial(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.else62:                                        ; preds = %if.else56
  %call63 = tail call i32 @mb_pred_b_d4x4spatial(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end75

if.else66:                                        ; preds = %entry
  %call67 = tail call i32 @mb_pred_b_inter8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end75

if.end75:                                         ; preds = %if.else54, %if.then52, %if.else62, %if.then60, %if.then6, %if.then20, %if.then34, %if.else66, %if.then41, %if.then27, %if.then13, %if.then
  ret i32 1
}

declare void @update_direct_types(ptr noundef) local_unnamed_addr #5

declare void @init_lists_b_slice_mvc(ptr noundef) #5

declare void @init_lists_b_slice(ptr noundef) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal void @interpret_mb_mode_I(ptr nocapture noundef %currMB) #7 {
entry:
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.else14 [
    i16 0, label %if.then
    i16 25, label %if.then7
  ]

if.then:                                          ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block, align 8
  store i16 9, ptr %mb_type, align 8
  br label %if.end27

if.then7:                                         ; preds = %entry
  %is_intra_block8 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block8, align 8
  store i16 14, ptr %mb_type, align 8
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 -1, ptr %cbp, align 4
  %i16mode = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 0, ptr %i16mode, align 8
  br label %if.end27

if.else14:                                        ; preds = %entry
  %conv = sext i16 %0 to i32
  %is_intra_block15 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block15, align 8
  store i16 10, ptr %mb_type, align 8
  %sub = add nsw i32 %conv, -1
  %shr = ashr i32 %sub, 2
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds [6 x i16], ptr @interpret_mb_mode_I.ICBPTAB, i64 0, i64 %idxprom
  %1 = load i16, ptr %arrayidx, align 2
  %conv18 = sext i16 %1 to i32
  %cbp19 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %conv18, ptr %cbp19, align 4
  %and = and i32 %sub, 3
  %i16mode22 = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 %and, ptr %i16mode22, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.then7, %if.else14, %if.then
  %.sink = phi i32 [ 0, %if.then7 ], [ 0, %if.else14 ], [ 185273099, %if.then ]
  %b8mode10 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 %.sink, ptr %b8mode10, align 4
  %b8pdir12 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir12, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_one_macroblock_i_slice(ptr noundef %currMB) #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %2 = load i32, ptr %mbAddrX, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %3 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %3 to i64
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %4 = load ptr, ptr %dec_picture2, align 8
  %motion3 = getelementptr inbounds i8, ptr %4, i64 184
  %and = and i32 %2, 1
  %cmp = icmp ne i32 %and, 0
  br i1 %cmp, label %cond.false, label %cond.end

cond.false:                                       ; preds = %entry
  %mb_data = getelementptr inbounds i8, ptr %0, i64 13512
  %5 = load ptr, ptr %mb_data, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr %struct.macroblock, ptr %5, i64 %6
  %mb_field = getelementptr i8, ptr %7, i64 -96
  %8 = load i32, ptr %mb_field, align 8
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi i32 [ %8, %cond.false ], [ 0, %entry ]
  %mb_field6 = getelementptr inbounds i8, ptr %currMB, i64 384
  store i32 %cond, ptr %mb_field6, align 8
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %9 = load i32, ptr %qp, align 4
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %9, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %1, i64 849052
  %10 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %10, %9
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %11 = load ptr, ptr %dec_picture2, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %1, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %11, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %12 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %12
  %13 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %13, %9
  %cond.i.i.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %cond.end
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %14 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %14 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %cond.end
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %cond.end ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %15 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %15, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %16 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %16
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %11, i64 304
  %17 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %17, %9
  %cond.i.i.1.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %18 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %18 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %19 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %19, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i = icmp eq i32 %add.i, 0
  br i1 %cmp.i, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %1, i64 849092
  %20 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %20, 1
  %21 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %21, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  store i32 2, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %22 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %23 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %23, i64 12
  %24 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp10 = icmp eq i32 %24, 0
  br i1 %cmp10, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %update_qp.exit
  %25 = load ptr, ptr %22, align 8
  %ei_flag = getelementptr inbounds i8, ptr %25, i64 24
  %26 = load i32, ptr %ei_flag, align 8
  %tobool.not = icmp eq i32 %26, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %update_qp.exit
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr @linfo_ue, ptr %mapping, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %mb_aff_frame_flag = getelementptr inbounds i8, ptr %0, i64 128
  %27 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool11.not = icmp eq i32 %27, 0
  %brmerge = or i1 %cmp, %tobool11.not
  br i1 %brmerge, label %if.end27, label %if.then14

if.then14:                                        ; preds = %if.end
  %28 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp17 = icmp eq i32 %28, 0
  br i1 %cmp17, label %if.then22, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.then14
  %29 = load ptr, ptr %22, align 8
  %ei_flag20 = getelementptr inbounds i8, ptr %29, i64 24
  %30 = load i32, ptr %ei_flag20, align 8
  %tobool21.not = icmp eq i32 %30, 0
  br i1 %tobool21.not, label %if.else, label %if.then22

if.then22:                                        ; preds = %lor.lhs.false18, %if.then14
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %31 = load ptr, ptr %22, align 8
  %call = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %31) #14
  br label %if.end25

if.else:                                          ; preds = %lor.lhs.false18
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readFieldModeInfo_CABAC, ptr %reading, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %22, i64 40
  %32 = load ptr, ptr %readSyntaxElement, align 8
  %call24 = call i32 %32(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %22) #14
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then22
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %33 = load i32, ptr %value1, align 4
  store i32 %33, ptr %mb_field6, align 8
  %.pre = load ptr, ptr %active_pps, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.end25
  %34 = phi ptr [ %23, %if.end ], [ %.pre, %if.end25 ]
  %entropy_coding_mode_flag29 = getelementptr inbounds i8, ptr %34, i64 12
  %35 = load i32, ptr %entropy_coding_mode_flag29, align 4
  %cmp30 = icmp eq i32 %35, 1
  br i1 %cmp30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end27
  call void @CheckAvailabilityOfNeighborsCABAC(ptr noundef nonnull %currMB) #14
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end27
  %reading33 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_typeInfo_CABAC_i_slice, ptr %reading33, align 8
  %readSyntaxElement34 = getelementptr inbounds i8, ptr %22, i64 40
  %36 = load ptr, ptr %readSyntaxElement34, align 8
  %call35 = call i32 %36(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %22) #14
  %value136 = getelementptr inbounds i8, ptr %currSE, i64 4
  %37 = load i32, ptr %value136, align 4
  %conv = trunc i32 %37 to i16
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  store i16 %conv, ptr %mb_type, align 8
  %38 = load ptr, ptr %22, align 8
  %ei_flag38 = getelementptr inbounds i8, ptr %38, i64 24
  %39 = load i32, ptr %ei_flag38, align 8
  %tobool39.not = icmp eq i32 %39, 0
  br i1 %tobool39.not, label %if.then40, label %if.end42

if.then40:                                        ; preds = %if.end32
  %ei_flag41 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 0, ptr %ei_flag41, align 2
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %if.end32
  %40 = load i32, ptr %mb_field6, align 8
  %conv44 = trunc i32 %40 to i8
  %41 = load ptr, ptr %motion3, align 8
  %idxprom46 = sext i32 %2 to i64
  %arrayidx47 = getelementptr inbounds i8, ptr %41, i64 %idxprom46
  store i8 %conv44, ptr %arrayidx47, align 1
  %42 = load i32, ptr %mb_aff_frame_flag, align 8
  %tobool49.not = icmp eq i32 %42, 0
  br i1 %tobool49.not, label %cond.false63, label %land.lhs.true50

land.lhs.true50:                                  ; preds = %if.end42
  %43 = load i32, ptr %mb_field6, align 8
  %tobool52.not = icmp eq i32 %43, 0
  br i1 %tobool52.not, label %cond.false63, label %cond.true53

cond.true53:                                      ; preds = %land.lhs.true50
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %44 = load i32, ptr %block_y, align 4
  br i1 %cmp, label %cond.true56, label %cond.false58

cond.true56:                                      ; preds = %cond.true53
  %sub57 = add nsw i32 %44, -4
  %shr = ashr i32 %sub57, 1
  br label %cond.end65

cond.false58:                                     ; preds = %cond.true53
  %shr60 = ashr i32 %44, 1
  br label %cond.end65

cond.false63:                                     ; preds = %land.lhs.true50, %if.end42
  %block_y64 = getelementptr inbounds i8, ptr %currMB, i64 36
  %45 = load i32, ptr %block_y64, align 4
  br label %cond.end65

cond.end65:                                       ; preds = %cond.true56, %cond.false58, %cond.false63
  %cond66 = phi i32 [ %45, %cond.false63 ], [ %shr, %cond.true56 ], [ %shr60, %cond.false58 ]
  %block_y_aff = getelementptr inbounds i8, ptr %currMB, i64 40
  store i32 %cond66, ptr %block_y_aff, align 8
  %siblock = getelementptr inbounds i8, ptr %0, i64 13528
  %46 = load ptr, ptr %siblock, align 8
  %mb = getelementptr inbounds i8, ptr %currMB, i64 28
  %y = getelementptr inbounds i8, ptr %currMB, i64 30
  %47 = load i16, ptr %y, align 2
  %idxprom67 = sext i16 %47 to i64
  %arrayidx68 = getelementptr inbounds ptr, ptr %46, i64 %idxprom67
  %48 = load ptr, ptr %arrayidx68, align 8
  %49 = load i16, ptr %mb, align 4
  %idxprom70 = sext i16 %49 to i64
  %arrayidx71 = getelementptr inbounds i32, ptr %48, i64 %idxprom70
  store i32 0, ptr %arrayidx71, align 4
  %interpret_mb_mode = getelementptr inbounds i8, ptr %0, i64 13456
  %50 = load ptr, ptr %interpret_mb_mode, align 8
  call void %50(ptr noundef nonnull %currMB) #14
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  store i32 1, ptr %NoMbPartLessThan8x8Flag, align 8
  %51 = load i16, ptr %mb_type, align 8
  %cmp74 = icmp eq i16 %51, 9
  br i1 %cmp74, label %land.lhs.true76, label %if.else107

land.lhs.true76:                                  ; preds = %cond.end65
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %52 = load i32, ptr %Transform8x8Mode, align 4
  %tobool77.not = icmp eq i32 %52, 0
  br i1 %tobool77.not, label %if.else107, label %if.then78

if.then78:                                        ; preds = %land.lhs.true76
  store i32 0, ptr %currSE, align 8
  %53 = load ptr, ptr %partArr, align 8
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading33, align 8
  %54 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag86 = getelementptr inbounds i8, ptr %54, i64 12
  %55 = load i32, ptr %entropy_coding_mode_flag86, align 4
  %cmp87 = icmp eq i32 %55, 0
  br i1 %cmp87, label %if.then93, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.then78
  %56 = load ptr, ptr %53, align 8
  %ei_flag91 = getelementptr inbounds i8, ptr %56, i64 24
  %57 = load i32, ptr %ei_flag91, align 8
  %tobool92.not = icmp eq i32 %57, 0
  br i1 %tobool92.not, label %if.else97, label %if.then93

if.then93:                                        ; preds = %lor.lhs.false89, %if.then78
  %len94 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len94, align 4
  %58 = load ptr, ptr %53, align 8
  %call96 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %58) #14
  br label %if.end100

if.else97:                                        ; preds = %lor.lhs.false89
  %readSyntaxElement98 = getelementptr inbounds i8, ptr %53, i64 40
  %59 = load ptr, ptr %readSyntaxElement98, align 8
  %call99 = call i32 %59(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %53) #14
  br label %if.end100

if.end100:                                        ; preds = %if.else97, %if.then93
  %60 = load i32, ptr %value136, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %60, ptr %luma_transform_size_8x8_flag, align 4
  %tobool103.not = icmp eq i32 %60, 0
  br i1 %tobool103.not, label %if.end109, label %if.then104

if.then104:                                       ; preds = %if.end100
  store i16 13, ptr %mb_type, align 8
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 218959117, ptr %b8mode, align 4
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir, align 8
  br label %if.end109

if.else107:                                       ; preds = %land.lhs.true76, %cond.end65
  %luma_transform_size_8x8_flag108 = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 0, ptr %luma_transform_size_8x8_flag108, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.end100, %if.then104, %if.else107
  call fastcc void @init_macroblock(ptr noundef nonnull %currMB)
  %61 = load i16, ptr %mb_type, align 8
  %cmp112.not = icmp eq i16 %61, 14
  br i1 %cmp112.not, label %if.else115, label %if.then114

if.then114:                                       ; preds = %if.end109
  call fastcc void @read_ipred_modes(ptr noundef nonnull %currMB)
  %read_CBP_and_coeffs_from_NAL = getelementptr inbounds i8, ptr %0, i64 13408
  %62 = load ptr, ptr %read_CBP_and_coeffs_from_NAL, align 8
  call void %62(ptr noundef nonnull %currMB) #14
  br label %if.end127

if.else115:                                       ; preds = %if.end109
  %63 = load i32, ptr %dp_mode, align 8
  %tobool117.not = icmp eq i32 %63, 0
  br i1 %tobool117.not, label %if.else121, label %land.lhs.true118

land.lhs.true118:                                 ; preds = %if.else115
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %64 = load i32, ptr %dpB_NotPresent, align 8
  %tobool119.not = icmp eq i32 %64, 0
  br i1 %tobool119.not, label %if.else121, label %if.then120

if.then120:                                       ; preds = %land.lhs.true118
  %currMB.val = load ptr, ptr %currMB, align 8
  %currMB.val197 = load ptr, ptr %p_Vid1, align 8
  call fastcc void @concealIPCMcoeffs(ptr %currMB.val, ptr %currMB.val197)
  br label %if.end127

if.else121:                                       ; preds = %land.lhs.true118, %if.else115
  %65 = load ptr, ptr %partArr, align 8
  %arrayidx123 = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom, i64 7
  %66 = load i8, ptr %arrayidx123, align 1
  %idxprom124 = zext i8 %66 to i64
  %arrayidx125 = getelementptr inbounds %struct.datapartition, ptr %65, i64 %idxprom124
  call fastcc void @read_IPCM_coeffs_from_NAL(ptr noundef nonnull %0, ptr noundef %arrayidx125)
  br label %if.end127

if.end127:                                        ; preds = %if.then120, %if.else121, %if.then114
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal noundef i32 @decode_one_component_i_slice(ptr noundef %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #3 {
entry:
  %ipmode_DPCM = getelementptr inbounds i8, ptr %currMB, i64 372
  store i8 9, ptr %ipmode_DPCM, align 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.end24 [
    i16 14, label %if.then
    i16 10, label %if.then6
    i16 9, label %if.then13
    i16 13, label %if.then20
  ]

if.then:                                          ; preds = %entry
  %call = tail call i32 @mb_pred_ipcm(ptr noundef nonnull %currMB) #14
  br label %if.end24

if.then6:                                         ; preds = %entry
  %call7 = tail call i32 @mb_pred_intra16x16(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %dec_picture) #14
  br label %if.end24

if.then13:                                        ; preds = %entry
  %call14 = tail call i32 @mb_pred_intra4x4(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end24

if.then20:                                        ; preds = %entry
  %call21 = tail call i32 @mb_pred_intra8x8(ptr noundef nonnull %currMB, i32 noundef %curr_plane, ptr noundef %currImg, ptr noundef %dec_picture) #14
  br label %if.end24

if.end24:                                         ; preds = %entry, %if.then6, %if.then20, %if.then13, %if.then
  ret i32 1
}

declare void @init_lists_i_slice_mvc(ptr noundef) #5

declare void @init_lists_i_slice(ptr noundef) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal void @interpret_mb_mode_SI(ptr nocapture noundef %currMB) #2 {
entry:
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %0 = load i16, ptr %mb_type, align 8
  switch i16 %0, label %if.else28 [
    i16 0, label %if.then
    i16 1, label %if.then10
    i16 26, label %if.then21
  ]

if.then:                                          ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block, align 8
  store i16 12, ptr %mb_type, align 8
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 185273099, ptr %b8mode, align 4
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir, align 8
  %1 = load ptr, ptr %currMB, align 8
  %siblock = getelementptr inbounds i8, ptr %1, i64 13528
  %2 = load ptr, ptr %siblock, align 8
  %mb = getelementptr inbounds i8, ptr %currMB, i64 28
  %y = getelementptr inbounds i8, ptr %currMB, i64 30
  %3 = load i16, ptr %y, align 2
  %idxprom = sext i16 %3 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %idxprom
  %4 = load ptr, ptr %arrayidx, align 8
  %5 = load i16, ptr %mb, align 4
  %idxprom5 = sext i16 %5 to i64
  %arrayidx6 = getelementptr inbounds i32, ptr %4, i64 %idxprom5
  store i32 1, ptr %arrayidx6, align 4
  br label %if.end43

if.then10:                                        ; preds = %entry
  %is_intra_block11 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block11, align 8
  store i16 9, ptr %mb_type, align 8
  %b8mode13 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 185273099, ptr %b8mode13, align 4
  %b8pdir15 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir15, align 8
  br label %if.end43

if.then21:                                        ; preds = %entry
  %is_intra_block22 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block22, align 8
  store i16 14, ptr %mb_type, align 8
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 -1, ptr %cbp, align 4
  %i16mode = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 0, ptr %i16mode, align 8
  %b8mode24 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode24, align 4
  %b8pdir26 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir26, align 8
  br label %if.end43

if.else28:                                        ; preds = %entry
  %conv = sext i16 %0 to i32
  %is_intra_block29 = getelementptr inbounds i8, ptr %currMB, i64 96
  store i32 1, ptr %is_intra_block29, align 8
  store i16 10, ptr %mb_type, align 8
  %sub = add nsw i32 %conv, -2
  %shr = ashr i32 %sub, 2
  %idxprom32 = sext i32 %shr to i64
  %arrayidx33 = getelementptr inbounds [6 x i32], ptr @__const.interpret_mb_mode_SI.ICBPTAB, i64 0, i64 %idxprom32
  %6 = load i32, ptr %arrayidx33, align 4
  %cbp34 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %6, ptr %cbp34, align 4
  %and = and i32 %sub, 3
  %i16mode37 = getelementptr inbounds i8, ptr %currMB, i64 360
  store i32 %and, ptr %i16mode37, align 8
  %b8mode38 = getelementptr inbounds i8, ptr %currMB, i64 364
  store i32 0, ptr %b8mode38, align 4
  %b8pdir40 = getelementptr inbounds i8, ptr %currMB, i64 368
  store i32 -1, ptr %b8pdir40, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then10, %if.else28, %if.then21, %if.then
  ret void
}

declare void @intrapred_chroma_mbaff(ptr noundef) #5

declare void @intrapred_chroma(ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CABAC_444(ptr noundef %currMB) #3 {
entry:
  %up.i623 = alloca %struct.pix_pos, align 4
  %left.i624 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %0 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %1 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %2 = load ptr, ptr %p_Vid1, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %3 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %3, 1
  %structure = getelementptr inbounds i8, ptr %2, i64 848876
  %4 = load i32, ptr %structure, align 4
  %cmp2 = icmp eq i32 %4, 0
  %.sink727.sroa.gep = getelementptr inbounds i8, ptr %currSE, i64 32
  %.sink727.sroa.gep731 = getelementptr inbounds i8, ptr %currSE, i64 40
  br i1 %cmp2, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %5 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %5
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %6 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %7 = load i16, ptr %mb_type, align 8
  switch i16 %7, label %lor.end [
    i16 10, label %if.else153
    i16 14, label %if.else153
    i16 9, label %8
    i16 12, label %8
    i16 13, label %8
  ]

8:                                                ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %8
  %9 = phi i32 [ 6, %8 ], [ 11, %land.end.thread ]
  store i32 %9, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %10 = load ptr, ptr %partArr, align 8
  %idxprom44 = zext nneg i32 %9 to i64
  %arrayidx45 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom44
  %11 = load i8, ptr %arrayidx45, align 1
  %idxprom46 = zext i8 %11 to i64
  %arrayidx47 = getelementptr inbounds %struct.datapartition, ptr %10, i64 %idxprom46
  %12 = load ptr, ptr %arrayidx47, align 8
  %ei_flag = getelementptr inbounds i8, ptr %12, i64 24
  %13 = load i32, ptr %ei_flag, align 8
  %tobool48.not = icmp eq i32 %13, 0
  br i1 %tobool48.not, label %if.end, label %if.then49

if.then49:                                        ; preds = %lor.end
  %switch.tableidx = add i16 %7, -9
  %14 = icmp ult i16 %switch.tableidx, 5
  br i1 %14, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %if.then49
  %15 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %15
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.then49, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %if.then49 ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %0, i64 %.sink
  %cond64 = load ptr, ptr %linfo_cbp_inter, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end, %cond.end
  %.sink727.sroa.phi = phi ptr [ %.sink727.sroa.gep, %cond.end ], [ %.sink727.sroa.gep731, %lor.end ]
  %read_CBP_CABAC.sink = phi ptr [ %cond64, %cond.end ], [ @read_CBP_CABAC, %lor.end ]
  store ptr %read_CBP_CABAC.sink, ptr %.sink727.sroa.phi, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx47, i64 40
  %16 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %16(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx47) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %17 = load i32, ptr %value1, align 4
  %cbp65 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %17, ptr %cbp65, align 4
  %18 = load i16, ptr %mb_type, align 8
  %19 = add i16 %18, -1
  %or.cond = icmp ult i16 %19, 3
  br i1 %or.cond, label %land.lhs.true86, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %if.end
  %cmp77 = icmp eq i16 %18, 0
  br i1 %cmp77, label %land.lhs.true79, label %lor.lhs.false84

land.lhs.true79:                                  ; preds = %lor.lhs.false74
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %20 = load i32, ptr %slice_type, align 4
  %cmp80 = icmp eq i32 %20, 1
  br i1 %cmp80, label %land.lhs.true82, label %lor.lhs.false84

land.lhs.true82:                                  ; preds = %land.lhs.true79
  %active_sps = getelementptr inbounds i8, ptr %2, i64 16
  %21 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %21, i64 3144
  %22 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool83.not = icmp eq i32 %22, 0
  br i1 %tobool83.not, label %lor.lhs.false84, label %land.lhs.true96

lor.lhs.false84:                                  ; preds = %land.lhs.true82, %land.lhs.true79, %lor.lhs.false74
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %23 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool85.not = icmp eq i32 %23, 0
  br i1 %tobool85.not, label %if.end121, label %land.lhs.true86

land.lhs.true86:                                  ; preds = %if.end, %lor.lhs.false84
  switch i16 %18, label %land.lhs.true96 [
    i16 13, label %if.end121
    i16 9, label %if.end121
  ]

land.lhs.true96:                                  ; preds = %land.lhs.true82, %land.lhs.true86
  %and = and i32 %17, 15
  %tobool98.not = icmp eq i32 %and, 0
  br i1 %tobool98.not, label %if.end121, label %land.rhs99

land.rhs99:                                       ; preds = %land.lhs.true96
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %24 = load i32, ptr %Transform8x8Mode, align 4
  %tobool100.not = icmp eq i32 %24, 0
  br i1 %tobool100.not, label %if.then124, label %if.then103

if.then103:                                       ; preds = %land.rhs99
  store i32 0, ptr %currSE, align 8
  %25 = load ptr, ptr %partArr, align 8
  %reading109 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading109, align 8
  %26 = load ptr, ptr %25, align 8
  %ei_flag111 = getelementptr inbounds i8, ptr %26, i64 24
  %27 = load i32, ptr %ei_flag111, align 8
  %tobool112.not = icmp eq i32 %27, 0
  br i1 %tobool112.not, label %if.else116, label %if.then113

if.then113:                                       ; preds = %if.then103
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %28 = load ptr, ptr %25, align 8
  %call115 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %28) #14
  br label %if.end119

if.else116:                                       ; preds = %if.then103
  %readSyntaxElement117 = getelementptr inbounds i8, ptr %25, i64 40
  %29 = load ptr, ptr %readSyntaxElement117, align 8
  %call118 = call i32 %29(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %25) #14
  br label %if.end119

if.end119:                                        ; preds = %if.else116, %if.then113
  %30 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %30, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then124

if.end121:                                        ; preds = %land.lhs.true96, %land.lhs.true86, %land.lhs.true86, %lor.lhs.false84
  %cmp122.not = icmp eq i32 %17, 0
  br i1 %cmp122.not, label %if.end224, label %if.then124

if.then124:                                       ; preds = %land.rhs99, %if.end119, %if.end121
  %31 = load i32, ptr %is_intra_block, align 8
  %cmp126 = icmp eq i32 %31, 0
  %cond128 = select i1 %cmp126, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond128)
  %32 = load i32, ptr %dp_mode, align 8
  %tobool130.not = icmp eq i32 %32, 0
  br i1 %tobool130.not, label %if.end224, label %if.then131

if.then131:                                       ; preds = %if.then124
  %33 = load i32, ptr %is_intra_block, align 8
  %cmp133 = icmp eq i32 %33, 0
  br i1 %cmp133, label %land.lhs.true135, label %if.end138

land.lhs.true135:                                 ; preds = %if.then131
  %dpC_NotPresent = getelementptr inbounds i8, ptr %0, i64 1236
  %34 = load i32, ptr %dpC_NotPresent, align 4
  %tobool136.not = icmp eq i32 %34, 0
  br i1 %tobool136.not, label %if.end138, label %if.then137

if.then137:                                       ; preds = %land.lhs.true135
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end138

if.end138:                                        ; preds = %if.then137, %land.lhs.true135, %if.then131
  br i1 %cmp, label %land.lhs.true140, label %if.end145

land.lhs.true140:                                 ; preds = %if.end138
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %35 = load i32, ptr %dpB_NotPresent, align 8
  %tobool141.not = icmp eq i32 %35, 0
  br i1 %tobool141.not, label %if.end145, label %if.then142

if.then142:                                       ; preds = %land.lhs.true140
  %ei_flag143 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag143, align 2
  %dpl_flag144 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag144, align 1
  br label %if.end145

if.end145:                                        ; preds = %if.then142, %land.lhs.true140, %if.end138
  %36 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %36, i64 856744
  %37 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %36, i64 849132
  call void %37(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %38 = load ptr, ptr %getNeighbour.i, align 8
  call void %38(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %39 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %39, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end145
  %active_pps.i = getelementptr inbounds i8, ptr %36, i64 8
  %40 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %40, i64 2204
  %41 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end145
  %42 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %42, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %36, i64 848888
  %43 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %44 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %44 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %43, i64 %idxprom.i, i32 23
  %45 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %46 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %46, %45
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %47 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %47, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %36, i64 848888
  %48 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %49 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %49 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %48, i64 %idxprom17.i, i32 23
  %50 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %51 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %51, %50
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag146 = getelementptr inbounds i8, ptr %currMB, i64 111
  %52 = load i8, ptr %dpl_flag146, align 1
  %tobool147.not = icmp eq i8 %52, 0
  br i1 %tobool147.not, label %if.end224, label %if.then148

if.then148:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp65, align 4
  br label %if.end224

if.else153:                                       ; preds = %land.end.thread, %land.end.thread
  %cbp154 = getelementptr inbounds i8, ptr %currMB, i64 284
  %53 = load i32, ptr %cbp154, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %54 = load i32, ptr %dp_mode, align 8
  %tobool156.not = icmp eq i32 %54, 0
  br i1 %tobool156.not, label %if.end169, label %if.then157

if.then157:                                       ; preds = %if.else153
  %dpB_NotPresent158 = getelementptr inbounds i8, ptr %0, i64 1232
  %55 = load i32, ptr %dpB_NotPresent158, align 8
  %tobool159.not = icmp eq i32 %55, 0
  br i1 %tobool159.not, label %if.end163, label %if.then160

if.then160:                                       ; preds = %if.then157
  %ei_flag161 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag161, align 2
  %dpl_flag162 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag162, align 1
  br label %if.end163

if.end163:                                        ; preds = %if.then160, %if.then157
  %56 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i623) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i624) #14
  %getNeighbour.i626 = getelementptr inbounds i8, ptr %56, i64 856744
  %57 = load ptr, ptr %getNeighbour.i626, align 8
  %arrayidx.i627 = getelementptr inbounds i8, ptr %56, i64 849132
  call void %57(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i627, ptr noundef nonnull %left.i624) #14
  %58 = load ptr, ptr %getNeighbour.i626, align 8
  call void %58(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i627, ptr noundef nonnull %up.i623) #14
  %59 = load i32, ptr %is_intra_block, align 8
  %cmp.i629 = icmp eq i32 %59, 0
  br i1 %cmp.i629, label %if.then.i634, label %lor.lhs.false.i630

lor.lhs.false.i630:                               ; preds = %if.end163
  %active_pps.i631 = getelementptr inbounds i8, ptr %56, i64 8
  %60 = load ptr, ptr %active_pps.i631, align 8
  %constrained_intra_pred_flag.i632 = getelementptr inbounds i8, ptr %60, i64 2204
  %61 = load i32, ptr %constrained_intra_pred_flag.i632, align 4
  %tobool.not.i633 = icmp eq i32 %61, 0
  br i1 %tobool.not.i633, label %if.then.i634, label %check_dp_neighbors.exit652

if.then.i634:                                     ; preds = %lor.lhs.false.i630, %if.end163
  %62 = load i32, ptr %left.i624, align 4
  %tobool6.not.i635 = icmp eq i32 %62, 0
  br i1 %tobool6.not.i635, label %if.end.i643, label %if.then7.i636

if.then7.i636:                                    ; preds = %if.then.i634
  %mb_data.i637 = getelementptr inbounds i8, ptr %56, i64 848888
  %63 = load ptr, ptr %mb_data.i637, align 8
  %mb_addr.i638 = getelementptr inbounds i8, ptr %left.i624, i64 4
  %64 = load i32, ptr %mb_addr.i638, align 4
  %idxprom.i639 = sext i32 %64 to i64
  %dpl_flag.i640 = getelementptr inbounds %struct.macroblock, ptr %63, i64 %idxprom.i639, i32 23
  %65 = load i8, ptr %dpl_flag.i640, align 1
  %dpl_flag9.i641 = getelementptr inbounds i8, ptr %currMB, i64 111
  %66 = load i8, ptr %dpl_flag9.i641, align 1
  %or38.i642 = or i8 %66, %65
  store i8 %or38.i642, ptr %dpl_flag9.i641, align 1
  br label %if.end.i643

if.end.i643:                                      ; preds = %if.then7.i636, %if.then.i634
  %67 = load i32, ptr %up.i623, align 4
  %tobool13.not.i644 = icmp eq i32 %67, 0
  br i1 %tobool13.not.i644, label %check_dp_neighbors.exit652, label %if.then14.i645

if.then14.i645:                                   ; preds = %if.end.i643
  %mb_data15.i646 = getelementptr inbounds i8, ptr %56, i64 848888
  %68 = load ptr, ptr %mb_data15.i646, align 8
  %mb_addr16.i647 = getelementptr inbounds i8, ptr %up.i623, i64 4
  %69 = load i32, ptr %mb_addr16.i647, align 4
  %idxprom17.i648 = sext i32 %69 to i64
  %dpl_flag19.i649 = getelementptr inbounds %struct.macroblock, ptr %68, i64 %idxprom17.i648, i32 23
  %70 = load i8, ptr %dpl_flag19.i649, align 1
  %dpl_flag21.i650 = getelementptr inbounds i8, ptr %currMB, i64 111
  %71 = load i8, ptr %dpl_flag21.i650, align 1
  %or2339.i651 = or i8 %71, %70
  store i8 %or2339.i651, ptr %dpl_flag21.i650, align 1
  br label %check_dp_neighbors.exit652

check_dp_neighbors.exit652:                       ; preds = %lor.lhs.false.i630, %if.end.i643, %if.then14.i645
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i624) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i623) #14
  %dpl_flag164 = getelementptr inbounds i8, ptr %currMB, i64 111
  %72 = load i8, ptr %dpl_flag164, align 1
  %tobool165.not = icmp eq i8 %72, 0
  br i1 %tobool165.not, label %if.then172, label %if.end169.thread712

if.end169.thread712:                              ; preds = %check_dp_neighbors.exit652
  store i32 0, ptr %cbp154, align 4
  br label %if.end224

if.end169:                                        ; preds = %if.else153
  %dpl_flag170.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag170.phi.trans.insert, align 1
  %tobool171.not = icmp eq i8 %.pre, 0
  br i1 %tobool171.not, label %if.then172, label %if.end224

if.then172:                                       ; preds = %check_dp_neighbors.exit652, %if.end169
  %partArr176 = getelementptr inbounds i8, ptr %0, i64 312
  %73 = load ptr, ptr %partArr176, align 8
  %arrayidx179 = getelementptr inbounds i8, ptr %arrayidx, i64 7
  %74 = load i8, ptr %arrayidx179, align 1
  %idxprom180 = zext i8 %74 to i64
  %arrayidx181 = getelementptr inbounds %struct.datapartition, ptr %73, i64 %idxprom180
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 0, ptr %context, align 8
  store i32 7, ptr %currSE, align 8
  %75 = load ptr, ptr %arrayidx181, align 8
  %ei_flag184 = getelementptr inbounds i8, ptr %75, i64 24
  %76 = load i32, ptr %ei_flag184, align 8
  %tobool185.not = icmp eq i32 %76, 0
  %readRunLevel_CABAC.linfo_levrun_inter = select i1 %tobool185.not, ptr @readRunLevel_CABAC, ptr @linfo_levrun_inter
  %..sroa.sel.v = select i1 %tobool185.not, i64 40, i64 32
  %..sroa.sel = getelementptr inbounds i8, ptr %currSE, i64 %..sroa.sel.v
  store ptr %readRunLevel_CABAC.linfo_levrun_inter, ptr %..sroa.sel, align 8
  %readSyntaxElement200 = getelementptr inbounds i8, ptr %arrayidx181, i64 40
  %value1202 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof = getelementptr inbounds i8, ptr %0, i64 1272
  br label %for.body199

for.body199:                                      ; preds = %if.then172, %for.inc216
  %pos_scan_4x4.0702 = phi ptr [ %6, %if.then172 ], [ %incdec.ptr207, %for.inc216 ]
  %k.0701 = phi i32 [ 0, %if.then172 ], [ %inc217, %for.inc216 ]
  %77 = load ptr, ptr %readSyntaxElement200, align 8
  %call201 = call i32 %77(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx181) #14
  %78 = load i32, ptr %value1202, align 4
  %cmp203.not = icmp eq i32 %78, 0
  br i1 %cmp203.not, label %for.end218, label %for.inc216

for.inc216:                                       ; preds = %for.body199
  %79 = load i32, ptr %value2, align 8
  %mul = shl nsw i32 %79, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0702, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %80 = load i8, ptr %add.ptr, align 1
  %conv206 = zext i8 %80 to i64
  %incdec.ptr207 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %81 = load i8, ptr %incdec.ptr, align 1
  %conv208 = zext i8 %81 to i64
  %82 = load ptr, ptr %cof, align 8
  %83 = load ptr, ptr %82, align 8
  %arrayidx212.idx = shl nuw nsw i64 %conv208, 5
  %arrayidx212 = getelementptr inbounds i8, ptr %83, i64 %arrayidx212.idx
  %84 = load ptr, ptr %arrayidx212, align 8
  %arrayidx214.idx = shl nuw nsw i64 %conv206, 4
  %arrayidx214 = getelementptr inbounds i8, ptr %84, i64 %arrayidx214.idx
  store i32 %78, ptr %arrayidx214, align 4
  %inc217 = add nuw nsw i32 %k.0701, 1
  %cmp192 = icmp ult i32 %k.0701, 16
  br i1 %cmp192, label %for.body199, label %for.end218

for.end218:                                       ; preds = %for.body199, %for.inc216
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %85 = load i32, ptr %is_lossless, align 4
  %cmp219 = icmp eq i32 %85, 0
  br i1 %cmp219, label %if.then221, label %if.end224

if.then221:                                       ; preds = %for.end218
  %colour_plane_id = getelementptr inbounds i8, ptr %0, i64 216
  %86 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %86) #14
  br label %if.end224

if.end224:                                        ; preds = %if.end169.thread712, %if.end169, %if.then221, %for.end218, %if.end121, %check_dp_neighbors.exit, %if.then148, %if.then124
  %cbp.1 = phi i32 [ %53, %if.end169 ], [ %53, %if.then221 ], [ %53, %for.end218 ], [ 0, %if.then148 ], [ %17, %check_dp_neighbors.exit ], [ %17, %if.then124 ], [ 0, %if.end121 ], [ 0, %if.end169.thread712 ]
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %87 = load i32, ptr %qp, align 4
  %88 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %87, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %88, i64 849052
  %89 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %89, %87
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %90 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %90, i64 13520
  %91 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %88, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %91, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %92 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %92
  %93 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %93, %87
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end224
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %94 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %94 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end224
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end224 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %95 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %95, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %96 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %96
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %91, i64 304
  %97 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %97, %87
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %98 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %98 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %99 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %99, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i654 = icmp eq i32 %add.i, 0
  br i1 %cmp.i654, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %88, i64 849092
  %100 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %100, 1
  %101 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %101, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix225 = getelementptr inbounds i8, ptr %2, i64 856032
  %102 = load ptr, ptr %qp_per_matrix225, align 8
  %colour_plane_id227 = getelementptr inbounds i8, ptr %0, i64 216
  %103 = load i32, ptr %colour_plane_id227, align 8
  %idxprom228 = sext i32 %103 to i64
  %arrayidx229 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom228
  %104 = load i32, ptr %arrayidx229, align 4
  %idxprom230 = sext i32 %104 to i64
  %arrayidx231 = getelementptr inbounds i32, ptr %102, i64 %idxprom230
  %105 = load i32, ptr %arrayidx231, align 4
  %qp_rem_matrix232 = getelementptr inbounds i8, ptr %2, i64 856040
  %106 = load ptr, ptr %qp_rem_matrix232, align 8
  %arrayidx238 = getelementptr inbounds i32, ptr %106, i64 %idxprom230
  %107 = load i32, ptr %arrayidx238, align 4
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %0, i64 1392
  %idxprom269 = sext i32 %107 to i64
  %arrayidx270 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom228, i64 %idxprom269
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %0, i64 2544
  %arrayidx277 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom228, i64 %idxprom269
  %cond280 = select i1 %cmp, ptr %arrayidx270, ptr %arrayidx277
  %tobool281.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool281.not, label %if.end288, label %if.then282

if.then282:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag283 = getelementptr inbounds i8, ptr %currMB, i64 420
  %108 = load i32, ptr %luma_transform_size_8x8_flag283, align 4
  %tobool284.not = icmp eq i32 %108, 0
  br i1 %tobool284.not, label %if.else286, label %if.then285

if.then285:                                       ; preds = %if.then282
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0)
  br label %if.end288

if.else286:                                       ; preds = %if.then282
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0, ptr noundef nonnull %cond280, i32 noundef %105, i32 noundef %cbp.1)
  br label %if.end288

if.end288:                                        ; preds = %if.then285, %if.else286, %update_qp.exit
  %partArr304 = getelementptr inbounds i8, ptr %0, i64 312
  %arrayidx307 = getelementptr inbounds i8, ptr %arrayidx, i64 7
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %2, i64 849280
  %context313 = getelementptr inbounds i8, ptr %currSE, i64 24
  %mapping324 = getelementptr inbounds i8, ptr %currSE, i64 32
  %reading326 = getelementptr inbounds i8, ptr %currSE, i64 40
  %value1339 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2343 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof354 = getelementptr inbounds i8, ptr %0, i64 1272
  %bitdepth_chroma_qp_scale = getelementptr inbounds i8, ptr %2, i64 849056
  %luma_transform_size_8x8_flag430 = getelementptr inbounds i8, ptr %currMB, i64 420
  %109 = load i16, ptr %mb_type, align 8
  switch i16 %109, label %if.end374 [
    i16 10, label %if.then302
    i16 14, label %if.then302
  ]

if.then302:                                       ; preds = %if.end288, %if.end288
  store i32 7, ptr %currSE, align 8
  %110 = load ptr, ptr %partArr304, align 8
  %111 = load i8, ptr %arrayidx307, align 1
  %idxprom308 = zext i8 %111 to i64
  %arrayidx309 = getelementptr inbounds %struct.datapartition, ptr %110, i64 %idxprom308
  %112 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp310.not = icmp eq i32 %112, 0
  %spec.select729 = select i1 %cmp310.not, i32 10, i32 0
  store i32 %spec.select729, ptr %context313, align 8
  %113 = load ptr, ptr %arrayidx309, align 8
  %ei_flag321 = getelementptr inbounds i8, ptr %113, i64 24
  %114 = load i32, ptr %ei_flag321, align 8
  %tobool322.not = icmp eq i32 %114, 0
  br i1 %tobool322.not, label %if.else325, label %if.then323

if.then323:                                       ; preds = %if.then302
  store ptr @linfo_levrun_inter, ptr %mapping324, align 8
  br label %if.end327

if.else325:                                       ; preds = %if.then302
  store ptr @readRunLevel_CABAC, ptr %reading326, align 8
  br label %if.end327

if.end327:                                        ; preds = %if.else325, %if.then323
  %readSyntaxElement337 = getelementptr inbounds i8, ptr %arrayidx309, i64 40
  br label %for.body336

for.body336:                                      ; preds = %if.end327, %for.inc365
  %k.1704 = phi i32 [ 0, %if.end327 ], [ %inc366, %for.inc365 ]
  %coef_ctr.0703 = phi i32 [ -1, %if.end327 ], [ %add345, %for.inc365 ]
  %115 = load ptr, ptr %readSyntaxElement337, align 8
  %call338 = call i32 %115(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx309) #14
  %116 = load i32, ptr %value1339, align 4
  %cmp340.not = icmp eq i32 %116, 0
  br i1 %cmp340.not, label %for.end367, label %for.inc365

for.inc365:                                       ; preds = %for.body336
  %117 = load i32, ptr %value2343, align 8
  %add344 = add i32 %coef_ctr.0703, 1
  %add345 = add i32 %add344, %117
  %idxprom346 = sext i32 %add345 to i64
  %arrayidx347 = getelementptr inbounds [2 x i8], ptr %6, i64 %idxprom346
  %118 = load i8, ptr %arrayidx347, align 1
  %conv349 = zext i8 %118 to i64
  %arrayidx352 = getelementptr inbounds i8, ptr %arrayidx347, i64 1
  %119 = load i8, ptr %arrayidx352, align 1
  %conv353 = zext i8 %119 to i64
  %120 = load ptr, ptr %cof354, align 8
  %arrayidx357 = getelementptr inbounds i8, ptr %120, i64 8
  %121 = load ptr, ptr %arrayidx357, align 8
  %arrayidx360.idx = shl nuw nsw i64 %conv353, 5
  %arrayidx360 = getelementptr inbounds i8, ptr %121, i64 %arrayidx360.idx
  %122 = load ptr, ptr %arrayidx360, align 8
  %arrayidx363.idx = shl nuw nsw i64 %conv349, 4
  %arrayidx363 = getelementptr inbounds i8, ptr %122, i64 %arrayidx363.idx
  store i32 %116, ptr %arrayidx363, align 4
  %inc366 = add nuw nsw i32 %k.1704, 1
  %cmp329 = icmp ult i32 %k.1704, 16
  br i1 %cmp329, label %for.body336, label %for.end367

for.end367:                                       ; preds = %for.body336, %for.inc365
  %123 = load i32, ptr %is_lossless.i, align 4
  %cmp369 = icmp eq i32 %123, 0
  br i1 %cmp369, label %if.then371, label %if.end374

if.then371:                                       ; preds = %for.end367
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef 1) #14
  br label %if.end374

if.end374:                                        ; preds = %if.end288, %for.end367, %if.then371
  %124 = load i32, ptr %qp, align 4
  %125 = load ptr, ptr %p_Vid1, align 8
  store i32 %124, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i657 = getelementptr inbounds i8, ptr %125, i64 849052
  %126 = load i32, ptr %bitdepth_luma_qp_scale.i657, align 4
  %add.i658 = add nsw i32 %126, %124
  store i32 %add.i658, ptr %qp_scaled.i, align 8
  %127 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i660 = getelementptr inbounds i8, ptr %127, i64 13520
  %128 = load ptr, ptr %dec_picture2.i.i660, align 8
  %bitdepth_chroma_qp_scale.i.i661 = getelementptr inbounds i8, ptr %125, i64 849056
  %chroma_qp_offset.i.i662 = getelementptr inbounds i8, ptr %128, i64 300
  %129 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661, align 8
  %sub.i.i664 = sub nsw i32 0, %129
  %130 = load i32, ptr %chroma_qp_offset.i.i662, align 4
  %add.i.i665 = add nsw i32 %130, %124
  %cond.i.i.i.i666 = call noundef i32 @llvm.smax.i32(i32 %add.i.i665, i32 %sub.i.i664)
  %cond.i4.i.i.i667 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i666, i32 51)
  %cmp8.i.i668 = icmp slt i32 %cond.i.i.i.i666, 0
  br i1 %cmp8.i.i668, label %cond.end.i.i673, label %cond.false.i.i669

cond.false.i.i669:                                ; preds = %if.end374
  %idxprom15.i.i670 = zext nneg i32 %cond.i4.i.i.i667 to i64
  %arrayidx16.i.i671 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i670
  %131 = load i8, ptr %arrayidx16.i.i671, align 1
  %conv.i.i672 = zext i8 %131 to i32
  br label %cond.end.i.i673

cond.end.i.i673:                                  ; preds = %cond.false.i.i669, %if.end374
  %132 = phi i32 [ %conv.i.i672, %cond.false.i.i669 ], [ %cond.i4.i.i.i667, %if.end374 ]
  store i32 %132, ptr %qpc.i.i, align 4
  %133 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661, align 8
  %add24.i.i675 = add nsw i32 %133, %132
  store i32 %add24.i.i675, ptr %arrayidx27.i.i, align 4
  %134 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661, align 8
  %sub.1.i.i677 = sub nsw i32 0, %134
  %arrayidx.1.i.i678 = getelementptr inbounds i8, ptr %128, i64 304
  %135 = load i32, ptr %arrayidx.1.i.i678, align 4
  %add.1.i.i679 = add nsw i32 %135, %124
  %cond.i.i.1.i.i680 = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i679, i32 %sub.1.i.i677)
  %cond.i4.i.1.i.i681 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i680, i32 51)
  %cmp8.1.i.i682 = icmp slt i32 %cond.i.i.1.i.i680, 0
  br i1 %cmp8.1.i.i682, label %set_chroma_qp.exit.i687, label %cond.false.1.i.i683

cond.false.1.i.i683:                              ; preds = %cond.end.i.i673
  %idxprom15.1.i.i684 = zext nneg i32 %cond.i4.i.1.i.i681 to i64
  %arrayidx16.1.i.i685 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i684
  %136 = load i8, ptr %arrayidx16.1.i.i685, align 1
  %conv.1.i.i686 = zext i8 %136 to i32
  br label %set_chroma_qp.exit.i687

set_chroma_qp.exit.i687:                          ; preds = %cond.false.1.i.i683, %cond.end.i.i673
  %cond.1.i.i688 = phi i32 [ %conv.1.i.i686, %cond.false.1.i.i683 ], [ %cond.i4.i.1.i.i681, %cond.end.i.i673 ]
  store i32 %cond.1.i.i688, ptr %arrayidx4.1.i.i, align 4
  %137 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661, align 8
  %add24.1.i.i690 = add nsw i32 %137, %cond.1.i.i688
  store i32 %add24.1.i.i690, ptr %arrayidx27.1.i.i, align 4
  %cmp.i692 = icmp eq i32 %add.i658, 0
  br i1 %cmp.i692, label %land.rhs.i695, label %update_qp.exit698

land.rhs.i695:                                    ; preds = %set_chroma_qp.exit.i687
  %lossless_qpprime_flag.i696 = getelementptr inbounds i8, ptr %125, i64 849092
  %138 = load i32, ptr %lossless_qpprime_flag.i696, align 4
  %cmp5.i697 = icmp eq i32 %138, 1
  %139 = zext i1 %cmp5.i697 to i32
  br label %update_qp.exit698

update_qp.exit698:                                ; preds = %set_chroma_qp.exit.i687, %land.rhs.i695
  %land.ext.i693 = phi i32 [ 0, %set_chroma_qp.exit.i687 ], [ %139, %land.rhs.i695 ]
  store i32 %land.ext.i693, ptr %is_lossless.i, align 4
  %140 = load ptr, ptr %qp_per_matrix225, align 8
  %141 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add390 = add nsw i32 %141, %132
  %idxprom391 = sext i32 %add390 to i64
  %arrayidx392 = getelementptr inbounds i32, ptr %140, i64 %idxprom391
  %142 = load i32, ptr %arrayidx392, align 4
  %143 = load ptr, ptr %qp_rem_matrix232, align 8
  %arrayidx402 = getelementptr inbounds i32, ptr %143, i64 %idxprom391
  %144 = load i32, ptr %arrayidx402, align 4
  %idxprom413 = sext i32 %144 to i64
  %arrayidx414 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 1, i64 %idxprom413
  %arrayidx424 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 1, i64 %idxprom413
  %cond427 = select i1 %cmp, ptr %arrayidx414, ptr %arrayidx424
  br i1 %tobool281.not, label %for.inc440, label %if.then429

if.then429:                                       ; preds = %update_qp.exit698
  %145 = load i32, ptr %luma_transform_size_8x8_flag430, align 4
  %tobool431.not = icmp eq i32 %145, 0
  br i1 %tobool431.not, label %if.else434, label %if.then432

if.then432:                                       ; preds = %if.then429
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 1)
  br label %for.inc440

if.else434:                                       ; preds = %if.then429
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 1, ptr noundef nonnull %cond427, i32 noundef %142, i32 noundef %cbp.1)
  br label %for.inc440

for.inc440:                                       ; preds = %update_qp.exit698, %if.else434, %if.then432
  %146 = load i16, ptr %mb_type, align 8
  switch i16 %146, label %if.end374.1 [
    i16 10, label %if.then302.1
    i16 14, label %if.then302.1
  ]

if.then302.1:                                     ; preds = %for.inc440, %for.inc440
  store i32 7, ptr %currSE, align 8
  %147 = load ptr, ptr %partArr304, align 8
  %148 = load i8, ptr %arrayidx307, align 1
  %idxprom308.1 = zext i8 %148 to i64
  %arrayidx309.1 = getelementptr inbounds %struct.datapartition, ptr %147, i64 %idxprom308.1
  %149 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp310.not.1 = icmp eq i32 %149, 0
  %spec.select730 = select i1 %cmp310.not.1, i32 16, i32 0
  store i32 %spec.select730, ptr %context313, align 8
  %150 = load ptr, ptr %arrayidx309.1, align 8
  %ei_flag321.1 = getelementptr inbounds i8, ptr %150, i64 24
  %151 = load i32, ptr %ei_flag321.1, align 8
  %tobool322.not.1 = icmp eq i32 %151, 0
  br i1 %tobool322.not.1, label %if.else325.1, label %if.then323.1

if.then323.1:                                     ; preds = %if.then302.1
  store ptr @linfo_levrun_inter, ptr %mapping324, align 8
  br label %if.end327.1

if.else325.1:                                     ; preds = %if.then302.1
  store ptr @readRunLevel_CABAC, ptr %reading326, align 8
  br label %if.end327.1

if.end327.1:                                      ; preds = %if.else325.1, %if.then323.1
  %readSyntaxElement337.1 = getelementptr inbounds i8, ptr %arrayidx309.1, i64 40
  br label %for.body336.1

for.body336.1:                                    ; preds = %for.inc365.1, %if.end327.1
  %k.1704.1 = phi i32 [ 0, %if.end327.1 ], [ %inc366.1, %for.inc365.1 ]
  %coef_ctr.0703.1 = phi i32 [ -1, %if.end327.1 ], [ %add345.1, %for.inc365.1 ]
  %152 = load ptr, ptr %readSyntaxElement337.1, align 8
  %call338.1 = call i32 %152(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx309.1) #14
  %153 = load i32, ptr %value1339, align 4
  %cmp340.not.1 = icmp eq i32 %153, 0
  br i1 %cmp340.not.1, label %for.end367.1, label %for.inc365.1

for.inc365.1:                                     ; preds = %for.body336.1
  %154 = load i32, ptr %value2343, align 8
  %add344.1 = add i32 %coef_ctr.0703.1, 1
  %add345.1 = add i32 %add344.1, %154
  %idxprom346.1 = sext i32 %add345.1 to i64
  %arrayidx347.1 = getelementptr inbounds [2 x i8], ptr %6, i64 %idxprom346.1
  %155 = load i8, ptr %arrayidx347.1, align 1
  %conv349.1 = zext i8 %155 to i64
  %arrayidx352.1 = getelementptr inbounds i8, ptr %arrayidx347.1, i64 1
  %156 = load i8, ptr %arrayidx352.1, align 1
  %conv353.1 = zext i8 %156 to i64
  %157 = load ptr, ptr %cof354, align 8
  %arrayidx357.1 = getelementptr inbounds i8, ptr %157, i64 16
  %158 = load ptr, ptr %arrayidx357.1, align 8
  %arrayidx360.idx.1 = shl nuw nsw i64 %conv353.1, 5
  %arrayidx360.1 = getelementptr inbounds i8, ptr %158, i64 %arrayidx360.idx.1
  %159 = load ptr, ptr %arrayidx360.1, align 8
  %arrayidx363.idx.1 = shl nuw nsw i64 %conv349.1, 4
  %arrayidx363.1 = getelementptr inbounds i8, ptr %159, i64 %arrayidx363.idx.1
  store i32 %153, ptr %arrayidx363.1, align 4
  %inc366.1 = add nuw nsw i32 %k.1704.1, 1
  %cmp329.1 = icmp ult i32 %k.1704.1, 16
  br i1 %cmp329.1, label %for.body336.1, label %for.end367.1

for.end367.1:                                     ; preds = %for.body336.1, %for.inc365.1
  %160 = load i32, ptr %is_lossless.i, align 4
  %cmp369.1 = icmp eq i32 %160, 0
  br i1 %cmp369.1, label %if.then371.1, label %if.end374.1

if.then371.1:                                     ; preds = %for.end367.1
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef 2) #14
  br label %if.end374.1

if.end374.1:                                      ; preds = %if.then371.1, %for.end367.1, %for.inc440
  %161 = load i32, ptr %qp, align 4
  %162 = load ptr, ptr %p_Vid1, align 8
  store i32 %161, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i657.1 = getelementptr inbounds i8, ptr %162, i64 849052
  %163 = load i32, ptr %bitdepth_luma_qp_scale.i657.1, align 4
  %add.i658.1 = add nsw i32 %163, %161
  store i32 %add.i658.1, ptr %qp_scaled.i, align 8
  %164 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i660.1 = getelementptr inbounds i8, ptr %164, i64 13520
  %165 = load ptr, ptr %dec_picture2.i.i660.1, align 8
  %bitdepth_chroma_qp_scale.i.i661.1 = getelementptr inbounds i8, ptr %162, i64 849056
  %chroma_qp_offset.i.i662.1 = getelementptr inbounds i8, ptr %165, i64 300
  %166 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661.1, align 8
  %sub.i.i664.1 = sub nsw i32 0, %166
  %167 = load i32, ptr %chroma_qp_offset.i.i662.1, align 4
  %add.i.i665.1 = add nsw i32 %167, %161
  %cond.i.i.i.i666.1 = call noundef i32 @llvm.smax.i32(i32 %add.i.i665.1, i32 %sub.i.i664.1)
  %cond.i4.i.i.i667.1 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i666.1, i32 51)
  %cmp8.i.i668.1 = icmp slt i32 %cond.i.i.i.i666.1, 0
  br i1 %cmp8.i.i668.1, label %cond.end.i.i673.1, label %cond.false.i.i669.1

cond.false.i.i669.1:                              ; preds = %if.end374.1
  %idxprom15.i.i670.1 = zext nneg i32 %cond.i4.i.i.i667.1 to i64
  %arrayidx16.i.i671.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i670.1
  %168 = load i8, ptr %arrayidx16.i.i671.1, align 1
  %conv.i.i672.1 = zext i8 %168 to i32
  br label %cond.end.i.i673.1

cond.end.i.i673.1:                                ; preds = %cond.false.i.i669.1, %if.end374.1
  %cond.i.i674.1 = phi i32 [ %conv.i.i672.1, %cond.false.i.i669.1 ], [ %cond.i4.i.i.i667.1, %if.end374.1 ]
  store i32 %cond.i.i674.1, ptr %qpc.i.i, align 4
  %169 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661.1, align 8
  %add24.i.i675.1 = add nsw i32 %169, %cond.i.i674.1
  store i32 %add24.i.i675.1, ptr %arrayidx27.i.i, align 4
  %170 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661.1, align 8
  %sub.1.i.i677.1 = sub nsw i32 0, %170
  %arrayidx.1.i.i678.1 = getelementptr inbounds i8, ptr %165, i64 304
  %171 = load i32, ptr %arrayidx.1.i.i678.1, align 4
  %add.1.i.i679.1 = add nsw i32 %171, %161
  %cond.i.i.1.i.i680.1 = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i679.1, i32 %sub.1.i.i677.1)
  %cond.i4.i.1.i.i681.1 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i680.1, i32 51)
  %cmp8.1.i.i682.1 = icmp slt i32 %cond.i.i.1.i.i680.1, 0
  br i1 %cmp8.1.i.i682.1, label %set_chroma_qp.exit.i687.1, label %cond.false.1.i.i683.1

cond.false.1.i.i683.1:                            ; preds = %cond.end.i.i673.1
  %idxprom15.1.i.i684.1 = zext nneg i32 %cond.i4.i.1.i.i681.1 to i64
  %arrayidx16.1.i.i685.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i684.1
  %172 = load i8, ptr %arrayidx16.1.i.i685.1, align 1
  %conv.1.i.i686.1 = zext i8 %172 to i32
  br label %set_chroma_qp.exit.i687.1

set_chroma_qp.exit.i687.1:                        ; preds = %cond.false.1.i.i683.1, %cond.end.i.i673.1
  %173 = phi i32 [ %conv.1.i.i686.1, %cond.false.1.i.i683.1 ], [ %cond.i4.i.1.i.i681.1, %cond.end.i.i673.1 ]
  store i32 %173, ptr %arrayidx4.1.i.i, align 4
  %174 = load i32, ptr %bitdepth_chroma_qp_scale.i.i661.1, align 8
  %add24.1.i.i690.1 = add nsw i32 %174, %173
  store i32 %add24.1.i.i690.1, ptr %arrayidx27.1.i.i, align 4
  %cmp.i692.1 = icmp eq i32 %add.i658.1, 0
  br i1 %cmp.i692.1, label %land.rhs.i695.1, label %update_qp.exit698.1

land.rhs.i695.1:                                  ; preds = %set_chroma_qp.exit.i687.1
  %lossless_qpprime_flag.i696.1 = getelementptr inbounds i8, ptr %162, i64 849092
  %175 = load i32, ptr %lossless_qpprime_flag.i696.1, align 4
  %cmp5.i697.1 = icmp eq i32 %175, 1
  %176 = zext i1 %cmp5.i697.1 to i32
  br label %update_qp.exit698.1

update_qp.exit698.1:                              ; preds = %land.rhs.i695.1, %set_chroma_qp.exit.i687.1
  %land.ext.i693.1 = phi i32 [ 0, %set_chroma_qp.exit.i687.1 ], [ %176, %land.rhs.i695.1 ]
  store i32 %land.ext.i693.1, ptr %is_lossless.i, align 4
  %177 = load ptr, ptr %qp_per_matrix225, align 8
  %178 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add390.1 = add nsw i32 %178, %173
  %idxprom391.1 = sext i32 %add390.1 to i64
  %arrayidx392.1 = getelementptr inbounds i32, ptr %177, i64 %idxprom391.1
  %179 = load i32, ptr %arrayidx392.1, align 4
  %180 = load ptr, ptr %qp_rem_matrix232, align 8
  %arrayidx402.1 = getelementptr inbounds i32, ptr %180, i64 %idxprom391.1
  %181 = load i32, ptr %arrayidx402.1, align 4
  %idxprom413.1 = sext i32 %181 to i64
  %arrayidx414.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 2, i64 %idxprom413.1
  %arrayidx424.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 2, i64 %idxprom413.1
  %cond427.1 = select i1 %cmp, ptr %arrayidx414.1, ptr %arrayidx424.1
  br i1 %tobool281.not, label %for.inc440.1, label %if.then429.1

if.then429.1:                                     ; preds = %update_qp.exit698.1
  %182 = load i32, ptr %luma_transform_size_8x8_flag430, align 4
  %tobool431.not.1 = icmp eq i32 %182, 0
  br i1 %tobool431.not.1, label %if.else434.1, label %if.then432.1

if.then432.1:                                     ; preds = %if.then429.1
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 2)
  br label %for.inc440.1

if.else434.1:                                     ; preds = %if.then429.1
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 2, ptr noundef nonnull %cond427.1, i32 noundef %179, i32 noundef %cbp.1)
  br label %for.inc440.1

for.inc440.1:                                     ; preds = %if.else434.1, %if.then432.1, %update_qp.exit698.1
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CABAC_422(ptr noundef %currMB) #3 {
entry:
  %up.i1145 = alloca %struct.pix_pos, align 4
  %left.i1146 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %qp_per_uv = alloca [2 x i32], align 4
  %qp_rem_uv = alloca [2 x i32], align 4
  %m3 = alloca [2 x [4 x i32]], align 16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %0 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %1 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %2 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %3 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %3, 1
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %4 = load ptr, ptr %dec_picture2, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %4, i64 268
  %5 = load i32, ptr %chroma_format_idc, align 4
  %sub = add nsw i32 %5, -1
  %structure = getelementptr inbounds i8, ptr %2, i64 848876
  %6 = load i32, ptr %structure, align 4
  %cmp3 = icmp eq i32 %6, 0
  %.sink1303.sroa.gep = getelementptr inbounds i8, ptr %currSE, i64 32
  %.sink1303.sroa.gep1307 = getelementptr inbounds i8, ptr %currSE, i64 40
  br i1 %cmp3, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %7 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %7
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %8 = phi i1 [ false, %entry ], [ %tobool.not, %land.end ]
  %9 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %qp_per_matrix = getelementptr inbounds i8, ptr %2, i64 856032
  %10 = load ptr, ptr %qp_per_matrix, align 8
  %qp_scaled = getelementptr inbounds i8, ptr %currMB, i64 80
  %qp_rem_matrix = getelementptr inbounds i8, ptr %2, i64 856040
  %11 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx10 = getelementptr inbounds i8, ptr %currMB, i64 84
  %12 = load i32, ptr %arrayidx10, align 4
  %idxprom11 = sext i32 %12 to i64
  %arrayidx12 = getelementptr inbounds i32, ptr %10, i64 %idxprom11
  %13 = load i32, ptr %arrayidx12, align 4
  store i32 %13, ptr %qp_per_uv, align 4
  %arrayidx20 = getelementptr inbounds i32, ptr %11, i64 %idxprom11
  %14 = load i32, ptr %arrayidx20, align 4
  store i32 %14, ptr %qp_rem_uv, align 4
  %arrayidx10.1 = getelementptr inbounds i8, ptr %currMB, i64 88
  %15 = load i32, ptr %arrayidx10.1, align 4
  %idxprom11.1 = sext i32 %15 to i64
  %arrayidx12.1 = getelementptr inbounds i32, ptr %10, i64 %idxprom11.1
  %16 = load i32, ptr %arrayidx12.1, align 4
  %arrayidx14.1 = getelementptr inbounds i8, ptr %qp_per_uv, i64 4
  store i32 %16, ptr %arrayidx14.1, align 4
  %arrayidx20.1 = getelementptr inbounds i32, ptr %11, i64 %idxprom11.1
  %17 = load i32, ptr %arrayidx20.1, align 4
  %arrayidx22.1 = getelementptr inbounds i8, ptr %qp_rem_uv, i64 4
  store i32 %17, ptr %arrayidx22.1, align 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %18 = load i16, ptr %mb_type, align 8
  switch i16 %18, label %lor.end [
    i16 10, label %if.else154
    i16 14, label %if.else154
    i16 9, label %19
    i16 12, label %19
    i16 13, label %19
  ]

19:                                               ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %19
  %20 = phi i32 [ 6, %19 ], [ 11, %land.end.thread ]
  store i32 %20, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %21 = load ptr, ptr %partArr, align 8
  %idxprom45 = zext nneg i32 %20 to i64
  %arrayidx46 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom45
  %22 = load i8, ptr %arrayidx46, align 1
  %idxprom47 = zext i8 %22 to i64
  %arrayidx48 = getelementptr inbounds %struct.datapartition, ptr %21, i64 %idxprom47
  %23 = load ptr, ptr %arrayidx48, align 8
  %ei_flag = getelementptr inbounds i8, ptr %23, i64 24
  %24 = load i32, ptr %ei_flag, align 8
  %tobool49.not = icmp eq i32 %24, 0
  br i1 %tobool49.not, label %if.end, label %if.then50

if.then50:                                        ; preds = %lor.end
  %switch.tableidx = add i16 %18, -9
  %25 = icmp ult i16 %switch.tableidx, 5
  br i1 %25, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %if.then50
  %26 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %26
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.then50, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %if.then50 ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %0, i64 %.sink
  %cond65 = load ptr, ptr %linfo_cbp_inter, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end, %cond.end
  %.sink1303.sroa.phi = phi ptr [ %.sink1303.sroa.gep, %cond.end ], [ %.sink1303.sroa.gep1307, %lor.end ]
  %read_CBP_CABAC.sink = phi ptr [ %cond65, %cond.end ], [ @read_CBP_CABAC, %lor.end ]
  store ptr %read_CBP_CABAC.sink, ptr %.sink1303.sroa.phi, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx48, i64 40
  %27 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %27(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx48) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %28 = load i32, ptr %value1, align 4
  %cbp66 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %28, ptr %cbp66, align 4
  %29 = load i16, ptr %mb_type, align 8
  %30 = add i16 %29, -1
  %or.cond = icmp ult i16 %30, 3
  br i1 %or.cond, label %land.lhs.true87, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %if.end
  %cmp78 = icmp eq i16 %29, 0
  br i1 %cmp78, label %land.lhs.true80, label %lor.lhs.false85

land.lhs.true80:                                  ; preds = %lor.lhs.false75
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %31 = load i32, ptr %slice_type, align 4
  %cmp81 = icmp eq i32 %31, 1
  br i1 %cmp81, label %land.lhs.true83, label %lor.lhs.false85

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %active_sps = getelementptr inbounds i8, ptr %2, i64 16
  %32 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %32, i64 3144
  %33 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool84.not = icmp eq i32 %33, 0
  br i1 %tobool84.not, label %lor.lhs.false85, label %land.lhs.true97

lor.lhs.false85:                                  ; preds = %land.lhs.true83, %land.lhs.true80, %lor.lhs.false75
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %34 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool86.not = icmp eq i32 %34, 0
  br i1 %tobool86.not, label %if.end122, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %if.end, %lor.lhs.false85
  switch i16 %29, label %land.lhs.true97 [
    i16 13, label %if.end122
    i16 9, label %if.end122
  ]

land.lhs.true97:                                  ; preds = %land.lhs.true83, %land.lhs.true87
  %and = and i32 %28, 15
  %tobool99.not = icmp eq i32 %and, 0
  br i1 %tobool99.not, label %if.end122, label %land.rhs100

land.rhs100:                                      ; preds = %land.lhs.true97
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %35 = load i32, ptr %Transform8x8Mode, align 4
  %tobool101.not = icmp eq i32 %35, 0
  br i1 %tobool101.not, label %if.then125, label %if.then104

if.then104:                                       ; preds = %land.rhs100
  store i32 0, ptr %currSE, align 8
  %36 = load ptr, ptr %partArr, align 8
  %reading110 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading110, align 8
  %37 = load ptr, ptr %36, align 8
  %ei_flag112 = getelementptr inbounds i8, ptr %37, i64 24
  %38 = load i32, ptr %ei_flag112, align 8
  %tobool113.not = icmp eq i32 %38, 0
  br i1 %tobool113.not, label %if.else117, label %if.then114

if.then114:                                       ; preds = %if.then104
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %39 = load ptr, ptr %36, align 8
  %call116 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %39) #14
  br label %if.end120

if.else117:                                       ; preds = %if.then104
  %readSyntaxElement118 = getelementptr inbounds i8, ptr %36, i64 40
  %40 = load ptr, ptr %readSyntaxElement118, align 8
  %call119 = call i32 %40(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %36) #14
  br label %if.end120

if.end120:                                        ; preds = %if.else117, %if.then114
  %41 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %41, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then125

if.end122:                                        ; preds = %land.lhs.true97, %land.lhs.true87, %land.lhs.true87, %lor.lhs.false85
  %cmp123.not = icmp eq i32 %28, 0
  br i1 %cmp123.not, label %if.end225, label %if.then125

if.then125:                                       ; preds = %land.rhs100, %if.end120, %if.end122
  %42 = load i32, ptr %is_intra_block, align 8
  %cmp127 = icmp eq i32 %42, 0
  %cond129 = select i1 %cmp127, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond129)
  %43 = load i32, ptr %dp_mode, align 8
  %tobool131.not = icmp eq i32 %43, 0
  br i1 %tobool131.not, label %if.end225, label %if.then132

if.then132:                                       ; preds = %if.then125
  %44 = load i32, ptr %is_intra_block, align 8
  %cmp134 = icmp eq i32 %44, 0
  br i1 %cmp134, label %land.lhs.true136, label %if.end139

land.lhs.true136:                                 ; preds = %if.then132
  %dpC_NotPresent = getelementptr inbounds i8, ptr %0, i64 1236
  %45 = load i32, ptr %dpC_NotPresent, align 4
  %tobool137.not = icmp eq i32 %45, 0
  br i1 %tobool137.not, label %if.end139, label %if.then138

if.then138:                                       ; preds = %land.lhs.true136
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %land.lhs.true136, %if.then132
  br i1 %cmp, label %land.lhs.true141, label %if.end146

land.lhs.true141:                                 ; preds = %if.end139
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %46 = load i32, ptr %dpB_NotPresent, align 8
  %tobool142.not = icmp eq i32 %46, 0
  br i1 %tobool142.not, label %if.end146, label %if.then143

if.then143:                                       ; preds = %land.lhs.true141
  %ei_flag144 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag144, align 2
  %dpl_flag145 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag145, align 1
  br label %if.end146

if.end146:                                        ; preds = %if.then143, %land.lhs.true141, %if.end139
  %47 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %47, i64 856744
  %48 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %47, i64 849132
  call void %48(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %49 = load ptr, ptr %getNeighbour.i, align 8
  call void %49(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %50 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %50, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end146
  %active_pps.i = getelementptr inbounds i8, ptr %47, i64 8
  %51 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %51, i64 2204
  %52 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %52, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end146
  %53 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %53, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %47, i64 848888
  %54 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %55 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %55 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %54, i64 %idxprom.i, i32 23
  %56 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %57 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %57, %56
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %58 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %58, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %47, i64 848888
  %59 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %60 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %60 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %59, i64 %idxprom17.i, i32 23
  %61 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %62 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %62, %61
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag147 = getelementptr inbounds i8, ptr %currMB, i64 111
  %63 = load i8, ptr %dpl_flag147, align 1
  %tobool148.not = icmp eq i8 %63, 0
  br i1 %tobool148.not, label %if.end225, label %if.then149

if.then149:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp66, align 4
  br label %if.end225

if.else154:                                       ; preds = %land.end.thread, %land.end.thread
  %cbp155 = getelementptr inbounds i8, ptr %currMB, i64 284
  %64 = load i32, ptr %cbp155, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %65 = load i32, ptr %dp_mode, align 8
  %tobool157.not = icmp eq i32 %65, 0
  br i1 %tobool157.not, label %if.end170, label %if.then158

if.then158:                                       ; preds = %if.else154
  %dpB_NotPresent159 = getelementptr inbounds i8, ptr %0, i64 1232
  %66 = load i32, ptr %dpB_NotPresent159, align 8
  %tobool160.not = icmp eq i32 %66, 0
  br i1 %tobool160.not, label %if.end164, label %if.then161

if.then161:                                       ; preds = %if.then158
  %ei_flag162 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag162, align 2
  %dpl_flag163 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag163, align 1
  br label %if.end164

if.end164:                                        ; preds = %if.then161, %if.then158
  %67 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i1145) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i1146) #14
  %getNeighbour.i1148 = getelementptr inbounds i8, ptr %67, i64 856744
  %68 = load ptr, ptr %getNeighbour.i1148, align 8
  %arrayidx.i1149 = getelementptr inbounds i8, ptr %67, i64 849132
  call void %68(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i1149, ptr noundef nonnull %left.i1146) #14
  %69 = load ptr, ptr %getNeighbour.i1148, align 8
  call void %69(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i1149, ptr noundef nonnull %up.i1145) #14
  %70 = load i32, ptr %is_intra_block, align 8
  %cmp.i1151 = icmp eq i32 %70, 0
  br i1 %cmp.i1151, label %if.then.i1156, label %lor.lhs.false.i1152

lor.lhs.false.i1152:                              ; preds = %if.end164
  %active_pps.i1153 = getelementptr inbounds i8, ptr %67, i64 8
  %71 = load ptr, ptr %active_pps.i1153, align 8
  %constrained_intra_pred_flag.i1154 = getelementptr inbounds i8, ptr %71, i64 2204
  %72 = load i32, ptr %constrained_intra_pred_flag.i1154, align 4
  %tobool.not.i1155 = icmp eq i32 %72, 0
  br i1 %tobool.not.i1155, label %if.then.i1156, label %check_dp_neighbors.exit1174

if.then.i1156:                                    ; preds = %lor.lhs.false.i1152, %if.end164
  %73 = load i32, ptr %left.i1146, align 4
  %tobool6.not.i1157 = icmp eq i32 %73, 0
  br i1 %tobool6.not.i1157, label %if.end.i1165, label %if.then7.i1158

if.then7.i1158:                                   ; preds = %if.then.i1156
  %mb_data.i1159 = getelementptr inbounds i8, ptr %67, i64 848888
  %74 = load ptr, ptr %mb_data.i1159, align 8
  %mb_addr.i1160 = getelementptr inbounds i8, ptr %left.i1146, i64 4
  %75 = load i32, ptr %mb_addr.i1160, align 4
  %idxprom.i1161 = sext i32 %75 to i64
  %dpl_flag.i1162 = getelementptr inbounds %struct.macroblock, ptr %74, i64 %idxprom.i1161, i32 23
  %76 = load i8, ptr %dpl_flag.i1162, align 1
  %dpl_flag9.i1163 = getelementptr inbounds i8, ptr %currMB, i64 111
  %77 = load i8, ptr %dpl_flag9.i1163, align 1
  %or38.i1164 = or i8 %77, %76
  store i8 %or38.i1164, ptr %dpl_flag9.i1163, align 1
  br label %if.end.i1165

if.end.i1165:                                     ; preds = %if.then7.i1158, %if.then.i1156
  %78 = load i32, ptr %up.i1145, align 4
  %tobool13.not.i1166 = icmp eq i32 %78, 0
  br i1 %tobool13.not.i1166, label %check_dp_neighbors.exit1174, label %if.then14.i1167

if.then14.i1167:                                  ; preds = %if.end.i1165
  %mb_data15.i1168 = getelementptr inbounds i8, ptr %67, i64 848888
  %79 = load ptr, ptr %mb_data15.i1168, align 8
  %mb_addr16.i1169 = getelementptr inbounds i8, ptr %up.i1145, i64 4
  %80 = load i32, ptr %mb_addr16.i1169, align 4
  %idxprom17.i1170 = sext i32 %80 to i64
  %dpl_flag19.i1171 = getelementptr inbounds %struct.macroblock, ptr %79, i64 %idxprom17.i1170, i32 23
  %81 = load i8, ptr %dpl_flag19.i1171, align 1
  %dpl_flag21.i1172 = getelementptr inbounds i8, ptr %currMB, i64 111
  %82 = load i8, ptr %dpl_flag21.i1172, align 1
  %or2339.i1173 = or i8 %82, %81
  store i8 %or2339.i1173, ptr %dpl_flag21.i1172, align 1
  br label %check_dp_neighbors.exit1174

check_dp_neighbors.exit1174:                      ; preds = %lor.lhs.false.i1152, %if.end.i1165, %if.then14.i1167
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i1146) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i1145) #14
  %dpl_flag165 = getelementptr inbounds i8, ptr %currMB, i64 111
  %83 = load i8, ptr %dpl_flag165, align 1
  %tobool166.not = icmp eq i8 %83, 0
  br i1 %tobool166.not, label %if.then173, label %if.end170.thread1259

if.end170.thread1259:                             ; preds = %check_dp_neighbors.exit1174
  store i32 0, ptr %cbp155, align 4
  br label %if.end225

if.end170:                                        ; preds = %if.else154
  %dpl_flag171.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag171.phi.trans.insert, align 1
  %tobool172.not = icmp eq i8 %.pre, 0
  br i1 %tobool172.not, label %if.then173, label %if.end225

if.then173:                                       ; preds = %check_dp_neighbors.exit1174, %if.end170
  %partArr177 = getelementptr inbounds i8, ptr %0, i64 312
  %84 = load ptr, ptr %partArr177, align 8
  %arrayidx180 = getelementptr inbounds i8, ptr %arrayidx, i64 7
  %85 = load i8, ptr %arrayidx180, align 1
  %idxprom181 = zext i8 %85 to i64
  %arrayidx182 = getelementptr inbounds %struct.datapartition, ptr %84, i64 %idxprom181
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 0, ptr %context, align 8
  store i32 7, ptr %currSE, align 8
  %86 = load ptr, ptr %arrayidx182, align 8
  %ei_flag185 = getelementptr inbounds i8, ptr %86, i64 24
  %87 = load i32, ptr %ei_flag185, align 8
  %tobool186.not = icmp eq i32 %87, 0
  %readRunLevel_CABAC.linfo_levrun_inter = select i1 %tobool186.not, ptr @readRunLevel_CABAC, ptr @linfo_levrun_inter
  %..sroa.sel.v = select i1 %tobool186.not, i64 40, i64 32
  %..sroa.sel = getelementptr inbounds i8, ptr %currSE, i64 %..sroa.sel.v
  store ptr %readRunLevel_CABAC.linfo_levrun_inter, ptr %..sroa.sel, align 8
  %readSyntaxElement201 = getelementptr inbounds i8, ptr %arrayidx182, i64 40
  %value1203 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof = getelementptr inbounds i8, ptr %0, i64 1272
  br label %for.body200

for.body200:                                      ; preds = %if.then173, %for.inc217
  %k.01197 = phi i32 [ 0, %if.then173 ], [ %inc218, %for.inc217 ]
  %pos_scan_4x4.01196 = phi ptr [ %9, %if.then173 ], [ %incdec.ptr208, %for.inc217 ]
  %88 = load ptr, ptr %readSyntaxElement201, align 8
  %call202 = call i32 %88(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx182) #14
  %89 = load i32, ptr %value1203, align 4
  %cmp204.not = icmp eq i32 %89, 0
  br i1 %cmp204.not, label %for.end219, label %for.inc217

for.inc217:                                       ; preds = %for.body200
  %90 = load i32, ptr %value2, align 8
  %mul = shl nsw i32 %90, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.01196, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %91 = load i8, ptr %add.ptr, align 1
  %conv207 = zext i8 %91 to i64
  %incdec.ptr208 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %92 = load i8, ptr %incdec.ptr, align 1
  %conv209 = zext i8 %92 to i64
  %93 = load ptr, ptr %cof, align 8
  %94 = load ptr, ptr %93, align 8
  %arrayidx213.idx = shl nuw nsw i64 %conv209, 5
  %arrayidx213 = getelementptr inbounds i8, ptr %94, i64 %arrayidx213.idx
  %95 = load ptr, ptr %arrayidx213, align 8
  %arrayidx215.idx = shl nuw nsw i64 %conv207, 4
  %arrayidx215 = getelementptr inbounds i8, ptr %95, i64 %arrayidx215.idx
  store i32 %89, ptr %arrayidx215, align 4
  %inc218 = add nuw nsw i32 %k.01197, 1
  %cmp193 = icmp ult i32 %k.01197, 16
  br i1 %cmp193, label %for.body200, label %for.end219

for.end219:                                       ; preds = %for.body200, %for.inc217
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %96 = load i32, ptr %is_lossless, align 4
  %cmp220 = icmp eq i32 %96, 0
  br i1 %cmp220, label %if.then222, label %if.end225

if.then222:                                       ; preds = %for.end219
  %colour_plane_id = getelementptr inbounds i8, ptr %0, i64 216
  %97 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %97) #14
  br label %if.end225

if.end225:                                        ; preds = %if.end170.thread1259, %if.end170, %if.then222, %for.end219, %if.end122, %check_dp_neighbors.exit, %if.then149, %if.then125
  %cbp.1 = phi i32 [ %64, %if.end170 ], [ %64, %if.then222 ], [ %64, %for.end219 ], [ 0, %if.then149 ], [ %28, %check_dp_neighbors.exit ], [ %28, %if.then125 ], [ 0, %if.end122 ], [ 0, %if.end170.thread1259 ]
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %98 = load i32, ptr %qp, align 4
  %99 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %98, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %99, i64 849052
  %100 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %100, %98
  store i32 %add.i, ptr %qp_scaled, align 8
  %101 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %101, i64 13520
  %102 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %99, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %102, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %103 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %103
  %104 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %104, %98
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end225
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %105 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %105 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end225
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end225 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %106 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %106, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %107 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %107
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %102, i64 304
  %108 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %108, %98
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %109 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %109 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %110 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %110, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i1176 = icmp eq i32 %add.i, 0
  br i1 %cmp.i1176, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %99, i64 849092
  %111 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %111, 1
  %112 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %112, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %113 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id228 = getelementptr inbounds i8, ptr %0, i64 216
  %114 = load i32, ptr %colour_plane_id228, align 8
  %idxprom229 = sext i32 %114 to i64
  %arrayidx230 = getelementptr inbounds [3 x i32], ptr %qp_scaled, i64 0, i64 %idxprom229
  %115 = load i32, ptr %arrayidx230, align 4
  %idxprom231 = sext i32 %115 to i64
  %arrayidx232 = getelementptr inbounds i32, ptr %113, i64 %idxprom231
  %116 = load i32, ptr %arrayidx232, align 4
  %117 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx239 = getelementptr inbounds i32, ptr %117, i64 %idxprom231
  %118 = load i32, ptr %arrayidx239, align 4
  %idxprom249 = sext i32 %add24.i.i to i64
  %arrayidx250 = getelementptr inbounds i32, ptr %113, i64 %idxprom249
  %119 = load i32, ptr %arrayidx250, align 4
  store i32 %119, ptr %qp_per_uv, align 4
  %arrayidx259 = getelementptr inbounds i32, ptr %117, i64 %idxprom249
  %120 = load i32, ptr %arrayidx259, align 4
  store i32 %120, ptr %qp_rem_uv, align 4
  %idxprom249.1 = sext i32 %add24.1.i.i to i64
  %arrayidx250.1 = getelementptr inbounds i32, ptr %113, i64 %idxprom249.1
  %121 = load i32, ptr %arrayidx250.1, align 4
  store i32 %121, ptr %arrayidx14.1, align 4
  %arrayidx259.1 = getelementptr inbounds i32, ptr %117, i64 %idxprom249.1
  %122 = load i32, ptr %arrayidx259.1, align 4
  store i32 %122, ptr %arrayidx22.1, align 4
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %0, i64 1392
  %idxprom270 = sext i32 %118 to i64
  %arrayidx271 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom229, i64 %idxprom270
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %0, i64 2544
  %arrayidx278 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom229, i64 %idxprom270
  %cond281 = select i1 %cmp, ptr %arrayidx271, ptr %arrayidx278
  %tobool282.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool282.not, label %if.end838, label %if.then283

if.then283:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag284 = getelementptr inbounds i8, ptr %currMB, i64 420
  %123 = load i32, ptr %luma_transform_size_8x8_flag284, align 4
  %tobool285.not = icmp eq i32 %123, 0
  br i1 %tobool285.not, label %if.else287, label %if.then286

if.then286:                                       ; preds = %if.then283
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0)
  br label %if.end289

if.else287:                                       ; preds = %if.then283
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0, ptr noundef nonnull %cond281, i32 noundef %116, i32 noundef %cbp.1)
  br label %if.end289

if.end289:                                        ; preds = %if.then286, %if.else287
  %cmp290 = icmp sgt i32 %cbp.1, 15
  br i1 %cmp290, label %for.cond293.preheader, label %if.end838

for.cond293.preheader:                            ; preds = %if.end289
  %cof298 = getelementptr inbounds i8, ptr %0, i64 1272
  %bitdepth_chroma_qp_scale = getelementptr inbounds i8, ptr %2, i64 849056
  %context345 = getelementptr inbounds i8, ptr %currSE, i64 24
  %is_v_block = getelementptr inbounds i8, ptr %currMB, i64 100
  %partArr351 = getelementptr inbounds i8, ptr %0, i64 312
  %mapping361 = getelementptr inbounds i8, ptr %currSE, i64 32
  %reading363 = getelementptr inbounds i8, ptr %currSE, i64 40
  %value1367 = getelementptr inbounds i8, ptr %currSE, i64 4
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %value2374 = getelementptr inbounds i8, ptr %currSE, i64 8
  %arrayidx399 = getelementptr inbounds i8, ptr %m3, i64 16
  %arrayidx405 = getelementptr inbounds i8, ptr %m3, i64 4
  %arrayidx407 = getelementptr inbounds i8, ptr %m3, i64 20
  %arrayidx412 = getelementptr inbounds i8, ptr %m3, i64 8
  %arrayidx414 = getelementptr inbounds i8, ptr %m3, i64 24
  %arrayidx419 = getelementptr inbounds i8, ptr %m3, i64 12
  %arrayidx421 = getelementptr inbounds i8, ptr %m3, i64 28
  %mb_cr_size_y = getelementptr inbounds i8, ptr %2, i64 849112
  %mb_cr_size_x = getelementptr inbounds i8, ptr %2, i64 849108
  br label %for.body296

for.body296:                                      ; preds = %for.cond293.preheader, %if.end576
  %cmp294 = phi i1 [ true, %for.cond293.preheader ], [ false, %if.end576 ]
  %indvars.iv1237 = phi i64 [ 0, %for.cond293.preheader ], [ 2, %if.end576 ]
  %124 = lshr exact i64 %indvars.iv1237, 1
  %125 = load ptr, ptr %cof298, align 8
  %126 = add nuw nsw i64 %124, 1
  %arrayidx301 = getelementptr inbounds ptr, ptr %125, i64 %126
  %127 = load ptr, ptr %arrayidx301, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %m3) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %m3, i8 0, i64 32, i1 false)
  %128 = load ptr, ptr %qp_per_matrix, align 8
  %arrayidx304 = getelementptr inbounds [2 x i32], ptr %qpc.i.i, i64 0, i64 %124
  %129 = load i32, ptr %arrayidx304, align 4
  %add305 = add nsw i32 %129, 3
  %130 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add306 = add nsw i32 %add305, %130
  %idxprom307 = sext i32 %add306 to i64
  %arrayidx308 = getelementptr inbounds i32, ptr %128, i64 %idxprom307
  %131 = load i32, ptr %arrayidx308, align 4
  %132 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx317 = getelementptr inbounds i32, ptr %132, i64 %idxprom307
  %133 = load i32, ptr %arrayidx317, align 4
  %idxprom324 = sext i32 %133 to i64
  %arrayidx333 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %126, i64 %idxprom324
  %134 = shl nuw nsw i64 %indvars.iv1237, 2
  %shl372 = shl nuw nsw i64 16711680, %134
  %135 = trunc nuw nsw i64 %indvars.iv1237 to i32
  br label %for.body344

for.body344:                                      ; preds = %for.body296, %for.inc390
  %k.11200 = phi i32 [ 0, %for.body296 ], [ %inc391, %for.inc390 ]
  %coef_ctr.01199 = phi i32 [ -1, %for.body296 ], [ %add376, %for.inc390 ]
  store i32 8, ptr %context345, align 8
  %136 = load i32, ptr %is_intra_block, align 8
  %cmp347 = icmp eq i32 %136, 1
  %cond349 = select i1 %cmp347, i32 8, i32 13
  store i32 %cond349, ptr %currSE, align 8
  store i32 %135, ptr %is_v_block, align 4
  %137 = load ptr, ptr %partArr351, align 8
  %idxprom353 = zext nneg i32 %cond349 to i64
  %arrayidx354 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom353
  %138 = load i8, ptr %arrayidx354, align 1
  %idxprom355 = zext i8 %138 to i64
  %arrayidx356 = getelementptr inbounds %struct.datapartition, ptr %137, i64 %idxprom355
  %139 = load ptr, ptr %arrayidx356, align 8
  %ei_flag358 = getelementptr inbounds i8, ptr %139, i64 24
  %140 = load i32, ptr %ei_flag358, align 8
  %tobool359.not = icmp eq i32 %140, 0
  br i1 %tobool359.not, label %if.else362, label %if.then360

if.then360:                                       ; preds = %for.body344
  store ptr @linfo_levrun_c2x2, ptr %mapping361, align 8
  br label %if.end364

if.else362:                                       ; preds = %for.body344
  store ptr @readRunLevel_CABAC, ptr %reading363, align 8
  br label %if.end364

if.end364:                                        ; preds = %if.else362, %if.then360
  %readSyntaxElement365 = getelementptr inbounds i8, ptr %arrayidx356, i64 40
  %141 = load ptr, ptr %readSyntaxElement365, align 8
  %call366 = call i32 %141(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx356) #14
  %142 = load i32, ptr %value1367, align 4
  %cmp368.not = icmp eq i32 %142, 0
  br i1 %cmp368.not, label %for.end392, label %for.inc390

for.inc390:                                       ; preds = %if.end364
  %143 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %143, %shl372
  store i64 %or, ptr %cbp_blk, align 8
  %144 = load i32, ptr %value2374, align 8
  %add375 = add i32 %coef_ctr.01199, 1
  %add376 = add i32 %add375, %144
  %idxprom377 = sext i32 %add376 to i64
  %arrayidx378 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %idxprom377
  %145 = load i8, ptr %arrayidx378, align 2
  %arrayidx383 = getelementptr inbounds i8, ptr %arrayidx378, i64 1
  %146 = load i8, ptr %arrayidx383, align 1
  %idxprom385 = zext i8 %145 to i64
  %idxprom387 = zext i8 %146 to i64
  %arrayidx388 = getelementptr inbounds [2 x [4 x i32]], ptr %m3, i64 0, i64 %idxprom385, i64 %idxprom387
  store i32 %142, ptr %arrayidx388, align 4
  %inc391 = add nuw nsw i32 %k.11200, 1
  %cmp337 = icmp ult i32 %k.11200, 8
  br i1 %cmp337, label %for.body344, label %for.end392

for.end392:                                       ; preds = %if.end364, %for.inc390
  %arrayidx325 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %126, i64 %idxprom324
  %InvLevelScale4x4297.0 = select i1 %cmp, ptr %arrayidx325, ptr %arrayidx333
  %147 = load i32, ptr %is_lossless.i, align 4
  %cmp394 = icmp eq i32 %147, 0
  %148 = load i32, ptr %m3, align 16
  br i1 %cmp394, label %if.then396, label %for.cond552.preheader.preheader

for.cond552.preheader.preheader:                  ; preds = %for.end392
  %149 = load ptr, ptr %cof298, align 8
  %arrayidx563 = getelementptr inbounds ptr, ptr %149, i64 %126
  %150 = load ptr, ptr %arrayidx563, align 8
  %151 = load ptr, ptr %150, align 8
  store i32 %148, ptr %151, align 4
  %152 = load i32, ptr %arrayidx399, align 16
  %153 = load ptr, ptr %cof298, align 8
  %arrayidx563.1 = getelementptr inbounds ptr, ptr %153, i64 %126
  %154 = load ptr, ptr %arrayidx563.1, align 8
  %155 = load ptr, ptr %154, align 8
  %arrayidx569.1 = getelementptr inbounds i8, ptr %155, i64 16
  store i32 %152, ptr %arrayidx569.1, align 4
  %156 = load i32, ptr %arrayidx405, align 4
  %157 = load ptr, ptr %cof298, align 8
  %arrayidx563.11229 = getelementptr inbounds ptr, ptr %157, i64 %126
  %158 = load ptr, ptr %arrayidx563.11229, align 8
  %arrayidx566.11230 = getelementptr inbounds i8, ptr %158, i64 32
  %159 = load ptr, ptr %arrayidx566.11230, align 8
  store i32 %156, ptr %159, align 4
  %160 = load i32, ptr %arrayidx407, align 4
  %161 = load ptr, ptr %cof298, align 8
  %arrayidx563.1.1 = getelementptr inbounds ptr, ptr %161, i64 %126
  %162 = load ptr, ptr %arrayidx563.1.1, align 8
  %arrayidx566.1.1 = getelementptr inbounds i8, ptr %162, i64 32
  %163 = load ptr, ptr %arrayidx566.1.1, align 8
  %arrayidx569.1.1 = getelementptr inbounds i8, ptr %163, i64 16
  store i32 %160, ptr %arrayidx569.1.1, align 4
  %164 = load i32, ptr %arrayidx412, align 8
  %165 = load ptr, ptr %cof298, align 8
  %arrayidx563.2 = getelementptr inbounds ptr, ptr %165, i64 %126
  %166 = load ptr, ptr %arrayidx563.2, align 8
  %arrayidx566.2 = getelementptr inbounds i8, ptr %166, i64 64
  %167 = load ptr, ptr %arrayidx566.2, align 8
  store i32 %164, ptr %167, align 4
  %168 = load i32, ptr %arrayidx414, align 8
  %169 = load ptr, ptr %cof298, align 8
  %arrayidx563.1.2 = getelementptr inbounds ptr, ptr %169, i64 %126
  %170 = load ptr, ptr %arrayidx563.1.2, align 8
  %arrayidx566.1.2 = getelementptr inbounds i8, ptr %170, i64 64
  %171 = load ptr, ptr %arrayidx566.1.2, align 8
  %arrayidx569.1.2 = getelementptr inbounds i8, ptr %171, i64 16
  store i32 %168, ptr %arrayidx569.1.2, align 4
  %172 = load i32, ptr %arrayidx419, align 4
  %173 = load ptr, ptr %cof298, align 8
  %arrayidx563.3 = getelementptr inbounds ptr, ptr %173, i64 %126
  %174 = load ptr, ptr %arrayidx563.3, align 8
  %arrayidx566.3 = getelementptr inbounds i8, ptr %174, i64 96
  %175 = load ptr, ptr %arrayidx566.3, align 8
  store i32 %172, ptr %175, align 4
  %176 = load i32, ptr %arrayidx421, align 4
  %177 = load ptr, ptr %cof298, align 8
  %arrayidx563.1.3 = getelementptr inbounds ptr, ptr %177, i64 %126
  %178 = load ptr, ptr %arrayidx563.1.3, align 8
  %arrayidx566.1.3 = getelementptr inbounds i8, ptr %178, i64 96
  %179 = load ptr, ptr %arrayidx566.1.3, align 8
  %arrayidx569.1.3 = getelementptr inbounds i8, ptr %179, i64 16
  store i32 %176, ptr %arrayidx569.1.3, align 4
  br label %if.end576

if.then396:                                       ; preds = %for.end392
  %180 = load i32, ptr %arrayidx399, align 16
  %add401 = add nsw i32 %180, %148
  %181 = load i32, ptr %arrayidx405, align 4
  %182 = load i32, ptr %arrayidx407, align 4
  %add408 = add nsw i32 %182, %181
  %183 = load i32, ptr %arrayidx412, align 8
  %184 = load i32, ptr %arrayidx414, align 8
  %add415 = add nsw i32 %184, %183
  %185 = load i32, ptr %arrayidx419, align 4
  %186 = load i32, ptr %arrayidx421, align 4
  %add422 = add nsw i32 %186, %185
  %sub429 = sub nsw i32 %148, %180
  %sub436 = sub nsw i32 %181, %182
  %sub443 = sub nsw i32 %183, %184
  %sub450 = sub nsw i32 %185, %186
  %arrayidx499 = getelementptr inbounds i8, ptr %127, i64 32
  %arrayidx506 = getelementptr inbounds i8, ptr %127, i64 64
  %arrayidx513 = getelementptr inbounds i8, ptr %127, i64 96
  %add463 = add nsw i32 %add415, %add401
  %sub471 = sub nsw i32 %add401, %add415
  %sub479 = sub nsw i32 %add408, %add422
  %add487 = add nsw i32 %add422, %add408
  %add491 = add nsw i32 %add487, %add463
  %187 = load ptr, ptr %127, align 8
  store i32 %add491, ptr %187, align 4
  %add498 = add nsw i32 %sub479, %sub471
  %188 = load ptr, ptr %arrayidx499, align 8
  store i32 %add498, ptr %188, align 4
  %sub505 = sub nsw i32 %sub471, %sub479
  %189 = load ptr, ptr %arrayidx506, align 8
  store i32 %sub505, ptr %189, align 4
  %sub512 = sub nsw i32 %add463, %add487
  %190 = load ptr, ptr %arrayidx513, align 8
  store i32 %sub512, ptr %190, align 4
  %add463.1 = add nsw i32 %sub443, %sub429
  %sub471.1 = sub nsw i32 %sub429, %sub443
  %sub479.1 = sub nsw i32 %sub436, %sub450
  %add487.1 = add nsw i32 %sub450, %sub436
  %add491.1 = add nsw i32 %add487.1, %add463.1
  %191 = load ptr, ptr %127, align 8
  %arrayidx495.1 = getelementptr inbounds i8, ptr %191, i64 16
  store i32 %add491.1, ptr %arrayidx495.1, align 4
  %add498.1 = add nsw i32 %sub479.1, %sub471.1
  %192 = load ptr, ptr %arrayidx499, align 8
  %arrayidx502.1 = getelementptr inbounds i8, ptr %192, i64 16
  store i32 %add498.1, ptr %arrayidx502.1, align 4
  %sub505.1 = sub nsw i32 %sub471.1, %sub479.1
  %193 = load ptr, ptr %arrayidx506, align 8
  %arrayidx509.1 = getelementptr inbounds i8, ptr %193, i64 16
  store i32 %sub505.1, ptr %arrayidx509.1, align 4
  %sub512.1 = sub nsw i32 %add463.1, %add487.1
  %194 = load ptr, ptr %arrayidx513, align 8
  %arrayidx516.1 = getelementptr inbounds i8, ptr %194, i64 16
  store i32 %sub512.1, ptr %arrayidx516.1, align 4
  %195 = load i32, ptr %mb_cr_size_y, align 8
  %cmp5211206 = icmp sgt i32 %195, 0
  br i1 %cmp5211206, label %for.cond524.preheader.lr.ph, label %if.end576

for.cond524.preheader.lr.ph:                      ; preds = %if.then396
  %196 = load i32, ptr %mb_cr_size_x, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %for.cond524.preheader, label %if.end576

for.cond524.preheader:                            ; preds = %for.cond524.preheader.lr.ph, %for.inc544
  %198 = phi i32 [ %205, %for.inc544 ], [ %195, %for.cond524.preheader.lr.ph ]
  %199 = phi i32 [ %206, %for.inc544 ], [ %196, %for.cond524.preheader.lr.ph ]
  %indvars.iv1234 = phi i64 [ %indvars.iv.next1235, %for.inc544 ], [ 0, %for.cond524.preheader.lr.ph ]
  %cmp5251204 = icmp sgt i32 %199, 0
  br i1 %cmp5251204, label %for.body527.lr.ph, label %for.inc544

for.body527.lr.ph:                                ; preds = %for.cond524.preheader
  %arrayidx529 = getelementptr inbounds ptr, ptr %127, i64 %indvars.iv1234
  br label %for.body527

for.body527:                                      ; preds = %for.body527.lr.ph, %for.body527
  %indvars.iv = phi i64 [ 0, %for.body527.lr.ph ], [ %indvars.iv.next, %for.body527 ]
  %200 = load ptr, ptr %arrayidx529, align 8
  %arrayidx531 = getelementptr inbounds i32, ptr %200, i64 %indvars.iv
  %201 = load i32, ptr %arrayidx531, align 4
  %202 = load i32, ptr %InvLevelScale4x4297.0, align 4
  %mul534 = mul nsw i32 %202, %201
  %shl535 = shl i32 %mul534, %131
  %add.i1177 = add nsw i32 %shl535, 32
  %shr.i = ashr i32 %add.i1177, 6
  store i32 %shr.i, ptr %arrayidx531, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 4
  %203 = load i32, ptr %mb_cr_size_x, align 4
  %204 = sext i32 %203 to i64
  %cmp525 = icmp slt i64 %indvars.iv.next, %204
  br i1 %cmp525, label %for.body527, label %for.inc544.loopexit

for.inc544.loopexit:                              ; preds = %for.body527
  %.pre1255 = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc544

for.inc544:                                       ; preds = %for.inc544.loopexit, %for.cond524.preheader
  %205 = phi i32 [ %.pre1255, %for.inc544.loopexit ], [ %198, %for.cond524.preheader ]
  %206 = phi i32 [ %203, %for.inc544.loopexit ], [ %199, %for.cond524.preheader ]
  %indvars.iv.next1235 = add nuw nsw i64 %indvars.iv1234, 4
  %207 = sext i32 %205 to i64
  %cmp521 = icmp slt i64 %indvars.iv.next1235, %207
  br i1 %cmp521, label %for.cond524.preheader, label %if.end576, !llvm.loop !5

if.end576:                                        ; preds = %for.inc544, %for.cond524.preheader.lr.ph, %for.cond552.preheader.preheader, %if.then396
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %m3) #14
  br i1 %cmp294, label %for.body296, label %if.end580

if.end580:                                        ; preds = %if.end576
  %cmp581 = icmp slt i32 %cbp.1, 32
  br i1 %cmp581, label %if.end838, label %if.else584

if.else584:                                       ; preds = %if.end580
  store i32 7, ptr %context345, align 8
  %208 = load i32, ptr %is_intra_block, align 8
  %tobool587.not = icmp eq i32 %208, 0
  %cond588 = select i1 %tobool587.not, i32 15, i32 10
  store i32 %cond588, ptr %currSE, align 8
  %209 = load ptr, ptr %partArr351, align 8
  %idxprom592 = zext nneg i32 %cond588 to i64
  %arrayidx593 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom592
  %210 = load i8, ptr %arrayidx593, align 1
  %idxprom594 = zext i8 %210 to i64
  %arrayidx595 = getelementptr inbounds %struct.datapartition, ptr %209, i64 %idxprom594
  %211 = load ptr, ptr %arrayidx595, align 8
  %ei_flag597 = getelementptr inbounds i8, ptr %211, i64 24
  %212 = load i32, ptr %ei_flag597, align 8
  %tobool598.not = icmp eq i32 %212, 0
  br i1 %tobool598.not, label %if.else601, label %if.then599

if.then599:                                       ; preds = %if.else584
  store ptr @linfo_levrun_inter, ptr %mapping361, align 8
  br label %if.end603

if.else601:                                       ; preds = %if.else584
  store ptr @readRunLevel_CABAC, ptr %reading363, align 8
  br label %if.end603

if.end603:                                        ; preds = %if.else601, %if.then599
  %213 = load i32, ptr %is_lossless.i, align 4
  %cmp605 = icmp eq i32 %213, 0
  %num_blk8x8_uv = getelementptr inbounds i8, ptr %2, i64 849096
  %214 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp6091217 = icmp sgt i32 %214, 0
  br i1 %cmp605, label %for.cond608.preheader, label %for.cond737.preheader

for.cond737.preheader:                            ; preds = %if.end603
  br i1 %cmp6091217, label %for.body741.lr.ph, label %if.end838

for.body741.lr.ph:                                ; preds = %for.cond737.preheader
  %num_uv_blocks742 = getelementptr inbounds i8, ptr %2, i64 849100
  %idxprom751 = sext i32 %sub to i64
  %arrayidx765 = select i1 %8, ptr getelementptr inbounds (i8, ptr @SNGL_SCAN, i64 2), ptr getelementptr inbounds (i8, ptr @FIELD_SCAN, i64 2)
  %subblock_y774 = getelementptr inbounds i8, ptr %currMB, i64 64
  %subblock_x782 = getelementptr inbounds i8, ptr %currMB, i64 60
  %readSyntaxElement792 = getelementptr inbounds i8, ptr %arrayidx595, i64 40
  br label %for.body741

for.cond608.preheader:                            ; preds = %if.end603
  br i1 %cmp6091217, label %for.body611.lr.ph, label %if.end838

for.body611.lr.ph:                                ; preds = %for.cond608.preheader
  %num_uv_blocks = getelementptr inbounds i8, ptr %2, i64 849100
  %idxprom643 = sext i32 %sub to i64
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  %arrayidx671 = select i1 %8, ptr getelementptr inbounds (i8, ptr @SNGL_SCAN, i64 2), ptr getelementptr inbounds (i8, ptr @FIELD_SCAN, i64 2)
  %readSyntaxElement682 = getelementptr inbounds i8, ptr %arrayidx595, i64 40
  %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter = select i1 %cmp, ptr %InvLevelScale4x4_Intra, ptr %InvLevelScale4x4_Inter
  br label %for.body611

for.body611:                                      ; preds = %for.body611.lr.ph, %for.inc730.3
  %indvars.iv1252 = phi i64 [ 0, %for.body611.lr.ph ], [ %indvars.iv.next1253, %for.inc730.3 ]
  %215 = load i32, ptr %num_uv_blocks, align 4
  %216 = sext i32 %215 to i64
  %cmp613 = icmp sge i64 %indvars.iv1252, %216
  %conv614 = zext i1 %cmp613 to i32
  store i32 %conv614, ptr %is_v_block, align 4
  %add619 = select i1 %cmp613, i64 2, i64 1
  %idxprom622 = zext i1 %cmp613 to i64
  %arrayidx623 = getelementptr inbounds [2 x i32], ptr %qp_rem_uv, i64 0, i64 %idxprom622
  %217 = load i32, ptr %arrayidx623, align 4
  %idxprom624 = sext i32 %217 to i64
  %arrayidx635 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter, i64 0, i64 %add619, i64 %idxprom624
  %arrayidx711 = getelementptr inbounds [2 x i32], ptr %qp_per_uv, i64 0, i64 %idxprom622
  %arrayidx648 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 0
  %218 = load i8, ptr %arrayidx648, align 4
  %conv649 = zext i8 %218 to i64
  %arrayidx655 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 0
  %219 = load i8, ptr %arrayidx655, align 4
  %conv656 = zext i8 %219 to i64
  %arrayidx662 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 0
  %220 = load i8, ptr %arrayidx662, align 4
  %conv663 = zext i8 %220 to i32
  store i32 %conv663, ptr %subblock_y, align 8
  %arrayidx669 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 0
  %221 = load i8, ptr %arrayidx669, align 4
  %conv670 = zext i8 %221 to i32
  store i32 %conv670, ptr %subblock_x, align 4
  %arrayidx691 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1252, i64 0
  %.idx1143 = shl nuw nsw i64 %conv656, 5
  %.idx1144 = shl nuw nsw i64 %conv649, 4
  br label %for.body681

for.body681:                                      ; preds = %for.body611, %for.inc727
  %k.21215 = phi i32 [ 0, %for.body611 ], [ %inc728, %for.inc727 ]
  %pos_scan_4x4.21214 = phi ptr [ %arrayidx671, %for.body611 ], [ %incdec.ptr703, %for.inc727 ]
  %222 = load ptr, ptr %readSyntaxElement682, align 8
  %call683 = call i32 %222(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %223 = load i32, ptr %value1367, align 4
  %cmp685.not = icmp eq i32 %223, 0
  br i1 %cmp685.not, label %for.inc730, label %for.inc727

for.inc727:                                       ; preds = %for.body681
  %224 = load i8, ptr %arrayidx691, align 4
  %idxprom.i1179 = zext nneg i8 %224 to i64
  %arrayidx.i1180 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1179
  %225 = load i64, ptr %arrayidx.i1180, align 8
  %226 = load i64, ptr %cbp_blk, align 8
  %or696 = or i64 %226, %225
  store i64 %or696, ptr %cbp_blk, align 8
  %227 = load i32, ptr %value2374, align 8
  %shl698 = shl i32 %227, 1
  %idx.ext699 = sext i32 %shl698 to i64
  %add.ptr700 = getelementptr inbounds i8, ptr %pos_scan_4x4.21214, i64 %idx.ext699
  %incdec.ptr701 = getelementptr inbounds i8, ptr %add.ptr700, i64 1
  %228 = load i8, ptr %add.ptr700, align 1
  %conv702 = zext i8 %228 to i64
  %incdec.ptr703 = getelementptr inbounds i8, ptr %add.ptr700, i64 2
  %229 = load i8, ptr %incdec.ptr701, align 1
  %conv704 = zext i8 %229 to i64
  %arrayidx708 = getelementptr inbounds [4 x i32], ptr %arrayidx635, i64 %conv704, i64 %conv702
  %230 = load i32, ptr %arrayidx708, align 4
  %mul709 = mul nsw i32 %230, %223
  %231 = load i32, ptr %arrayidx711, align 4
  %shl712 = shl i32 %mul709, %231
  %add.i1181 = add nsw i32 %shl712, 8
  %shr.i1182 = ashr i32 %add.i1181, 4
  %232 = load ptr, ptr %cof298, align 8
  %arrayidx717 = getelementptr inbounds ptr, ptr %232, i64 %add619
  %233 = load ptr, ptr %arrayidx717, align 8
  %234 = getelementptr inbounds i8, ptr %233, i64 %.idx1143
  %arrayidx721 = getelementptr inbounds ptr, ptr %234, i64 %conv704
  %235 = load ptr, ptr %arrayidx721, align 8
  %236 = getelementptr inbounds i8, ptr %235, i64 %.idx1144
  %arrayidx725 = getelementptr inbounds i32, ptr %236, i64 %conv702
  store i32 %shr.i1182, ptr %arrayidx725, align 4
  %inc728 = add nuw nsw i32 %k.21215, 1
  %cmp674 = icmp ult i32 %k.21215, 15
  br i1 %cmp674, label %for.body681, label %for.inc730

for.inc730:                                       ; preds = %for.body681, %for.inc727
  %arrayidx648.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 1
  %237 = load i8, ptr %arrayidx648.1, align 1
  %conv649.1 = zext i8 %237 to i64
  %arrayidx655.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 1
  %238 = load i8, ptr %arrayidx655.1, align 1
  %conv656.1 = zext i8 %238 to i64
  %arrayidx662.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 1
  %239 = load i8, ptr %arrayidx662.1, align 1
  %conv663.1 = zext i8 %239 to i32
  store i32 %conv663.1, ptr %subblock_y, align 8
  %arrayidx669.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 1
  %240 = load i8, ptr %arrayidx669.1, align 1
  %conv670.1 = zext i8 %240 to i32
  store i32 %conv670.1, ptr %subblock_x, align 4
  %arrayidx691.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1252, i64 1
  %.idx1143.1 = shl nuw nsw i64 %conv656.1, 5
  %.idx1144.1 = shl nuw nsw i64 %conv649.1, 4
  br label %for.body681.1

for.body681.1:                                    ; preds = %for.inc727.1, %for.inc730
  %k.21215.1 = phi i32 [ 0, %for.inc730 ], [ %inc728.1, %for.inc727.1 ]
  %pos_scan_4x4.21214.1 = phi ptr [ %arrayidx671, %for.inc730 ], [ %incdec.ptr703.1, %for.inc727.1 ]
  %241 = load ptr, ptr %readSyntaxElement682, align 8
  %call683.1 = call i32 %241(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %242 = load i32, ptr %value1367, align 4
  %cmp685.not.1 = icmp eq i32 %242, 0
  br i1 %cmp685.not.1, label %for.inc730.1, label %for.inc727.1

for.inc727.1:                                     ; preds = %for.body681.1
  %243 = load i8, ptr %arrayidx691.1, align 1
  %idxprom.i1179.1 = zext nneg i8 %243 to i64
  %arrayidx.i1180.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1179.1
  %244 = load i64, ptr %arrayidx.i1180.1, align 8
  %245 = load i64, ptr %cbp_blk, align 8
  %or696.1 = or i64 %245, %244
  store i64 %or696.1, ptr %cbp_blk, align 8
  %246 = load i32, ptr %value2374, align 8
  %shl698.1 = shl i32 %246, 1
  %idx.ext699.1 = sext i32 %shl698.1 to i64
  %add.ptr700.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.21214.1, i64 %idx.ext699.1
  %incdec.ptr701.1 = getelementptr inbounds i8, ptr %add.ptr700.1, i64 1
  %247 = load i8, ptr %add.ptr700.1, align 1
  %conv702.1 = zext i8 %247 to i64
  %incdec.ptr703.1 = getelementptr inbounds i8, ptr %add.ptr700.1, i64 2
  %248 = load i8, ptr %incdec.ptr701.1, align 1
  %conv704.1 = zext i8 %248 to i64
  %arrayidx708.1 = getelementptr inbounds [4 x i32], ptr %arrayidx635, i64 %conv704.1, i64 %conv702.1
  %249 = load i32, ptr %arrayidx708.1, align 4
  %mul709.1 = mul nsw i32 %249, %242
  %250 = load i32, ptr %arrayidx711, align 4
  %shl712.1 = shl i32 %mul709.1, %250
  %add.i1181.1 = add nsw i32 %shl712.1, 8
  %shr.i1182.1 = ashr i32 %add.i1181.1, 4
  %251 = load ptr, ptr %cof298, align 8
  %arrayidx717.1 = getelementptr inbounds ptr, ptr %251, i64 %add619
  %252 = load ptr, ptr %arrayidx717.1, align 8
  %253 = getelementptr inbounds i8, ptr %252, i64 %.idx1143.1
  %arrayidx721.1 = getelementptr inbounds ptr, ptr %253, i64 %conv704.1
  %254 = load ptr, ptr %arrayidx721.1, align 8
  %255 = getelementptr inbounds i8, ptr %254, i64 %.idx1144.1
  %arrayidx725.1 = getelementptr inbounds i32, ptr %255, i64 %conv702.1
  store i32 %shr.i1182.1, ptr %arrayidx725.1, align 4
  %inc728.1 = add nuw nsw i32 %k.21215.1, 1
  %cmp674.1 = icmp ult i32 %k.21215.1, 15
  br i1 %cmp674.1, label %for.body681.1, label %for.inc730.1

for.inc730.1:                                     ; preds = %for.body681.1, %for.inc727.1
  %arrayidx648.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 2
  %256 = load i8, ptr %arrayidx648.2, align 2
  %conv649.2 = zext i8 %256 to i64
  %arrayidx655.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 2
  %257 = load i8, ptr %arrayidx655.2, align 2
  %conv656.2 = zext i8 %257 to i64
  %arrayidx662.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 2
  %258 = load i8, ptr %arrayidx662.2, align 2
  %conv663.2 = zext i8 %258 to i32
  store i32 %conv663.2, ptr %subblock_y, align 8
  %arrayidx669.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 2
  %259 = load i8, ptr %arrayidx669.2, align 2
  %conv670.2 = zext i8 %259 to i32
  store i32 %conv670.2, ptr %subblock_x, align 4
  %arrayidx691.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1252, i64 2
  %.idx1143.2 = shl nuw nsw i64 %conv656.2, 5
  %.idx1144.2 = shl nuw nsw i64 %conv649.2, 4
  br label %for.body681.2

for.body681.2:                                    ; preds = %for.inc727.2, %for.inc730.1
  %k.21215.2 = phi i32 [ 0, %for.inc730.1 ], [ %inc728.2, %for.inc727.2 ]
  %pos_scan_4x4.21214.2 = phi ptr [ %arrayidx671, %for.inc730.1 ], [ %incdec.ptr703.2, %for.inc727.2 ]
  %260 = load ptr, ptr %readSyntaxElement682, align 8
  %call683.2 = call i32 %260(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %261 = load i32, ptr %value1367, align 4
  %cmp685.not.2 = icmp eq i32 %261, 0
  br i1 %cmp685.not.2, label %for.inc730.2, label %for.inc727.2

for.inc727.2:                                     ; preds = %for.body681.2
  %262 = load i8, ptr %arrayidx691.2, align 2
  %idxprom.i1179.2 = zext nneg i8 %262 to i64
  %arrayidx.i1180.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1179.2
  %263 = load i64, ptr %arrayidx.i1180.2, align 8
  %264 = load i64, ptr %cbp_blk, align 8
  %or696.2 = or i64 %264, %263
  store i64 %or696.2, ptr %cbp_blk, align 8
  %265 = load i32, ptr %value2374, align 8
  %shl698.2 = shl i32 %265, 1
  %idx.ext699.2 = sext i32 %shl698.2 to i64
  %add.ptr700.2 = getelementptr inbounds i8, ptr %pos_scan_4x4.21214.2, i64 %idx.ext699.2
  %incdec.ptr701.2 = getelementptr inbounds i8, ptr %add.ptr700.2, i64 1
  %266 = load i8, ptr %add.ptr700.2, align 1
  %conv702.2 = zext i8 %266 to i64
  %incdec.ptr703.2 = getelementptr inbounds i8, ptr %add.ptr700.2, i64 2
  %267 = load i8, ptr %incdec.ptr701.2, align 1
  %conv704.2 = zext i8 %267 to i64
  %arrayidx708.2 = getelementptr inbounds [4 x i32], ptr %arrayidx635, i64 %conv704.2, i64 %conv702.2
  %268 = load i32, ptr %arrayidx708.2, align 4
  %mul709.2 = mul nsw i32 %268, %261
  %269 = load i32, ptr %arrayidx711, align 4
  %shl712.2 = shl i32 %mul709.2, %269
  %add.i1181.2 = add nsw i32 %shl712.2, 8
  %shr.i1182.2 = ashr i32 %add.i1181.2, 4
  %270 = load ptr, ptr %cof298, align 8
  %arrayidx717.2 = getelementptr inbounds ptr, ptr %270, i64 %add619
  %271 = load ptr, ptr %arrayidx717.2, align 8
  %272 = getelementptr inbounds i8, ptr %271, i64 %.idx1143.2
  %arrayidx721.2 = getelementptr inbounds ptr, ptr %272, i64 %conv704.2
  %273 = load ptr, ptr %arrayidx721.2, align 8
  %274 = getelementptr inbounds i8, ptr %273, i64 %.idx1144.2
  %arrayidx725.2 = getelementptr inbounds i32, ptr %274, i64 %conv702.2
  store i32 %shr.i1182.2, ptr %arrayidx725.2, align 4
  %inc728.2 = add nuw nsw i32 %k.21215.2, 1
  %cmp674.2 = icmp ult i32 %k.21215.2, 15
  br i1 %cmp674.2, label %for.body681.2, label %for.inc730.2

for.inc730.2:                                     ; preds = %for.body681.2, %for.inc727.2
  %arrayidx648.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 3
  %275 = load i8, ptr %arrayidx648.3, align 1
  %conv649.3 = zext i8 %275 to i64
  %arrayidx655.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 3
  %276 = load i8, ptr %arrayidx655.3, align 1
  %conv656.3 = zext i8 %276 to i64
  %arrayidx662.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 3
  %277 = load i8, ptr %arrayidx662.3, align 1
  %conv663.3 = zext i8 %277 to i32
  store i32 %conv663.3, ptr %subblock_y, align 8
  %arrayidx669.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom643, i64 %indvars.iv1252, i64 3
  %278 = load i8, ptr %arrayidx669.3, align 1
  %conv670.3 = zext i8 %278 to i32
  store i32 %conv670.3, ptr %subblock_x, align 4
  %arrayidx691.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1252, i64 3
  %.idx1143.3 = shl nuw nsw i64 %conv656.3, 5
  %.idx1144.3 = shl nuw nsw i64 %conv649.3, 4
  br label %for.body681.3

for.body681.3:                                    ; preds = %for.inc727.3, %for.inc730.2
  %k.21215.3 = phi i32 [ 0, %for.inc730.2 ], [ %inc728.3, %for.inc727.3 ]
  %pos_scan_4x4.21214.3 = phi ptr [ %arrayidx671, %for.inc730.2 ], [ %incdec.ptr703.3, %for.inc727.3 ]
  %279 = load ptr, ptr %readSyntaxElement682, align 8
  %call683.3 = call i32 %279(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %280 = load i32, ptr %value1367, align 4
  %cmp685.not.3 = icmp eq i32 %280, 0
  br i1 %cmp685.not.3, label %for.inc730.3, label %for.inc727.3

for.inc727.3:                                     ; preds = %for.body681.3
  %281 = load i8, ptr %arrayidx691.3, align 1
  %idxprom.i1179.3 = zext nneg i8 %281 to i64
  %arrayidx.i1180.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1179.3
  %282 = load i64, ptr %arrayidx.i1180.3, align 8
  %283 = load i64, ptr %cbp_blk, align 8
  %or696.3 = or i64 %283, %282
  store i64 %or696.3, ptr %cbp_blk, align 8
  %284 = load i32, ptr %value2374, align 8
  %shl698.3 = shl i32 %284, 1
  %idx.ext699.3 = sext i32 %shl698.3 to i64
  %add.ptr700.3 = getelementptr inbounds i8, ptr %pos_scan_4x4.21214.3, i64 %idx.ext699.3
  %incdec.ptr701.3 = getelementptr inbounds i8, ptr %add.ptr700.3, i64 1
  %285 = load i8, ptr %add.ptr700.3, align 1
  %conv702.3 = zext i8 %285 to i64
  %incdec.ptr703.3 = getelementptr inbounds i8, ptr %add.ptr700.3, i64 2
  %286 = load i8, ptr %incdec.ptr701.3, align 1
  %conv704.3 = zext i8 %286 to i64
  %arrayidx708.3 = getelementptr inbounds [4 x i32], ptr %arrayidx635, i64 %conv704.3, i64 %conv702.3
  %287 = load i32, ptr %arrayidx708.3, align 4
  %mul709.3 = mul nsw i32 %287, %280
  %288 = load i32, ptr %arrayidx711, align 4
  %shl712.3 = shl i32 %mul709.3, %288
  %add.i1181.3 = add nsw i32 %shl712.3, 8
  %shr.i1182.3 = ashr i32 %add.i1181.3, 4
  %289 = load ptr, ptr %cof298, align 8
  %arrayidx717.3 = getelementptr inbounds ptr, ptr %289, i64 %add619
  %290 = load ptr, ptr %arrayidx717.3, align 8
  %291 = getelementptr inbounds i8, ptr %290, i64 %.idx1143.3
  %arrayidx721.3 = getelementptr inbounds ptr, ptr %291, i64 %conv704.3
  %292 = load ptr, ptr %arrayidx721.3, align 8
  %293 = getelementptr inbounds i8, ptr %292, i64 %.idx1144.3
  %arrayidx725.3 = getelementptr inbounds i32, ptr %293, i64 %conv702.3
  store i32 %shr.i1182.3, ptr %arrayidx725.3, align 4
  %inc728.3 = add nuw nsw i32 %k.21215.3, 1
  %cmp674.3 = icmp ult i32 %k.21215.3, 15
  br i1 %cmp674.3, label %for.body681.3, label %for.inc730.3

for.inc730.3:                                     ; preds = %for.body681.3, %for.inc727.3
  %indvars.iv.next1253 = add nuw nsw i64 %indvars.iv1252, 1
  %294 = load i32, ptr %num_blk8x8_uv, align 8
  %295 = sext i32 %294 to i64
  %cmp609 = icmp slt i64 %indvars.iv.next1253, %295
  br i1 %cmp609, label %for.body611, label %if.end838

for.body741:                                      ; preds = %for.body741.lr.ph, %for.inc831.3
  %indvars.iv1246 = phi i64 [ 0, %for.body741.lr.ph ], [ %indvars.iv.next1247, %for.inc831.3 ]
  %296 = load i32, ptr %num_uv_blocks742, align 4
  %297 = sext i32 %296 to i64
  %cmp744 = icmp sge i64 %indvars.iv1246, %297
  %conv745 = zext i1 %cmp744 to i32
  store i32 %conv745, ptr %is_v_block, align 4
  %add816 = select i1 %cmp744, i64 2, i64 1
  %arrayidx756 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 0
  %298 = load i8, ptr %arrayidx756, align 4
  %conv757 = zext i8 %298 to i64
  %arrayidx763 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 0
  %299 = load i8, ptr %arrayidx763, align 4
  %conv764 = zext i8 %299 to i64
  %arrayidx772 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 0
  %300 = load i8, ptr %arrayidx772, align 4
  %conv773 = zext i8 %300 to i32
  store i32 %conv773, ptr %subblock_y774, align 8
  %arrayidx780 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 0
  %301 = load i8, ptr %arrayidx780, align 4
  %conv781 = zext i8 %301 to i32
  store i32 %conv781, ptr %subblock_x782, align 4
  %arrayidx801 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1246, i64 0
  %.idx = shl nuw nsw i64 %conv764, 5
  %.idx1142 = shl nuw nsw i64 %conv757, 4
  br label %for.body791

for.body791:                                      ; preds = %for.body741, %for.inc828
  %k.31210 = phi i32 [ 0, %for.body741 ], [ %inc829, %for.inc828 ]
  %pos_scan_4x4.41209 = phi ptr [ %arrayidx765, %for.body741 ], [ %incdec.ptr813, %for.inc828 ]
  %302 = load ptr, ptr %readSyntaxElement792, align 8
  %call793 = call i32 %302(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %303 = load i32, ptr %value1367, align 4
  %cmp795.not = icmp eq i32 %303, 0
  br i1 %cmp795.not, label %for.inc831, label %for.inc828

for.inc828:                                       ; preds = %for.body791
  %304 = load i8, ptr %arrayidx801, align 4
  %idxprom.i1185 = zext nneg i8 %304 to i64
  %arrayidx.i1186 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1185
  %305 = load i64, ptr %arrayidx.i1186, align 8
  %306 = load i64, ptr %cbp_blk, align 8
  %or806 = or i64 %306, %305
  store i64 %or806, ptr %cbp_blk, align 8
  %307 = load i32, ptr %value2374, align 8
  %shl808 = shl i32 %307, 1
  %idx.ext809 = sext i32 %shl808 to i64
  %add.ptr810 = getelementptr inbounds i8, ptr %pos_scan_4x4.41209, i64 %idx.ext809
  %incdec.ptr811 = getelementptr inbounds i8, ptr %add.ptr810, i64 1
  %308 = load i8, ptr %add.ptr810, align 1
  %conv812 = zext i8 %308 to i64
  %incdec.ptr813 = getelementptr inbounds i8, ptr %add.ptr810, i64 2
  %309 = load i8, ptr %incdec.ptr811, align 1
  %conv814 = zext i8 %309 to i64
  %310 = load ptr, ptr %cof298, align 8
  %arrayidx818 = getelementptr inbounds ptr, ptr %310, i64 %add816
  %311 = load ptr, ptr %arrayidx818, align 8
  %312 = getelementptr inbounds i8, ptr %311, i64 %.idx
  %arrayidx822 = getelementptr inbounds ptr, ptr %312, i64 %conv814
  %313 = load ptr, ptr %arrayidx822, align 8
  %314 = getelementptr inbounds i8, ptr %313, i64 %.idx1142
  %arrayidx826 = getelementptr inbounds i32, ptr %314, i64 %conv812
  store i32 %303, ptr %arrayidx826, align 4
  %inc829 = add nuw nsw i32 %k.31210, 1
  %cmp784 = icmp ult i32 %k.31210, 15
  br i1 %cmp784, label %for.body791, label %for.inc831

for.inc831:                                       ; preds = %for.body791, %for.inc828
  %arrayidx756.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 1
  %315 = load i8, ptr %arrayidx756.1, align 1
  %conv757.1 = zext i8 %315 to i64
  %arrayidx763.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 1
  %316 = load i8, ptr %arrayidx763.1, align 1
  %conv764.1 = zext i8 %316 to i64
  %arrayidx772.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 1
  %317 = load i8, ptr %arrayidx772.1, align 1
  %conv773.1 = zext i8 %317 to i32
  store i32 %conv773.1, ptr %subblock_y774, align 8
  %arrayidx780.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 1
  %318 = load i8, ptr %arrayidx780.1, align 1
  %conv781.1 = zext i8 %318 to i32
  store i32 %conv781.1, ptr %subblock_x782, align 4
  %arrayidx801.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1246, i64 1
  %.idx.1 = shl nuw nsw i64 %conv764.1, 5
  %.idx1142.1 = shl nuw nsw i64 %conv757.1, 4
  br label %for.body791.1

for.body791.1:                                    ; preds = %for.inc828.1, %for.inc831
  %k.31210.1 = phi i32 [ 0, %for.inc831 ], [ %inc829.1, %for.inc828.1 ]
  %pos_scan_4x4.41209.1 = phi ptr [ %arrayidx765, %for.inc831 ], [ %incdec.ptr813.1, %for.inc828.1 ]
  %319 = load ptr, ptr %readSyntaxElement792, align 8
  %call793.1 = call i32 %319(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %320 = load i32, ptr %value1367, align 4
  %cmp795.not.1 = icmp eq i32 %320, 0
  br i1 %cmp795.not.1, label %for.inc831.1, label %for.inc828.1

for.inc828.1:                                     ; preds = %for.body791.1
  %321 = load i8, ptr %arrayidx801.1, align 1
  %idxprom.i1185.1 = zext nneg i8 %321 to i64
  %arrayidx.i1186.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1185.1
  %322 = load i64, ptr %arrayidx.i1186.1, align 8
  %323 = load i64, ptr %cbp_blk, align 8
  %or806.1 = or i64 %323, %322
  store i64 %or806.1, ptr %cbp_blk, align 8
  %324 = load i32, ptr %value2374, align 8
  %shl808.1 = shl i32 %324, 1
  %idx.ext809.1 = sext i32 %shl808.1 to i64
  %add.ptr810.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.41209.1, i64 %idx.ext809.1
  %incdec.ptr811.1 = getelementptr inbounds i8, ptr %add.ptr810.1, i64 1
  %325 = load i8, ptr %add.ptr810.1, align 1
  %conv812.1 = zext i8 %325 to i64
  %incdec.ptr813.1 = getelementptr inbounds i8, ptr %add.ptr810.1, i64 2
  %326 = load i8, ptr %incdec.ptr811.1, align 1
  %conv814.1 = zext i8 %326 to i64
  %327 = load ptr, ptr %cof298, align 8
  %arrayidx818.1 = getelementptr inbounds ptr, ptr %327, i64 %add816
  %328 = load ptr, ptr %arrayidx818.1, align 8
  %329 = getelementptr inbounds i8, ptr %328, i64 %.idx.1
  %arrayidx822.1 = getelementptr inbounds ptr, ptr %329, i64 %conv814.1
  %330 = load ptr, ptr %arrayidx822.1, align 8
  %331 = getelementptr inbounds i8, ptr %330, i64 %.idx1142.1
  %arrayidx826.1 = getelementptr inbounds i32, ptr %331, i64 %conv812.1
  store i32 %320, ptr %arrayidx826.1, align 4
  %inc829.1 = add nuw nsw i32 %k.31210.1, 1
  %cmp784.1 = icmp ult i32 %k.31210.1, 15
  br i1 %cmp784.1, label %for.body791.1, label %for.inc831.1

for.inc831.1:                                     ; preds = %for.body791.1, %for.inc828.1
  %arrayidx756.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 2
  %332 = load i8, ptr %arrayidx756.2, align 2
  %conv757.2 = zext i8 %332 to i64
  %arrayidx763.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 2
  %333 = load i8, ptr %arrayidx763.2, align 2
  %conv764.2 = zext i8 %333 to i64
  %arrayidx772.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 2
  %334 = load i8, ptr %arrayidx772.2, align 2
  %conv773.2 = zext i8 %334 to i32
  store i32 %conv773.2, ptr %subblock_y774, align 8
  %arrayidx780.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 2
  %335 = load i8, ptr %arrayidx780.2, align 2
  %conv781.2 = zext i8 %335 to i32
  store i32 %conv781.2, ptr %subblock_x782, align 4
  %arrayidx801.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1246, i64 2
  %.idx.2 = shl nuw nsw i64 %conv764.2, 5
  %.idx1142.2 = shl nuw nsw i64 %conv757.2, 4
  br label %for.body791.2

for.body791.2:                                    ; preds = %for.inc828.2, %for.inc831.1
  %k.31210.2 = phi i32 [ 0, %for.inc831.1 ], [ %inc829.2, %for.inc828.2 ]
  %pos_scan_4x4.41209.2 = phi ptr [ %arrayidx765, %for.inc831.1 ], [ %incdec.ptr813.2, %for.inc828.2 ]
  %336 = load ptr, ptr %readSyntaxElement792, align 8
  %call793.2 = call i32 %336(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %337 = load i32, ptr %value1367, align 4
  %cmp795.not.2 = icmp eq i32 %337, 0
  br i1 %cmp795.not.2, label %for.inc831.2, label %for.inc828.2

for.inc828.2:                                     ; preds = %for.body791.2
  %338 = load i8, ptr %arrayidx801.2, align 2
  %idxprom.i1185.2 = zext nneg i8 %338 to i64
  %arrayidx.i1186.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1185.2
  %339 = load i64, ptr %arrayidx.i1186.2, align 8
  %340 = load i64, ptr %cbp_blk, align 8
  %or806.2 = or i64 %340, %339
  store i64 %or806.2, ptr %cbp_blk, align 8
  %341 = load i32, ptr %value2374, align 8
  %shl808.2 = shl i32 %341, 1
  %idx.ext809.2 = sext i32 %shl808.2 to i64
  %add.ptr810.2 = getelementptr inbounds i8, ptr %pos_scan_4x4.41209.2, i64 %idx.ext809.2
  %incdec.ptr811.2 = getelementptr inbounds i8, ptr %add.ptr810.2, i64 1
  %342 = load i8, ptr %add.ptr810.2, align 1
  %conv812.2 = zext i8 %342 to i64
  %incdec.ptr813.2 = getelementptr inbounds i8, ptr %add.ptr810.2, i64 2
  %343 = load i8, ptr %incdec.ptr811.2, align 1
  %conv814.2 = zext i8 %343 to i64
  %344 = load ptr, ptr %cof298, align 8
  %arrayidx818.2 = getelementptr inbounds ptr, ptr %344, i64 %add816
  %345 = load ptr, ptr %arrayidx818.2, align 8
  %346 = getelementptr inbounds i8, ptr %345, i64 %.idx.2
  %arrayidx822.2 = getelementptr inbounds ptr, ptr %346, i64 %conv814.2
  %347 = load ptr, ptr %arrayidx822.2, align 8
  %348 = getelementptr inbounds i8, ptr %347, i64 %.idx1142.2
  %arrayidx826.2 = getelementptr inbounds i32, ptr %348, i64 %conv812.2
  store i32 %337, ptr %arrayidx826.2, align 4
  %inc829.2 = add nuw nsw i32 %k.31210.2, 1
  %cmp784.2 = icmp ult i32 %k.31210.2, 15
  br i1 %cmp784.2, label %for.body791.2, label %for.inc831.2

for.inc831.2:                                     ; preds = %for.body791.2, %for.inc828.2
  %arrayidx756.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 3
  %349 = load i8, ptr %arrayidx756.3, align 1
  %conv757.3 = zext i8 %349 to i64
  %arrayidx763.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 3
  %350 = load i8, ptr %arrayidx763.3, align 1
  %conv764.3 = zext i8 %350 to i64
  %arrayidx772.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 3
  %351 = load i8, ptr %arrayidx772.3, align 1
  %conv773.3 = zext i8 %351 to i32
  store i32 %conv773.3, ptr %subblock_y774, align 8
  %arrayidx780.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom751, i64 %indvars.iv1246, i64 3
  %352 = load i8, ptr %arrayidx780.3, align 1
  %conv781.3 = zext i8 %352 to i32
  store i32 %conv781.3, ptr %subblock_x782, align 4
  %arrayidx801.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1246, i64 3
  %.idx.3 = shl nuw nsw i64 %conv764.3, 5
  %.idx1142.3 = shl nuw nsw i64 %conv757.3, 4
  br label %for.body791.3

for.body791.3:                                    ; preds = %for.inc828.3, %for.inc831.2
  %k.31210.3 = phi i32 [ 0, %for.inc831.2 ], [ %inc829.3, %for.inc828.3 ]
  %pos_scan_4x4.41209.3 = phi ptr [ %arrayidx765, %for.inc831.2 ], [ %incdec.ptr813.3, %for.inc828.3 ]
  %353 = load ptr, ptr %readSyntaxElement792, align 8
  %call793.3 = call i32 %353(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx595) #14
  %354 = load i32, ptr %value1367, align 4
  %cmp795.not.3 = icmp eq i32 %354, 0
  br i1 %cmp795.not.3, label %for.inc831.3, label %for.inc828.3

for.inc828.3:                                     ; preds = %for.body791.3
  %355 = load i8, ptr %arrayidx801.3, align 1
  %idxprom.i1185.3 = zext nneg i8 %355 to i64
  %arrayidx.i1186.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1185.3
  %356 = load i64, ptr %arrayidx.i1186.3, align 8
  %357 = load i64, ptr %cbp_blk, align 8
  %or806.3 = or i64 %357, %356
  store i64 %or806.3, ptr %cbp_blk, align 8
  %358 = load i32, ptr %value2374, align 8
  %shl808.3 = shl i32 %358, 1
  %idx.ext809.3 = sext i32 %shl808.3 to i64
  %add.ptr810.3 = getelementptr inbounds i8, ptr %pos_scan_4x4.41209.3, i64 %idx.ext809.3
  %incdec.ptr811.3 = getelementptr inbounds i8, ptr %add.ptr810.3, i64 1
  %359 = load i8, ptr %add.ptr810.3, align 1
  %conv812.3 = zext i8 %359 to i64
  %incdec.ptr813.3 = getelementptr inbounds i8, ptr %add.ptr810.3, i64 2
  %360 = load i8, ptr %incdec.ptr811.3, align 1
  %conv814.3 = zext i8 %360 to i64
  %361 = load ptr, ptr %cof298, align 8
  %arrayidx818.3 = getelementptr inbounds ptr, ptr %361, i64 %add816
  %362 = load ptr, ptr %arrayidx818.3, align 8
  %363 = getelementptr inbounds i8, ptr %362, i64 %.idx.3
  %arrayidx822.3 = getelementptr inbounds ptr, ptr %363, i64 %conv814.3
  %364 = load ptr, ptr %arrayidx822.3, align 8
  %365 = getelementptr inbounds i8, ptr %364, i64 %.idx1142.3
  %arrayidx826.3 = getelementptr inbounds i32, ptr %365, i64 %conv812.3
  store i32 %354, ptr %arrayidx826.3, align 4
  %inc829.3 = add nuw nsw i32 %k.31210.3, 1
  %cmp784.3 = icmp ult i32 %k.31210.3, 15
  br i1 %cmp784.3, label %for.body791.3, label %for.inc831.3

for.inc831.3:                                     ; preds = %for.body791.3, %for.inc828.3
  %indvars.iv.next1247 = add nuw nsw i64 %indvars.iv1246, 1
  %366 = load i32, ptr %num_blk8x8_uv, align 8
  %367 = sext i32 %366 to i64
  %cmp739 = icmp slt i64 %indvars.iv.next1247, %367
  br i1 %cmp739, label %for.body741, label %if.end838

if.end838:                                        ; preds = %for.inc831.3, %for.inc730.3, %for.cond737.preheader, %for.cond608.preheader, %update_qp.exit, %if.end289, %if.end580
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CABAC_400(ptr noundef %currMB) #3 {
entry:
  %up.i339 = alloca %struct.pix_pos, align 4
  %left.i340 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %0 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %1 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %2 = load ptr, ptr %p_Vid1, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %3 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %3, 1
  %structure = getelementptr inbounds i8, ptr %2, i64 848876
  %4 = load i32, ptr %structure, align 4
  %cmp2 = icmp eq i32 %4, 0
  %.sink385.sroa.gep = getelementptr inbounds i8, ptr %currSE, i64 32
  %.sink385.sroa.gep387 = getelementptr inbounds i8, ptr %currSE, i64 40
  br i1 %cmp2, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %5 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %5
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %6 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %7 = load i16, ptr %mb_type, align 8
  switch i16 %7, label %lor.end [
    i16 10, label %if.else137
    i16 14, label %if.else137
    i16 9, label %8
    i16 12, label %8
    i16 13, label %8
  ]

8:                                                ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %8
  %9 = phi i32 [ 6, %8 ], [ 11, %land.end.thread ]
  store i32 %9, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %10 = load ptr, ptr %partArr, align 8
  %idxprom28 = zext nneg i32 %9 to i64
  %arrayidx29 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom28
  %11 = load i8, ptr %arrayidx29, align 1
  %idxprom30 = zext i8 %11 to i64
  %arrayidx31 = getelementptr inbounds %struct.datapartition, ptr %10, i64 %idxprom30
  %12 = load ptr, ptr %arrayidx31, align 8
  %ei_flag = getelementptr inbounds i8, ptr %12, i64 24
  %13 = load i32, ptr %ei_flag, align 8
  %tobool32.not = icmp eq i32 %13, 0
  br i1 %tobool32.not, label %if.end, label %if.then33

if.then33:                                        ; preds = %lor.end
  %switch.tableidx = add i16 %7, -9
  %14 = icmp ult i16 %switch.tableidx, 5
  br i1 %14, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %if.then33
  %15 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %15
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.then33, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %if.then33 ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %0, i64 %.sink
  %cond48 = load ptr, ptr %linfo_cbp_inter, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end, %cond.end
  %.sink385.sroa.phi = phi ptr [ %.sink385.sroa.gep, %cond.end ], [ %.sink385.sroa.gep387, %lor.end ]
  %read_CBP_CABAC.sink = phi ptr [ %cond48, %cond.end ], [ @read_CBP_CABAC, %lor.end ]
  store ptr %read_CBP_CABAC.sink, ptr %.sink385.sroa.phi, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx31, i64 40
  %16 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %16(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx31) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %17 = load i32, ptr %value1, align 4
  %cbp49 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %17, ptr %cbp49, align 4
  %18 = load i16, ptr %mb_type, align 8
  %19 = add i16 %18, -1
  %or.cond = icmp ult i16 %19, 3
  br i1 %or.cond, label %land.lhs.true70, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %if.end
  %cmp61 = icmp eq i16 %18, 0
  br i1 %cmp61, label %land.lhs.true63, label %lor.lhs.false68

land.lhs.true63:                                  ; preds = %lor.lhs.false58
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %20 = load i32, ptr %slice_type, align 4
  %cmp64 = icmp eq i32 %20, 1
  br i1 %cmp64, label %land.lhs.true66, label %lor.lhs.false68

land.lhs.true66:                                  ; preds = %land.lhs.true63
  %active_sps = getelementptr inbounds i8, ptr %2, i64 16
  %21 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %21, i64 3144
  %22 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool67.not = icmp eq i32 %22, 0
  br i1 %tobool67.not, label %lor.lhs.false68, label %land.lhs.true80

lor.lhs.false68:                                  ; preds = %land.lhs.true66, %land.lhs.true63, %lor.lhs.false58
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %23 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool69.not = icmp eq i32 %23, 0
  br i1 %tobool69.not, label %if.end105, label %land.lhs.true70

land.lhs.true70:                                  ; preds = %if.end, %lor.lhs.false68
  switch i16 %18, label %land.lhs.true80 [
    i16 13, label %if.end105
    i16 9, label %if.end105
  ]

land.lhs.true80:                                  ; preds = %land.lhs.true66, %land.lhs.true70
  %and = and i32 %17, 15
  %tobool82.not = icmp eq i32 %and, 0
  br i1 %tobool82.not, label %if.end105, label %land.rhs83

land.rhs83:                                       ; preds = %land.lhs.true80
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %24 = load i32, ptr %Transform8x8Mode, align 4
  %tobool84.not = icmp eq i32 %24, 0
  br i1 %tobool84.not, label %if.then108, label %if.then87

if.then87:                                        ; preds = %land.rhs83
  store i32 0, ptr %currSE, align 8
  %25 = load ptr, ptr %partArr, align 8
  %reading93 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading93, align 8
  %26 = load ptr, ptr %25, align 8
  %ei_flag95 = getelementptr inbounds i8, ptr %26, i64 24
  %27 = load i32, ptr %ei_flag95, align 8
  %tobool96.not = icmp eq i32 %27, 0
  br i1 %tobool96.not, label %if.else100, label %if.then97

if.then97:                                        ; preds = %if.then87
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %28 = load ptr, ptr %25, align 8
  %call99 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %28) #14
  br label %if.end103

if.else100:                                       ; preds = %if.then87
  %readSyntaxElement101 = getelementptr inbounds i8, ptr %25, i64 40
  %29 = load ptr, ptr %readSyntaxElement101, align 8
  %call102 = call i32 %29(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %25) #14
  br label %if.end103

if.end103:                                        ; preds = %if.else100, %if.then97
  %30 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %30, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then108

if.end105:                                        ; preds = %land.lhs.true80, %land.lhs.true70, %land.lhs.true70, %lor.lhs.false68
  %cmp106.not = icmp eq i32 %17, 0
  br i1 %cmp106.not, label %if.end203, label %if.then108

if.then108:                                       ; preds = %land.rhs83, %if.end103, %if.end105
  %31 = load i32, ptr %is_intra_block, align 8
  %cmp110 = icmp eq i32 %31, 0
  %cond112 = select i1 %cmp110, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond112)
  %32 = load i32, ptr %dp_mode, align 8
  %tobool114.not = icmp eq i32 %32, 0
  br i1 %tobool114.not, label %if.end203, label %if.then115

if.then115:                                       ; preds = %if.then108
  %33 = load i32, ptr %is_intra_block, align 8
  %cmp117 = icmp eq i32 %33, 0
  br i1 %cmp117, label %land.lhs.true119, label %if.end122

land.lhs.true119:                                 ; preds = %if.then115
  %dpC_NotPresent = getelementptr inbounds i8, ptr %0, i64 1236
  %34 = load i32, ptr %dpC_NotPresent, align 4
  %tobool120.not = icmp eq i32 %34, 0
  br i1 %tobool120.not, label %if.end122, label %if.then121

if.then121:                                       ; preds = %land.lhs.true119
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %land.lhs.true119, %if.then115
  br i1 %cmp, label %land.lhs.true124, label %if.end129

land.lhs.true124:                                 ; preds = %if.end122
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %35 = load i32, ptr %dpB_NotPresent, align 8
  %tobool125.not = icmp eq i32 %35, 0
  br i1 %tobool125.not, label %if.end129, label %if.then126

if.then126:                                       ; preds = %land.lhs.true124
  %ei_flag127 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag127, align 2
  %dpl_flag128 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag128, align 1
  br label %if.end129

if.end129:                                        ; preds = %if.then126, %land.lhs.true124, %if.end122
  %36 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %36, i64 856744
  %37 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %36, i64 849132
  call void %37(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %38 = load ptr, ptr %getNeighbour.i, align 8
  call void %38(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %39 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %39, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end129
  %active_pps.i = getelementptr inbounds i8, ptr %36, i64 8
  %40 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %40, i64 2204
  %41 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %41, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end129
  %42 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %42, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %36, i64 848888
  %43 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %44 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %44 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %43, i64 %idxprom.i, i32 23
  %45 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %46 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %46, %45
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %47 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %47, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %36, i64 848888
  %48 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %49 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %49 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %48, i64 %idxprom17.i, i32 23
  %50 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %51 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %51, %50
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag130 = getelementptr inbounds i8, ptr %currMB, i64 111
  %52 = load i8, ptr %dpl_flag130, align 1
  %tobool131.not = icmp eq i8 %52, 0
  br i1 %tobool131.not, label %if.end203, label %if.then132

if.then132:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp49, align 4
  br label %if.end203

if.else137:                                       ; preds = %land.end.thread, %land.end.thread
  %cbp138 = getelementptr inbounds i8, ptr %currMB, i64 284
  %53 = load i32, ptr %cbp138, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %54 = load i32, ptr %dp_mode, align 8
  %tobool140.not = icmp eq i32 %54, 0
  br i1 %tobool140.not, label %if.end153, label %if.then141

if.then141:                                       ; preds = %if.else137
  %dpB_NotPresent142 = getelementptr inbounds i8, ptr %0, i64 1232
  %55 = load i32, ptr %dpB_NotPresent142, align 8
  %tobool143.not = icmp eq i32 %55, 0
  br i1 %tobool143.not, label %if.end147, label %if.then144

if.then144:                                       ; preds = %if.then141
  %ei_flag145 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag145, align 2
  %dpl_flag146 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag146, align 1
  br label %if.end147

if.end147:                                        ; preds = %if.then144, %if.then141
  %56 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i339) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i340) #14
  %getNeighbour.i342 = getelementptr inbounds i8, ptr %56, i64 856744
  %57 = load ptr, ptr %getNeighbour.i342, align 8
  %arrayidx.i343 = getelementptr inbounds i8, ptr %56, i64 849132
  call void %57(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i343, ptr noundef nonnull %left.i340) #14
  %58 = load ptr, ptr %getNeighbour.i342, align 8
  call void %58(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i343, ptr noundef nonnull %up.i339) #14
  %59 = load i32, ptr %is_intra_block, align 8
  %cmp.i345 = icmp eq i32 %59, 0
  br i1 %cmp.i345, label %if.then.i350, label %lor.lhs.false.i346

lor.lhs.false.i346:                               ; preds = %if.end147
  %active_pps.i347 = getelementptr inbounds i8, ptr %56, i64 8
  %60 = load ptr, ptr %active_pps.i347, align 8
  %constrained_intra_pred_flag.i348 = getelementptr inbounds i8, ptr %60, i64 2204
  %61 = load i32, ptr %constrained_intra_pred_flag.i348, align 4
  %tobool.not.i349 = icmp eq i32 %61, 0
  br i1 %tobool.not.i349, label %if.then.i350, label %check_dp_neighbors.exit368

if.then.i350:                                     ; preds = %lor.lhs.false.i346, %if.end147
  %62 = load i32, ptr %left.i340, align 4
  %tobool6.not.i351 = icmp eq i32 %62, 0
  br i1 %tobool6.not.i351, label %if.end.i359, label %if.then7.i352

if.then7.i352:                                    ; preds = %if.then.i350
  %mb_data.i353 = getelementptr inbounds i8, ptr %56, i64 848888
  %63 = load ptr, ptr %mb_data.i353, align 8
  %mb_addr.i354 = getelementptr inbounds i8, ptr %left.i340, i64 4
  %64 = load i32, ptr %mb_addr.i354, align 4
  %idxprom.i355 = sext i32 %64 to i64
  %dpl_flag.i356 = getelementptr inbounds %struct.macroblock, ptr %63, i64 %idxprom.i355, i32 23
  %65 = load i8, ptr %dpl_flag.i356, align 1
  %dpl_flag9.i357 = getelementptr inbounds i8, ptr %currMB, i64 111
  %66 = load i8, ptr %dpl_flag9.i357, align 1
  %or38.i358 = or i8 %66, %65
  store i8 %or38.i358, ptr %dpl_flag9.i357, align 1
  br label %if.end.i359

if.end.i359:                                      ; preds = %if.then7.i352, %if.then.i350
  %67 = load i32, ptr %up.i339, align 4
  %tobool13.not.i360 = icmp eq i32 %67, 0
  br i1 %tobool13.not.i360, label %check_dp_neighbors.exit368, label %if.then14.i361

if.then14.i361:                                   ; preds = %if.end.i359
  %mb_data15.i362 = getelementptr inbounds i8, ptr %56, i64 848888
  %68 = load ptr, ptr %mb_data15.i362, align 8
  %mb_addr16.i363 = getelementptr inbounds i8, ptr %up.i339, i64 4
  %69 = load i32, ptr %mb_addr16.i363, align 4
  %idxprom17.i364 = sext i32 %69 to i64
  %dpl_flag19.i365 = getelementptr inbounds %struct.macroblock, ptr %68, i64 %idxprom17.i364, i32 23
  %70 = load i8, ptr %dpl_flag19.i365, align 1
  %dpl_flag21.i366 = getelementptr inbounds i8, ptr %currMB, i64 111
  %71 = load i8, ptr %dpl_flag21.i366, align 1
  %or2339.i367 = or i8 %71, %70
  store i8 %or2339.i367, ptr %dpl_flag21.i366, align 1
  br label %check_dp_neighbors.exit368

check_dp_neighbors.exit368:                       ; preds = %lor.lhs.false.i346, %if.end.i359, %if.then14.i361
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i340) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i339) #14
  %dpl_flag148 = getelementptr inbounds i8, ptr %currMB, i64 111
  %72 = load i8, ptr %dpl_flag148, align 1
  %tobool149.not = icmp eq i8 %72, 0
  br i1 %tobool149.not, label %if.then156, label %if.end153.thread378

if.end153.thread378:                              ; preds = %check_dp_neighbors.exit368
  store i32 0, ptr %cbp138, align 4
  br label %if.end203

if.end153:                                        ; preds = %if.else137
  %dpl_flag154.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag154.phi.trans.insert, align 1
  %73 = icmp eq i8 %.pre, 0
  br i1 %73, label %if.then156, label %if.end203

if.then156:                                       ; preds = %check_dp_neighbors.exit368, %if.end153
  %partArr160 = getelementptr inbounds i8, ptr %0, i64 312
  %74 = load ptr, ptr %partArr160, align 8
  %arrayidx163 = getelementptr inbounds i8, ptr %arrayidx, i64 7
  %75 = load i8, ptr %arrayidx163, align 1
  %idxprom164 = zext i8 %75 to i64
  %arrayidx165 = getelementptr inbounds %struct.datapartition, ptr %74, i64 %idxprom164
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 0, ptr %context, align 8
  store i32 7, ptr %currSE, align 8
  %76 = load ptr, ptr %arrayidx165, align 8
  %ei_flag168 = getelementptr inbounds i8, ptr %76, i64 24
  %77 = load i32, ptr %ei_flag168, align 8
  %tobool169.not = icmp eq i32 %77, 0
  %readRunLevel_CABAC.linfo_levrun_inter = select i1 %tobool169.not, ptr @readRunLevel_CABAC, ptr @linfo_levrun_inter
  %..sroa.sel.v = select i1 %tobool169.not, i64 40, i64 32
  %..sroa.sel = getelementptr inbounds i8, ptr %currSE, i64 %..sroa.sel.v
  store ptr %readRunLevel_CABAC.linfo_levrun_inter, ptr %..sroa.sel, align 8
  %readSyntaxElement182 = getelementptr inbounds i8, ptr %arrayidx165, i64 40
  %value1184 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof = getelementptr inbounds i8, ptr %0, i64 1272
  br label %for.body

for.body:                                         ; preds = %if.then156, %for.inc
  %pos_scan_4x4.0374 = phi ptr [ %6, %if.then156 ], [ %incdec.ptr189, %for.inc ]
  %k.0373 = phi i32 [ 0, %if.then156 ], [ %inc, %for.inc ]
  %78 = load ptr, ptr %readSyntaxElement182, align 8
  %call183 = call i32 %78(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx165) #14
  %79 = load i32, ptr %value1184, align 4
  %cmp185.not = icmp eq i32 %79, 0
  br i1 %cmp185.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %80 = load i32, ptr %value2, align 8
  %mul = shl nsw i32 %80, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0374, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %81 = load i8, ptr %add.ptr, align 1
  %conv188 = zext i8 %81 to i64
  %incdec.ptr189 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %82 = load i8, ptr %incdec.ptr, align 1
  %conv190 = zext i8 %82 to i64
  %83 = load ptr, ptr %cof, align 8
  %84 = load ptr, ptr %83, align 8
  %arrayidx194.idx = shl nuw nsw i64 %conv190, 5
  %arrayidx194 = getelementptr inbounds i8, ptr %84, i64 %arrayidx194.idx
  %85 = load ptr, ptr %arrayidx194, align 8
  %arrayidx196.idx = shl nuw nsw i64 %conv188, 4
  %arrayidx196 = getelementptr inbounds i8, ptr %85, i64 %arrayidx196.idx
  store i32 %79, ptr %arrayidx196, align 4
  %inc = add nuw nsw i32 %k.0373, 1
  %cmp175 = icmp ult i32 %k.0373, 16
  br i1 %cmp175, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.inc
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %86 = load i32, ptr %is_lossless, align 4
  %cmp198 = icmp eq i32 %86, 0
  br i1 %cmp198, label %if.then200, label %if.end203

if.then200:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %0, i64 216
  %87 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %87) #14
  br label %if.end203

if.end203:                                        ; preds = %if.end153.thread378, %if.end153, %if.then200, %for.end, %if.end105, %check_dp_neighbors.exit, %if.then132, %if.then108
  %cbp.1 = phi i32 [ %53, %if.end153 ], [ %53, %if.then200 ], [ %53, %for.end ], [ 0, %if.then132 ], [ %17, %check_dp_neighbors.exit ], [ %17, %if.then108 ], [ 0, %if.end105 ], [ 0, %if.end153.thread378 ]
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %88 = load i32, ptr %qp, align 4
  %89 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %88, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %89, i64 849052
  %90 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %90, %88
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %91 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %91, i64 13520
  %92 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %89, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %92, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %93 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %93
  %94 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %94, %88
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end203
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %95 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %95 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end203
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end203 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %96 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %96, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %97 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %97
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %92, i64 304
  %98 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %98, %88
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %99 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %99 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %100 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %100, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i370 = icmp eq i32 %add.i, 0
  br i1 %cmp.i370, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %89, i64 849092
  %101 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %101, 1
  %102 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %102, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %2, i64 856032
  %103 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id204 = getelementptr inbounds i8, ptr %0, i64 216
  %104 = load i32, ptr %colour_plane_id204, align 8
  %idxprom205 = sext i32 %104 to i64
  %arrayidx206 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom205
  %105 = load i32, ptr %arrayidx206, align 4
  %idxprom207 = sext i32 %105 to i64
  %arrayidx208 = getelementptr inbounds i32, ptr %103, i64 %idxprom207
  %106 = load i32, ptr %arrayidx208, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %2, i64 856040
  %107 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx214 = getelementptr inbounds i32, ptr %107, i64 %idxprom207
  %108 = load i32, ptr %arrayidx214, align 4
  %tobool215.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool215.not, label %if.end239, label %if.then216

if.then216:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag217 = getelementptr inbounds i8, ptr %currMB, i64 420
  %109 = load i32, ptr %luma_transform_size_8x8_flag217, align 4
  %tobool218.not = icmp eq i32 %109, 0
  br i1 %tobool218.not, label %if.else220, label %if.then219

if.then219:                                       ; preds = %if.then216
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0)
  br label %if.end239

if.else220:                                       ; preds = %if.then216
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %0, i64 1392
  %idxprom226 = sext i32 %108 to i64
  %arrayidx227 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom205, i64 %idxprom226
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %0, i64 2544
  %arrayidx234 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom205, i64 %idxprom226
  %cond237 = select i1 %cmp, ptr %arrayidx227, ptr %arrayidx234
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0, ptr noundef nonnull %cond237, i32 noundef %106, i32 noundef %cbp.1)
  br label %if.end239

if.end239:                                        ; preds = %if.then219, %if.else220, %update_qp.exit
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CABAC_420(ptr noundef %currMB) #3 {
entry:
  %up.i991 = alloca %struct.pix_pos, align 4
  %left.i992 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %qp_per_uv = alloca [2 x i32], align 4
  %qp_rem_uv = alloca [2 x i32], align 4
  %temp = alloca [4 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %0 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %1 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %2 = load ptr, ptr %p_Vid1, align 8
  %type = getelementptr inbounds i8, ptr %2, i64 848776
  %3 = load i32, ptr %type, align 8
  %.sink1124.sroa.gep = getelementptr inbounds i8, ptr %currSE, i64 32
  %.sink1124.sroa.gep1133 = getelementptr inbounds i8, ptr %currSE, i64 40
  switch i32 %3, label %lor.end [
    i32 3, label %land.lhs.true
    i32 4, label %land.rhs
  ]

land.lhs.true:                                    ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp2 = icmp eq i32 %4, 0
  br label %lor.end

land.rhs:                                         ; preds = %entry
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %5 = load i16, ptr %mb_type, align 8
  %cmp5 = icmp eq i16 %5, 12
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %entry, %land.rhs
  %6 = phi i1 [ %cmp5, %land.rhs ], [ %cmp2, %land.lhs.true ], [ false, %entry ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  %is_intra_block7 = getelementptr inbounds i8, ptr %currMB, i64 96
  %7 = load i32, ptr %is_intra_block7, align 8
  %cmp8 = icmp eq i32 %7, 1
  %dec_picture10 = getelementptr inbounds i8, ptr %0, i64 13520
  %8 = load ptr, ptr %dec_picture10, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %8, i64 268
  %9 = load i32, ptr %chroma_format_idc, align 4
  %sub = add nsw i32 %9, -1
  %structure = getelementptr inbounds i8, ptr %2, i64 848876
  %10 = load i32, ptr %structure, align 4
  %cmp11 = icmp eq i32 %10, 0
  br i1 %cmp11, label %land.end14, label %land.end14.thread

land.end14:                                       ; preds = %lor.end
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %11 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %11
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select1037 = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end14.thread

land.end14.thread:                                ; preds = %land.end14, %lor.end
  %12 = phi i1 [ false, %lor.end ], [ %tobool.not, %land.end14 ]
  %13 = phi ptr [ @FIELD_SCAN, %lor.end ], [ %spec.select1037, %land.end14 ]
  %mb_type17 = getelementptr inbounds i8, ptr %currMB, i64 152
  %14 = load i16, ptr %mb_type17, align 8
  switch i16 %14, label %lor.end39 [
    i16 10, label %if.else154
    i16 14, label %if.else154
    i16 9, label %15
    i16 12, label %15
    i16 13, label %15
  ]

15:                                               ; preds = %land.end14.thread, %land.end14.thread, %land.end14.thread
  br label %lor.end39

lor.end39:                                        ; preds = %land.end14.thread, %15
  %16 = phi i32 [ 6, %15 ], [ 11, %land.end14.thread ]
  store i32 %16, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %17 = load ptr, ptr %partArr, align 8
  %idxprom44 = zext nneg i32 %16 to i64
  %arrayidx45 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom44
  %18 = load i8, ptr %arrayidx45, align 1
  %idxprom46 = zext i8 %18 to i64
  %arrayidx47 = getelementptr inbounds %struct.datapartition, ptr %17, i64 %idxprom46
  %19 = load ptr, ptr %arrayidx47, align 8
  %ei_flag = getelementptr inbounds i8, ptr %19, i64 24
  %20 = load i32, ptr %ei_flag, align 8
  %tobool48.not = icmp eq i32 %20, 0
  br i1 %tobool48.not, label %if.end, label %if.then49

if.then49:                                        ; preds = %lor.end39
  %switch.tableidx = add i16 %14, -9
  %21 = icmp ult i16 %switch.tableidx, 5
  br i1 %21, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %if.then49
  %22 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %22
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.then49, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %if.then49 ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %0, i64 %.sink
  %cond64 = load ptr, ptr %linfo_cbp_inter, align 8
  br label %if.end

if.end:                                           ; preds = %lor.end39, %cond.end
  %.sink1124.sroa.phi = phi ptr [ %.sink1124.sroa.gep, %cond.end ], [ %.sink1124.sroa.gep1133, %lor.end39 ]
  %read_CBP_CABAC.sink = phi ptr [ %cond64, %cond.end ], [ @read_CBP_CABAC, %lor.end39 ]
  store ptr %read_CBP_CABAC.sink, ptr %.sink1124.sroa.phi, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx47, i64 40
  %23 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %23(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx47) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %24 = load i32, ptr %value1, align 4
  %cbp65 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %24, ptr %cbp65, align 4
  %25 = load i16, ptr %mb_type17, align 8
  %26 = add i16 %25, -1
  %or.cond = icmp ult i16 %26, 3
  br i1 %or.cond, label %land.lhs.true87, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %if.end
  %cmp78 = icmp eq i16 %25, 0
  br i1 %cmp78, label %land.lhs.true80, label %lor.lhs.false85

land.lhs.true80:                                  ; preds = %lor.lhs.false75
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %27 = load i32, ptr %slice_type, align 4
  %cmp81 = icmp eq i32 %27, 1
  br i1 %cmp81, label %land.lhs.true83, label %lor.lhs.false85

land.lhs.true83:                                  ; preds = %land.lhs.true80
  %active_sps = getelementptr inbounds i8, ptr %2, i64 16
  %28 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %28, i64 3144
  %29 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool84.not = icmp eq i32 %29, 0
  br i1 %tobool84.not, label %lor.lhs.false85, label %land.lhs.true97

lor.lhs.false85:                                  ; preds = %land.lhs.true83, %land.lhs.true80, %lor.lhs.false75
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %30 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool86.not = icmp eq i32 %30, 0
  br i1 %tobool86.not, label %if.end122, label %land.lhs.true87

land.lhs.true87:                                  ; preds = %if.end, %lor.lhs.false85
  switch i16 %25, label %land.lhs.true97 [
    i16 13, label %if.end122
    i16 9, label %if.end122
  ]

land.lhs.true97:                                  ; preds = %land.lhs.true83, %land.lhs.true87
  %and = and i32 %24, 15
  %tobool99.not = icmp eq i32 %and, 0
  br i1 %tobool99.not, label %if.end122, label %land.rhs100

land.rhs100:                                      ; preds = %land.lhs.true97
  %Transform8x8Mode = getelementptr inbounds i8, ptr %0, i64 60
  %31 = load i32, ptr %Transform8x8Mode, align 4
  %tobool101.not = icmp eq i32 %31, 0
  br i1 %tobool101.not, label %if.then125, label %if.then104

if.then104:                                       ; preds = %land.rhs100
  store i32 0, ptr %currSE, align 8
  %32 = load ptr, ptr %partArr, align 8
  %reading110 = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading110, align 8
  %33 = load ptr, ptr %32, align 8
  %ei_flag112 = getelementptr inbounds i8, ptr %33, i64 24
  %34 = load i32, ptr %ei_flag112, align 8
  %tobool113.not = icmp eq i32 %34, 0
  br i1 %tobool113.not, label %if.else117, label %if.then114

if.then114:                                       ; preds = %if.then104
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %35 = load ptr, ptr %32, align 8
  %call116 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %35) #14
  br label %if.end120

if.else117:                                       ; preds = %if.then104
  %readSyntaxElement118 = getelementptr inbounds i8, ptr %32, i64 40
  %36 = load ptr, ptr %readSyntaxElement118, align 8
  %call119 = call i32 %36(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %32) #14
  br label %if.end120

if.end120:                                        ; preds = %if.else117, %if.then114
  %37 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %37, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then125

if.end122:                                        ; preds = %land.lhs.true97, %land.lhs.true87, %land.lhs.true87, %lor.lhs.false85
  %cmp123.not = icmp eq i32 %24, 0
  br i1 %cmp123.not, label %if.end220, label %if.then125

if.then125:                                       ; preds = %land.rhs100, %if.end120, %if.end122
  %38 = load i32, ptr %is_intra_block7, align 8
  %cmp127 = icmp eq i32 %38, 0
  %cond129 = select i1 %cmp127, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond129)
  %39 = load i32, ptr %dp_mode, align 8
  %tobool131.not = icmp eq i32 %39, 0
  br i1 %tobool131.not, label %if.end220, label %if.then132

if.then132:                                       ; preds = %if.then125
  %40 = load i32, ptr %is_intra_block7, align 8
  %cmp134 = icmp eq i32 %40, 0
  br i1 %cmp134, label %land.lhs.true136, label %if.end139

land.lhs.true136:                                 ; preds = %if.then132
  %dpC_NotPresent = getelementptr inbounds i8, ptr %0, i64 1236
  %41 = load i32, ptr %dpC_NotPresent, align 4
  %tobool137.not = icmp eq i32 %41, 0
  br i1 %tobool137.not, label %if.end139, label %if.then138

if.then138:                                       ; preds = %land.lhs.true136
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end139

if.end139:                                        ; preds = %if.then138, %land.lhs.true136, %if.then132
  br i1 %cmp8, label %land.lhs.true141, label %if.end146

land.lhs.true141:                                 ; preds = %if.end139
  %dpB_NotPresent = getelementptr inbounds i8, ptr %0, i64 1232
  %42 = load i32, ptr %dpB_NotPresent, align 8
  %tobool142.not = icmp eq i32 %42, 0
  br i1 %tobool142.not, label %if.end146, label %if.then143

if.then143:                                       ; preds = %land.lhs.true141
  %ei_flag144 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag144, align 2
  %dpl_flag145 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag145, align 1
  br label %if.end146

if.end146:                                        ; preds = %if.then143, %land.lhs.true141, %if.end139
  %43 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %43, i64 856744
  %44 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %43, i64 849132
  call void %44(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %45 = load ptr, ptr %getNeighbour.i, align 8
  call void %45(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %46 = load i32, ptr %is_intra_block7, align 8
  %cmp.i = icmp eq i32 %46, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end146
  %active_pps.i = getelementptr inbounds i8, ptr %43, i64 8
  %47 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %47, i64 2204
  %48 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end146
  %49 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %49, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %43, i64 848888
  %50 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %51 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %51 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %50, i64 %idxprom.i, i32 23
  %52 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %53 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %53, %52
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %54 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %54, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %43, i64 848888
  %55 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %56 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %56 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %55, i64 %idxprom17.i, i32 23
  %57 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %58 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %58, %57
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag147 = getelementptr inbounds i8, ptr %currMB, i64 111
  %59 = load i8, ptr %dpl_flag147, align 1
  %tobool148.not = icmp eq i8 %59, 0
  br i1 %tobool148.not, label %if.end220, label %if.then149

if.then149:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp65, align 4
  br label %if.end220

if.else154:                                       ; preds = %land.end14.thread, %land.end14.thread
  %cbp155 = getelementptr inbounds i8, ptr %currMB, i64 284
  %60 = load i32, ptr %cbp155, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %61 = load i32, ptr %dp_mode, align 8
  %tobool157.not = icmp eq i32 %61, 0
  br i1 %tobool157.not, label %if.end170, label %if.then158

if.then158:                                       ; preds = %if.else154
  %dpB_NotPresent159 = getelementptr inbounds i8, ptr %0, i64 1232
  %62 = load i32, ptr %dpB_NotPresent159, align 8
  %tobool160.not = icmp eq i32 %62, 0
  br i1 %tobool160.not, label %if.end164, label %if.then161

if.then161:                                       ; preds = %if.then158
  %ei_flag162 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag162, align 2
  %dpl_flag163 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag163, align 1
  br label %if.end164

if.end164:                                        ; preds = %if.then161, %if.then158
  %63 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i991) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i992) #14
  %getNeighbour.i994 = getelementptr inbounds i8, ptr %63, i64 856744
  %64 = load ptr, ptr %getNeighbour.i994, align 8
  %arrayidx.i995 = getelementptr inbounds i8, ptr %63, i64 849132
  call void %64(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i995, ptr noundef nonnull %left.i992) #14
  %65 = load ptr, ptr %getNeighbour.i994, align 8
  call void %65(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i995, ptr noundef nonnull %up.i991) #14
  %66 = load i32, ptr %is_intra_block7, align 8
  %cmp.i997 = icmp eq i32 %66, 0
  br i1 %cmp.i997, label %if.then.i1002, label %lor.lhs.false.i998

lor.lhs.false.i998:                               ; preds = %if.end164
  %active_pps.i999 = getelementptr inbounds i8, ptr %63, i64 8
  %67 = load ptr, ptr %active_pps.i999, align 8
  %constrained_intra_pred_flag.i1000 = getelementptr inbounds i8, ptr %67, i64 2204
  %68 = load i32, ptr %constrained_intra_pred_flag.i1000, align 4
  %tobool.not.i1001 = icmp eq i32 %68, 0
  br i1 %tobool.not.i1001, label %if.then.i1002, label %check_dp_neighbors.exit1020

if.then.i1002:                                    ; preds = %lor.lhs.false.i998, %if.end164
  %69 = load i32, ptr %left.i992, align 4
  %tobool6.not.i1003 = icmp eq i32 %69, 0
  br i1 %tobool6.not.i1003, label %if.end.i1011, label %if.then7.i1004

if.then7.i1004:                                   ; preds = %if.then.i1002
  %mb_data.i1005 = getelementptr inbounds i8, ptr %63, i64 848888
  %70 = load ptr, ptr %mb_data.i1005, align 8
  %mb_addr.i1006 = getelementptr inbounds i8, ptr %left.i992, i64 4
  %71 = load i32, ptr %mb_addr.i1006, align 4
  %idxprom.i1007 = sext i32 %71 to i64
  %dpl_flag.i1008 = getelementptr inbounds %struct.macroblock, ptr %70, i64 %idxprom.i1007, i32 23
  %72 = load i8, ptr %dpl_flag.i1008, align 1
  %dpl_flag9.i1009 = getelementptr inbounds i8, ptr %currMB, i64 111
  %73 = load i8, ptr %dpl_flag9.i1009, align 1
  %or38.i1010 = or i8 %73, %72
  store i8 %or38.i1010, ptr %dpl_flag9.i1009, align 1
  br label %if.end.i1011

if.end.i1011:                                     ; preds = %if.then7.i1004, %if.then.i1002
  %74 = load i32, ptr %up.i991, align 4
  %tobool13.not.i1012 = icmp eq i32 %74, 0
  br i1 %tobool13.not.i1012, label %check_dp_neighbors.exit1020, label %if.then14.i1013

if.then14.i1013:                                  ; preds = %if.end.i1011
  %mb_data15.i1014 = getelementptr inbounds i8, ptr %63, i64 848888
  %75 = load ptr, ptr %mb_data15.i1014, align 8
  %mb_addr16.i1015 = getelementptr inbounds i8, ptr %up.i991, i64 4
  %76 = load i32, ptr %mb_addr16.i1015, align 4
  %idxprom17.i1016 = sext i32 %76 to i64
  %dpl_flag19.i1017 = getelementptr inbounds %struct.macroblock, ptr %75, i64 %idxprom17.i1016, i32 23
  %77 = load i8, ptr %dpl_flag19.i1017, align 1
  %dpl_flag21.i1018 = getelementptr inbounds i8, ptr %currMB, i64 111
  %78 = load i8, ptr %dpl_flag21.i1018, align 1
  %or2339.i1019 = or i8 %78, %77
  store i8 %or2339.i1019, ptr %dpl_flag21.i1018, align 1
  br label %check_dp_neighbors.exit1020

check_dp_neighbors.exit1020:                      ; preds = %lor.lhs.false.i998, %if.end.i1011, %if.then14.i1013
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i992) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i991) #14
  %dpl_flag165 = getelementptr inbounds i8, ptr %currMB, i64 111
  %79 = load i8, ptr %dpl_flag165, align 1
  %tobool166.not = icmp eq i8 %79, 0
  br i1 %tobool166.not, label %if.then173, label %if.end170.thread1076

if.end170.thread1076:                             ; preds = %check_dp_neighbors.exit1020
  store i32 0, ptr %cbp155, align 4
  br label %if.end220

if.end170:                                        ; preds = %if.else154
  %dpl_flag171.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag171.phi.trans.insert, align 1
  %tobool172.not = icmp eq i8 %.pre, 0
  br i1 %tobool172.not, label %if.then173, label %if.end220

if.then173:                                       ; preds = %check_dp_neighbors.exit1020, %if.end170
  %partArr177 = getelementptr inbounds i8, ptr %0, i64 312
  %80 = load ptr, ptr %partArr177, align 8
  %arrayidx180 = getelementptr inbounds i8, ptr %arrayidx, i64 7
  %81 = load i8, ptr %arrayidx180, align 1
  %idxprom181 = zext i8 %81 to i64
  %arrayidx182 = getelementptr inbounds %struct.datapartition, ptr %80, i64 %idxprom181
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 0, ptr %context, align 8
  store i32 7, ptr %currSE, align 8
  %82 = load ptr, ptr %arrayidx182, align 8
  %ei_flag185 = getelementptr inbounds i8, ptr %82, i64 24
  %83 = load i32, ptr %ei_flag185, align 8
  %tobool186.not = icmp eq i32 %83, 0
  %readRunLevel_CABAC.linfo_levrun_inter = select i1 %tobool186.not, ptr @readRunLevel_CABAC, ptr @linfo_levrun_inter
  %..sroa.sel.v = select i1 %tobool186.not, i64 40, i64 32
  %..sroa.sel = getelementptr inbounds i8, ptr %currSE, i64 %..sroa.sel.v
  store ptr %readRunLevel_CABAC.linfo_levrun_inter, ptr %..sroa.sel, align 8
  %readSyntaxElement199 = getelementptr inbounds i8, ptr %arrayidx182, i64 40
  %value1201 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof = getelementptr inbounds i8, ptr %0, i64 1272
  br label %for.body

for.body:                                         ; preds = %if.then173, %for.inc
  %k.01040 = phi i32 [ 0, %if.then173 ], [ %inc, %for.inc ]
  %pos_scan_4x4.01039 = phi ptr [ %13, %if.then173 ], [ %incdec.ptr206, %for.inc ]
  %84 = load ptr, ptr %readSyntaxElement199, align 8
  %call200 = call i32 %84(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx182) #14
  %85 = load i32, ptr %value1201, align 4
  %cmp202.not = icmp eq i32 %85, 0
  br i1 %cmp202.not, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %86 = load i32, ptr %value2, align 8
  %mul = shl nsw i32 %86, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.01039, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %87 = load i8, ptr %add.ptr, align 1
  %conv205 = zext i8 %87 to i64
  %incdec.ptr206 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %88 = load i8, ptr %incdec.ptr, align 1
  %conv207 = zext i8 %88 to i64
  %89 = load ptr, ptr %cof, align 8
  %90 = load ptr, ptr %89, align 8
  %arrayidx211.idx = shl nuw nsw i64 %conv207, 5
  %arrayidx211 = getelementptr inbounds i8, ptr %90, i64 %arrayidx211.idx
  %91 = load ptr, ptr %arrayidx211, align 8
  %arrayidx213.idx = shl nuw nsw i64 %conv205, 4
  %arrayidx213 = getelementptr inbounds i8, ptr %91, i64 %arrayidx213.idx
  store i32 %85, ptr %arrayidx213, align 4
  %inc = add nuw nsw i32 %k.01040, 1
  %cmp192 = icmp ult i32 %k.01040, 16
  br i1 %cmp192, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.inc
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %92 = load i32, ptr %is_lossless, align 4
  %cmp215 = icmp eq i32 %92, 0
  br i1 %cmp215, label %if.then217, label %if.end220

if.then217:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %0, i64 216
  %93 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %93) #14
  br label %if.end220

if.end220:                                        ; preds = %if.end170.thread1076, %for.end, %if.then217, %if.end122, %check_dp_neighbors.exit, %if.then149, %if.then125, %if.end170
  %cbp.2 = phi i32 [ %60, %if.end170 ], [ 0, %if.then149 ], [ %24, %check_dp_neighbors.exit ], [ %24, %if.then125 ], [ 0, %if.end122 ], [ %60, %if.then217 ], [ %60, %for.end ], [ 0, %if.end170.thread1076 ]
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %94 = load i32, ptr %qp, align 4
  %95 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %94, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %95, i64 849052
  %96 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %96, %94
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %97 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %97, i64 13520
  %98 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %95, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %98, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %99 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %99
  %100 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %100, %94
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end220
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %101 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %101 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end220
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end220 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %102 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %102, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %103 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %103
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %98, i64 304
  %104 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %104, %94
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %105 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %105 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %106 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %106, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i1022 = icmp eq i32 %add.i, 0
  br i1 %cmp.i1022, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %95, i64 849092
  %107 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %107, 1
  %108 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %108, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %2, i64 856032
  %109 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id221 = getelementptr inbounds i8, ptr %0, i64 216
  %110 = load i32, ptr %colour_plane_id221, align 8
  %idxprom222 = sext i32 %110 to i64
  %arrayidx223 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom222
  %111 = load i32, ptr %arrayidx223, align 4
  %idxprom224 = sext i32 %111 to i64
  %arrayidx225 = getelementptr inbounds i32, ptr %109, i64 %idxprom224
  %112 = load i32, ptr %arrayidx225, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %2, i64 856040
  %113 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx231 = getelementptr inbounds i32, ptr %113, i64 %idxprom224
  %114 = load i32, ptr %arrayidx231, align 4
  %tobool232.not = icmp eq i32 %cbp.2, 0
  br i1 %tobool232.not, label %if.end256, label %if.then233

if.then233:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag234 = getelementptr inbounds i8, ptr %currMB, i64 420
  %115 = load i32, ptr %luma_transform_size_8x8_flag234, align 4
  %tobool235.not = icmp eq i32 %115, 0
  br i1 %tobool235.not, label %if.else237, label %if.then236

if.then236:                                       ; preds = %if.then233
  call fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0)
  br label %if.end256

if.else237:                                       ; preds = %if.then233
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %0, i64 1392
  %idxprom243 = sext i32 %114 to i64
  %arrayidx244 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom222, i64 %idxprom243
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %0, i64 2544
  %arrayidx251 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom222, i64 %idxprom243
  %cond254 = select i1 %cmp8, ptr %arrayidx244, ptr %arrayidx251
  call fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef 0, ptr noundef nonnull %cond254, i32 noundef %112, i32 noundef %cbp.2)
  br label %if.end256

if.end256:                                        ; preds = %if.then236, %if.else237, %update_qp.exit
  %116 = load ptr, ptr %qp_per_matrix, align 8
  %117 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx264 = getelementptr inbounds i8, ptr %currMB, i64 84
  %118 = load i32, ptr %arrayidx264, align 4
  %idxprom265 = sext i32 %118 to i64
  %arrayidx266 = getelementptr inbounds i32, ptr %116, i64 %idxprom265
  %119 = load i32, ptr %arrayidx266, align 4
  store i32 %119, ptr %qp_per_uv, align 4
  %arrayidx275 = getelementptr inbounds i32, ptr %117, i64 %idxprom265
  %120 = load i32, ptr %arrayidx275, align 4
  store i32 %120, ptr %qp_rem_uv, align 4
  %arrayidx264.1 = getelementptr inbounds i8, ptr %currMB, i64 88
  %121 = load i32, ptr %arrayidx264.1, align 4
  %idxprom265.1 = sext i32 %121 to i64
  %arrayidx266.1 = getelementptr inbounds i32, ptr %116, i64 %idxprom265.1
  %122 = load i32, ptr %arrayidx266.1, align 4
  %arrayidx268.1 = getelementptr inbounds i8, ptr %qp_per_uv, i64 4
  store i32 %122, ptr %arrayidx268.1, align 4
  %arrayidx275.1 = getelementptr inbounds i32, ptr %117, i64 %idxprom265.1
  %123 = load i32, ptr %arrayidx275.1, align 4
  %arrayidx277.1 = getelementptr inbounds i8, ptr %qp_rem_uv, i64 4
  store i32 %123, ptr %arrayidx277.1, align 4
  %cmp281 = icmp sgt i32 %cbp.2, 15
  br i1 %cmp281, label %for.cond285.preheader, label %if.end720

for.cond285.preheader:                            ; preds = %if.end256
  %cofu = getelementptr inbounds i8, ptr %0, i64 1288
  %is_v_block = getelementptr inbounds i8, ptr %currMB, i64 100
  %context313 = getelementptr inbounds i8, ptr %currSE, i64 24
  %partArr317 = getelementptr inbounds i8, ptr %0, i64 312
  %num_cdc_coeff = getelementptr inbounds i8, ptr %2, i64 849104
  %InvLevelScale4x4_Inter301 = getelementptr inbounds i8, ptr %0, i64 2544
  %InvLevelScale4x4_Intra291 = getelementptr inbounds i8, ptr %0, i64 1392
  %mapping327 = getelementptr inbounds i8, ptr %currSE, i64 32
  %reading329 = getelementptr inbounds i8, ptr %currSE, i64 40
  %value1343 = getelementptr inbounds i8, ptr %currSE, i64 4
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %value2351 = getelementptr inbounds i8, ptr %currSE, i64 8
  %cof411 = getelementptr inbounds i8, ptr %0, i64 1272
  %arrayidx417 = getelementptr inbounds i8, ptr %temp, i64 4
  %arrayidx429 = getelementptr inbounds i8, ptr %temp, i64 8
  %arrayidx441 = getelementptr inbounds i8, ptr %temp, i64 12
  %arrayidx376 = getelementptr inbounds i8, ptr %0, i64 1292
  %arrayidx384 = getelementptr inbounds i8, ptr %0, i64 1296
  %arrayidx392 = getelementptr inbounds i8, ptr %0, i64 1300
  %idxprom297 = sext i32 %120 to i64
  %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter301 = select i1 %cmp8, ptr %InvLevelScale4x4_Intra291, ptr %InvLevelScale4x4_Inter301
  %.1127 = select i1 %cmp8, i32 8, i32 13
  %arrayidx308 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter301, i64 0, i64 1, i64 %idxprom297
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %cofu, i8 0, i64 16, i1 false)
  store i32 0, ptr %is_v_block, align 4
  store i32 6, ptr %context313, align 8
  store i32 %.1127, ptr %currSE, align 8
  %124 = load ptr, ptr %partArr317, align 8
  %idxprom319 = zext nneg i32 %.1127 to i64
  %arrayidx320 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom319
  %125 = load i8, ptr %arrayidx320, align 1
  %idxprom321 = zext i8 %125 to i64
  %arrayidx322 = getelementptr inbounds %struct.datapartition, ptr %124, i64 %idxprom321
  %126 = load ptr, ptr %arrayidx322, align 8
  %ei_flag324 = getelementptr inbounds i8, ptr %126, i64 24
  %127 = load i32, ptr %ei_flag324, align 8
  %tobool325.not = icmp eq i32 %127, 0
  br i1 %tobool325.not, label %if.else328, label %if.then326

if.then326:                                       ; preds = %for.cond285.preheader
  store ptr @linfo_levrun_c2x2, ptr %mapping327, align 8
  br label %if.end330

if.else328:                                       ; preds = %for.cond285.preheader
  store ptr @readRunLevel_CABAC, ptr %reading329, align 8
  br label %if.end330

if.end330:                                        ; preds = %if.else328, %if.then326
  %128 = load i32, ptr %num_cdc_coeff, align 8
  %cmp3331042 = icmp sgt i32 %128, -1
  br i1 %cmp3331042, label %for.body340.lr.ph, label %for.end360

for.body340.lr.ph:                                ; preds = %if.end330
  %readSyntaxElement341 = getelementptr inbounds i8, ptr %arrayidx322, i64 40
  br label %for.body340

for.body340:                                      ; preds = %for.body340.lr.ph, %for.inc358
  %coef_ctr.01044 = phi i32 [ -1, %for.body340.lr.ph ], [ %add353, %for.inc358 ]
  %k284.01043 = phi i32 [ 0, %for.body340.lr.ph ], [ %inc359, %for.inc358 ]
  %129 = load ptr, ptr %readSyntaxElement341, align 8
  %call342 = call i32 %129(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx322) #14
  %130 = load i32, ptr %value1343, align 4
  %cmp344.not = icmp eq i32 %130, 0
  br i1 %cmp344.not, label %for.end360, label %for.inc358

for.inc358:                                       ; preds = %for.body340
  %131 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %131, 983040
  store i64 %or, ptr %cbp_blk, align 8
  %132 = load i32, ptr %value2351, align 8
  %add352 = add i32 %coef_ctr.01044, 1
  %add353 = add i32 %add352, %132
  %idxprom355 = sext i32 %add353 to i64
  %arrayidx356 = getelementptr inbounds [16 x i32], ptr %cofu, i64 0, i64 %idxprom355
  store i32 %130, ptr %arrayidx356, align 4
  %inc359 = add nuw nsw i32 %k284.01043, 1
  %133 = load i32, ptr %num_cdc_coeff, align 8
  %cmp333 = icmp slt i32 %k284.01043, %133
  br i1 %cmp333, label %for.body340, label %for.end360

for.end360:                                       ; preds = %for.body340, %for.inc358, %if.end330
  br i1 %6, label %if.then366, label %lor.lhs.false362

lor.lhs.false362:                                 ; preds = %for.end360
  %134 = load i32, ptr %is_lossless.i, align 4
  %cmp364 = icmp eq i32 %134, 1
  br i1 %cmp364, label %if.then366, label %if.else399

if.then366:                                       ; preds = %lor.lhs.false362, %for.end360
  %135 = load i32, ptr %cofu, align 8
  %136 = load ptr, ptr %cof411, align 8
  %arrayidx372 = getelementptr inbounds i8, ptr %136, i64 8
  %137 = load ptr, ptr %arrayidx372, align 8
  %138 = load ptr, ptr %137, align 8
  store i32 %135, ptr %138, align 4
  %139 = load i32, ptr %arrayidx376, align 4
  %140 = load ptr, ptr %cof411, align 8
  %arrayidx380 = getelementptr inbounds i8, ptr %140, i64 8
  %141 = load ptr, ptr %arrayidx380, align 8
  %142 = load ptr, ptr %141, align 8
  %arrayidx382 = getelementptr inbounds i8, ptr %142, i64 16
  store i32 %139, ptr %arrayidx382, align 4
  %143 = load i32, ptr %arrayidx384, align 8
  %144 = load ptr, ptr %cof411, align 8
  %arrayidx388 = getelementptr inbounds i8, ptr %144, i64 8
  %145 = load ptr, ptr %arrayidx388, align 8
  %arrayidx389 = getelementptr inbounds i8, ptr %145, i64 32
  %146 = load ptr, ptr %arrayidx389, align 8
  store i32 %143, ptr %146, align 4
  %147 = load i32, ptr %arrayidx392, align 4
  %148 = load ptr, ptr %cof411, align 8
  %arrayidx396 = getelementptr inbounds i8, ptr %148, i64 8
  %149 = load ptr, ptr %arrayidx396, align 8
  %arrayidx397 = getelementptr inbounds i8, ptr %149, i64 32
  %150 = load ptr, ptr %arrayidx397, align 8
  %arrayidx398 = getelementptr inbounds i8, ptr %150, i64 16
  store i32 %147, ptr %arrayidx398, align 4
  br label %for.inc454

if.else399:                                       ; preds = %lor.lhs.false362
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %temp) #14
  %151 = load i32, ptr %arrayidx308, align 4
  call void @ihadamard2x2(ptr noundef nonnull %cofu, ptr noundef nonnull %temp) #14
  %152 = load i32, ptr %temp, align 16
  %mul406 = mul nsw i32 %152, %151
  %shl409 = shl i32 %mul406, %119
  %shr410 = ashr i32 %shl409, 5
  %153 = load ptr, ptr %cof411, align 8
  %arrayidx414 = getelementptr inbounds i8, ptr %153, i64 8
  %154 = load ptr, ptr %arrayidx414, align 8
  %155 = load ptr, ptr %154, align 8
  store i32 %shr410, ptr %155, align 4
  %156 = load i32, ptr %arrayidx417, align 4
  %mul418 = mul nsw i32 %156, %151
  %shl421 = shl i32 %mul418, %119
  %shr422 = ashr i32 %shl421, 5
  %157 = load ptr, ptr %cof411, align 8
  %arrayidx426 = getelementptr inbounds i8, ptr %157, i64 8
  %158 = load ptr, ptr %arrayidx426, align 8
  %159 = load ptr, ptr %158, align 8
  %arrayidx428 = getelementptr inbounds i8, ptr %159, i64 16
  store i32 %shr422, ptr %arrayidx428, align 4
  %160 = load i32, ptr %arrayidx429, align 8
  %mul430 = mul nsw i32 %160, %151
  %shl433 = shl i32 %mul430, %119
  %shr434 = ashr i32 %shl433, 5
  %161 = load ptr, ptr %cof411, align 8
  %arrayidx438 = getelementptr inbounds i8, ptr %161, i64 8
  %162 = load ptr, ptr %arrayidx438, align 8
  %arrayidx439 = getelementptr inbounds i8, ptr %162, i64 32
  %163 = load ptr, ptr %arrayidx439, align 8
  store i32 %shr434, ptr %163, align 4
  %164 = load i32, ptr %arrayidx441, align 4
  %mul442 = mul nsw i32 %164, %151
  %shl445 = shl i32 %mul442, %119
  %shr446 = ashr i32 %shl445, 5
  %165 = load ptr, ptr %cof411, align 8
  %arrayidx450 = getelementptr inbounds i8, ptr %165, i64 8
  %166 = load ptr, ptr %arrayidx450, align 8
  %arrayidx451 = getelementptr inbounds i8, ptr %166, i64 32
  %167 = load ptr, ptr %arrayidx451, align 8
  %arrayidx452 = getelementptr inbounds i8, ptr %167, i64 16
  store i32 %shr446, ptr %arrayidx452, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %temp) #14
  br label %for.inc454

for.inc454:                                       ; preds = %if.then366, %if.else399
  %idxprom297.1 = sext i32 %123 to i64
  %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter3011128 = select i1 %cmp8, ptr %InvLevelScale4x4_Intra291, ptr %InvLevelScale4x4_Inter301
  %.1129 = select i1 %cmp8, i32 8, i32 13
  %arrayidx298.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter3011128, i64 0, i64 2, i64 %idxprom297.1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %cofu, i8 0, i64 16, i1 false)
  store i32 2, ptr %is_v_block, align 4
  store i32 6, ptr %context313, align 8
  store i32 %.1129, ptr %currSE, align 8
  %168 = load ptr, ptr %partArr317, align 8
  %idxprom319.1 = zext nneg i32 %.1129 to i64
  %arrayidx320.1 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom319.1
  %169 = load i8, ptr %arrayidx320.1, align 1
  %idxprom321.1 = zext i8 %169 to i64
  %arrayidx322.1 = getelementptr inbounds %struct.datapartition, ptr %168, i64 %idxprom321.1
  %170 = load ptr, ptr %arrayidx322.1, align 8
  %ei_flag324.1 = getelementptr inbounds i8, ptr %170, i64 24
  %171 = load i32, ptr %ei_flag324.1, align 8
  %tobool325.not.1 = icmp eq i32 %171, 0
  br i1 %tobool325.not.1, label %if.else328.1, label %if.then326.1

if.then326.1:                                     ; preds = %for.inc454
  store ptr @linfo_levrun_c2x2, ptr %mapping327, align 8
  br label %if.end330.1

if.else328.1:                                     ; preds = %for.inc454
  store ptr @readRunLevel_CABAC, ptr %reading329, align 8
  br label %if.end330.1

if.end330.1:                                      ; preds = %if.else328.1, %if.then326.1
  %172 = load i32, ptr %num_cdc_coeff, align 8
  %cmp3331042.1 = icmp sgt i32 %172, -1
  br i1 %cmp3331042.1, label %for.body340.lr.ph.1, label %for.end360.1

for.body340.lr.ph.1:                              ; preds = %if.end330.1
  %readSyntaxElement341.1 = getelementptr inbounds i8, ptr %arrayidx322.1, i64 40
  br label %for.body340.1

for.body340.1:                                    ; preds = %for.inc358.1, %for.body340.lr.ph.1
  %coef_ctr.01044.1 = phi i32 [ -1, %for.body340.lr.ph.1 ], [ %add353.1, %for.inc358.1 ]
  %k284.01043.1 = phi i32 [ 0, %for.body340.lr.ph.1 ], [ %inc359.1, %for.inc358.1 ]
  %173 = load ptr, ptr %readSyntaxElement341.1, align 8
  %call342.1 = call i32 %173(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx322.1) #14
  %174 = load i32, ptr %value1343, align 4
  %cmp344.not.1 = icmp eq i32 %174, 0
  br i1 %cmp344.not.1, label %for.end360.1, label %for.inc358.1

for.inc358.1:                                     ; preds = %for.body340.1
  %175 = load i64, ptr %cbp_blk, align 8
  %or.1 = or i64 %175, 15728640
  store i64 %or.1, ptr %cbp_blk, align 8
  %176 = load i32, ptr %value2351, align 8
  %add352.1 = add i32 %coef_ctr.01044.1, 1
  %add353.1 = add i32 %add352.1, %176
  %idxprom355.1 = sext i32 %add353.1 to i64
  %arrayidx356.1 = getelementptr inbounds [16 x i32], ptr %cofu, i64 0, i64 %idxprom355.1
  store i32 %174, ptr %arrayidx356.1, align 4
  %inc359.1 = add nuw nsw i32 %k284.01043.1, 1
  %177 = load i32, ptr %num_cdc_coeff, align 8
  %cmp333.1 = icmp slt i32 %k284.01043.1, %177
  br i1 %cmp333.1, label %for.body340.1, label %for.end360.1

for.end360.1:                                     ; preds = %for.body340.1, %for.inc358.1, %if.end330.1
  br i1 %6, label %if.then366.1, label %lor.lhs.false362.1

lor.lhs.false362.1:                               ; preds = %for.end360.1
  %178 = load i32, ptr %is_lossless.i, align 4
  %cmp364.1 = icmp eq i32 %178, 1
  br i1 %cmp364.1, label %if.then366.1, label %if.else399.1

if.else399.1:                                     ; preds = %lor.lhs.false362.1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %temp) #14
  %179 = load i32, ptr %arrayidx298.1, align 4
  call void @ihadamard2x2(ptr noundef nonnull %cofu, ptr noundef nonnull %temp) #14
  %180 = load i32, ptr %temp, align 16
  %mul406.1 = mul nsw i32 %180, %179
  %shl409.1 = shl i32 %mul406.1, %122
  %shr410.1 = ashr i32 %shl409.1, 5
  %181 = load ptr, ptr %cof411, align 8
  %arrayidx414.1 = getelementptr inbounds i8, ptr %181, i64 16
  %182 = load ptr, ptr %arrayidx414.1, align 8
  %183 = load ptr, ptr %182, align 8
  store i32 %shr410.1, ptr %183, align 4
  %184 = load i32, ptr %arrayidx417, align 4
  %mul418.1 = mul nsw i32 %184, %179
  %shl421.1 = shl i32 %mul418.1, %122
  %shr422.1 = ashr i32 %shl421.1, 5
  %185 = load ptr, ptr %cof411, align 8
  %arrayidx426.1 = getelementptr inbounds i8, ptr %185, i64 16
  %186 = load ptr, ptr %arrayidx426.1, align 8
  %187 = load ptr, ptr %186, align 8
  %arrayidx428.1 = getelementptr inbounds i8, ptr %187, i64 16
  store i32 %shr422.1, ptr %arrayidx428.1, align 4
  %188 = load i32, ptr %arrayidx429, align 8
  %mul430.1 = mul nsw i32 %188, %179
  %shl433.1 = shl i32 %mul430.1, %122
  %shr434.1 = ashr i32 %shl433.1, 5
  %189 = load ptr, ptr %cof411, align 8
  %arrayidx438.1 = getelementptr inbounds i8, ptr %189, i64 16
  %190 = load ptr, ptr %arrayidx438.1, align 8
  %arrayidx439.1 = getelementptr inbounds i8, ptr %190, i64 32
  %191 = load ptr, ptr %arrayidx439.1, align 8
  store i32 %shr434.1, ptr %191, align 4
  %192 = load i32, ptr %arrayidx441, align 4
  %mul442.1 = mul nsw i32 %192, %179
  %shl445.1 = shl i32 %mul442.1, %122
  %shr446.1 = ashr i32 %shl445.1, 5
  %193 = load ptr, ptr %cof411, align 8
  %arrayidx450.1 = getelementptr inbounds i8, ptr %193, i64 16
  %194 = load ptr, ptr %arrayidx450.1, align 8
  %arrayidx451.1 = getelementptr inbounds i8, ptr %194, i64 32
  %195 = load ptr, ptr %arrayidx451.1, align 8
  %arrayidx452.1 = getelementptr inbounds i8, ptr %195, i64 16
  store i32 %shr446.1, ptr %arrayidx452.1, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %temp) #14
  br label %for.inc454.1

if.then366.1:                                     ; preds = %lor.lhs.false362.1, %for.end360.1
  %196 = load i32, ptr %cofu, align 8
  %197 = load ptr, ptr %cof411, align 8
  %arrayidx372.1 = getelementptr inbounds i8, ptr %197, i64 16
  %198 = load ptr, ptr %arrayidx372.1, align 8
  %199 = load ptr, ptr %198, align 8
  store i32 %196, ptr %199, align 4
  %200 = load i32, ptr %arrayidx376, align 4
  %201 = load ptr, ptr %cof411, align 8
  %arrayidx380.1 = getelementptr inbounds i8, ptr %201, i64 16
  %202 = load ptr, ptr %arrayidx380.1, align 8
  %203 = load ptr, ptr %202, align 8
  %arrayidx382.1 = getelementptr inbounds i8, ptr %203, i64 16
  store i32 %200, ptr %arrayidx382.1, align 4
  %204 = load i32, ptr %arrayidx384, align 8
  %205 = load ptr, ptr %cof411, align 8
  %arrayidx388.1 = getelementptr inbounds i8, ptr %205, i64 16
  %206 = load ptr, ptr %arrayidx388.1, align 8
  %arrayidx389.1 = getelementptr inbounds i8, ptr %206, i64 32
  %207 = load ptr, ptr %arrayidx389.1, align 8
  store i32 %204, ptr %207, align 4
  %208 = load i32, ptr %arrayidx392, align 4
  %209 = load ptr, ptr %cof411, align 8
  %arrayidx396.1 = getelementptr inbounds i8, ptr %209, i64 16
  %210 = load ptr, ptr %arrayidx396.1, align 8
  %arrayidx397.1 = getelementptr inbounds i8, ptr %210, i64 32
  %211 = load ptr, ptr %arrayidx397.1, align 8
  %arrayidx398.1 = getelementptr inbounds i8, ptr %211, i64 16
  store i32 %208, ptr %arrayidx398.1, align 4
  br label %for.inc454.1

for.inc454.1:                                     ; preds = %if.then366.1, %if.else399.1
  %cmp458 = icmp sgt i32 %cbp.2, 31
  br i1 %cmp458, label %if.then460, label %if.end720

if.then460:                                       ; preds = %for.inc454.1
  store i32 7, ptr %context313, align 8
  %212 = load i32, ptr %is_intra_block7, align 8
  %tobool463.not = icmp eq i32 %212, 0
  %cond464 = select i1 %tobool463.not, i32 15, i32 10
  store i32 %cond464, ptr %currSE, align 8
  %213 = load ptr, ptr %partArr317, align 8
  %idxprom468 = zext nneg i32 %cond464 to i64
  %arrayidx469 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom468
  %214 = load i8, ptr %arrayidx469, align 1
  %idxprom470 = zext i8 %214 to i64
  %arrayidx471 = getelementptr inbounds %struct.datapartition, ptr %213, i64 %idxprom470
  %215 = load ptr, ptr %arrayidx471, align 8
  %ei_flag473 = getelementptr inbounds i8, ptr %215, i64 24
  %216 = load i32, ptr %ei_flag473, align 8
  %tobool474.not = icmp eq i32 %216, 0
  br i1 %tobool474.not, label %if.else477, label %if.then475

if.then475:                                       ; preds = %if.then460
  store ptr @linfo_levrun_inter, ptr %mapping327, align 8
  br label %if.end479

if.else477:                                       ; preds = %if.then460
  store ptr @readRunLevel_CABAC, ptr %reading329, align 8
  br label %if.end479

if.end479:                                        ; preds = %if.else477, %if.then475
  %217 = load i32, ptr %is_lossless.i, align 4
  %cmp481 = icmp eq i32 %217, 0
  %num_blk8x8_uv = getelementptr inbounds i8, ptr %2, i64 849096
  %218 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp4871054 = icmp sgt i32 %218, 0
  br i1 %cmp481, label %for.cond486.preheader, label %for.cond619.preheader

for.cond619.preheader:                            ; preds = %if.end479
  br i1 %cmp4871054, label %for.body623.lr.ph, label %if.end720

for.body623.lr.ph:                                ; preds = %for.cond619.preheader
  %num_uv_blocks624 = getelementptr inbounds i8, ptr %2, i64 849100
  %idxprom633 = sext i32 %sub to i64
  %arrayidx647 = select i1 %12, ptr getelementptr inbounds (i8, ptr @SNGL_SCAN, i64 2), ptr getelementptr inbounds (i8, ptr @FIELD_SCAN, i64 2)
  %subblock_y656 = getelementptr inbounds i8, ptr %currMB, i64 64
  %subblock_x664 = getelementptr inbounds i8, ptr %currMB, i64 60
  %readSyntaxElement674 = getelementptr inbounds i8, ptr %arrayidx471, i64 40
  br label %for.body623

for.cond486.preheader:                            ; preds = %if.end479
  br i1 %cmp4871054, label %for.body489.lr.ph, label %if.end720

for.body489.lr.ph:                                ; preds = %for.cond486.preheader
  %num_uv_blocks = getelementptr inbounds i8, ptr %2, i64 849100
  %idxprom521 = sext i32 %sub to i64
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  %arrayidx549 = select i1 %12, ptr getelementptr inbounds (i8, ptr @SNGL_SCAN, i64 2), ptr getelementptr inbounds (i8, ptr @FIELD_SCAN, i64 2)
  %readSyntaxElement560 = getelementptr inbounds i8, ptr %arrayidx471, i64 40
  %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter3011130 = select i1 %cmp8, ptr %InvLevelScale4x4_Intra291, ptr %InvLevelScale4x4_Inter301
  br label %for.body489

for.body489:                                      ; preds = %for.body489.lr.ph, %for.inc608.3
  %indvars.iv1070 = phi i64 [ 0, %for.body489.lr.ph ], [ %indvars.iv.next1071, %for.inc608.3 ]
  %219 = load i32, ptr %num_uv_blocks, align 4
  %220 = sext i32 %219 to i64
  %cmp491 = icmp sge i64 %indvars.iv1070, %220
  %conv492 = zext i1 %cmp491 to i32
  store i32 %conv492, ptr %is_v_block, align 4
  %add497 = select i1 %cmp491, i64 2, i64 1
  %idxprom500 = zext i1 %cmp491 to i64
  %arrayidx501 = getelementptr inbounds [2 x i32], ptr %qp_rem_uv, i64 0, i64 %idxprom500
  %221 = load i32, ptr %arrayidx501, align 4
  %idxprom502 = sext i32 %221 to i64
  %arrayidx513 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra291.InvLevelScale4x4_Inter3011130, i64 0, i64 %add497, i64 %idxprom502
  %arrayidx589 = getelementptr inbounds [2 x i32], ptr %qp_per_uv, i64 0, i64 %idxprom500
  %arrayidx526 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 0
  %222 = load i8, ptr %arrayidx526, align 4
  %conv527 = zext i8 %222 to i64
  %arrayidx533 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 0
  %223 = load i8, ptr %arrayidx533, align 4
  %conv534 = zext i8 %223 to i64
  %arrayidx540 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 0
  %224 = load i8, ptr %arrayidx540, align 4
  %conv541 = zext i8 %224 to i32
  store i32 %conv541, ptr %subblock_y, align 8
  %arrayidx547 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 0
  %225 = load i8, ptr %arrayidx547, align 4
  %conv548 = zext i8 %225 to i32
  store i32 %conv548, ptr %subblock_x, align 4
  %arrayidx569 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1070, i64 0
  %.idx989 = shl nuw nsw i64 %conv534, 5
  %.idx990 = shl nuw nsw i64 %conv527, 4
  br label %for.body559

for.body559:                                      ; preds = %for.body489, %for.inc605
  %k485.01052 = phi i32 [ 0, %for.body489 ], [ %inc606, %for.inc605 ]
  %pos_scan_4x4.21051 = phi ptr [ %arrayidx549, %for.body489 ], [ %incdec.ptr581, %for.inc605 ]
  %226 = load ptr, ptr %readSyntaxElement560, align 8
  %call561 = call i32 %226(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %227 = load i32, ptr %value1343, align 4
  %cmp563.not = icmp eq i32 %227, 0
  br i1 %cmp563.not, label %for.inc608, label %for.inc605

for.inc605:                                       ; preds = %for.body559
  %228 = load i8, ptr %arrayidx569, align 4
  %idxprom.i1024 = zext nneg i8 %228 to i64
  %arrayidx.i1025 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1024
  %229 = load i64, ptr %arrayidx.i1025, align 8
  %230 = load i64, ptr %cbp_blk, align 8
  %or574 = or i64 %230, %229
  store i64 %or574, ptr %cbp_blk, align 8
  %231 = load i32, ptr %value2351, align 8
  %shl576 = shl i32 %231, 1
  %idx.ext577 = sext i32 %shl576 to i64
  %add.ptr578 = getelementptr inbounds i8, ptr %pos_scan_4x4.21051, i64 %idx.ext577
  %incdec.ptr579 = getelementptr inbounds i8, ptr %add.ptr578, i64 1
  %232 = load i8, ptr %add.ptr578, align 1
  %conv580 = zext i8 %232 to i64
  %incdec.ptr581 = getelementptr inbounds i8, ptr %add.ptr578, i64 2
  %233 = load i8, ptr %incdec.ptr579, align 1
  %conv582 = zext i8 %233 to i64
  %arrayidx586 = getelementptr inbounds [4 x i32], ptr %arrayidx513, i64 %conv582, i64 %conv580
  %234 = load i32, ptr %arrayidx586, align 4
  %mul587 = mul nsw i32 %234, %227
  %235 = load i32, ptr %arrayidx589, align 4
  %shl590 = shl i32 %mul587, %235
  %add.i1026 = add nsw i32 %shl590, 8
  %shr.i = ashr i32 %add.i1026, 4
  %236 = load ptr, ptr %cof411, align 8
  %arrayidx595 = getelementptr inbounds ptr, ptr %236, i64 %add497
  %237 = load ptr, ptr %arrayidx595, align 8
  %238 = getelementptr inbounds i8, ptr %237, i64 %.idx989
  %arrayidx599 = getelementptr inbounds ptr, ptr %238, i64 %conv582
  %239 = load ptr, ptr %arrayidx599, align 8
  %240 = getelementptr inbounds i8, ptr %239, i64 %.idx990
  %arrayidx603 = getelementptr inbounds i32, ptr %240, i64 %conv580
  store i32 %shr.i, ptr %arrayidx603, align 4
  %inc606 = add nuw nsw i32 %k485.01052, 1
  %cmp552 = icmp ult i32 %k485.01052, 15
  br i1 %cmp552, label %for.body559, label %for.inc608

for.inc608:                                       ; preds = %for.body559, %for.inc605
  %arrayidx526.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 1
  %241 = load i8, ptr %arrayidx526.1, align 1
  %conv527.1 = zext i8 %241 to i64
  %arrayidx533.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 1
  %242 = load i8, ptr %arrayidx533.1, align 1
  %conv534.1 = zext i8 %242 to i64
  %arrayidx540.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 1
  %243 = load i8, ptr %arrayidx540.1, align 1
  %conv541.1 = zext i8 %243 to i32
  store i32 %conv541.1, ptr %subblock_y, align 8
  %arrayidx547.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 1
  %244 = load i8, ptr %arrayidx547.1, align 1
  %conv548.1 = zext i8 %244 to i32
  store i32 %conv548.1, ptr %subblock_x, align 4
  %arrayidx569.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1070, i64 1
  %.idx989.1 = shl nuw nsw i64 %conv534.1, 5
  %.idx990.1 = shl nuw nsw i64 %conv527.1, 4
  br label %for.body559.1

for.body559.1:                                    ; preds = %for.inc605.1, %for.inc608
  %k485.01052.1 = phi i32 [ 0, %for.inc608 ], [ %inc606.1, %for.inc605.1 ]
  %pos_scan_4x4.21051.1 = phi ptr [ %arrayidx549, %for.inc608 ], [ %incdec.ptr581.1, %for.inc605.1 ]
  %245 = load ptr, ptr %readSyntaxElement560, align 8
  %call561.1 = call i32 %245(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %246 = load i32, ptr %value1343, align 4
  %cmp563.not.1 = icmp eq i32 %246, 0
  br i1 %cmp563.not.1, label %for.inc608.1, label %for.inc605.1

for.inc605.1:                                     ; preds = %for.body559.1
  %247 = load i8, ptr %arrayidx569.1, align 1
  %idxprom.i1024.1 = zext nneg i8 %247 to i64
  %arrayidx.i1025.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1024.1
  %248 = load i64, ptr %arrayidx.i1025.1, align 8
  %249 = load i64, ptr %cbp_blk, align 8
  %or574.1 = or i64 %249, %248
  store i64 %or574.1, ptr %cbp_blk, align 8
  %250 = load i32, ptr %value2351, align 8
  %shl576.1 = shl i32 %250, 1
  %idx.ext577.1 = sext i32 %shl576.1 to i64
  %add.ptr578.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.21051.1, i64 %idx.ext577.1
  %incdec.ptr579.1 = getelementptr inbounds i8, ptr %add.ptr578.1, i64 1
  %251 = load i8, ptr %add.ptr578.1, align 1
  %conv580.1 = zext i8 %251 to i64
  %incdec.ptr581.1 = getelementptr inbounds i8, ptr %add.ptr578.1, i64 2
  %252 = load i8, ptr %incdec.ptr579.1, align 1
  %conv582.1 = zext i8 %252 to i64
  %arrayidx586.1 = getelementptr inbounds [4 x i32], ptr %arrayidx513, i64 %conv582.1, i64 %conv580.1
  %253 = load i32, ptr %arrayidx586.1, align 4
  %mul587.1 = mul nsw i32 %253, %246
  %254 = load i32, ptr %arrayidx589, align 4
  %shl590.1 = shl i32 %mul587.1, %254
  %add.i1026.1 = add nsw i32 %shl590.1, 8
  %shr.i.1 = ashr i32 %add.i1026.1, 4
  %255 = load ptr, ptr %cof411, align 8
  %arrayidx595.1 = getelementptr inbounds ptr, ptr %255, i64 %add497
  %256 = load ptr, ptr %arrayidx595.1, align 8
  %257 = getelementptr inbounds i8, ptr %256, i64 %.idx989.1
  %arrayidx599.1 = getelementptr inbounds ptr, ptr %257, i64 %conv582.1
  %258 = load ptr, ptr %arrayidx599.1, align 8
  %259 = getelementptr inbounds i8, ptr %258, i64 %.idx990.1
  %arrayidx603.1 = getelementptr inbounds i32, ptr %259, i64 %conv580.1
  store i32 %shr.i.1, ptr %arrayidx603.1, align 4
  %inc606.1 = add nuw nsw i32 %k485.01052.1, 1
  %cmp552.1 = icmp ult i32 %k485.01052.1, 15
  br i1 %cmp552.1, label %for.body559.1, label %for.inc608.1

for.inc608.1:                                     ; preds = %for.body559.1, %for.inc605.1
  %arrayidx526.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 2
  %260 = load i8, ptr %arrayidx526.2, align 2
  %conv527.2 = zext i8 %260 to i64
  %arrayidx533.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 2
  %261 = load i8, ptr %arrayidx533.2, align 2
  %conv534.2 = zext i8 %261 to i64
  %arrayidx540.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 2
  %262 = load i8, ptr %arrayidx540.2, align 2
  %conv541.2 = zext i8 %262 to i32
  store i32 %conv541.2, ptr %subblock_y, align 8
  %arrayidx547.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 2
  %263 = load i8, ptr %arrayidx547.2, align 2
  %conv548.2 = zext i8 %263 to i32
  store i32 %conv548.2, ptr %subblock_x, align 4
  %arrayidx569.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1070, i64 2
  %.idx989.2 = shl nuw nsw i64 %conv534.2, 5
  %.idx990.2 = shl nuw nsw i64 %conv527.2, 4
  br label %for.body559.2

for.body559.2:                                    ; preds = %for.inc605.2, %for.inc608.1
  %k485.01052.2 = phi i32 [ 0, %for.inc608.1 ], [ %inc606.2, %for.inc605.2 ]
  %pos_scan_4x4.21051.2 = phi ptr [ %arrayidx549, %for.inc608.1 ], [ %incdec.ptr581.2, %for.inc605.2 ]
  %264 = load ptr, ptr %readSyntaxElement560, align 8
  %call561.2 = call i32 %264(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %265 = load i32, ptr %value1343, align 4
  %cmp563.not.2 = icmp eq i32 %265, 0
  br i1 %cmp563.not.2, label %for.inc608.2, label %for.inc605.2

for.inc605.2:                                     ; preds = %for.body559.2
  %266 = load i8, ptr %arrayidx569.2, align 2
  %idxprom.i1024.2 = zext nneg i8 %266 to i64
  %arrayidx.i1025.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1024.2
  %267 = load i64, ptr %arrayidx.i1025.2, align 8
  %268 = load i64, ptr %cbp_blk, align 8
  %or574.2 = or i64 %268, %267
  store i64 %or574.2, ptr %cbp_blk, align 8
  %269 = load i32, ptr %value2351, align 8
  %shl576.2 = shl i32 %269, 1
  %idx.ext577.2 = sext i32 %shl576.2 to i64
  %add.ptr578.2 = getelementptr inbounds i8, ptr %pos_scan_4x4.21051.2, i64 %idx.ext577.2
  %incdec.ptr579.2 = getelementptr inbounds i8, ptr %add.ptr578.2, i64 1
  %270 = load i8, ptr %add.ptr578.2, align 1
  %conv580.2 = zext i8 %270 to i64
  %incdec.ptr581.2 = getelementptr inbounds i8, ptr %add.ptr578.2, i64 2
  %271 = load i8, ptr %incdec.ptr579.2, align 1
  %conv582.2 = zext i8 %271 to i64
  %arrayidx586.2 = getelementptr inbounds [4 x i32], ptr %arrayidx513, i64 %conv582.2, i64 %conv580.2
  %272 = load i32, ptr %arrayidx586.2, align 4
  %mul587.2 = mul nsw i32 %272, %265
  %273 = load i32, ptr %arrayidx589, align 4
  %shl590.2 = shl i32 %mul587.2, %273
  %add.i1026.2 = add nsw i32 %shl590.2, 8
  %shr.i.2 = ashr i32 %add.i1026.2, 4
  %274 = load ptr, ptr %cof411, align 8
  %arrayidx595.2 = getelementptr inbounds ptr, ptr %274, i64 %add497
  %275 = load ptr, ptr %arrayidx595.2, align 8
  %276 = getelementptr inbounds i8, ptr %275, i64 %.idx989.2
  %arrayidx599.2 = getelementptr inbounds ptr, ptr %276, i64 %conv582.2
  %277 = load ptr, ptr %arrayidx599.2, align 8
  %278 = getelementptr inbounds i8, ptr %277, i64 %.idx990.2
  %arrayidx603.2 = getelementptr inbounds i32, ptr %278, i64 %conv580.2
  store i32 %shr.i.2, ptr %arrayidx603.2, align 4
  %inc606.2 = add nuw nsw i32 %k485.01052.2, 1
  %cmp552.2 = icmp ult i32 %k485.01052.2, 15
  br i1 %cmp552.2, label %for.body559.2, label %for.inc608.2

for.inc608.2:                                     ; preds = %for.body559.2, %for.inc605.2
  %arrayidx526.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 3
  %279 = load i8, ptr %arrayidx526.3, align 1
  %conv527.3 = zext i8 %279 to i64
  %arrayidx533.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 3
  %280 = load i8, ptr %arrayidx533.3, align 1
  %conv534.3 = zext i8 %280 to i64
  %arrayidx540.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 3
  %281 = load i8, ptr %arrayidx540.3, align 1
  %conv541.3 = zext i8 %281 to i32
  store i32 %conv541.3, ptr %subblock_y, align 8
  %arrayidx547.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom521, i64 %indvars.iv1070, i64 3
  %282 = load i8, ptr %arrayidx547.3, align 1
  %conv548.3 = zext i8 %282 to i32
  store i32 %conv548.3, ptr %subblock_x, align 4
  %arrayidx569.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1070, i64 3
  %.idx989.3 = shl nuw nsw i64 %conv534.3, 5
  %.idx990.3 = shl nuw nsw i64 %conv527.3, 4
  br label %for.body559.3

for.body559.3:                                    ; preds = %for.inc605.3, %for.inc608.2
  %k485.01052.3 = phi i32 [ 0, %for.inc608.2 ], [ %inc606.3, %for.inc605.3 ]
  %pos_scan_4x4.21051.3 = phi ptr [ %arrayidx549, %for.inc608.2 ], [ %incdec.ptr581.3, %for.inc605.3 ]
  %283 = load ptr, ptr %readSyntaxElement560, align 8
  %call561.3 = call i32 %283(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %284 = load i32, ptr %value1343, align 4
  %cmp563.not.3 = icmp eq i32 %284, 0
  br i1 %cmp563.not.3, label %for.inc608.3, label %for.inc605.3

for.inc605.3:                                     ; preds = %for.body559.3
  %285 = load i8, ptr %arrayidx569.3, align 1
  %idxprom.i1024.3 = zext nneg i8 %285 to i64
  %arrayidx.i1025.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1024.3
  %286 = load i64, ptr %arrayidx.i1025.3, align 8
  %287 = load i64, ptr %cbp_blk, align 8
  %or574.3 = or i64 %287, %286
  store i64 %or574.3, ptr %cbp_blk, align 8
  %288 = load i32, ptr %value2351, align 8
  %shl576.3 = shl i32 %288, 1
  %idx.ext577.3 = sext i32 %shl576.3 to i64
  %add.ptr578.3 = getelementptr inbounds i8, ptr %pos_scan_4x4.21051.3, i64 %idx.ext577.3
  %incdec.ptr579.3 = getelementptr inbounds i8, ptr %add.ptr578.3, i64 1
  %289 = load i8, ptr %add.ptr578.3, align 1
  %conv580.3 = zext i8 %289 to i64
  %incdec.ptr581.3 = getelementptr inbounds i8, ptr %add.ptr578.3, i64 2
  %290 = load i8, ptr %incdec.ptr579.3, align 1
  %conv582.3 = zext i8 %290 to i64
  %arrayidx586.3 = getelementptr inbounds [4 x i32], ptr %arrayidx513, i64 %conv582.3, i64 %conv580.3
  %291 = load i32, ptr %arrayidx586.3, align 4
  %mul587.3 = mul nsw i32 %291, %284
  %292 = load i32, ptr %arrayidx589, align 4
  %shl590.3 = shl i32 %mul587.3, %292
  %add.i1026.3 = add nsw i32 %shl590.3, 8
  %shr.i.3 = ashr i32 %add.i1026.3, 4
  %293 = load ptr, ptr %cof411, align 8
  %arrayidx595.3 = getelementptr inbounds ptr, ptr %293, i64 %add497
  %294 = load ptr, ptr %arrayidx595.3, align 8
  %295 = getelementptr inbounds i8, ptr %294, i64 %.idx989.3
  %arrayidx599.3 = getelementptr inbounds ptr, ptr %295, i64 %conv582.3
  %296 = load ptr, ptr %arrayidx599.3, align 8
  %297 = getelementptr inbounds i8, ptr %296, i64 %.idx990.3
  %arrayidx603.3 = getelementptr inbounds i32, ptr %297, i64 %conv580.3
  store i32 %shr.i.3, ptr %arrayidx603.3, align 4
  %inc606.3 = add nuw nsw i32 %k485.01052.3, 1
  %cmp552.3 = icmp ult i32 %k485.01052.3, 15
  br i1 %cmp552.3, label %for.body559.3, label %for.inc608.3

for.inc608.3:                                     ; preds = %for.body559.3, %for.inc605.3
  %indvars.iv.next1071 = add nuw nsw i64 %indvars.iv1070, 1
  %298 = load i32, ptr %num_blk8x8_uv, align 8
  %299 = sext i32 %298 to i64
  %cmp487 = icmp slt i64 %indvars.iv.next1071, %299
  br i1 %cmp487, label %for.body489, label %if.end720

for.body623:                                      ; preds = %for.body623.lr.ph, %for.inc713.3
  %indvars.iv = phi i64 [ 0, %for.body623.lr.ph ], [ %indvars.iv.next, %for.inc713.3 ]
  %300 = load i32, ptr %num_uv_blocks624, align 4
  %301 = sext i32 %300 to i64
  %cmp626 = icmp sge i64 %indvars.iv, %301
  %conv627 = zext i1 %cmp626 to i32
  store i32 %conv627, ptr %is_v_block, align 4
  %add698 = select i1 %cmp626, i64 2, i64 1
  %arrayidx638 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 0
  %302 = load i8, ptr %arrayidx638, align 4
  %conv639 = zext i8 %302 to i64
  %arrayidx645 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 0
  %303 = load i8, ptr %arrayidx645, align 4
  %conv646 = zext i8 %303 to i64
  %arrayidx654 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 0
  %304 = load i8, ptr %arrayidx654, align 4
  %conv655 = zext i8 %304 to i32
  store i32 %conv655, ptr %subblock_y656, align 8
  %arrayidx662 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 0
  %305 = load i8, ptr %arrayidx662, align 4
  %conv663 = zext i8 %305 to i32
  store i32 %conv663, ptr %subblock_x664, align 4
  %arrayidx683 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv, i64 0
  %.idx = shl nuw nsw i64 %conv646, 5
  %.idx988 = shl nuw nsw i64 %conv639, 4
  br label %for.body673

for.body673:                                      ; preds = %for.body623, %for.inc710
  %k617.01047 = phi i32 [ 0, %for.body623 ], [ %inc711, %for.inc710 ]
  %pos_scan_4x4.41046 = phi ptr [ %arrayidx647, %for.body623 ], [ %incdec.ptr695, %for.inc710 ]
  %306 = load ptr, ptr %readSyntaxElement674, align 8
  %call675 = call i32 %306(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %307 = load i32, ptr %value1343, align 4
  %cmp677.not = icmp eq i32 %307, 0
  br i1 %cmp677.not, label %for.inc713, label %for.inc710

for.inc710:                                       ; preds = %for.body673
  %308 = load i8, ptr %arrayidx683, align 4
  %idxprom.i1029 = zext nneg i8 %308 to i64
  %arrayidx.i1030 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1029
  %309 = load i64, ptr %arrayidx.i1030, align 8
  %310 = load i64, ptr %cbp_blk, align 8
  %or688 = or i64 %310, %309
  store i64 %or688, ptr %cbp_blk, align 8
  %311 = load i32, ptr %value2351, align 8
  %shl690 = shl i32 %311, 1
  %idx.ext691 = sext i32 %shl690 to i64
  %add.ptr692 = getelementptr inbounds i8, ptr %pos_scan_4x4.41046, i64 %idx.ext691
  %incdec.ptr693 = getelementptr inbounds i8, ptr %add.ptr692, i64 1
  %312 = load i8, ptr %add.ptr692, align 1
  %conv694 = zext i8 %312 to i64
  %incdec.ptr695 = getelementptr inbounds i8, ptr %add.ptr692, i64 2
  %313 = load i8, ptr %incdec.ptr693, align 1
  %conv696 = zext i8 %313 to i64
  %314 = load ptr, ptr %cof411, align 8
  %arrayidx700 = getelementptr inbounds ptr, ptr %314, i64 %add698
  %315 = load ptr, ptr %arrayidx700, align 8
  %316 = getelementptr inbounds i8, ptr %315, i64 %.idx
  %arrayidx704 = getelementptr inbounds ptr, ptr %316, i64 %conv696
  %317 = load ptr, ptr %arrayidx704, align 8
  %318 = getelementptr inbounds i8, ptr %317, i64 %.idx988
  %arrayidx708 = getelementptr inbounds i32, ptr %318, i64 %conv694
  store i32 %307, ptr %arrayidx708, align 4
  %inc711 = add nuw nsw i32 %k617.01047, 1
  %cmp666 = icmp ult i32 %k617.01047, 15
  br i1 %cmp666, label %for.body673, label %for.inc713

for.inc713:                                       ; preds = %for.body673, %for.inc710
  %arrayidx638.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 1
  %319 = load i8, ptr %arrayidx638.1, align 1
  %conv639.1 = zext i8 %319 to i64
  %arrayidx645.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 1
  %320 = load i8, ptr %arrayidx645.1, align 1
  %conv646.1 = zext i8 %320 to i64
  %arrayidx654.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 1
  %321 = load i8, ptr %arrayidx654.1, align 1
  %conv655.1 = zext i8 %321 to i32
  store i32 %conv655.1, ptr %subblock_y656, align 8
  %arrayidx662.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 1
  %322 = load i8, ptr %arrayidx662.1, align 1
  %conv663.1 = zext i8 %322 to i32
  store i32 %conv663.1, ptr %subblock_x664, align 4
  %arrayidx683.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv, i64 1
  %.idx.1 = shl nuw nsw i64 %conv646.1, 5
  %.idx988.1 = shl nuw nsw i64 %conv639.1, 4
  br label %for.body673.1

for.body673.1:                                    ; preds = %for.inc710.1, %for.inc713
  %k617.01047.1 = phi i32 [ 0, %for.inc713 ], [ %inc711.1, %for.inc710.1 ]
  %pos_scan_4x4.41046.1 = phi ptr [ %arrayidx647, %for.inc713 ], [ %incdec.ptr695.1, %for.inc710.1 ]
  %323 = load ptr, ptr %readSyntaxElement674, align 8
  %call675.1 = call i32 %323(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %324 = load i32, ptr %value1343, align 4
  %cmp677.not.1 = icmp eq i32 %324, 0
  br i1 %cmp677.not.1, label %for.inc713.1, label %for.inc710.1

for.inc710.1:                                     ; preds = %for.body673.1
  %325 = load i8, ptr %arrayidx683.1, align 1
  %idxprom.i1029.1 = zext nneg i8 %325 to i64
  %arrayidx.i1030.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1029.1
  %326 = load i64, ptr %arrayidx.i1030.1, align 8
  %327 = load i64, ptr %cbp_blk, align 8
  %or688.1 = or i64 %327, %326
  store i64 %or688.1, ptr %cbp_blk, align 8
  %328 = load i32, ptr %value2351, align 8
  %shl690.1 = shl i32 %328, 1
  %idx.ext691.1 = sext i32 %shl690.1 to i64
  %add.ptr692.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.41046.1, i64 %idx.ext691.1
  %incdec.ptr693.1 = getelementptr inbounds i8, ptr %add.ptr692.1, i64 1
  %329 = load i8, ptr %add.ptr692.1, align 1
  %conv694.1 = zext i8 %329 to i64
  %incdec.ptr695.1 = getelementptr inbounds i8, ptr %add.ptr692.1, i64 2
  %330 = load i8, ptr %incdec.ptr693.1, align 1
  %conv696.1 = zext i8 %330 to i64
  %331 = load ptr, ptr %cof411, align 8
  %arrayidx700.1 = getelementptr inbounds ptr, ptr %331, i64 %add698
  %332 = load ptr, ptr %arrayidx700.1, align 8
  %333 = getelementptr inbounds i8, ptr %332, i64 %.idx.1
  %arrayidx704.1 = getelementptr inbounds ptr, ptr %333, i64 %conv696.1
  %334 = load ptr, ptr %arrayidx704.1, align 8
  %335 = getelementptr inbounds i8, ptr %334, i64 %.idx988.1
  %arrayidx708.1 = getelementptr inbounds i32, ptr %335, i64 %conv694.1
  store i32 %324, ptr %arrayidx708.1, align 4
  %inc711.1 = add nuw nsw i32 %k617.01047.1, 1
  %cmp666.1 = icmp ult i32 %k617.01047.1, 15
  br i1 %cmp666.1, label %for.body673.1, label %for.inc713.1

for.inc713.1:                                     ; preds = %for.body673.1, %for.inc710.1
  %arrayidx638.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 2
  %336 = load i8, ptr %arrayidx638.2, align 2
  %conv639.2 = zext i8 %336 to i64
  %arrayidx645.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 2
  %337 = load i8, ptr %arrayidx645.2, align 2
  %conv646.2 = zext i8 %337 to i64
  %arrayidx654.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 2
  %338 = load i8, ptr %arrayidx654.2, align 2
  %conv655.2 = zext i8 %338 to i32
  store i32 %conv655.2, ptr %subblock_y656, align 8
  %arrayidx662.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 2
  %339 = load i8, ptr %arrayidx662.2, align 2
  %conv663.2 = zext i8 %339 to i32
  store i32 %conv663.2, ptr %subblock_x664, align 4
  %arrayidx683.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv, i64 2
  %.idx.2 = shl nuw nsw i64 %conv646.2, 5
  %.idx988.2 = shl nuw nsw i64 %conv639.2, 4
  br label %for.body673.2

for.body673.2:                                    ; preds = %for.inc710.2, %for.inc713.1
  %k617.01047.2 = phi i32 [ 0, %for.inc713.1 ], [ %inc711.2, %for.inc710.2 ]
  %pos_scan_4x4.41046.2 = phi ptr [ %arrayidx647, %for.inc713.1 ], [ %incdec.ptr695.2, %for.inc710.2 ]
  %340 = load ptr, ptr %readSyntaxElement674, align 8
  %call675.2 = call i32 %340(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %341 = load i32, ptr %value1343, align 4
  %cmp677.not.2 = icmp eq i32 %341, 0
  br i1 %cmp677.not.2, label %for.inc713.2, label %for.inc710.2

for.inc710.2:                                     ; preds = %for.body673.2
  %342 = load i8, ptr %arrayidx683.2, align 2
  %idxprom.i1029.2 = zext nneg i8 %342 to i64
  %arrayidx.i1030.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1029.2
  %343 = load i64, ptr %arrayidx.i1030.2, align 8
  %344 = load i64, ptr %cbp_blk, align 8
  %or688.2 = or i64 %344, %343
  store i64 %or688.2, ptr %cbp_blk, align 8
  %345 = load i32, ptr %value2351, align 8
  %shl690.2 = shl i32 %345, 1
  %idx.ext691.2 = sext i32 %shl690.2 to i64
  %add.ptr692.2 = getelementptr inbounds i8, ptr %pos_scan_4x4.41046.2, i64 %idx.ext691.2
  %incdec.ptr693.2 = getelementptr inbounds i8, ptr %add.ptr692.2, i64 1
  %346 = load i8, ptr %add.ptr692.2, align 1
  %conv694.2 = zext i8 %346 to i64
  %incdec.ptr695.2 = getelementptr inbounds i8, ptr %add.ptr692.2, i64 2
  %347 = load i8, ptr %incdec.ptr693.2, align 1
  %conv696.2 = zext i8 %347 to i64
  %348 = load ptr, ptr %cof411, align 8
  %arrayidx700.2 = getelementptr inbounds ptr, ptr %348, i64 %add698
  %349 = load ptr, ptr %arrayidx700.2, align 8
  %350 = getelementptr inbounds i8, ptr %349, i64 %.idx.2
  %arrayidx704.2 = getelementptr inbounds ptr, ptr %350, i64 %conv696.2
  %351 = load ptr, ptr %arrayidx704.2, align 8
  %352 = getelementptr inbounds i8, ptr %351, i64 %.idx988.2
  %arrayidx708.2 = getelementptr inbounds i32, ptr %352, i64 %conv694.2
  store i32 %341, ptr %arrayidx708.2, align 4
  %inc711.2 = add nuw nsw i32 %k617.01047.2, 1
  %cmp666.2 = icmp ult i32 %k617.01047.2, 15
  br i1 %cmp666.2, label %for.body673.2, label %for.inc713.2

for.inc713.2:                                     ; preds = %for.body673.2, %for.inc710.2
  %arrayidx638.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 3
  %353 = load i8, ptr %arrayidx638.3, align 1
  %conv639.3 = zext i8 %353 to i64
  %arrayidx645.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 3
  %354 = load i8, ptr %arrayidx645.3, align 1
  %conv646.3 = zext i8 %354 to i64
  %arrayidx654.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_y, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 3
  %355 = load i8, ptr %arrayidx654.3, align 1
  %conv655.3 = zext i8 %355 to i32
  store i32 %conv655.3, ptr %subblock_y656, align 8
  %arrayidx662.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @subblk_offset_x, i64 0, i64 %idxprom633, i64 %indvars.iv, i64 3
  %356 = load i8, ptr %arrayidx662.3, align 1
  %conv663.3 = zext i8 %356 to i32
  store i32 %conv663.3, ptr %subblock_x664, align 4
  %arrayidx683.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv, i64 3
  %.idx.3 = shl nuw nsw i64 %conv646.3, 5
  %.idx988.3 = shl nuw nsw i64 %conv639.3, 4
  br label %for.body673.3

for.body673.3:                                    ; preds = %for.inc710.3, %for.inc713.2
  %k617.01047.3 = phi i32 [ 0, %for.inc713.2 ], [ %inc711.3, %for.inc710.3 ]
  %pos_scan_4x4.41046.3 = phi ptr [ %arrayidx647, %for.inc713.2 ], [ %incdec.ptr695.3, %for.inc710.3 ]
  %357 = load ptr, ptr %readSyntaxElement674, align 8
  %call675.3 = call i32 %357(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx471) #14
  %358 = load i32, ptr %value1343, align 4
  %cmp677.not.3 = icmp eq i32 %358, 0
  br i1 %cmp677.not.3, label %for.inc713.3, label %for.inc710.3

for.inc710.3:                                     ; preds = %for.body673.3
  %359 = load i8, ptr %arrayidx683.3, align 1
  %idxprom.i1029.3 = zext nneg i8 %359 to i64
  %arrayidx.i1030.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1029.3
  %360 = load i64, ptr %arrayidx.i1030.3, align 8
  %361 = load i64, ptr %cbp_blk, align 8
  %or688.3 = or i64 %361, %360
  store i64 %or688.3, ptr %cbp_blk, align 8
  %362 = load i32, ptr %value2351, align 8
  %shl690.3 = shl i32 %362, 1
  %idx.ext691.3 = sext i32 %shl690.3 to i64
  %add.ptr692.3 = getelementptr inbounds i8, ptr %pos_scan_4x4.41046.3, i64 %idx.ext691.3
  %incdec.ptr693.3 = getelementptr inbounds i8, ptr %add.ptr692.3, i64 1
  %363 = load i8, ptr %add.ptr692.3, align 1
  %conv694.3 = zext i8 %363 to i64
  %incdec.ptr695.3 = getelementptr inbounds i8, ptr %add.ptr692.3, i64 2
  %364 = load i8, ptr %incdec.ptr693.3, align 1
  %conv696.3 = zext i8 %364 to i64
  %365 = load ptr, ptr %cof411, align 8
  %arrayidx700.3 = getelementptr inbounds ptr, ptr %365, i64 %add698
  %366 = load ptr, ptr %arrayidx700.3, align 8
  %367 = getelementptr inbounds i8, ptr %366, i64 %.idx.3
  %arrayidx704.3 = getelementptr inbounds ptr, ptr %367, i64 %conv696.3
  %368 = load ptr, ptr %arrayidx704.3, align 8
  %369 = getelementptr inbounds i8, ptr %368, i64 %.idx988.3
  %arrayidx708.3 = getelementptr inbounds i32, ptr %369, i64 %conv694.3
  store i32 %358, ptr %arrayidx708.3, align 4
  %inc711.3 = add nuw nsw i32 %k617.01047.3, 1
  %cmp666.3 = icmp ult i32 %k617.01047.3, 15
  br i1 %cmp666.3, label %for.body673.3, label %for.inc713.3

for.inc713.3:                                     ; preds = %for.body673.3, %for.inc710.3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %370 = load i32, ptr %num_blk8x8_uv, align 8
  %371 = sext i32 %370 to i64
  %cmp621 = icmp slt i64 %indvars.iv.next, %371
  br i1 %cmp621, label %for.body623, label %if.end720

if.end720:                                        ; preds = %for.inc713.3, %for.inc608.3, %for.cond619.preheader, %for.cond486.preheader, %if.end256, %for.inc454.1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CAVLC_444(ptr noundef %currMB) #3 {
entry:
  %up.i618 = alloca %struct.pix_pos, align 4
  %left.i619 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %0 = load i32, ptr %mbAddrX, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %1 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %2 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %3 = load ptr, ptr %p_Vid1, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %4, 1
  %structure = getelementptr inbounds i8, ptr %3, i64 848876
  %5 = load i32, ptr %structure, align 4
  %cmp2 = icmp eq i32 %5, 0
  br i1 %cmp2, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %6 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %6
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %7 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %8 = load i16, ptr %mb_type, align 8
  switch i16 %8, label %lor.end [
    i16 10, label %if.else
    i16 14, label %if.else
    i16 9, label %9
    i16 12, label %9
    i16 13, label %9
  ]

9:                                                ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %9
  %10 = phi i32 [ 6, %9 ], [ 11, %land.end.thread ]
  store i32 %10, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %11 = load ptr, ptr %partArr, align 8
  %idxprom28 = zext nneg i32 %10 to i64
  %arrayidx29 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom28
  %12 = load i8, ptr %arrayidx29, align 1
  %idxprom30 = zext i8 %12 to i64
  %arrayidx31 = getelementptr inbounds %struct.datapartition, ptr %11, i64 %idxprom30
  %switch.tableidx = add i16 %8, -9
  %13 = icmp ult i16 %switch.tableidx, 5
  br i1 %13, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %lor.end
  %14 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %14
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %lor.end, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %lor.end ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %1, i64 %.sink
  %cond46 = load ptr, ptr %linfo_cbp_inter, align 8
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr %cond46, ptr %mapping, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx31, i64 40
  %15 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %15(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx31) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %16 = load i32, ptr %value1, align 4
  %cbp47 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %16, ptr %cbp47, align 4
  %17 = load i16, ptr %mb_type, align 8
  %18 = add i16 %17, -1
  %or.cond = icmp ult i16 %18, 3
  br i1 %or.cond, label %land.lhs.true68, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %cond.end
  %cmp59 = icmp eq i16 %17, 0
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false66

land.lhs.true61:                                  ; preds = %lor.lhs.false56
  %slice_type = getelementptr inbounds i8, ptr %1, i64 164
  %19 = load i32, ptr %slice_type, align 4
  %cmp62 = icmp eq i32 %19, 1
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false66

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %active_sps = getelementptr inbounds i8, ptr %3, i64 16
  %20 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %20, i64 3144
  %21 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool65.not = icmp eq i32 %21, 0
  br i1 %tobool65.not, label %lor.lhs.false66, label %land.lhs.true78

lor.lhs.false66:                                  ; preds = %land.lhs.true64, %land.lhs.true61, %lor.lhs.false56
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %22 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool67.not = icmp eq i32 %22, 0
  br i1 %tobool67.not, label %if.end, label %land.lhs.true68

land.lhs.true68:                                  ; preds = %cond.end, %lor.lhs.false66
  switch i16 %17, label %land.lhs.true78 [
    i16 13, label %if.end
    i16 9, label %if.end
  ]

land.lhs.true78:                                  ; preds = %land.lhs.true64, %land.lhs.true68
  %and = and i32 %16, 15
  %tobool80.not = icmp eq i32 %and, 0
  br i1 %tobool80.not, label %if.end, label %land.rhs81

land.rhs81:                                       ; preds = %land.lhs.true78
  %Transform8x8Mode = getelementptr inbounds i8, ptr %1, i64 60
  %23 = load i32, ptr %Transform8x8Mode, align 4
  %tobool82.not = icmp eq i32 %23, 0
  br i1 %tobool82.not, label %if.then95, label %if.then85

if.then85:                                        ; preds = %land.rhs81
  store i32 0, ptr %currSE, align 8
  %24 = load ptr, ptr %partArr, align 8
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading, align 8
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %25 = load ptr, ptr %24, align 8
  %call91 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %25) #14
  %26 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %26, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then95

if.end:                                           ; preds = %land.lhs.true78, %land.lhs.true68, %land.lhs.true68, %lor.lhs.false66
  %cmp93.not = icmp eq i32 %16, 0
  br i1 %cmp93.not, label %if.end172, label %if.then95

if.then95:                                        ; preds = %land.rhs81, %if.then85, %if.end
  %27 = load i32, ptr %is_intra_block, align 8
  %cmp97 = icmp eq i32 %27, 0
  %cond99 = select i1 %cmp97, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond99)
  %28 = load i32, ptr %dp_mode, align 8
  %tobool101.not = icmp eq i32 %28, 0
  br i1 %tobool101.not, label %if.end172, label %if.then102

if.then102:                                       ; preds = %if.then95
  %29 = load i32, ptr %is_intra_block, align 8
  %cmp104 = icmp eq i32 %29, 0
  br i1 %cmp104, label %land.lhs.true106, label %if.end109

land.lhs.true106:                                 ; preds = %if.then102
  %dpC_NotPresent = getelementptr inbounds i8, ptr %1, i64 1236
  %30 = load i32, ptr %dpC_NotPresent, align 4
  %tobool107.not = icmp eq i32 %30, 0
  br i1 %tobool107.not, label %if.end109, label %if.then108

if.then108:                                       ; preds = %land.lhs.true106
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %land.lhs.true106, %if.then102
  br i1 %cmp, label %land.lhs.true111, label %if.end115

land.lhs.true111:                                 ; preds = %if.end109
  %dpB_NotPresent = getelementptr inbounds i8, ptr %1, i64 1232
  %31 = load i32, ptr %dpB_NotPresent, align 8
  %tobool112.not = icmp eq i32 %31, 0
  br i1 %tobool112.not, label %if.end115, label %if.then113

if.then113:                                       ; preds = %land.lhs.true111
  %ei_flag = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag, align 2
  %dpl_flag114 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag114, align 1
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %land.lhs.true111, %if.end109
  %32 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %32, i64 856744
  %33 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %32, i64 849132
  call void %33(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %34 = load ptr, ptr %getNeighbour.i, align 8
  call void %34(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %35 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %35, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end115
  %active_pps.i = getelementptr inbounds i8, ptr %32, i64 8
  %36 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %36, i64 2204
  %37 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end115
  %38 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %38, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %32, i64 848888
  %39 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %40 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %40 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %39, i64 %idxprom.i, i32 23
  %41 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %42 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %42, %41
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %43 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %43, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %32, i64 848888
  %44 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %45 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %45 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %44, i64 %idxprom17.i, i32 23
  %46 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %47 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %47, %46
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag116 = getelementptr inbounds i8, ptr %currMB, i64 111
  %48 = load i8, ptr %dpl_flag116, align 1
  %tobool117.not = icmp eq i8 %48, 0
  br i1 %tobool117.not, label %if.end172, label %if.then118

if.then118:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp47, align 4
  br label %if.end172

if.else:                                          ; preds = %land.end.thread, %land.end.thread
  %cbp123 = getelementptr inbounds i8, ptr %currMB, i64 284
  %49 = load i32, ptr %cbp123, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %50 = load i32, ptr %dp_mode, align 8
  %tobool125.not = icmp eq i32 %50, 0
  br i1 %tobool125.not, label %if.end138, label %if.then126

if.then126:                                       ; preds = %if.else
  %dpB_NotPresent127 = getelementptr inbounds i8, ptr %1, i64 1232
  %51 = load i32, ptr %dpB_NotPresent127, align 8
  %tobool128.not = icmp eq i32 %51, 0
  br i1 %tobool128.not, label %if.end132, label %if.then129

if.then129:                                       ; preds = %if.then126
  %ei_flag130 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag130, align 2
  %dpl_flag131 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag131, align 1
  br label %if.end132

if.end132:                                        ; preds = %if.then129, %if.then126
  %52 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i618) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i619) #14
  %getNeighbour.i621 = getelementptr inbounds i8, ptr %52, i64 856744
  %53 = load ptr, ptr %getNeighbour.i621, align 8
  %arrayidx.i622 = getelementptr inbounds i8, ptr %52, i64 849132
  call void %53(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i622, ptr noundef nonnull %left.i619) #14
  %54 = load ptr, ptr %getNeighbour.i621, align 8
  call void %54(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i622, ptr noundef nonnull %up.i618) #14
  %55 = load i32, ptr %is_intra_block, align 8
  %cmp.i624 = icmp eq i32 %55, 0
  br i1 %cmp.i624, label %if.then.i629, label %lor.lhs.false.i625

lor.lhs.false.i625:                               ; preds = %if.end132
  %active_pps.i626 = getelementptr inbounds i8, ptr %52, i64 8
  %56 = load ptr, ptr %active_pps.i626, align 8
  %constrained_intra_pred_flag.i627 = getelementptr inbounds i8, ptr %56, i64 2204
  %57 = load i32, ptr %constrained_intra_pred_flag.i627, align 4
  %tobool.not.i628 = icmp eq i32 %57, 0
  br i1 %tobool.not.i628, label %if.then.i629, label %check_dp_neighbors.exit647

if.then.i629:                                     ; preds = %lor.lhs.false.i625, %if.end132
  %58 = load i32, ptr %left.i619, align 4
  %tobool6.not.i630 = icmp eq i32 %58, 0
  br i1 %tobool6.not.i630, label %if.end.i638, label %if.then7.i631

if.then7.i631:                                    ; preds = %if.then.i629
  %mb_data.i632 = getelementptr inbounds i8, ptr %52, i64 848888
  %59 = load ptr, ptr %mb_data.i632, align 8
  %mb_addr.i633 = getelementptr inbounds i8, ptr %left.i619, i64 4
  %60 = load i32, ptr %mb_addr.i633, align 4
  %idxprom.i634 = sext i32 %60 to i64
  %dpl_flag.i635 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %idxprom.i634, i32 23
  %61 = load i8, ptr %dpl_flag.i635, align 1
  %dpl_flag9.i636 = getelementptr inbounds i8, ptr %currMB, i64 111
  %62 = load i8, ptr %dpl_flag9.i636, align 1
  %or38.i637 = or i8 %62, %61
  store i8 %or38.i637, ptr %dpl_flag9.i636, align 1
  br label %if.end.i638

if.end.i638:                                      ; preds = %if.then7.i631, %if.then.i629
  %63 = load i32, ptr %up.i618, align 4
  %tobool13.not.i639 = icmp eq i32 %63, 0
  br i1 %tobool13.not.i639, label %check_dp_neighbors.exit647, label %if.then14.i640

if.then14.i640:                                   ; preds = %if.end.i638
  %mb_data15.i641 = getelementptr inbounds i8, ptr %52, i64 848888
  %64 = load ptr, ptr %mb_data15.i641, align 8
  %mb_addr16.i642 = getelementptr inbounds i8, ptr %up.i618, i64 4
  %65 = load i32, ptr %mb_addr16.i642, align 4
  %idxprom17.i643 = sext i32 %65 to i64
  %dpl_flag19.i644 = getelementptr inbounds %struct.macroblock, ptr %64, i64 %idxprom17.i643, i32 23
  %66 = load i8, ptr %dpl_flag19.i644, align 1
  %dpl_flag21.i645 = getelementptr inbounds i8, ptr %currMB, i64 111
  %67 = load i8, ptr %dpl_flag21.i645, align 1
  %or2339.i646 = or i8 %67, %66
  store i8 %or2339.i646, ptr %dpl_flag21.i645, align 1
  br label %check_dp_neighbors.exit647

check_dp_neighbors.exit647:                       ; preds = %lor.lhs.false.i625, %if.end.i638, %if.then14.i640
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i619) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i618) #14
  %dpl_flag133 = getelementptr inbounds i8, ptr %currMB, i64 111
  %68 = load i8, ptr %dpl_flag133, align 1
  %tobool134.not = icmp eq i8 %68, 0
  br i1 %tobool134.not, label %if.then141, label %if.end138.thread721

if.end138.thread721:                              ; preds = %check_dp_neighbors.exit647
  store i32 0, ptr %cbp123, align 4
  br label %if.end172

if.end138:                                        ; preds = %if.else
  %dpl_flag139.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag139.phi.trans.insert, align 1
  %tobool140.not = icmp eq i8 %.pre, 0
  br i1 %tobool140.not, label %if.then141, label %if.end172

if.then141:                                       ; preds = %check_dp_neighbors.exit647, %if.end138
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %69 = load i32, ptr %numcoeff, align 4
  %cmp146699 = icmp sgt i32 %69, 0
  br i1 %cmp146699, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then141
  %cof = getelementptr inbounds i8, ptr %1, i64 1272
  %wide.trip.count = zext nneg i32 %69 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %pos_scan_4x4.0701 = phi ptr [ %7, %for.body.lr.ph ], [ %pos_scan_4x4.1, %for.inc ]
  %arrayidx149 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %70 = load i32, ptr %arrayidx149, align 4
  %cmp150.not = icmp eq i32 %70, 0
  br i1 %cmp150.not, label %for.inc, label %if.then152

if.then152:                                       ; preds = %for.body
  %arrayidx154 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %71 = load i32, ptr %arrayidx154, align 4
  %mul = shl nsw i32 %71, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0701, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %72 = load i8, ptr %add.ptr, align 1
  %conv155 = zext i8 %72 to i64
  %incdec.ptr156 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %73 = load i8, ptr %incdec.ptr, align 1
  %conv157 = zext i8 %73 to i64
  %74 = load ptr, ptr %cof, align 8
  %75 = load ptr, ptr %74, align 8
  %arrayidx163.idx = shl nuw nsw i64 %conv157, 5
  %arrayidx163 = getelementptr inbounds i8, ptr %75, i64 %arrayidx163.idx
  %76 = load ptr, ptr %arrayidx163, align 8
  %arrayidx165.idx = shl nuw nsw i64 %conv155, 4
  %arrayidx165 = getelementptr inbounds i8, ptr %76, i64 %arrayidx165.idx
  store i32 %70, ptr %arrayidx165, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then152
  %pos_scan_4x4.1 = phi ptr [ %incdec.ptr156, %if.then152 ], [ %pos_scan_4x4.0701, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then141
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %77 = load i32, ptr %is_lossless, align 4
  %cmp167 = icmp eq i32 %77, 0
  br i1 %cmp167, label %if.then169, label %if.end172

if.then169:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %1, i64 216
  %78 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %78) #14
  br label %if.end172

if.end172:                                        ; preds = %if.end138.thread721, %if.end138, %if.then169, %for.end, %if.end, %check_dp_neighbors.exit, %if.then118, %if.then95
  %cbp.1 = phi i32 [ %49, %if.end138 ], [ %49, %if.then169 ], [ %49, %for.end ], [ 0, %if.then118 ], [ %16, %check_dp_neighbors.exit ], [ %16, %if.then95 ], [ 0, %if.end ], [ 0, %if.end138.thread721 ]
  %qp = getelementptr inbounds i8, ptr %1, i64 148
  %79 = load i32, ptr %qp, align 4
  %80 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %79, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %80, i64 849052
  %81 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %81, %79
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %82 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %82, i64 13520
  %83 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %80, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %83, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %84 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %84
  %85 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %85, %79
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end172
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %86 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %86 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end172
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end172 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %87 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %87, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %88 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %88
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %83, i64 304
  %89 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %89, %79
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %90 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %90 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %91 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %91, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i649 = icmp eq i32 %add.i, 0
  br i1 %cmp.i649, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %80, i64 849092
  %92 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %92, 1
  %93 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %93, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %3, i64 856032
  %94 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id173 = getelementptr inbounds i8, ptr %1, i64 216
  %95 = load i32, ptr %colour_plane_id173, align 8
  %idxprom174 = sext i32 %95 to i64
  %arrayidx175 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom174
  %96 = load i32, ptr %arrayidx175, align 4
  %idxprom176 = sext i32 %96 to i64
  %arrayidx177 = getelementptr inbounds i32, ptr %94, i64 %idxprom176
  %97 = load i32, ptr %arrayidx177, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %3, i64 856040
  %98 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx183 = getelementptr inbounds i32, ptr %98, i64 %idxprom176
  %99 = load i32, ptr %arrayidx183, align 4
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %1, i64 1392
  %idxprom213 = sext i32 %99 to i64
  %arrayidx214 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom174, i64 %idxprom213
  %InvLevelScale8x8_Intra = getelementptr inbounds i8, ptr %1, i64 3696
  %arrayidx231 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 %idxprom174, i64 %idxprom213
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %1, i64 2544
  %arrayidx221 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom174, i64 %idxprom213
  %InvLevelScale8x8_Inter = getelementptr inbounds i8, ptr %1, i64 8304
  %arrayidx238 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 %idxprom174, i64 %idxprom213
  %cond224697 = select i1 %cmp, ptr %arrayidx214, ptr %arrayidx221
  %cond241 = select i1 %cmp, ptr %arrayidx231, ptr %arrayidx238
  %tobool242.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool242.not, label %if.else256, label %if.then243

if.then243:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag244 = getelementptr inbounds i8, ptr %currMB, i64 420
  %100 = load i32, ptr %luma_transform_size_8x8_flag244, align 4
  %tobool245.not = icmp eq i32 %100, 0
  %nz_coeff = getelementptr inbounds i8, ptr %3, i64 848832
  %101 = load ptr, ptr %nz_coeff, align 8
  %idxprom247 = sext i32 %0 to i64
  %arrayidx248 = getelementptr inbounds ptr, ptr %101, i64 %idxprom247
  %102 = load ptr, ptr %arrayidx248, align 8
  %103 = load ptr, ptr %102, align 8
  br i1 %tobool245.not, label %if.then246, label %if.else250

if.then246:                                       ; preds = %if.then243
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond224697, i32 noundef %97, i32 noundef %cbp.1, ptr noundef %103)
  br label %if.end262

if.else250:                                       ; preds = %if.then243
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond241, i32 noundef %97, i32 noundef %cbp.1, ptr noundef %103)
  br label %if.end262

if.else256:                                       ; preds = %update_qp.exit
  %nz_coeff257 = getelementptr inbounds i8, ptr %3, i64 848832
  %104 = load ptr, ptr %nz_coeff257, align 8
  %idxprom258 = sext i32 %0 to i64
  %arrayidx259 = getelementptr inbounds ptr, ptr %104, i64 %idxprom258
  %105 = load ptr, ptr %arrayidx259, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = load ptr, ptr %106, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %107, i8 0, i64 16, i1 false)
  br label %if.end262

if.end262:                                        ; preds = %if.then246, %if.else250, %if.else256
  %idxprom423.pre-phi = phi i64 [ %idxprom247, %if.then246 ], [ %idxprom247, %if.else250 ], [ %idxprom258, %if.else256 ]
  %cof309 = getelementptr inbounds i8, ptr %1, i64 1272
  %bitdepth_chroma_qp_scale = getelementptr inbounds i8, ptr %3, i64 849056
  %luma_transform_size_8x8_flag406 = getelementptr inbounds i8, ptr %currMB, i64 420
  %nz_coeff422 = getelementptr inbounds i8, ptr %3, i64 848832
  %108 = load i16, ptr %mb_type, align 8
  switch i16 %108, label %if.end329 [
    i16 10, label %if.end285
    i16 14, label %if.end285
  ]

if.end285:                                        ; preds = %if.end262, %if.end262
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 4, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %.pre716 = load i32, ptr %numcoeff, align 4
  %cmp287702 = icmp sgt i32 %.pre716, 0
  br i1 %cmp287702, label %for.body289.lr.ph, label %for.end322

for.body289.lr.ph:                                ; preds = %if.end285
  %wide.trip.count710 = zext nneg i32 %.pre716 to i64
  br label %for.body289

for.body289:                                      ; preds = %for.body289.lr.ph, %for.inc320
  %indvars.iv707 = phi i64 [ 0, %for.body289.lr.ph ], [ %indvars.iv.next708, %for.inc320 ]
  %coef_ctr.0703 = phi i32 [ -1, %for.body289.lr.ph ], [ %coef_ctr.1, %for.inc320 ]
  %arrayidx291 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv707
  %109 = load i32, ptr %arrayidx291, align 4
  %cmp292.not = icmp eq i32 %109, 0
  br i1 %cmp292.not, label %for.inc320, label %if.then294

if.then294:                                       ; preds = %for.body289
  %arrayidx296 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv707
  %110 = load i32, ptr %arrayidx296, align 4
  %add297 = add i32 %coef_ctr.0703, 1
  %add298 = add i32 %add297, %110
  %idxprom299 = sext i32 %add298 to i64
  %arrayidx300 = getelementptr inbounds [2 x i8], ptr %7, i64 %idxprom299
  %111 = load i8, ptr %arrayidx300, align 1
  %conv302 = zext i8 %111 to i64
  %arrayidx305 = getelementptr inbounds i8, ptr %arrayidx300, i64 1
  %112 = load i8, ptr %arrayidx305, align 1
  %conv306 = zext i8 %112 to i64
  %113 = load ptr, ptr %cof309, align 8
  %arrayidx312 = getelementptr inbounds i8, ptr %113, i64 8
  %114 = load ptr, ptr %arrayidx312, align 8
  %arrayidx315.idx = shl nuw nsw i64 %conv306, 5
  %arrayidx315 = getelementptr inbounds i8, ptr %114, i64 %arrayidx315.idx
  %115 = load ptr, ptr %arrayidx315, align 8
  %arrayidx318.idx = shl nuw nsw i64 %conv302, 4
  %arrayidx318 = getelementptr inbounds i8, ptr %115, i64 %arrayidx318.idx
  store i32 %109, ptr %arrayidx318, align 4
  br label %for.inc320

for.inc320:                                       ; preds = %for.body289, %if.then294
  %coef_ctr.1 = phi i32 [ %add298, %if.then294 ], [ %coef_ctr.0703, %for.body289 ]
  %indvars.iv.next708 = add nuw nsw i64 %indvars.iv707, 1
  %exitcond711.not = icmp eq i64 %indvars.iv.next708, %wide.trip.count710
  br i1 %exitcond711.not, label %for.end322, label %for.body289

for.end322:                                       ; preds = %for.inc320, %if.end285
  %116 = load i32, ptr %is_lossless.i, align 4
  %cmp324 = icmp eq i32 %116, 0
  br i1 %cmp324, label %if.then326, label %if.end329

if.then326:                                       ; preds = %for.end322
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef 1) #14
  br label %if.end329

if.end329:                                        ; preds = %if.end262, %for.end322, %if.then326
  %117 = load i32, ptr %qp, align 4
  %118 = load ptr, ptr %p_Vid1, align 8
  store i32 %117, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i652 = getelementptr inbounds i8, ptr %118, i64 849052
  %119 = load i32, ptr %bitdepth_luma_qp_scale.i652, align 4
  %add.i653 = add nsw i32 %119, %117
  store i32 %add.i653, ptr %qp_scaled.i, align 8
  %120 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i655 = getelementptr inbounds i8, ptr %120, i64 13520
  %121 = load ptr, ptr %dec_picture2.i.i655, align 8
  %bitdepth_chroma_qp_scale.i.i656 = getelementptr inbounds i8, ptr %118, i64 849056
  %chroma_qp_offset.i.i657 = getelementptr inbounds i8, ptr %121, i64 300
  %122 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656, align 8
  %sub.i.i659 = sub nsw i32 0, %122
  %123 = load i32, ptr %chroma_qp_offset.i.i657, align 4
  %add.i.i660 = add nsw i32 %123, %117
  %cond.i.i.i.i661 = call noundef i32 @llvm.smax.i32(i32 %add.i.i660, i32 %sub.i.i659)
  %cond.i4.i.i.i662 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i661, i32 51)
  %cmp8.i.i663 = icmp slt i32 %cond.i.i.i.i661, 0
  br i1 %cmp8.i.i663, label %cond.end.i.i668, label %cond.false.i.i664

cond.false.i.i664:                                ; preds = %if.end329
  %idxprom15.i.i665 = zext nneg i32 %cond.i4.i.i.i662 to i64
  %arrayidx16.i.i666 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i665
  %124 = load i8, ptr %arrayidx16.i.i666, align 1
  %conv.i.i667 = zext i8 %124 to i32
  br label %cond.end.i.i668

cond.end.i.i668:                                  ; preds = %cond.false.i.i664, %if.end329
  %125 = phi i32 [ %conv.i.i667, %cond.false.i.i664 ], [ %cond.i4.i.i.i662, %if.end329 ]
  store i32 %125, ptr %qpc.i.i, align 4
  %126 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656, align 8
  %add24.i.i670 = add nsw i32 %126, %125
  store i32 %add24.i.i670, ptr %arrayidx27.i.i, align 4
  %127 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656, align 8
  %sub.1.i.i672 = sub nsw i32 0, %127
  %arrayidx.1.i.i673 = getelementptr inbounds i8, ptr %121, i64 304
  %128 = load i32, ptr %arrayidx.1.i.i673, align 4
  %add.1.i.i674 = add nsw i32 %128, %117
  %cond.i.i.1.i.i675 = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i674, i32 %sub.1.i.i672)
  %cond.i4.i.1.i.i676 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i675, i32 51)
  %cmp8.1.i.i677 = icmp slt i32 %cond.i.i.1.i.i675, 0
  br i1 %cmp8.1.i.i677, label %set_chroma_qp.exit.i682, label %cond.false.1.i.i678

cond.false.1.i.i678:                              ; preds = %cond.end.i.i668
  %idxprom15.1.i.i679 = zext nneg i32 %cond.i4.i.1.i.i676 to i64
  %arrayidx16.1.i.i680 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i679
  %129 = load i8, ptr %arrayidx16.1.i.i680, align 1
  %conv.1.i.i681 = zext i8 %129 to i32
  br label %set_chroma_qp.exit.i682

set_chroma_qp.exit.i682:                          ; preds = %cond.false.1.i.i678, %cond.end.i.i668
  %cond.1.i.i683 = phi i32 [ %conv.1.i.i681, %cond.false.1.i.i678 ], [ %cond.i4.i.1.i.i676, %cond.end.i.i668 ]
  store i32 %cond.1.i.i683, ptr %arrayidx4.1.i.i, align 4
  %130 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656, align 8
  %add24.1.i.i685 = add nsw i32 %130, %cond.1.i.i683
  store i32 %add24.1.i.i685, ptr %arrayidx27.1.i.i, align 4
  %cmp.i687 = icmp eq i32 %add.i653, 0
  br i1 %cmp.i687, label %land.rhs.i690, label %update_qp.exit693

land.rhs.i690:                                    ; preds = %set_chroma_qp.exit.i682
  %lossless_qpprime_flag.i691 = getelementptr inbounds i8, ptr %118, i64 849092
  %131 = load i32, ptr %lossless_qpprime_flag.i691, align 4
  %cmp5.i692 = icmp eq i32 %131, 1
  %132 = zext i1 %cmp5.i692 to i32
  br label %update_qp.exit693

update_qp.exit693:                                ; preds = %set_chroma_qp.exit.i682, %land.rhs.i690
  %land.ext.i688 = phi i32 [ 0, %set_chroma_qp.exit.i682 ], [ %132, %land.rhs.i690 ]
  store i32 %land.ext.i688, ptr %is_lossless.i, align 4
  %133 = load ptr, ptr %qp_per_matrix, align 8
  %134 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add345 = add nsw i32 %134, %125
  %idxprom346 = sext i32 %add345 to i64
  %arrayidx347 = getelementptr inbounds i32, ptr %133, i64 %idxprom346
  %135 = load i32, ptr %arrayidx347, align 4
  %136 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx357 = getelementptr inbounds i32, ptr %136, i64 %idxprom346
  %137 = load i32, ptr %arrayidx357, align 4
  %idxprom368 = sext i32 %137 to i64
  %138 = load i32, ptr %luma_transform_size_8x8_flag406, align 4
  %tobool407.not = icmp eq i32 %138, 0
  %139 = load ptr, ptr %nz_coeff422, align 8
  %arrayidx414 = getelementptr inbounds ptr, ptr %139, i64 %idxprom423.pre-phi
  %140 = load ptr, ptr %arrayidx414, align 8
  %arrayidx417 = getelementptr inbounds i8, ptr %140, i64 8
  %141 = load ptr, ptr %arrayidx417, align 8
  br i1 %tobool407.not, label %if.then408, label %if.else418

if.then408:                                       ; preds = %update_qp.exit693
  %arrayidx369 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 1, i64 %idxprom368
  %arrayidx379 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 1, i64 %idxprom368
  %cond382 = select i1 %cmp, ptr %arrayidx369, ptr %arrayidx379
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, ptr noundef nonnull %cond382, i32 noundef %135, i32 noundef %cbp.1, ptr noundef %141)
  br label %for.inc429

if.else418:                                       ; preds = %update_qp.exit693
  %arrayidx392 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 1, i64 %idxprom368
  %arrayidx402 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 1, i64 %idxprom368
  %cond405 = select i1 %cmp, ptr %arrayidx392, ptr %arrayidx402
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, ptr noundef nonnull %cond405, i32 noundef %135, i32 noundef %cbp.1, ptr noundef %141)
  br label %for.inc429

for.inc429:                                       ; preds = %if.then408, %if.else418
  %142 = load i16, ptr %mb_type, align 8
  switch i16 %142, label %if.end329.1 [
    i16 10, label %if.end285.1
    i16 14, label %if.end285.1
  ]

if.end285.1:                                      ; preds = %for.inc429, %for.inc429
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 9, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %.pre717 = load i32, ptr %numcoeff, align 4
  %cmp287702.1 = icmp sgt i32 %.pre717, 0
  br i1 %cmp287702.1, label %for.body289.lr.ph.1, label %for.end322.1

for.body289.lr.ph.1:                              ; preds = %if.end285.1
  %wide.trip.count710.1 = zext nneg i32 %.pre717 to i64
  br label %for.body289.1

for.body289.1:                                    ; preds = %for.inc320.1, %for.body289.lr.ph.1
  %indvars.iv707.1 = phi i64 [ 0, %for.body289.lr.ph.1 ], [ %indvars.iv.next708.1, %for.inc320.1 ]
  %coef_ctr.0703.1 = phi i32 [ -1, %for.body289.lr.ph.1 ], [ %coef_ctr.1.1, %for.inc320.1 ]
  %arrayidx291.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv707.1
  %143 = load i32, ptr %arrayidx291.1, align 4
  %cmp292.not.1 = icmp eq i32 %143, 0
  br i1 %cmp292.not.1, label %for.inc320.1, label %if.then294.1

if.then294.1:                                     ; preds = %for.body289.1
  %arrayidx296.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv707.1
  %144 = load i32, ptr %arrayidx296.1, align 4
  %add297.1 = add i32 %coef_ctr.0703.1, 1
  %add298.1 = add i32 %add297.1, %144
  %idxprom299.1 = sext i32 %add298.1 to i64
  %arrayidx300.1 = getelementptr inbounds [2 x i8], ptr %7, i64 %idxprom299.1
  %145 = load i8, ptr %arrayidx300.1, align 1
  %conv302.1 = zext i8 %145 to i64
  %arrayidx305.1 = getelementptr inbounds i8, ptr %arrayidx300.1, i64 1
  %146 = load i8, ptr %arrayidx305.1, align 1
  %conv306.1 = zext i8 %146 to i64
  %147 = load ptr, ptr %cof309, align 8
  %arrayidx312.1 = getelementptr inbounds i8, ptr %147, i64 16
  %148 = load ptr, ptr %arrayidx312.1, align 8
  %arrayidx315.idx.1 = shl nuw nsw i64 %conv306.1, 5
  %arrayidx315.1 = getelementptr inbounds i8, ptr %148, i64 %arrayidx315.idx.1
  %149 = load ptr, ptr %arrayidx315.1, align 8
  %arrayidx318.idx.1 = shl nuw nsw i64 %conv302.1, 4
  %arrayidx318.1 = getelementptr inbounds i8, ptr %149, i64 %arrayidx318.idx.1
  store i32 %143, ptr %arrayidx318.1, align 4
  br label %for.inc320.1

for.inc320.1:                                     ; preds = %if.then294.1, %for.body289.1
  %coef_ctr.1.1 = phi i32 [ %add298.1, %if.then294.1 ], [ %coef_ctr.0703.1, %for.body289.1 ]
  %indvars.iv.next708.1 = add nuw nsw i64 %indvars.iv707.1, 1
  %exitcond711.1.not = icmp eq i64 %indvars.iv.next708.1, %wide.trip.count710.1
  br i1 %exitcond711.1.not, label %for.end322.1, label %for.body289.1

for.end322.1:                                     ; preds = %for.inc320.1, %if.end285.1
  %150 = load i32, ptr %is_lossless.i, align 4
  %cmp324.1 = icmp eq i32 %150, 0
  br i1 %cmp324.1, label %if.then326.1, label %if.end329.1

if.then326.1:                                     ; preds = %for.end322.1
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef 2) #14
  br label %if.end329.1

if.end329.1:                                      ; preds = %if.then326.1, %for.end322.1, %for.inc429
  %151 = load i32, ptr %qp, align 4
  %152 = load ptr, ptr %p_Vid1, align 8
  store i32 %151, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i652.1 = getelementptr inbounds i8, ptr %152, i64 849052
  %153 = load i32, ptr %bitdepth_luma_qp_scale.i652.1, align 4
  %add.i653.1 = add nsw i32 %153, %151
  store i32 %add.i653.1, ptr %qp_scaled.i, align 8
  %154 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i655.1 = getelementptr inbounds i8, ptr %154, i64 13520
  %155 = load ptr, ptr %dec_picture2.i.i655.1, align 8
  %bitdepth_chroma_qp_scale.i.i656.1 = getelementptr inbounds i8, ptr %152, i64 849056
  %chroma_qp_offset.i.i657.1 = getelementptr inbounds i8, ptr %155, i64 300
  %156 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656.1, align 8
  %sub.i.i659.1 = sub nsw i32 0, %156
  %157 = load i32, ptr %chroma_qp_offset.i.i657.1, align 4
  %add.i.i660.1 = add nsw i32 %157, %151
  %cond.i.i.i.i661.1 = call noundef i32 @llvm.smax.i32(i32 %add.i.i660.1, i32 %sub.i.i659.1)
  %cond.i4.i.i.i662.1 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i661.1, i32 51)
  %cmp8.i.i663.1 = icmp slt i32 %cond.i.i.i.i661.1, 0
  br i1 %cmp8.i.i663.1, label %cond.end.i.i668.1, label %cond.false.i.i664.1

cond.false.i.i664.1:                              ; preds = %if.end329.1
  %idxprom15.i.i665.1 = zext nneg i32 %cond.i4.i.i.i662.1 to i64
  %arrayidx16.i.i666.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i665.1
  %158 = load i8, ptr %arrayidx16.i.i666.1, align 1
  %conv.i.i667.1 = zext i8 %158 to i32
  br label %cond.end.i.i668.1

cond.end.i.i668.1:                                ; preds = %cond.false.i.i664.1, %if.end329.1
  %cond.i.i669.1 = phi i32 [ %conv.i.i667.1, %cond.false.i.i664.1 ], [ %cond.i4.i.i.i662.1, %if.end329.1 ]
  store i32 %cond.i.i669.1, ptr %qpc.i.i, align 4
  %159 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656.1, align 8
  %add24.i.i670.1 = add nsw i32 %159, %cond.i.i669.1
  store i32 %add24.i.i670.1, ptr %arrayidx27.i.i, align 4
  %160 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656.1, align 8
  %sub.1.i.i672.1 = sub nsw i32 0, %160
  %arrayidx.1.i.i673.1 = getelementptr inbounds i8, ptr %155, i64 304
  %161 = load i32, ptr %arrayidx.1.i.i673.1, align 4
  %add.1.i.i674.1 = add nsw i32 %161, %151
  %cond.i.i.1.i.i675.1 = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i674.1, i32 %sub.1.i.i672.1)
  %cond.i4.i.1.i.i676.1 = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i675.1, i32 51)
  %cmp8.1.i.i677.1 = icmp slt i32 %cond.i.i.1.i.i675.1, 0
  br i1 %cmp8.1.i.i677.1, label %set_chroma_qp.exit.i682.1, label %cond.false.1.i.i678.1

cond.false.1.i.i678.1:                            ; preds = %cond.end.i.i668.1
  %idxprom15.1.i.i679.1 = zext nneg i32 %cond.i4.i.1.i.i676.1 to i64
  %arrayidx16.1.i.i680.1 = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i679.1
  %162 = load i8, ptr %arrayidx16.1.i.i680.1, align 1
  %conv.1.i.i681.1 = zext i8 %162 to i32
  br label %set_chroma_qp.exit.i682.1

set_chroma_qp.exit.i682.1:                        ; preds = %cond.false.1.i.i678.1, %cond.end.i.i668.1
  %163 = phi i32 [ %conv.1.i.i681.1, %cond.false.1.i.i678.1 ], [ %cond.i4.i.1.i.i676.1, %cond.end.i.i668.1 ]
  store i32 %163, ptr %arrayidx4.1.i.i, align 4
  %164 = load i32, ptr %bitdepth_chroma_qp_scale.i.i656.1, align 8
  %add24.1.i.i685.1 = add nsw i32 %164, %163
  store i32 %add24.1.i.i685.1, ptr %arrayidx27.1.i.i, align 4
  %cmp.i687.1 = icmp eq i32 %add.i653.1, 0
  br i1 %cmp.i687.1, label %land.rhs.i690.1, label %update_qp.exit693.1

land.rhs.i690.1:                                  ; preds = %set_chroma_qp.exit.i682.1
  %lossless_qpprime_flag.i691.1 = getelementptr inbounds i8, ptr %152, i64 849092
  %165 = load i32, ptr %lossless_qpprime_flag.i691.1, align 4
  %cmp5.i692.1 = icmp eq i32 %165, 1
  %166 = zext i1 %cmp5.i692.1 to i32
  br label %update_qp.exit693.1

update_qp.exit693.1:                              ; preds = %land.rhs.i690.1, %set_chroma_qp.exit.i682.1
  %land.ext.i688.1 = phi i32 [ 0, %set_chroma_qp.exit.i682.1 ], [ %166, %land.rhs.i690.1 ]
  store i32 %land.ext.i688.1, ptr %is_lossless.i, align 4
  %167 = load ptr, ptr %qp_per_matrix, align 8
  %168 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add345.1 = add nsw i32 %168, %163
  %idxprom346.1 = sext i32 %add345.1 to i64
  %arrayidx347.1 = getelementptr inbounds i32, ptr %167, i64 %idxprom346.1
  %169 = load i32, ptr %arrayidx347.1, align 4
  %170 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx357.1 = getelementptr inbounds i32, ptr %170, i64 %idxprom346.1
  %171 = load i32, ptr %arrayidx357.1, align 4
  %idxprom368.1 = sext i32 %171 to i64
  %172 = load i32, ptr %luma_transform_size_8x8_flag406, align 4
  %tobool407.not.1 = icmp eq i32 %172, 0
  %173 = load ptr, ptr %nz_coeff422, align 8
  %arrayidx414.1 = getelementptr inbounds ptr, ptr %173, i64 %idxprom423.pre-phi
  %174 = load ptr, ptr %arrayidx414.1, align 8
  %arrayidx417.1 = getelementptr inbounds i8, ptr %174, i64 16
  %175 = load ptr, ptr %arrayidx417.1, align 8
  br i1 %tobool407.not.1, label %if.then408.1, label %if.else418.1

if.else418.1:                                     ; preds = %update_qp.exit693.1
  %arrayidx392.1 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 2, i64 %idxprom368.1
  %arrayidx402.1 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 2, i64 %idxprom368.1
  %cond405.1 = select i1 %cmp, ptr %arrayidx392.1, ptr %arrayidx402.1
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 2, ptr noundef nonnull %cond405.1, i32 noundef %169, i32 noundef %cbp.1, ptr noundef %175)
  br label %for.inc429.1

if.then408.1:                                     ; preds = %update_qp.exit693.1
  %arrayidx369.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 2, i64 %idxprom368.1
  %arrayidx379.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 2, i64 %idxprom368.1
  %cond382.1 = select i1 %cmp, ptr %arrayidx369.1, ptr %arrayidx379.1
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 2, ptr noundef nonnull %cond382.1, i32 noundef %169, i32 noundef %cbp.1, ptr noundef %175)
  br label %for.inc429.1

for.inc429.1:                                     ; preds = %if.then408.1, %if.else418.1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CAVLC_422(ptr noundef %currMB) #3 {
entry:
  %up.i1028 = alloca %struct.pix_pos, align 4
  %left.i1029 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  %qp_per_uv = alloca [2 x i32], align 4
  %qp_rem_uv = alloca [2 x i32], align 4
  %m3 = alloca [2 x [4 x i32]], align 16
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %0 = load i32, ptr %mbAddrX, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %1 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %2 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %3 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %4, 1
  %dec_picture2 = getelementptr inbounds i8, ptr %1, i64 13520
  %5 = load ptr, ptr %dec_picture2, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %5, i64 268
  %6 = load i32, ptr %chroma_format_idc, align 4
  %sub = add nsw i32 %6, -1
  %structure = getelementptr inbounds i8, ptr %3, i64 848876
  %7 = load i32, ptr %structure, align 4
  %cmp3 = icmp eq i32 %7, 0
  br i1 %cmp3, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %8 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %8
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %9 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %10 = load i16, ptr %mb_type, align 8
  switch i16 %10, label %lor.end [
    i16 10, label %if.else
    i16 14, label %if.else
    i16 9, label %11
    i16 12, label %11
    i16 13, label %11
  ]

11:                                               ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %11
  %12 = phi i32 [ 6, %11 ], [ 11, %land.end.thread ]
  store i32 %12, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %13 = load ptr, ptr %partArr, align 8
  %idxprom29 = zext nneg i32 %12 to i64
  %arrayidx30 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom29
  %14 = load i8, ptr %arrayidx30, align 1
  %idxprom31 = zext i8 %14 to i64
  %arrayidx32 = getelementptr inbounds %struct.datapartition, ptr %13, i64 %idxprom31
  %switch.tableidx = add i16 %10, -9
  %15 = icmp ult i16 %switch.tableidx, 5
  br i1 %15, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %lor.end
  %16 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %16
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %lor.end, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %lor.end ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %1, i64 %.sink
  %cond47 = load ptr, ptr %linfo_cbp_inter, align 8
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr %cond47, ptr %mapping, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx32, i64 40
  %17 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %17(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx32) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %18 = load i32, ptr %value1, align 4
  %cbp48 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %18, ptr %cbp48, align 4
  %19 = load i16, ptr %mb_type, align 8
  %20 = add i16 %19, -1
  %or.cond = icmp ult i16 %20, 3
  br i1 %or.cond, label %land.lhs.true69, label %lor.lhs.false57

lor.lhs.false57:                                  ; preds = %cond.end
  %cmp60 = icmp eq i16 %19, 0
  br i1 %cmp60, label %land.lhs.true62, label %lor.lhs.false67

land.lhs.true62:                                  ; preds = %lor.lhs.false57
  %slice_type = getelementptr inbounds i8, ptr %1, i64 164
  %21 = load i32, ptr %slice_type, align 4
  %cmp63 = icmp eq i32 %21, 1
  br i1 %cmp63, label %land.lhs.true65, label %lor.lhs.false67

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %active_sps = getelementptr inbounds i8, ptr %3, i64 16
  %22 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %22, i64 3144
  %23 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool66.not = icmp eq i32 %23, 0
  br i1 %tobool66.not, label %lor.lhs.false67, label %land.lhs.true79

lor.lhs.false67:                                  ; preds = %land.lhs.true65, %land.lhs.true62, %lor.lhs.false57
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %24 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool68.not = icmp eq i32 %24, 0
  br i1 %tobool68.not, label %if.end, label %land.lhs.true69

land.lhs.true69:                                  ; preds = %cond.end, %lor.lhs.false67
  switch i16 %19, label %land.lhs.true79 [
    i16 13, label %if.end
    i16 9, label %if.end
  ]

land.lhs.true79:                                  ; preds = %land.lhs.true65, %land.lhs.true69
  %and = and i32 %18, 15
  %tobool81.not = icmp eq i32 %and, 0
  br i1 %tobool81.not, label %if.end, label %land.rhs82

land.rhs82:                                       ; preds = %land.lhs.true79
  %Transform8x8Mode = getelementptr inbounds i8, ptr %1, i64 60
  %25 = load i32, ptr %Transform8x8Mode, align 4
  %tobool83.not = icmp eq i32 %25, 0
  br i1 %tobool83.not, label %if.then96, label %if.then86

if.then86:                                        ; preds = %land.rhs82
  store i32 0, ptr %currSE, align 8
  %26 = load ptr, ptr %partArr, align 8
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading, align 8
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %27 = load ptr, ptr %26, align 8
  %call92 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %27) #14
  %28 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %28, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then96

if.end:                                           ; preds = %land.lhs.true79, %land.lhs.true69, %land.lhs.true69, %lor.lhs.false67
  %cmp94.not = icmp eq i32 %18, 0
  br i1 %cmp94.not, label %if.end173, label %if.then96

if.then96:                                        ; preds = %land.rhs82, %if.then86, %if.end
  %29 = load i32, ptr %is_intra_block, align 8
  %cmp98 = icmp eq i32 %29, 0
  %cond100 = select i1 %cmp98, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond100)
  %30 = load i32, ptr %dp_mode, align 8
  %tobool102.not = icmp eq i32 %30, 0
  br i1 %tobool102.not, label %if.end173, label %if.then103

if.then103:                                       ; preds = %if.then96
  %31 = load i32, ptr %is_intra_block, align 8
  %cmp105 = icmp eq i32 %31, 0
  br i1 %cmp105, label %land.lhs.true107, label %if.end110

land.lhs.true107:                                 ; preds = %if.then103
  %dpC_NotPresent = getelementptr inbounds i8, ptr %1, i64 1236
  %32 = load i32, ptr %dpC_NotPresent, align 4
  %tobool108.not = icmp eq i32 %32, 0
  br i1 %tobool108.not, label %if.end110, label %if.then109

if.then109:                                       ; preds = %land.lhs.true107
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %land.lhs.true107, %if.then103
  br i1 %cmp, label %land.lhs.true112, label %if.end116

land.lhs.true112:                                 ; preds = %if.end110
  %dpB_NotPresent = getelementptr inbounds i8, ptr %1, i64 1232
  %33 = load i32, ptr %dpB_NotPresent, align 8
  %tobool113.not = icmp eq i32 %33, 0
  br i1 %tobool113.not, label %if.end116, label %if.then114

if.then114:                                       ; preds = %land.lhs.true112
  %ei_flag = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag, align 2
  %dpl_flag115 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag115, align 1
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %land.lhs.true112, %if.end110
  %34 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %34, i64 856744
  %35 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %34, i64 849132
  call void %35(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %36 = load ptr, ptr %getNeighbour.i, align 8
  call void %36(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %37 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %37, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end116
  %active_pps.i = getelementptr inbounds i8, ptr %34, i64 8
  %38 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %38, i64 2204
  %39 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %39, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end116
  %40 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %40, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %34, i64 848888
  %41 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %42 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %42 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %41, i64 %idxprom.i, i32 23
  %43 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %44 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %44, %43
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %45 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %45, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %34, i64 848888
  %46 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %47 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %47 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %46, i64 %idxprom17.i, i32 23
  %48 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %49 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %49, %48
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag117 = getelementptr inbounds i8, ptr %currMB, i64 111
  %50 = load i8, ptr %dpl_flag117, align 1
  %tobool118.not = icmp eq i8 %50, 0
  br i1 %tobool118.not, label %if.end173, label %if.then119

if.then119:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp48, align 4
  br label %if.end173

if.else:                                          ; preds = %land.end.thread, %land.end.thread
  %cbp124 = getelementptr inbounds i8, ptr %currMB, i64 284
  %51 = load i32, ptr %cbp124, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %52 = load i32, ptr %dp_mode, align 8
  %tobool126.not = icmp eq i32 %52, 0
  br i1 %tobool126.not, label %if.end139, label %if.then127

if.then127:                                       ; preds = %if.else
  %dpB_NotPresent128 = getelementptr inbounds i8, ptr %1, i64 1232
  %53 = load i32, ptr %dpB_NotPresent128, align 8
  %tobool129.not = icmp eq i32 %53, 0
  br i1 %tobool129.not, label %if.end133, label %if.then130

if.then130:                                       ; preds = %if.then127
  %ei_flag131 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag131, align 2
  %dpl_flag132 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag132, align 1
  br label %if.end133

if.end133:                                        ; preds = %if.then130, %if.then127
  %54 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i1028) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i1029) #14
  %getNeighbour.i1031 = getelementptr inbounds i8, ptr %54, i64 856744
  %55 = load ptr, ptr %getNeighbour.i1031, align 8
  %arrayidx.i1032 = getelementptr inbounds i8, ptr %54, i64 849132
  call void %55(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i1032, ptr noundef nonnull %left.i1029) #14
  %56 = load ptr, ptr %getNeighbour.i1031, align 8
  call void %56(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i1032, ptr noundef nonnull %up.i1028) #14
  %57 = load i32, ptr %is_intra_block, align 8
  %cmp.i1034 = icmp eq i32 %57, 0
  br i1 %cmp.i1034, label %if.then.i1039, label %lor.lhs.false.i1035

lor.lhs.false.i1035:                              ; preds = %if.end133
  %active_pps.i1036 = getelementptr inbounds i8, ptr %54, i64 8
  %58 = load ptr, ptr %active_pps.i1036, align 8
  %constrained_intra_pred_flag.i1037 = getelementptr inbounds i8, ptr %58, i64 2204
  %59 = load i32, ptr %constrained_intra_pred_flag.i1037, align 4
  %tobool.not.i1038 = icmp eq i32 %59, 0
  br i1 %tobool.not.i1038, label %if.then.i1039, label %check_dp_neighbors.exit1057

if.then.i1039:                                    ; preds = %lor.lhs.false.i1035, %if.end133
  %60 = load i32, ptr %left.i1029, align 4
  %tobool6.not.i1040 = icmp eq i32 %60, 0
  br i1 %tobool6.not.i1040, label %if.end.i1048, label %if.then7.i1041

if.then7.i1041:                                   ; preds = %if.then.i1039
  %mb_data.i1042 = getelementptr inbounds i8, ptr %54, i64 848888
  %61 = load ptr, ptr %mb_data.i1042, align 8
  %mb_addr.i1043 = getelementptr inbounds i8, ptr %left.i1029, i64 4
  %62 = load i32, ptr %mb_addr.i1043, align 4
  %idxprom.i1044 = sext i32 %62 to i64
  %dpl_flag.i1045 = getelementptr inbounds %struct.macroblock, ptr %61, i64 %idxprom.i1044, i32 23
  %63 = load i8, ptr %dpl_flag.i1045, align 1
  %dpl_flag9.i1046 = getelementptr inbounds i8, ptr %currMB, i64 111
  %64 = load i8, ptr %dpl_flag9.i1046, align 1
  %or38.i1047 = or i8 %64, %63
  store i8 %or38.i1047, ptr %dpl_flag9.i1046, align 1
  br label %if.end.i1048

if.end.i1048:                                     ; preds = %if.then7.i1041, %if.then.i1039
  %65 = load i32, ptr %up.i1028, align 4
  %tobool13.not.i1049 = icmp eq i32 %65, 0
  br i1 %tobool13.not.i1049, label %check_dp_neighbors.exit1057, label %if.then14.i1050

if.then14.i1050:                                  ; preds = %if.end.i1048
  %mb_data15.i1051 = getelementptr inbounds i8, ptr %54, i64 848888
  %66 = load ptr, ptr %mb_data15.i1051, align 8
  %mb_addr16.i1052 = getelementptr inbounds i8, ptr %up.i1028, i64 4
  %67 = load i32, ptr %mb_addr16.i1052, align 4
  %idxprom17.i1053 = sext i32 %67 to i64
  %dpl_flag19.i1054 = getelementptr inbounds %struct.macroblock, ptr %66, i64 %idxprom17.i1053, i32 23
  %68 = load i8, ptr %dpl_flag19.i1054, align 1
  %dpl_flag21.i1055 = getelementptr inbounds i8, ptr %currMB, i64 111
  %69 = load i8, ptr %dpl_flag21.i1055, align 1
  %or2339.i1056 = or i8 %69, %68
  store i8 %or2339.i1056, ptr %dpl_flag21.i1055, align 1
  br label %check_dp_neighbors.exit1057

check_dp_neighbors.exit1057:                      ; preds = %lor.lhs.false.i1035, %if.end.i1048, %if.then14.i1050
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i1029) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i1028) #14
  %dpl_flag134 = getelementptr inbounds i8, ptr %currMB, i64 111
  %70 = load i8, ptr %dpl_flag134, align 1
  %tobool135.not = icmp eq i8 %70, 0
  br i1 %tobool135.not, label %if.then142, label %if.end139.thread1168

if.end139.thread1168:                             ; preds = %check_dp_neighbors.exit1057
  store i32 0, ptr %cbp124, align 4
  br label %if.end173

if.end139:                                        ; preds = %if.else
  %dpl_flag140.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag140.phi.trans.insert, align 1
  %tobool141.not = icmp eq i8 %.pre, 0
  br i1 %tobool141.not, label %if.then142, label %if.end173

if.then142:                                       ; preds = %check_dp_neighbors.exit1057, %if.end139
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %71 = load i32, ptr %numcoeff, align 4
  %cmp1471081 = icmp sgt i32 %71, 0
  br i1 %cmp1471081, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then142
  %cof = getelementptr inbounds i8, ptr %1, i64 1272
  %wide.trip.count = zext nneg i32 %71 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %pos_scan_4x4.01082 = phi ptr [ %9, %for.body.lr.ph ], [ %pos_scan_4x4.1, %for.inc ]
  %arrayidx150 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %72 = load i32, ptr %arrayidx150, align 4
  %cmp151.not = icmp eq i32 %72, 0
  br i1 %cmp151.not, label %for.inc, label %if.then153

if.then153:                                       ; preds = %for.body
  %arrayidx155 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %73 = load i32, ptr %arrayidx155, align 4
  %mul = shl nsw i32 %73, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.01082, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %74 = load i8, ptr %add.ptr, align 1
  %conv156 = zext i8 %74 to i64
  %incdec.ptr157 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %75 = load i8, ptr %incdec.ptr, align 1
  %conv158 = zext i8 %75 to i64
  %76 = load ptr, ptr %cof, align 8
  %77 = load ptr, ptr %76, align 8
  %arrayidx164.idx = shl nuw nsw i64 %conv158, 5
  %arrayidx164 = getelementptr inbounds i8, ptr %77, i64 %arrayidx164.idx
  %78 = load ptr, ptr %arrayidx164, align 8
  %arrayidx166.idx = shl nuw nsw i64 %conv156, 4
  %arrayidx166 = getelementptr inbounds i8, ptr %78, i64 %arrayidx166.idx
  store i32 %72, ptr %arrayidx166, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then153
  %pos_scan_4x4.1 = phi ptr [ %incdec.ptr157, %if.then153 ], [ %pos_scan_4x4.01082, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then142
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %79 = load i32, ptr %is_lossless, align 4
  %cmp168 = icmp eq i32 %79, 0
  br i1 %cmp168, label %if.then170, label %if.end173

if.then170:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %1, i64 216
  %80 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %80) #14
  br label %if.end173

if.end173:                                        ; preds = %if.end139.thread1168, %if.end139, %if.then170, %for.end, %if.end, %check_dp_neighbors.exit, %if.then119, %if.then96
  %cbp.1 = phi i32 [ %51, %if.end139 ], [ %51, %if.then170 ], [ %51, %for.end ], [ 0, %if.then119 ], [ %18, %check_dp_neighbors.exit ], [ %18, %if.then96 ], [ 0, %if.end ], [ 0, %if.end139.thread1168 ]
  %qp = getelementptr inbounds i8, ptr %1, i64 148
  %81 = load i32, ptr %qp, align 4
  %82 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %81, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %82, i64 849052
  %83 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %83, %81
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %84 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %84, i64 13520
  %85 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %82, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %85, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %86 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %86
  %87 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %87, %81
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end173
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %88 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %88 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end173
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end173 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %89 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %89, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %90 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %90
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %85, i64 304
  %91 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %91, %81
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %92 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %92 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %93 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %93, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i1059 = icmp eq i32 %add.i, 0
  br i1 %cmp.i1059, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %82, i64 849092
  %94 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %94, 1
  %95 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %95, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %3, i64 856032
  %96 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id174 = getelementptr inbounds i8, ptr %1, i64 216
  %97 = load i32, ptr %colour_plane_id174, align 8
  %idxprom175 = sext i32 %97 to i64
  %arrayidx176 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom175
  %98 = load i32, ptr %arrayidx176, align 4
  %idxprom177 = sext i32 %98 to i64
  %arrayidx178 = getelementptr inbounds i32, ptr %96, i64 %idxprom177
  %99 = load i32, ptr %arrayidx178, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %3, i64 856040
  %100 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx184 = getelementptr inbounds i32, ptr %100, i64 %idxprom177
  %101 = load i32, ptr %arrayidx184, align 4
  %idxprom193 = sext i32 %add24.i.i to i64
  %arrayidx194 = getelementptr inbounds i32, ptr %96, i64 %idxprom193
  %102 = load i32, ptr %arrayidx194, align 4
  store i32 %102, ptr %qp_per_uv, align 4
  %arrayidx203 = getelementptr inbounds i32, ptr %100, i64 %idxprom193
  %103 = load i32, ptr %arrayidx203, align 4
  store i32 %103, ptr %qp_rem_uv, align 4
  %idxprom193.1 = sext i32 %add24.1.i.i to i64
  %arrayidx194.1 = getelementptr inbounds i32, ptr %96, i64 %idxprom193.1
  %104 = load i32, ptr %arrayidx194.1, align 4
  %arrayidx196.1 = getelementptr inbounds i8, ptr %qp_per_uv, i64 4
  store i32 %104, ptr %arrayidx196.1, align 4
  %arrayidx203.1 = getelementptr inbounds i32, ptr %100, i64 %idxprom193.1
  %105 = load i32, ptr %arrayidx203.1, align 4
  %arrayidx205.1 = getelementptr inbounds i8, ptr %qp_rem_uv, i64 4
  store i32 %105, ptr %arrayidx205.1, align 4
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %1, i64 1392
  %idxprom214 = sext i32 %101 to i64
  %arrayidx215 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom175, i64 %idxprom214
  %InvLevelScale8x8_Intra = getelementptr inbounds i8, ptr %1, i64 3696
  %arrayidx232 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 %idxprom175, i64 %idxprom214
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %1, i64 2544
  %arrayidx222 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom175, i64 %idxprom214
  %InvLevelScale8x8_Inter = getelementptr inbounds i8, ptr %1, i64 8304
  %arrayidx239 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 %idxprom175, i64 %idxprom214
  %cond2251075 = select i1 %cmp, ptr %arrayidx215, ptr %arrayidx222
  %cond242 = select i1 %cmp, ptr %arrayidx232, ptr %arrayidx239
  %tobool243.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool243.not, label %if.end263.thread, label %if.then244

if.then244:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag245 = getelementptr inbounds i8, ptr %currMB, i64 420
  %106 = load i32, ptr %luma_transform_size_8x8_flag245, align 4
  %tobool246.not = icmp eq i32 %106, 0
  %nz_coeff = getelementptr inbounds i8, ptr %3, i64 848832
  %107 = load ptr, ptr %nz_coeff, align 8
  %idxprom248 = sext i32 %0 to i64
  %arrayidx249 = getelementptr inbounds ptr, ptr %107, i64 %idxprom248
  %108 = load ptr, ptr %arrayidx249, align 8
  %109 = load ptr, ptr %108, align 8
  br i1 %tobool246.not, label %if.then247, label %if.else251

if.then247:                                       ; preds = %if.then244
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond2251075, i32 noundef %99, i32 noundef %cbp.1, ptr noundef %109)
  br label %if.end263

if.else251:                                       ; preds = %if.then244
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond242, i32 noundef %99, i32 noundef %cbp.1, ptr noundef %109)
  br label %if.end263

if.end263.thread:                                 ; preds = %update_qp.exit
  %nz_coeff258 = getelementptr inbounds i8, ptr %3, i64 848832
  %110 = load ptr, ptr %nz_coeff258, align 8
  %idxprom259 = sext i32 %0 to i64
  %arrayidx260 = getelementptr inbounds ptr, ptr %110, i64 %idxprom259
  %111 = load ptr, ptr %arrayidx260, align 8
  %112 = load ptr, ptr %111, align 8
  %113 = load ptr, ptr %112, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %113, i8 0, i64 16, i1 false)
  br label %if.then537

if.end263:                                        ; preds = %if.then247, %if.else251
  %cmp264 = icmp sgt i32 %cbp.1, 15
  br i1 %cmp264, label %for.cond267.preheader, label %if.then537

for.cond267.preheader:                            ; preds = %if.end263
  %cof272 = getelementptr inbounds i8, ptr %1, i64 1272
  %bitdepth_chroma_qp_scale = getelementptr inbounds i8, ptr %3, i64 849056
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %arrayidx516 = getelementptr inbounds i8, ptr %m3, i64 16
  %arrayidx358 = getelementptr inbounds i8, ptr %m3, i64 4
  %arrayidx360 = getelementptr inbounds i8, ptr %m3, i64 20
  %arrayidx365 = getelementptr inbounds i8, ptr %m3, i64 8
  %arrayidx367 = getelementptr inbounds i8, ptr %m3, i64 24
  %arrayidx372 = getelementptr inbounds i8, ptr %m3, i64 12
  %arrayidx374 = getelementptr inbounds i8, ptr %m3, i64 28
  %mb_cr_size_y = getelementptr inbounds i8, ptr %3, i64 849112
  %mb_cr_size_x = getelementptr inbounds i8, ptr %3, i64 849108
  %arrayidx518.1 = getelementptr inbounds i8, ptr %m3, i64 20
  %arrayidx518.2 = getelementptr inbounds i8, ptr %m3, i64 24
  %arrayidx518.3 = getelementptr inbounds i8, ptr %m3, i64 28
  br label %for.body270

for.body270:                                      ; preds = %for.cond267.preheader, %if.end530
  %cmp268 = phi i1 [ true, %for.cond267.preheader ], [ false, %if.end530 ]
  %indvars.iv1134 = phi i64 [ 0, %for.cond267.preheader ], [ 2, %if.end530 ]
  %114 = lshr exact i64 %indvars.iv1134, 1
  %115 = load ptr, ptr %cof272, align 8
  %116 = add nuw nsw i64 %114, 1
  %arrayidx275 = getelementptr inbounds ptr, ptr %115, i64 %116
  %117 = load ptr, ptr %arrayidx275, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %m3) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(32) %m3, i8 0, i64 32, i1 false)
  %118 = load ptr, ptr %qp_per_matrix, align 8
  %arrayidx278 = getelementptr inbounds [2 x i32], ptr %qpc.i.i, i64 0, i64 %114
  %119 = load i32, ptr %arrayidx278, align 4
  %add279 = add nsw i32 %119, 3
  %120 = load i32, ptr %bitdepth_chroma_qp_scale, align 8
  %add280 = add nsw i32 %add279, %120
  %idxprom281 = sext i32 %add280 to i64
  %arrayidx282 = getelementptr inbounds i32, ptr %118, i64 %idxprom281
  %121 = load i32, ptr %arrayidx282, align 4
  %122 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx291 = getelementptr inbounds i32, ptr %122, i64 %idxprom281
  %123 = load i32, ptr %arrayidx291, align 4
  %idxprom298 = sext i32 %123 to i64
  %arrayidx299 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %116, i64 %idxprom298
  %arrayidx307 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %116, i64 %idxprom298
  %InvLevelScale4x4271.0 = select i1 %cmp, ptr %arrayidx299, ptr %arrayidx307
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %124 = load i32, ptr %numcoeff, align 4
  %cmp3131085 = icmp sgt i32 %124, 0
  br i1 %cmp3131085, label %for.body315.lr.ph, label %for.end345

for.body315.lr.ph:                                ; preds = %for.body270
  %125 = shl nuw nsw i64 %indvars.iv1134, 2
  %shl322 = shl nuw nsw i64 16711680, %125
  %wide.trip.count1117 = zext nneg i32 %124 to i64
  br label %for.body315

for.body315:                                      ; preds = %for.body315.lr.ph, %for.inc343
  %indvars.iv1114 = phi i64 [ 0, %for.body315.lr.ph ], [ %indvars.iv.next1115, %for.inc343 ]
  %coef_ctr.01086 = phi i32 [ -1, %for.body315.lr.ph ], [ %coef_ctr.1, %for.inc343 ]
  %arrayidx317 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1114
  %126 = load i32, ptr %arrayidx317, align 4
  %cmp318.not = icmp eq i32 %126, 0
  br i1 %cmp318.not, label %for.inc343, label %if.then320

if.then320:                                       ; preds = %for.body315
  %127 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %127, %shl322
  store i64 %or, ptr %cbp_blk, align 8
  %arrayidx325 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1114
  %128 = load i32, ptr %arrayidx325, align 4
  %add326 = add i32 %coef_ctr.01086, 1
  %add327 = add i32 %add326, %128
  %idxprom328 = sext i32 %add327 to i64
  %arrayidx329 = getelementptr inbounds [8 x [2 x i8]], ptr @SCAN_YUV422, i64 0, i64 %idxprom328
  %129 = load i8, ptr %arrayidx329, align 2
  %arrayidx334 = getelementptr inbounds i8, ptr %arrayidx329, i64 1
  %130 = load i8, ptr %arrayidx334, align 1
  %idxprom338 = zext i8 %129 to i64
  %idxprom340 = zext i8 %130 to i64
  %arrayidx341 = getelementptr inbounds [2 x [4 x i32]], ptr %m3, i64 0, i64 %idxprom338, i64 %idxprom340
  store i32 %126, ptr %arrayidx341, align 4
  br label %for.inc343

for.inc343:                                       ; preds = %for.body315, %if.then320
  %coef_ctr.1 = phi i32 [ %add327, %if.then320 ], [ %coef_ctr.01086, %for.body315 ]
  %indvars.iv.next1115 = add nuw nsw i64 %indvars.iv1114, 1
  %exitcond1118.not = icmp eq i64 %indvars.iv.next1115, %wide.trip.count1117
  br i1 %exitcond1118.not, label %for.end345, label %for.body315

for.end345:                                       ; preds = %for.inc343, %for.body270
  %131 = load i32, ptr %is_lossless.i, align 4
  %cmp347 = icmp eq i32 %131, 0
  %132 = load i32, ptr %m3, align 16
  br i1 %cmp347, label %if.then349, label %for.body504.preheader

for.body504.preheader:                            ; preds = %for.end345
  %133 = load ptr, ptr %cof272, align 8
  %arrayidx511 = getelementptr inbounds ptr, ptr %133, i64 %116
  %134 = load ptr, ptr %arrayidx511, align 8
  %135 = load ptr, ptr %134, align 8
  store i32 %132, ptr %135, align 4
  %136 = load i32, ptr %arrayidx516, align 16
  %137 = load ptr, ptr %cof272, align 8
  %arrayidx522 = getelementptr inbounds ptr, ptr %137, i64 %116
  %138 = load ptr, ptr %arrayidx522, align 8
  %139 = load ptr, ptr %138, align 8
  %arrayidx526 = getelementptr inbounds i8, ptr %139, i64 16
  store i32 %136, ptr %arrayidx526, align 4
  %140 = load i32, ptr %arrayidx358, align 4
  %141 = load ptr, ptr %cof272, align 8
  %arrayidx511.1 = getelementptr inbounds ptr, ptr %141, i64 %116
  %142 = load ptr, ptr %arrayidx511.1, align 8
  %arrayidx514.1 = getelementptr inbounds i8, ptr %142, i64 32
  %143 = load ptr, ptr %arrayidx514.1, align 8
  store i32 %140, ptr %143, align 4
  %144 = load i32, ptr %arrayidx518.1, align 4
  %145 = load ptr, ptr %cof272, align 8
  %arrayidx522.1 = getelementptr inbounds ptr, ptr %145, i64 %116
  %146 = load ptr, ptr %arrayidx522.1, align 8
  %arrayidx525.1 = getelementptr inbounds i8, ptr %146, i64 32
  %147 = load ptr, ptr %arrayidx525.1, align 8
  %arrayidx526.1 = getelementptr inbounds i8, ptr %147, i64 16
  store i32 %144, ptr %arrayidx526.1, align 4
  %148 = load i32, ptr %arrayidx365, align 8
  %149 = load ptr, ptr %cof272, align 8
  %arrayidx511.2 = getelementptr inbounds ptr, ptr %149, i64 %116
  %150 = load ptr, ptr %arrayidx511.2, align 8
  %arrayidx514.2 = getelementptr inbounds i8, ptr %150, i64 64
  %151 = load ptr, ptr %arrayidx514.2, align 8
  store i32 %148, ptr %151, align 4
  %152 = load i32, ptr %arrayidx518.2, align 8
  %153 = load ptr, ptr %cof272, align 8
  %arrayidx522.2 = getelementptr inbounds ptr, ptr %153, i64 %116
  %154 = load ptr, ptr %arrayidx522.2, align 8
  %arrayidx525.2 = getelementptr inbounds i8, ptr %154, i64 64
  %155 = load ptr, ptr %arrayidx525.2, align 8
  %arrayidx526.2 = getelementptr inbounds i8, ptr %155, i64 16
  store i32 %152, ptr %arrayidx526.2, align 4
  %156 = load i32, ptr %arrayidx372, align 4
  %157 = load ptr, ptr %cof272, align 8
  %arrayidx511.3 = getelementptr inbounds ptr, ptr %157, i64 %116
  %158 = load ptr, ptr %arrayidx511.3, align 8
  %arrayidx514.3 = getelementptr inbounds i8, ptr %158, i64 96
  %159 = load ptr, ptr %arrayidx514.3, align 8
  store i32 %156, ptr %159, align 4
  %160 = load i32, ptr %arrayidx518.3, align 4
  %161 = load ptr, ptr %cof272, align 8
  %arrayidx522.3 = getelementptr inbounds ptr, ptr %161, i64 %116
  %162 = load ptr, ptr %arrayidx522.3, align 8
  %arrayidx525.3 = getelementptr inbounds i8, ptr %162, i64 96
  %163 = load ptr, ptr %arrayidx525.3, align 8
  %arrayidx526.3 = getelementptr inbounds i8, ptr %163, i64 16
  store i32 %160, ptr %arrayidx526.3, align 4
  br label %if.end530

if.then349:                                       ; preds = %for.end345
  %164 = load i32, ptr %arrayidx516, align 16
  %add354 = add nsw i32 %164, %132
  %165 = load i32, ptr %arrayidx358, align 4
  %166 = load i32, ptr %arrayidx360, align 4
  %add361 = add nsw i32 %166, %165
  %167 = load i32, ptr %arrayidx365, align 8
  %168 = load i32, ptr %arrayidx367, align 8
  %add368 = add nsw i32 %168, %167
  %169 = load i32, ptr %arrayidx372, align 4
  %170 = load i32, ptr %arrayidx374, align 4
  %add375 = add nsw i32 %170, %169
  %sub382 = sub nsw i32 %132, %164
  %sub389 = sub nsw i32 %165, %166
  %sub396 = sub nsw i32 %167, %168
  %sub403 = sub nsw i32 %169, %170
  %arrayidx452 = getelementptr inbounds i8, ptr %117, i64 32
  %arrayidx459 = getelementptr inbounds i8, ptr %117, i64 64
  %arrayidx466 = getelementptr inbounds i8, ptr %117, i64 96
  %add416 = add nsw i32 %add368, %add354
  %sub424 = sub nsw i32 %add354, %add368
  %sub432 = sub nsw i32 %add361, %add375
  %add440 = add nsw i32 %add375, %add361
  %add444 = add nsw i32 %add440, %add416
  %171 = load ptr, ptr %117, align 8
  store i32 %add444, ptr %171, align 4
  %add451 = add nsw i32 %sub432, %sub424
  %172 = load ptr, ptr %arrayidx452, align 8
  store i32 %add451, ptr %172, align 4
  %sub458 = sub nsw i32 %sub424, %sub432
  %173 = load ptr, ptr %arrayidx459, align 8
  store i32 %sub458, ptr %173, align 4
  %sub465 = sub nsw i32 %add416, %add440
  %174 = load ptr, ptr %arrayidx466, align 8
  store i32 %sub465, ptr %174, align 4
  %add416.1 = add nsw i32 %sub396, %sub382
  %sub424.1 = sub nsw i32 %sub382, %sub396
  %sub432.1 = sub nsw i32 %sub389, %sub403
  %add440.1 = add nsw i32 %sub403, %sub389
  %add444.1 = add nsw i32 %add440.1, %add416.1
  %175 = load ptr, ptr %117, align 8
  %arrayidx448.1 = getelementptr inbounds i8, ptr %175, i64 16
  store i32 %add444.1, ptr %arrayidx448.1, align 4
  %add451.1 = add nsw i32 %sub432.1, %sub424.1
  %176 = load ptr, ptr %arrayidx452, align 8
  %arrayidx455.1 = getelementptr inbounds i8, ptr %176, i64 16
  store i32 %add451.1, ptr %arrayidx455.1, align 4
  %sub458.1 = sub nsw i32 %sub424.1, %sub432.1
  %177 = load ptr, ptr %arrayidx459, align 8
  %arrayidx462.1 = getelementptr inbounds i8, ptr %177, i64 16
  store i32 %sub458.1, ptr %arrayidx462.1, align 4
  %sub465.1 = sub nsw i32 %add416.1, %add440.1
  %178 = load ptr, ptr %arrayidx466, align 8
  %arrayidx469.1 = getelementptr inbounds i8, ptr %178, i64 16
  store i32 %sub465.1, ptr %arrayidx469.1, align 4
  %179 = load i32, ptr %mb_cr_size_y, align 8
  %cmp4741092 = icmp sgt i32 %179, 0
  br i1 %cmp4741092, label %for.cond477.preheader.lr.ph, label %if.end530

for.cond477.preheader.lr.ph:                      ; preds = %if.then349
  %180 = load i32, ptr %mb_cr_size_x, align 4
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %for.cond477.preheader, label %if.end530

for.cond477.preheader:                            ; preds = %for.cond477.preheader.lr.ph, %for.inc497
  %182 = phi i32 [ %189, %for.inc497 ], [ %179, %for.cond477.preheader.lr.ph ]
  %183 = phi i32 [ %190, %for.inc497 ], [ %180, %for.cond477.preheader.lr.ph ]
  %indvars.iv1131 = phi i64 [ %indvars.iv.next1132, %for.inc497 ], [ 0, %for.cond477.preheader.lr.ph ]
  %cmp4781090 = icmp sgt i32 %183, 0
  br i1 %cmp4781090, label %for.body480.lr.ph, label %for.inc497

for.body480.lr.ph:                                ; preds = %for.cond477.preheader
  %arrayidx482 = getelementptr inbounds ptr, ptr %117, i64 %indvars.iv1131
  br label %for.body480

for.body480:                                      ; preds = %for.body480.lr.ph, %for.body480
  %indvars.iv1128 = phi i64 [ 0, %for.body480.lr.ph ], [ %indvars.iv.next1129, %for.body480 ]
  %184 = load ptr, ptr %arrayidx482, align 8
  %arrayidx484 = getelementptr inbounds i32, ptr %184, i64 %indvars.iv1128
  %185 = load i32, ptr %arrayidx484, align 4
  %186 = load i32, ptr %InvLevelScale4x4271.0, align 4
  %mul487 = mul nsw i32 %186, %185
  %shl488 = shl i32 %mul487, %121
  %add.i1060 = add nsw i32 %shl488, 32
  %shr.i = ashr i32 %add.i1060, 6
  store i32 %shr.i, ptr %arrayidx484, align 4
  %indvars.iv.next1129 = add nuw nsw i64 %indvars.iv1128, 4
  %187 = load i32, ptr %mb_cr_size_x, align 4
  %188 = sext i32 %187 to i64
  %cmp478 = icmp slt i64 %indvars.iv.next1129, %188
  br i1 %cmp478, label %for.body480, label %for.inc497.loopexit

for.inc497.loopexit:                              ; preds = %for.body480
  %.pre1164 = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc497

for.inc497:                                       ; preds = %for.inc497.loopexit, %for.cond477.preheader
  %189 = phi i32 [ %.pre1164, %for.inc497.loopexit ], [ %182, %for.cond477.preheader ]
  %190 = phi i32 [ %187, %for.inc497.loopexit ], [ %183, %for.cond477.preheader ]
  %indvars.iv.next1132 = add nuw nsw i64 %indvars.iv1131, 4
  %191 = sext i32 %189 to i64
  %cmp474 = icmp slt i64 %indvars.iv.next1132, %191
  br i1 %cmp474, label %for.cond477.preheader, label %if.end530, !llvm.loop !7

if.end530:                                        ; preds = %for.inc497, %for.cond477.preheader.lr.ph, %for.body504.preheader, %if.then349
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %m3) #14
  br i1 %cmp268, label %for.body270, label %if.end534

if.end534:                                        ; preds = %if.end530
  %cmp535 = icmp slt i32 %cbp.1, 32
  br i1 %cmp535, label %if.then537, label %if.else543

if.then537:                                       ; preds = %if.end263, %if.end263.thread, %if.end534
  %nz_coeff538 = getelementptr inbounds i8, ptr %3, i64 848832
  %192 = load ptr, ptr %nz_coeff538, align 8
  %idxprom539 = sext i32 %0 to i64
  %arrayidx540 = getelementptr inbounds ptr, ptr %192, i64 %idxprom539
  %193 = load ptr, ptr %arrayidx540, align 8
  %arrayidx541 = getelementptr inbounds i8, ptr %193, i64 8
  %194 = load ptr, ptr %arrayidx541, align 8
  %195 = load ptr, ptr %194, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %195, i8 0, i64 32, i1 false)
  br label %if.end753

if.else543:                                       ; preds = %if.end534
  %196 = load i32, ptr %is_lossless.i, align 4
  %cmp545 = icmp eq i32 %196, 0
  %num_blk8x8_uv = getelementptr inbounds i8, ptr %3, i64 849096
  %197 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp5491105 = icmp sgt i32 %197, 0
  br i1 %cmp545, label %for.cond548.preheader, label %for.cond665.preheader

for.cond665.preheader:                            ; preds = %if.else543
  br i1 %cmp5491105, label %for.body669.lr.ph, label %if.end753

for.body669.lr.ph:                                ; preds = %for.cond665.preheader
  %num_uv_blocks670 = getelementptr inbounds i8, ptr %3, i64 849100
  %is_v_block674 = getelementptr inbounds i8, ptr %currMB, i64 100
  %idxprom679 = sext i32 %sub to i64
  br label %for.body669

for.cond548.preheader:                            ; preds = %if.else543
  br i1 %cmp5491105, label %for.body551.lr.ph, label %if.end753

for.body551.lr.ph:                                ; preds = %for.cond548.preheader
  %num_uv_blocks = getelementptr inbounds i8, ptr %3, i64 849100
  %is_v_block = getelementptr inbounds i8, ptr %currMB, i64 100
  %idxprom582 = sext i32 %sub to i64
  %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter = select i1 %cmp, ptr %InvLevelScale4x4_Intra, ptr %InvLevelScale4x4_Inter
  br label %for.body551

for.body551:                                      ; preds = %for.body551.lr.ph, %for.inc658.3
  %indvars.iv1161 = phi i64 [ 0, %for.body551.lr.ph ], [ %indvars.iv.next1162, %for.inc658.3 ]
  %198 = load i32, ptr %num_uv_blocks, align 4
  %199 = sext i32 %198 to i64
  %cmp553 = icmp sge i64 %indvars.iv1161, %199
  %conv554 = zext i1 %cmp553 to i32
  store i32 %conv554, ptr %is_v_block, align 4
  %add558 = select i1 %cmp553, i64 2, i64 1
  %idxprom561 = zext i1 %cmp553 to i64
  %arrayidx562 = getelementptr inbounds [2 x i32], ptr %qp_rem_uv, i64 0, i64 %idxprom561
  %200 = load i32, ptr %arrayidx562, align 4
  %idxprom563 = sext i32 %200 to i64
  %arrayidx574 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter, i64 0, i64 %add558, i64 %idxprom563
  %mul596 = select i1 %cmp553, i32 2, i32 0
  %arrayidx639 = getelementptr inbounds [2 x i32], ptr %qp_per_uv, i64 0, i64 %idxprom561
  %arrayidx587 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 0
  %201 = load i8, ptr %arrayidx587, align 4
  %conv588 = zext i8 %201 to i32
  %arrayidx594 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 0
  %202 = load i8, ptr %arrayidx594, align 4
  %conv595 = zext i8 %202 to i32
  %add597 = add nuw nsw i32 %mul596, %conv588
  %add598 = add nuw nsw i32 %conv595, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add597, i32 noundef %add598, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %203 = load i32, ptr %numcoeff, align 4
  %cmp6021101 = icmp sgt i32 %203, 0
  br i1 %cmp6021101, label %for.body604.lr.ph, label %for.inc658

for.body604.lr.ph:                                ; preds = %for.body551
  %arrayidx613 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1161, i64 0
  %shl646 = shl nuw nsw i32 %conv595, 2
  %shl650 = shl nuw nsw i32 %conv588, 2
  %wide.trip.count1155 = zext nneg i32 %203 to i64
  br label %for.body604

for.body604:                                      ; preds = %for.body604.lr.ph, %for.inc655
  %indvars.iv1152 = phi i64 [ 0, %for.body604.lr.ph ], [ %indvars.iv.next1153, %for.inc655 ]
  %coef_ctr.21102 = phi i32 [ 0, %for.body604.lr.ph ], [ %coef_ctr.3, %for.inc655 ]
  %arrayidx606 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1152
  %204 = load i32, ptr %arrayidx606, align 4
  %cmp607.not = icmp eq i32 %204, 0
  br i1 %cmp607.not, label %for.inc655, label %i64_power2.exit

i64_power2.exit:                                  ; preds = %for.body604
  %205 = load i8, ptr %arrayidx613, align 4
  %idxprom.i1062 = zext nneg i8 %205 to i64
  %arrayidx.i1063 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1062
  %206 = load i64, ptr %arrayidx.i1063, align 8
  %207 = load i64, ptr %cbp_blk, align 8
  %or618 = or i64 %207, %206
  store i64 %or618, ptr %cbp_blk, align 8
  %arrayidx620 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1152
  %208 = load i32, ptr %arrayidx620, align 4
  %add621 = add i32 %coef_ctr.21102, 1
  %add622 = add i32 %add621, %208
  %idxprom623 = sext i32 %add622 to i64
  %arrayidx624 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom623
  %209 = load i8, ptr %arrayidx624, align 1
  %conv626 = zext i8 %209 to i32
  %arrayidx629 = getelementptr inbounds i8, ptr %arrayidx624, i64 1
  %210 = load i8, ptr %arrayidx629, align 1
  %conv630 = zext i8 %210 to i32
  %idxprom633 = zext i8 %210 to i64
  %idxprom635 = zext i8 %209 to i64
  %arrayidx636 = getelementptr inbounds [4 x i32], ptr %arrayidx574, i64 %idxprom633, i64 %idxprom635
  %211 = load i32, ptr %arrayidx636, align 4
  %mul637 = mul nsw i32 %211, %204
  %212 = load i32, ptr %arrayidx639, align 4
  %shl640 = shl i32 %mul637, %212
  %add.i1064 = add nsw i32 %shl640, 8
  %shr.i1065 = ashr i32 %add.i1064, 4
  %213 = load ptr, ptr %cof272, align 8
  %arrayidx645 = getelementptr inbounds ptr, ptr %213, i64 %add558
  %214 = load ptr, ptr %arrayidx645, align 8
  %add647 = add nuw nsw i32 %shl646, %conv630
  %idxprom648 = zext nneg i32 %add647 to i64
  %arrayidx649 = getelementptr inbounds ptr, ptr %214, i64 %idxprom648
  %215 = load ptr, ptr %arrayidx649, align 8
  %add651 = add nuw nsw i32 %shl650, %conv626
  %idxprom652 = zext nneg i32 %add651 to i64
  %arrayidx653 = getelementptr inbounds i32, ptr %215, i64 %idxprom652
  store i32 %shr.i1065, ptr %arrayidx653, align 4
  br label %for.inc655

for.inc655:                                       ; preds = %for.body604, %i64_power2.exit
  %coef_ctr.3 = phi i32 [ %add622, %i64_power2.exit ], [ %coef_ctr.21102, %for.body604 ]
  %indvars.iv.next1153 = add nuw nsw i64 %indvars.iv1152, 1
  %exitcond1156.not = icmp eq i64 %indvars.iv.next1153, %wide.trip.count1155
  br i1 %exitcond1156.not, label %for.inc658, label %for.body604

for.inc658:                                       ; preds = %for.inc655, %for.body551
  %arrayidx587.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 1
  %216 = load i8, ptr %arrayidx587.1, align 1
  %conv588.1 = zext i8 %216 to i32
  %arrayidx594.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 1
  %217 = load i8, ptr %arrayidx594.1, align 1
  %conv595.1 = zext i8 %217 to i32
  %add597.1 = add nuw nsw i32 %mul596, %conv588.1
  %add598.1 = add nuw nsw i32 %conv595.1, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add597.1, i32 noundef %add598.1, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %218 = load i32, ptr %numcoeff, align 4
  %cmp6021101.1 = icmp sgt i32 %218, 0
  br i1 %cmp6021101.1, label %for.body604.lr.ph.1, label %for.inc658.1

for.body604.lr.ph.1:                              ; preds = %for.inc658
  %arrayidx613.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1161, i64 1
  %shl646.1 = shl nuw nsw i32 %conv595.1, 2
  %shl650.1 = shl nuw nsw i32 %conv588.1, 2
  %wide.trip.count1155.1 = zext nneg i32 %218 to i64
  br label %for.body604.1

for.body604.1:                                    ; preds = %for.inc655.1, %for.body604.lr.ph.1
  %indvars.iv1152.1 = phi i64 [ 0, %for.body604.lr.ph.1 ], [ %indvars.iv.next1153.1, %for.inc655.1 ]
  %coef_ctr.21102.1 = phi i32 [ 0, %for.body604.lr.ph.1 ], [ %coef_ctr.3.1, %for.inc655.1 ]
  %arrayidx606.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1152.1
  %219 = load i32, ptr %arrayidx606.1, align 4
  %cmp607.not.1 = icmp eq i32 %219, 0
  br i1 %cmp607.not.1, label %for.inc655.1, label %i64_power2.exit.1

i64_power2.exit.1:                                ; preds = %for.body604.1
  %220 = load i8, ptr %arrayidx613.1, align 1
  %idxprom.i1062.1 = zext nneg i8 %220 to i64
  %arrayidx.i1063.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1062.1
  %221 = load i64, ptr %arrayidx.i1063.1, align 8
  %222 = load i64, ptr %cbp_blk, align 8
  %or618.1 = or i64 %222, %221
  store i64 %or618.1, ptr %cbp_blk, align 8
  %arrayidx620.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1152.1
  %223 = load i32, ptr %arrayidx620.1, align 4
  %add621.1 = add i32 %coef_ctr.21102.1, 1
  %add622.1 = add i32 %add621.1, %223
  %idxprom623.1 = sext i32 %add622.1 to i64
  %arrayidx624.1 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom623.1
  %224 = load i8, ptr %arrayidx624.1, align 1
  %conv626.1 = zext i8 %224 to i32
  %arrayidx629.1 = getelementptr inbounds i8, ptr %arrayidx624.1, i64 1
  %225 = load i8, ptr %arrayidx629.1, align 1
  %conv630.1 = zext i8 %225 to i32
  %idxprom633.1 = zext i8 %225 to i64
  %idxprom635.1 = zext i8 %224 to i64
  %arrayidx636.1 = getelementptr inbounds [4 x i32], ptr %arrayidx574, i64 %idxprom633.1, i64 %idxprom635.1
  %226 = load i32, ptr %arrayidx636.1, align 4
  %mul637.1 = mul nsw i32 %226, %219
  %227 = load i32, ptr %arrayidx639, align 4
  %shl640.1 = shl i32 %mul637.1, %227
  %add.i1064.1 = add nsw i32 %shl640.1, 8
  %shr.i1065.1 = ashr i32 %add.i1064.1, 4
  %228 = load ptr, ptr %cof272, align 8
  %arrayidx645.1 = getelementptr inbounds ptr, ptr %228, i64 %add558
  %229 = load ptr, ptr %arrayidx645.1, align 8
  %add647.1 = add nuw nsw i32 %shl646.1, %conv630.1
  %idxprom648.1 = zext nneg i32 %add647.1 to i64
  %arrayidx649.1 = getelementptr inbounds ptr, ptr %229, i64 %idxprom648.1
  %230 = load ptr, ptr %arrayidx649.1, align 8
  %add651.1 = add nuw nsw i32 %shl650.1, %conv626.1
  %idxprom652.1 = zext nneg i32 %add651.1 to i64
  %arrayidx653.1 = getelementptr inbounds i32, ptr %230, i64 %idxprom652.1
  store i32 %shr.i1065.1, ptr %arrayidx653.1, align 4
  br label %for.inc655.1

for.inc655.1:                                     ; preds = %i64_power2.exit.1, %for.body604.1
  %coef_ctr.3.1 = phi i32 [ %add622.1, %i64_power2.exit.1 ], [ %coef_ctr.21102.1, %for.body604.1 ]
  %indvars.iv.next1153.1 = add nuw nsw i64 %indvars.iv1152.1, 1
  %exitcond1156.1.not = icmp eq i64 %indvars.iv.next1153.1, %wide.trip.count1155.1
  br i1 %exitcond1156.1.not, label %for.inc658.1, label %for.body604.1

for.inc658.1:                                     ; preds = %for.inc655.1, %for.inc658
  %arrayidx587.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 2
  %231 = load i8, ptr %arrayidx587.2, align 2
  %conv588.2 = zext i8 %231 to i32
  %arrayidx594.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 2
  %232 = load i8, ptr %arrayidx594.2, align 2
  %conv595.2 = zext i8 %232 to i32
  %add597.2 = add nuw nsw i32 %mul596, %conv588.2
  %add598.2 = add nuw nsw i32 %conv595.2, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add597.2, i32 noundef %add598.2, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %233 = load i32, ptr %numcoeff, align 4
  %cmp6021101.2 = icmp sgt i32 %233, 0
  br i1 %cmp6021101.2, label %for.body604.lr.ph.2, label %for.inc658.2

for.body604.lr.ph.2:                              ; preds = %for.inc658.1
  %arrayidx613.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1161, i64 2
  %shl646.2 = shl nuw nsw i32 %conv595.2, 2
  %shl650.2 = shl nuw nsw i32 %conv588.2, 2
  %wide.trip.count1155.2 = zext nneg i32 %233 to i64
  br label %for.body604.2

for.body604.2:                                    ; preds = %for.inc655.2, %for.body604.lr.ph.2
  %indvars.iv1152.2 = phi i64 [ 0, %for.body604.lr.ph.2 ], [ %indvars.iv.next1153.2, %for.inc655.2 ]
  %coef_ctr.21102.2 = phi i32 [ 0, %for.body604.lr.ph.2 ], [ %coef_ctr.3.2, %for.inc655.2 ]
  %arrayidx606.2 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1152.2
  %234 = load i32, ptr %arrayidx606.2, align 4
  %cmp607.not.2 = icmp eq i32 %234, 0
  br i1 %cmp607.not.2, label %for.inc655.2, label %i64_power2.exit.2

i64_power2.exit.2:                                ; preds = %for.body604.2
  %235 = load i8, ptr %arrayidx613.2, align 2
  %idxprom.i1062.2 = zext nneg i8 %235 to i64
  %arrayidx.i1063.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1062.2
  %236 = load i64, ptr %arrayidx.i1063.2, align 8
  %237 = load i64, ptr %cbp_blk, align 8
  %or618.2 = or i64 %237, %236
  store i64 %or618.2, ptr %cbp_blk, align 8
  %arrayidx620.2 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1152.2
  %238 = load i32, ptr %arrayidx620.2, align 4
  %add621.2 = add i32 %coef_ctr.21102.2, 1
  %add622.2 = add i32 %add621.2, %238
  %idxprom623.2 = sext i32 %add622.2 to i64
  %arrayidx624.2 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom623.2
  %239 = load i8, ptr %arrayidx624.2, align 1
  %conv626.2 = zext i8 %239 to i32
  %arrayidx629.2 = getelementptr inbounds i8, ptr %arrayidx624.2, i64 1
  %240 = load i8, ptr %arrayidx629.2, align 1
  %conv630.2 = zext i8 %240 to i32
  %idxprom633.2 = zext i8 %240 to i64
  %idxprom635.2 = zext i8 %239 to i64
  %arrayidx636.2 = getelementptr inbounds [4 x i32], ptr %arrayidx574, i64 %idxprom633.2, i64 %idxprom635.2
  %241 = load i32, ptr %arrayidx636.2, align 4
  %mul637.2 = mul nsw i32 %241, %234
  %242 = load i32, ptr %arrayidx639, align 4
  %shl640.2 = shl i32 %mul637.2, %242
  %add.i1064.2 = add nsw i32 %shl640.2, 8
  %shr.i1065.2 = ashr i32 %add.i1064.2, 4
  %243 = load ptr, ptr %cof272, align 8
  %arrayidx645.2 = getelementptr inbounds ptr, ptr %243, i64 %add558
  %244 = load ptr, ptr %arrayidx645.2, align 8
  %add647.2 = add nuw nsw i32 %shl646.2, %conv630.2
  %idxprom648.2 = zext nneg i32 %add647.2 to i64
  %arrayidx649.2 = getelementptr inbounds ptr, ptr %244, i64 %idxprom648.2
  %245 = load ptr, ptr %arrayidx649.2, align 8
  %add651.2 = add nuw nsw i32 %shl650.2, %conv626.2
  %idxprom652.2 = zext nneg i32 %add651.2 to i64
  %arrayidx653.2 = getelementptr inbounds i32, ptr %245, i64 %idxprom652.2
  store i32 %shr.i1065.2, ptr %arrayidx653.2, align 4
  br label %for.inc655.2

for.inc655.2:                                     ; preds = %i64_power2.exit.2, %for.body604.2
  %coef_ctr.3.2 = phi i32 [ %add622.2, %i64_power2.exit.2 ], [ %coef_ctr.21102.2, %for.body604.2 ]
  %indvars.iv.next1153.2 = add nuw nsw i64 %indvars.iv1152.2, 1
  %exitcond1156.2.not = icmp eq i64 %indvars.iv.next1153.2, %wide.trip.count1155.2
  br i1 %exitcond1156.2.not, label %for.inc658.2, label %for.body604.2

for.inc658.2:                                     ; preds = %for.inc655.2, %for.inc658.1
  %arrayidx587.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 3
  %246 = load i8, ptr %arrayidx587.3, align 1
  %conv588.3 = zext i8 %246 to i32
  %arrayidx594.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom582, i64 %indvars.iv1161, i64 3
  %247 = load i8, ptr %arrayidx594.3, align 1
  %conv595.3 = zext i8 %247 to i32
  %add597.3 = add nuw nsw i32 %mul596, %conv588.3
  %add598.3 = add nuw nsw i32 %conv595.3, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add597.3, i32 noundef %add598.3, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %248 = load i32, ptr %numcoeff, align 4
  %cmp6021101.3 = icmp sgt i32 %248, 0
  br i1 %cmp6021101.3, label %for.body604.lr.ph.3, label %for.inc658.3

for.body604.lr.ph.3:                              ; preds = %for.inc658.2
  %arrayidx613.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1161, i64 3
  %shl646.3 = shl nuw nsw i32 %conv595.3, 2
  %shl650.3 = shl nuw nsw i32 %conv588.3, 2
  %wide.trip.count1155.3 = zext nneg i32 %248 to i64
  br label %for.body604.3

for.body604.3:                                    ; preds = %for.inc655.3, %for.body604.lr.ph.3
  %indvars.iv1152.3 = phi i64 [ 0, %for.body604.lr.ph.3 ], [ %indvars.iv.next1153.3, %for.inc655.3 ]
  %coef_ctr.21102.3 = phi i32 [ 0, %for.body604.lr.ph.3 ], [ %coef_ctr.3.3, %for.inc655.3 ]
  %arrayidx606.3 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1152.3
  %249 = load i32, ptr %arrayidx606.3, align 4
  %cmp607.not.3 = icmp eq i32 %249, 0
  br i1 %cmp607.not.3, label %for.inc655.3, label %i64_power2.exit.3

i64_power2.exit.3:                                ; preds = %for.body604.3
  %250 = load i8, ptr %arrayidx613.3, align 1
  %idxprom.i1062.3 = zext nneg i8 %250 to i64
  %arrayidx.i1063.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1062.3
  %251 = load i64, ptr %arrayidx.i1063.3, align 8
  %252 = load i64, ptr %cbp_blk, align 8
  %or618.3 = or i64 %252, %251
  store i64 %or618.3, ptr %cbp_blk, align 8
  %arrayidx620.3 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1152.3
  %253 = load i32, ptr %arrayidx620.3, align 4
  %add621.3 = add i32 %coef_ctr.21102.3, 1
  %add622.3 = add i32 %add621.3, %253
  %idxprom623.3 = sext i32 %add622.3 to i64
  %arrayidx624.3 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom623.3
  %254 = load i8, ptr %arrayidx624.3, align 1
  %conv626.3 = zext i8 %254 to i32
  %arrayidx629.3 = getelementptr inbounds i8, ptr %arrayidx624.3, i64 1
  %255 = load i8, ptr %arrayidx629.3, align 1
  %conv630.3 = zext i8 %255 to i32
  %idxprom633.3 = zext i8 %255 to i64
  %idxprom635.3 = zext i8 %254 to i64
  %arrayidx636.3 = getelementptr inbounds [4 x i32], ptr %arrayidx574, i64 %idxprom633.3, i64 %idxprom635.3
  %256 = load i32, ptr %arrayidx636.3, align 4
  %mul637.3 = mul nsw i32 %256, %249
  %257 = load i32, ptr %arrayidx639, align 4
  %shl640.3 = shl i32 %mul637.3, %257
  %add.i1064.3 = add nsw i32 %shl640.3, 8
  %shr.i1065.3 = ashr i32 %add.i1064.3, 4
  %258 = load ptr, ptr %cof272, align 8
  %arrayidx645.3 = getelementptr inbounds ptr, ptr %258, i64 %add558
  %259 = load ptr, ptr %arrayidx645.3, align 8
  %add647.3 = add nuw nsw i32 %shl646.3, %conv630.3
  %idxprom648.3 = zext nneg i32 %add647.3 to i64
  %arrayidx649.3 = getelementptr inbounds ptr, ptr %259, i64 %idxprom648.3
  %260 = load ptr, ptr %arrayidx649.3, align 8
  %add651.3 = add nuw nsw i32 %shl650.3, %conv626.3
  %idxprom652.3 = zext nneg i32 %add651.3 to i64
  %arrayidx653.3 = getelementptr inbounds i32, ptr %260, i64 %idxprom652.3
  store i32 %shr.i1065.3, ptr %arrayidx653.3, align 4
  br label %for.inc655.3

for.inc655.3:                                     ; preds = %i64_power2.exit.3, %for.body604.3
  %coef_ctr.3.3 = phi i32 [ %add622.3, %i64_power2.exit.3 ], [ %coef_ctr.21102.3, %for.body604.3 ]
  %indvars.iv.next1153.3 = add nuw nsw i64 %indvars.iv1152.3, 1
  %exitcond1156.3.not = icmp eq i64 %indvars.iv.next1153.3, %wide.trip.count1155.3
  br i1 %exitcond1156.3.not, label %for.inc658.3, label %for.body604.3

for.inc658.3:                                     ; preds = %for.inc655.3, %for.inc658.2
  %indvars.iv.next1162 = add nuw nsw i64 %indvars.iv1161, 1
  %261 = load i32, ptr %num_blk8x8_uv, align 8
  %262 = sext i32 %261 to i64
  %cmp549 = icmp slt i64 %indvars.iv.next1162, %262
  br i1 %cmp549, label %for.body551, label %if.end753

for.body669:                                      ; preds = %for.body669.lr.ph, %for.inc746.3
  %indvars.iv1149 = phi i64 [ 0, %for.body669.lr.ph ], [ %indvars.iv.next1150, %for.inc746.3 ]
  %263 = load i32, ptr %num_uv_blocks670, align 4
  %264 = sext i32 %263 to i64
  %cmp672 = icmp sge i64 %indvars.iv1149, %264
  %conv673 = zext i1 %cmp672 to i32
  store i32 %conv673, ptr %is_v_block674, align 4
  %mul693 = select i1 %cmp672, i32 2, i32 0
  %add731 = select i1 %cmp672, i64 2, i64 1
  %arrayidx684 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 0
  %265 = load i8, ptr %arrayidx684, align 4
  %conv685 = zext i8 %265 to i32
  %arrayidx691 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 0
  %266 = load i8, ptr %arrayidx691, align 4
  %conv692 = zext i8 %266 to i32
  %add694 = add nuw nsw i32 %mul693, %conv685
  %add695 = add nuw nsw i32 %conv692, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add694, i32 noundef %add695, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %267 = load i32, ptr %numcoeff, align 4
  %cmp6991095 = icmp sgt i32 %267, 0
  br i1 %cmp6991095, label %for.body701.lr.ph, label %for.inc746

for.body701.lr.ph:                                ; preds = %for.body669
  %arrayidx710 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1149, i64 0
  %shl734 = shl nuw nsw i32 %conv692, 2
  %shl738 = shl nuw nsw i32 %conv685, 2
  %wide.trip.count1143 = zext nneg i32 %267 to i64
  br label %for.body701

for.body701:                                      ; preds = %for.body701.lr.ph, %for.inc743
  %indvars.iv1140 = phi i64 [ 0, %for.body701.lr.ph ], [ %indvars.iv.next1141, %for.inc743 ]
  %coef_ctr.41096 = phi i32 [ 0, %for.body701.lr.ph ], [ %coef_ctr.5, %for.inc743 ]
  %arrayidx703 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1140
  %268 = load i32, ptr %arrayidx703, align 4
  %cmp704.not = icmp eq i32 %268, 0
  br i1 %cmp704.not, label %for.inc743, label %i64_power2.exit1071

i64_power2.exit1071:                              ; preds = %for.body701
  %269 = load i8, ptr %arrayidx710, align 4
  %idxprom.i1068 = zext nneg i8 %269 to i64
  %arrayidx.i1069 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1068
  %270 = load i64, ptr %arrayidx.i1069, align 8
  %271 = load i64, ptr %cbp_blk, align 8
  %or715 = or i64 %271, %270
  store i64 %or715, ptr %cbp_blk, align 8
  %arrayidx717 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1140
  %272 = load i32, ptr %arrayidx717, align 4
  %add718 = add i32 %coef_ctr.41096, 1
  %add719 = add i32 %add718, %272
  %idxprom720 = sext i32 %add719 to i64
  %arrayidx721 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom720
  %273 = load i8, ptr %arrayidx721, align 1
  %conv723 = zext i8 %273 to i32
  %arrayidx726 = getelementptr inbounds i8, ptr %arrayidx721, i64 1
  %274 = load i8, ptr %arrayidx726, align 1
  %conv727 = zext i8 %274 to i32
  %275 = load ptr, ptr %cof272, align 8
  %arrayidx733 = getelementptr inbounds ptr, ptr %275, i64 %add731
  %276 = load ptr, ptr %arrayidx733, align 8
  %add735 = add nuw nsw i32 %shl734, %conv727
  %idxprom736 = zext nneg i32 %add735 to i64
  %arrayidx737 = getelementptr inbounds ptr, ptr %276, i64 %idxprom736
  %277 = load ptr, ptr %arrayidx737, align 8
  %add739 = add nuw nsw i32 %shl738, %conv723
  %idxprom740 = zext nneg i32 %add739 to i64
  %arrayidx741 = getelementptr inbounds i32, ptr %277, i64 %idxprom740
  store i32 %268, ptr %arrayidx741, align 4
  br label %for.inc743

for.inc743:                                       ; preds = %for.body701, %i64_power2.exit1071
  %coef_ctr.5 = phi i32 [ %add719, %i64_power2.exit1071 ], [ %coef_ctr.41096, %for.body701 ]
  %indvars.iv.next1141 = add nuw nsw i64 %indvars.iv1140, 1
  %exitcond1144.not = icmp eq i64 %indvars.iv.next1141, %wide.trip.count1143
  br i1 %exitcond1144.not, label %for.inc746, label %for.body701

for.inc746:                                       ; preds = %for.inc743, %for.body669
  %arrayidx684.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 1
  %278 = load i8, ptr %arrayidx684.1, align 1
  %conv685.1 = zext i8 %278 to i32
  %arrayidx691.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 1
  %279 = load i8, ptr %arrayidx691.1, align 1
  %conv692.1 = zext i8 %279 to i32
  %add694.1 = add nuw nsw i32 %mul693, %conv685.1
  %add695.1 = add nuw nsw i32 %conv692.1, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add694.1, i32 noundef %add695.1, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %280 = load i32, ptr %numcoeff, align 4
  %cmp6991095.1 = icmp sgt i32 %280, 0
  br i1 %cmp6991095.1, label %for.body701.lr.ph.1, label %for.inc746.1

for.body701.lr.ph.1:                              ; preds = %for.inc746
  %arrayidx710.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1149, i64 1
  %shl734.1 = shl nuw nsw i32 %conv692.1, 2
  %shl738.1 = shl nuw nsw i32 %conv685.1, 2
  %wide.trip.count1143.1 = zext nneg i32 %280 to i64
  br label %for.body701.1

for.body701.1:                                    ; preds = %for.inc743.1, %for.body701.lr.ph.1
  %indvars.iv1140.1 = phi i64 [ 0, %for.body701.lr.ph.1 ], [ %indvars.iv.next1141.1, %for.inc743.1 ]
  %coef_ctr.41096.1 = phi i32 [ 0, %for.body701.lr.ph.1 ], [ %coef_ctr.5.1, %for.inc743.1 ]
  %arrayidx703.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1140.1
  %281 = load i32, ptr %arrayidx703.1, align 4
  %cmp704.not.1 = icmp eq i32 %281, 0
  br i1 %cmp704.not.1, label %for.inc743.1, label %i64_power2.exit1071.1

i64_power2.exit1071.1:                            ; preds = %for.body701.1
  %282 = load i8, ptr %arrayidx710.1, align 1
  %idxprom.i1068.1 = zext nneg i8 %282 to i64
  %arrayidx.i1069.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1068.1
  %283 = load i64, ptr %arrayidx.i1069.1, align 8
  %284 = load i64, ptr %cbp_blk, align 8
  %or715.1 = or i64 %284, %283
  store i64 %or715.1, ptr %cbp_blk, align 8
  %arrayidx717.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1140.1
  %285 = load i32, ptr %arrayidx717.1, align 4
  %add718.1 = add i32 %coef_ctr.41096.1, 1
  %add719.1 = add i32 %add718.1, %285
  %idxprom720.1 = sext i32 %add719.1 to i64
  %arrayidx721.1 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom720.1
  %286 = load i8, ptr %arrayidx721.1, align 1
  %conv723.1 = zext i8 %286 to i32
  %arrayidx726.1 = getelementptr inbounds i8, ptr %arrayidx721.1, i64 1
  %287 = load i8, ptr %arrayidx726.1, align 1
  %conv727.1 = zext i8 %287 to i32
  %288 = load ptr, ptr %cof272, align 8
  %arrayidx733.1 = getelementptr inbounds ptr, ptr %288, i64 %add731
  %289 = load ptr, ptr %arrayidx733.1, align 8
  %add735.1 = add nuw nsw i32 %shl734.1, %conv727.1
  %idxprom736.1 = zext nneg i32 %add735.1 to i64
  %arrayidx737.1 = getelementptr inbounds ptr, ptr %289, i64 %idxprom736.1
  %290 = load ptr, ptr %arrayidx737.1, align 8
  %add739.1 = add nuw nsw i32 %shl738.1, %conv723.1
  %idxprom740.1 = zext nneg i32 %add739.1 to i64
  %arrayidx741.1 = getelementptr inbounds i32, ptr %290, i64 %idxprom740.1
  store i32 %281, ptr %arrayidx741.1, align 4
  br label %for.inc743.1

for.inc743.1:                                     ; preds = %i64_power2.exit1071.1, %for.body701.1
  %coef_ctr.5.1 = phi i32 [ %add719.1, %i64_power2.exit1071.1 ], [ %coef_ctr.41096.1, %for.body701.1 ]
  %indvars.iv.next1141.1 = add nuw nsw i64 %indvars.iv1140.1, 1
  %exitcond1144.1.not = icmp eq i64 %indvars.iv.next1141.1, %wide.trip.count1143.1
  br i1 %exitcond1144.1.not, label %for.inc746.1, label %for.body701.1

for.inc746.1:                                     ; preds = %for.inc743.1, %for.inc746
  %arrayidx684.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 2
  %291 = load i8, ptr %arrayidx684.2, align 2
  %conv685.2 = zext i8 %291 to i32
  %arrayidx691.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 2
  %292 = load i8, ptr %arrayidx691.2, align 2
  %conv692.2 = zext i8 %292 to i32
  %add694.2 = add nuw nsw i32 %mul693, %conv685.2
  %add695.2 = add nuw nsw i32 %conv692.2, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add694.2, i32 noundef %add695.2, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %293 = load i32, ptr %numcoeff, align 4
  %cmp6991095.2 = icmp sgt i32 %293, 0
  br i1 %cmp6991095.2, label %for.body701.lr.ph.2, label %for.inc746.2

for.body701.lr.ph.2:                              ; preds = %for.inc746.1
  %arrayidx710.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1149, i64 2
  %shl734.2 = shl nuw nsw i32 %conv692.2, 2
  %shl738.2 = shl nuw nsw i32 %conv685.2, 2
  %wide.trip.count1143.2 = zext nneg i32 %293 to i64
  br label %for.body701.2

for.body701.2:                                    ; preds = %for.inc743.2, %for.body701.lr.ph.2
  %indvars.iv1140.2 = phi i64 [ 0, %for.body701.lr.ph.2 ], [ %indvars.iv.next1141.2, %for.inc743.2 ]
  %coef_ctr.41096.2 = phi i32 [ 0, %for.body701.lr.ph.2 ], [ %coef_ctr.5.2, %for.inc743.2 ]
  %arrayidx703.2 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1140.2
  %294 = load i32, ptr %arrayidx703.2, align 4
  %cmp704.not.2 = icmp eq i32 %294, 0
  br i1 %cmp704.not.2, label %for.inc743.2, label %i64_power2.exit1071.2

i64_power2.exit1071.2:                            ; preds = %for.body701.2
  %295 = load i8, ptr %arrayidx710.2, align 2
  %idxprom.i1068.2 = zext nneg i8 %295 to i64
  %arrayidx.i1069.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1068.2
  %296 = load i64, ptr %arrayidx.i1069.2, align 8
  %297 = load i64, ptr %cbp_blk, align 8
  %or715.2 = or i64 %297, %296
  store i64 %or715.2, ptr %cbp_blk, align 8
  %arrayidx717.2 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1140.2
  %298 = load i32, ptr %arrayidx717.2, align 4
  %add718.2 = add i32 %coef_ctr.41096.2, 1
  %add719.2 = add i32 %add718.2, %298
  %idxprom720.2 = sext i32 %add719.2 to i64
  %arrayidx721.2 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom720.2
  %299 = load i8, ptr %arrayidx721.2, align 1
  %conv723.2 = zext i8 %299 to i32
  %arrayidx726.2 = getelementptr inbounds i8, ptr %arrayidx721.2, i64 1
  %300 = load i8, ptr %arrayidx726.2, align 1
  %conv727.2 = zext i8 %300 to i32
  %301 = load ptr, ptr %cof272, align 8
  %arrayidx733.2 = getelementptr inbounds ptr, ptr %301, i64 %add731
  %302 = load ptr, ptr %arrayidx733.2, align 8
  %add735.2 = add nuw nsw i32 %shl734.2, %conv727.2
  %idxprom736.2 = zext nneg i32 %add735.2 to i64
  %arrayidx737.2 = getelementptr inbounds ptr, ptr %302, i64 %idxprom736.2
  %303 = load ptr, ptr %arrayidx737.2, align 8
  %add739.2 = add nuw nsw i32 %shl738.2, %conv723.2
  %idxprom740.2 = zext nneg i32 %add739.2 to i64
  %arrayidx741.2 = getelementptr inbounds i32, ptr %303, i64 %idxprom740.2
  store i32 %294, ptr %arrayidx741.2, align 4
  br label %for.inc743.2

for.inc743.2:                                     ; preds = %i64_power2.exit1071.2, %for.body701.2
  %coef_ctr.5.2 = phi i32 [ %add719.2, %i64_power2.exit1071.2 ], [ %coef_ctr.41096.2, %for.body701.2 ]
  %indvars.iv.next1141.2 = add nuw nsw i64 %indvars.iv1140.2, 1
  %exitcond1144.2.not = icmp eq i64 %indvars.iv.next1141.2, %wide.trip.count1143.2
  br i1 %exitcond1144.2.not, label %for.inc746.2, label %for.body701.2

for.inc746.2:                                     ; preds = %for.inc743.2, %for.inc746.1
  %arrayidx684.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 3
  %304 = load i8, ptr %arrayidx684.3, align 1
  %conv685.3 = zext i8 %304 to i32
  %arrayidx691.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom679, i64 %indvars.iv1149, i64 3
  %305 = load i8, ptr %arrayidx691.3, align 1
  %conv692.3 = zext i8 %305 to i32
  %add694.3 = add nuw nsw i32 %mul693, %conv685.3
  %add695.3 = add nuw nsw i32 %conv692.3, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add694.3, i32 noundef %add695.3, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %306 = load i32, ptr %numcoeff, align 4
  %cmp6991095.3 = icmp sgt i32 %306, 0
  br i1 %cmp6991095.3, label %for.body701.lr.ph.3, label %for.inc746.3

for.body701.lr.ph.3:                              ; preds = %for.inc746.2
  %arrayidx710.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1149, i64 3
  %shl734.3 = shl nuw nsw i32 %conv692.3, 2
  %shl738.3 = shl nuw nsw i32 %conv685.3, 2
  %wide.trip.count1143.3 = zext nneg i32 %306 to i64
  br label %for.body701.3

for.body701.3:                                    ; preds = %for.inc743.3, %for.body701.lr.ph.3
  %indvars.iv1140.3 = phi i64 [ 0, %for.body701.lr.ph.3 ], [ %indvars.iv.next1141.3, %for.inc743.3 ]
  %coef_ctr.41096.3 = phi i32 [ 0, %for.body701.lr.ph.3 ], [ %coef_ctr.5.3, %for.inc743.3 ]
  %arrayidx703.3 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1140.3
  %307 = load i32, ptr %arrayidx703.3, align 4
  %cmp704.not.3 = icmp eq i32 %307, 0
  br i1 %cmp704.not.3, label %for.inc743.3, label %i64_power2.exit1071.3

i64_power2.exit1071.3:                            ; preds = %for.body701.3
  %308 = load i8, ptr %arrayidx710.3, align 1
  %idxprom.i1068.3 = zext nneg i8 %308 to i64
  %arrayidx.i1069.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i1068.3
  %309 = load i64, ptr %arrayidx.i1069.3, align 8
  %310 = load i64, ptr %cbp_blk, align 8
  %or715.3 = or i64 %310, %309
  store i64 %or715.3, ptr %cbp_blk, align 8
  %arrayidx717.3 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1140.3
  %311 = load i32, ptr %arrayidx717.3, align 4
  %add718.3 = add i32 %coef_ctr.41096.3, 1
  %add719.3 = add i32 %add718.3, %311
  %idxprom720.3 = sext i32 %add719.3 to i64
  %arrayidx721.3 = getelementptr inbounds [2 x i8], ptr %9, i64 %idxprom720.3
  %312 = load i8, ptr %arrayidx721.3, align 1
  %conv723.3 = zext i8 %312 to i32
  %arrayidx726.3 = getelementptr inbounds i8, ptr %arrayidx721.3, i64 1
  %313 = load i8, ptr %arrayidx726.3, align 1
  %conv727.3 = zext i8 %313 to i32
  %314 = load ptr, ptr %cof272, align 8
  %arrayidx733.3 = getelementptr inbounds ptr, ptr %314, i64 %add731
  %315 = load ptr, ptr %arrayidx733.3, align 8
  %add735.3 = add nuw nsw i32 %shl734.3, %conv727.3
  %idxprom736.3 = zext nneg i32 %add735.3 to i64
  %arrayidx737.3 = getelementptr inbounds ptr, ptr %315, i64 %idxprom736.3
  %316 = load ptr, ptr %arrayidx737.3, align 8
  %add739.3 = add nuw nsw i32 %shl738.3, %conv723.3
  %idxprom740.3 = zext nneg i32 %add739.3 to i64
  %arrayidx741.3 = getelementptr inbounds i32, ptr %316, i64 %idxprom740.3
  store i32 %307, ptr %arrayidx741.3, align 4
  br label %for.inc743.3

for.inc743.3:                                     ; preds = %i64_power2.exit1071.3, %for.body701.3
  %coef_ctr.5.3 = phi i32 [ %add719.3, %i64_power2.exit1071.3 ], [ %coef_ctr.41096.3, %for.body701.3 ]
  %indvars.iv.next1141.3 = add nuw nsw i64 %indvars.iv1140.3, 1
  %exitcond1144.3.not = icmp eq i64 %indvars.iv.next1141.3, %wide.trip.count1143.3
  br i1 %exitcond1144.3.not, label %for.inc746.3, label %for.body701.3

for.inc746.3:                                     ; preds = %for.inc743.3, %for.inc746.2
  %indvars.iv.next1150 = add nuw nsw i64 %indvars.iv1149, 1
  %317 = load i32, ptr %num_blk8x8_uv, align 8
  %318 = sext i32 %317 to i64
  %cmp667 = icmp slt i64 %indvars.iv.next1150, %318
  br i1 %cmp667, label %for.body669, label %if.end753

if.end753:                                        ; preds = %for.inc746.3, %for.inc658.3, %for.cond665.preheader, %for.cond548.preheader, %if.then537
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CAVLC_400(ptr noundef %currMB) #3 {
entry:
  %up.i344 = alloca %struct.pix_pos, align 4
  %left.i345 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %0 = load i32, ptr %mbAddrX, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %1 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %2 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %3 = load ptr, ptr %p_Vid1, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %4, 1
  %structure = getelementptr inbounds i8, ptr %3, i64 848876
  %5 = load i32, ptr %structure, align 4
  %cmp2 = icmp eq i32 %5, 0
  br i1 %cmp2, label %land.end, label %land.end.thread

land.end:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %6 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %6
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end.thread

land.end.thread:                                  ; preds = %land.end, %entry
  %7 = phi ptr [ @FIELD_SCAN, %entry ], [ %spec.select, %land.end ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %8 = load i16, ptr %mb_type, align 8
  switch i16 %8, label %lor.end [
    i16 10, label %if.else
    i16 14, label %if.else
    i16 9, label %9
    i16 12, label %9
    i16 13, label %9
  ]

9:                                                ; preds = %land.end.thread, %land.end.thread, %land.end.thread
  br label %lor.end

lor.end:                                          ; preds = %land.end.thread, %9
  %10 = phi i32 [ 6, %9 ], [ 11, %land.end.thread ]
  store i32 %10, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %11 = load ptr, ptr %partArr, align 8
  %idxprom28 = zext nneg i32 %10 to i64
  %arrayidx29 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom28
  %12 = load i8, ptr %arrayidx29, align 1
  %idxprom30 = zext i8 %12 to i64
  %arrayidx31 = getelementptr inbounds %struct.datapartition, ptr %11, i64 %idxprom30
  %switch.tableidx = add i16 %8, -9
  %13 = icmp ult i16 %switch.tableidx, 5
  br i1 %13, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %lor.end
  %14 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %14
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %lor.end, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %lor.end ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %1, i64 %.sink
  %cond46 = load ptr, ptr %linfo_cbp_inter, align 8
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr %cond46, ptr %mapping, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx31, i64 40
  %15 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %15(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx31) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %16 = load i32, ptr %value1, align 4
  %cbp47 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %16, ptr %cbp47, align 4
  %17 = load i16, ptr %mb_type, align 8
  %18 = add i16 %17, -1
  %or.cond = icmp ult i16 %18, 3
  br i1 %or.cond, label %land.lhs.true68, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %cond.end
  %cmp59 = icmp eq i16 %17, 0
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false66

land.lhs.true61:                                  ; preds = %lor.lhs.false56
  %slice_type = getelementptr inbounds i8, ptr %1, i64 164
  %19 = load i32, ptr %slice_type, align 4
  %cmp62 = icmp eq i32 %19, 1
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false66

land.lhs.true64:                                  ; preds = %land.lhs.true61
  %active_sps = getelementptr inbounds i8, ptr %3, i64 16
  %20 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %20, i64 3144
  %21 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool65.not = icmp eq i32 %21, 0
  br i1 %tobool65.not, label %lor.lhs.false66, label %land.lhs.true78

lor.lhs.false66:                                  ; preds = %land.lhs.true64, %land.lhs.true61, %lor.lhs.false56
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %22 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool67.not = icmp eq i32 %22, 0
  br i1 %tobool67.not, label %if.end, label %land.lhs.true68

land.lhs.true68:                                  ; preds = %cond.end, %lor.lhs.false66
  switch i16 %17, label %land.lhs.true78 [
    i16 13, label %if.end
    i16 9, label %if.end
  ]

land.lhs.true78:                                  ; preds = %land.lhs.true64, %land.lhs.true68
  %and = and i32 %16, 15
  %tobool80.not = icmp eq i32 %and, 0
  br i1 %tobool80.not, label %if.end, label %land.rhs81

land.rhs81:                                       ; preds = %land.lhs.true78
  %Transform8x8Mode = getelementptr inbounds i8, ptr %1, i64 60
  %23 = load i32, ptr %Transform8x8Mode, align 4
  %tobool82.not = icmp eq i32 %23, 0
  br i1 %tobool82.not, label %if.then95, label %if.then85

if.then85:                                        ; preds = %land.rhs81
  store i32 0, ptr %currSE, align 8
  %24 = load ptr, ptr %partArr, align 8
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading, align 8
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %25 = load ptr, ptr %24, align 8
  %call91 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %25) #14
  %26 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %26, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then95

if.end:                                           ; preds = %land.lhs.true78, %land.lhs.true68, %land.lhs.true68, %lor.lhs.false66
  %cmp93.not = icmp eq i32 %16, 0
  br i1 %cmp93.not, label %if.end172, label %if.then95

if.then95:                                        ; preds = %land.rhs81, %if.then85, %if.end
  %27 = load i32, ptr %is_intra_block, align 8
  %cmp97 = icmp eq i32 %27, 0
  %cond99 = select i1 %cmp97, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond99)
  %28 = load i32, ptr %dp_mode, align 8
  %tobool101.not = icmp eq i32 %28, 0
  br i1 %tobool101.not, label %if.end172, label %if.then102

if.then102:                                       ; preds = %if.then95
  %29 = load i32, ptr %is_intra_block, align 8
  %cmp104 = icmp eq i32 %29, 0
  br i1 %cmp104, label %land.lhs.true106, label %if.end109

land.lhs.true106:                                 ; preds = %if.then102
  %dpC_NotPresent = getelementptr inbounds i8, ptr %1, i64 1236
  %30 = load i32, ptr %dpC_NotPresent, align 4
  %tobool107.not = icmp eq i32 %30, 0
  br i1 %tobool107.not, label %if.end109, label %if.then108

if.then108:                                       ; preds = %land.lhs.true106
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %land.lhs.true106, %if.then102
  br i1 %cmp, label %land.lhs.true111, label %if.end115

land.lhs.true111:                                 ; preds = %if.end109
  %dpB_NotPresent = getelementptr inbounds i8, ptr %1, i64 1232
  %31 = load i32, ptr %dpB_NotPresent, align 8
  %tobool112.not = icmp eq i32 %31, 0
  br i1 %tobool112.not, label %if.end115, label %if.then113

if.then113:                                       ; preds = %land.lhs.true111
  %ei_flag = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag, align 2
  %dpl_flag114 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag114, align 1
  br label %if.end115

if.end115:                                        ; preds = %if.then113, %land.lhs.true111, %if.end109
  %32 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %32, i64 856744
  %33 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %32, i64 849132
  call void %33(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %34 = load ptr, ptr %getNeighbour.i, align 8
  call void %34(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %35 = load i32, ptr %is_intra_block, align 8
  %cmp.i = icmp eq i32 %35, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end115
  %active_pps.i = getelementptr inbounds i8, ptr %32, i64 8
  %36 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %36, i64 2204
  %37 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end115
  %38 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %38, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %32, i64 848888
  %39 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %40 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %40 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %39, i64 %idxprom.i, i32 23
  %41 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %42 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %42, %41
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %43 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %43, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %32, i64 848888
  %44 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %45 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %45 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %44, i64 %idxprom17.i, i32 23
  %46 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %47 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %47, %46
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag116 = getelementptr inbounds i8, ptr %currMB, i64 111
  %48 = load i8, ptr %dpl_flag116, align 1
  %tobool117.not = icmp eq i8 %48, 0
  br i1 %tobool117.not, label %if.end172, label %if.then118

if.then118:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp47, align 4
  br label %if.end172

if.else:                                          ; preds = %land.end.thread, %land.end.thread
  %cbp123 = getelementptr inbounds i8, ptr %currMB, i64 284
  %49 = load i32, ptr %cbp123, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %50 = load i32, ptr %dp_mode, align 8
  %tobool125.not = icmp eq i32 %50, 0
  br i1 %tobool125.not, label %if.end138, label %if.then126

if.then126:                                       ; preds = %if.else
  %dpB_NotPresent127 = getelementptr inbounds i8, ptr %1, i64 1232
  %51 = load i32, ptr %dpB_NotPresent127, align 8
  %tobool128.not = icmp eq i32 %51, 0
  br i1 %tobool128.not, label %if.end132, label %if.then129

if.then129:                                       ; preds = %if.then126
  %ei_flag130 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag130, align 2
  %dpl_flag131 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag131, align 1
  br label %if.end132

if.end132:                                        ; preds = %if.then129, %if.then126
  %52 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i344) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i345) #14
  %getNeighbour.i347 = getelementptr inbounds i8, ptr %52, i64 856744
  %53 = load ptr, ptr %getNeighbour.i347, align 8
  %arrayidx.i348 = getelementptr inbounds i8, ptr %52, i64 849132
  call void %53(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i348, ptr noundef nonnull %left.i345) #14
  %54 = load ptr, ptr %getNeighbour.i347, align 8
  call void %54(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i348, ptr noundef nonnull %up.i344) #14
  %55 = load i32, ptr %is_intra_block, align 8
  %cmp.i350 = icmp eq i32 %55, 0
  br i1 %cmp.i350, label %if.then.i355, label %lor.lhs.false.i351

lor.lhs.false.i351:                               ; preds = %if.end132
  %active_pps.i352 = getelementptr inbounds i8, ptr %52, i64 8
  %56 = load ptr, ptr %active_pps.i352, align 8
  %constrained_intra_pred_flag.i353 = getelementptr inbounds i8, ptr %56, i64 2204
  %57 = load i32, ptr %constrained_intra_pred_flag.i353, align 4
  %tobool.not.i354 = icmp eq i32 %57, 0
  br i1 %tobool.not.i354, label %if.then.i355, label %check_dp_neighbors.exit373

if.then.i355:                                     ; preds = %lor.lhs.false.i351, %if.end132
  %58 = load i32, ptr %left.i345, align 4
  %tobool6.not.i356 = icmp eq i32 %58, 0
  br i1 %tobool6.not.i356, label %if.end.i364, label %if.then7.i357

if.then7.i357:                                    ; preds = %if.then.i355
  %mb_data.i358 = getelementptr inbounds i8, ptr %52, i64 848888
  %59 = load ptr, ptr %mb_data.i358, align 8
  %mb_addr.i359 = getelementptr inbounds i8, ptr %left.i345, i64 4
  %60 = load i32, ptr %mb_addr.i359, align 4
  %idxprom.i360 = sext i32 %60 to i64
  %dpl_flag.i361 = getelementptr inbounds %struct.macroblock, ptr %59, i64 %idxprom.i360, i32 23
  %61 = load i8, ptr %dpl_flag.i361, align 1
  %dpl_flag9.i362 = getelementptr inbounds i8, ptr %currMB, i64 111
  %62 = load i8, ptr %dpl_flag9.i362, align 1
  %or38.i363 = or i8 %62, %61
  store i8 %or38.i363, ptr %dpl_flag9.i362, align 1
  br label %if.end.i364

if.end.i364:                                      ; preds = %if.then7.i357, %if.then.i355
  %63 = load i32, ptr %up.i344, align 4
  %tobool13.not.i365 = icmp eq i32 %63, 0
  br i1 %tobool13.not.i365, label %check_dp_neighbors.exit373, label %if.then14.i366

if.then14.i366:                                   ; preds = %if.end.i364
  %mb_data15.i367 = getelementptr inbounds i8, ptr %52, i64 848888
  %64 = load ptr, ptr %mb_data15.i367, align 8
  %mb_addr16.i368 = getelementptr inbounds i8, ptr %up.i344, i64 4
  %65 = load i32, ptr %mb_addr16.i368, align 4
  %idxprom17.i369 = sext i32 %65 to i64
  %dpl_flag19.i370 = getelementptr inbounds %struct.macroblock, ptr %64, i64 %idxprom17.i369, i32 23
  %66 = load i8, ptr %dpl_flag19.i370, align 1
  %dpl_flag21.i371 = getelementptr inbounds i8, ptr %currMB, i64 111
  %67 = load i8, ptr %dpl_flag21.i371, align 1
  %or2339.i372 = or i8 %67, %66
  store i8 %or2339.i372, ptr %dpl_flag21.i371, align 1
  br label %check_dp_neighbors.exit373

check_dp_neighbors.exit373:                       ; preds = %lor.lhs.false.i351, %if.end.i364, %if.then14.i366
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i345) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i344) #14
  %dpl_flag133 = getelementptr inbounds i8, ptr %currMB, i64 111
  %68 = load i8, ptr %dpl_flag133, align 1
  %tobool134.not = icmp eq i8 %68, 0
  br i1 %tobool134.not, label %if.then141, label %if.end138.thread385

if.end138.thread385:                              ; preds = %check_dp_neighbors.exit373
  store i32 0, ptr %cbp123, align 4
  br label %if.end172

if.end138:                                        ; preds = %if.else
  %dpl_flag139.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag139.phi.trans.insert, align 1
  %69 = icmp eq i8 %.pre, 0
  br i1 %69, label %if.then141, label %if.end172

if.then141:                                       ; preds = %check_dp_neighbors.exit373, %if.end138
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %70 = load i32, ptr %numcoeff, align 4
  %cmp146378 = icmp sgt i32 %70, 0
  br i1 %cmp146378, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then141
  %cof = getelementptr inbounds i8, ptr %1, i64 1272
  %wide.trip.count = zext nneg i32 %70 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %pos_scan_4x4.0380 = phi ptr [ %7, %for.body.lr.ph ], [ %pos_scan_4x4.1, %for.inc ]
  %arrayidx149 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %71 = load i32, ptr %arrayidx149, align 4
  %cmp150.not = icmp eq i32 %71, 0
  br i1 %cmp150.not, label %for.inc, label %if.then152

if.then152:                                       ; preds = %for.body
  %arrayidx154 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %72 = load i32, ptr %arrayidx154, align 4
  %mul = shl nsw i32 %72, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0380, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %73 = load i8, ptr %add.ptr, align 1
  %conv155 = zext i8 %73 to i64
  %incdec.ptr156 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %74 = load i8, ptr %incdec.ptr, align 1
  %conv157 = zext i8 %74 to i64
  %75 = load ptr, ptr %cof, align 8
  %76 = load ptr, ptr %75, align 8
  %arrayidx163.idx = shl nuw nsw i64 %conv157, 5
  %arrayidx163 = getelementptr inbounds i8, ptr %76, i64 %arrayidx163.idx
  %77 = load ptr, ptr %arrayidx163, align 8
  %arrayidx165.idx = shl nuw nsw i64 %conv155, 4
  %arrayidx165 = getelementptr inbounds i8, ptr %77, i64 %arrayidx165.idx
  store i32 %71, ptr %arrayidx165, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then152
  %pos_scan_4x4.1 = phi ptr [ %incdec.ptr156, %if.then152 ], [ %pos_scan_4x4.0380, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then141
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %78 = load i32, ptr %is_lossless, align 4
  %cmp167 = icmp eq i32 %78, 0
  br i1 %cmp167, label %if.then169, label %if.end172

if.then169:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %1, i64 216
  %79 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %79) #14
  br label %if.end172

if.end172:                                        ; preds = %if.end138.thread385, %if.end138, %if.then169, %for.end, %if.end, %check_dp_neighbors.exit, %if.then118, %if.then95
  %cbp.1 = phi i32 [ %49, %if.end138 ], [ %49, %if.then169 ], [ %49, %for.end ], [ 0, %if.then118 ], [ %16, %check_dp_neighbors.exit ], [ %16, %if.then95 ], [ 0, %if.end ], [ 0, %if.end138.thread385 ]
  %qp = getelementptr inbounds i8, ptr %1, i64 148
  %80 = load i32, ptr %qp, align 4
  %81 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %80, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %81, i64 849052
  %82 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %82, %80
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %83 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %83, i64 13520
  %84 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %81, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %84, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %85 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %85
  %86 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %86, %80
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end172
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %87 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %87 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end172
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end172 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %88 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %88, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %89 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %89
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %84, i64 304
  %90 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %90, %80
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %91 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %91 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %92 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %92, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i375 = icmp eq i32 %add.i, 0
  br i1 %cmp.i375, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %81, i64 849092
  %93 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %93, 1
  %94 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %94, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %3, i64 856032
  %95 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id173 = getelementptr inbounds i8, ptr %1, i64 216
  %96 = load i32, ptr %colour_plane_id173, align 8
  %idxprom174 = sext i32 %96 to i64
  %arrayidx175 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom174
  %97 = load i32, ptr %arrayidx175, align 4
  %idxprom176 = sext i32 %97 to i64
  %arrayidx177 = getelementptr inbounds i32, ptr %95, i64 %idxprom176
  %98 = load i32, ptr %arrayidx177, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %3, i64 856040
  %99 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx183 = getelementptr inbounds i32, ptr %99, i64 %idxprom176
  %100 = load i32, ptr %arrayidx183, align 4
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %1, i64 1392
  %idxprom189 = sext i32 %100 to i64
  %arrayidx190 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom174, i64 %idxprom189
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %1, i64 2544
  %arrayidx197 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom174, i64 %idxprom189
  %cond200 = select i1 %cmp, ptr %arrayidx190, ptr %arrayidx197
  %InvLevelScale8x8_Intra = getelementptr inbounds i8, ptr %1, i64 3696
  %arrayidx207 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 %idxprom174, i64 %idxprom189
  %InvLevelScale8x8_Inter = getelementptr inbounds i8, ptr %1, i64 8304
  %arrayidx214 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 %idxprom174, i64 %idxprom189
  %cond217 = select i1 %cmp, ptr %arrayidx207, ptr %arrayidx214
  %tobool218.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool218.not, label %if.else232, label %if.then219

if.then219:                                       ; preds = %update_qp.exit
  %luma_transform_size_8x8_flag220 = getelementptr inbounds i8, ptr %currMB, i64 420
  %101 = load i32, ptr %luma_transform_size_8x8_flag220, align 4
  %tobool221.not = icmp eq i32 %101, 0
  %nz_coeff = getelementptr inbounds i8, ptr %3, i64 848832
  %102 = load ptr, ptr %nz_coeff, align 8
  %idxprom223 = sext i32 %0 to i64
  %arrayidx224 = getelementptr inbounds ptr, ptr %102, i64 %idxprom223
  %103 = load ptr, ptr %arrayidx224, align 8
  %104 = load ptr, ptr %103, align 8
  br i1 %tobool221.not, label %if.then222, label %if.else226

if.then222:                                       ; preds = %if.then219
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond200, i32 noundef %98, i32 noundef %cbp.1, ptr noundef %104)
  br label %if.end238

if.else226:                                       ; preds = %if.then219
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond217, i32 noundef %98, i32 noundef %cbp.1, ptr noundef %104)
  br label %if.end238

if.else232:                                       ; preds = %update_qp.exit
  %nz_coeff233 = getelementptr inbounds i8, ptr %3, i64 848832
  %105 = load ptr, ptr %nz_coeff233, align 8
  %idxprom234 = sext i32 %0 to i64
  %arrayidx235 = getelementptr inbounds ptr, ptr %105, i64 %idxprom234
  %106 = load ptr, ptr %arrayidx235, align 8
  %107 = load ptr, ptr %106, align 8
  %108 = load ptr, ptr %107, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %108, i8 0, i64 16, i1 false)
  br label %if.end238

if.end238:                                        ; preds = %if.then222, %if.else226, %if.else232
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_CBP_and_coeffs_from_NAL_CAVLC_420(ptr noundef %currMB) #3 {
entry:
  %up.i935 = alloca %struct.pix_pos, align 4
  %left.i936 = alloca %struct.pix_pos, align 4
  %up.i = alloca %struct.pix_pos, align 4
  %left.i = alloca %struct.pix_pos, align 4
  %currSE = alloca %struct.syntaxelement, align 8
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  %qp_per_uv = alloca [2 x i32], align 4
  %qp_rem_uv = alloca [2 x i32], align 4
  %temp = alloca [4 x i32], align 16
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %0 = load i32, ptr %mbAddrX, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %1 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %2 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %3 = load ptr, ptr %p_Vid1, align 8
  %type = getelementptr inbounds i8, ptr %3, i64 848776
  %4 = load i32, ptr %type, align 8
  switch i32 %4, label %lor.end [
    i32 3, label %land.lhs.true
    i32 4, label %land.rhs
  ]

land.lhs.true:                                    ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %5 = load i32, ptr %is_intra_block, align 8
  %cmp2 = icmp eq i32 %5, 0
  br label %lor.end

land.rhs:                                         ; preds = %entry
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %6 = load i16, ptr %mb_type, align 8
  %cmp5 = icmp eq i16 %6, 12
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %entry, %land.rhs
  %7 = phi i1 [ %cmp5, %land.rhs ], [ %cmp2, %land.lhs.true ], [ false, %entry ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  %is_intra_block7 = getelementptr inbounds i8, ptr %currMB, i64 96
  %8 = load i32, ptr %is_intra_block7, align 8
  %cmp8 = icmp eq i32 %8, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %temp) #14
  %dec_picture10 = getelementptr inbounds i8, ptr %1, i64 13520
  %9 = load ptr, ptr %dec_picture10, align 8
  %chroma_format_idc = getelementptr inbounds i8, ptr %9, i64 268
  %10 = load i32, ptr %chroma_format_idc, align 4
  %sub = add nsw i32 %10, -1
  %structure = getelementptr inbounds i8, ptr %3, i64 848876
  %11 = load i32, ptr %structure, align 4
  %cmp11 = icmp eq i32 %11, 0
  br i1 %cmp11, label %land.end14, label %land.end14.thread

land.end14:                                       ; preds = %lor.end
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %12 = load i32, ptr %mb_field, align 8
  %.fr = freeze i32 %12
  %tobool.not = icmp eq i32 %.fr, 0
  %spec.select983 = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end14.thread

land.end14.thread:                                ; preds = %land.end14, %lor.end
  %13 = phi ptr [ @FIELD_SCAN, %lor.end ], [ %spec.select983, %land.end14 ]
  %mb_type17 = getelementptr inbounds i8, ptr %currMB, i64 152
  %14 = load i16, ptr %mb_type17, align 8
  switch i16 %14, label %lor.end39 [
    i16 10, label %if.else
    i16 14, label %if.else
    i16 9, label %15
    i16 12, label %15
    i16 13, label %15
  ]

15:                                               ; preds = %land.end14.thread, %land.end14.thread, %land.end14.thread
  br label %lor.end39

lor.end39:                                        ; preds = %land.end14.thread, %15
  %16 = phi i32 [ 6, %15 ], [ 11, %land.end14.thread ]
  store i32 %16, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %17 = load ptr, ptr %partArr, align 8
  %idxprom44 = zext nneg i32 %16 to i64
  %arrayidx45 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom44
  %18 = load i8, ptr %arrayidx45, align 1
  %idxprom46 = zext i8 %18 to i64
  %arrayidx47 = getelementptr inbounds %struct.datapartition, ptr %17, i64 %idxprom46
  %switch.tableidx = add i16 %14, -9
  %19 = icmp ult i16 %switch.tableidx, 5
  br i1 %19, label %switch.lookup, label %cond.end

switch.lookup:                                    ; preds = %lor.end39
  %20 = zext nneg i16 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [5 x i64], ptr @switch.table.read_CBP_and_coeffs_from_NAL_CAVLC_420, i64 0, i64 %20
  %switch.load = load i64, ptr %switch.gep, align 8
  br label %cond.end

cond.end:                                         ; preds = %lor.end39, %switch.lookup
  %.sink = phi i64 [ %switch.load, %switch.lookup ], [ 13488, %lor.end39 ]
  %linfo_cbp_inter = getelementptr inbounds i8, ptr %1, i64 %.sink
  %cond62 = load ptr, ptr %linfo_cbp_inter, align 8
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  store ptr %cond62, ptr %mapping, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx47, i64 40
  %21 = load ptr, ptr %readSyntaxElement, align 8
  %call = call i32 %21(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx47) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %22 = load i32, ptr %value1, align 4
  %cbp63 = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 %22, ptr %cbp63, align 4
  %23 = load i16, ptr %mb_type17, align 8
  %24 = add i16 %23, -1
  %or.cond = icmp ult i16 %24, 3
  br i1 %or.cond, label %land.lhs.true85, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %cond.end
  %cmp76 = icmp eq i16 %23, 0
  br i1 %cmp76, label %land.lhs.true78, label %lor.lhs.false83

land.lhs.true78:                                  ; preds = %lor.lhs.false73
  %slice_type = getelementptr inbounds i8, ptr %1, i64 164
  %25 = load i32, ptr %slice_type, align 4
  %cmp79 = icmp eq i32 %25, 1
  br i1 %cmp79, label %land.lhs.true81, label %lor.lhs.false83

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %active_sps = getelementptr inbounds i8, ptr %3, i64 16
  %26 = load ptr, ptr %active_sps, align 8
  %direct_8x8_inference_flag = getelementptr inbounds i8, ptr %26, i64 3144
  %27 = load i32, ptr %direct_8x8_inference_flag, align 4
  %tobool82.not = icmp eq i32 %27, 0
  br i1 %tobool82.not, label %lor.lhs.false83, label %land.lhs.true95

lor.lhs.false83:                                  ; preds = %land.lhs.true81, %land.lhs.true78, %lor.lhs.false73
  %NoMbPartLessThan8x8Flag = getelementptr inbounds i8, ptr %currMB, i64 424
  %28 = load i32, ptr %NoMbPartLessThan8x8Flag, align 8
  %tobool84.not = icmp eq i32 %28, 0
  br i1 %tobool84.not, label %if.end, label %land.lhs.true85

land.lhs.true85:                                  ; preds = %cond.end, %lor.lhs.false83
  switch i16 %23, label %land.lhs.true95 [
    i16 13, label %if.end
    i16 9, label %if.end
  ]

land.lhs.true95:                                  ; preds = %land.lhs.true81, %land.lhs.true85
  %and = and i32 %22, 15
  %tobool97.not = icmp eq i32 %and, 0
  br i1 %tobool97.not, label %if.end, label %land.rhs98

land.rhs98:                                       ; preds = %land.lhs.true95
  %Transform8x8Mode = getelementptr inbounds i8, ptr %1, i64 60
  %29 = load i32, ptr %Transform8x8Mode, align 4
  %tobool99.not = icmp eq i32 %29, 0
  br i1 %tobool99.not, label %if.then112, label %if.then102

if.then102:                                       ; preds = %land.rhs98
  store i32 0, ptr %currSE, align 8
  %30 = load ptr, ptr %partArr, align 8
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readMB_transform_size_flag_CABAC, ptr %reading, align 8
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %31 = load ptr, ptr %30, align 8
  %call108 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %31) #14
  %32 = load i32, ptr %value1, align 4
  %luma_transform_size_8x8_flag = getelementptr inbounds i8, ptr %currMB, i64 420
  store i32 %32, ptr %luma_transform_size_8x8_flag, align 4
  br label %if.then112

if.end:                                           ; preds = %land.lhs.true95, %land.lhs.true85, %land.lhs.true85, %lor.lhs.false83
  %cmp110.not = icmp eq i32 %22, 0
  br i1 %cmp110.not, label %if.end189, label %if.then112

if.then112:                                       ; preds = %land.rhs98, %if.then102, %if.end
  %33 = load i32, ptr %is_intra_block7, align 8
  %cmp114 = icmp eq i32 %33, 0
  %cond116 = select i1 %cmp114, i32 16, i32 17
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef %cond116)
  %34 = load i32, ptr %dp_mode, align 8
  %tobool118.not = icmp eq i32 %34, 0
  br i1 %tobool118.not, label %if.end189, label %if.then119

if.then119:                                       ; preds = %if.then112
  %35 = load i32, ptr %is_intra_block7, align 8
  %cmp121 = icmp eq i32 %35, 0
  br i1 %cmp121, label %land.lhs.true123, label %if.end126

land.lhs.true123:                                 ; preds = %if.then119
  %dpC_NotPresent = getelementptr inbounds i8, ptr %1, i64 1236
  %36 = load i32, ptr %dpC_NotPresent, align 4
  %tobool124.not = icmp eq i32 %36, 0
  br i1 %tobool124.not, label %if.end126, label %if.then125

if.then125:                                       ; preds = %land.lhs.true123
  %dpl_flag = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag, align 1
  br label %if.end126

if.end126:                                        ; preds = %if.then125, %land.lhs.true123, %if.then119
  br i1 %cmp8, label %land.lhs.true128, label %if.end132

land.lhs.true128:                                 ; preds = %if.end126
  %dpB_NotPresent = getelementptr inbounds i8, ptr %1, i64 1232
  %37 = load i32, ptr %dpB_NotPresent, align 8
  %tobool129.not = icmp eq i32 %37, 0
  br i1 %tobool129.not, label %if.end132, label %if.then130

if.then130:                                       ; preds = %land.lhs.true128
  %ei_flag = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag, align 2
  %dpl_flag131 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag131, align 1
  br label %if.end132

if.end132:                                        ; preds = %if.then130, %land.lhs.true128, %if.end126
  %38 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i) #14
  %getNeighbour.i = getelementptr inbounds i8, ptr %38, i64 856744
  %39 = load ptr, ptr %getNeighbour.i, align 8
  %arrayidx.i = getelementptr inbounds i8, ptr %38, i64 849132
  call void %39(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %left.i) #14
  %40 = load ptr, ptr %getNeighbour.i, align 8
  call void %40(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %up.i) #14
  %41 = load i32, ptr %is_intra_block7, align 8
  %cmp.i = icmp eq i32 %41, 0
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %if.end132
  %active_pps.i = getelementptr inbounds i8, ptr %38, i64 8
  %42 = load ptr, ptr %active_pps.i, align 8
  %constrained_intra_pred_flag.i = getelementptr inbounds i8, ptr %42, i64 2204
  %43 = load i32, ptr %constrained_intra_pred_flag.i, align 4
  %tobool.not.i = icmp eq i32 %43, 0
  br i1 %tobool.not.i, label %if.then.i, label %check_dp_neighbors.exit

if.then.i:                                        ; preds = %lor.lhs.false.i, %if.end132
  %44 = load i32, ptr %left.i, align 4
  %tobool6.not.i = icmp eq i32 %44, 0
  br i1 %tobool6.not.i, label %if.end.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.then.i
  %mb_data.i = getelementptr inbounds i8, ptr %38, i64 848888
  %45 = load ptr, ptr %mb_data.i, align 8
  %mb_addr.i = getelementptr inbounds i8, ptr %left.i, i64 4
  %46 = load i32, ptr %mb_addr.i, align 4
  %idxprom.i = sext i32 %46 to i64
  %dpl_flag.i = getelementptr inbounds %struct.macroblock, ptr %45, i64 %idxprom.i, i32 23
  %47 = load i8, ptr %dpl_flag.i, align 1
  %dpl_flag9.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %48 = load i8, ptr %dpl_flag9.i, align 1
  %or38.i = or i8 %48, %47
  store i8 %or38.i, ptr %dpl_flag9.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then7.i, %if.then.i
  %49 = load i32, ptr %up.i, align 4
  %tobool13.not.i = icmp eq i32 %49, 0
  br i1 %tobool13.not.i, label %check_dp_neighbors.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.end.i
  %mb_data15.i = getelementptr inbounds i8, ptr %38, i64 848888
  %50 = load ptr, ptr %mb_data15.i, align 8
  %mb_addr16.i = getelementptr inbounds i8, ptr %up.i, i64 4
  %51 = load i32, ptr %mb_addr16.i, align 4
  %idxprom17.i = sext i32 %51 to i64
  %dpl_flag19.i = getelementptr inbounds %struct.macroblock, ptr %50, i64 %idxprom17.i, i32 23
  %52 = load i8, ptr %dpl_flag19.i, align 1
  %dpl_flag21.i = getelementptr inbounds i8, ptr %currMB, i64 111
  %53 = load i8, ptr %dpl_flag21.i, align 1
  %or2339.i = or i8 %53, %52
  store i8 %or2339.i, ptr %dpl_flag21.i, align 1
  br label %check_dp_neighbors.exit

check_dp_neighbors.exit:                          ; preds = %lor.lhs.false.i, %if.end.i, %if.then14.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i) #14
  %dpl_flag133 = getelementptr inbounds i8, ptr %currMB, i64 111
  %54 = load i8, ptr %dpl_flag133, align 1
  %tobool134.not = icmp eq i8 %54, 0
  br i1 %tobool134.not, label %if.end189, label %if.then135

if.then135:                                       ; preds = %check_dp_neighbors.exit
  store i32 0, ptr %cbp63, align 4
  br label %if.end189

if.else:                                          ; preds = %land.end14.thread, %land.end14.thread
  %cbp140 = getelementptr inbounds i8, ptr %currMB, i64 284
  %55 = load i32, ptr %cbp140, align 4
  call fastcc void @read_delta_quant(ptr noundef nonnull %currSE, ptr noundef nonnull %currMB, ptr noundef nonnull %arrayidx, i32 noundef 17)
  %56 = load i32, ptr %dp_mode, align 8
  %tobool142.not = icmp eq i32 %56, 0
  br i1 %tobool142.not, label %if.end155, label %if.then143

if.then143:                                       ; preds = %if.else
  %dpB_NotPresent144 = getelementptr inbounds i8, ptr %1, i64 1232
  %57 = load i32, ptr %dpB_NotPresent144, align 8
  %tobool145.not = icmp eq i32 %57, 0
  br i1 %tobool145.not, label %if.end149, label %if.then146

if.then146:                                       ; preds = %if.then143
  %ei_flag147 = getelementptr inbounds i8, ptr %currMB, i64 110
  store i8 1, ptr %ei_flag147, align 2
  %dpl_flag148 = getelementptr inbounds i8, ptr %currMB, i64 111
  store i8 1, ptr %dpl_flag148, align 1
  br label %if.end149

if.end149:                                        ; preds = %if.then146, %if.then143
  %58 = load ptr, ptr %p_Vid1, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %up.i935) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left.i936) #14
  %getNeighbour.i938 = getelementptr inbounds i8, ptr %58, i64 856744
  %59 = load ptr, ptr %getNeighbour.i938, align 8
  %arrayidx.i939 = getelementptr inbounds i8, ptr %58, i64 849132
  call void %59(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %arrayidx.i939, ptr noundef nonnull %left.i936) #14
  %60 = load ptr, ptr %getNeighbour.i938, align 8
  call void %60(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %arrayidx.i939, ptr noundef nonnull %up.i935) #14
  %61 = load i32, ptr %is_intra_block7, align 8
  %cmp.i941 = icmp eq i32 %61, 0
  br i1 %cmp.i941, label %if.then.i946, label %lor.lhs.false.i942

lor.lhs.false.i942:                               ; preds = %if.end149
  %active_pps.i943 = getelementptr inbounds i8, ptr %58, i64 8
  %62 = load ptr, ptr %active_pps.i943, align 8
  %constrained_intra_pred_flag.i944 = getelementptr inbounds i8, ptr %62, i64 2204
  %63 = load i32, ptr %constrained_intra_pred_flag.i944, align 4
  %tobool.not.i945 = icmp eq i32 %63, 0
  br i1 %tobool.not.i945, label %if.then.i946, label %check_dp_neighbors.exit964

if.then.i946:                                     ; preds = %lor.lhs.false.i942, %if.end149
  %64 = load i32, ptr %left.i936, align 4
  %tobool6.not.i947 = icmp eq i32 %64, 0
  br i1 %tobool6.not.i947, label %if.end.i955, label %if.then7.i948

if.then7.i948:                                    ; preds = %if.then.i946
  %mb_data.i949 = getelementptr inbounds i8, ptr %58, i64 848888
  %65 = load ptr, ptr %mb_data.i949, align 8
  %mb_addr.i950 = getelementptr inbounds i8, ptr %left.i936, i64 4
  %66 = load i32, ptr %mb_addr.i950, align 4
  %idxprom.i951 = sext i32 %66 to i64
  %dpl_flag.i952 = getelementptr inbounds %struct.macroblock, ptr %65, i64 %idxprom.i951, i32 23
  %67 = load i8, ptr %dpl_flag.i952, align 1
  %dpl_flag9.i953 = getelementptr inbounds i8, ptr %currMB, i64 111
  %68 = load i8, ptr %dpl_flag9.i953, align 1
  %or38.i954 = or i8 %68, %67
  store i8 %or38.i954, ptr %dpl_flag9.i953, align 1
  br label %if.end.i955

if.end.i955:                                      ; preds = %if.then7.i948, %if.then.i946
  %69 = load i32, ptr %up.i935, align 4
  %tobool13.not.i956 = icmp eq i32 %69, 0
  br i1 %tobool13.not.i956, label %check_dp_neighbors.exit964, label %if.then14.i957

if.then14.i957:                                   ; preds = %if.end.i955
  %mb_data15.i958 = getelementptr inbounds i8, ptr %58, i64 848888
  %70 = load ptr, ptr %mb_data15.i958, align 8
  %mb_addr16.i959 = getelementptr inbounds i8, ptr %up.i935, i64 4
  %71 = load i32, ptr %mb_addr16.i959, align 4
  %idxprom17.i960 = sext i32 %71 to i64
  %dpl_flag19.i961 = getelementptr inbounds %struct.macroblock, ptr %70, i64 %idxprom17.i960, i32 23
  %72 = load i8, ptr %dpl_flag19.i961, align 1
  %dpl_flag21.i962 = getelementptr inbounds i8, ptr %currMB, i64 111
  %73 = load i8, ptr %dpl_flag21.i962, align 1
  %or2339.i963 = or i8 %73, %72
  store i8 %or2339.i963, ptr %dpl_flag21.i962, align 1
  br label %check_dp_neighbors.exit964

check_dp_neighbors.exit964:                       ; preds = %lor.lhs.false.i942, %if.end.i955, %if.then14.i957
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left.i936) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %up.i935) #14
  %dpl_flag150 = getelementptr inbounds i8, ptr %currMB, i64 111
  %74 = load i8, ptr %dpl_flag150, align 1
  %tobool151.not = icmp eq i8 %74, 0
  br i1 %tobool151.not, label %if.then158, label %if.end155.thread1051

if.end155.thread1051:                             ; preds = %check_dp_neighbors.exit964
  store i32 0, ptr %cbp140, align 4
  br label %if.end189

if.end155:                                        ; preds = %if.else
  %dpl_flag156.phi.trans.insert = getelementptr inbounds i8, ptr %currMB, i64 111
  %.pre = load i8, ptr %dpl_flag156.phi.trans.insert, align 1
  %tobool157.not = icmp eq i8 %.pre, 0
  br i1 %tobool157.not, label %if.then158, label %if.end189

if.then158:                                       ; preds = %check_dp_neighbors.exit964, %if.end155
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 1, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %75 = load i32, ptr %numcoeff, align 4
  %cmp163985 = icmp sgt i32 %75, 0
  br i1 %cmp163985, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then158
  %cof = getelementptr inbounds i8, ptr %1, i64 1272
  %wide.trip.count = zext nneg i32 %75 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %pos_scan_4x4.0987 = phi ptr [ %13, %for.body.lr.ph ], [ %pos_scan_4x4.1, %for.inc ]
  %arrayidx166 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %76 = load i32, ptr %arrayidx166, align 4
  %cmp167.not = icmp eq i32 %76, 0
  br i1 %cmp167.not, label %for.inc, label %if.then169

if.then169:                                       ; preds = %for.body
  %arrayidx171 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %77 = load i32, ptr %arrayidx171, align 4
  %mul = shl nsw i32 %77, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0987, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %78 = load i8, ptr %add.ptr, align 1
  %conv172 = zext i8 %78 to i64
  %incdec.ptr173 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %79 = load i8, ptr %incdec.ptr, align 1
  %conv174 = zext i8 %79 to i64
  %80 = load ptr, ptr %cof, align 8
  %81 = load ptr, ptr %80, align 8
  %arrayidx180.idx = shl nuw nsw i64 %conv174, 5
  %arrayidx180 = getelementptr inbounds i8, ptr %81, i64 %arrayidx180.idx
  %82 = load ptr, ptr %arrayidx180, align 8
  %arrayidx182.idx = shl nuw nsw i64 %conv172, 4
  %arrayidx182 = getelementptr inbounds i8, ptr %82, i64 %arrayidx182.idx
  store i32 %76, ptr %arrayidx182, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then169
  %pos_scan_4x4.1 = phi ptr [ %incdec.ptr173, %if.then169 ], [ %pos_scan_4x4.0987, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.then158
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %83 = load i32, ptr %is_lossless, align 4
  %cmp184 = icmp eq i32 %83, 0
  br i1 %cmp184, label %if.then186, label %if.end189

if.then186:                                       ; preds = %for.end
  %colour_plane_id = getelementptr inbounds i8, ptr %1, i64 216
  %84 = load i32, ptr %colour_plane_id, align 8
  call void @itrans_2(ptr noundef nonnull %currMB, i32 noundef %84) #14
  br label %if.end189

if.end189:                                        ; preds = %if.end155.thread1051, %if.end155, %if.then186, %for.end, %if.end, %check_dp_neighbors.exit, %if.then135, %if.then112
  %cbp.1 = phi i32 [ %55, %if.end155 ], [ %55, %if.then186 ], [ %55, %for.end ], [ 0, %if.then135 ], [ %22, %check_dp_neighbors.exit ], [ %22, %if.then112 ], [ 0, %if.end ], [ 0, %if.end155.thread1051 ]
  %qp = getelementptr inbounds i8, ptr %1, i64 148
  %85 = load i32, ptr %qp, align 4
  %86 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %85, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %86, i64 849052
  %87 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %87, %85
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %88 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %88, i64 13520
  %89 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %86, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %89, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %90 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %90
  %91 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %91, %85
  %cond.i.i.i.i = call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end189
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %92 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %92 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end189
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end189 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %93 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %93, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %94 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %94
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %89, i64 304
  %95 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %95, %85
  %cond.i.i.1.i.i = call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %96 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %96 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %97 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %97, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i966 = icmp eq i32 %add.i, 0
  br i1 %cmp.i966, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %86, i64 849092
  %98 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %98, 1
  %99 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %99, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  %qp_per_matrix = getelementptr inbounds i8, ptr %3, i64 856032
  %100 = load ptr, ptr %qp_per_matrix, align 8
  %colour_plane_id190 = getelementptr inbounds i8, ptr %1, i64 216
  %101 = load i32, ptr %colour_plane_id190, align 8
  %idxprom191 = sext i32 %101 to i64
  %arrayidx192 = getelementptr inbounds [3 x i32], ptr %qp_scaled.i, i64 0, i64 %idxprom191
  %102 = load i32, ptr %arrayidx192, align 4
  %idxprom193 = sext i32 %102 to i64
  %arrayidx194 = getelementptr inbounds i32, ptr %100, i64 %idxprom193
  %103 = load i32, ptr %arrayidx194, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %3, i64 856040
  %104 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx200 = getelementptr inbounds i32, ptr %104, i64 %idxprom193
  %105 = load i32, ptr %arrayidx200, align 4
  %106 = load i32, ptr %chroma_format_idc, align 4
  %cmp202.not = icmp eq i32 %106, 0
  br i1 %cmp202.not, label %if.end229, label %for.body208.preheader

for.body208.preheader:                            ; preds = %update_qp.exit
  %idxprom213 = sext i32 %add24.i.i to i64
  %arrayidx214 = getelementptr inbounds i32, ptr %100, i64 %idxprom213
  %107 = load i32, ptr %arrayidx214, align 4
  store i32 %107, ptr %qp_per_uv, align 4
  %arrayidx223 = getelementptr inbounds i32, ptr %104, i64 %idxprom213
  %108 = load i32, ptr %arrayidx223, align 4
  store i32 %108, ptr %qp_rem_uv, align 4
  %idxprom213.1 = sext i32 %add24.1.i.i to i64
  %arrayidx214.1 = getelementptr inbounds i32, ptr %100, i64 %idxprom213.1
  %109 = load i32, ptr %arrayidx214.1, align 4
  %arrayidx216.1 = getelementptr inbounds i8, ptr %qp_per_uv, i64 4
  store i32 %109, ptr %arrayidx216.1, align 4
  %arrayidx223.1 = getelementptr inbounds i32, ptr %104, i64 %idxprom213.1
  %110 = load i32, ptr %arrayidx223.1, align 4
  %arrayidx225.1 = getelementptr inbounds i8, ptr %qp_rem_uv, i64 4
  store i32 %110, ptr %arrayidx225.1, align 4
  br label %if.end229

if.end229:                                        ; preds = %for.body208.preheader, %update_qp.exit
  %111 = phi i32 [ %109, %for.body208.preheader ], [ undef, %update_qp.exit ]
  %112 = phi i32 [ %110, %for.body208.preheader ], [ undef, %update_qp.exit ]
  %113 = phi i32 [ %107, %for.body208.preheader ], [ undef, %update_qp.exit ]
  %114 = phi i32 [ %108, %for.body208.preheader ], [ undef, %update_qp.exit ]
  %InvLevelScale4x4_Intra = getelementptr inbounds i8, ptr %1, i64 1392
  %idxprom235 = sext i32 %105 to i64
  %arrayidx236 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra, i64 0, i64 %idxprom191, i64 %idxprom235
  %InvLevelScale8x8_Intra = getelementptr inbounds i8, ptr %1, i64 3696
  %arrayidx253 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 %idxprom191, i64 %idxprom235
  %InvLevelScale4x4_Inter = getelementptr inbounds i8, ptr %1, i64 2544
  %arrayidx243 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Inter, i64 0, i64 %idxprom191, i64 %idxprom235
  %InvLevelScale8x8_Inter = getelementptr inbounds i8, ptr %1, i64 8304
  %arrayidx260 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 %idxprom191, i64 %idxprom235
  %cond246981 = select i1 %cmp8, ptr %arrayidx236, ptr %arrayidx243
  %cond263 = select i1 %cmp8, ptr %arrayidx253, ptr %arrayidx260
  %tobool264.not = icmp eq i32 %cbp.1, 0
  br i1 %tobool264.not, label %if.else278, label %if.then265

if.then265:                                       ; preds = %if.end229
  %luma_transform_size_8x8_flag266 = getelementptr inbounds i8, ptr %currMB, i64 420
  %115 = load i32, ptr %luma_transform_size_8x8_flag266, align 4
  %tobool267.not = icmp eq i32 %115, 0
  %nz_coeff = getelementptr inbounds i8, ptr %3, i64 848832
  %116 = load ptr, ptr %nz_coeff, align 8
  %idxprom269 = sext i32 %0 to i64
  %arrayidx270 = getelementptr inbounds ptr, ptr %116, i64 %idxprom269
  %117 = load ptr, ptr %arrayidx270, align 8
  %118 = load ptr, ptr %117, align 8
  br i1 %tobool267.not, label %if.then268, label %if.else272

if.then268:                                       ; preds = %if.then265
  call fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond246981, i32 noundef %103, i32 noundef %cbp.1, ptr noundef %118)
  br label %if.end284

if.else272:                                       ; preds = %if.then265
  call fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef nonnull %cond263, i32 noundef %103, i32 noundef %cbp.1, ptr noundef %118)
  br label %if.end284

if.else278:                                       ; preds = %if.end229
  %nz_coeff279 = getelementptr inbounds i8, ptr %3, i64 848832
  %119 = load ptr, ptr %nz_coeff279, align 8
  %idxprom280 = sext i32 %0 to i64
  %arrayidx281 = getelementptr inbounds ptr, ptr %119, i64 %idxprom280
  %120 = load ptr, ptr %arrayidx281, align 8
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %121, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %122, i8 0, i64 16, i1 false)
  br label %if.end284

if.end284:                                        ; preds = %if.then268, %if.else272, %if.else278
  %123 = load i32, ptr %chroma_format_idc, align 4
  %cmp286.not = icmp eq i32 %123, 3
  br i1 %cmp286.not, label %if.end675, label %if.then288

if.then288:                                       ; preds = %if.end284
  %cmp289 = icmp sgt i32 %cbp.1, 15
  %cmp293 = icmp eq i32 %123, 1
  %or.cond934 = and i1 %cmp289, %cmp293
  br i1 %or.cond934, label %for.cond296.preheader, label %if.end455

for.cond296.preheader:                            ; preds = %if.then288
  %cofu = getelementptr inbounds i8, ptr %1, i64 1288
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %cof402 = getelementptr inbounds i8, ptr %1, i64 1272
  %arrayidx408 = getelementptr inbounds i8, ptr %temp, i64 4
  %arrayidx422 = getelementptr inbounds i8, ptr %temp, i64 8
  %arrayidx436 = getelementptr inbounds i8, ptr %temp, i64 12
  %arrayidx367 = getelementptr inbounds i8, ptr %1, i64 1292
  %arrayidx375 = getelementptr inbounds i8, ptr %1, i64 1296
  %arrayidx383 = getelementptr inbounds i8, ptr %1, i64 1300
  %idxprom308 = sext i32 %114 to i64
  %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter = select i1 %cmp8, ptr %InvLevelScale4x4_Intra, ptr %InvLevelScale4x4_Inter
  %arrayidx319 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter, i64 0, i64 1, i64 %idxprom308
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %cofu, i8 0, i64 16, i1 false)
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %124 = load i32, ptr %numcoeff, align 4
  %cmp327989 = icmp sgt i32 %124, 0
  br i1 %cmp327989, label %for.body329.lr.ph, label %for.end351

for.body329.lr.ph:                                ; preds = %for.cond296.preheader
  %wide.trip.count1013 = zext nneg i32 %124 to i64
  br label %for.body329

for.body329:                                      ; preds = %for.body329.lr.ph, %for.inc349
  %indvars.iv1010 = phi i64 [ 0, %for.body329.lr.ph ], [ %indvars.iv.next1011, %for.inc349 ]
  %coef_ctr.0990 = phi i32 [ -1, %for.body329.lr.ph ], [ %coef_ctr.1, %for.inc349 ]
  %arrayidx331 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1010
  %125 = load i32, ptr %arrayidx331, align 4
  %cmp332.not = icmp eq i32 %125, 0
  br i1 %cmp332.not, label %for.inc349, label %if.then334

if.then334:                                       ; preds = %for.body329
  %126 = load i64, ptr %cbp_blk, align 8
  %or = or i64 %126, 983040
  store i64 %or, ptr %cbp_blk, align 8
  %arrayidx340 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1010
  %127 = load i32, ptr %arrayidx340, align 4
  %add341 = add i32 %coef_ctr.0990, 1
  %add342 = add i32 %add341, %127
  %idxprom346 = sext i32 %add342 to i64
  %arrayidx347 = getelementptr inbounds [16 x i32], ptr %cofu, i64 0, i64 %idxprom346
  store i32 %125, ptr %arrayidx347, align 4
  br label %for.inc349

for.inc349:                                       ; preds = %for.body329, %if.then334
  %coef_ctr.1 = phi i32 [ %add342, %if.then334 ], [ %coef_ctr.0990, %for.body329 ]
  %indvars.iv.next1011 = add nuw nsw i64 %indvars.iv1010, 1
  %exitcond1014.not = icmp eq i64 %indvars.iv.next1011, %wide.trip.count1013
  br i1 %exitcond1014.not, label %for.end351, label %for.body329

for.end351:                                       ; preds = %for.inc349, %for.cond296.preheader
  br i1 %7, label %if.then357, label %lor.lhs.false353

lor.lhs.false353:                                 ; preds = %for.end351
  %128 = load i32, ptr %is_lossless.i, align 4
  %cmp355 = icmp eq i32 %128, 1
  br i1 %cmp355, label %if.then357, label %if.else390

if.then357:                                       ; preds = %lor.lhs.false353, %for.end351
  %129 = load i32, ptr %cofu, align 8
  %130 = load ptr, ptr %cof402, align 8
  %arrayidx363 = getelementptr inbounds i8, ptr %130, i64 8
  %131 = load ptr, ptr %arrayidx363, align 8
  %132 = load ptr, ptr %131, align 8
  store i32 %129, ptr %132, align 4
  %133 = load i32, ptr %arrayidx367, align 4
  %134 = load ptr, ptr %cof402, align 8
  %arrayidx371 = getelementptr inbounds i8, ptr %134, i64 8
  %135 = load ptr, ptr %arrayidx371, align 8
  %136 = load ptr, ptr %135, align 8
  %arrayidx373 = getelementptr inbounds i8, ptr %136, i64 16
  store i32 %133, ptr %arrayidx373, align 4
  %137 = load i32, ptr %arrayidx375, align 8
  %138 = load ptr, ptr %cof402, align 8
  %arrayidx379 = getelementptr inbounds i8, ptr %138, i64 8
  %139 = load ptr, ptr %arrayidx379, align 8
  %arrayidx380 = getelementptr inbounds i8, ptr %139, i64 32
  %140 = load ptr, ptr %arrayidx380, align 8
  store i32 %137, ptr %140, align 4
  %141 = load i32, ptr %arrayidx383, align 4
  br label %for.inc451

if.else390:                                       ; preds = %lor.lhs.false353
  call void @ihadamard2x2(ptr noundef nonnull %cofu, ptr noundef nonnull %temp) #14
  %142 = load i32, ptr %temp, align 16
  %143 = load i32, ptr %arrayidx319, align 4
  %mul397 = mul nsw i32 %143, %142
  %shl400 = shl i32 %mul397, %113
  %shr401 = ashr i32 %shl400, 5
  %144 = load ptr, ptr %cof402, align 8
  %arrayidx405 = getelementptr inbounds i8, ptr %144, i64 8
  %145 = load ptr, ptr %arrayidx405, align 8
  %146 = load ptr, ptr %145, align 8
  store i32 %shr401, ptr %146, align 4
  %147 = load i32, ptr %arrayidx408, align 4
  %148 = load i32, ptr %arrayidx319, align 4
  %mul411 = mul nsw i32 %148, %147
  %shl414 = shl i32 %mul411, %113
  %shr415 = ashr i32 %shl414, 5
  %149 = load ptr, ptr %cof402, align 8
  %arrayidx419 = getelementptr inbounds i8, ptr %149, i64 8
  %150 = load ptr, ptr %arrayidx419, align 8
  %151 = load ptr, ptr %150, align 8
  %arrayidx421 = getelementptr inbounds i8, ptr %151, i64 16
  store i32 %shr415, ptr %arrayidx421, align 4
  %152 = load i32, ptr %arrayidx422, align 8
  %153 = load i32, ptr %arrayidx319, align 4
  %mul425 = mul nsw i32 %153, %152
  %shl428 = shl i32 %mul425, %113
  %shr429 = ashr i32 %shl428, 5
  %154 = load ptr, ptr %cof402, align 8
  %arrayidx433 = getelementptr inbounds i8, ptr %154, i64 8
  %155 = load ptr, ptr %arrayidx433, align 8
  %arrayidx434 = getelementptr inbounds i8, ptr %155, i64 32
  %156 = load ptr, ptr %arrayidx434, align 8
  store i32 %shr429, ptr %156, align 4
  %157 = load i32, ptr %arrayidx436, align 4
  %158 = load i32, ptr %arrayidx319, align 4
  %mul439 = mul nsw i32 %158, %157
  %shl442 = shl i32 %mul439, %113
  %shr443 = ashr i32 %shl442, 5
  br label %for.inc451

for.inc451:                                       ; preds = %if.then357, %if.else390
  %.sink1055 = phi i32 [ %141, %if.then357 ], [ %shr443, %if.else390 ]
  %159 = load ptr, ptr %cof402, align 8
  %arrayidx387 = getelementptr inbounds i8, ptr %159, i64 8
  %160 = load ptr, ptr %arrayidx387, align 8
  %arrayidx388 = getelementptr inbounds i8, ptr %160, i64 32
  %161 = load ptr, ptr %arrayidx388, align 8
  %arrayidx389 = getelementptr inbounds i8, ptr %161, i64 16
  store i32 %.sink1055, ptr %arrayidx389, align 4
  %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter1063 = select i1 %cmp8, ptr %InvLevelScale4x4_Intra, ptr %InvLevelScale4x4_Inter
  %idxprom308.1 = sext i32 %112 to i64
  %arrayidx309.1 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter1063, i64 0, i64 2, i64 %idxprom308.1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %cofu, i8 0, i64 16, i1 false)
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 6, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %162 = load i32, ptr %numcoeff, align 4
  %cmp327989.1 = icmp sgt i32 %162, 0
  br i1 %cmp327989.1, label %for.body329.lr.ph.1, label %for.end351.1

for.body329.lr.ph.1:                              ; preds = %for.inc451
  %wide.trip.count1013.1 = zext nneg i32 %162 to i64
  br label %for.body329.1

for.body329.1:                                    ; preds = %for.inc349.1, %for.body329.lr.ph.1
  %indvars.iv1010.1 = phi i64 [ 0, %for.body329.lr.ph.1 ], [ %indvars.iv.next1011.1, %for.inc349.1 ]
  %coef_ctr.0990.1 = phi i32 [ -1, %for.body329.lr.ph.1 ], [ %coef_ctr.1.1, %for.inc349.1 ]
  %arrayidx331.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1010.1
  %163 = load i32, ptr %arrayidx331.1, align 4
  %cmp332.not.1 = icmp eq i32 %163, 0
  br i1 %cmp332.not.1, label %for.inc349.1, label %if.then334.1

if.then334.1:                                     ; preds = %for.body329.1
  %164 = load i64, ptr %cbp_blk, align 8
  %or.1 = or i64 %164, 15728640
  store i64 %or.1, ptr %cbp_blk, align 8
  %arrayidx340.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1010.1
  %165 = load i32, ptr %arrayidx340.1, align 4
  %add341.1 = add i32 %coef_ctr.0990.1, 1
  %add342.1 = add i32 %add341.1, %165
  %idxprom346.1 = sext i32 %add342.1 to i64
  %arrayidx347.1 = getelementptr inbounds [16 x i32], ptr %cofu, i64 0, i64 %idxprom346.1
  store i32 %163, ptr %arrayidx347.1, align 4
  br label %for.inc349.1

for.inc349.1:                                     ; preds = %if.then334.1, %for.body329.1
  %coef_ctr.1.1 = phi i32 [ %add342.1, %if.then334.1 ], [ %coef_ctr.0990.1, %for.body329.1 ]
  %indvars.iv.next1011.1 = add nuw nsw i64 %indvars.iv1010.1, 1
  %exitcond1014.1.not = icmp eq i64 %indvars.iv.next1011.1, %wide.trip.count1013.1
  br i1 %exitcond1014.1.not, label %for.end351.1, label %for.body329.1

for.end351.1:                                     ; preds = %for.inc349.1, %for.inc451
  br i1 %7, label %if.then357.1, label %lor.lhs.false353.1

lor.lhs.false353.1:                               ; preds = %for.end351.1
  %166 = load i32, ptr %is_lossless.i, align 4
  %cmp355.1 = icmp eq i32 %166, 1
  br i1 %cmp355.1, label %if.then357.1, label %if.else390.1

if.else390.1:                                     ; preds = %lor.lhs.false353.1
  call void @ihadamard2x2(ptr noundef nonnull %cofu, ptr noundef nonnull %temp) #14
  %167 = load i32, ptr %temp, align 16
  %168 = load i32, ptr %arrayidx309.1, align 4
  %mul397.1 = mul nsw i32 %168, %167
  %shl400.1 = shl i32 %mul397.1, %111
  %shr401.1 = ashr i32 %shl400.1, 5
  %169 = load ptr, ptr %cof402, align 8
  %arrayidx405.1 = getelementptr inbounds i8, ptr %169, i64 16
  %170 = load ptr, ptr %arrayidx405.1, align 8
  %171 = load ptr, ptr %170, align 8
  store i32 %shr401.1, ptr %171, align 4
  %172 = load i32, ptr %arrayidx408, align 4
  %173 = load i32, ptr %arrayidx309.1, align 4
  %mul411.1 = mul nsw i32 %173, %172
  %shl414.1 = shl i32 %mul411.1, %111
  %shr415.1 = ashr i32 %shl414.1, 5
  %174 = load ptr, ptr %cof402, align 8
  %arrayidx419.1 = getelementptr inbounds i8, ptr %174, i64 16
  %175 = load ptr, ptr %arrayidx419.1, align 8
  %176 = load ptr, ptr %175, align 8
  %arrayidx421.1 = getelementptr inbounds i8, ptr %176, i64 16
  store i32 %shr415.1, ptr %arrayidx421.1, align 4
  %177 = load i32, ptr %arrayidx422, align 8
  %178 = load i32, ptr %arrayidx309.1, align 4
  %mul425.1 = mul nsw i32 %178, %177
  %shl428.1 = shl i32 %mul425.1, %111
  %shr429.1 = ashr i32 %shl428.1, 5
  %179 = load ptr, ptr %cof402, align 8
  %arrayidx433.1 = getelementptr inbounds i8, ptr %179, i64 16
  %180 = load ptr, ptr %arrayidx433.1, align 8
  %arrayidx434.1 = getelementptr inbounds i8, ptr %180, i64 32
  %181 = load ptr, ptr %arrayidx434.1, align 8
  store i32 %shr429.1, ptr %181, align 4
  %182 = load i32, ptr %arrayidx436, align 4
  %183 = load i32, ptr %arrayidx309.1, align 4
  %mul439.1 = mul nsw i32 %183, %182
  %shl442.1 = shl i32 %mul439.1, %111
  %shr443.1 = ashr i32 %shl442.1, 5
  br label %if.end455.sink.split

if.then357.1:                                     ; preds = %lor.lhs.false353.1, %for.end351.1
  %184 = load i32, ptr %cofu, align 8
  %185 = load ptr, ptr %cof402, align 8
  %arrayidx363.1 = getelementptr inbounds i8, ptr %185, i64 16
  %186 = load ptr, ptr %arrayidx363.1, align 8
  %187 = load ptr, ptr %186, align 8
  store i32 %184, ptr %187, align 4
  %188 = load i32, ptr %arrayidx367, align 4
  %189 = load ptr, ptr %cof402, align 8
  %arrayidx371.1 = getelementptr inbounds i8, ptr %189, i64 16
  %190 = load ptr, ptr %arrayidx371.1, align 8
  %191 = load ptr, ptr %190, align 8
  %arrayidx373.1 = getelementptr inbounds i8, ptr %191, i64 16
  store i32 %188, ptr %arrayidx373.1, align 4
  %192 = load i32, ptr %arrayidx375, align 8
  %193 = load ptr, ptr %cof402, align 8
  %arrayidx379.1 = getelementptr inbounds i8, ptr %193, i64 16
  %194 = load ptr, ptr %arrayidx379.1, align 8
  %arrayidx380.1 = getelementptr inbounds i8, ptr %194, i64 32
  %195 = load ptr, ptr %arrayidx380.1, align 8
  store i32 %192, ptr %195, align 4
  %196 = load i32, ptr %arrayidx383, align 4
  br label %if.end455.sink.split

if.end455.sink.split:                             ; preds = %if.then357.1, %if.else390.1
  %shr443.1.sink = phi i32 [ %shr443.1, %if.else390.1 ], [ %196, %if.then357.1 ]
  %197 = load ptr, ptr %cof402, align 8
  %arrayidx447.1 = getelementptr inbounds i8, ptr %197, i64 16
  %198 = load ptr, ptr %arrayidx447.1, align 8
  %arrayidx448.1 = getelementptr inbounds i8, ptr %198, i64 32
  %199 = load ptr, ptr %arrayidx448.1, align 8
  %arrayidx449.1 = getelementptr inbounds i8, ptr %199, i64 16
  store i32 %shr443.1.sink, ptr %arrayidx449.1, align 4
  br label %if.end455

if.end455:                                        ; preds = %if.end455.sink.split, %if.then288
  %cmp456 = icmp slt i32 %cbp.1, 32
  br i1 %cmp456, label %if.then458, label %if.else464

if.then458:                                       ; preds = %if.end455
  %nz_coeff459 = getelementptr inbounds i8, ptr %3, i64 848832
  %200 = load ptr, ptr %nz_coeff459, align 8
  %idxprom460 = sext i32 %0 to i64
  %arrayidx461 = getelementptr inbounds ptr, ptr %200, i64 %idxprom460
  %201 = load ptr, ptr %arrayidx461, align 8
  %arrayidx462 = getelementptr inbounds i8, ptr %201, i64 8
  %202 = load ptr, ptr %arrayidx462, align 8
  %203 = load ptr, ptr %202, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(32) %203, i8 0, i64 32, i1 false)
  br label %if.end675

if.else464:                                       ; preds = %if.end455
  %204 = load i32, ptr %is_lossless.i, align 4
  %cmp466 = icmp eq i32 %204, 0
  %num_blk8x8_uv = getelementptr inbounds i8, ptr %3, i64 849096
  %205 = load i32, ptr %num_blk8x8_uv, align 8
  %cmp4701003 = icmp sgt i32 %205, 0
  br i1 %cmp466, label %for.cond469.preheader, label %for.cond586.preheader

for.cond586.preheader:                            ; preds = %if.else464
  br i1 %cmp4701003, label %for.body590.lr.ph, label %if.end675

for.body590.lr.ph:                                ; preds = %for.cond586.preheader
  %num_uv_blocks591 = getelementptr inbounds i8, ptr %3, i64 849100
  %is_v_block595 = getelementptr inbounds i8, ptr %currMB, i64 100
  %idxprom600 = sext i32 %sub to i64
  %cbp_blk634 = getelementptr inbounds i8, ptr %currMB, i64 288
  %cof651 = getelementptr inbounds i8, ptr %1, i64 1272
  br label %for.body590

for.cond469.preheader:                            ; preds = %if.else464
  br i1 %cmp4701003, label %for.body472.lr.ph, label %if.end675

for.body472.lr.ph:                                ; preds = %for.cond469.preheader
  %num_uv_blocks = getelementptr inbounds i8, ptr %3, i64 849100
  %is_v_block = getelementptr inbounds i8, ptr %currMB, i64 100
  %idxprom503 = sext i32 %sub to i64
  %cbp_blk537 = getelementptr inbounds i8, ptr %currMB, i64 288
  %cof563 = getelementptr inbounds i8, ptr %1, i64 1272
  %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter1064 = select i1 %cmp8, ptr %InvLevelScale4x4_Intra, ptr %InvLevelScale4x4_Inter
  br label %for.body472

for.body472:                                      ; preds = %for.body472.lr.ph, %for.inc579.3
  %indvars.iv1045 = phi i64 [ 0, %for.body472.lr.ph ], [ %indvars.iv.next1046, %for.inc579.3 ]
  %206 = load i32, ptr %num_uv_blocks, align 4
  %207 = sext i32 %206 to i64
  %cmp474 = icmp sge i64 %indvars.iv1045, %207
  %conv475 = zext i1 %cmp474 to i32
  store i32 %conv475, ptr %is_v_block, align 4
  %add479 = select i1 %cmp474, i64 2, i64 1
  %idxprom482 = zext i1 %cmp474 to i64
  %arrayidx483 = getelementptr inbounds [2 x i32], ptr %qp_rem_uv, i64 0, i64 %idxprom482
  %208 = load i32, ptr %arrayidx483, align 4
  %idxprom484 = sext i32 %208 to i64
  %arrayidx495 = getelementptr inbounds [3 x [6 x [4 x [4 x i32]]]], ptr %InvLevelScale4x4_Intra.InvLevelScale4x4_Inter1064, i64 0, i64 %add479, i64 %idxprom484
  %mul517 = select i1 %cmp474, i32 2, i32 0
  %arrayidx560 = getelementptr inbounds [2 x i32], ptr %qp_per_uv, i64 0, i64 %idxprom482
  %arrayidx508 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 0
  %209 = load i8, ptr %arrayidx508, align 4
  %conv509 = zext i8 %209 to i32
  %arrayidx515 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 0
  %210 = load i8, ptr %arrayidx515, align 4
  %conv516 = zext i8 %210 to i32
  %add518 = add nuw nsw i32 %mul517, %conv509
  %add519 = add nuw nsw i32 %conv516, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add518, i32 noundef %add519, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %211 = load i32, ptr %numcoeff, align 4
  %cmp523999 = icmp sgt i32 %211, 0
  br i1 %cmp523999, label %for.body525.lr.ph, label %for.inc579

for.body525.lr.ph:                                ; preds = %for.body472
  %arrayidx534 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1045, i64 0
  %shl567 = shl nuw nsw i32 %conv516, 2
  %shl571 = shl nuw nsw i32 %conv509, 2
  %wide.trip.count1039 = zext nneg i32 %211 to i64
  br label %for.body525

for.body525:                                      ; preds = %for.body525.lr.ph, %for.inc576
  %indvars.iv1036 = phi i64 [ 0, %for.body525.lr.ph ], [ %indvars.iv.next1037, %for.inc576 ]
  %coef_ctr.21000 = phi i32 [ 0, %for.body525.lr.ph ], [ %coef_ctr.3, %for.inc576 ]
  %arrayidx527 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1036
  %212 = load i32, ptr %arrayidx527, align 4
  %cmp528.not = icmp eq i32 %212, 0
  br i1 %cmp528.not, label %for.inc576, label %i64_power2.exit

i64_power2.exit:                                  ; preds = %for.body525
  %213 = load i8, ptr %arrayidx534, align 4
  %idxprom.i968 = zext nneg i8 %213 to i64
  %arrayidx.i969 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i968
  %214 = load i64, ptr %arrayidx.i969, align 8
  %215 = load i64, ptr %cbp_blk537, align 8
  %or539 = or i64 %215, %214
  store i64 %or539, ptr %cbp_blk537, align 8
  %arrayidx541 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1036
  %216 = load i32, ptr %arrayidx541, align 4
  %add542 = add i32 %coef_ctr.21000, 1
  %add543 = add i32 %add542, %216
  %idxprom544 = sext i32 %add543 to i64
  %arrayidx545 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom544
  %217 = load i8, ptr %arrayidx545, align 1
  %conv547 = zext i8 %217 to i32
  %arrayidx550 = getelementptr inbounds i8, ptr %arrayidx545, i64 1
  %218 = load i8, ptr %arrayidx550, align 1
  %conv551 = zext i8 %218 to i32
  %idxprom554 = zext i8 %218 to i64
  %idxprom556 = zext i8 %217 to i64
  %arrayidx557 = getelementptr inbounds [4 x i32], ptr %arrayidx495, i64 %idxprom554, i64 %idxprom556
  %219 = load i32, ptr %arrayidx557, align 4
  %mul558 = mul nsw i32 %219, %212
  %220 = load i32, ptr %arrayidx560, align 4
  %shl561 = shl i32 %mul558, %220
  %add.i970 = add nsw i32 %shl561, 8
  %shr.i = ashr i32 %add.i970, 4
  %221 = load ptr, ptr %cof563, align 8
  %arrayidx566 = getelementptr inbounds ptr, ptr %221, i64 %add479
  %222 = load ptr, ptr %arrayidx566, align 8
  %add568 = add nuw nsw i32 %shl567, %conv551
  %idxprom569 = zext nneg i32 %add568 to i64
  %arrayidx570 = getelementptr inbounds ptr, ptr %222, i64 %idxprom569
  %223 = load ptr, ptr %arrayidx570, align 8
  %add572 = add nuw nsw i32 %shl571, %conv547
  %idxprom573 = zext nneg i32 %add572 to i64
  %arrayidx574 = getelementptr inbounds i32, ptr %223, i64 %idxprom573
  store i32 %shr.i, ptr %arrayidx574, align 4
  br label %for.inc576

for.inc576:                                       ; preds = %for.body525, %i64_power2.exit
  %coef_ctr.3 = phi i32 [ %add543, %i64_power2.exit ], [ %coef_ctr.21000, %for.body525 ]
  %indvars.iv.next1037 = add nuw nsw i64 %indvars.iv1036, 1
  %exitcond1040.not = icmp eq i64 %indvars.iv.next1037, %wide.trip.count1039
  br i1 %exitcond1040.not, label %for.inc579, label %for.body525

for.inc579:                                       ; preds = %for.inc576, %for.body472
  %arrayidx508.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 1
  %224 = load i8, ptr %arrayidx508.1, align 1
  %conv509.1 = zext i8 %224 to i32
  %arrayidx515.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 1
  %225 = load i8, ptr %arrayidx515.1, align 1
  %conv516.1 = zext i8 %225 to i32
  %add518.1 = add nuw nsw i32 %mul517, %conv509.1
  %add519.1 = add nuw nsw i32 %conv516.1, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add518.1, i32 noundef %add519.1, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %226 = load i32, ptr %numcoeff, align 4
  %cmp523999.1 = icmp sgt i32 %226, 0
  br i1 %cmp523999.1, label %for.body525.lr.ph.1, label %for.inc579.1

for.body525.lr.ph.1:                              ; preds = %for.inc579
  %arrayidx534.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1045, i64 1
  %shl567.1 = shl nuw nsw i32 %conv516.1, 2
  %shl571.1 = shl nuw nsw i32 %conv509.1, 2
  %wide.trip.count1039.1 = zext nneg i32 %226 to i64
  br label %for.body525.1

for.body525.1:                                    ; preds = %for.inc576.1, %for.body525.lr.ph.1
  %indvars.iv1036.1 = phi i64 [ 0, %for.body525.lr.ph.1 ], [ %indvars.iv.next1037.1, %for.inc576.1 ]
  %coef_ctr.21000.1 = phi i32 [ 0, %for.body525.lr.ph.1 ], [ %coef_ctr.3.1, %for.inc576.1 ]
  %arrayidx527.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1036.1
  %227 = load i32, ptr %arrayidx527.1, align 4
  %cmp528.not.1 = icmp eq i32 %227, 0
  br i1 %cmp528.not.1, label %for.inc576.1, label %i64_power2.exit.1

i64_power2.exit.1:                                ; preds = %for.body525.1
  %228 = load i8, ptr %arrayidx534.1, align 1
  %idxprom.i968.1 = zext nneg i8 %228 to i64
  %arrayidx.i969.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i968.1
  %229 = load i64, ptr %arrayidx.i969.1, align 8
  %230 = load i64, ptr %cbp_blk537, align 8
  %or539.1 = or i64 %230, %229
  store i64 %or539.1, ptr %cbp_blk537, align 8
  %arrayidx541.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1036.1
  %231 = load i32, ptr %arrayidx541.1, align 4
  %add542.1 = add i32 %coef_ctr.21000.1, 1
  %add543.1 = add i32 %add542.1, %231
  %idxprom544.1 = sext i32 %add543.1 to i64
  %arrayidx545.1 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom544.1
  %232 = load i8, ptr %arrayidx545.1, align 1
  %conv547.1 = zext i8 %232 to i32
  %arrayidx550.1 = getelementptr inbounds i8, ptr %arrayidx545.1, i64 1
  %233 = load i8, ptr %arrayidx550.1, align 1
  %conv551.1 = zext i8 %233 to i32
  %idxprom554.1 = zext i8 %233 to i64
  %idxprom556.1 = zext i8 %232 to i64
  %arrayidx557.1 = getelementptr inbounds [4 x i32], ptr %arrayidx495, i64 %idxprom554.1, i64 %idxprom556.1
  %234 = load i32, ptr %arrayidx557.1, align 4
  %mul558.1 = mul nsw i32 %234, %227
  %235 = load i32, ptr %arrayidx560, align 4
  %shl561.1 = shl i32 %mul558.1, %235
  %add.i970.1 = add nsw i32 %shl561.1, 8
  %shr.i.1 = ashr i32 %add.i970.1, 4
  %236 = load ptr, ptr %cof563, align 8
  %arrayidx566.1 = getelementptr inbounds ptr, ptr %236, i64 %add479
  %237 = load ptr, ptr %arrayidx566.1, align 8
  %add568.1 = add nuw nsw i32 %shl567.1, %conv551.1
  %idxprom569.1 = zext nneg i32 %add568.1 to i64
  %arrayidx570.1 = getelementptr inbounds ptr, ptr %237, i64 %idxprom569.1
  %238 = load ptr, ptr %arrayidx570.1, align 8
  %add572.1 = add nuw nsw i32 %shl571.1, %conv547.1
  %idxprom573.1 = zext nneg i32 %add572.1 to i64
  %arrayidx574.1 = getelementptr inbounds i32, ptr %238, i64 %idxprom573.1
  store i32 %shr.i.1, ptr %arrayidx574.1, align 4
  br label %for.inc576.1

for.inc576.1:                                     ; preds = %i64_power2.exit.1, %for.body525.1
  %coef_ctr.3.1 = phi i32 [ %add543.1, %i64_power2.exit.1 ], [ %coef_ctr.21000.1, %for.body525.1 ]
  %indvars.iv.next1037.1 = add nuw nsw i64 %indvars.iv1036.1, 1
  %exitcond1040.1.not = icmp eq i64 %indvars.iv.next1037.1, %wide.trip.count1039.1
  br i1 %exitcond1040.1.not, label %for.inc579.1, label %for.body525.1

for.inc579.1:                                     ; preds = %for.inc576.1, %for.inc579
  %arrayidx508.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 2
  %239 = load i8, ptr %arrayidx508.2, align 2
  %conv509.2 = zext i8 %239 to i32
  %arrayidx515.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 2
  %240 = load i8, ptr %arrayidx515.2, align 2
  %conv516.2 = zext i8 %240 to i32
  %add518.2 = add nuw nsw i32 %mul517, %conv509.2
  %add519.2 = add nuw nsw i32 %conv516.2, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add518.2, i32 noundef %add519.2, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %241 = load i32, ptr %numcoeff, align 4
  %cmp523999.2 = icmp sgt i32 %241, 0
  br i1 %cmp523999.2, label %for.body525.lr.ph.2, label %for.inc579.2

for.body525.lr.ph.2:                              ; preds = %for.inc579.1
  %arrayidx534.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1045, i64 2
  %shl567.2 = shl nuw nsw i32 %conv516.2, 2
  %shl571.2 = shl nuw nsw i32 %conv509.2, 2
  %wide.trip.count1039.2 = zext nneg i32 %241 to i64
  br label %for.body525.2

for.body525.2:                                    ; preds = %for.inc576.2, %for.body525.lr.ph.2
  %indvars.iv1036.2 = phi i64 [ 0, %for.body525.lr.ph.2 ], [ %indvars.iv.next1037.2, %for.inc576.2 ]
  %coef_ctr.21000.2 = phi i32 [ 0, %for.body525.lr.ph.2 ], [ %coef_ctr.3.2, %for.inc576.2 ]
  %arrayidx527.2 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1036.2
  %242 = load i32, ptr %arrayidx527.2, align 4
  %cmp528.not.2 = icmp eq i32 %242, 0
  br i1 %cmp528.not.2, label %for.inc576.2, label %i64_power2.exit.2

i64_power2.exit.2:                                ; preds = %for.body525.2
  %243 = load i8, ptr %arrayidx534.2, align 2
  %idxprom.i968.2 = zext nneg i8 %243 to i64
  %arrayidx.i969.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i968.2
  %244 = load i64, ptr %arrayidx.i969.2, align 8
  %245 = load i64, ptr %cbp_blk537, align 8
  %or539.2 = or i64 %245, %244
  store i64 %or539.2, ptr %cbp_blk537, align 8
  %arrayidx541.2 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1036.2
  %246 = load i32, ptr %arrayidx541.2, align 4
  %add542.2 = add i32 %coef_ctr.21000.2, 1
  %add543.2 = add i32 %add542.2, %246
  %idxprom544.2 = sext i32 %add543.2 to i64
  %arrayidx545.2 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom544.2
  %247 = load i8, ptr %arrayidx545.2, align 1
  %conv547.2 = zext i8 %247 to i32
  %arrayidx550.2 = getelementptr inbounds i8, ptr %arrayidx545.2, i64 1
  %248 = load i8, ptr %arrayidx550.2, align 1
  %conv551.2 = zext i8 %248 to i32
  %idxprom554.2 = zext i8 %248 to i64
  %idxprom556.2 = zext i8 %247 to i64
  %arrayidx557.2 = getelementptr inbounds [4 x i32], ptr %arrayidx495, i64 %idxprom554.2, i64 %idxprom556.2
  %249 = load i32, ptr %arrayidx557.2, align 4
  %mul558.2 = mul nsw i32 %249, %242
  %250 = load i32, ptr %arrayidx560, align 4
  %shl561.2 = shl i32 %mul558.2, %250
  %add.i970.2 = add nsw i32 %shl561.2, 8
  %shr.i.2 = ashr i32 %add.i970.2, 4
  %251 = load ptr, ptr %cof563, align 8
  %arrayidx566.2 = getelementptr inbounds ptr, ptr %251, i64 %add479
  %252 = load ptr, ptr %arrayidx566.2, align 8
  %add568.2 = add nuw nsw i32 %shl567.2, %conv551.2
  %idxprom569.2 = zext nneg i32 %add568.2 to i64
  %arrayidx570.2 = getelementptr inbounds ptr, ptr %252, i64 %idxprom569.2
  %253 = load ptr, ptr %arrayidx570.2, align 8
  %add572.2 = add nuw nsw i32 %shl571.2, %conv547.2
  %idxprom573.2 = zext nneg i32 %add572.2 to i64
  %arrayidx574.2 = getelementptr inbounds i32, ptr %253, i64 %idxprom573.2
  store i32 %shr.i.2, ptr %arrayidx574.2, align 4
  br label %for.inc576.2

for.inc576.2:                                     ; preds = %i64_power2.exit.2, %for.body525.2
  %coef_ctr.3.2 = phi i32 [ %add543.2, %i64_power2.exit.2 ], [ %coef_ctr.21000.2, %for.body525.2 ]
  %indvars.iv.next1037.2 = add nuw nsw i64 %indvars.iv1036.2, 1
  %exitcond1040.2.not = icmp eq i64 %indvars.iv.next1037.2, %wide.trip.count1039.2
  br i1 %exitcond1040.2.not, label %for.inc579.2, label %for.body525.2

for.inc579.2:                                     ; preds = %for.inc576.2, %for.inc579.1
  %arrayidx508.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 3
  %254 = load i8, ptr %arrayidx508.3, align 1
  %conv509.3 = zext i8 %254 to i32
  %arrayidx515.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom503, i64 %indvars.iv1045, i64 3
  %255 = load i8, ptr %arrayidx515.3, align 1
  %conv516.3 = zext i8 %255 to i32
  %add518.3 = add nuw nsw i32 %mul517, %conv509.3
  %add519.3 = add nuw nsw i32 %conv516.3, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add518.3, i32 noundef %add519.3, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %256 = load i32, ptr %numcoeff, align 4
  %cmp523999.3 = icmp sgt i32 %256, 0
  br i1 %cmp523999.3, label %for.body525.lr.ph.3, label %for.inc579.3

for.body525.lr.ph.3:                              ; preds = %for.inc579.2
  %arrayidx534.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1045, i64 3
  %shl567.3 = shl nuw nsw i32 %conv516.3, 2
  %shl571.3 = shl nuw nsw i32 %conv509.3, 2
  %wide.trip.count1039.3 = zext nneg i32 %256 to i64
  br label %for.body525.3

for.body525.3:                                    ; preds = %for.inc576.3, %for.body525.lr.ph.3
  %indvars.iv1036.3 = phi i64 [ 0, %for.body525.lr.ph.3 ], [ %indvars.iv.next1037.3, %for.inc576.3 ]
  %coef_ctr.21000.3 = phi i32 [ 0, %for.body525.lr.ph.3 ], [ %coef_ctr.3.3, %for.inc576.3 ]
  %arrayidx527.3 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1036.3
  %257 = load i32, ptr %arrayidx527.3, align 4
  %cmp528.not.3 = icmp eq i32 %257, 0
  br i1 %cmp528.not.3, label %for.inc576.3, label %i64_power2.exit.3

i64_power2.exit.3:                                ; preds = %for.body525.3
  %258 = load i8, ptr %arrayidx534.3, align 1
  %idxprom.i968.3 = zext nneg i8 %258 to i64
  %arrayidx.i969.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i968.3
  %259 = load i64, ptr %arrayidx.i969.3, align 8
  %260 = load i64, ptr %cbp_blk537, align 8
  %or539.3 = or i64 %260, %259
  store i64 %or539.3, ptr %cbp_blk537, align 8
  %arrayidx541.3 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1036.3
  %261 = load i32, ptr %arrayidx541.3, align 4
  %add542.3 = add i32 %coef_ctr.21000.3, 1
  %add543.3 = add i32 %add542.3, %261
  %idxprom544.3 = sext i32 %add543.3 to i64
  %arrayidx545.3 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom544.3
  %262 = load i8, ptr %arrayidx545.3, align 1
  %conv547.3 = zext i8 %262 to i32
  %arrayidx550.3 = getelementptr inbounds i8, ptr %arrayidx545.3, i64 1
  %263 = load i8, ptr %arrayidx550.3, align 1
  %conv551.3 = zext i8 %263 to i32
  %idxprom554.3 = zext i8 %263 to i64
  %idxprom556.3 = zext i8 %262 to i64
  %arrayidx557.3 = getelementptr inbounds [4 x i32], ptr %arrayidx495, i64 %idxprom554.3, i64 %idxprom556.3
  %264 = load i32, ptr %arrayidx557.3, align 4
  %mul558.3 = mul nsw i32 %264, %257
  %265 = load i32, ptr %arrayidx560, align 4
  %shl561.3 = shl i32 %mul558.3, %265
  %add.i970.3 = add nsw i32 %shl561.3, 8
  %shr.i.3 = ashr i32 %add.i970.3, 4
  %266 = load ptr, ptr %cof563, align 8
  %arrayidx566.3 = getelementptr inbounds ptr, ptr %266, i64 %add479
  %267 = load ptr, ptr %arrayidx566.3, align 8
  %add568.3 = add nuw nsw i32 %shl567.3, %conv551.3
  %idxprom569.3 = zext nneg i32 %add568.3 to i64
  %arrayidx570.3 = getelementptr inbounds ptr, ptr %267, i64 %idxprom569.3
  %268 = load ptr, ptr %arrayidx570.3, align 8
  %add572.3 = add nuw nsw i32 %shl571.3, %conv547.3
  %idxprom573.3 = zext nneg i32 %add572.3 to i64
  %arrayidx574.3 = getelementptr inbounds i32, ptr %268, i64 %idxprom573.3
  store i32 %shr.i.3, ptr %arrayidx574.3, align 4
  br label %for.inc576.3

for.inc576.3:                                     ; preds = %i64_power2.exit.3, %for.body525.3
  %coef_ctr.3.3 = phi i32 [ %add543.3, %i64_power2.exit.3 ], [ %coef_ctr.21000.3, %for.body525.3 ]
  %indvars.iv.next1037.3 = add nuw nsw i64 %indvars.iv1036.3, 1
  %exitcond1040.3.not = icmp eq i64 %indvars.iv.next1037.3, %wide.trip.count1039.3
  br i1 %exitcond1040.3.not, label %for.inc579.3, label %for.body525.3

for.inc579.3:                                     ; preds = %for.inc576.3, %for.inc579.2
  %indvars.iv.next1046 = add nuw nsw i64 %indvars.iv1045, 1
  %269 = load i32, ptr %num_blk8x8_uv, align 8
  %270 = sext i32 %269 to i64
  %cmp470 = icmp slt i64 %indvars.iv.next1046, %270
  br i1 %cmp470, label %for.body472, label %if.end675

for.body590:                                      ; preds = %for.body590.lr.ph, %for.inc667.3
  %indvars.iv1033 = phi i64 [ 0, %for.body590.lr.ph ], [ %indvars.iv.next1034, %for.inc667.3 ]
  %271 = load i32, ptr %num_uv_blocks591, align 4
  %272 = sext i32 %271 to i64
  %cmp593 = icmp sge i64 %indvars.iv1033, %272
  %conv594 = zext i1 %cmp593 to i32
  store i32 %conv594, ptr %is_v_block595, align 4
  %mul614 = select i1 %cmp593, i32 2, i32 0
  %add652 = select i1 %cmp593, i64 2, i64 1
  %arrayidx605 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 0
  %273 = load i8, ptr %arrayidx605, align 4
  %conv606 = zext i8 %273 to i32
  %arrayidx612 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 0
  %274 = load i8, ptr %arrayidx612, align 4
  %conv613 = zext i8 %274 to i32
  %add615 = add nuw nsw i32 %mul614, %conv606
  %add616 = add nuw nsw i32 %conv613, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add615, i32 noundef %add616, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %275 = load i32, ptr %numcoeff, align 4
  %cmp620993 = icmp sgt i32 %275, 0
  br i1 %cmp620993, label %for.body622.lr.ph, label %for.inc667

for.body622.lr.ph:                                ; preds = %for.body590
  %arrayidx631 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1033, i64 0
  %shl655 = shl nuw nsw i32 %conv613, 2
  %shl659 = shl nuw nsw i32 %conv606, 2
  %wide.trip.count1027 = zext nneg i32 %275 to i64
  br label %for.body622

for.body622:                                      ; preds = %for.body622.lr.ph, %for.inc664
  %indvars.iv1024 = phi i64 [ 0, %for.body622.lr.ph ], [ %indvars.iv.next1025, %for.inc664 ]
  %coef_ctr.4994 = phi i32 [ 0, %for.body622.lr.ph ], [ %coef_ctr.5, %for.inc664 ]
  %arrayidx624 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1024
  %276 = load i32, ptr %arrayidx624, align 4
  %cmp625.not = icmp eq i32 %276, 0
  br i1 %cmp625.not, label %for.inc664, label %i64_power2.exit976

i64_power2.exit976:                               ; preds = %for.body622
  %277 = load i8, ptr %arrayidx631, align 4
  %idxprom.i973 = zext nneg i8 %277 to i64
  %arrayidx.i974 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i973
  %278 = load i64, ptr %arrayidx.i974, align 8
  %279 = load i64, ptr %cbp_blk634, align 8
  %or636 = or i64 %279, %278
  store i64 %or636, ptr %cbp_blk634, align 8
  %arrayidx638 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1024
  %280 = load i32, ptr %arrayidx638, align 4
  %add639 = add i32 %coef_ctr.4994, 1
  %add640 = add i32 %add639, %280
  %idxprom641 = sext i32 %add640 to i64
  %arrayidx642 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom641
  %281 = load i8, ptr %arrayidx642, align 1
  %conv644 = zext i8 %281 to i32
  %arrayidx647 = getelementptr inbounds i8, ptr %arrayidx642, i64 1
  %282 = load i8, ptr %arrayidx647, align 1
  %conv648 = zext i8 %282 to i32
  %283 = load ptr, ptr %cof651, align 8
  %arrayidx654 = getelementptr inbounds ptr, ptr %283, i64 %add652
  %284 = load ptr, ptr %arrayidx654, align 8
  %add656 = add nuw nsw i32 %shl655, %conv648
  %idxprom657 = zext nneg i32 %add656 to i64
  %arrayidx658 = getelementptr inbounds ptr, ptr %284, i64 %idxprom657
  %285 = load ptr, ptr %arrayidx658, align 8
  %add660 = add nuw nsw i32 %shl659, %conv644
  %idxprom661 = zext nneg i32 %add660 to i64
  %arrayidx662 = getelementptr inbounds i32, ptr %285, i64 %idxprom661
  store i32 %276, ptr %arrayidx662, align 4
  br label %for.inc664

for.inc664:                                       ; preds = %for.body622, %i64_power2.exit976
  %coef_ctr.5 = phi i32 [ %add640, %i64_power2.exit976 ], [ %coef_ctr.4994, %for.body622 ]
  %indvars.iv.next1025 = add nuw nsw i64 %indvars.iv1024, 1
  %exitcond1028.not = icmp eq i64 %indvars.iv.next1025, %wide.trip.count1027
  br i1 %exitcond1028.not, label %for.inc667, label %for.body622

for.inc667:                                       ; preds = %for.inc664, %for.body590
  %arrayidx605.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 1
  %286 = load i8, ptr %arrayidx605.1, align 1
  %conv606.1 = zext i8 %286 to i32
  %arrayidx612.1 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 1
  %287 = load i8, ptr %arrayidx612.1, align 1
  %conv613.1 = zext i8 %287 to i32
  %add615.1 = add nuw nsw i32 %mul614, %conv606.1
  %add616.1 = add nuw nsw i32 %conv613.1, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add615.1, i32 noundef %add616.1, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %288 = load i32, ptr %numcoeff, align 4
  %cmp620993.1 = icmp sgt i32 %288, 0
  br i1 %cmp620993.1, label %for.body622.lr.ph.1, label %for.inc667.1

for.body622.lr.ph.1:                              ; preds = %for.inc667
  %arrayidx631.1 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1033, i64 1
  %shl655.1 = shl nuw nsw i32 %conv613.1, 2
  %shl659.1 = shl nuw nsw i32 %conv606.1, 2
  %wide.trip.count1027.1 = zext nneg i32 %288 to i64
  br label %for.body622.1

for.body622.1:                                    ; preds = %for.inc664.1, %for.body622.lr.ph.1
  %indvars.iv1024.1 = phi i64 [ 0, %for.body622.lr.ph.1 ], [ %indvars.iv.next1025.1, %for.inc664.1 ]
  %coef_ctr.4994.1 = phi i32 [ 0, %for.body622.lr.ph.1 ], [ %coef_ctr.5.1, %for.inc664.1 ]
  %arrayidx624.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1024.1
  %289 = load i32, ptr %arrayidx624.1, align 4
  %cmp625.not.1 = icmp eq i32 %289, 0
  br i1 %cmp625.not.1, label %for.inc664.1, label %i64_power2.exit976.1

i64_power2.exit976.1:                             ; preds = %for.body622.1
  %290 = load i8, ptr %arrayidx631.1, align 1
  %idxprom.i973.1 = zext nneg i8 %290 to i64
  %arrayidx.i974.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i973.1
  %291 = load i64, ptr %arrayidx.i974.1, align 8
  %292 = load i64, ptr %cbp_blk634, align 8
  %or636.1 = or i64 %292, %291
  store i64 %or636.1, ptr %cbp_blk634, align 8
  %arrayidx638.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1024.1
  %293 = load i32, ptr %arrayidx638.1, align 4
  %add639.1 = add i32 %coef_ctr.4994.1, 1
  %add640.1 = add i32 %add639.1, %293
  %idxprom641.1 = sext i32 %add640.1 to i64
  %arrayidx642.1 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom641.1
  %294 = load i8, ptr %arrayidx642.1, align 1
  %conv644.1 = zext i8 %294 to i32
  %arrayidx647.1 = getelementptr inbounds i8, ptr %arrayidx642.1, i64 1
  %295 = load i8, ptr %arrayidx647.1, align 1
  %conv648.1 = zext i8 %295 to i32
  %296 = load ptr, ptr %cof651, align 8
  %arrayidx654.1 = getelementptr inbounds ptr, ptr %296, i64 %add652
  %297 = load ptr, ptr %arrayidx654.1, align 8
  %add656.1 = add nuw nsw i32 %shl655.1, %conv648.1
  %idxprom657.1 = zext nneg i32 %add656.1 to i64
  %arrayidx658.1 = getelementptr inbounds ptr, ptr %297, i64 %idxprom657.1
  %298 = load ptr, ptr %arrayidx658.1, align 8
  %add660.1 = add nuw nsw i32 %shl659.1, %conv644.1
  %idxprom661.1 = zext nneg i32 %add660.1 to i64
  %arrayidx662.1 = getelementptr inbounds i32, ptr %298, i64 %idxprom661.1
  store i32 %289, ptr %arrayidx662.1, align 4
  br label %for.inc664.1

for.inc664.1:                                     ; preds = %i64_power2.exit976.1, %for.body622.1
  %coef_ctr.5.1 = phi i32 [ %add640.1, %i64_power2.exit976.1 ], [ %coef_ctr.4994.1, %for.body622.1 ]
  %indvars.iv.next1025.1 = add nuw nsw i64 %indvars.iv1024.1, 1
  %exitcond1028.1.not = icmp eq i64 %indvars.iv.next1025.1, %wide.trip.count1027.1
  br i1 %exitcond1028.1.not, label %for.inc667.1, label %for.body622.1

for.inc667.1:                                     ; preds = %for.inc664.1, %for.inc667
  %arrayidx605.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 2
  %299 = load i8, ptr %arrayidx605.2, align 2
  %conv606.2 = zext i8 %299 to i32
  %arrayidx612.2 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 2
  %300 = load i8, ptr %arrayidx612.2, align 2
  %conv613.2 = zext i8 %300 to i32
  %add615.2 = add nuw nsw i32 %mul614, %conv606.2
  %add616.2 = add nuw nsw i32 %conv613.2, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add615.2, i32 noundef %add616.2, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %301 = load i32, ptr %numcoeff, align 4
  %cmp620993.2 = icmp sgt i32 %301, 0
  br i1 %cmp620993.2, label %for.body622.lr.ph.2, label %for.inc667.2

for.body622.lr.ph.2:                              ; preds = %for.inc667.1
  %arrayidx631.2 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1033, i64 2
  %shl655.2 = shl nuw nsw i32 %conv613.2, 2
  %shl659.2 = shl nuw nsw i32 %conv606.2, 2
  %wide.trip.count1027.2 = zext nneg i32 %301 to i64
  br label %for.body622.2

for.body622.2:                                    ; preds = %for.inc664.2, %for.body622.lr.ph.2
  %indvars.iv1024.2 = phi i64 [ 0, %for.body622.lr.ph.2 ], [ %indvars.iv.next1025.2, %for.inc664.2 ]
  %coef_ctr.4994.2 = phi i32 [ 0, %for.body622.lr.ph.2 ], [ %coef_ctr.5.2, %for.inc664.2 ]
  %arrayidx624.2 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1024.2
  %302 = load i32, ptr %arrayidx624.2, align 4
  %cmp625.not.2 = icmp eq i32 %302, 0
  br i1 %cmp625.not.2, label %for.inc664.2, label %i64_power2.exit976.2

i64_power2.exit976.2:                             ; preds = %for.body622.2
  %303 = load i8, ptr %arrayidx631.2, align 2
  %idxprom.i973.2 = zext nneg i8 %303 to i64
  %arrayidx.i974.2 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i973.2
  %304 = load i64, ptr %arrayidx.i974.2, align 8
  %305 = load i64, ptr %cbp_blk634, align 8
  %or636.2 = or i64 %305, %304
  store i64 %or636.2, ptr %cbp_blk634, align 8
  %arrayidx638.2 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1024.2
  %306 = load i32, ptr %arrayidx638.2, align 4
  %add639.2 = add i32 %coef_ctr.4994.2, 1
  %add640.2 = add i32 %add639.2, %306
  %idxprom641.2 = sext i32 %add640.2 to i64
  %arrayidx642.2 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom641.2
  %307 = load i8, ptr %arrayidx642.2, align 1
  %conv644.2 = zext i8 %307 to i32
  %arrayidx647.2 = getelementptr inbounds i8, ptr %arrayidx642.2, i64 1
  %308 = load i8, ptr %arrayidx647.2, align 1
  %conv648.2 = zext i8 %308 to i32
  %309 = load ptr, ptr %cof651, align 8
  %arrayidx654.2 = getelementptr inbounds ptr, ptr %309, i64 %add652
  %310 = load ptr, ptr %arrayidx654.2, align 8
  %add656.2 = add nuw nsw i32 %shl655.2, %conv648.2
  %idxprom657.2 = zext nneg i32 %add656.2 to i64
  %arrayidx658.2 = getelementptr inbounds ptr, ptr %310, i64 %idxprom657.2
  %311 = load ptr, ptr %arrayidx658.2, align 8
  %add660.2 = add nuw nsw i32 %shl659.2, %conv644.2
  %idxprom661.2 = zext nneg i32 %add660.2 to i64
  %arrayidx662.2 = getelementptr inbounds i32, ptr %311, i64 %idxprom661.2
  store i32 %302, ptr %arrayidx662.2, align 4
  br label %for.inc664.2

for.inc664.2:                                     ; preds = %i64_power2.exit976.2, %for.body622.2
  %coef_ctr.5.2 = phi i32 [ %add640.2, %i64_power2.exit976.2 ], [ %coef_ctr.4994.2, %for.body622.2 ]
  %indvars.iv.next1025.2 = add nuw nsw i64 %indvars.iv1024.2, 1
  %exitcond1028.2.not = icmp eq i64 %indvars.iv.next1025.2, %wide.trip.count1027.2
  br i1 %exitcond1028.2.not, label %for.inc667.2, label %for.body622.2

for.inc667.2:                                     ; preds = %for.inc664.2, %for.inc667.1
  %arrayidx605.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_x, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 3
  %312 = load i8, ptr %arrayidx605.3, align 1
  %conv606.3 = zext i8 %312 to i32
  %arrayidx612.3 = getelementptr inbounds [3 x [8 x [4 x i8]]], ptr @cofuv_blk_y, i64 0, i64 %idxprom600, i64 %indvars.iv1033, i64 3
  %313 = load i8, ptr %arrayidx612.3, align 1
  %conv613.3 = zext i8 %313 to i32
  %add615.3 = add nuw nsw i32 %mul614, %conv606.3
  %add616.3 = add nuw nsw i32 %conv613.3, 4
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef 7, i32 noundef %add615.3, i32 noundef %add616.3, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %314 = load i32, ptr %numcoeff, align 4
  %cmp620993.3 = icmp sgt i32 %314, 0
  br i1 %cmp620993.3, label %for.body622.lr.ph.3, label %for.inc667.3

for.body622.lr.ph.3:                              ; preds = %for.inc667.2
  %arrayidx631.3 = getelementptr inbounds [8 x [4 x i8]], ptr @cbp_blk_chroma, i64 0, i64 %indvars.iv1033, i64 3
  %shl655.3 = shl nuw nsw i32 %conv613.3, 2
  %shl659.3 = shl nuw nsw i32 %conv606.3, 2
  %wide.trip.count1027.3 = zext nneg i32 %314 to i64
  br label %for.body622.3

for.body622.3:                                    ; preds = %for.inc664.3, %for.body622.lr.ph.3
  %indvars.iv1024.3 = phi i64 [ 0, %for.body622.lr.ph.3 ], [ %indvars.iv.next1025.3, %for.inc664.3 ]
  %coef_ctr.4994.3 = phi i32 [ 0, %for.body622.lr.ph.3 ], [ %coef_ctr.5.3, %for.inc664.3 ]
  %arrayidx624.3 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv1024.3
  %315 = load i32, ptr %arrayidx624.3, align 4
  %cmp625.not.3 = icmp eq i32 %315, 0
  br i1 %cmp625.not.3, label %for.inc664.3, label %i64_power2.exit976.3

i64_power2.exit976.3:                             ; preds = %for.body622.3
  %316 = load i8, ptr %arrayidx631.3, align 1
  %idxprom.i973.3 = zext nneg i8 %316 to i64
  %arrayidx.i974.3 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i973.3
  %317 = load i64, ptr %arrayidx.i974.3, align 8
  %318 = load i64, ptr %cbp_blk634, align 8
  %or636.3 = or i64 %318, %317
  store i64 %or636.3, ptr %cbp_blk634, align 8
  %arrayidx638.3 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv1024.3
  %319 = load i32, ptr %arrayidx638.3, align 4
  %add639.3 = add i32 %coef_ctr.4994.3, 1
  %add640.3 = add i32 %add639.3, %319
  %idxprom641.3 = sext i32 %add640.3 to i64
  %arrayidx642.3 = getelementptr inbounds [2 x i8], ptr %13, i64 %idxprom641.3
  %320 = load i8, ptr %arrayidx642.3, align 1
  %conv644.3 = zext i8 %320 to i32
  %arrayidx647.3 = getelementptr inbounds i8, ptr %arrayidx642.3, i64 1
  %321 = load i8, ptr %arrayidx647.3, align 1
  %conv648.3 = zext i8 %321 to i32
  %322 = load ptr, ptr %cof651, align 8
  %arrayidx654.3 = getelementptr inbounds ptr, ptr %322, i64 %add652
  %323 = load ptr, ptr %arrayidx654.3, align 8
  %add656.3 = add nuw nsw i32 %shl655.3, %conv648.3
  %idxprom657.3 = zext nneg i32 %add656.3 to i64
  %arrayidx658.3 = getelementptr inbounds ptr, ptr %323, i64 %idxprom657.3
  %324 = load ptr, ptr %arrayidx658.3, align 8
  %add660.3 = add nuw nsw i32 %shl659.3, %conv644.3
  %idxprom661.3 = zext nneg i32 %add660.3 to i64
  %arrayidx662.3 = getelementptr inbounds i32, ptr %324, i64 %idxprom661.3
  store i32 %315, ptr %arrayidx662.3, align 4
  br label %for.inc664.3

for.inc664.3:                                     ; preds = %i64_power2.exit976.3, %for.body622.3
  %coef_ctr.5.3 = phi i32 [ %add640.3, %i64_power2.exit976.3 ], [ %coef_ctr.4994.3, %for.body622.3 ]
  %indvars.iv.next1025.3 = add nuw nsw i64 %indvars.iv1024.3, 1
  %exitcond1028.3.not = icmp eq i64 %indvars.iv.next1025.3, %wide.trip.count1027.3
  br i1 %exitcond1028.3.not, label %for.inc667.3, label %for.body622.3

for.inc667.3:                                     ; preds = %for.inc664.3, %for.inc667.2
  %indvars.iv.next1034 = add nuw nsw i64 %indvars.iv1033, 1
  %325 = load i32, ptr %num_blk8x8_uv, align 8
  %326 = sext i32 %325 to i64
  %cmp588 = icmp slt i64 %indvars.iv.next1034, %326
  br i1 %cmp588, label %for.body590, label %if.end675

if.end675:                                        ; preds = %for.inc667.3, %for.inc579.3, %for.cond586.preheader, %for.cond469.preheader, %if.then458, %if.end284
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %temp) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_rem_uv) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qp_per_uv) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @SetB8Mode(ptr nocapture noundef %currMB, i32 noundef %value, i32 noundef %i) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr %currMB, align 8
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %1 = load i32, ptr %slice_type, align 4
  %cmp = icmp eq i32 %1, 1
  %idxprom = sext i32 %value to i64
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  %idxprom1 = sext i32 %i to i64
  %arrayidx2 = getelementptr inbounds [4 x i8], ptr %b8mode, i64 0, i64 %idxprom1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2b8, i64 0, i64 %idxprom
  %2 = load i8, ptr %arrayidx, align 1
  store i8 %2, ptr %arrayidx2, align 1
  %arrayidx4 = getelementptr inbounds [14 x i8], ptr @SetB8Mode.b_v2pd, i64 0, i64 %idxprom
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2b8, i64 0, i64 %idxprom
  %3 = load i8, ptr %arrayidx8, align 1
  store i8 %3, ptr %arrayidx2, align 1
  %arrayidx13 = getelementptr inbounds [5 x i8], ptr @SetB8Mode.p_v2pd, i64 0, i64 %idxprom
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx13.sink = phi ptr [ %arrayidx13, %if.else ], [ %arrayidx4, %if.then ]
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  %arrayidx6 = getelementptr inbounds [4 x i8], ptr %b8pdir, i64 0, i64 %idxprom1
  %4 = load i8, ptr %arrayidx13.sink, align 1
  store i8 %4, ptr %arrayidx6, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @reset_coeffs(ptr nocapture noundef readonly %currSlice) local_unnamed_addr #2 {
entry:
  %0 = load ptr, ptr %currSlice, align 8
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %1 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %1, i64 12
  %2 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %nz_coeff = getelementptr inbounds i8, ptr %0, i64 848832
  %3 = load ptr, ptr %nz_coeff, align 8
  %current_mb_nr = getelementptr inbounds i8, ptr %currSlice, i64 108
  %4 = load i32, ptr %current_mb_nr, align 4
  %idxprom = zext i32 %4 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %3, i64 %idxprom
  %5 = load ptr, ptr %arrayidx, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr %6, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %7, i8 0, i64 48, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @field_flag_inference(ptr nocapture noundef %currMB) local_unnamed_addr #0 {
entry:
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %mbAvailA = getelementptr inbounds i8, ptr %currMB, i64 404
  %1 = load i32, ptr %mbAvailA, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.else, label %if.end.sink.split

if.else:                                          ; preds = %entry
  %mbAvailB = getelementptr inbounds i8, ptr %currMB, i64 408
  %2 = load i32, ptr %mbAvailB, align 8
  %tobool3.not = icmp eq i32 %2, 0
  br i1 %tobool3.not, label %if.end, label %if.end.sink.split

if.end.sink.split:                                ; preds = %if.else, %entry
  %.sink17 = phi i64 [ 388, %entry ], [ 392, %if.else ]
  %mbAddrA = getelementptr inbounds i8, ptr %currMB, i64 %.sink17
  %.sink.in = getelementptr inbounds i8, ptr %0, i64 848888
  %.sink = load ptr, ptr %.sink.in, align 8
  %.sink16 = load i32, ptr %mbAddrA, align 4
  %idxprom5 = sext i32 %.sink16 to i64
  %mb_field7 = getelementptr inbounds %struct.macroblock, ptr %.sink, i64 %idxprom5, i32 45
  %3 = load i32, ptr %mb_field7, align 8
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %if.else
  %cond.sink = phi i32 [ 0, %if.else ], [ %3, %if.end.sink.split ]
  %mb_field8 = getelementptr inbounds i8, ptr %currMB, i64 384
  store i32 %cond.sink, ptr %mb_field8, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @skip_macroblock(ptr noundef %currMB) local_unnamed_addr #3 {
entry:
  %pred_mv = alloca %struct.MotionVector, align 4
  %mb = alloca [4 x %struct.pix_pos], align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pred_mv) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %mb) #14
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %0 = load i32, ptr %block_y, align 4
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %2 = load ptr, ptr %currMB, align 8
  %list_offset2 = getelementptr inbounds i8, ptr %currMB, i64 114
  %3 = load i16, ptr %list_offset2, align 2
  %dec_picture3 = getelementptr inbounds i8, ptr %2, i64 13520
  %4 = load ptr, ptr %dec_picture3, align 8
  %mb_size2.i = getelementptr inbounds i8, ptr %1, i64 849124
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef 0, ptr noundef nonnull %mb_size2.i, ptr noundef nonnull %mb) #14
  %add.ptr.i = getelementptr inbounds i8, ptr %mb, i64 16
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef -1, ptr noundef nonnull %mb_size2.i, ptr noundef nonnull %add.ptr.i) #14
  %add.ptr5.i = getelementptr inbounds i8, ptr %mb, i64 32
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef 16, i32 noundef -1, ptr noundef nonnull %mb_size2.i, ptr noundef nonnull %add.ptr5.i) #14
  %.pr.i = load i32, ptr %add.ptr5.i, align 16
  %tobool.not.i = icmp eq i32 %.pr.i, 0
  br i1 %tobool.not.i, label %if.then31.i, label %get_neighbors.exit

if.then31.i:                                      ; preds = %entry
  %add.ptr34.i = getelementptr inbounds i8, ptr %mb, i64 48
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef -1, i32 noundef -1, ptr noundef nonnull %mb_size2.i, ptr noundef nonnull %add.ptr34.i) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %add.ptr5.i, ptr noundef nonnull align 16 dereferenceable(16) %add.ptr34.i, i64 16, i1 false)
  br label %get_neighbors.exit

get_neighbors.exit:                               ; preds = %entry, %if.then31.i
  %5 = load i32, ptr %mb, align 16
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end42, label %if.then

if.then:                                          ; preds = %get_neighbors.exit
  %mv_info = getelementptr inbounds i8, ptr %4, i64 152
  %6 = load ptr, ptr %mv_info, align 8
  %pos_y = getelementptr inbounds i8, ptr %mb, i64 14
  %7 = load i16, ptr %pos_y, align 2
  %idxprom = sext i16 %7 to i64
  %arrayidx5 = getelementptr inbounds ptr, ptr %6, i64 %idxprom
  %8 = load ptr, ptr %arrayidx5, align 8
  %pos_x = getelementptr inbounds i8, ptr %mb, i64 12
  %9 = load i16, ptr %pos_x, align 4
  %idxprom7 = sext i16 %9 to i64
  %arrayidx8 = getelementptr inbounds %struct.pic_motion_params, ptr %8, i64 %idxprom7
  %mv = getelementptr inbounds i8, ptr %arrayidx8, i64 16
  %mv_y = getelementptr inbounds i8, ptr %arrayidx8, i64 18
  %10 = load i16, ptr %mv_y, align 2
  %conv10 = sext i16 %10 to i32
  %ref_idx = getelementptr inbounds i8, ptr %arrayidx8, i64 24
  %11 = load i8, ptr %ref_idx, align 8
  %conv21 = sext i8 %11 to i32
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %12 = load i32, ptr %mb_field, align 8
  %tobool22.not = icmp eq i32 %12, 0
  %mb_data32 = getelementptr inbounds i8, ptr %1, i64 848888
  %13 = load ptr, ptr %mb_data32, align 8
  %mb_addr34 = getelementptr inbounds i8, ptr %mb, i64 4
  %14 = load i32, ptr %mb_addr34, align 4
  %idxprom35 = sext i32 %14 to i64
  %mb_field37 = getelementptr inbounds %struct.macroblock, ptr %13, i64 %idxprom35, i32 45
  %15 = load i32, ptr %mb_field37, align 8
  %tobool38.not = icmp eq i32 %15, 0
  br i1 %tobool22.not, label %land.lhs.true31, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  br i1 %tobool38.not, label %if.then28, label %if.end42

if.then28:                                        ; preds = %land.lhs.true
  %div268 = sdiv i16 %10, 2
  %div.sext = sext i16 %div268 to i32
  %mul = shl nsw i32 %conv21, 1
  br label %if.end42

land.lhs.true31:                                  ; preds = %if.then
  br i1 %tobool38.not, label %if.end42, label %if.then39

if.then39:                                        ; preds = %land.lhs.true31
  %mul40 = shl nsw i32 %conv10, 1
  %shr = ashr i32 %conv21, 1
  br label %if.end42

if.end42:                                         ; preds = %land.lhs.true, %if.then28, %land.lhs.true31, %if.then39, %get_neighbors.exit
  %a_ref_idx.1 = phi i32 [ %shr, %if.then39 ], [ %conv21, %land.lhs.true31 ], [ 0, %get_neighbors.exit ], [ %mul, %if.then28 ], [ %conv21, %land.lhs.true ]
  %a_mv_y.1 = phi i32 [ %mul40, %if.then39 ], [ %conv10, %land.lhs.true31 ], [ 0, %get_neighbors.exit ], [ %div.sext, %if.then28 ], [ %conv10, %land.lhs.true ]
  %a_mv.0 = phi ptr [ %mv, %if.then39 ], [ %mv, %land.lhs.true31 ], [ null, %get_neighbors.exit ], [ %mv, %if.then28 ], [ %mv, %land.lhs.true ]
  %16 = load i32, ptr %add.ptr.i, align 16
  %tobool45.not = icmp eq i32 %16, 0
  br i1 %tobool45.not, label %if.end100, label %if.then46

if.then46:                                        ; preds = %if.end42
  %mv_info47 = getelementptr inbounds i8, ptr %4, i64 152
  %17 = load ptr, ptr %mv_info47, align 8
  %pos_y49 = getelementptr inbounds i8, ptr %mb, i64 30
  %18 = load i16, ptr %pos_y49, align 2
  %idxprom50 = sext i16 %18 to i64
  %arrayidx51 = getelementptr inbounds ptr, ptr %17, i64 %idxprom50
  %19 = load ptr, ptr %arrayidx51, align 8
  %pos_x53 = getelementptr inbounds i8, ptr %mb, i64 28
  %20 = load i16, ptr %pos_x53, align 4
  %idxprom54 = sext i16 %20 to i64
  %arrayidx55 = getelementptr inbounds %struct.pic_motion_params, ptr %19, i64 %idxprom54
  %mv56 = getelementptr inbounds i8, ptr %arrayidx55, i64 16
  %mv_y58 = getelementptr inbounds i8, ptr %arrayidx55, i64 18
  %21 = load i16, ptr %mv_y58, align 2
  %conv59 = sext i16 %21 to i32
  %ref_idx69 = getelementptr inbounds i8, ptr %arrayidx55, i64 24
  %22 = load i8, ptr %ref_idx69, align 8
  %conv71 = sext i8 %22 to i32
  %mb_field72 = getelementptr inbounds i8, ptr %currMB, i64 384
  %23 = load i32, ptr %mb_field72, align 8
  %tobool73.not = icmp eq i32 %23, 0
  %mb_data89 = getelementptr inbounds i8, ptr %1, i64 848888
  %24 = load ptr, ptr %mb_data89, align 8
  %mb_addr91 = getelementptr inbounds i8, ptr %mb, i64 20
  %25 = load i32, ptr %mb_addr91, align 4
  %idxprom92 = sext i32 %25 to i64
  %mb_field94 = getelementptr inbounds %struct.macroblock, ptr %24, i64 %idxprom92, i32 45
  %26 = load i32, ptr %mb_field94, align 8
  %tobool95.not = icmp eq i32 %26, 0
  br i1 %tobool73.not, label %land.lhs.true88, label %land.lhs.true74

land.lhs.true74:                                  ; preds = %if.then46
  br i1 %tobool95.not, label %if.then82, label %if.end100

if.then82:                                        ; preds = %land.lhs.true74
  %div83267 = sdiv i16 %21, 2
  %div83.sext = sext i16 %div83267 to i32
  %mul84 = shl nsw i32 %conv71, 1
  br label %if.end100

land.lhs.true88:                                  ; preds = %if.then46
  br i1 %tobool95.not, label %if.end100, label %if.then96

if.then96:                                        ; preds = %land.lhs.true88
  %mul97 = shl nsw i32 %conv59, 1
  %shr98 = ashr i32 %conv71, 1
  br label %if.end100

if.end100:                                        ; preds = %land.lhs.true74, %if.then82, %land.lhs.true88, %if.then96, %if.end42
  %b_ref_idx.1 = phi i32 [ %shr98, %if.then96 ], [ %conv71, %land.lhs.true88 ], [ 0, %if.end42 ], [ %mul84, %if.then82 ], [ %conv71, %land.lhs.true74 ]
  %b_mv_y.1 = phi i32 [ %mul97, %if.then96 ], [ %conv59, %land.lhs.true88 ], [ 0, %if.end42 ], [ %div83.sext, %if.then82 ], [ %conv59, %land.lhs.true74 ]
  %b_mv.0 = phi ptr [ %mv56, %if.then96 ], [ %mv56, %land.lhs.true88 ], [ null, %if.end42 ], [ %mv56, %if.then82 ], [ %mv56, %land.lhs.true74 ]
  br i1 %tobool.not, label %cond.end, label %cond.false

cond.false:                                       ; preds = %if.end100
  %cmp = icmp eq i32 %a_ref_idx.1, 0
  br i1 %cmp, label %land.lhs.true105, label %cond.end

land.lhs.true105:                                 ; preds = %cond.false
  %27 = load i16, ptr %a_mv.0, align 2
  %cmp107 = icmp eq i16 %27, 0
  %cmp109 = icmp eq i32 %a_mv_y.1, 0
  %spec.select = select i1 %cmp107, i1 %cmp109, i1 false
  br label %cond.end

cond.end:                                         ; preds = %land.lhs.true105, %cond.false, %if.end100
  %cond111 = phi i1 [ true, %if.end100 ], [ false, %cond.false ], [ %spec.select, %land.lhs.true105 ]
  br i1 %tobool45.not, label %if.then133.critedge, label %cond.false116

cond.false116:                                    ; preds = %cond.end
  %cmp117 = icmp eq i32 %b_ref_idx.1, 0
  br i1 %cmp117, label %land.lhs.true119, label %cond.end129

land.lhs.true119:                                 ; preds = %cond.false116
  %28 = load i16, ptr %b_mv.0, align 2
  %cmp122 = icmp eq i16 %28, 0
  br i1 %cmp122, label %land.rhs124, label %cond.end129

land.rhs124:                                      ; preds = %land.lhs.true119
  %cmp125 = icmp eq i32 %b_mv_y.1, 0
  %29 = select i1 %cmp125, i1 true, i1 %cond111
  br label %cond.end129

cond.end129:                                      ; preds = %cond.false116, %land.lhs.true119, %land.rhs124
  %cond130 = phi i1 [ %cond111, %land.lhs.true119 ], [ %cond111, %cond.false116 ], [ %29, %land.rhs124 ]
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 0, ptr %cbp, align 4
  %30 = load ptr, ptr %2, align 8
  %active_pps.i = getelementptr inbounds i8, ptr %30, i64 8
  %31 = load ptr, ptr %active_pps.i, align 8
  %entropy_coding_mode_flag.i = getelementptr inbounds i8, ptr %31, i64 12
  %32 = load i32, ptr %entropy_coding_mode_flag.i, align 4
  %cmp.i = icmp eq i32 %32, 0
  br i1 %cmp.i, label %if.then.i, label %reset_coeffs.exit

if.then.i:                                        ; preds = %cond.end129
  %nz_coeff.i = getelementptr inbounds i8, ptr %30, i64 848832
  %33 = load ptr, ptr %nz_coeff.i, align 8
  %current_mb_nr.i = getelementptr inbounds i8, ptr %2, i64 108
  %34 = load i32, ptr %current_mb_nr.i, align 4
  %idxprom.i = zext i32 %34 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %33, i64 %idxprom.i
  %35 = load ptr, ptr %arrayidx.i, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = load ptr, ptr %36, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %37, i8 0, i64 48, i1 false)
  br label %reset_coeffs.exit

reset_coeffs.exit:                                ; preds = %cond.end129, %if.then.i
  br i1 %cond130, label %for.body146.lr.ph, label %for.body180.lr.ph

if.then133.critedge:                              ; preds = %cond.end
  %cbp.c = getelementptr inbounds i8, ptr %currMB, i64 284
  store i32 0, ptr %cbp.c, align 4
  %38 = load ptr, ptr %2, align 8
  %active_pps.i254 = getelementptr inbounds i8, ptr %38, i64 8
  %39 = load ptr, ptr %active_pps.i254, align 8
  %entropy_coding_mode_flag.i255 = getelementptr inbounds i8, ptr %39, i64 12
  %40 = load i32, ptr %entropy_coding_mode_flag.i255, align 4
  %cmp.i256 = icmp eq i32 %40, 0
  br i1 %cmp.i256, label %if.then.i257, label %for.body146.lr.ph

if.then.i257:                                     ; preds = %if.then133.critedge
  %nz_coeff.i258 = getelementptr inbounds i8, ptr %38, i64 848832
  %41 = load ptr, ptr %nz_coeff.i258, align 8
  %current_mb_nr.i259 = getelementptr inbounds i8, ptr %2, i64 108
  %42 = load i32, ptr %current_mb_nr.i259, align 4
  %idxprom.i260 = zext i32 %42 to i64
  %arrayidx.i261 = getelementptr inbounds ptr, ptr %41, i64 %idxprom.i260
  %43 = load ptr, ptr %arrayidx.i261, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %44, align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(48) %45, i8 0, i64 48, i1 false)
  br label %for.body146.lr.ph

for.body146.lr.ph:                                ; preds = %reset_coeffs.exit, %if.then133.critedge, %if.then.i257
  %listX = getelementptr inbounds i8, ptr %2, i64 264
  %idxprom134 = sext i16 %3 to i64
  %arrayidx135 = getelementptr inbounds [6 x ptr], ptr %listX, i64 0, i64 %idxprom134
  %46 = load ptr, ptr %arrayidx135, align 8
  %47 = load ptr, ptr %46, align 8
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %mv_info147 = getelementptr inbounds i8, ptr %4, i64 152
  %48 = sext i32 %0 to i64
  %49 = load i32, ptr %block_x, align 8
  %50 = sext i32 %49 to i64
  br label %for.body146

for.body146:                                      ; preds = %for.body146.lr.ph, %for.body146
  %indvars.iv283 = phi i64 [ %50, %for.body146.lr.ph ], [ %indvars.iv.next284, %for.body146 ]
  %51 = load ptr, ptr %mv_info147, align 8
  %arrayidx149 = getelementptr inbounds ptr, ptr %51, i64 %48
  %52 = load ptr, ptr %arrayidx149, align 8
  %arrayidx151 = getelementptr inbounds %struct.pic_motion_params, ptr %52, i64 %indvars.iv283
  store ptr %47, ptr %arrayidx151, align 8
  %mv153 = getelementptr inbounds i8, ptr %arrayidx151, i64 16
  store i32 0, ptr %mv153, align 8
  %ref_idx155 = getelementptr inbounds i8, ptr %arrayidx151, i64 24
  store i8 0, ptr %ref_idx155, align 8
  %indvars.iv.next284 = add nsw i64 %indvars.iv283, 1
  %53 = load i32, ptr %block_x, align 8
  %54 = add nsw i32 %53, 3
  %55 = sext i32 %54 to i64
  %cmp144 = icmp slt i64 %indvars.iv283, %55
  br i1 %cmp144, label %for.body146, label %for.body146.lr.ph.1

for.body146.lr.ph.1:                              ; preds = %for.body146
  %56 = load i32, ptr %block_x, align 8
  %57 = sext i32 %56 to i64
  br label %for.body146.1

for.body146.1:                                    ; preds = %for.body146.1, %for.body146.lr.ph.1
  %indvars.iv283.1 = phi i64 [ %57, %for.body146.lr.ph.1 ], [ %indvars.iv.next284.1, %for.body146.1 ]
  %58 = load ptr, ptr %mv_info147, align 8
  %59 = getelementptr ptr, ptr %58, i64 %48
  %arrayidx149.1 = getelementptr i8, ptr %59, i64 8
  %60 = load ptr, ptr %arrayidx149.1, align 8
  %arrayidx151.1 = getelementptr inbounds %struct.pic_motion_params, ptr %60, i64 %indvars.iv283.1
  store ptr %47, ptr %arrayidx151.1, align 8
  %mv153.1 = getelementptr inbounds i8, ptr %arrayidx151.1, i64 16
  store i32 0, ptr %mv153.1, align 8
  %ref_idx155.1 = getelementptr inbounds i8, ptr %arrayidx151.1, i64 24
  store i8 0, ptr %ref_idx155.1, align 8
  %indvars.iv.next284.1 = add nsw i64 %indvars.iv283.1, 1
  %61 = load i32, ptr %block_x, align 8
  %62 = add nsw i32 %61, 3
  %63 = sext i32 %62 to i64
  %cmp144.1 = icmp slt i64 %indvars.iv283.1, %63
  br i1 %cmp144.1, label %for.body146.1, label %for.body146.lr.ph.2

for.body146.lr.ph.2:                              ; preds = %for.body146.1
  %64 = load i32, ptr %block_x, align 8
  %65 = sext i32 %64 to i64
  br label %for.body146.2

for.body146.2:                                    ; preds = %for.body146.2, %for.body146.lr.ph.2
  %indvars.iv283.2 = phi i64 [ %65, %for.body146.lr.ph.2 ], [ %indvars.iv.next284.2, %for.body146.2 ]
  %66 = load ptr, ptr %mv_info147, align 8
  %67 = getelementptr ptr, ptr %66, i64 %48
  %arrayidx149.2 = getelementptr i8, ptr %67, i64 16
  %68 = load ptr, ptr %arrayidx149.2, align 8
  %arrayidx151.2 = getelementptr inbounds %struct.pic_motion_params, ptr %68, i64 %indvars.iv283.2
  store ptr %47, ptr %arrayidx151.2, align 8
  %mv153.2 = getelementptr inbounds i8, ptr %arrayidx151.2, i64 16
  store i32 0, ptr %mv153.2, align 8
  %ref_idx155.2 = getelementptr inbounds i8, ptr %arrayidx151.2, i64 24
  store i8 0, ptr %ref_idx155.2, align 8
  %indvars.iv.next284.2 = add nsw i64 %indvars.iv283.2, 1
  %69 = load i32, ptr %block_x, align 8
  %70 = add nsw i32 %69, 3
  %71 = sext i32 %70 to i64
  %cmp144.2 = icmp slt i64 %indvars.iv283.2, %71
  br i1 %cmp144.2, label %for.body146.2, label %for.body146.lr.ph.3

for.body146.lr.ph.3:                              ; preds = %for.body146.2
  %72 = load i32, ptr %block_x, align 8
  %73 = sext i32 %72 to i64
  br label %for.body146.3

for.body146.3:                                    ; preds = %for.body146.3, %for.body146.lr.ph.3
  %indvars.iv283.3 = phi i64 [ %73, %for.body146.lr.ph.3 ], [ %indvars.iv.next284.3, %for.body146.3 ]
  %74 = load ptr, ptr %mv_info147, align 8
  %75 = getelementptr ptr, ptr %74, i64 %48
  %arrayidx149.3 = getelementptr i8, ptr %75, i64 24
  %76 = load ptr, ptr %arrayidx149.3, align 8
  %arrayidx151.3 = getelementptr inbounds %struct.pic_motion_params, ptr %76, i64 %indvars.iv283.3
  store ptr %47, ptr %arrayidx151.3, align 8
  %mv153.3 = getelementptr inbounds i8, ptr %arrayidx151.3, i64 16
  store i32 0, ptr %mv153.3, align 8
  %ref_idx155.3 = getelementptr inbounds i8, ptr %arrayidx151.3, i64 24
  store i8 0, ptr %ref_idx155.3, align 8
  %indvars.iv.next284.3 = add nsw i64 %indvars.iv283.3, 1
  %77 = load i32, ptr %block_x, align 8
  %78 = add nsw i32 %77, 3
  %79 = sext i32 %78 to i64
  %cmp144.3 = icmp slt i64 %indvars.iv283.3, %79
  br i1 %cmp144.3, label %for.body146.3, label %if.end198

for.body180.lr.ph:                                ; preds = %reset_coeffs.exit
  %listX162 = getelementptr inbounds i8, ptr %2, i64 264
  %idxprom164 = sext i16 %3 to i64
  %arrayidx165 = getelementptr inbounds [6 x ptr], ptr %listX162, i64 0, i64 %idxprom164
  %80 = load ptr, ptr %arrayidx165, align 8
  %81 = load ptr, ptr %80, align 8
  %GetMVPredictor = getelementptr inbounds i8, ptr %currMB, i64 448
  %82 = load ptr, ptr %GetMVPredictor, align 8
  %mv_info168 = getelementptr inbounds i8, ptr %4, i64 152
  %83 = load ptr, ptr %mv_info168, align 8
  call void %82(ptr noundef nonnull %currMB, ptr noundef nonnull %mb, ptr noundef nonnull %pred_mv, i16 noundef signext 0, ptr noundef %83, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 16, i32 noundef 16) #14
  %block_x174 = getelementptr inbounds i8, ptr %currMB, i64 32
  %84 = sext i32 %0 to i64
  %85 = load i32, ptr %block_x174, align 8
  %86 = sext i32 %85 to i64
  br label %for.body180

for.body180:                                      ; preds = %for.body180.lr.ph, %for.body180
  %indvars.iv = phi i64 [ %86, %for.body180.lr.ph ], [ %indvars.iv.next, %for.body180 ]
  %87 = load ptr, ptr %mv_info168, align 8
  %arrayidx183 = getelementptr inbounds ptr, ptr %87, i64 %84
  %88 = load ptr, ptr %arrayidx183, align 8
  %arrayidx185 = getelementptr inbounds %struct.pic_motion_params, ptr %88, i64 %indvars.iv
  store ptr %81, ptr %arrayidx185, align 8
  %mv188 = getelementptr inbounds i8, ptr %arrayidx185, i64 16
  %89 = load i32, ptr %pred_mv, align 4
  store i32 %89, ptr %mv188, align 8
  %ref_idx190 = getelementptr inbounds i8, ptr %arrayidx185, i64 24
  store i8 0, ptr %ref_idx190, align 8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %90 = load i32, ptr %block_x174, align 8
  %91 = add nsw i32 %90, 3
  %92 = sext i32 %91 to i64
  %cmp178 = icmp slt i64 %indvars.iv, %92
  br i1 %cmp178, label %for.body180, label %for.body180.lr.ph.1

for.body180.lr.ph.1:                              ; preds = %for.body180
  %93 = load i32, ptr %block_x174, align 8
  %94 = sext i32 %93 to i64
  br label %for.body180.1

for.body180.1:                                    ; preds = %for.body180.1, %for.body180.lr.ph.1
  %indvars.iv.1 = phi i64 [ %94, %for.body180.lr.ph.1 ], [ %indvars.iv.next.1, %for.body180.1 ]
  %95 = load ptr, ptr %mv_info168, align 8
  %96 = getelementptr ptr, ptr %95, i64 %84
  %arrayidx183.1 = getelementptr i8, ptr %96, i64 8
  %97 = load ptr, ptr %arrayidx183.1, align 8
  %arrayidx185.1 = getelementptr inbounds %struct.pic_motion_params, ptr %97, i64 %indvars.iv.1
  store ptr %81, ptr %arrayidx185.1, align 8
  %mv188.1 = getelementptr inbounds i8, ptr %arrayidx185.1, i64 16
  %98 = load i32, ptr %pred_mv, align 4
  store i32 %98, ptr %mv188.1, align 8
  %ref_idx190.1 = getelementptr inbounds i8, ptr %arrayidx185.1, i64 24
  store i8 0, ptr %ref_idx190.1, align 8
  %indvars.iv.next.1 = add nsw i64 %indvars.iv.1, 1
  %99 = load i32, ptr %block_x174, align 8
  %100 = add nsw i32 %99, 3
  %101 = sext i32 %100 to i64
  %cmp178.1 = icmp slt i64 %indvars.iv.1, %101
  br i1 %cmp178.1, label %for.body180.1, label %for.body180.lr.ph.2

for.body180.lr.ph.2:                              ; preds = %for.body180.1
  %102 = load i32, ptr %block_x174, align 8
  %103 = sext i32 %102 to i64
  br label %for.body180.2

for.body180.2:                                    ; preds = %for.body180.2, %for.body180.lr.ph.2
  %indvars.iv.2 = phi i64 [ %103, %for.body180.lr.ph.2 ], [ %indvars.iv.next.2, %for.body180.2 ]
  %104 = load ptr, ptr %mv_info168, align 8
  %105 = getelementptr ptr, ptr %104, i64 %84
  %arrayidx183.2 = getelementptr i8, ptr %105, i64 16
  %106 = load ptr, ptr %arrayidx183.2, align 8
  %arrayidx185.2 = getelementptr inbounds %struct.pic_motion_params, ptr %106, i64 %indvars.iv.2
  store ptr %81, ptr %arrayidx185.2, align 8
  %mv188.2 = getelementptr inbounds i8, ptr %arrayidx185.2, i64 16
  %107 = load i32, ptr %pred_mv, align 4
  store i32 %107, ptr %mv188.2, align 8
  %ref_idx190.2 = getelementptr inbounds i8, ptr %arrayidx185.2, i64 24
  store i8 0, ptr %ref_idx190.2, align 8
  %indvars.iv.next.2 = add nsw i64 %indvars.iv.2, 1
  %108 = load i32, ptr %block_x174, align 8
  %109 = add nsw i32 %108, 3
  %110 = sext i32 %109 to i64
  %cmp178.2 = icmp slt i64 %indvars.iv.2, %110
  br i1 %cmp178.2, label %for.body180.2, label %for.body180.lr.ph.3

for.body180.lr.ph.3:                              ; preds = %for.body180.2
  %111 = load i32, ptr %block_x174, align 8
  %112 = sext i32 %111 to i64
  br label %for.body180.3

for.body180.3:                                    ; preds = %for.body180.3, %for.body180.lr.ph.3
  %indvars.iv.3 = phi i64 [ %112, %for.body180.lr.ph.3 ], [ %indvars.iv.next.3, %for.body180.3 ]
  %113 = load ptr, ptr %mv_info168, align 8
  %114 = getelementptr ptr, ptr %113, i64 %84
  %arrayidx183.3 = getelementptr i8, ptr %114, i64 24
  %115 = load ptr, ptr %arrayidx183.3, align 8
  %arrayidx185.3 = getelementptr inbounds %struct.pic_motion_params, ptr %115, i64 %indvars.iv.3
  store ptr %81, ptr %arrayidx185.3, align 8
  %mv188.3 = getelementptr inbounds i8, ptr %arrayidx185.3, i64 16
  %116 = load i32, ptr %pred_mv, align 4
  store i32 %116, ptr %mv188.3, align 8
  %ref_idx190.3 = getelementptr inbounds i8, ptr %arrayidx185.3, i64 24
  store i8 0, ptr %ref_idx190.3, align 8
  %indvars.iv.next.3 = add nsw i64 %indvars.iv.3, 1
  %117 = load i32, ptr %block_x174, align 8
  %118 = add nsw i32 %117, 3
  %119 = sext i32 %118 to i64
  %cmp178.3 = icmp slt i64 %indvars.iv.3, %119
  br i1 %cmp178.3, label %for.body180.3, label %if.end198

if.end198:                                        ; preds = %for.body180.3, %for.body146.3
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %mb) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pred_mv) #14
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @get_neighbors(ptr noundef %currMB, ptr noundef %block, i32 noundef %mb_x, i32 noundef %mb_y, i32 noundef %blockshape_x) local_unnamed_addr #3 {
entry:
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %mb_size2 = getelementptr inbounds i8, ptr %0, i64 849124
  %sub = add nsw i32 %mb_x, -1
  tail call void @get4x4Neighbour(ptr noundef %currMB, i32 noundef %sub, i32 noundef %mb_y, ptr noundef nonnull %mb_size2, ptr noundef %block) #14
  %sub3 = add nsw i32 %mb_y, -1
  %add.ptr = getelementptr inbounds i8, ptr %block, i64 16
  tail call void @get4x4Neighbour(ptr noundef %currMB, i32 noundef %mb_x, i32 noundef %sub3, ptr noundef nonnull %mb_size2, ptr noundef nonnull %add.ptr) #14
  %add = add nsw i32 %blockshape_x, %mb_x
  %add.ptr5 = getelementptr inbounds i8, ptr %block, i64 32
  tail call void @get4x4Neighbour(ptr noundef %currMB, i32 noundef %add, i32 noundef %sub3, ptr noundef nonnull %mb_size2, ptr noundef nonnull %add.ptr5) #14
  %cmp = icmp sgt i32 %mb_y, 0
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %entry
  %cmp6 = icmp slt i32 %mb_x, 8
  br i1 %cmp6, label %if.then7, label %if.else20

if.then7:                                         ; preds = %if.then
  %cmp8 = icmp eq i32 %mb_y, 8
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then7
  %cmp10 = icmp eq i32 %blockshape_x, 16
  br i1 %cmp10, label %if.then31.sink.split, label %if.end28

if.else:                                          ; preds = %if.then7
  %cmp14 = icmp eq i32 %add, 8
  br i1 %cmp14, label %if.then31.sink.split, label %if.end28

if.else20:                                        ; preds = %if.then
  %cmp22 = icmp eq i32 %add, 16
  br i1 %cmp22, label %if.then31.sink.split, label %if.end28

if.end28:                                         ; preds = %if.else, %if.then9, %if.else20, %entry
  %.pr = load i32, ptr %add.ptr5, align 4
  %tobool.not = icmp eq i32 %.pr, 0
  br i1 %tobool.not, label %if.then31, label %if.end37

if.then31.sink.split:                             ; preds = %if.else20, %if.else, %if.then9
  store i32 0, ptr %add.ptr5, align 4
  br label %if.then31

if.then31:                                        ; preds = %if.then31.sink.split, %if.end28
  %add.ptr34 = getelementptr inbounds i8, ptr %block, i64 48
  tail call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub, i32 noundef %sub3, ptr noundef nonnull %mb_size2, ptr noundef nonnull %add.ptr34) #14
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %add.ptr5, ptr noundef nonnull align 4 dereferenceable(16) %add.ptr34, i64 16, i1 false)
  br label %if.end37

if.end37:                                         ; preds = %if.then31, %if.end28
  ret void
}

declare void @get4x4Neighbour(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local range(i32 0, 511) i32 @predict_nnz(ptr noundef %currMB, i32 noundef %block_type, i32 noundef %i, i32 noundef %j) local_unnamed_addr #3 {
entry:
  %pix = alloca %struct.pix_pos, align 4
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %1 = load ptr, ptr %currMB, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pix) #14
  %sub = add nsw i32 %i, -1
  %mb_size = getelementptr inbounds i8, ptr %0, i64 849124
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub, i32 noundef %j, ptr noundef nonnull %mb_size, ptr noundef nonnull %pix) #14
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %2 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %2, 1
  %3 = load i32, ptr %pix, align 4
  %tobool = icmp ne i32 %3, 0
  %or.cond = select i1 %cmp, i1 %tobool, i1 false
  br i1 %or.cond, label %land.lhs.true2, label %if.end11

land.lhs.true2:                                   ; preds = %entry
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %4 = load ptr, ptr %active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds i8, ptr %4, i64 2204
  %5 = load i32, ptr %constrained_intra_pred_flag, align 4
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %if.then14, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %6 = load i32, ptr %dp_mode, align 8
  %cmp5 = icmp eq i32 %6, 1
  br i1 %cmp5, label %if.then, label %if.then14

if.then:                                          ; preds = %land.lhs.true4
  %intra_block = getelementptr inbounds i8, ptr %1, i64 13544
  %7 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds i8, ptr %pix, i64 4
  %8 = load i32, ptr %mb_addr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds i8, ptr %7, i64 %idxprom
  %9 = load i8, ptr %arrayidx6, align 1
  %conv = sext i8 %9 to i32
  %and = and i32 %3, %conv
  store i32 %and, ptr %pix, align 4
  %tobool9.not = icmp eq i32 %and, 0
  %spec.select = zext i1 %tobool9.not to i32
  br label %if.end11

if.end11:                                         ; preds = %if.then, %entry
  %10 = phi i32 [ %and, %if.then ], [ %3, %entry ]
  %cnt.0 = phi i32 [ %spec.select, %if.then ], [ 0, %entry ]
  %tobool13.not = icmp eq i32 %10, 0
  br i1 %tobool13.not, label %if.end53, label %if.then14

if.then14:                                        ; preds = %land.lhs.true4, %land.lhs.true2, %if.end11
  %cnt.0180 = phi i32 [ %cnt.0, %if.end11 ], [ 0, %land.lhs.true2 ], [ 0, %land.lhs.true4 ]
  switch i32 %block_type, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb25
    i32 8, label %sw.bb39
  ]

sw.bb:                                            ; preds = %if.then14
  %nz_coeff = getelementptr inbounds i8, ptr %0, i64 848832
  %11 = load ptr, ptr %nz_coeff, align 8
  %mb_addr15 = getelementptr inbounds i8, ptr %pix, i64 4
  %12 = load i32, ptr %mb_addr15, align 4
  %idxprom16 = sext i32 %12 to i64
  %arrayidx17 = getelementptr inbounds ptr, ptr %11, i64 %idxprom16
  %13 = load ptr, ptr %arrayidx17, align 8
  %14 = load ptr, ptr %13, align 8
  %y = getelementptr inbounds i8, ptr %pix, i64 10
  %15 = load i16, ptr %y, align 2
  %idxprom19 = sext i16 %15 to i64
  %arrayidx20 = getelementptr inbounds ptr, ptr %14, i64 %idxprom19
  %16 = load ptr, ptr %arrayidx20, align 8
  %x = getelementptr inbounds i8, ptr %pix, i64 8
  %17 = load i16, ptr %x, align 4
  %idxprom21 = sext i16 %17 to i64
  %arrayidx22 = getelementptr inbounds i8, ptr %16, i64 %idxprom21
  %18 = load i8, ptr %arrayidx22, align 1
  %inc24 = add nuw nsw i32 %cnt.0180, 1
  br label %if.end53

sw.bb25:                                          ; preds = %if.then14
  %nz_coeff26 = getelementptr inbounds i8, ptr %0, i64 848832
  %19 = load ptr, ptr %nz_coeff26, align 8
  %mb_addr27 = getelementptr inbounds i8, ptr %pix, i64 4
  %20 = load i32, ptr %mb_addr27, align 4
  %idxprom28 = sext i32 %20 to i64
  %arrayidx29 = getelementptr inbounds ptr, ptr %19, i64 %idxprom28
  %21 = load ptr, ptr %arrayidx29, align 8
  %arrayidx30 = getelementptr inbounds i8, ptr %21, i64 8
  %22 = load ptr, ptr %arrayidx30, align 8
  %y31 = getelementptr inbounds i8, ptr %pix, i64 10
  %23 = load i16, ptr %y31, align 2
  %idxprom32 = sext i16 %23 to i64
  %arrayidx33 = getelementptr inbounds ptr, ptr %22, i64 %idxprom32
  %24 = load ptr, ptr %arrayidx33, align 8
  %x34 = getelementptr inbounds i8, ptr %pix, i64 8
  %25 = load i16, ptr %x34, align 4
  %idxprom35 = sext i16 %25 to i64
  %arrayidx36 = getelementptr inbounds i8, ptr %24, i64 %idxprom35
  %26 = load i8, ptr %arrayidx36, align 1
  %inc38 = add nuw nsw i32 %cnt.0180, 1
  br label %if.end53

sw.bb39:                                          ; preds = %if.then14
  %nz_coeff40 = getelementptr inbounds i8, ptr %0, i64 848832
  %27 = load ptr, ptr %nz_coeff40, align 8
  %mb_addr41 = getelementptr inbounds i8, ptr %pix, i64 4
  %28 = load i32, ptr %mb_addr41, align 4
  %idxprom42 = sext i32 %28 to i64
  %arrayidx43 = getelementptr inbounds ptr, ptr %27, i64 %idxprom42
  %29 = load ptr, ptr %arrayidx43, align 8
  %arrayidx44 = getelementptr inbounds i8, ptr %29, i64 16
  %30 = load ptr, ptr %arrayidx44, align 8
  %y45 = getelementptr inbounds i8, ptr %pix, i64 10
  %31 = load i16, ptr %y45, align 2
  %idxprom46 = sext i16 %31 to i64
  %arrayidx47 = getelementptr inbounds ptr, ptr %30, i64 %idxprom46
  %32 = load ptr, ptr %arrayidx47, align 8
  %x48 = getelementptr inbounds i8, ptr %pix, i64 8
  %33 = load i16, ptr %x48, align 4
  %idxprom49 = sext i16 %33 to i64
  %arrayidx50 = getelementptr inbounds i8, ptr %32, i64 %idxprom49
  %34 = load i8, ptr %arrayidx50, align 1
  %inc52 = add nuw nsw i32 %cnt.0180, 1
  br label %if.end53

sw.default:                                       ; preds = %if.then14
  call void @error(ptr noundef nonnull @.str.2, i32 noundef 600) #14
  br label %if.end53

if.end53:                                         ; preds = %sw.bb, %sw.bb25, %sw.bb39, %sw.default, %if.end11
  %pred_nnz.0.shrunk = phi i8 [ 0, %sw.default ], [ %34, %sw.bb39 ], [ %26, %sw.bb25 ], [ %18, %sw.bb ], [ 0, %if.end11 ]
  %cnt.1 = phi i32 [ %cnt.0180, %sw.default ], [ %inc52, %sw.bb39 ], [ %inc38, %sw.bb25 ], [ %inc24, %sw.bb ], [ %cnt.0, %if.end11 ]
  %pred_nnz.0 = zext i8 %pred_nnz.0.shrunk to i32
  %sub54 = add nsw i32 %j, -1
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %i, i32 noundef %sub54, ptr noundef nonnull %mb_size, ptr noundef nonnull %pix) #14
  %35 = load i32, ptr %is_intra_block, align 8
  %cmp59 = icmp eq i32 %35, 1
  %36 = load i32, ptr %pix, align 4
  %tobool63 = icmp ne i32 %36, 0
  %or.cond141 = select i1 %cmp59, i1 %tobool63, i1 false
  br i1 %or.cond141, label %land.lhs.true64, label %if.end85

land.lhs.true64:                                  ; preds = %if.end53
  %active_pps65 = getelementptr inbounds i8, ptr %0, i64 8
  %37 = load ptr, ptr %active_pps65, align 8
  %constrained_intra_pred_flag66 = getelementptr inbounds i8, ptr %37, i64 2204
  %38 = load i32, ptr %constrained_intra_pred_flag66, align 4
  %tobool67.not = icmp eq i32 %38, 0
  br i1 %tobool67.not, label %if.then88, label %land.lhs.true68

land.lhs.true68:                                  ; preds = %land.lhs.true64
  %dp_mode69 = getelementptr inbounds i8, ptr %1, i64 200
  %39 = load i32, ptr %dp_mode69, align 8
  %cmp70 = icmp eq i32 %39, 1
  br i1 %cmp70, label %if.then72, label %if.then88

if.then72:                                        ; preds = %land.lhs.true68
  %intra_block73 = getelementptr inbounds i8, ptr %1, i64 13544
  %40 = load ptr, ptr %intra_block73, align 8
  %mb_addr74 = getelementptr inbounds i8, ptr %pix, i64 4
  %41 = load i32, ptr %mb_addr74, align 4
  %idxprom75 = sext i32 %41 to i64
  %arrayidx76 = getelementptr inbounds i8, ptr %40, i64 %idxprom75
  %42 = load i8, ptr %arrayidx76, align 1
  %conv77 = sext i8 %42 to i32
  %and79 = and i32 %36, %conv77
  store i32 %and79, ptr %pix, align 4
  %tobool81.not = icmp eq i32 %and79, 0
  %inc83 = zext i1 %tobool81.not to i32
  %spec.select176 = add nuw nsw i32 %cnt.1, %inc83
  br label %if.end85

if.end85:                                         ; preds = %if.then72, %if.end53
  %43 = phi i32 [ %and79, %if.then72 ], [ %36, %if.end53 ]
  %cnt.2 = phi i32 [ %spec.select176, %if.then72 ], [ %cnt.1, %if.end53 ]
  %tobool87.not = icmp eq i32 %43, 0
  br i1 %tobool87.not, label %if.end135, label %if.then88

if.then88:                                        ; preds = %land.lhs.true68, %land.lhs.true64, %if.end85
  %cnt.2183 = phi i32 [ %cnt.2, %if.end85 ], [ %cnt.1, %land.lhs.true64 ], [ %cnt.1, %land.lhs.true68 ]
  switch i32 %block_type, label %sw.default133 [
    i32 0, label %sw.bb89
    i32 3, label %sw.bb103
    i32 8, label %sw.bb118
  ]

sw.bb89:                                          ; preds = %if.then88
  %nz_coeff90 = getelementptr inbounds i8, ptr %0, i64 848832
  %44 = load ptr, ptr %nz_coeff90, align 8
  %mb_addr91 = getelementptr inbounds i8, ptr %pix, i64 4
  %45 = load i32, ptr %mb_addr91, align 4
  %idxprom92 = sext i32 %45 to i64
  %arrayidx93 = getelementptr inbounds ptr, ptr %44, i64 %idxprom92
  %46 = load ptr, ptr %arrayidx93, align 8
  %47 = load ptr, ptr %46, align 8
  %y95 = getelementptr inbounds i8, ptr %pix, i64 10
  %48 = load i16, ptr %y95, align 2
  %idxprom96 = sext i16 %48 to i64
  %arrayidx97 = getelementptr inbounds ptr, ptr %47, i64 %idxprom96
  %49 = load ptr, ptr %arrayidx97, align 8
  %x98 = getelementptr inbounds i8, ptr %pix, i64 8
  %50 = load i16, ptr %x98, align 4
  %idxprom99 = sext i16 %50 to i64
  %arrayidx100 = getelementptr inbounds i8, ptr %49, i64 %idxprom99
  %51 = load i8, ptr %arrayidx100, align 1
  %conv101 = zext i8 %51 to i32
  %add = add nuw nsw i32 %conv101, %pred_nnz.0
  %inc102 = add nuw nsw i32 %cnt.2183, 1
  br label %if.end135

sw.bb103:                                         ; preds = %if.then88
  %nz_coeff104 = getelementptr inbounds i8, ptr %0, i64 848832
  %52 = load ptr, ptr %nz_coeff104, align 8
  %mb_addr105 = getelementptr inbounds i8, ptr %pix, i64 4
  %53 = load i32, ptr %mb_addr105, align 4
  %idxprom106 = sext i32 %53 to i64
  %arrayidx107 = getelementptr inbounds ptr, ptr %52, i64 %idxprom106
  %54 = load ptr, ptr %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i8, ptr %54, i64 8
  %55 = load ptr, ptr %arrayidx108, align 8
  %y109 = getelementptr inbounds i8, ptr %pix, i64 10
  %56 = load i16, ptr %y109, align 2
  %idxprom110 = sext i16 %56 to i64
  %arrayidx111 = getelementptr inbounds ptr, ptr %55, i64 %idxprom110
  %57 = load ptr, ptr %arrayidx111, align 8
  %x112 = getelementptr inbounds i8, ptr %pix, i64 8
  %58 = load i16, ptr %x112, align 4
  %idxprom113 = sext i16 %58 to i64
  %arrayidx114 = getelementptr inbounds i8, ptr %57, i64 %idxprom113
  %59 = load i8, ptr %arrayidx114, align 1
  %conv115 = zext i8 %59 to i32
  %add116 = add nuw nsw i32 %conv115, %pred_nnz.0
  %inc117 = add nuw nsw i32 %cnt.2183, 1
  br label %if.end135

sw.bb118:                                         ; preds = %if.then88
  %nz_coeff119 = getelementptr inbounds i8, ptr %0, i64 848832
  %60 = load ptr, ptr %nz_coeff119, align 8
  %mb_addr120 = getelementptr inbounds i8, ptr %pix, i64 4
  %61 = load i32, ptr %mb_addr120, align 4
  %idxprom121 = sext i32 %61 to i64
  %arrayidx122 = getelementptr inbounds ptr, ptr %60, i64 %idxprom121
  %62 = load ptr, ptr %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds i8, ptr %62, i64 16
  %63 = load ptr, ptr %arrayidx123, align 8
  %y124 = getelementptr inbounds i8, ptr %pix, i64 10
  %64 = load i16, ptr %y124, align 2
  %idxprom125 = sext i16 %64 to i64
  %arrayidx126 = getelementptr inbounds ptr, ptr %63, i64 %idxprom125
  %65 = load ptr, ptr %arrayidx126, align 8
  %x127 = getelementptr inbounds i8, ptr %pix, i64 8
  %66 = load i16, ptr %x127, align 4
  %idxprom128 = sext i16 %66 to i64
  %arrayidx129 = getelementptr inbounds i8, ptr %65, i64 %idxprom128
  %67 = load i8, ptr %arrayidx129, align 1
  %conv130 = zext i8 %67 to i32
  %add131 = add nuw nsw i32 %conv130, %pred_nnz.0
  %inc132 = add nuw nsw i32 %cnt.2183, 1
  br label %if.end135

sw.default133:                                    ; preds = %if.then88
  call void @error(ptr noundef nonnull @.str.2, i32 noundef 600) #14
  br label %if.end135

if.end135:                                        ; preds = %sw.bb89, %sw.bb103, %sw.bb118, %sw.default133, %if.end85
  %pred_nnz.1 = phi i32 [ %pred_nnz.0, %sw.default133 ], [ %add131, %sw.bb118 ], [ %add116, %sw.bb103 ], [ %add, %sw.bb89 ], [ %pred_nnz.0, %if.end85 ]
  %cnt.3 = phi i32 [ %cnt.2183, %sw.default133 ], [ %inc132, %sw.bb118 ], [ %inc117, %sw.bb103 ], [ %inc102, %sw.bb89 ], [ %cnt.2, %if.end85 ]
  %cmp136 = icmp eq i32 %cnt.3, 2
  %inc139 = add nuw nsw i32 %pred_nnz.1, 1
  %shr = lshr i32 %inc139, 1
  %pred_nnz.2 = select i1 %cmp136, i32 %shr, i32 %pred_nnz.1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pix) #14
  ret i32 %pred_nnz.2
}

declare void @error(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local range(i32 0, 511) i32 @predict_nnz_chroma(ptr noundef %currMB, i32 noundef %i, i32 noundef %j) local_unnamed_addr #3 {
entry:
  %pix = alloca %struct.pix_pos, align 4
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %1 = load ptr, ptr %currMB, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %1, i64 13520
  %2 = load ptr, ptr %dec_picture2, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pix) #14
  %chroma_format_idc = getelementptr inbounds i8, ptr %2, i64 268
  %3 = load i32, ptr %chroma_format_idc, align 4
  %cmp.not = icmp eq i32 %3, 3
  br i1 %cmp.not, label %if.end94, label %if.then

if.then:                                          ; preds = %entry
  %and = shl i32 %i, 2
  %shl = and i32 %and, 4
  %sub = add nsw i32 %shl, -1
  %arrayidx = getelementptr inbounds i8, ptr %0, i64 849132
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub, i32 noundef %j, ptr noundef nonnull %arrayidx, ptr noundef nonnull %pix) #14
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp4 = icmp eq i32 %4, 1
  %5 = load i32, ptr %pix, align 4
  %tobool = icmp ne i32 %5, 0
  %or.cond = select i1 %cmp4, i1 %tobool, i1 false
  br i1 %or.cond, label %land.lhs.true5, label %if.end16

land.lhs.true5:                                   ; preds = %if.then
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load ptr, ptr %active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds i8, ptr %6, i64 2204
  %7 = load i32, ptr %constrained_intra_pred_flag, align 4
  %tobool6.not = icmp eq i32 %7, 0
  br i1 %tobool6.not, label %if.then19, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %8 = load i32, ptr %dp_mode, align 8
  %cmp8 = icmp eq i32 %8, 1
  br i1 %cmp8, label %if.then9, label %if.then19

if.then9:                                         ; preds = %land.lhs.true7
  %intra_block = getelementptr inbounds i8, ptr %1, i64 13544
  %9 = load ptr, ptr %intra_block, align 8
  %mb_addr = getelementptr inbounds i8, ptr %pix, i64 4
  %10 = load i32, ptr %mb_addr, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds i8, ptr %9, i64 %idxprom
  %11 = load i8, ptr %arrayidx10, align 1
  %conv = sext i8 %11 to i32
  %and12 = and i32 %5, %conv
  store i32 %and12, ptr %pix, align 4
  %tobool14.not = icmp eq i32 %and12, 0
  %spec.select = zext i1 %tobool14.not to i32
  br label %if.end16

if.end16:                                         ; preds = %if.then9, %if.then
  %12 = phi i32 [ %and12, %if.then9 ], [ %5, %if.then ]
  %cnt.0 = phi i32 [ %spec.select, %if.then9 ], [ 0, %if.then ]
  %tobool18.not = icmp eq i32 %12, 0
  br i1 %tobool18.not, label %if.end31, label %if.then19

if.then19:                                        ; preds = %land.lhs.true7, %land.lhs.true5, %if.end16
  %cnt.0126 = phi i32 [ %cnt.0, %if.end16 ], [ 0, %land.lhs.true5 ], [ 0, %land.lhs.true7 ]
  %nz_coeff = getelementptr inbounds i8, ptr %0, i64 848832
  %13 = load ptr, ptr %nz_coeff, align 8
  %mb_addr20 = getelementptr inbounds i8, ptr %pix, i64 4
  %14 = load i32, ptr %mb_addr20, align 4
  %idxprom21 = sext i32 %14 to i64
  %arrayidx22 = getelementptr inbounds ptr, ptr %13, i64 %idxprom21
  %15 = load ptr, ptr %arrayidx22, align 8
  %arrayidx23 = getelementptr inbounds i8, ptr %15, i64 8
  %16 = load ptr, ptr %arrayidx23, align 8
  %y = getelementptr inbounds i8, ptr %pix, i64 10
  %17 = load i16, ptr %y, align 2
  %idxprom24 = sext i16 %17 to i64
  %arrayidx25 = getelementptr inbounds ptr, ptr %16, i64 %idxprom24
  %18 = load ptr, ptr %arrayidx25, align 8
  %mul = and i32 %i, -2
  %x = getelementptr inbounds i8, ptr %pix, i64 8
  %19 = load i16, ptr %x, align 4
  %conv26 = sext i16 %19 to i32
  %add = add nsw i32 %mul, %conv26
  %idxprom27 = sext i32 %add to i64
  %arrayidx28 = getelementptr inbounds i8, ptr %18, i64 %idxprom27
  %20 = load i8, ptr %arrayidx28, align 1
  %conv29 = zext i8 %20 to i32
  %inc30 = add nuw nsw i32 %cnt.0126, 1
  br label %if.end31

if.end31:                                         ; preds = %if.then19, %if.end16
  %pred_nnz.0 = phi i32 [ %conv29, %if.then19 ], [ 0, %if.end16 ]
  %cnt.1 = phi i32 [ %inc30, %if.then19 ], [ %cnt.0, %if.end16 ]
  %sub34 = add nsw i32 %j, -1
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %shl, i32 noundef %sub34, ptr noundef nonnull %arrayidx, ptr noundef nonnull %pix) #14
  %21 = load i32, ptr %is_intra_block, align 8
  %cmp39 = icmp eq i32 %21, 1
  %22 = load i32, ptr %pix, align 4
  %tobool43 = icmp ne i32 %22, 0
  %or.cond95 = select i1 %cmp39, i1 %tobool43, i1 false
  br i1 %or.cond95, label %land.lhs.true44, label %if.end65

land.lhs.true44:                                  ; preds = %if.end31
  %active_pps45 = getelementptr inbounds i8, ptr %0, i64 8
  %23 = load ptr, ptr %active_pps45, align 8
  %constrained_intra_pred_flag46 = getelementptr inbounds i8, ptr %23, i64 2204
  %24 = load i32, ptr %constrained_intra_pred_flag46, align 4
  %tobool47.not = icmp eq i32 %24, 0
  br i1 %tobool47.not, label %if.then68, label %land.lhs.true48

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %dp_mode49 = getelementptr inbounds i8, ptr %1, i64 200
  %25 = load i32, ptr %dp_mode49, align 8
  %cmp50 = icmp eq i32 %25, 1
  br i1 %cmp50, label %if.then52, label %if.then68

if.then52:                                        ; preds = %land.lhs.true48
  %intra_block53 = getelementptr inbounds i8, ptr %1, i64 13544
  %26 = load ptr, ptr %intra_block53, align 8
  %mb_addr54 = getelementptr inbounds i8, ptr %pix, i64 4
  %27 = load i32, ptr %mb_addr54, align 4
  %idxprom55 = sext i32 %27 to i64
  %arrayidx56 = getelementptr inbounds i8, ptr %26, i64 %idxprom55
  %28 = load i8, ptr %arrayidx56, align 1
  %conv57 = sext i8 %28 to i32
  %and59 = and i32 %22, %conv57
  store i32 %and59, ptr %pix, align 4
  %tobool61.not = icmp eq i32 %and59, 0
  %inc63 = zext i1 %tobool61.not to i32
  %spec.select122 = add nuw nsw i32 %cnt.1, %inc63
  br label %if.end65

if.end65:                                         ; preds = %if.then52, %if.end31
  %29 = phi i32 [ %and59, %if.then52 ], [ %22, %if.end31 ]
  %cnt.2 = phi i32 [ %spec.select122, %if.then52 ], [ %cnt.1, %if.end31 ]
  %tobool67.not = icmp eq i32 %29, 0
  br i1 %tobool67.not, label %if.end87, label %if.then68

if.then68:                                        ; preds = %land.lhs.true48, %land.lhs.true44, %if.end65
  %cnt.2129 = phi i32 [ %cnt.2, %if.end65 ], [ %cnt.1, %land.lhs.true44 ], [ %cnt.1, %land.lhs.true48 ]
  %nz_coeff69 = getelementptr inbounds i8, ptr %0, i64 848832
  %30 = load ptr, ptr %nz_coeff69, align 8
  %mb_addr70 = getelementptr inbounds i8, ptr %pix, i64 4
  %31 = load i32, ptr %mb_addr70, align 4
  %idxprom71 = sext i32 %31 to i64
  %arrayidx72 = getelementptr inbounds ptr, ptr %30, i64 %idxprom71
  %32 = load ptr, ptr %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i8, ptr %32, i64 8
  %33 = load ptr, ptr %arrayidx73, align 8
  %y74 = getelementptr inbounds i8, ptr %pix, i64 10
  %34 = load i16, ptr %y74, align 2
  %idxprom75 = sext i16 %34 to i64
  %arrayidx76 = getelementptr inbounds ptr, ptr %33, i64 %idxprom75
  %35 = load ptr, ptr %arrayidx76, align 8
  %mul78 = and i32 %i, -2
  %x79 = getelementptr inbounds i8, ptr %pix, i64 8
  %36 = load i16, ptr %x79, align 4
  %conv80 = sext i16 %36 to i32
  %add81 = add nsw i32 %mul78, %conv80
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds i8, ptr %35, i64 %idxprom82
  %37 = load i8, ptr %arrayidx83, align 1
  %conv84 = zext i8 %37 to i32
  %add85 = add nuw nsw i32 %pred_nnz.0, %conv84
  %inc86 = add nuw nsw i32 %cnt.2129, 1
  br label %if.end87

if.end87:                                         ; preds = %if.then68, %if.end65
  %pred_nnz.1 = phi i32 [ %add85, %if.then68 ], [ %pred_nnz.0, %if.end65 ]
  %cnt.3 = phi i32 [ %inc86, %if.then68 ], [ %cnt.2, %if.end65 ]
  %cmp88 = icmp eq i32 %cnt.3, 2
  br i1 %cmp88, label %if.then90, label %if.end94

if.then90:                                        ; preds = %if.end87
  %inc91 = add nuw nsw i32 %pred_nnz.1, 1
  %shr92 = lshr i32 %inc91, 1
  br label %if.end94

if.end94:                                         ; preds = %if.end87, %if.then90, %entry
  %pred_nnz.2 = phi i32 [ %shr92, %if.then90 ], [ %pred_nnz.1, %if.end87 ], [ 0, %entry ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pix) #14
  ret i32 %pred_nnz.2
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @decode_one_macroblock(ptr noundef %currMB, ptr noundef %dec_picture) local_unnamed_addr #3 {
entry:
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %is_not_independent = getelementptr inbounds i8, ptr %0, i64 64
  %2 = load i32, ptr %is_not_independent, align 8
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %if.else21, label %if.then

if.then:                                          ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %3 = load i32, ptr %is_intra_block, align 8
  %tobool2.not = icmp eq i32 %3, 0
  br i1 %tobool2.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  tail call fastcc void @init_cur_imgy(ptr noundef %1, ptr noundef nonnull %0, i32 noundef 0)
  %decode_one_component = getelementptr inbounds i8, ptr %0, i64 13416
  %4 = load ptr, ptr %decode_one_component, align 8
  %imgY = getelementptr inbounds i8, ptr %dec_picture, i64 128
  %5 = load ptr, ptr %imgY, align 8
  %call = tail call i32 %4(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef %5, ptr noundef %dec_picture) #14
  tail call fastcc void @init_cur_imgy(ptr noundef %1, ptr noundef nonnull %0, i32 noundef 1)
  %6 = load ptr, ptr %decode_one_component, align 8
  %imgUV = getelementptr inbounds i8, ptr %dec_picture, i64 136
  %7 = load ptr, ptr %imgUV, align 8
  %8 = load ptr, ptr %7, align 8
  %call5 = tail call i32 %6(ptr noundef nonnull %currMB, i32 noundef 1, ptr noundef %8, ptr noundef %dec_picture) #14
  tail call fastcc void @init_cur_imgy(ptr noundef %1, ptr noundef nonnull %0, i32 noundef 2)
  br label %if.end

if.else:                                          ; preds = %if.then
  %decode_one_component10 = getelementptr inbounds i8, ptr %0, i64 13416
  %9 = load ptr, ptr %decode_one_component10, align 8
  %imgY11 = getelementptr inbounds i8, ptr %dec_picture, i64 128
  %10 = load ptr, ptr %imgY11, align 8
  %call12 = tail call i32 %9(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef %10, ptr noundef %dec_picture) #14
  %11 = load ptr, ptr %decode_one_component10, align 8
  %imgUV14 = getelementptr inbounds i8, ptr %dec_picture, i64 136
  %12 = load ptr, ptr %imgUV14, align 8
  %13 = load ptr, ptr %12, align 8
  %call16 = tail call i32 %11(ptr noundef nonnull %currMB, i32 noundef 1, ptr noundef %13, ptr noundef %dec_picture) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %decode_one_component10.sink = phi ptr [ %decode_one_component10, %if.else ], [ %decode_one_component, %if.then3 ]
  %imgUV14.sink = phi ptr [ %imgUV14, %if.else ], [ %imgUV, %if.then3 ]
  %14 = load ptr, ptr %decode_one_component10.sink, align 8
  %15 = load ptr, ptr %imgUV14.sink, align 8
  %arrayidx19 = getelementptr inbounds i8, ptr %15, i64 8
  %16 = load ptr, ptr %arrayidx19, align 8
  %call20 = tail call i32 %14(ptr noundef nonnull %currMB, i32 noundef 2, ptr noundef %16, ptr noundef %dec_picture) #14
  %is_reset_coeff = getelementptr inbounds i8, ptr %0, i64 1240
  store i32 0, ptr %is_reset_coeff, align 8
  br label %if.end25

if.else21:                                        ; preds = %entry
  %decode_one_component22 = getelementptr inbounds i8, ptr %0, i64 13416
  %17 = load ptr, ptr %decode_one_component22, align 8
  %imgY23 = getelementptr inbounds i8, ptr %dec_picture, i64 128
  %18 = load ptr, ptr %imgY23, align 8
  %call24 = tail call i32 %17(ptr noundef nonnull %currMB, i32 noundef 0, ptr noundef %18, ptr noundef %dec_picture) #14
  br label %if.end25

if.end25:                                         ; preds = %if.else21, %if.end
  ret i32 0
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @init_cur_imgy(ptr nocapture noundef readonly %p_Vid, ptr nocapture noundef readonly %currSlice, i32 noundef %pl) unnamed_addr #8 {
entry:
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %p_Vid, i64 849280
  %0 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end61

if.then:                                          ; preds = %entry
  %no_reference_picture = getelementptr inbounds i8, ptr %p_Vid, i64 856488
  %1 = load ptr, ptr %no_reference_picture, align 8
  %framepoc = getelementptr inbounds i8, ptr %currSlice, i64 76
  %2 = load i32, ptr %framepoc, align 4
  %recovery_poc = getelementptr inbounds i8, ptr %p_Vid, i64 849276
  %3 = load i32, ptr %recovery_poc, align 4
  %cmp1 = icmp slt i32 %2, %3
  %cmp2 = icmp eq i32 %pl, 0
  %listXsize = getelementptr inbounds i8, ptr %currSlice, i64 256
  %listX = getelementptr inbounds i8, ptr %currSlice, i64 264
  br i1 %cmp2, label %for.cond.preheader, label %for.cond23.preheader

for.cond23.preheader:                             ; preds = %if.then
  %4 = sext i32 %pl to i64
  %5 = load i8, ptr %listXsize, align 1
  %cmp3294 = icmp sgt i8 %5, 0
  br i1 %cmp3294, label %for.body34, label %for.inc57

for.cond.preheader:                               ; preds = %if.then
  %6 = load i8, ptr %listXsize, align 1
  %cmp998 = icmp sgt i8 %6, 0
  br i1 %cmp998, label %for.body11, label %for.inc20

for.body11:                                       ; preds = %for.cond.preheader, %if.end
  %7 = phi i8 [ %12, %if.end ], [ %6, %for.cond.preheader ]
  %indvars.iv106 = phi i64 [ %indvars.iv.next107, %if.end ], [ 0, %for.cond.preheader ]
  %8 = load ptr, ptr %listX, align 8
  %arrayidx15 = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv106
  %9 = load ptr, ptr %arrayidx15, align 8
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %if.end, label %if.then16

if.then16:                                        ; preds = %for.body11
  %cmp18 = icmp eq ptr %9, %1
  %10 = select i1 %cmp1, i1 %cmp18, i1 false
  %land.ext = zext i1 %10 to i32
  %no_ref = getelementptr inbounds i8, ptr %9, i64 384
  store i32 %land.ext, ptr %no_ref, align 8
  %imgY = getelementptr inbounds i8, ptr %9, i64 128
  %11 = load ptr, ptr %imgY, align 8
  %cur_imgY = getelementptr inbounds i8, ptr %9, i64 376
  store ptr %11, ptr %cur_imgY, align 8
  %.pre117 = load i8, ptr %listXsize, align 1
  br label %if.end

if.end:                                           ; preds = %if.then16, %for.body11
  %12 = phi i8 [ %.pre117, %if.then16 ], [ %7, %for.body11 ]
  %indvars.iv.next107 = add nuw nsw i64 %indvars.iv106, 1
  %13 = sext i8 %12 to i64
  %cmp9 = icmp slt i64 %indvars.iv.next107, %13
  br i1 %cmp9, label %for.body11, label %for.inc20

for.inc20:                                        ; preds = %if.end, %for.cond.preheader
  %arrayidx.1 = getelementptr inbounds i8, ptr %currSlice, i64 257
  %14 = load i8, ptr %arrayidx.1, align 1
  %cmp998.1 = icmp sgt i8 %14, 0
  br i1 %cmp998.1, label %for.body11.lr.ph.1, label %for.inc20.1

for.body11.lr.ph.1:                               ; preds = %for.inc20
  %arrayidx13.1 = getelementptr inbounds i8, ptr %currSlice, i64 272
  br label %for.body11.1

for.body11.1:                                     ; preds = %if.end.1, %for.body11.lr.ph.1
  %15 = phi i8 [ %14, %for.body11.lr.ph.1 ], [ %20, %if.end.1 ]
  %indvars.iv106.1 = phi i64 [ 0, %for.body11.lr.ph.1 ], [ %indvars.iv.next107.1, %if.end.1 ]
  %16 = load ptr, ptr %arrayidx13.1, align 8
  %arrayidx15.1 = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv106.1
  %17 = load ptr, ptr %arrayidx15.1, align 8
  %tobool.not.1 = icmp eq ptr %17, null
  br i1 %tobool.not.1, label %if.end.1, label %if.then16.1

if.then16.1:                                      ; preds = %for.body11.1
  %cmp18.1 = icmp eq ptr %17, %1
  %18 = select i1 %cmp1, i1 %cmp18.1, i1 false
  %land.ext.1 = zext i1 %18 to i32
  %no_ref.1 = getelementptr inbounds i8, ptr %17, i64 384
  store i32 %land.ext.1, ptr %no_ref.1, align 8
  %imgY.1 = getelementptr inbounds i8, ptr %17, i64 128
  %19 = load ptr, ptr %imgY.1, align 8
  %cur_imgY.1 = getelementptr inbounds i8, ptr %17, i64 376
  store ptr %19, ptr %cur_imgY.1, align 8
  %.pre118 = load i8, ptr %arrayidx.1, align 1
  br label %if.end.1

if.end.1:                                         ; preds = %if.then16.1, %for.body11.1
  %20 = phi i8 [ %.pre118, %if.then16.1 ], [ %15, %for.body11.1 ]
  %indvars.iv.next107.1 = add nuw nsw i64 %indvars.iv106.1, 1
  %21 = sext i8 %20 to i64
  %cmp9.1 = icmp slt i64 %indvars.iv.next107.1, %21
  br i1 %cmp9.1, label %for.body11.1, label %for.inc20.1

for.inc20.1:                                      ; preds = %if.end.1, %for.inc20
  %arrayidx.2 = getelementptr inbounds i8, ptr %currSlice, i64 258
  %22 = load i8, ptr %arrayidx.2, align 1
  %cmp998.2 = icmp sgt i8 %22, 0
  br i1 %cmp998.2, label %for.body11.lr.ph.2, label %for.inc20.2

for.body11.lr.ph.2:                               ; preds = %for.inc20.1
  %arrayidx13.2 = getelementptr inbounds i8, ptr %currSlice, i64 280
  br label %for.body11.2

for.body11.2:                                     ; preds = %if.end.2, %for.body11.lr.ph.2
  %23 = phi i8 [ %22, %for.body11.lr.ph.2 ], [ %28, %if.end.2 ]
  %indvars.iv106.2 = phi i64 [ 0, %for.body11.lr.ph.2 ], [ %indvars.iv.next107.2, %if.end.2 ]
  %24 = load ptr, ptr %arrayidx13.2, align 8
  %arrayidx15.2 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv106.2
  %25 = load ptr, ptr %arrayidx15.2, align 8
  %tobool.not.2 = icmp eq ptr %25, null
  br i1 %tobool.not.2, label %if.end.2, label %if.then16.2

if.then16.2:                                      ; preds = %for.body11.2
  %cmp18.2 = icmp eq ptr %25, %1
  %26 = select i1 %cmp1, i1 %cmp18.2, i1 false
  %land.ext.2 = zext i1 %26 to i32
  %no_ref.2 = getelementptr inbounds i8, ptr %25, i64 384
  store i32 %land.ext.2, ptr %no_ref.2, align 8
  %imgY.2 = getelementptr inbounds i8, ptr %25, i64 128
  %27 = load ptr, ptr %imgY.2, align 8
  %cur_imgY.2 = getelementptr inbounds i8, ptr %25, i64 376
  store ptr %27, ptr %cur_imgY.2, align 8
  %.pre119 = load i8, ptr %arrayidx.2, align 1
  br label %if.end.2

if.end.2:                                         ; preds = %if.then16.2, %for.body11.2
  %28 = phi i8 [ %.pre119, %if.then16.2 ], [ %23, %for.body11.2 ]
  %indvars.iv.next107.2 = add nuw nsw i64 %indvars.iv106.2, 1
  %29 = sext i8 %28 to i64
  %cmp9.2 = icmp slt i64 %indvars.iv.next107.2, %29
  br i1 %cmp9.2, label %for.body11.2, label %for.inc20.2

for.inc20.2:                                      ; preds = %if.end.2, %for.inc20.1
  %arrayidx.3 = getelementptr inbounds i8, ptr %currSlice, i64 259
  %30 = load i8, ptr %arrayidx.3, align 1
  %cmp998.3 = icmp sgt i8 %30, 0
  br i1 %cmp998.3, label %for.body11.lr.ph.3, label %for.inc20.3

for.body11.lr.ph.3:                               ; preds = %for.inc20.2
  %arrayidx13.3 = getelementptr inbounds i8, ptr %currSlice, i64 288
  br label %for.body11.3

for.body11.3:                                     ; preds = %if.end.3, %for.body11.lr.ph.3
  %31 = phi i8 [ %30, %for.body11.lr.ph.3 ], [ %36, %if.end.3 ]
  %indvars.iv106.3 = phi i64 [ 0, %for.body11.lr.ph.3 ], [ %indvars.iv.next107.3, %if.end.3 ]
  %32 = load ptr, ptr %arrayidx13.3, align 8
  %arrayidx15.3 = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv106.3
  %33 = load ptr, ptr %arrayidx15.3, align 8
  %tobool.not.3 = icmp eq ptr %33, null
  br i1 %tobool.not.3, label %if.end.3, label %if.then16.3

if.then16.3:                                      ; preds = %for.body11.3
  %cmp18.3 = icmp eq ptr %33, %1
  %34 = select i1 %cmp1, i1 %cmp18.3, i1 false
  %land.ext.3 = zext i1 %34 to i32
  %no_ref.3 = getelementptr inbounds i8, ptr %33, i64 384
  store i32 %land.ext.3, ptr %no_ref.3, align 8
  %imgY.3 = getelementptr inbounds i8, ptr %33, i64 128
  %35 = load ptr, ptr %imgY.3, align 8
  %cur_imgY.3 = getelementptr inbounds i8, ptr %33, i64 376
  store ptr %35, ptr %cur_imgY.3, align 8
  %.pre120 = load i8, ptr %arrayidx.3, align 1
  br label %if.end.3

if.end.3:                                         ; preds = %if.then16.3, %for.body11.3
  %36 = phi i8 [ %.pre120, %if.then16.3 ], [ %31, %for.body11.3 ]
  %indvars.iv.next107.3 = add nuw nsw i64 %indvars.iv106.3, 1
  %37 = sext i8 %36 to i64
  %cmp9.3 = icmp slt i64 %indvars.iv.next107.3, %37
  br i1 %cmp9.3, label %for.body11.3, label %for.inc20.3

for.inc20.3:                                      ; preds = %if.end.3, %for.inc20.2
  %arrayidx.4 = getelementptr inbounds i8, ptr %currSlice, i64 260
  %38 = load i8, ptr %arrayidx.4, align 1
  %cmp998.4 = icmp sgt i8 %38, 0
  br i1 %cmp998.4, label %for.body11.lr.ph.4, label %for.inc20.4

for.body11.lr.ph.4:                               ; preds = %for.inc20.3
  %arrayidx13.4 = getelementptr inbounds i8, ptr %currSlice, i64 296
  br label %for.body11.4

for.body11.4:                                     ; preds = %if.end.4, %for.body11.lr.ph.4
  %39 = phi i8 [ %38, %for.body11.lr.ph.4 ], [ %44, %if.end.4 ]
  %indvars.iv106.4 = phi i64 [ 0, %for.body11.lr.ph.4 ], [ %indvars.iv.next107.4, %if.end.4 ]
  %40 = load ptr, ptr %arrayidx13.4, align 8
  %arrayidx15.4 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv106.4
  %41 = load ptr, ptr %arrayidx15.4, align 8
  %tobool.not.4 = icmp eq ptr %41, null
  br i1 %tobool.not.4, label %if.end.4, label %if.then16.4

if.then16.4:                                      ; preds = %for.body11.4
  %cmp18.4 = icmp eq ptr %41, %1
  %42 = select i1 %cmp1, i1 %cmp18.4, i1 false
  %land.ext.4 = zext i1 %42 to i32
  %no_ref.4 = getelementptr inbounds i8, ptr %41, i64 384
  store i32 %land.ext.4, ptr %no_ref.4, align 8
  %imgY.4 = getelementptr inbounds i8, ptr %41, i64 128
  %43 = load ptr, ptr %imgY.4, align 8
  %cur_imgY.4 = getelementptr inbounds i8, ptr %41, i64 376
  store ptr %43, ptr %cur_imgY.4, align 8
  %.pre121 = load i8, ptr %arrayidx.4, align 1
  br label %if.end.4

if.end.4:                                         ; preds = %if.then16.4, %for.body11.4
  %44 = phi i8 [ %.pre121, %if.then16.4 ], [ %39, %for.body11.4 ]
  %indvars.iv.next107.4 = add nuw nsw i64 %indvars.iv106.4, 1
  %45 = sext i8 %44 to i64
  %cmp9.4 = icmp slt i64 %indvars.iv.next107.4, %45
  br i1 %cmp9.4, label %for.body11.4, label %for.inc20.4

for.inc20.4:                                      ; preds = %if.end.4, %for.inc20.3
  %arrayidx.5 = getelementptr inbounds i8, ptr %currSlice, i64 261
  %46 = load i8, ptr %arrayidx.5, align 1
  %cmp998.5 = icmp sgt i8 %46, 0
  br i1 %cmp998.5, label %for.body11.lr.ph.5, label %if.end61

for.body11.lr.ph.5:                               ; preds = %for.inc20.4
  %arrayidx13.5 = getelementptr inbounds i8, ptr %currSlice, i64 304
  br label %for.body11.5

for.body11.5:                                     ; preds = %if.end.5, %for.body11.lr.ph.5
  %47 = phi i8 [ %46, %for.body11.lr.ph.5 ], [ %52, %if.end.5 ]
  %indvars.iv106.5 = phi i64 [ 0, %for.body11.lr.ph.5 ], [ %indvars.iv.next107.5, %if.end.5 ]
  %48 = load ptr, ptr %arrayidx13.5, align 8
  %arrayidx15.5 = getelementptr inbounds ptr, ptr %48, i64 %indvars.iv106.5
  %49 = load ptr, ptr %arrayidx15.5, align 8
  %tobool.not.5 = icmp eq ptr %49, null
  br i1 %tobool.not.5, label %if.end.5, label %if.then16.5

if.then16.5:                                      ; preds = %for.body11.5
  %cmp18.5 = icmp eq ptr %49, %1
  %50 = select i1 %cmp1, i1 %cmp18.5, i1 false
  %land.ext.5 = zext i1 %50 to i32
  %no_ref.5 = getelementptr inbounds i8, ptr %49, i64 384
  store i32 %land.ext.5, ptr %no_ref.5, align 8
  %imgY.5 = getelementptr inbounds i8, ptr %49, i64 128
  %51 = load ptr, ptr %imgY.5, align 8
  %cur_imgY.5 = getelementptr inbounds i8, ptr %49, i64 376
  store ptr %51, ptr %cur_imgY.5, align 8
  %.pre122 = load i8, ptr %arrayidx.5, align 1
  br label %if.end.5

if.end.5:                                         ; preds = %if.then16.5, %for.body11.5
  %52 = phi i8 [ %.pre122, %if.then16.5 ], [ %47, %for.body11.5 ]
  %indvars.iv.next107.5 = add nuw nsw i64 %indvars.iv106.5, 1
  %53 = sext i8 %52 to i64
  %cmp9.5 = icmp slt i64 %indvars.iv.next107.5, %53
  br i1 %cmp9.5, label %for.body11.5, label %if.end61

for.body34:                                       ; preds = %for.cond23.preheader, %if.end53
  %54 = phi i8 [ %61, %if.end53 ], [ %5, %for.cond23.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end53 ], [ 0, %for.cond23.preheader ]
  %55 = load ptr, ptr %listX, align 8
  %arrayidx40 = getelementptr inbounds ptr, ptr %55, i64 %indvars.iv
  %56 = load ptr, ptr %arrayidx40, align 8
  %tobool41.not = icmp eq ptr %56, null
  br i1 %tobool41.not, label %if.end53, label %if.then42

if.then42:                                        ; preds = %for.body34
  %cmp45 = icmp eq ptr %56, %1
  %57 = select i1 %cmp1, i1 %cmp45, i1 false
  %land.ext48 = zext i1 %57 to i32
  %no_ref49 = getelementptr inbounds i8, ptr %56, i64 384
  store i32 %land.ext48, ptr %no_ref49, align 8
  %imgUV = getelementptr inbounds i8, ptr %56, i64 136
  %58 = load ptr, ptr %imgUV, align 8
  %59 = getelementptr ptr, ptr %58, i64 %4
  %arrayidx51 = getelementptr i8, ptr %59, i64 -8
  %60 = load ptr, ptr %arrayidx51, align 8
  %cur_imgY52 = getelementptr inbounds i8, ptr %56, i64 376
  store ptr %60, ptr %cur_imgY52, align 8
  %.pre = load i8, ptr %listXsize, align 1
  br label %if.end53

if.end53:                                         ; preds = %if.then42, %for.body34
  %61 = phi i8 [ %.pre, %if.then42 ], [ %54, %for.body34 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %62 = sext i8 %61 to i64
  %cmp32 = icmp slt i64 %indvars.iv.next, %62
  br i1 %cmp32, label %for.body34, label %for.inc57

for.inc57:                                        ; preds = %if.end53, %for.cond23.preheader
  %arrayidx30.1 = getelementptr inbounds i8, ptr %currSlice, i64 257
  %63 = load i8, ptr %arrayidx30.1, align 1
  %cmp3294.1 = icmp sgt i8 %63, 0
  br i1 %cmp3294.1, label %for.body34.lr.ph.1, label %for.inc57.1

for.body34.lr.ph.1:                               ; preds = %for.inc57
  %arrayidx38.1 = getelementptr inbounds i8, ptr %currSlice, i64 272
  br label %for.body34.1

for.body34.1:                                     ; preds = %if.end53.1, %for.body34.lr.ph.1
  %64 = phi i8 [ %63, %for.body34.lr.ph.1 ], [ %71, %if.end53.1 ]
  %indvars.iv.1 = phi i64 [ 0, %for.body34.lr.ph.1 ], [ %indvars.iv.next.1, %if.end53.1 ]
  %65 = load ptr, ptr %arrayidx38.1, align 8
  %arrayidx40.1 = getelementptr inbounds ptr, ptr %65, i64 %indvars.iv.1
  %66 = load ptr, ptr %arrayidx40.1, align 8
  %tobool41.not.1 = icmp eq ptr %66, null
  br i1 %tobool41.not.1, label %if.end53.1, label %if.then42.1

if.then42.1:                                      ; preds = %for.body34.1
  %cmp45.1 = icmp eq ptr %66, %1
  %67 = select i1 %cmp1, i1 %cmp45.1, i1 false
  %land.ext48.1 = zext i1 %67 to i32
  %no_ref49.1 = getelementptr inbounds i8, ptr %66, i64 384
  store i32 %land.ext48.1, ptr %no_ref49.1, align 8
  %imgUV.1 = getelementptr inbounds i8, ptr %66, i64 136
  %68 = load ptr, ptr %imgUV.1, align 8
  %69 = getelementptr ptr, ptr %68, i64 %4
  %arrayidx51.1 = getelementptr i8, ptr %69, i64 -8
  %70 = load ptr, ptr %arrayidx51.1, align 8
  %cur_imgY52.1 = getelementptr inbounds i8, ptr %66, i64 376
  store ptr %70, ptr %cur_imgY52.1, align 8
  %.pre112 = load i8, ptr %arrayidx30.1, align 1
  br label %if.end53.1

if.end53.1:                                       ; preds = %if.then42.1, %for.body34.1
  %71 = phi i8 [ %.pre112, %if.then42.1 ], [ %64, %for.body34.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %72 = sext i8 %71 to i64
  %cmp32.1 = icmp slt i64 %indvars.iv.next.1, %72
  br i1 %cmp32.1, label %for.body34.1, label %for.inc57.1

for.inc57.1:                                      ; preds = %if.end53.1, %for.inc57
  %arrayidx30.2 = getelementptr inbounds i8, ptr %currSlice, i64 258
  %73 = load i8, ptr %arrayidx30.2, align 1
  %cmp3294.2 = icmp sgt i8 %73, 0
  br i1 %cmp3294.2, label %for.body34.lr.ph.2, label %for.inc57.2

for.body34.lr.ph.2:                               ; preds = %for.inc57.1
  %arrayidx38.2 = getelementptr inbounds i8, ptr %currSlice, i64 280
  br label %for.body34.2

for.body34.2:                                     ; preds = %if.end53.2, %for.body34.lr.ph.2
  %74 = phi i8 [ %73, %for.body34.lr.ph.2 ], [ %81, %if.end53.2 ]
  %indvars.iv.2 = phi i64 [ 0, %for.body34.lr.ph.2 ], [ %indvars.iv.next.2, %if.end53.2 ]
  %75 = load ptr, ptr %arrayidx38.2, align 8
  %arrayidx40.2 = getelementptr inbounds ptr, ptr %75, i64 %indvars.iv.2
  %76 = load ptr, ptr %arrayidx40.2, align 8
  %tobool41.not.2 = icmp eq ptr %76, null
  br i1 %tobool41.not.2, label %if.end53.2, label %if.then42.2

if.then42.2:                                      ; preds = %for.body34.2
  %cmp45.2 = icmp eq ptr %76, %1
  %77 = select i1 %cmp1, i1 %cmp45.2, i1 false
  %land.ext48.2 = zext i1 %77 to i32
  %no_ref49.2 = getelementptr inbounds i8, ptr %76, i64 384
  store i32 %land.ext48.2, ptr %no_ref49.2, align 8
  %imgUV.2 = getelementptr inbounds i8, ptr %76, i64 136
  %78 = load ptr, ptr %imgUV.2, align 8
  %79 = getelementptr ptr, ptr %78, i64 %4
  %arrayidx51.2 = getelementptr i8, ptr %79, i64 -8
  %80 = load ptr, ptr %arrayidx51.2, align 8
  %cur_imgY52.2 = getelementptr inbounds i8, ptr %76, i64 376
  store ptr %80, ptr %cur_imgY52.2, align 8
  %.pre113 = load i8, ptr %arrayidx30.2, align 1
  br label %if.end53.2

if.end53.2:                                       ; preds = %if.then42.2, %for.body34.2
  %81 = phi i8 [ %.pre113, %if.then42.2 ], [ %74, %for.body34.2 ]
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %82 = sext i8 %81 to i64
  %cmp32.2 = icmp slt i64 %indvars.iv.next.2, %82
  br i1 %cmp32.2, label %for.body34.2, label %for.inc57.2

for.inc57.2:                                      ; preds = %if.end53.2, %for.inc57.1
  %arrayidx30.3 = getelementptr inbounds i8, ptr %currSlice, i64 259
  %83 = load i8, ptr %arrayidx30.3, align 1
  %cmp3294.3 = icmp sgt i8 %83, 0
  br i1 %cmp3294.3, label %for.body34.lr.ph.3, label %for.inc57.3

for.body34.lr.ph.3:                               ; preds = %for.inc57.2
  %arrayidx38.3 = getelementptr inbounds i8, ptr %currSlice, i64 288
  br label %for.body34.3

for.body34.3:                                     ; preds = %if.end53.3, %for.body34.lr.ph.3
  %84 = phi i8 [ %83, %for.body34.lr.ph.3 ], [ %91, %if.end53.3 ]
  %indvars.iv.3 = phi i64 [ 0, %for.body34.lr.ph.3 ], [ %indvars.iv.next.3, %if.end53.3 ]
  %85 = load ptr, ptr %arrayidx38.3, align 8
  %arrayidx40.3 = getelementptr inbounds ptr, ptr %85, i64 %indvars.iv.3
  %86 = load ptr, ptr %arrayidx40.3, align 8
  %tobool41.not.3 = icmp eq ptr %86, null
  br i1 %tobool41.not.3, label %if.end53.3, label %if.then42.3

if.then42.3:                                      ; preds = %for.body34.3
  %cmp45.3 = icmp eq ptr %86, %1
  %87 = select i1 %cmp1, i1 %cmp45.3, i1 false
  %land.ext48.3 = zext i1 %87 to i32
  %no_ref49.3 = getelementptr inbounds i8, ptr %86, i64 384
  store i32 %land.ext48.3, ptr %no_ref49.3, align 8
  %imgUV.3 = getelementptr inbounds i8, ptr %86, i64 136
  %88 = load ptr, ptr %imgUV.3, align 8
  %89 = getelementptr ptr, ptr %88, i64 %4
  %arrayidx51.3 = getelementptr i8, ptr %89, i64 -8
  %90 = load ptr, ptr %arrayidx51.3, align 8
  %cur_imgY52.3 = getelementptr inbounds i8, ptr %86, i64 376
  store ptr %90, ptr %cur_imgY52.3, align 8
  %.pre114 = load i8, ptr %arrayidx30.3, align 1
  br label %if.end53.3

if.end53.3:                                       ; preds = %if.then42.3, %for.body34.3
  %91 = phi i8 [ %.pre114, %if.then42.3 ], [ %84, %for.body34.3 ]
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %92 = sext i8 %91 to i64
  %cmp32.3 = icmp slt i64 %indvars.iv.next.3, %92
  br i1 %cmp32.3, label %for.body34.3, label %for.inc57.3

for.inc57.3:                                      ; preds = %if.end53.3, %for.inc57.2
  %arrayidx30.4 = getelementptr inbounds i8, ptr %currSlice, i64 260
  %93 = load i8, ptr %arrayidx30.4, align 1
  %cmp3294.4 = icmp sgt i8 %93, 0
  br i1 %cmp3294.4, label %for.body34.lr.ph.4, label %for.inc57.4

for.body34.lr.ph.4:                               ; preds = %for.inc57.3
  %arrayidx38.4 = getelementptr inbounds i8, ptr %currSlice, i64 296
  br label %for.body34.4

for.body34.4:                                     ; preds = %if.end53.4, %for.body34.lr.ph.4
  %94 = phi i8 [ %93, %for.body34.lr.ph.4 ], [ %101, %if.end53.4 ]
  %indvars.iv.4 = phi i64 [ 0, %for.body34.lr.ph.4 ], [ %indvars.iv.next.4, %if.end53.4 ]
  %95 = load ptr, ptr %arrayidx38.4, align 8
  %arrayidx40.4 = getelementptr inbounds ptr, ptr %95, i64 %indvars.iv.4
  %96 = load ptr, ptr %arrayidx40.4, align 8
  %tobool41.not.4 = icmp eq ptr %96, null
  br i1 %tobool41.not.4, label %if.end53.4, label %if.then42.4

if.then42.4:                                      ; preds = %for.body34.4
  %cmp45.4 = icmp eq ptr %96, %1
  %97 = select i1 %cmp1, i1 %cmp45.4, i1 false
  %land.ext48.4 = zext i1 %97 to i32
  %no_ref49.4 = getelementptr inbounds i8, ptr %96, i64 384
  store i32 %land.ext48.4, ptr %no_ref49.4, align 8
  %imgUV.4 = getelementptr inbounds i8, ptr %96, i64 136
  %98 = load ptr, ptr %imgUV.4, align 8
  %99 = getelementptr ptr, ptr %98, i64 %4
  %arrayidx51.4 = getelementptr i8, ptr %99, i64 -8
  %100 = load ptr, ptr %arrayidx51.4, align 8
  %cur_imgY52.4 = getelementptr inbounds i8, ptr %96, i64 376
  store ptr %100, ptr %cur_imgY52.4, align 8
  %.pre115 = load i8, ptr %arrayidx30.4, align 1
  br label %if.end53.4

if.end53.4:                                       ; preds = %if.then42.4, %for.body34.4
  %101 = phi i8 [ %.pre115, %if.then42.4 ], [ %94, %for.body34.4 ]
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv.4, 1
  %102 = sext i8 %101 to i64
  %cmp32.4 = icmp slt i64 %indvars.iv.next.4, %102
  br i1 %cmp32.4, label %for.body34.4, label %for.inc57.4

for.inc57.4:                                      ; preds = %if.end53.4, %for.inc57.3
  %arrayidx30.5 = getelementptr inbounds i8, ptr %currSlice, i64 261
  %103 = load i8, ptr %arrayidx30.5, align 1
  %cmp3294.5 = icmp sgt i8 %103, 0
  br i1 %cmp3294.5, label %for.body34.lr.ph.5, label %if.end61

for.body34.lr.ph.5:                               ; preds = %for.inc57.4
  %arrayidx38.5 = getelementptr inbounds i8, ptr %currSlice, i64 304
  br label %for.body34.5

for.body34.5:                                     ; preds = %if.end53.5, %for.body34.lr.ph.5
  %104 = phi i8 [ %103, %for.body34.lr.ph.5 ], [ %111, %if.end53.5 ]
  %indvars.iv.5 = phi i64 [ 0, %for.body34.lr.ph.5 ], [ %indvars.iv.next.5, %if.end53.5 ]
  %105 = load ptr, ptr %arrayidx38.5, align 8
  %arrayidx40.5 = getelementptr inbounds ptr, ptr %105, i64 %indvars.iv.5
  %106 = load ptr, ptr %arrayidx40.5, align 8
  %tobool41.not.5 = icmp eq ptr %106, null
  br i1 %tobool41.not.5, label %if.end53.5, label %if.then42.5

if.then42.5:                                      ; preds = %for.body34.5
  %cmp45.5 = icmp eq ptr %106, %1
  %107 = select i1 %cmp1, i1 %cmp45.5, i1 false
  %land.ext48.5 = zext i1 %107 to i32
  %no_ref49.5 = getelementptr inbounds i8, ptr %106, i64 384
  store i32 %land.ext48.5, ptr %no_ref49.5, align 8
  %imgUV.5 = getelementptr inbounds i8, ptr %106, i64 136
  %108 = load ptr, ptr %imgUV.5, align 8
  %109 = getelementptr ptr, ptr %108, i64 %4
  %arrayidx51.5 = getelementptr i8, ptr %109, i64 -8
  %110 = load ptr, ptr %arrayidx51.5, align 8
  %cur_imgY52.5 = getelementptr inbounds i8, ptr %106, i64 376
  store ptr %110, ptr %cur_imgY52.5, align 8
  %.pre116 = load i8, ptr %arrayidx30.5, align 1
  br label %if.end53.5

if.end53.5:                                       ; preds = %if.then42.5, %for.body34.5
  %111 = phi i8 [ %.pre116, %if.then42.5 ], [ %104, %for.body34.5 ]
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv.5, 1
  %112 = sext i8 %111 to i64
  %cmp32.5 = icmp slt i64 %indvars.iv.next.5, %112
  br i1 %cmp32.5, label %for.body34.5, label %if.end61

if.end61:                                         ; preds = %if.end53.5, %if.end.5, %for.inc57.4, %for.inc20.4, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @change_plane_JV(ptr nocapture noundef %p_Vid, i32 noundef %nplane, ptr noundef writeonly %pSlice) local_unnamed_addr #7 {
entry:
  %mb_data_JV = getelementptr inbounds i8, ptr %p_Vid, i64 848896
  %idxprom = sext i32 %nplane to i64
  %arrayidx = getelementptr inbounds [3 x ptr], ptr %mb_data_JV, i64 0, i64 %idxprom
  %0 = load ptr, ptr %arrayidx, align 8
  %mb_data = getelementptr inbounds i8, ptr %p_Vid, i64 848888
  store ptr %0, ptr %mb_data, align 8
  %dec_picture_JV = getelementptr inbounds i8, ptr %p_Vid, i64 856464
  %arrayidx2 = getelementptr inbounds [3 x ptr], ptr %dec_picture_JV, i64 0, i64 %idxprom
  %1 = load ptr, ptr %arrayidx2, align 8
  %dec_picture = getelementptr inbounds i8, ptr %p_Vid, i64 856456
  store ptr %1, ptr %dec_picture, align 8
  %siblock_JV = getelementptr inbounds i8, ptr %p_Vid, i64 848848
  %arrayidx4 = getelementptr inbounds [3 x ptr], ptr %siblock_JV, i64 0, i64 %idxprom
  %2 = load ptr, ptr %arrayidx4, align 8
  %siblock = getelementptr inbounds i8, ptr %p_Vid, i64 848840
  store ptr %2, ptr %siblock, align 8
  %ipredmode_JV = getelementptr inbounds i8, ptr %p_Vid, i64 848808
  %arrayidx6 = getelementptr inbounds [3 x ptr], ptr %ipredmode_JV, i64 0, i64 %idxprom
  %3 = load ptr, ptr %arrayidx6, align 8
  %ipredmode = getelementptr inbounds i8, ptr %p_Vid, i64 848800
  store ptr %3, ptr %ipredmode, align 8
  %intra_block_JV = getelementptr inbounds i8, ptr %p_Vid, i64 848752
  %arrayidx8 = getelementptr inbounds [3 x ptr], ptr %intra_block_JV, i64 0, i64 %idxprom
  %4 = load ptr, ptr %arrayidx8, align 8
  %intra_block = getelementptr inbounds i8, ptr %p_Vid, i64 848744
  store ptr %4, ptr %intra_block, align 8
  %tobool.not = icmp eq ptr %pSlice, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %5 = load ptr, ptr %arrayidx, align 8
  %mb_data12 = getelementptr inbounds i8, ptr %pSlice, i64 13512
  store ptr %5, ptr %mb_data12, align 8
  %6 = load ptr, ptr %arrayidx2, align 8
  %dec_picture16 = getelementptr inbounds i8, ptr %pSlice, i64 13520
  store ptr %6, ptr %dec_picture16, align 8
  %7 = load ptr, ptr %arrayidx4, align 8
  %siblock20 = getelementptr inbounds i8, ptr %pSlice, i64 13528
  store ptr %7, ptr %siblock20, align 8
  %8 = load ptr, ptr %arrayidx6, align 8
  %ipredmode24 = getelementptr inbounds i8, ptr %pSlice, i64 13536
  store ptr %8, ptr %ipredmode24, align 8
  %9 = load ptr, ptr %arrayidx8, align 8
  %intra_block28 = getelementptr inbounds i8, ptr %pSlice, i64 13544
  store ptr %9, ptr %intra_block28, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @make_frame_picture_JV(ptr nocapture noundef %p_Vid) local_unnamed_addr #3 {
entry:
  %dec_picture_JV = getelementptr inbounds i8, ptr %p_Vid, i64 856464
  %0 = load ptr, ptr %dec_picture_JV, align 8
  %dec_picture = getelementptr inbounds i8, ptr %p_Vid, i64 856456
  store ptr %0, ptr %dec_picture, align 8
  %used_for_reference = getelementptr inbounds i8, ptr %0, i64 44
  %1 = load i32, ptr %used_for_reference, align 4
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %slice_type = getelementptr inbounds i8, ptr %0, i64 248
  %2 = load i32, ptr %slice_type, align 8
  switch i32 %2, label %if.then [
    i32 2, label %if.end
    i32 4, label %if.end
  ]

if.then:                                          ; preds = %land.lhs.true
  %size_x = getelementptr inbounds i8, ptr %0, i64 64
  %3 = load <2 x i32>, ptr %size_x, align 8
  %4 = sdiv <2 x i32> %3, <i32 4, i32 4>
  %5 = extractelement <2 x i32> %4, i64 1
  %mul = shl i32 %5, 5
  %6 = extractelement <2 x i32> %4, i64 0
  %mul10 = mul i32 %mul, %6
  %JVmv_info = getelementptr inbounds i8, ptr %0, i64 160
  %7 = load ptr, ptr %JVmv_info, align 8
  %8 = load ptr, ptr %7, align 8
  %mv_info = getelementptr inbounds i8, ptr %0, i64 152
  %9 = load ptr, ptr %mv_info, align 8
  %10 = load ptr, ptr %9, align 8
  %conv20 = sext i32 %mul10 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %10, i64 %conv20, i1 false)
  %11 = load ptr, ptr %dec_picture, align 8
  %arrayidx23 = getelementptr inbounds i8, ptr %11, i64 168
  %12 = load ptr, ptr %arrayidx23, align 8
  %13 = load ptr, ptr %12, align 8
  %arrayidx27 = getelementptr inbounds i8, ptr %p_Vid, i64 856472
  %14 = load ptr, ptr %arrayidx27, align 8
  %mv_info28 = getelementptr inbounds i8, ptr %14, i64 152
  %15 = load ptr, ptr %mv_info28, align 8
  %16 = load ptr, ptr %15, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %16, i64 %conv20, i1 false)
  %17 = load ptr, ptr %dec_picture, align 8
  %arrayidx34 = getelementptr inbounds i8, ptr %17, i64 176
  %18 = load ptr, ptr %arrayidx34, align 8
  %19 = load ptr, ptr %18, align 8
  %arrayidx38 = getelementptr inbounds i8, ptr %p_Vid, i64 856480
  %20 = load ptr, ptr %arrayidx38, align 8
  %mv_info39 = getelementptr inbounds i8, ptr %20, i64 152
  %21 = load ptr, ptr %mv_info39, align 8
  %22 = load ptr, ptr %21, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %22, i64 %conv20, i1 false)
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %land.lhs.true, %if.then, %entry
  %height = getelementptr inbounds i8, ptr %p_Vid, i64 848784
  %width = getelementptr inbounds i8, ptr %p_Vid, i64 848780
  %23 = load i32, ptr %height, align 8
  %cmp4696 = icmp sgt i32 %23, 0
  br i1 %cmp4696, label %for.body48.lr.ph, label %for.end

for.body48.lr.ph:                                 ; preds = %if.end
  %arrayidx58 = getelementptr inbounds i8, ptr %p_Vid, i64 856472
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %for.body48
  %indvars.iv = phi i64 [ 0, %for.body48.lr.ph ], [ %indvars.iv.next, %for.body48 ]
  %24 = load i32, ptr %width, align 4
  %mul50 = shl i32 %24, 1
  %25 = load ptr, ptr %dec_picture, align 8
  %imgUV = getelementptr inbounds i8, ptr %25, i64 136
  %26 = load ptr, ptr %imgUV, align 8
  %27 = load ptr, ptr %26, align 8
  %arrayidx55 = getelementptr inbounds ptr, ptr %27, i64 %indvars.iv
  %28 = load ptr, ptr %arrayidx55, align 8
  %29 = load ptr, ptr %arrayidx58, align 8
  %imgY = getelementptr inbounds i8, ptr %29, i64 128
  %30 = load ptr, ptr %imgY, align 8
  %arrayidx60 = getelementptr inbounds ptr, ptr %30, i64 %indvars.iv
  %31 = load ptr, ptr %arrayidx60, align 8
  %conv61 = sext i32 %mul50 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %28, ptr align 2 %31, i64 %conv61, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %32 = load i32, ptr %height, align 8
  %33 = sext i32 %32 to i64
  %cmp46 = icmp slt i64 %indvars.iv.next, %33
  br i1 %cmp46, label %for.body48, label %for.end

for.end:                                          ; preds = %for.body48, %if.end
  %arrayidx65 = getelementptr inbounds i8, ptr %p_Vid, i64 856472
  %34 = load ptr, ptr %arrayidx65, align 8
  tail call void @free_storable_picture(ptr noundef %34) #14
  %35 = load i32, ptr %height, align 8
  %cmp4696.1 = icmp sgt i32 %35, 0
  br i1 %cmp4696.1, label %for.body48.lr.ph.1, label %for.end.1

for.body48.lr.ph.1:                               ; preds = %for.end
  %arrayidx58.1 = getelementptr inbounds i8, ptr %p_Vid, i64 856480
  br label %for.body48.1

for.body48.1:                                     ; preds = %for.body48.1, %for.body48.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body48.lr.ph.1 ], [ %indvars.iv.next.1, %for.body48.1 ]
  %36 = load i32, ptr %width, align 4
  %mul50.1 = shl i32 %36, 1
  %37 = load ptr, ptr %dec_picture, align 8
  %imgUV.1 = getelementptr inbounds i8, ptr %37, i64 136
  %38 = load ptr, ptr %imgUV.1, align 8
  %arrayidx53.1 = getelementptr inbounds i8, ptr %38, i64 8
  %39 = load ptr, ptr %arrayidx53.1, align 8
  %arrayidx55.1 = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv.1
  %40 = load ptr, ptr %arrayidx55.1, align 8
  %41 = load ptr, ptr %arrayidx58.1, align 8
  %imgY.1 = getelementptr inbounds i8, ptr %41, i64 128
  %42 = load ptr, ptr %imgY.1, align 8
  %arrayidx60.1 = getelementptr inbounds ptr, ptr %42, i64 %indvars.iv.1
  %43 = load ptr, ptr %arrayidx60.1, align 8
  %conv61.1 = sext i32 %mul50.1 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2 %40, ptr align 2 %43, i64 %conv61.1, i1 false)
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %44 = load i32, ptr %height, align 8
  %45 = sext i32 %44 to i64
  %cmp46.1 = icmp slt i64 %indvars.iv.next.1, %45
  br i1 %cmp46.1, label %for.body48.1, label %for.end.1

for.end.1:                                        ; preds = %for.body48.1, %for.end
  %arrayidx65.1 = getelementptr inbounds i8, ptr %p_Vid, i64 856480
  %46 = load ptr, ptr %arrayidx65.1, align 8
  tail call void @free_storable_picture(ptr noundef %46) #14
  ret void
}

declare void @free_storable_picture(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

declare void @linfo_ue(i32 noundef, i32 noundef, ptr noundef, ptr noundef) #5

declare i32 @readSyntaxElement_FLC(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @readFieldModeInfo_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

declare void @CheckAvailabilityOfNeighborsCABAC(ptr noundef) local_unnamed_addr #5

declare void @readMB_typeInfo_CABAC_i_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare void @readMB_transform_size_flag_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @init_macroblock(ptr nocapture noundef readonly %currMB) unnamed_addr #2 {
entry:
  %0 = load ptr, ptr %currMB, align 8
  %dec_picture = getelementptr inbounds i8, ptr %0, i64 13520
  %1 = load ptr, ptr %dec_picture, align 8
  %mv_info1 = getelementptr inbounds i8, ptr %1, i64 152
  %2 = load ptr, ptr %mv_info1, align 8
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %3 = load i32, ptr %block_y, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %idxprom
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %4 = load i32, ptr %block_x, align 8
  %5 = load ptr, ptr %arrayidx, align 8
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %struct.pic_motion_params, ptr %5, i64 %idx.ext
  %ref_idx.i = getelementptr inbounds i8, ptr %add.ptr, i64 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i, align 8
  %arrayidx8.i = getelementptr inbounds i8, ptr %add.ptr, i64 25
  store i8 -1, ptr %arrayidx8.i, align 1
  %6 = load ptr, ptr %arrayidx, align 8
  %7 = getelementptr %struct.pic_motion_params, ptr %6, i64 %idx.ext
  %add.ptr4 = getelementptr i8, ptr %7, i64 32
  %ref_idx.i20 = getelementptr i8, ptr %7, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr4, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i20, align 8
  %arrayidx8.i21 = getelementptr i8, ptr %7, i64 57
  store i8 -1, ptr %arrayidx8.i21, align 1
  %8 = load ptr, ptr %arrayidx, align 8
  %9 = getelementptr %struct.pic_motion_params, ptr %8, i64 %idx.ext
  %add.ptr7 = getelementptr i8, ptr %9, i64 64
  %ref_idx.i22 = getelementptr i8, ptr %9, i64 88
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr7, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i22, align 8
  %arrayidx8.i23 = getelementptr i8, ptr %9, i64 89
  store i8 -1, ptr %arrayidx8.i23, align 1
  %incdec.ptr = getelementptr inbounds i8, ptr %arrayidx, i64 8
  %10 = load ptr, ptr %arrayidx, align 8
  %11 = getelementptr %struct.pic_motion_params, ptr %10, i64 %idx.ext
  %add.ptr9 = getelementptr i8, ptr %11, i64 96
  %ref_idx.i24 = getelementptr i8, ptr %11, i64 120
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr9, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i24, align 8
  %arrayidx8.i25 = getelementptr i8, ptr %11, i64 121
  store i8 -1, ptr %arrayidx8.i25, align 1
  %12 = load i32, ptr %block_x, align 8
  %13 = load ptr, ptr %incdec.ptr, align 8
  %idx.ext.1 = sext i32 %12 to i64
  %add.ptr.1 = getelementptr inbounds %struct.pic_motion_params, ptr %13, i64 %idx.ext.1
  %ref_idx.i.1 = getelementptr inbounds i8, ptr %add.ptr.1, i64 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.1, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i.1, align 8
  %arrayidx8.i.1 = getelementptr inbounds i8, ptr %add.ptr.1, i64 25
  store i8 -1, ptr %arrayidx8.i.1, align 1
  %14 = load ptr, ptr %incdec.ptr, align 8
  %15 = getelementptr %struct.pic_motion_params, ptr %14, i64 %idx.ext.1
  %add.ptr4.1 = getelementptr i8, ptr %15, i64 32
  %ref_idx.i20.1 = getelementptr i8, ptr %15, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr4.1, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i20.1, align 8
  %arrayidx8.i21.1 = getelementptr i8, ptr %15, i64 57
  store i8 -1, ptr %arrayidx8.i21.1, align 1
  %16 = load ptr, ptr %incdec.ptr, align 8
  %17 = getelementptr %struct.pic_motion_params, ptr %16, i64 %idx.ext.1
  %add.ptr7.1 = getelementptr i8, ptr %17, i64 64
  %ref_idx.i22.1 = getelementptr i8, ptr %17, i64 88
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr7.1, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i22.1, align 8
  %arrayidx8.i23.1 = getelementptr i8, ptr %17, i64 89
  store i8 -1, ptr %arrayidx8.i23.1, align 1
  %incdec.ptr.1 = getelementptr inbounds i8, ptr %arrayidx, i64 16
  %18 = load ptr, ptr %incdec.ptr, align 8
  %19 = getelementptr %struct.pic_motion_params, ptr %18, i64 %idx.ext.1
  %add.ptr9.1 = getelementptr i8, ptr %19, i64 96
  %ref_idx.i24.1 = getelementptr i8, ptr %19, i64 120
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr9.1, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i24.1, align 8
  %arrayidx8.i25.1 = getelementptr i8, ptr %19, i64 121
  store i8 -1, ptr %arrayidx8.i25.1, align 1
  %20 = load i32, ptr %block_x, align 8
  %21 = load ptr, ptr %incdec.ptr.1, align 8
  %idx.ext.2 = sext i32 %20 to i64
  %add.ptr.2 = getelementptr inbounds %struct.pic_motion_params, ptr %21, i64 %idx.ext.2
  %ref_idx.i.2 = getelementptr inbounds i8, ptr %add.ptr.2, i64 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.2, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i.2, align 8
  %arrayidx8.i.2 = getelementptr inbounds i8, ptr %add.ptr.2, i64 25
  store i8 -1, ptr %arrayidx8.i.2, align 1
  %22 = load ptr, ptr %incdec.ptr.1, align 8
  %23 = getelementptr %struct.pic_motion_params, ptr %22, i64 %idx.ext.2
  %add.ptr4.2 = getelementptr i8, ptr %23, i64 32
  %ref_idx.i20.2 = getelementptr i8, ptr %23, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr4.2, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i20.2, align 8
  %arrayidx8.i21.2 = getelementptr i8, ptr %23, i64 57
  store i8 -1, ptr %arrayidx8.i21.2, align 1
  %24 = load ptr, ptr %incdec.ptr.1, align 8
  %25 = getelementptr %struct.pic_motion_params, ptr %24, i64 %idx.ext.2
  %add.ptr7.2 = getelementptr i8, ptr %25, i64 64
  %ref_idx.i22.2 = getelementptr i8, ptr %25, i64 88
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr7.2, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i22.2, align 8
  %arrayidx8.i23.2 = getelementptr i8, ptr %25, i64 89
  store i8 -1, ptr %arrayidx8.i23.2, align 1
  %incdec.ptr.2 = getelementptr inbounds i8, ptr %arrayidx, i64 24
  %26 = load ptr, ptr %incdec.ptr.1, align 8
  %27 = getelementptr %struct.pic_motion_params, ptr %26, i64 %idx.ext.2
  %add.ptr9.2 = getelementptr i8, ptr %27, i64 96
  %ref_idx.i24.2 = getelementptr i8, ptr %27, i64 120
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr9.2, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i24.2, align 8
  %arrayidx8.i25.2 = getelementptr i8, ptr %27, i64 121
  store i8 -1, ptr %arrayidx8.i25.2, align 1
  %28 = load i32, ptr %block_x, align 8
  %29 = load ptr, ptr %incdec.ptr.2, align 8
  %idx.ext.3 = sext i32 %28 to i64
  %add.ptr.3 = getelementptr inbounds %struct.pic_motion_params, ptr %29, i64 %idx.ext.3
  %ref_idx.i.3 = getelementptr inbounds i8, ptr %add.ptr.3, i64 24
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.3, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i.3, align 8
  %arrayidx8.i.3 = getelementptr inbounds i8, ptr %add.ptr.3, i64 25
  store i8 -1, ptr %arrayidx8.i.3, align 1
  %30 = load ptr, ptr %incdec.ptr.2, align 8
  %31 = getelementptr %struct.pic_motion_params, ptr %30, i64 %idx.ext.3
  %add.ptr4.3 = getelementptr i8, ptr %31, i64 32
  %ref_idx.i20.3 = getelementptr i8, ptr %31, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr4.3, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i20.3, align 8
  %arrayidx8.i21.3 = getelementptr i8, ptr %31, i64 57
  store i8 -1, ptr %arrayidx8.i21.3, align 1
  %32 = load ptr, ptr %incdec.ptr.2, align 8
  %33 = getelementptr %struct.pic_motion_params, ptr %32, i64 %idx.ext.3
  %add.ptr7.3 = getelementptr i8, ptr %33, i64 64
  %ref_idx.i22.3 = getelementptr i8, ptr %33, i64 88
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr7.3, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i22.3, align 8
  %arrayidx8.i23.3 = getelementptr i8, ptr %33, i64 89
  store i8 -1, ptr %arrayidx8.i23.3, align 1
  %34 = load ptr, ptr %incdec.ptr.2, align 8
  %35 = getelementptr %struct.pic_motion_params, ptr %34, i64 %idx.ext.3
  %add.ptr9.3 = getelementptr i8, ptr %35, i64 96
  %ref_idx.i24.3 = getelementptr i8, ptr %35, i64 120
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr9.3, i8 0, i64 24, i1 false)
  store i8 -1, ptr %ref_idx.i24.3, align 8
  %arrayidx8.i25.3 = getelementptr i8, ptr %35, i64 121
  store i8 -1, ptr %arrayidx8.i25.3, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @read_ipred_modes(ptr noundef %currMB) unnamed_addr #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %left_block = alloca %struct.pix_pos, align 4
  %top_block = alloca %struct.pix_pos, align 4
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %0, i64 13520
  %2 = load ptr, ptr %dec_picture2, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %3 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp ne i32 %3, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %left_block) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %top_block) #14
  store i32 4, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %4 = load ptr, ptr %partArr, align 8
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %5, i64 12
  %6 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp7 = icmp eq i32 %6, 0
  br i1 %cmp7, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load ptr, ptr %4, align 8
  %ei_flag = getelementptr inbounds i8, ptr %7, i64 24
  %8 = load i32, ptr %ei_flag, align 8
  %tobool.not = icmp eq i32 %8, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readIntraPredMode_CABAC, ptr %reading, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  %readSyntaxElement = getelementptr inbounds i8, ptr %4, i64 40
  %mb_size = getelementptr inbounds i8, ptr %1, i64 849124
  %intra_block = getelementptr inbounds i8, ptr %0, i64 13544
  %mb_addr = getelementptr inbounds i8, ptr %left_block, i64 4
  %mb_addr82 = getelementptr inbounds i8, ptr %top_block, i64 4
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %slice_type = getelementptr inbounds i8, ptr %0, i64 164
  %siblock = getelementptr inbounds i8, ptr %0, i64 13528
  %ipredmode = getelementptr inbounds i8, ptr %0, i64 13536
  %pos_y = getelementptr inbounds i8, ptr %top_block, i64 14
  %pos_x = getelementptr inbounds i8, ptr %top_block, i64 12
  %pos_y156 = getelementptr inbounds i8, ptr %left_block, i64 14
  %pos_x159 = getelementptr inbounds i8, ptr %left_block, i64 12
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  br label %for.body.outer

for.body.outer:                                   ; preds = %for.inc239.thread, %if.end
  %indvars.iv388.ph = phi i64 [ %indvars.iv.next389395, %for.inc239.thread ], [ 0, %if.end ]
  %IntraChromaPredModeFlag.0376.ph = phi i1 [ false, %for.inc239.thread ], [ %cmp, %if.end ]
  br label %for.body

for.body:                                         ; preds = %for.body.outer, %for.inc239
  %indvars.iv388 = phi i64 [ %indvars.iv.next389, %for.inc239 ], [ %indvars.iv388.ph, %for.body.outer ]
  %arrayidx12 = getelementptr inbounds [4 x i8], ptr %b8mode, i64 0, i64 %indvars.iv388
  %9 = load i8, ptr %arrayidx12, align 1
  switch i8 %9, label %for.inc239 [
    i8 11, label %if.then23
    i8 13, label %if.then23
  ]

if.then23:                                        ; preds = %for.body, %for.body
  %cmp28 = icmp eq i8 %9, 13
  %cond = select i1 %cmp28, i32 2, i32 1
  %10 = trunc nuw nsw i64 %indvars.iv388 to i32
  %and = and i32 %10, 2
  %indvars.iv388.tr = trunc i64 %indvars.iv388 to i32
  %11 = shl i32 %indvars.iv388.tr, 1
  %shl = and i32 %11, 2
  %indvars.iv388.tr393 = trunc i64 %indvars.iv388 to i32
  %12 = shl i32 %indvars.iv388.tr393, 2
  br label %for.body34

for.body34:                                       ; preds = %if.then23, %for.inc235
  %j.0375 = phi i32 [ 0, %if.then23 ], [ %add236, %for.inc235 ]
  %add = add nuw nsw i32 %j.0375, %and
  %13 = load i32, ptr %block_y, align 4
  %add35 = add nsw i32 %13, %add
  %shl54 = shl nuw nsw i32 %j.0375, 1
  %add55 = add nuw nsw i32 %shl54, %12
  %shl60 = shl nuw nsw i32 %add, 2
  %sub65 = add nsw i32 %shl60, -1
  %14 = sext i32 %add35 to i64
  %15 = add nsw i64 %14, 1
  br label %for.body39

for.body39:                                       ; preds = %for.body34, %for.inc232
  %i.0373 = phi i32 [ 0, %for.body34 ], [ %add233, %for.inc232 ]
  %add41 = or disjoint i32 %i.0373, %shl
  %16 = load i32, ptr %block_x, align 8
  %add42 = add nsw i32 %16, %add41
  %17 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag44 = getelementptr inbounds i8, ptr %17, i64 12
  %18 = load i32, ptr %entropy_coding_mode_flag44, align 4
  %cmp45 = icmp eq i32 %18, 0
  %.pre = load ptr, ptr %4, align 8
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %for.body39
  %ei_flag49 = getelementptr inbounds i8, ptr %.pre, i64 24
  %19 = load i32, ptr %ei_flag49, align 8
  %tobool50.not = icmp eq i32 %19, 0
  br i1 %tobool50.not, label %if.else, label %if.then51

if.then51:                                        ; preds = %lor.lhs.false47, %for.body39
  %call = call i32 @readSyntaxElement_Intra4x4PredictionMode(ptr noundef nonnull %currSE, ptr noundef %.pre) #14
  br label %if.end58

if.else:                                          ; preds = %lor.lhs.false47
  %add56 = add nuw nsw i32 %i.0373, %add55
  store i32 %add56, ptr %context, align 8
  %20 = load ptr, ptr %readSyntaxElement, align 8
  %call57 = call i32 %20(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %4) #14
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then51
  %shl59 = shl nuw nsw i32 %add41, 2
  %sub = add nsw i32 %shl59, -1
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub, i32 noundef %shl60, ptr noundef nonnull %mb_size, ptr noundef nonnull %left_block) #14
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %shl59, i32 noundef %sub65, ptr noundef nonnull %mb_size, ptr noundef nonnull %top_block) #14
  %21 = load ptr, ptr %active_pps, align 8
  %constrained_intra_pred_flag = getelementptr inbounds i8, ptr %21, i64 2204
  %22 = load i32, ptr %constrained_intra_pred_flag, align 4
  %tobool70.not = icmp eq i32 %22, 0
  br i1 %tobool70.not, label %if.end90, label %if.then71

if.then71:                                        ; preds = %if.end58
  %23 = load i32, ptr %left_block, align 4
  %tobool72.not = icmp eq i32 %23, 0
  br i1 %tobool72.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then71
  %24 = load ptr, ptr %intra_block, align 8
  %25 = load i32, ptr %mb_addr, align 4
  %idxprom73 = sext i32 %25 to i64
  %arrayidx74 = getelementptr inbounds i8, ptr %24, i64 %idxprom73
  %26 = load i8, ptr %arrayidx74, align 1
  %conv75 = sext i8 %26 to i32
  br label %cond.end

cond.end:                                         ; preds = %if.then71, %cond.true
  %cond76 = phi i32 [ %conv75, %cond.true ], [ 0, %if.then71 ]
  store i32 %cond76, ptr %left_block, align 4
  %27 = load i32, ptr %top_block, align 4
  %tobool79.not = icmp eq i32 %27, 0
  br i1 %tobool79.not, label %cond.end87, label %cond.true80

cond.true80:                                      ; preds = %cond.end
  %28 = load ptr, ptr %intra_block, align 8
  %29 = load i32, ptr %mb_addr82, align 4
  %idxprom83 = sext i32 %29 to i64
  %arrayidx84 = getelementptr inbounds i8, ptr %28, i64 %idxprom83
  %30 = load i8, ptr %arrayidx84, align 1
  %conv85 = sext i8 %30 to i32
  br label %cond.end87

cond.end87:                                       ; preds = %cond.end, %cond.true80
  %cond88 = phi i32 [ %conv85, %cond.true80 ], [ 0, %cond.end ]
  store i32 %cond88, ptr %top_block, align 4
  br label %if.end90

if.end90:                                         ; preds = %cond.end87, %if.end58
  %31 = load i16, ptr %mb_type, align 8
  %cmp92 = icmp eq i16 %31, 9
  br i1 %cmp92, label %land.lhs.true, label %if.end134

land.lhs.true:                                    ; preds = %if.end90
  %32 = load i32, ptr %slice_type, align 4
  %cmp94 = icmp eq i32 %32, 4
  br i1 %cmp94, label %if.then96, label %if.end134

if.then96:                                        ; preds = %land.lhs.true
  %33 = load i32, ptr %left_block, align 4
  %tobool98.not = icmp eq i32 %33, 0
  br i1 %tobool98.not, label %if.end113, label %if.then99

if.then99:                                        ; preds = %if.then96
  %34 = load ptr, ptr %siblock, align 8
  %35 = load ptr, ptr @PicPos, align 8
  %36 = load i32, ptr %mb_addr, align 4
  %idxprom101 = sext i32 %36 to i64
  %arrayidx102 = getelementptr inbounds %struct.BlockPos, ptr %35, i64 %idxprom101
  %y = getelementptr inbounds i8, ptr %arrayidx102, i64 2
  %37 = load i16, ptr %y, align 2
  %idxprom103 = sext i16 %37 to i64
  %arrayidx104 = getelementptr inbounds ptr, ptr %34, i64 %idxprom103
  %38 = load ptr, ptr %arrayidx104, align 8
  %39 = load i16, ptr %arrayidx102, align 2
  %idxprom108 = sext i16 %39 to i64
  %arrayidx109 = getelementptr inbounds i32, ptr %38, i64 %idxprom108
  %40 = load i32, ptr %arrayidx109, align 4
  %tobool110.not = icmp ne i32 %40, 0
  %spec.select = zext i1 %tobool110.not to i32
  br label %if.end113

if.end113:                                        ; preds = %if.then99, %if.then96
  %ls.0 = phi i32 [ 0, %if.then96 ], [ %spec.select, %if.then99 ]
  %41 = load i32, ptr %top_block, align 4
  %tobool115.not = icmp eq i32 %41, 0
  br i1 %tobool115.not, label %if.end134, label %if.then116

if.then116:                                       ; preds = %if.end113
  %42 = load ptr, ptr %siblock, align 8
  %43 = load ptr, ptr @PicPos, align 8
  %44 = load i32, ptr %mb_addr82, align 4
  %idxprom119 = sext i32 %44 to i64
  %arrayidx120 = getelementptr inbounds %struct.BlockPos, ptr %43, i64 %idxprom119
  %y121 = getelementptr inbounds i8, ptr %arrayidx120, i64 2
  %45 = load i16, ptr %y121, align 2
  %idxprom122 = sext i16 %45 to i64
  %arrayidx123 = getelementptr inbounds ptr, ptr %42, i64 %idxprom122
  %46 = load ptr, ptr %arrayidx123, align 8
  %47 = load i16, ptr %arrayidx120, align 2
  %idxprom128 = sext i16 %47 to i64
  %arrayidx129 = getelementptr inbounds i32, ptr %46, i64 %idxprom128
  %48 = load i32, ptr %arrayidx129, align 4
  %tobool130.not = icmp eq i32 %48, 0
  br label %if.end134

if.end134:                                        ; preds = %if.then116, %if.end113, %land.lhs.true, %if.end90
  %ls.1 = phi i32 [ %ls.0, %if.end113 ], [ 0, %land.lhs.true ], [ 0, %if.end90 ], [ %ls.0, %if.then116 ]
  %cmp138 = phi i1 [ true, %if.end113 ], [ true, %land.lhs.true ], [ true, %if.end90 ], [ %tobool130.not, %if.then116 ]
  %49 = load i32, ptr %top_block, align 4
  %tobool136 = icmp ne i32 %49, 0
  %or.cond = and i1 %cmp138, %tobool136
  br i1 %or.cond, label %cond.true140, label %cond.end147

cond.true140:                                     ; preds = %if.end134
  %50 = load ptr, ptr %ipredmode, align 8
  %51 = load i16, ptr %pos_y, align 2
  %idxprom141 = sext i16 %51 to i64
  %arrayidx142 = getelementptr inbounds ptr, ptr %50, i64 %idxprom141
  %52 = load ptr, ptr %arrayidx142, align 8
  %53 = load i16, ptr %pos_x, align 4
  %idxprom143 = sext i16 %53 to i64
  %arrayidx144 = getelementptr inbounds i8, ptr %52, i64 %idxprom143
  %54 = load i8, ptr %arrayidx144, align 1
  %conv145 = zext i8 %54 to i32
  br label %cond.end147

cond.end147:                                      ; preds = %if.end134, %cond.true140
  %cond148 = phi i32 [ %conv145, %cond.true140 ], [ -1, %if.end134 ]
  %55 = load i32, ptr %left_block, align 4
  %tobool150 = icmp ne i32 %55, 0
  %cmp152 = icmp eq i32 %ls.1, 0
  %or.cond285 = and i1 %cmp152, %tobool150
  br i1 %or.cond285, label %cond.true154, label %cond.end164

cond.true154:                                     ; preds = %cond.end147
  %56 = load ptr, ptr %ipredmode, align 8
  %57 = load i16, ptr %pos_y156, align 2
  %idxprom157 = sext i16 %57 to i64
  %arrayidx158 = getelementptr inbounds ptr, ptr %56, i64 %idxprom157
  %58 = load ptr, ptr %arrayidx158, align 8
  %59 = load i16, ptr %pos_x159, align 4
  %idxprom160 = sext i16 %59 to i64
  %arrayidx161 = getelementptr inbounds i8, ptr %58, i64 %idxprom160
  %60 = load i8, ptr %arrayidx161, align 1
  %conv162 = zext i8 %60 to i32
  br label %cond.end164

cond.end164:                                      ; preds = %cond.end147, %cond.true154
  %cond165 = phi i32 [ %conv162, %cond.true154 ], [ -1, %cond.end147 ]
  %cmp166 = icmp slt i32 %cond148, 0
  %cmp169 = icmp slt i32 %cond165, 0
  %or.cond286 = select i1 %cmp166, i1 true, i1 %cmp169
  %cond178 = call i32 @llvm.smin.i32(i32 %cond148, i32 %cond165)
  %cond180 = select i1 %or.cond286, i32 2, i32 %cond178
  %61 = load i32, ptr %value1, align 4
  %cmp181 = icmp eq i32 %61, -1
  %cmp187 = icmp sge i32 %61, %cond180
  %conv188 = zext i1 %cmp187 to i32
  %add189 = add nuw nsw i32 %61, %conv188
  %cond191 = select i1 %cmp181, i32 %cond180, i32 %add189
  %conv200 = trunc i32 %cond191 to i8
  %idxprom205 = sext i32 %add42 to i64
  br i1 %cmp28, label %for.body199, label %for.body220

for.body199:                                      ; preds = %cond.end164
  %62 = load ptr, ptr %ipredmode, align 8
  %arrayidx204 = getelementptr inbounds ptr, ptr %62, i64 %14
  %63 = load ptr, ptr %arrayidx204, align 8
  %arrayidx206 = getelementptr inbounds i8, ptr %63, i64 %idxprom205
  store i8 %conv200, ptr %arrayidx206, align 1
  %64 = load ptr, ptr %ipredmode, align 8
  %arrayidx211 = getelementptr inbounds ptr, ptr %64, i64 %14
  %65 = load ptr, ptr %arrayidx211, align 8
  %66 = getelementptr i8, ptr %65, i64 %idxprom205
  %arrayidx214 = getelementptr i8, ptr %66, i64 1
  store i8 %conv200, ptr %arrayidx214, align 1
  %67 = load ptr, ptr %ipredmode, align 8
  %arrayidx204.1 = getelementptr inbounds ptr, ptr %67, i64 %15
  %68 = load ptr, ptr %arrayidx204.1, align 8
  %arrayidx206.1 = getelementptr inbounds i8, ptr %68, i64 %idxprom205
  store i8 %conv200, ptr %arrayidx206.1, align 1
  %69 = load ptr, ptr %ipredmode, align 8
  %arrayidx211.1 = getelementptr inbounds ptr, ptr %69, i64 %15
  %70 = load ptr, ptr %arrayidx211.1, align 8
  %71 = getelementptr i8, ptr %70, i64 %idxprom205
  %arrayidx214.1 = getelementptr i8, ptr %71, i64 1
  store i8 %conv200, ptr %arrayidx214.1, align 1
  br label %for.inc232

for.body220:                                      ; preds = %cond.end164
  %72 = load ptr, ptr %ipredmode, align 8
  %arrayidx225 = getelementptr ptr, ptr %72, i64 %14
  %73 = load ptr, ptr %arrayidx225, align 8
  %arrayidx227 = getelementptr inbounds i8, ptr %73, i64 %idxprom205
  store i8 %conv200, ptr %arrayidx227, align 1
  br label %for.inc232

for.inc232:                                       ; preds = %for.body199, %for.body220
  %add233 = add nuw nsw i32 %i.0373, %cond
  %cmp37 = icmp ult i32 %add233, 2
  br i1 %cmp37, label %for.body39, label %for.inc235

for.inc235:                                       ; preds = %for.inc232
  %add236 = add nuw nsw i32 %cond, %j.0375
  %cmp32 = icmp ult i32 %add236, 2
  br i1 %cmp32, label %for.body34, label %for.inc239.thread

for.inc239:                                       ; preds = %for.body
  %indvars.iv.next389 = add nuw nsw i64 %indvars.iv388, 1
  %exitcond392.not = icmp eq i64 %indvars.iv.next389, 4
  br i1 %exitcond392.not, label %for.end241, label %for.body

for.inc239.thread:                                ; preds = %for.inc235
  %indvars.iv.next389395 = add nuw nsw i64 %indvars.iv388, 1
  %exitcond392.not396 = icmp eq i64 %indvars.iv.next389395, 4
  br i1 %exitcond392.not396, label %land.lhs.true244, label %for.body.outer

for.end241:                                       ; preds = %for.inc239
  br i1 %IntraChromaPredModeFlag.0376.ph, label %if.end284, label %land.lhs.true244

land.lhs.true244:                                 ; preds = %for.inc239.thread, %for.end241
  %chroma_format_idc = getelementptr inbounds i8, ptr %2, i64 268
  %74 = load i32, ptr %chroma_format_idc, align 4
  switch i32 %74, label %if.then251 [
    i32 0, label %if.end284
    i32 3, label %if.end284
  ]

if.then251:                                       ; preds = %land.lhs.true244
  store i32 4, ptr %currSE, align 8
  %75 = load ptr, ptr %partArr, align 8
  %76 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag258 = getelementptr inbounds i8, ptr %76, i64 12
  %77 = load i32, ptr %entropy_coding_mode_flag258, align 4
  %cmp259 = icmp eq i32 %77, 0
  br i1 %cmp259, label %if.end268, label %lor.lhs.false261

lor.lhs.false261:                                 ; preds = %if.then251
  %78 = load ptr, ptr %75, align 8
  %ei_flag263 = getelementptr inbounds i8, ptr %78, i64 24
  %79 = load i32, ptr %ei_flag263, align 8
  %tobool264.not = icmp eq i32 %79, 0
  %spec.select404 = select i1 %tobool264.not, i64 40, i64 32
  %spec.select405 = select i1 %tobool264.not, ptr @readCIPredMode_CABAC, ptr @linfo_ue
  br label %if.end268

if.end268:                                        ; preds = %lor.lhs.false261, %if.then251
  %.sink = phi i64 [ 32, %if.then251 ], [ %spec.select404, %lor.lhs.false261 ]
  %readCIPredMode_CABAC.sink = phi ptr [ @linfo_ue, %if.then251 ], [ %spec.select405, %lor.lhs.false261 ]
  %reading267 = getelementptr inbounds i8, ptr %currSE, i64 %.sink
  store ptr %readCIPredMode_CABAC.sink, ptr %reading267, align 8
  %readSyntaxElement269 = getelementptr inbounds i8, ptr %75, i64 40
  %80 = load ptr, ptr %readSyntaxElement269, align 8
  %call270 = call i32 %80(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %75) #14
  %81 = load i32, ptr %value1, align 4
  %conv272 = trunc i32 %81 to i8
  %c_ipred_mode = getelementptr inbounds i8, ptr %currMB, i64 373
  store i8 %conv272, ptr %c_ipred_mode, align 1
  %82 = and i32 %81, 252
  %or.cond369.not = icmp eq i32 %82, 0
  br i1 %or.cond369.not, label %if.end284, label %if.then282

if.then282:                                       ; preds = %if.end268
  call void @error(ptr noundef nonnull @.str.3, i32 noundef 600) #14
  br label %if.end284

if.end284:                                        ; preds = %if.end268, %land.lhs.true244, %land.lhs.true244, %if.then282, %for.end241
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %top_block) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %left_block) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @concealIPCMcoeffs(ptr nocapture readonly %currMB.0.val, ptr nocapture readonly %currMB.8.val) unnamed_addr #8 {
entry:
  %dec_picture2 = getelementptr inbounds i8, ptr %currMB.0.val, i64 13520
  %0 = load ptr, ptr %dec_picture2, align 8
  %dc_pred_value_comp = getelementptr inbounds i8, ptr %currMB.8.val, i64 849060
  %cof = getelementptr inbounds i8, ptr %currMB.0.val, i64 1272
  %.pre = load i32, ptr %dc_pred_value_comp, align 4
  br label %for.cond3.preheader

for.cond3.preheader:                              ; preds = %entry, %for.cond3.preheader
  %1 = phi i32 [ %.pre, %entry ], [ %54, %for.cond3.preheader ]
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond3.preheader ]
  %2 = load ptr, ptr %cof, align 8
  %3 = load ptr, ptr %2, align 8
  %arrayidx7 = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx7, align 8
  store i32 %1, ptr %4, align 4
  %5 = load i32, ptr %dc_pred_value_comp, align 4
  %6 = load ptr, ptr %cof, align 8
  %7 = load ptr, ptr %6, align 8
  %arrayidx7.1 = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv
  %8 = load ptr, ptr %arrayidx7.1, align 8
  %arrayidx9.1 = getelementptr inbounds i8, ptr %8, i64 4
  store i32 %5, ptr %arrayidx9.1, align 4
  %9 = load ptr, ptr %cof, align 8
  %10 = load ptr, ptr %9, align 8
  %arrayidx7.2 = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv
  %11 = load ptr, ptr %arrayidx7.2, align 8
  %arrayidx9.2 = getelementptr inbounds i8, ptr %11, i64 8
  store i32 %5, ptr %arrayidx9.2, align 4
  %12 = load i32, ptr %dc_pred_value_comp, align 4
  %13 = load ptr, ptr %cof, align 8
  %14 = load ptr, ptr %13, align 8
  %arrayidx7.3 = getelementptr inbounds ptr, ptr %14, i64 %indvars.iv
  %15 = load ptr, ptr %arrayidx7.3, align 8
  %arrayidx9.3 = getelementptr inbounds i8, ptr %15, i64 12
  store i32 %12, ptr %arrayidx9.3, align 4
  %16 = load ptr, ptr %cof, align 8
  %17 = load ptr, ptr %16, align 8
  %arrayidx7.4 = getelementptr inbounds ptr, ptr %17, i64 %indvars.iv
  %18 = load ptr, ptr %arrayidx7.4, align 8
  %arrayidx9.4 = getelementptr inbounds i8, ptr %18, i64 16
  store i32 %12, ptr %arrayidx9.4, align 4
  %19 = load i32, ptr %dc_pred_value_comp, align 4
  %20 = load ptr, ptr %cof, align 8
  %21 = load ptr, ptr %20, align 8
  %arrayidx7.5 = getelementptr inbounds ptr, ptr %21, i64 %indvars.iv
  %22 = load ptr, ptr %arrayidx7.5, align 8
  %arrayidx9.5 = getelementptr inbounds i8, ptr %22, i64 20
  store i32 %19, ptr %arrayidx9.5, align 4
  %23 = load ptr, ptr %cof, align 8
  %24 = load ptr, ptr %23, align 8
  %arrayidx7.6 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv
  %25 = load ptr, ptr %arrayidx7.6, align 8
  %arrayidx9.6 = getelementptr inbounds i8, ptr %25, i64 24
  store i32 %19, ptr %arrayidx9.6, align 4
  %26 = load i32, ptr %dc_pred_value_comp, align 4
  %27 = load ptr, ptr %cof, align 8
  %28 = load ptr, ptr %27, align 8
  %arrayidx7.7 = getelementptr inbounds ptr, ptr %28, i64 %indvars.iv
  %29 = load ptr, ptr %arrayidx7.7, align 8
  %arrayidx9.7 = getelementptr inbounds i8, ptr %29, i64 28
  store i32 %26, ptr %arrayidx9.7, align 4
  %30 = load ptr, ptr %cof, align 8
  %31 = load ptr, ptr %30, align 8
  %arrayidx7.8 = getelementptr inbounds ptr, ptr %31, i64 %indvars.iv
  %32 = load ptr, ptr %arrayidx7.8, align 8
  %arrayidx9.8 = getelementptr inbounds i8, ptr %32, i64 32
  store i32 %26, ptr %arrayidx9.8, align 4
  %33 = load i32, ptr %dc_pred_value_comp, align 4
  %34 = load ptr, ptr %cof, align 8
  %35 = load ptr, ptr %34, align 8
  %arrayidx7.9 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv
  %36 = load ptr, ptr %arrayidx7.9, align 8
  %arrayidx9.9 = getelementptr inbounds i8, ptr %36, i64 36
  store i32 %33, ptr %arrayidx9.9, align 4
  %37 = load ptr, ptr %cof, align 8
  %38 = load ptr, ptr %37, align 8
  %arrayidx7.10 = getelementptr inbounds ptr, ptr %38, i64 %indvars.iv
  %39 = load ptr, ptr %arrayidx7.10, align 8
  %arrayidx9.10 = getelementptr inbounds i8, ptr %39, i64 40
  store i32 %33, ptr %arrayidx9.10, align 4
  %40 = load i32, ptr %dc_pred_value_comp, align 4
  %41 = load ptr, ptr %cof, align 8
  %42 = load ptr, ptr %41, align 8
  %arrayidx7.11 = getelementptr inbounds ptr, ptr %42, i64 %indvars.iv
  %43 = load ptr, ptr %arrayidx7.11, align 8
  %arrayidx9.11 = getelementptr inbounds i8, ptr %43, i64 44
  store i32 %40, ptr %arrayidx9.11, align 4
  %44 = load ptr, ptr %cof, align 8
  %45 = load ptr, ptr %44, align 8
  %arrayidx7.12 = getelementptr inbounds ptr, ptr %45, i64 %indvars.iv
  %46 = load ptr, ptr %arrayidx7.12, align 8
  %arrayidx9.12 = getelementptr inbounds i8, ptr %46, i64 48
  store i32 %40, ptr %arrayidx9.12, align 4
  %47 = load i32, ptr %dc_pred_value_comp, align 4
  %48 = load ptr, ptr %cof, align 8
  %49 = load ptr, ptr %48, align 8
  %arrayidx7.13 = getelementptr inbounds ptr, ptr %49, i64 %indvars.iv
  %50 = load ptr, ptr %arrayidx7.13, align 8
  %arrayidx9.13 = getelementptr inbounds i8, ptr %50, i64 52
  store i32 %47, ptr %arrayidx9.13, align 4
  %51 = load ptr, ptr %cof, align 8
  %52 = load ptr, ptr %51, align 8
  %arrayidx7.14 = getelementptr inbounds ptr, ptr %52, i64 %indvars.iv
  %53 = load ptr, ptr %arrayidx7.14, align 8
  %arrayidx9.14 = getelementptr inbounds i8, ptr %53, i64 56
  store i32 %47, ptr %arrayidx9.14, align 4
  %54 = load i32, ptr %dc_pred_value_comp, align 4
  %55 = load ptr, ptr %cof, align 8
  %56 = load ptr, ptr %55, align 8
  %arrayidx7.15 = getelementptr inbounds ptr, ptr %56, i64 %indvars.iv
  %57 = load ptr, ptr %arrayidx7.15, align 8
  %arrayidx9.15 = getelementptr inbounds i8, ptr %57, i64 60
  store i32 %54, ptr %arrayidx9.15, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for.end12, label %for.cond3.preheader

for.end12:                                        ; preds = %for.cond3.preheader
  %chroma_format_idc = getelementptr inbounds i8, ptr %0, i64 268
  %58 = load i32, ptr %chroma_format_idc, align 4
  %cmp13.not = icmp eq i32 %58, 0
  br i1 %cmp13.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end12
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %currMB.8.val, i64 849280
  %59 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp14 = icmp eq i32 %59, 0
  br i1 %cmp14, label %for.cond15.preheader, label %if.end

for.cond15.preheader:                             ; preds = %land.lhs.true
  %mb_cr_size_y = getelementptr inbounds i8, ptr %currMB.8.val, i64 849112
  %mb_cr_size_x = getelementptr inbounds i8, ptr %currMB.8.val, i64 849108
  %60 = load i32, ptr %mb_cr_size_y, align 8
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %for.cond21.preheader.lr.ph, label %if.end

for.cond21.preheader.lr.ph:                       ; preds = %for.cond15.preheader
  %62 = load i32, ptr %mb_cr_size_x, align 4
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %for.cond21.preheader, label %if.end

for.cond21.preheader:                             ; preds = %for.cond21.preheader.lr.ph, %for.inc37
  %64 = phi i32 [ %71, %for.inc37 ], [ %60, %for.cond21.preheader.lr.ph ]
  %65 = phi i32 [ %72, %for.inc37 ], [ %62, %for.cond21.preheader.lr.ph ]
  %indvars.iv15 = phi i64 [ %indvars.iv.next16, %for.inc37 ], [ 0, %for.cond21.preheader.lr.ph ]
  %cmp223 = icmp sgt i32 %65, 0
  br i1 %cmp223, label %for.body23, label %for.inc37

for.body23:                                       ; preds = %for.cond21.preheader, %for.body23
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.body23 ], [ 0, %for.cond21.preheader ]
  %66 = load ptr, ptr %cof, align 8
  %67 = load ptr, ptr %66, align 8
  %arrayidx31 = getelementptr inbounds ptr, ptr %67, i64 %indvars.iv15
  %68 = load ptr, ptr %arrayidx31, align 8
  %arrayidx33 = getelementptr inbounds i32, ptr %68, i64 %indvars.iv12
  store i32 %54, ptr %arrayidx33, align 4
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1
  %69 = load i32, ptr %mb_cr_size_x, align 4
  %70 = sext i32 %69 to i64
  %cmp22 = icmp slt i64 %indvars.iv.next13, %70
  br i1 %cmp22, label %for.body23, label %for.inc37.loopexit

for.inc37.loopexit:                               ; preds = %for.body23
  %.pre21 = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc37

for.inc37:                                        ; preds = %for.inc37.loopexit, %for.cond21.preheader
  %71 = phi i32 [ %.pre21, %for.inc37.loopexit ], [ %64, %for.cond21.preheader ]
  %72 = phi i32 [ %69, %for.inc37.loopexit ], [ %65, %for.cond21.preheader ]
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %73 = sext i32 %71 to i64
  %cmp19 = icmp slt i64 %indvars.iv.next16, %73
  br i1 %cmp19, label %for.cond21.preheader, label %for.inc40, !llvm.loop !8

for.inc40:                                        ; preds = %for.inc37
  %cmp195.1 = icmp sgt i32 %71, 0
  br i1 %cmp195.1, label %for.cond21.preheader.lr.ph.1, label %if.end

for.cond21.preheader.lr.ph.1:                     ; preds = %for.inc40
  %.pr = load i32, ptr %mb_cr_size_x, align 4
  %arrayidx26.1 = getelementptr inbounds i8, ptr %currMB.8.val, i64 849064
  %74 = icmp sgt i32 %.pr, 0
  br i1 %74, label %for.cond21.preheader.1, label %if.end

for.cond21.preheader.1:                           ; preds = %for.cond21.preheader.lr.ph.1, %for.inc37.1
  %75 = phi i32 [ %82, %for.inc37.1 ], [ %71, %for.cond21.preheader.lr.ph.1 ]
  %76 = phi i32 [ %83, %for.inc37.1 ], [ %.pr, %for.cond21.preheader.lr.ph.1 ]
  %indvars.iv15.1 = phi i64 [ %indvars.iv.next16.1, %for.inc37.1 ], [ 0, %for.cond21.preheader.lr.ph.1 ]
  %cmp223.1 = icmp sgt i32 %76, 0
  br i1 %cmp223.1, label %for.body23.lr.ph.1, label %for.inc37.1

for.body23.lr.ph.1:                               ; preds = %for.cond21.preheader.1
  %.pre22 = load i32, ptr %arrayidx26.1, align 4
  br label %for.body23.1

for.body23.1:                                     ; preds = %for.body23.1, %for.body23.lr.ph.1
  %indvars.iv12.1 = phi i64 [ 0, %for.body23.lr.ph.1 ], [ %indvars.iv.next13.1, %for.body23.1 ]
  %77 = load ptr, ptr %cof, align 8
  %arrayidx29.1 = getelementptr inbounds i8, ptr %77, i64 8
  %78 = load ptr, ptr %arrayidx29.1, align 8
  %arrayidx31.1 = getelementptr inbounds ptr, ptr %78, i64 %indvars.iv15.1
  %79 = load ptr, ptr %arrayidx31.1, align 8
  %arrayidx33.1 = getelementptr inbounds i32, ptr %79, i64 %indvars.iv12.1
  store i32 %.pre22, ptr %arrayidx33.1, align 4
  %indvars.iv.next13.1 = add nuw nsw i64 %indvars.iv12.1, 1
  %80 = load i32, ptr %mb_cr_size_x, align 4
  %81 = sext i32 %80 to i64
  %cmp22.1 = icmp slt i64 %indvars.iv.next13.1, %81
  br i1 %cmp22.1, label %for.body23.1, label %for.inc37.loopexit.1

for.inc37.loopexit.1:                             ; preds = %for.body23.1
  %.pre23 = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc37.1

for.inc37.1:                                      ; preds = %for.inc37.loopexit.1, %for.cond21.preheader.1
  %82 = phi i32 [ %.pre23, %for.inc37.loopexit.1 ], [ %75, %for.cond21.preheader.1 ]
  %83 = phi i32 [ %80, %for.inc37.loopexit.1 ], [ %76, %for.cond21.preheader.1 ]
  %indvars.iv.next16.1 = add nuw nsw i64 %indvars.iv15.1, 1
  %84 = sext i32 %82 to i64
  %cmp19.1 = icmp slt i64 %indvars.iv.next16.1, %84
  br i1 %cmp19.1, label %for.cond21.preheader.1, label %if.end, !llvm.loop !8

if.end:                                           ; preds = %for.inc37.1, %for.cond21.preheader.lr.ph, %for.inc40, %for.cond21.preheader.lr.ph.1, %for.cond15.preheader, %land.lhs.true, %for.end12
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @read_IPCM_coeffs_from_NAL(ptr noundef %currSlice, ptr noundef %dP) unnamed_addr #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %0 = load ptr, ptr %currSlice, align 8
  %dec_picture2 = getelementptr inbounds i8, ptr %currSlice, i64 13520
  %1 = load ptr, ptr %dec_picture2, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %active_pps = getelementptr inbounds i8, ptr %0, i64 8
  %2 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %2, i64 12
  %3 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call void @readIPCM_CABAC(ptr noundef nonnull %currSlice, ptr noundef %dP) #14
  %dp_mode.i = getelementptr inbounds i8, ptr %currSlice, i64 200
  %4 = load i32, ptr %dp_mode.i, align 8
  switch i32 %4, label %if.else4.i [
    i32 0, label %if.end5.i
    i32 1, label %if.then3.i
  ]

if.then3.i:                                       ; preds = %if.then
  br label %if.end5.i

if.else4.i:                                       ; preds = %if.then
  %puts.i = tail call i32 @puts(ptr nonnull dereferenceable(1) @str.8)
  tail call void @exit(i32 noundef 1) #15
  unreachable

if.end5.i:                                        ; preds = %if.then3.i, %if.then
  %PartitionNumber.0.i = phi i64 [ 3, %if.then3.i ], [ 1, %if.then ]
  %partArr.i = getelementptr inbounds i8, ptr %currSlice, i64 312
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.end5.i
  %indvars.iv.i = phi i64 [ 0, %if.end5.i ], [ %indvars.iv.next.i, %for.body.i ]
  %5 = load ptr, ptr %partArr.i, align 8
  %arrayidx.i = getelementptr inbounds %struct.datapartition, ptr %5, i64 %indvars.iv.i
  %6 = load ptr, ptr %arrayidx.i, align 8
  %7 = load i32, ptr %6, align 8
  %de_cabac.i = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %streamBuffer.i = getelementptr inbounds i8, ptr %6, i64 16
  %8 = load ptr, ptr %streamBuffer.i, align 8
  tail call void @arideco_start_decoding(ptr noundef nonnull %de_cabac.i, ptr noundef %8, i32 noundef %7, ptr noundef nonnull %6) #14
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %PartitionNumber.0.i
  br i1 %exitcond.not.i, label %if.end80, label %for.body.i

if.else:                                          ; preds = %entry
  %9 = load ptr, ptr %dP, align 8
  %frame_bitoffset = getelementptr inbounds i8, ptr %9, i64 8
  %10 = load i32, ptr %frame_bitoffset, align 8
  %and = and i32 %10, 7
  %cmp3.not = icmp eq i32 %and, 0
  br i1 %cmp3.not, label %if.end, label %if.then4

if.then4:                                         ; preds = %if.else
  %sub = sub nuw nsw i32 8, %and
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 %sub, ptr %len, align 4
  %call = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef nonnull %9) #14
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.else
  %bitdepth_luma = getelementptr inbounds i8, ptr %0, i64 849040
  %11 = load i16, ptr %bitdepth_luma, align 8
  %conv = sext i16 %11 to i32
  %len9 = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 %conv, ptr %len9, align 4
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %cof = getelementptr inbounds i8, ptr %currSlice, i64 1272
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %if.end, %for.cond12.preheader
  %indvars.iv = phi i64 [ 0, %if.end ], [ %indvars.iv.next, %for.cond12.preheader ]
  %12 = load ptr, ptr %dP, align 8
  %call17 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %12) #14
  %13 = load i32, ptr %value1, align 4
  %14 = load ptr, ptr %cof, align 8
  %15 = load ptr, ptr %14, align 8
  %arrayidx18 = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv
  %16 = load ptr, ptr %arrayidx18, align 8
  store i32 %13, ptr %16, align 4
  %17 = load ptr, ptr %dP, align 8
  %call17.1 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %17) #14
  %18 = load i32, ptr %value1, align 4
  %19 = load ptr, ptr %cof, align 8
  %20 = load ptr, ptr %19, align 8
  %arrayidx18.1 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv
  %21 = load ptr, ptr %arrayidx18.1, align 8
  %arrayidx20.1 = getelementptr inbounds i8, ptr %21, i64 4
  store i32 %18, ptr %arrayidx20.1, align 4
  %22 = load ptr, ptr %dP, align 8
  %call17.2 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %22) #14
  %23 = load i32, ptr %value1, align 4
  %24 = load ptr, ptr %cof, align 8
  %25 = load ptr, ptr %24, align 8
  %arrayidx18.2 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv
  %26 = load ptr, ptr %arrayidx18.2, align 8
  %arrayidx20.2 = getelementptr inbounds i8, ptr %26, i64 8
  store i32 %23, ptr %arrayidx20.2, align 4
  %27 = load ptr, ptr %dP, align 8
  %call17.3 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %27) #14
  %28 = load i32, ptr %value1, align 4
  %29 = load ptr, ptr %cof, align 8
  %30 = load ptr, ptr %29, align 8
  %arrayidx18.3 = getelementptr inbounds ptr, ptr %30, i64 %indvars.iv
  %31 = load ptr, ptr %arrayidx18.3, align 8
  %arrayidx20.3 = getelementptr inbounds i8, ptr %31, i64 12
  store i32 %28, ptr %arrayidx20.3, align 4
  %32 = load ptr, ptr %dP, align 8
  %call17.4 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %32) #14
  %33 = load i32, ptr %value1, align 4
  %34 = load ptr, ptr %cof, align 8
  %35 = load ptr, ptr %34, align 8
  %arrayidx18.4 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv
  %36 = load ptr, ptr %arrayidx18.4, align 8
  %arrayidx20.4 = getelementptr inbounds i8, ptr %36, i64 16
  store i32 %33, ptr %arrayidx20.4, align 4
  %37 = load ptr, ptr %dP, align 8
  %call17.5 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %37) #14
  %38 = load i32, ptr %value1, align 4
  %39 = load ptr, ptr %cof, align 8
  %40 = load ptr, ptr %39, align 8
  %arrayidx18.5 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv
  %41 = load ptr, ptr %arrayidx18.5, align 8
  %arrayidx20.5 = getelementptr inbounds i8, ptr %41, i64 20
  store i32 %38, ptr %arrayidx20.5, align 4
  %42 = load ptr, ptr %dP, align 8
  %call17.6 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %42) #14
  %43 = load i32, ptr %value1, align 4
  %44 = load ptr, ptr %cof, align 8
  %45 = load ptr, ptr %44, align 8
  %arrayidx18.6 = getelementptr inbounds ptr, ptr %45, i64 %indvars.iv
  %46 = load ptr, ptr %arrayidx18.6, align 8
  %arrayidx20.6 = getelementptr inbounds i8, ptr %46, i64 24
  store i32 %43, ptr %arrayidx20.6, align 4
  %47 = load ptr, ptr %dP, align 8
  %call17.7 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %47) #14
  %48 = load i32, ptr %value1, align 4
  %49 = load ptr, ptr %cof, align 8
  %50 = load ptr, ptr %49, align 8
  %arrayidx18.7 = getelementptr inbounds ptr, ptr %50, i64 %indvars.iv
  %51 = load ptr, ptr %arrayidx18.7, align 8
  %arrayidx20.7 = getelementptr inbounds i8, ptr %51, i64 28
  store i32 %48, ptr %arrayidx20.7, align 4
  %52 = load ptr, ptr %dP, align 8
  %call17.8 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %52) #14
  %53 = load i32, ptr %value1, align 4
  %54 = load ptr, ptr %cof, align 8
  %55 = load ptr, ptr %54, align 8
  %arrayidx18.8 = getelementptr inbounds ptr, ptr %55, i64 %indvars.iv
  %56 = load ptr, ptr %arrayidx18.8, align 8
  %arrayidx20.8 = getelementptr inbounds i8, ptr %56, i64 32
  store i32 %53, ptr %arrayidx20.8, align 4
  %57 = load ptr, ptr %dP, align 8
  %call17.9 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %57) #14
  %58 = load i32, ptr %value1, align 4
  %59 = load ptr, ptr %cof, align 8
  %60 = load ptr, ptr %59, align 8
  %arrayidx18.9 = getelementptr inbounds ptr, ptr %60, i64 %indvars.iv
  %61 = load ptr, ptr %arrayidx18.9, align 8
  %arrayidx20.9 = getelementptr inbounds i8, ptr %61, i64 36
  store i32 %58, ptr %arrayidx20.9, align 4
  %62 = load ptr, ptr %dP, align 8
  %call17.10 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %62) #14
  %63 = load i32, ptr %value1, align 4
  %64 = load ptr, ptr %cof, align 8
  %65 = load ptr, ptr %64, align 8
  %arrayidx18.10 = getelementptr inbounds ptr, ptr %65, i64 %indvars.iv
  %66 = load ptr, ptr %arrayidx18.10, align 8
  %arrayidx20.10 = getelementptr inbounds i8, ptr %66, i64 40
  store i32 %63, ptr %arrayidx20.10, align 4
  %67 = load ptr, ptr %dP, align 8
  %call17.11 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %67) #14
  %68 = load i32, ptr %value1, align 4
  %69 = load ptr, ptr %cof, align 8
  %70 = load ptr, ptr %69, align 8
  %arrayidx18.11 = getelementptr inbounds ptr, ptr %70, i64 %indvars.iv
  %71 = load ptr, ptr %arrayidx18.11, align 8
  %arrayidx20.11 = getelementptr inbounds i8, ptr %71, i64 44
  store i32 %68, ptr %arrayidx20.11, align 4
  %72 = load ptr, ptr %dP, align 8
  %call17.12 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %72) #14
  %73 = load i32, ptr %value1, align 4
  %74 = load ptr, ptr %cof, align 8
  %75 = load ptr, ptr %74, align 8
  %arrayidx18.12 = getelementptr inbounds ptr, ptr %75, i64 %indvars.iv
  %76 = load ptr, ptr %arrayidx18.12, align 8
  %arrayidx20.12 = getelementptr inbounds i8, ptr %76, i64 48
  store i32 %73, ptr %arrayidx20.12, align 4
  %77 = load ptr, ptr %dP, align 8
  %call17.13 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %77) #14
  %78 = load i32, ptr %value1, align 4
  %79 = load ptr, ptr %cof, align 8
  %80 = load ptr, ptr %79, align 8
  %arrayidx18.13 = getelementptr inbounds ptr, ptr %80, i64 %indvars.iv
  %81 = load ptr, ptr %arrayidx18.13, align 8
  %arrayidx20.13 = getelementptr inbounds i8, ptr %81, i64 52
  store i32 %78, ptr %arrayidx20.13, align 4
  %82 = load ptr, ptr %dP, align 8
  %call17.14 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %82) #14
  %83 = load i32, ptr %value1, align 4
  %84 = load ptr, ptr %cof, align 8
  %85 = load ptr, ptr %84, align 8
  %arrayidx18.14 = getelementptr inbounds ptr, ptr %85, i64 %indvars.iv
  %86 = load ptr, ptr %arrayidx18.14, align 8
  %arrayidx20.14 = getelementptr inbounds i8, ptr %86, i64 56
  store i32 %83, ptr %arrayidx20.14, align 4
  %87 = load ptr, ptr %dP, align 8
  %call17.15 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %87) #14
  %88 = load i32, ptr %value1, align 4
  %89 = load ptr, ptr %cof, align 8
  %90 = load ptr, ptr %89, align 8
  %arrayidx18.15 = getelementptr inbounds ptr, ptr %90, i64 %indvars.iv
  %91 = load ptr, ptr %arrayidx18.15, align 8
  %arrayidx20.15 = getelementptr inbounds i8, ptr %91, i64 60
  store i32 %88, ptr %arrayidx20.15, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond.not, label %for.end23, label %for.cond12.preheader

for.end23:                                        ; preds = %for.cond12.preheader
  %bitdepth_chroma = getelementptr inbounds i8, ptr %0, i64 849042
  %92 = load i16, ptr %bitdepth_chroma, align 2
  %conv24 = sext i16 %92 to i32
  store i32 %conv24, ptr %len9, align 4
  %chroma_format_idc = getelementptr inbounds i8, ptr %1, i64 268
  %93 = load i32, ptr %chroma_format_idc, align 4
  %cmp26.not = icmp eq i32 %93, 0
  br i1 %cmp26.not, label %if.end80, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.end23
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %0, i64 849280
  %94 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp28 = icmp eq i32 %94, 0
  br i1 %cmp28, label %for.cond31.preheader, label %if.end80

for.cond31.preheader:                             ; preds = %land.lhs.true
  %mb_cr_size_y = getelementptr inbounds i8, ptr %0, i64 849112
  %95 = load i32, ptr %mb_cr_size_y, align 8
  %cmp32121 = icmp sgt i32 %95, 0
  br i1 %cmp32121, label %for.cond35.preheader.lr.ph, label %if.end80

for.cond35.preheader.lr.ph:                       ; preds = %for.cond31.preheader
  %mb_cr_size_x = getelementptr inbounds i8, ptr %0, i64 849108
  %96 = load i32, ptr %mb_cr_size_x, align 4
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %for.cond35.preheader, label %for.cond59.preheader.lr.ph

for.cond35.preheader:                             ; preds = %for.cond35.preheader.lr.ph, %for.inc51
  %98 = phi i32 [ %110, %for.inc51 ], [ %95, %for.cond35.preheader.lr.ph ]
  %99 = phi i32 [ %111, %for.inc51 ], [ %96, %for.cond35.preheader.lr.ph ]
  %indvars.iv135 = phi i64 [ %indvars.iv.next136, %for.inc51 ], [ 0, %for.cond35.preheader.lr.ph ]
  %cmp36119 = icmp sgt i32 %99, 0
  br i1 %cmp36119, label %for.body38, label %for.inc51

for.cond54.preheader:                             ; preds = %for.inc51
  %cmp56125 = icmp sgt i32 %110, 0
  br i1 %cmp56125, label %for.cond59.preheader.lr.ph, label %if.end80

for.cond59.preheader.lr.ph:                       ; preds = %for.cond35.preheader.lr.ph, %for.cond54.preheader
  %100 = phi i32 [ %110, %for.cond54.preheader ], [ %95, %for.cond35.preheader.lr.ph ]
  %mb_cr_size_x60 = getelementptr inbounds i8, ptr %0, i64 849108
  %101 = load i32, ptr %mb_cr_size_x60, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %for.cond59.preheader, label %if.end80

for.body38:                                       ; preds = %for.cond35.preheader, %for.body38
  %indvars.iv132 = phi i64 [ %indvars.iv.next133, %for.body38 ], [ 0, %for.cond35.preheader ]
  %103 = load ptr, ptr %dP, align 8
  %call40 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %103) #14
  %104 = load i32, ptr %value1, align 4
  %105 = load ptr, ptr %cof, align 8
  %arrayidx43 = getelementptr inbounds i8, ptr %105, i64 8
  %106 = load ptr, ptr %arrayidx43, align 8
  %arrayidx45 = getelementptr inbounds ptr, ptr %106, i64 %indvars.iv135
  %107 = load ptr, ptr %arrayidx45, align 8
  %arrayidx47 = getelementptr inbounds i32, ptr %107, i64 %indvars.iv132
  store i32 %104, ptr %arrayidx47, align 4
  %indvars.iv.next133 = add nuw nsw i64 %indvars.iv132, 1
  %108 = load i32, ptr %mb_cr_size_x, align 4
  %109 = sext i32 %108 to i64
  %cmp36 = icmp slt i64 %indvars.iv.next133, %109
  br i1 %cmp36, label %for.body38, label %for.inc51.loopexit

for.inc51.loopexit:                               ; preds = %for.body38
  %.pre = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc51

for.inc51:                                        ; preds = %for.inc51.loopexit, %for.cond35.preheader
  %110 = phi i32 [ %.pre, %for.inc51.loopexit ], [ %98, %for.cond35.preheader ]
  %111 = phi i32 [ %108, %for.inc51.loopexit ], [ %99, %for.cond35.preheader ]
  %indvars.iv.next136 = add nuw nsw i64 %indvars.iv135, 1
  %112 = sext i32 %110 to i64
  %cmp32 = icmp slt i64 %indvars.iv.next136, %112
  br i1 %cmp32, label %for.cond35.preheader, label %for.cond54.preheader, !llvm.loop !9

for.cond59.preheader:                             ; preds = %for.cond59.preheader.lr.ph, %for.inc76
  %113 = phi i32 [ %122, %for.inc76 ], [ %100, %for.cond59.preheader.lr.ph ]
  %114 = phi i32 [ %123, %for.inc76 ], [ %101, %for.cond59.preheader.lr.ph ]
  %indvars.iv141 = phi i64 [ %indvars.iv.next142, %for.inc76 ], [ 0, %for.cond59.preheader.lr.ph ]
  %cmp61123 = icmp sgt i32 %114, 0
  br i1 %cmp61123, label %for.body63, label %for.inc76

for.body63:                                       ; preds = %for.cond59.preheader, %for.body63
  %indvars.iv138 = phi i64 [ %indvars.iv.next139, %for.body63 ], [ 0, %for.cond59.preheader ]
  %115 = load ptr, ptr %dP, align 8
  %call65 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %115) #14
  %116 = load i32, ptr %value1, align 4
  %117 = load ptr, ptr %cof, align 8
  %arrayidx68 = getelementptr inbounds i8, ptr %117, i64 16
  %118 = load ptr, ptr %arrayidx68, align 8
  %arrayidx70 = getelementptr inbounds ptr, ptr %118, i64 %indvars.iv141
  %119 = load ptr, ptr %arrayidx70, align 8
  %arrayidx72 = getelementptr inbounds i32, ptr %119, i64 %indvars.iv138
  store i32 %116, ptr %arrayidx72, align 4
  %indvars.iv.next139 = add nuw nsw i64 %indvars.iv138, 1
  %120 = load i32, ptr %mb_cr_size_x60, align 4
  %121 = sext i32 %120 to i64
  %cmp61 = icmp slt i64 %indvars.iv.next139, %121
  br i1 %cmp61, label %for.body63, label %for.inc76.loopexit

for.inc76.loopexit:                               ; preds = %for.body63
  %.pre144 = load i32, ptr %mb_cr_size_y, align 8
  br label %for.inc76

for.inc76:                                        ; preds = %for.inc76.loopexit, %for.cond59.preheader
  %122 = phi i32 [ %.pre144, %for.inc76.loopexit ], [ %113, %for.cond59.preheader ]
  %123 = phi i32 [ %120, %for.inc76.loopexit ], [ %114, %for.cond59.preheader ]
  %indvars.iv.next142 = add nuw nsw i64 %indvars.iv141, 1
  %124 = sext i32 %122 to i64
  %cmp56 = icmp slt i64 %indvars.iv.next142, %124
  br i1 %cmp56, label %for.cond59.preheader, label %if.end80, !llvm.loop !10

if.end80:                                         ; preds = %for.inc76, %for.body.i, %for.cond31.preheader, %for.cond59.preheader.lr.ph, %for.cond54.preheader, %for.end23, %land.lhs.true
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

declare void @readIntraPredMode_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

declare i32 @readSyntaxElement_Intra4x4PredictionMode(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @readCIPredMode_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

declare void @readIPCM_CABAC(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #10

declare void @arideco_start_decoding(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare void @read_skip_flag_CABAC_p_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare i32 @check_next_mb_and_get_field_mode_CABAC_p_slice(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @readMB_typeInfo_CABAC_p_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare i32 @mb_is_available(i32 noundef, ptr noundef) local_unnamed_addr #5

declare void @readB8_typeInfo_CABAC_p_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare void @read_skip_flag_CABAC_b_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare i32 @check_next_mb_and_get_field_mode_CABAC_b_slice(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @readMB_typeInfo_CABAC_b_slice(ptr noundef, ptr noundef, ptr noundef) #5

declare void @readB8_typeInfo_CABAC_b_slice(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @readMBRefPictureIdx(ptr noundef %currSE, ptr noundef %dP, ptr noundef %currMB, ptr nocapture noundef readonly %mv_info, i32 noundef %list, i32 noundef %step_v0, i32 noundef %step_h0) unnamed_addr #3 {
entry:
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  %readRefPictureIdx = getelementptr inbounds i8, ptr %currMB, i64 464
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %idxprom39 = zext nneg i32 %list to i64
  %0 = sext i32 %step_h0 to i64
  %1 = sext i32 %step_v0 to i64
  %cmp2483 = icmp sgt i32 %step_v0, 0
  br label %for.body

for.body:                                         ; preds = %entry, %for.inc47
  %indvars.iv92 = phi i64 [ 0, %entry ], [ %indvars.iv.next93, %for.inc47 ]
  %2 = trunc nsw i64 %indvars.iv92 to i32
  %shl = shl i32 %2, 2
  store i32 %shl, ptr %subblock_y, align 8
  %mul = and i32 %2, -2
  %indvars.iv.next93 = add nsw i64 %indvars.iv92, %1
  br i1 %cmp2483, label %for.body3.us, label %for.body3

for.body3.us:                                     ; preds = %for.body, %for.inc44.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc44.us ], [ 0, %for.body ]
  %indvars97 = trunc i64 %indvars.iv to i32
  %shr4.us = ashr i32 %indvars97, 1
  %add.us = add nsw i32 %shr4.us, %mul
  %idxprom.us = sext i32 %add.us to i64
  %arrayidx.us = getelementptr inbounds [4 x i8], ptr %b8pdir, i64 0, i64 %idxprom.us
  %3 = load i8, ptr %arrayidx.us, align 1
  %conv.us = sext i8 %3 to i32
  %cmp5.us = icmp eq i32 %conv.us, %list
  %cmp11.us = icmp eq i8 %3, 2
  %or.cond.us = or i1 %cmp11.us, %cmp5.us
  br i1 %or.cond.us, label %land.lhs.true.us, label %for.inc44.us

land.lhs.true.us:                                 ; preds = %for.body3.us
  %arrayidx14.us = getelementptr inbounds [4 x i8], ptr %b8mode, i64 0, i64 %idxprom.us
  %4 = load i8, ptr %arrayidx14.us, align 1
  %cmp16.not.us = icmp eq i8 %4, 0
  br i1 %cmp16.not.us, label %for.inc44.us, label %if.then.us

if.then.us:                                       ; preds = %land.lhs.true.us
  %shl18.us = shl i32 %indvars97, 2
  store i32 %shl18.us, ptr %subblock_x, align 4
  %5 = load ptr, ptr %readRefPictureIdx, align 8
  %6 = load i8, ptr %arrayidx14.us, align 1
  %call.us = tail call signext i8 %5(ptr noundef nonnull %currMB, ptr noundef %currSE, ptr noundef %dP, i8 noundef signext %6, i32 noundef %list) #14
  %add30.us = add i32 %indvars97, %step_h0
  %.pre = load i32, ptr %block_x, align 8
  br label %for.body26.us

for.body26.us:                                    ; preds = %if.then.us, %for.inc41.us
  %7 = phi i32 [ %.pre, %if.then.us ], [ %8, %for.inc41.us ]
  %indvars.iv94 = phi i64 [ %indvars.iv92, %if.then.us ], [ %indvars.iv.next95, %for.inc41.us ]
  %add27.us = add nsw i32 %7, %indvars97
  %add3180.us = add i32 %add30.us, %7
  %cmp3281.us = icmp slt i32 %add27.us, %add3180.us
  br i1 %cmp3281.us, label %for.body34.lr.ph.us, label %for.inc41.us

for.inc41.us:                                     ; preds = %for.body34.us, %for.body26.us
  %8 = phi i32 [ %7, %for.body26.us ], [ %10, %for.body34.us ]
  %indvars.iv.next95 = add nsw i64 %indvars.iv94, 1
  %cmp24.us = icmp slt i64 %indvars.iv.next95, %indvars.iv.next93
  br i1 %cmp24.us, label %for.body26.us, label %for.inc44.us

for.body34.us:                                    ; preds = %for.body34.lr.ph.us, %for.body34.us
  %indvars.iv89 = phi i64 [ %13, %for.body34.lr.ph.us ], [ %indvars.iv.next90, %for.body34.us ]
  %9 = load ptr, ptr %arrayidx36.us, align 8
  %arrayidx40.us = getelementptr inbounds %struct.pic_motion_params, ptr %9, i64 %indvars.iv89, i32 2, i64 %idxprom39
  store i8 %call.us, ptr %arrayidx40.us, align 1
  %indvars.iv.next90 = add nsw i64 %indvars.iv89, 1
  %10 = load i32, ptr %block_x, align 8
  %add31.us = add i32 %add30.us, %10
  %11 = sext i32 %add31.us to i64
  %cmp32.us = icmp slt i64 %indvars.iv.next90, %11
  br i1 %cmp32.us, label %for.body34.us, label %for.inc41.us

for.inc44.us:                                     ; preds = %for.inc41.us, %land.lhs.true.us, %for.body3.us
  %indvars.iv.next = add i64 %indvars.iv, %0
  %indvars = trunc i64 %indvars.iv.next to i32
  %cmp2.us = icmp slt i32 %indvars, 4
  br i1 %cmp2.us, label %for.body3.us, label %for.inc47

for.body34.lr.ph.us:                              ; preds = %for.body26.us
  %arrayidx36.us = getelementptr inbounds ptr, ptr %mv_info, i64 %indvars.iv94
  %12 = sext i32 %7 to i64
  %13 = add nsw i64 %indvars.iv, %12
  br label %for.body34.us

for.body3:                                        ; preds = %for.body, %for.inc44
  %i0.085 = phi i32 [ %add45, %for.inc44 ], [ 0, %for.body ]
  %shr4 = ashr i32 %i0.085, 1
  %add = add nsw i32 %shr4, %mul
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [4 x i8], ptr %b8pdir, i64 0, i64 %idxprom
  %14 = load i8, ptr %arrayidx, align 1
  %conv = sext i8 %14 to i32
  %cmp5 = icmp eq i32 %conv, %list
  %cmp11 = icmp eq i8 %14, 2
  %or.cond = or i1 %cmp11, %cmp5
  br i1 %or.cond, label %land.lhs.true, label %for.inc44

land.lhs.true:                                    ; preds = %for.body3
  %arrayidx14 = getelementptr inbounds [4 x i8], ptr %b8mode, i64 0, i64 %idxprom
  %15 = load i8, ptr %arrayidx14, align 1
  %cmp16.not = icmp eq i8 %15, 0
  br i1 %cmp16.not, label %for.inc44, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %shl18 = shl i32 %i0.085, 2
  store i32 %shl18, ptr %subblock_x, align 4
  %16 = load ptr, ptr %readRefPictureIdx, align 8
  %17 = load i8, ptr %arrayidx14, align 1
  %call = tail call signext i8 %16(ptr noundef nonnull %currMB, ptr noundef %currSE, ptr noundef %dP, i8 noundef signext %17, i32 noundef %list) #14
  br label %for.inc44

for.inc44:                                        ; preds = %if.then, %for.body3, %land.lhs.true
  %add45 = add nsw i32 %i0.085, %step_h0
  %cmp2 = icmp slt i32 %add45, 4
  br i1 %cmp2, label %for.body3, label %for.inc47

for.inc47:                                        ; preds = %for.inc44, %for.inc44.us
  %cmp = icmp slt i64 %indvars.iv.next93, 4
  br i1 %cmp, label %for.body, label %for.end49

for.end49:                                        ; preds = %for.inc47
  ret void
}

declare void @linfo_se(i32 noundef, i32 noundef, ptr noundef, ptr noundef) #5

declare void @read_MVD_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @readMBMotionVectors(ptr noundef %currSE, ptr noundef %dP, ptr noundef %currMB, i32 noundef %list, i32 noundef %step_h0, i32 noundef %step_v0) unnamed_addr #3 {
entry:
  %pred_mv = alloca %struct.MotionVector, align 2
  %block = alloca [4 x %struct.pix_pos], align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pred_mv) #14
  %0 = load ptr, ptr %currMB, align 8
  %dec_picture = getelementptr inbounds i8, ptr %0, i64 13520
  %1 = load ptr, ptr %dec_picture, align 8
  %mv_info1 = getelementptr inbounds i8, ptr %1, i64 152
  %2 = load ptr, ptr %mv_info1, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %block) #14
  %b8pdir = getelementptr inbounds i8, ptr %currMB, i64 368
  %b8mode = getelementptr inbounds i8, ptr %currMB, i64 364
  %block_y = getelementptr inbounds i8, ptr %currMB, i64 36
  %block_x = getelementptr inbounds i8, ptr %currMB, i64 32
  %idxprom25 = zext i32 %list to i64
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  %mvd46 = getelementptr inbounds i8, ptr %currMB, i64 154
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  %p_Vid1.i = getelementptr inbounds i8, ptr %currMB, i64 8
  %add.ptr.i = getelementptr inbounds i8, ptr %block, i64 16
  %add.ptr5.i = getelementptr inbounds i8, ptr %block, i64 32
  %add.ptr34.i = getelementptr inbounds i8, ptr %block, i64 48
  %GetMVPredictor = getelementptr inbounds i8, ptr %currMB, i64 448
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %dP, i64 40
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %mv_y = getelementptr inbounds i8, ptr %pred_mv, i64 2
  %3 = sext i32 %step_h0 to i64
  %4 = sext i32 %step_v0 to i64
  %cmp40250 = icmp sgt i32 %step_v0, 0
  %cmp53248.us = icmp sgt i32 %step_h0, 0
  %5 = add i32 %list, 2
  %6 = shl nuw nsw i64 %idxprom25, 6
  %7 = shl nsw i64 %4, 4
  %8 = getelementptr i8, ptr %currMB, i64 %6
  %9 = getelementptr i8, ptr %8, i64 154
  %10 = getelementptr i8, ptr %currMB, i64 %6
  %11 = getelementptr i8, ptr %10, i64 156
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %entry, %for.inc152
  %indvar = phi i64 [ 0, %entry ], [ %indvar.next, %for.inc152 ]
  %indvars.iv285 = phi i64 [ 0, %entry ], [ %indvars.iv.next286, %for.inc152 ]
  %12 = mul i64 %7, %indvar
  %13 = trunc nsw i64 %indvars.iv285 to i32
  %mul = and i32 %13, -2
  %indvars.iv.next286 = add nsw i64 %indvars.iv285, %4
  br i1 %cmp40250, label %for.body4.us.preheader, label %for.body4

for.body4.us.preheader:                           ; preds = %for.cond2.preheader
  %14 = getelementptr ptr, ptr %2, i64 %indvars.iv285
  %15 = getelementptr i8, ptr %9, i64 %12
  %16 = getelementptr i8, ptr %11, i64 %12
  br label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us.preheader, %for.inc149.us
  %indvars.iv274 = phi i64 [ 0, %for.body4.us.preheader ], [ %indvars.iv.next275, %for.inc149.us ]
  %17 = trunc nsw i64 %indvars.iv274 to i32
  %shr5.us = ashr i32 %17, 1
  %add.us = add nsw i32 %shr5.us, %mul
  %idxprom.us = sext i32 %add.us to i64
  %arrayidx.us = getelementptr inbounds [4 x i8], ptr %b8pdir, i64 0, i64 %idxprom.us
  %18 = load i8, ptr %arrayidx.us, align 1
  %conv.us = sext i8 %18 to i32
  %cmp6.us = icmp eq i32 %conv.us, %list
  %cmp12.us = icmp eq i8 %18, 2
  %or.cond.us = or i1 %cmp12.us, %cmp6.us
  br i1 %or.cond.us, label %land.lhs.true.us, label %for.inc149.us

land.lhs.true.us:                                 ; preds = %for.body4.us
  %arrayidx15.us = getelementptr inbounds [4 x i8], ptr %b8mode, i64 0, i64 %idxprom.us
  %19 = load i8, ptr %arrayidx15.us, align 1
  %cmp17.not.us = icmp eq i8 %19, 0
  br i1 %cmp17.not.us, label %for.inc149.us, label %if.then.us

if.then.us:                                       ; preds = %land.lhs.true.us
  %20 = load i32, ptr %block_y, align 4
  %21 = sext i32 %20 to i64
  %arrayidx21.us = getelementptr ptr, ptr %14, i64 %21
  %22 = load ptr, ptr %arrayidx21.us, align 8
  %23 = load i32, ptr %block_x, align 8
  %24 = sext i32 %23 to i64
  %25 = add nsw i64 %indvars.iv274, %24
  %arrayidx26.us = getelementptr inbounds %struct.pic_motion_params, ptr %22, i64 %25, i32 2, i64 %idxprom25
  %26 = load i8, ptr %arrayidx26.us, align 1
  %idxprom31.us = sext i8 %19 to i64
  %arrayidx32.us = getelementptr inbounds [8 x [2 x i32]], ptr @BLOCK_STEP, i64 0, i64 %idxprom31.us
  %27 = load i32, ptr %arrayidx32.us, align 8
  %arrayidx36.us = getelementptr inbounds i8, ptr %arrayidx32.us, i64 4
  %28 = load i32, ptr %arrayidx36.us, align 4
  %shl.us = shl i32 %27, 2
  %shl37.us = shl i32 %28, 2
  %29 = add nsw i64 %indvars.iv274, %3
  %cmp10.i.us = icmp eq i32 %shl.us, 16
  %conv62.us = sext i8 %26 to i16
  %cmp125246.us = icmp sgt i32 %28, 1
  %mul137.us = shl nsw i32 %27, 1
  %conv138.us = sext i32 %mul137.us to i64
  %mul139.us = shl nsw i64 %conv138.us, 1
  br i1 %cmp53248.us, label %for.body42.us.us.preheader, label %for.body42.us261

for.body42.us.us.preheader:                       ; preds = %if.then.us
  %30 = sext i32 %27 to i64
  %31 = sext i32 %28 to i64
  %cmp88242.us.us = icmp sgt i32 %28, 0
  %cmp95239.us.us = icmp sgt i32 %27, 0
  %cmp108244.us.us = icmp sgt i32 %27, 0
  %wide.trip.count = zext i32 %28 to i64
  %32 = shl nsw i64 %31, 4
  %33 = add nsw i64 %wide.trip.count, -1
  %34 = add nsw i64 %wide.trip.count, -2
  %xtraiter = and i64 %33, 3
  %35 = icmp ult i64 %34, 3
  %unroll_iter = and i64 %33, -4
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body42.us.us

for.body42.us261:                                 ; preds = %if.then.us, %for.body42.us261
  %j.0251.us262 = phi i32 [ %add147.us263, %for.body42.us261 ], [ %13, %if.then.us ]
  %add147.us263 = add nsw i32 %j.0251.us262, %28
  %36 = sext i32 %add147.us263 to i64
  %cmp40.us264 = icmp sgt i64 %indvars.iv.next286, %36
  br i1 %cmp40.us264, label %for.body42.us261, label %for.cond38.for.inc149.loopexit_crit_edge.split.us265

for.inc149.us:                                    ; preds = %for.cond51.for.inc146_crit_edge.us.us, %for.cond38.for.inc149.loopexit_crit_edge.split.us265, %land.lhs.true.us, %for.body4.us
  %indvars.iv.next275 = add nsw i64 %indvars.iv274, %3
  %cmp3.us = icmp slt i64 %indvars.iv.next275, 4
  br i1 %cmp3.us, label %for.body4.us, label %for.inc152

for.cond38.for.inc149.loopexit_crit_edge.split.us265: ; preds = %for.body42.us261
  %shl43.le.us = shl i32 %j.0251.us262, 2
  store i32 %shl43.le.us, ptr %subblock_y, align 8
  br label %for.inc149.us

for.body42.us.us:                                 ; preds = %for.body42.us.us.preheader, %for.cond51.for.inc146_crit_edge.us.us
  %indvar300 = phi i64 [ 0, %for.body42.us.us.preheader ], [ %indvar.next301, %for.cond51.for.inc146_crit_edge.us.us ]
  %indvars.iv287 = phi i64 [ %indvars.iv285, %for.body42.us.us.preheader ], [ %indvars.iv.next288, %for.cond51.for.inc146_crit_edge.us.us ]
  %37 = mul i64 %32, %indvar300
  %scevgep = getelementptr i8, ptr %15, i64 %37
  %scevgep304 = getelementptr i8, ptr %16, i64 %37
  %38 = trunc nsw i64 %indvars.iv287 to i32
  %shl43.us.us = shl i32 %38, 2
  store i32 %shl43.us.us, ptr %subblock_y, align 8
  %39 = load i32, ptr %block_y, align 4
  %add45.us.us = add i32 %39, %38
  %arrayidx50.us.us = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287
  %sub3.i.us.us = add nsw i32 %shl43.us.us, -1
  %cmp.i.us.us = icmp sgt i32 %shl43.us.us, 0
  %cmp8.i.us.us = icmp eq i32 %shl43.us.us, 8
  %add87.us.us = add nsw i32 %add45.us.us, %28
  %40 = sext i32 %add45.us.us to i64
  %41 = sext i32 %add87.us.us to i64
  br label %for.body55.us.us

for.body55.us.us:                                 ; preds = %for.cond51.loopexit.us.us, %for.body42.us.us
  %indvars.iv276 = phi i64 [ %indvars.iv.next277297, %for.cond51.loopexit.us.us ], [ %indvars.iv274, %for.body42.us.us ]
  %42 = trunc nsw i64 %indvars.iv276 to i32
  %shl56.us.us = shl i32 %42, 2
  store i32 %shl56.us.us, ptr %subblock_x, align 4
  %43 = load i32, ptr %block_x, align 8
  %add58.us.us = add i32 %43, %42
  %44 = load ptr, ptr %p_Vid1.i, align 8
  %mb_size2.i.us.us = getelementptr inbounds i8, ptr %44, i64 849124
  %sub.i.us.us = add nsw i32 %shl56.us.us, -1
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub.i.us.us, i32 noundef %shl43.us.us, ptr noundef nonnull %mb_size2.i.us.us, ptr noundef nonnull %block) #14
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %shl56.us.us, i32 noundef %sub3.i.us.us, ptr noundef nonnull %mb_size2.i.us.us, ptr noundef nonnull %add.ptr.i) #14
  %add.i.us.us = add nsw i32 %shl56.us.us, %shl.us
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %add.i.us.us, i32 noundef %sub3.i.us.us, ptr noundef nonnull %mb_size2.i.us.us, ptr noundef nonnull %add.ptr5.i) #14
  br i1 %cmp.i.us.us, label %if.then.i.us.us, label %if.end28.i.us.us

if.then.i.us.us:                                  ; preds = %for.body55.us.us
  %cmp6.i.us.us = icmp slt i32 %shl56.us.us, 8
  br i1 %cmp6.i.us.us, label %if.then7.i.us.us, label %if.else20.i.us.us

if.else20.i.us.us:                                ; preds = %if.then.i.us.us
  %cmp22.i.us.us = icmp eq i32 %add.i.us.us, 16
  br i1 %cmp22.i.us.us, label %if.then31.sink.split.i.us.us, label %if.end28.i.us.us

if.then7.i.us.us:                                 ; preds = %if.then.i.us.us
  br i1 %cmp8.i.us.us, label %if.then9.i.us.us, label %if.else.i.us.us

if.else.i.us.us:                                  ; preds = %if.then7.i.us.us
  %cmp14.i.us.us = icmp eq i32 %add.i.us.us, 8
  br i1 %cmp14.i.us.us, label %if.then31.sink.split.i.us.us, label %if.end28.i.us.us

if.then9.i.us.us:                                 ; preds = %if.then7.i.us.us
  br i1 %cmp10.i.us, label %if.then31.sink.split.i.us.us, label %if.end28.i.us.us

if.end28.i.us.us:                                 ; preds = %if.then9.i.us.us, %if.else.i.us.us, %if.else20.i.us.us, %for.body55.us.us
  %.pr.i.us.us = load i32, ptr %add.ptr5.i, align 16
  %tobool.not.i.us.us = icmp eq i32 %.pr.i.us.us, 0
  br i1 %tobool.not.i.us.us, label %if.then31.i.us.us, label %get_neighbors.exit.us.us

if.then31.sink.split.i.us.us:                     ; preds = %if.then9.i.us.us, %if.else.i.us.us, %if.else20.i.us.us
  store i32 0, ptr %add.ptr5.i, align 16
  br label %if.then31.i.us.us

if.then31.i.us.us:                                ; preds = %if.then31.sink.split.i.us.us, %if.end28.i.us.us
  call void @get4x4Neighbour(ptr noundef nonnull %currMB, i32 noundef %sub.i.us.us, i32 noundef %sub3.i.us.us, ptr noundef nonnull %mb_size2.i.us.us, ptr noundef nonnull %add.ptr34.i) #14
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %add.ptr5.i, ptr noundef nonnull align 16 dereferenceable(16) %add.ptr34.i, i64 16, i1 false)
  br label %get_neighbors.exit.us.us

get_neighbors.exit.us.us:                         ; preds = %if.then31.i.us.us, %if.end28.i.us.us
  %45 = load ptr, ptr %GetMVPredictor, align 8
  call void %45(ptr noundef nonnull %currMB, ptr noundef nonnull %block, ptr noundef nonnull %pred_mv, i16 noundef signext %conv62.us, ptr noundef %2, i32 noundef %list, i32 noundef %shl56.us.us, i32 noundef %shl43.us.us, i32 noundef %shl.us, i32 noundef %shl37.us) #14
  store i32 %list, ptr %value2, align 8
  %46 = load ptr, ptr %readSyntaxElement, align 8
  %call.us.us = call i32 %46(ptr noundef nonnull %currMB, ptr noundef %currSE, ptr noundef %dP) #14
  %47 = load i32, ptr %value1, align 4
  %conv71.us.us = trunc i32 %47 to i16
  store i32 %5, ptr %value2, align 8
  %48 = load ptr, ptr %readSyntaxElement, align 8
  %call.us.us.1 = call i32 %48(ptr noundef nonnull %currMB, ptr noundef %currSE, ptr noundef %dP) #14
  %49 = load i32, ptr %value1, align 4
  %conv71.us.us.1 = trunc i32 %49 to i16
  %50 = load i16, ptr %pred_mv, align 2
  %add77.us.us = add i16 %50, %conv71.us.us
  %51 = load i16, ptr %mv_y, align 2
  %add83.us.us = add i16 %51, %conv71.us.us.1
  br i1 %cmp88242.us.us, label %for.body90.lr.ph.us.us, label %for.cond106.preheader.us.us

for.body127.us.us:                                ; preds = %for.body127.lr.ph.us.us, %for.body127.us.us
  %indvars.iv281 = phi i64 [ %indvars.iv.next282.3, %for.body127.us.us ], [ 1, %for.body127.lr.ph.us.us ]
  %niter = phi i64 [ %niter.next.3, %for.body127.us.us ], [ 0, %for.body127.lr.ph.us.us ]
  %arrayidx131.us.us = getelementptr inbounds [4 x [2 x i16]], ptr %arrayidx50.us.us, i64 %indvars.iv281, i64 %indvars.iv276
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %arrayidx131.us.us, ptr nonnull align 2 %arrayidx135.us.us, i64 %mul139.us, i1 false)
  %indvars.iv.next282 = add nuw nsw i64 %indvars.iv281, 1
  %arrayidx131.us.us.1 = getelementptr inbounds [4 x [2 x i16]], ptr %arrayidx50.us.us, i64 %indvars.iv.next282, i64 %indvars.iv276
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %arrayidx131.us.us.1, ptr nonnull align 2 %arrayidx135.us.us, i64 %mul139.us, i1 false)
  %indvars.iv.next282.1 = add nuw nsw i64 %indvars.iv281, 2
  %arrayidx131.us.us.2 = getelementptr inbounds [4 x [2 x i16]], ptr %arrayidx50.us.us, i64 %indvars.iv.next282.1, i64 %indvars.iv276
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %arrayidx131.us.us.2, ptr nonnull align 2 %arrayidx135.us.us, i64 %mul139.us, i1 false)
  %indvars.iv.next282.2 = add nuw nsw i64 %indvars.iv281, 3
  %arrayidx131.us.us.3 = getelementptr inbounds [4 x [2 x i16]], ptr %arrayidx50.us.us, i64 %indvars.iv.next282.2, i64 %indvars.iv276
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %arrayidx131.us.us.3, ptr nonnull align 2 %arrayidx135.us.us, i64 %mul139.us, i1 false)
  %indvars.iv.next282.3 = add nuw nsw i64 %indvars.iv281, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond51.loopexit.us.us.loopexit.unr-lcssa, label %for.body127.us.us

for.body110.us.us:                                ; preds = %for.body110.us.us.preheader334, %for.body110.us.us
  %indvars.iv278 = phi i64 [ %indvars.iv.next279, %for.body110.us.us ], [ %indvars.iv278.ph, %for.body110.us.us.preheader334 ]
  %arrayidx114.us.us = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %indvars.iv278
  store i16 %conv71.us.us, ptr %arrayidx114.us.us, align 2
  %arrayidx120.us.us = getelementptr inbounds i8, ptr %arrayidx114.us.us, i64 2
  store i16 %conv71.us.us.1, ptr %arrayidx120.us.us, align 2
  %indvars.iv.next279 = add nsw i64 %indvars.iv278, 1
  %cmp108.us.us = icmp slt i64 %indvars.iv.next279, %indvars.iv.next277
  br i1 %cmp108.us.us, label %for.body110.us.us, label %for.cond124.preheader.us.us, !llvm.loop !11

for.cond124.preheader.us.us:                      ; preds = %for.body110.us.us, %middle.block, %for.cond106.preheader.us.us.thread, %for.cond106.preheader.us.us
  %indvars.iv.next277297 = phi i64 [ %indvars.iv.next277295, %for.cond106.preheader.us.us.thread ], [ %indvars.iv.next277, %for.cond106.preheader.us.us ], [ %indvars.iv.next277, %middle.block ], [ %indvars.iv.next277, %for.body110.us.us ]
  br i1 %cmp125246.us, label %for.body127.lr.ph.us.us, label %for.cond51.loopexit.us.us

for.cond51.loopexit.us.us.loopexit.unr-lcssa:     ; preds = %for.body127.us.us, %for.body127.lr.ph.us.us
  %indvars.iv281.unr = phi i64 [ 1, %for.body127.lr.ph.us.us ], [ %indvars.iv.next282.3, %for.body127.us.us ]
  br i1 %lcmp.mod.not, label %for.cond51.loopexit.us.us, label %for.body127.us.us.epil

for.body127.us.us.epil:                           ; preds = %for.cond51.loopexit.us.us.loopexit.unr-lcssa, %for.body127.us.us.epil
  %indvars.iv281.epil = phi i64 [ %indvars.iv.next282.epil, %for.body127.us.us.epil ], [ %indvars.iv281.unr, %for.cond51.loopexit.us.us.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body127.us.us.epil ], [ 0, %for.cond51.loopexit.us.us.loopexit.unr-lcssa ]
  %arrayidx131.us.us.epil = getelementptr inbounds [4 x [2 x i16]], ptr %arrayidx50.us.us, i64 %indvars.iv281.epil, i64 %indvars.iv276
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2 %arrayidx131.us.us.epil, ptr nonnull align 2 %arrayidx135.us.us, i64 %mul139.us, i1 false)
  %indvars.iv.next282.epil = add nuw nsw i64 %indvars.iv281.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond51.loopexit.us.us, label %for.body127.us.us.epil, !llvm.loop !13

for.cond51.loopexit.us.us:                        ; preds = %for.cond51.loopexit.us.us.loopexit.unr-lcssa, %for.body127.us.us.epil, %for.cond124.preheader.us.us
  %cmp53.us.us = icmp slt i64 %indvars.iv.next277297, %29
  br i1 %cmp53.us.us, label %for.body55.us.us, label %for.cond51.for.inc146_crit_edge.us.us

for.cond106.preheader.us.us:                      ; preds = %for.cond93.for.end102_crit_edge.us.us.us, %get_neighbors.exit.us.us
  %indvars.iv.next277 = add i64 %indvars.iv276, %30
  br i1 %cmp108244.us.us, label %for.body110.us.us.preheader, label %for.cond124.preheader.us.us

for.body110.us.us.preheader:                      ; preds = %for.cond106.preheader.us.us
  %52 = add i64 %indvars.iv276, 1
  %smax309 = call i64 @llvm.smax.i64(i64 %indvars.iv.next277, i64 %52)
  %53 = sub i64 %smax309, %indvars.iv276
  %min.iters.check = icmp ult i64 %53, 40
  br i1 %min.iters.check, label %for.body110.us.us.preheader334, label %vector.scevcheck

for.body110.us.us.preheader334:                   ; preds = %middle.block, %vector.scevcheck, %for.body110.us.us.preheader
  %indvars.iv278.ph = phi i64 [ %indvars.iv276, %vector.scevcheck ], [ %indvars.iv276, %for.body110.us.us.preheader ], [ %ind.end, %middle.block ]
  br label %for.body110.us.us

vector.scevcheck:                                 ; preds = %for.body110.us.us.preheader
  %54 = add i64 %indvars.iv276, 1
  %smax = call i64 @llvm.smax.i64(i64 %indvars.iv.next277, i64 %54)
  %55 = xor i64 %indvars.iv276, -1
  %56 = add i64 %smax, %55
  %57 = shl i64 %indvars.iv276, 2
  %scevgep302 = getelementptr i8, ptr %scevgep, i64 %57
  %mul.result = shl i64 %56, 2
  %58 = getelementptr i8, ptr %scevgep302, i64 %mul.result
  %59 = icmp ult ptr %58, %scevgep302
  %scevgep305 = getelementptr i8, ptr %scevgep304, i64 %57
  %mul.result307 = shl i64 %56, 2
  %mul.overflow308 = icmp ugt i64 %56, 4611686018427387903
  %60 = getelementptr i8, ptr %scevgep305, i64 %mul.result307
  %61 = icmp ult ptr %60, %scevgep305
  %62 = or i1 %61, %mul.overflow308
  %63 = or i1 %59, %62
  br i1 %63, label %for.body110.us.us.preheader334, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i64 %53, -16
  %ind.end = add i64 %indvars.iv276, %n.vec
  %broadcast.splatinsert = insertelement <4 x i16> poison, i16 %conv71.us.us, i64 0
  %broadcast.splatinsert310 = insertelement <4 x i16> poison, i16 %conv71.us.us.1, i64 0
  %interleaved.vec = shufflevector <4 x i16> %broadcast.splatinsert, <4 x i16> %broadcast.splatinsert310, <8 x i32> <i32 0, i32 4, i32 0, i32 4, i32 0, i32 4, i32 0, i32 4>
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %indvars.iv276, %index
  %64 = add i64 %offset.idx, 4
  %65 = add i64 %offset.idx, 8
  %66 = add i64 %offset.idx, 12
  %67 = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %offset.idx
  %68 = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %64
  %69 = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %65
  %70 = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %66
  store <8 x i16> %interleaved.vec, ptr %67, align 2
  store <8 x i16> %interleaved.vec, ptr %68, align 2
  store <8 x i16> %interleaved.vec, ptr %69, align 2
  store <8 x i16> %interleaved.vec, ptr %70, align 2
  %index.next = add nuw i64 %index, 16
  %71 = icmp eq i64 %index.next, %n.vec
  br i1 %71, label %middle.block, label %vector.body, !llvm.loop !15

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %53, %n.vec
  br i1 %cmp.n, label %for.cond124.preheader.us.us, label %for.body110.us.us.preheader334

for.body90.lr.ph.us.us:                           ; preds = %get_neighbors.exit.us.us
  %idx.ext.us.us = sext i32 %add58.us.us to i64
  %add94.us.us = add i32 %add58.us.us, %27
  br i1 %cmp95239.us.us, label %for.body90.us.us.us.preheader, label %for.cond106.preheader.us.us.thread

for.body90.us.us.us.preheader:                    ; preds = %for.body90.lr.ph.us.us
  %72 = add i32 %43, 1
  %73 = add i32 %72, %42
  %smax315 = call i32 @llvm.smax.i32(i32 %add94.us.us, i32 %73)
  %74 = xor i32 %43, -1
  %75 = add i32 %smax315, %74
  %76 = sub i32 %75, %42
  %77 = zext i32 %76 to i64
  %78 = add nuw nsw i64 %77, 1
  %min.iters.check318 = icmp ult i32 %76, 3
  %n.vec321 = and i64 %78, 8589934588
  %79 = shl nuw nsw i64 %n.vec321, 5
  %.cast = trunc i64 %n.vec321 to i32
  %ind.end324 = add i32 %add58.us.us, %.cast
  %cmp.n333 = icmp eq i64 %78, %n.vec321
  br label %for.body90.us.us.us

for.cond106.preheader.us.us.thread:               ; preds = %for.body90.lr.ph.us.us
  %indvars.iv.next277295 = add nsw i64 %indvars.iv276, %30
  br label %for.cond124.preheader.us.us

for.body90.us.us.us:                              ; preds = %for.body90.us.us.us.preheader, %for.cond93.for.end102_crit_edge.us.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond93.for.end102_crit_edge.us.us.us ], [ %40, %for.body90.us.us.us.preheader ]
  %arrayidx92.us.us.us = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv
  %80 = load ptr, ptr %arrayidx92.us.us.us, align 8
  %add.ptr.us.us.us = getelementptr inbounds %struct.pic_motion_params, ptr %80, i64 %idx.ext.us.us
  br i1 %min.iters.check318, label %for.body97.us.us.us.preheader, label %vector.ph319

vector.ph319:                                     ; preds = %for.body90.us.us.us
  %ind.end322 = getelementptr i8, ptr %add.ptr.us.us.us, i64 %79
  %invariant.gep = getelementptr i8, ptr %add.ptr.us.us.us, i64 16
  %invariant.gep336 = getelementptr i8, ptr %add.ptr.us.us.us, i64 16
  %invariant.gep338 = getelementptr i8, ptr %add.ptr.us.us.us, i64 16
  %invariant.gep340 = getelementptr i8, ptr %add.ptr.us.us.us, i64 16
  %invariant.gep342 = getelementptr [2 x %struct.MotionVector], ptr %invariant.gep, i64 0, i64 %idxprom25
  %invariant.gep344 = getelementptr [2 x %struct.MotionVector], ptr %invariant.gep336, i64 0, i64 %idxprom25
  %invariant.gep345 = getelementptr [2 x %struct.MotionVector], ptr %invariant.gep338, i64 0, i64 %idxprom25
  %invariant.gep347 = getelementptr [2 x %struct.MotionVector], ptr %invariant.gep340, i64 0, i64 %idxprom25
  br label %vector.body326

vector.body326:                                   ; preds = %vector.body326, %vector.ph319
  %index327 = phi i64 [ 0, %vector.ph319 ], [ %index.next332, %vector.body326 ]
  %offset.idx328 = shl i64 %index327, 5
  %81 = or disjoint i64 %offset.idx328, 32
  %82 = or disjoint i64 %offset.idx328, 64
  %83 = or disjoint i64 %offset.idx328, 96
  %gep343 = getelementptr i8, ptr %invariant.gep342, i64 %offset.idx328
  %gep = getelementptr i8, ptr %invariant.gep344, i64 %81
  %gep346 = getelementptr i8, ptr %invariant.gep345, i64 %82
  %gep348 = getelementptr i8, ptr %invariant.gep347, i64 %83
  store i16 %add77.us.us, ptr %gep343, align 4
  store i16 %add77.us.us, ptr %gep, align 4
  store i16 %add77.us.us, ptr %gep346, align 4
  store i16 %add77.us.us, ptr %gep348, align 4
  %84 = getelementptr inbounds i8, ptr %gep343, i64 2
  %85 = getelementptr inbounds i8, ptr %gep, i64 2
  %86 = getelementptr inbounds i8, ptr %gep346, i64 2
  %87 = getelementptr inbounds i8, ptr %gep348, i64 2
  store i16 %add83.us.us, ptr %84, align 2
  store i16 %add83.us.us, ptr %85, align 2
  store i16 %add83.us.us, ptr %86, align 2
  store i16 %add83.us.us, ptr %87, align 2
  %index.next332 = add nuw i64 %index327, 4
  %88 = icmp eq i64 %index.next332, %n.vec321
  br i1 %88, label %middle.block316, label %vector.body326, !llvm.loop !17

middle.block316:                                  ; preds = %vector.body326
  br i1 %cmp.n333, label %for.cond93.for.end102_crit_edge.us.us.us, label %for.body97.us.us.us.preheader

for.body97.us.us.us.preheader:                    ; preds = %middle.block316, %for.body90.us.us.us
  %mvinfo.0241.us.us.us.ph = phi ptr [ %add.ptr.us.us.us, %for.body90.us.us.us ], [ %ind.end322, %middle.block316 ]
  %ii.0240.us.us.us.ph = phi i32 [ %add58.us.us, %for.body90.us.us.us ], [ %ind.end324, %middle.block316 ]
  br label %for.body97.us.us.us

for.body97.us.us.us:                              ; preds = %for.body97.us.us.us.preheader, %for.body97.us.us.us
  %mvinfo.0241.us.us.us = phi ptr [ %incdec.ptr.us.us.us, %for.body97.us.us.us ], [ %mvinfo.0241.us.us.us.ph, %for.body97.us.us.us.preheader ]
  %ii.0240.us.us.us = phi i32 [ %inc101.us.us.us, %for.body97.us.us.us ], [ %ii.0240.us.us.us.ph, %for.body97.us.us.us.preheader ]
  %incdec.ptr.us.us.us = getelementptr inbounds i8, ptr %mvinfo.0241.us.us.us, i64 32
  %mv.us.us.us = getelementptr inbounds i8, ptr %mvinfo.0241.us.us.us, i64 16
  %arrayidx99.us.us.us = getelementptr inbounds [2 x %struct.MotionVector], ptr %mv.us.us.us, i64 0, i64 %idxprom25
  store i16 %add77.us.us, ptr %arrayidx99.us.us.us, align 4
  %curr_mv.sroa.4.0.arrayidx99.sroa_idx.us.us.us = getelementptr inbounds i8, ptr %arrayidx99.us.us.us, i64 2
  store i16 %add83.us.us, ptr %curr_mv.sroa.4.0.arrayidx99.sroa_idx.us.us.us, align 2
  %inc101.us.us.us = add nsw i32 %ii.0240.us.us.us, 1
  %cmp95.us.us.us = icmp slt i32 %inc101.us.us.us, %add94.us.us
  br i1 %cmp95.us.us.us, label %for.body97.us.us.us, label %for.cond93.for.end102_crit_edge.us.us.us, !llvm.loop !18

for.cond93.for.end102_crit_edge.us.us.us:         ; preds = %for.body97.us.us.us, %middle.block316
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp88.us.us.us = icmp slt i64 %indvars.iv.next, %41
  br i1 %cmp88.us.us.us, label %for.body90.us.us.us, label %for.cond106.preheader.us.us

for.body127.lr.ph.us.us:                          ; preds = %for.cond124.preheader.us.us
  %arrayidx135.us.us = getelementptr inbounds [2 x [4 x [4 x [2 x i16]]]], ptr %mvd46, i64 0, i64 %idxprom25, i64 %indvars.iv287, i64 %indvars.iv276
  br i1 %35, label %for.cond51.loopexit.us.us.loopexit.unr-lcssa, label %for.body127.us.us

for.cond51.for.inc146_crit_edge.us.us:            ; preds = %for.cond51.loopexit.us.us
  %indvars.iv.next288 = add nsw i64 %indvars.iv287, %31
  %cmp40.us.us = icmp slt i64 %indvars.iv.next288, %indvars.iv.next286
  %indvar.next301 = add i64 %indvar300, 1
  br i1 %cmp40.us.us, label %for.body42.us.us, label %for.inc149.us

for.body4:                                        ; preds = %for.cond2.preheader, %for.body4
  %i0.0258 = phi i32 [ %add150, %for.body4 ], [ 0, %for.cond2.preheader ]
  %add150 = add nsw i32 %i0.0258, %step_h0
  %cmp3 = icmp slt i32 %add150, 4
  br i1 %cmp3, label %for.body4, label %for.inc152

for.inc152:                                       ; preds = %for.body4, %for.inc149.us
  %cmp = icmp slt i64 %indvars.iv.next286, 4
  %indvar.next = add i64 %indvar, 1
  br i1 %cmp, label %for.cond2.preheader, label %for.end154

for.end154:                                       ; preds = %for.inc152
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %block) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pred_mv) #14
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal noundef signext i8 @readRefPictureIdx_Null(ptr nocapture readnone %currMB, ptr nocapture readnone %currSE, ptr nocapture readnone %dP, i8 signext %b8mode, i32 %list) #11 {
entry:
  ret i8 0
}

; Function Attrs: nounwind uwtable
define internal signext i8 @readRefPictureIdx_FLC(ptr nocapture readnone %currMB, ptr noundef %currSE, ptr nocapture noundef readonly %dP, i8 noundef signext %b8mode, i32 %list) #3 {
entry:
  %cmp.i = icmp sgt i8 %b8mode, 3
  %conv.i = zext i1 %cmp.i to i32
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 %conv.i, ptr %context, align 8
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 1, ptr %len, align 4
  %0 = load ptr, ptr %dP, align 8
  %call1 = tail call i32 @readSyntaxElement_FLC(ptr noundef %currSE, ptr noundef %0) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %1 = load i32, ptr %value1, align 4
  %sub = sub nsw i32 1, %1
  store i32 %sub, ptr %value1, align 4
  %conv4 = trunc i32 %sub to i8
  ret i8 %conv4
}

; Function Attrs: nounwind uwtable
define internal signext i8 @readRefPictureIdx_VLC(ptr noundef %currMB, ptr noundef %currSE, ptr noundef %dP, i8 noundef signext %b8mode, i32 noundef %list) #3 {
entry:
  %cmp.i = icmp sgt i8 %b8mode, 3
  %conv.i = zext i1 %cmp.i to i32
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 %conv.i, ptr %context, align 8
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  store i32 %list, ptr %value2, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %dP, i64 40
  %0 = load ptr, ptr %readSyntaxElement, align 8
  %call1 = tail call i32 %0(ptr noundef %currMB, ptr noundef %currSE, ptr noundef %dP) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %1 = load i32, ptr %value1, align 4
  %conv2 = trunc i32 %1 to i8
  ret i8 %conv2
}

declare void @readRefFrame_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

declare void @read_CBP_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @read_delta_quant(ptr noundef %currSE, ptr noundef %currMB, ptr nocapture noundef readonly %partMap, i32 noundef %type) unnamed_addr #3 {
entry:
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  store i32 %type, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %2 = load ptr, ptr %partArr, align 8
  %idxprom = zext nneg i32 %type to i64
  %arrayidx = getelementptr inbounds i8, ptr %partMap, i64 %idxprom
  %3 = load i8, ptr %arrayidx, align 1
  %idxprom4 = zext i8 %3 to i64
  %arrayidx5 = getelementptr inbounds %struct.datapartition, ptr %2, i64 %idxprom4
  %active_pps = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load ptr, ptr %active_pps, align 8
  %entropy_coding_mode_flag = getelementptr inbounds i8, ptr %4, i64 12
  %5 = load i32, ptr %entropy_coding_mode_flag, align 4
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load ptr, ptr %arrayidx5, align 8
  %ei_flag = getelementptr inbounds i8, ptr %6, i64 24
  %7 = load i32, ptr %ei_flag, align 8
  %tobool.not = icmp eq i32 %7, 0
  %spec.select = select i1 %tobool.not, i64 40, i64 32
  %spec.select2 = select i1 %tobool.not, ptr @read_dQuant_CABAC, ptr @linfo_se
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false, %entry
  %.sink = phi i64 [ 32, %entry ], [ %spec.select, %lor.lhs.false ]
  %read_dQuant_CABAC.sink = phi ptr [ @linfo_se, %entry ], [ %spec.select2, %lor.lhs.false ]
  %reading = getelementptr inbounds i8, ptr %currSE, i64 %.sink
  store ptr %read_dQuant_CABAC.sink, ptr %reading, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx5, i64 40
  %8 = load ptr, ptr %readSyntaxElement, align 8
  %call = tail call i32 %8(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx5) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %9 = load i32, ptr %value1, align 4
  %conv = trunc i32 %9 to i16
  %delta_quant = getelementptr inbounds i8, ptr %currMB, i64 112
  store i16 %conv, ptr %delta_quant, align 8
  %sext = shl i32 %9, 16
  %conv7 = ashr exact i32 %sext, 16
  %bitdepth_luma_qp_scale = getelementptr inbounds i8, ptr %1, i64 849052
  %10 = load i32, ptr %bitdepth_luma_qp_scale, align 4
  %div = sdiv i32 %10, 2
  %sub = sub nsw i32 -26, %div
  %cmp8 = icmp slt i32 %conv7, %sub
  %add15 = add nsw i32 %div, 25
  %cmp16 = icmp sgt i32 %conv7, %add15
  %or.cond = select i1 %cmp8, i1 true, i1 %cmp16
  br i1 %or.cond, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end
  tail call void @error(ptr noundef nonnull @.str.5, i32 noundef 500) #14
  %.pre = load i16, ptr %delta_quant, align 8
  %.pre1 = load i32, ptr %bitdepth_luma_qp_scale, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then18
  %11 = phi i32 [ %10, %if.end ], [ %.pre1, %if.then18 ]
  %12 = phi i16 [ %conv, %if.end ], [ %.pre, %if.then18 ]
  %qp = getelementptr inbounds i8, ptr %0, i64 148
  %13 = load i32, ptr %qp, align 4
  %conv21 = sext i16 %12 to i32
  %mul = shl nsw i32 %11, 1
  %add22 = add i32 %13, 52
  %add23 = add i32 %add22, %conv21
  %add25 = add nsw i32 %add23, %mul
  %add27 = add nsw i32 %11, 52
  %rem = srem i32 %add25, %add27
  %sub29 = sub nsw i32 %rem, %11
  store i32 %sub29, ptr %qp, align 4
  %14 = load ptr, ptr %p_Vid1, align 8
  %qp2.i = getelementptr inbounds i8, ptr %currMB, i64 68
  store i32 %sub29, ptr %qp2.i, align 4
  %bitdepth_luma_qp_scale.i = getelementptr inbounds i8, ptr %14, i64 849052
  %15 = load i32, ptr %bitdepth_luma_qp_scale.i, align 4
  %add.i = add nsw i32 %15, %sub29
  %qp_scaled.i = getelementptr inbounds i8, ptr %currMB, i64 80
  store i32 %add.i, ptr %qp_scaled.i, align 8
  %16 = load ptr, ptr %currMB, align 8
  %dec_picture2.i.i = getelementptr inbounds i8, ptr %16, i64 13520
  %17 = load ptr, ptr %dec_picture2.i.i, align 8
  %bitdepth_chroma_qp_scale.i.i = getelementptr inbounds i8, ptr %14, i64 849056
  %chroma_qp_offset.i.i = getelementptr inbounds i8, ptr %17, i64 300
  %qpc.i.i = getelementptr inbounds i8, ptr %currMB, i64 72
  %18 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.i.i = sub nsw i32 0, %18
  %19 = load i32, ptr %chroma_qp_offset.i.i, align 4
  %add.i.i = add nsw i32 %19, %sub29
  %cond.i.i.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.i.i, i32 %sub.i.i)
  %cond.i4.i.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.i.i, i32 51)
  %cmp8.i.i = icmp slt i32 %cond.i.i.i.i, 0
  br i1 %cmp8.i.i, label %cond.end.i.i, label %cond.false.i.i

cond.false.i.i:                                   ; preds = %if.end19
  %idxprom15.i.i = zext nneg i32 %cond.i4.i.i.i to i64
  %arrayidx16.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.i.i
  %20 = load i8, ptr %arrayidx16.i.i, align 1
  %conv.i.i = zext i8 %20 to i32
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %if.end19
  %cond.i.i = phi i32 [ %conv.i.i, %cond.false.i.i ], [ %cond.i4.i.i.i, %if.end19 ]
  store i32 %cond.i.i, ptr %qpc.i.i, align 4
  %21 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.i.i = add nsw i32 %21, %cond.i.i
  %arrayidx27.i.i = getelementptr inbounds i8, ptr %currMB, i64 84
  store i32 %add24.i.i, ptr %arrayidx27.i.i, align 4
  %22 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %sub.1.i.i = sub nsw i32 0, %22
  %arrayidx.1.i.i = getelementptr inbounds i8, ptr %17, i64 304
  %23 = load i32, ptr %arrayidx.1.i.i, align 4
  %add.1.i.i = add nsw i32 %23, %sub29
  %cond.i.i.1.i.i = tail call noundef i32 @llvm.smax.i32(i32 %add.1.i.i, i32 %sub.1.i.i)
  %cond.i4.i.1.i.i = tail call noundef i32 @llvm.smin.i32(i32 %cond.i.i.1.i.i, i32 51)
  %cmp8.1.i.i = icmp slt i32 %cond.i.i.1.i.i, 0
  br i1 %cmp8.1.i.i, label %set_chroma_qp.exit.i, label %cond.false.1.i.i

cond.false.1.i.i:                                 ; preds = %cond.end.i.i
  %idxprom15.1.i.i = zext nneg i32 %cond.i4.i.1.i.i to i64
  %arrayidx16.1.i.i = getelementptr inbounds [52 x i8], ptr @QP_SCALE_CR, i64 0, i64 %idxprom15.1.i.i
  %24 = load i8, ptr %arrayidx16.1.i.i, align 1
  %conv.1.i.i = zext i8 %24 to i32
  br label %set_chroma_qp.exit.i

set_chroma_qp.exit.i:                             ; preds = %cond.false.1.i.i, %cond.end.i.i
  %cond.1.i.i = phi i32 [ %conv.1.i.i, %cond.false.1.i.i ], [ %cond.i4.i.1.i.i, %cond.end.i.i ]
  %arrayidx4.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 76
  store i32 %cond.1.i.i, ptr %arrayidx4.1.i.i, align 4
  %25 = load i32, ptr %bitdepth_chroma_qp_scale.i.i, align 8
  %add24.1.i.i = add nsw i32 %25, %cond.1.i.i
  %arrayidx27.1.i.i = getelementptr inbounds i8, ptr %currMB, i64 88
  store i32 %add24.1.i.i, ptr %arrayidx27.1.i.i, align 4
  %cmp.i = icmp eq i32 %add.i, 0
  br i1 %cmp.i, label %land.rhs.i, label %update_qp.exit

land.rhs.i:                                       ; preds = %set_chroma_qp.exit.i
  %lossless_qpprime_flag.i = getelementptr inbounds i8, ptr %14, i64 849092
  %26 = load i32, ptr %lossless_qpprime_flag.i, align 4
  %cmp5.i = icmp eq i32 %26, 1
  %27 = zext i1 %cmp5.i to i32
  br label %update_qp.exit

update_qp.exit:                                   ; preds = %set_chroma_qp.exit.i, %land.rhs.i
  %land.ext.i = phi i32 [ 0, %set_chroma_qp.exit.i ], [ %27, %land.rhs.i ]
  %is_lossless.i = getelementptr inbounds i8, ptr %currMB, i64 92
  store i32 %land.ext.i, ptr %is_lossless.i, align 4
  ret void
}

declare void @linfo_levrun_inter(i32 noundef, i32 noundef, ptr noundef, ptr noundef) #5

declare void @readRunLevel_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

declare void @itrans_2(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff8x8MB_CABAC(ptr noundef %currMB, ptr noundef %currSE, i32 noundef %pl) unnamed_addr #3 {
entry:
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %0 = load i32, ptr %is_lossless, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  tail call fastcc void @readCompCoeff8x8_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 0)
  tail call fastcc void @readCompCoeff8x8_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 1)
  tail call fastcc void @readCompCoeff8x8_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 2)
  tail call fastcc void @readCompCoeff8x8_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 3)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call fastcc void @readCompCoeff8x8_CABAC_lossless(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 0)
  tail call fastcc void @readCompCoeff8x8_CABAC_lossless(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 1)
  tail call fastcc void @readCompCoeff8x8_CABAC_lossless(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 2)
  tail call fastcc void @readCompCoeff8x8_CABAC_lossless(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef 3)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff4x4MB_CABAC(ptr noundef %currMB, ptr noundef %currSE, i32 noundef %pl, ptr nocapture noundef readonly %InvLevelScale4x4, i32 noundef %qp_per, i32 noundef %cbp) unnamed_addr #3 {
entry:
  %0 = load ptr, ptr %currMB, align 8
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %1 = load i16, ptr %mb_type, align 8
  %.fr = freeze i16 %1
  %2 = and i16 %.fr, -5
  %narrow = icmp eq i16 %2, 10
  %cond = zext i1 %narrow to i32
  %cbp_blk7 = getelementptr inbounds i8, ptr %currMB, i64 288
  %idxprom = zext nneg i32 %pl to i64
  %arrayidx = getelementptr inbounds [3 x i64], ptr %cbp_blk7, i64 0, i64 %idxprom
  %cmp8 = icmp eq i32 %pl, 0
  br i1 %cmp8, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %3 = load ptr, ptr %p_Vid1, align 8
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %3, i64 849280
  %4 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp10.not = icmp eq i32 %4, 0
  br i1 %cmp10.not, label %if.else, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %cond22 = select i1 %narrow, i32 1, i32 5
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 %cond22, ptr %context, align 8
  br label %if.end51

if.else:                                          ; preds = %lor.lhs.false
  %cmp23 = icmp eq i32 %pl, 1
  %context37 = getelementptr inbounds i8, ptr %currSE, i64 24
  br i1 %cmp23, label %if.then25, label %if.else38

if.then25:                                        ; preds = %if.else
  %cond36 = select i1 %narrow, i32 11, i32 15
  store i32 %cond36, ptr %context37, align 8
  br label %if.end51

if.else38:                                        ; preds = %if.else
  %cond49 = select i1 %narrow, i32 17, i32 21
  store i32 %cond49, ptr %context37, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then25, %if.else38, %if.then
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %5 = load i32, ptr %is_lossless, align 4
  %cmp52 = icmp eq i32 %5, 0
  br i1 %cmp52, label %for.cond.preheader, label %for.cond201.preheader.preheader

for.cond201.preheader.preheader:                  ; preds = %if.end51
  %and209 = and i32 %cbp, 1
  %tobool210.not = icmp eq i32 %and209, 0
  br i1 %tobool210.not, label %for.inc213, label %if.then211

for.cond.preheader:                               ; preds = %if.end51
  %cof57 = getelementptr inbounds i8, ptr %0, i64 1272
  switch i16 %.fr, label %for.body [
    i16 14, label %for.body.us.preheader
    i16 10, label %for.body.us.preheader
  ]

for.body.us.preheader:                            ; preds = %for.cond.preheader, %for.cond.preheader
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.end192.split.us.us
  %cmp55.us = phi i1 [ false, %for.end192.split.us.us ], [ true, %for.body.us.preheader ]
  %indvars.iv404 = phi i64 [ 8, %for.end192.split.us.us ], [ 0, %for.body.us.preheader ]
  %6 = load ptr, ptr %cof57, align 8
  %arrayidx59.us = getelementptr inbounds ptr, ptr %6, i64 %idxprom
  %7 = load ptr, ptr %arrayidx59.us, align 8
  %arrayidx61.us = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv404
  %8 = lshr exact i64 %indvars.iv404, 2
  %9 = trunc nuw nsw i64 %indvars.iv404 to i32
  br label %for.body65.us.us

for.body65.us.us:                                 ; preds = %for.inc190.us.us, %for.body.us
  %cmp63.us.us = phi i1 [ false, %for.inc190.us.us ], [ true, %for.body.us ]
  %indvars.iv399 = phi i64 [ 8, %for.inc190.us.us ], [ 0, %for.body.us ]
  %10 = lshr exact i64 %indvars.iv399, 3
  %11 = or disjoint i64 %10, %8
  %12 = trunc nuw nsw i64 %11 to i32
  %shl.us.us = shl nuw nsw i32 1, %12
  %and.us.us = and i32 %shl.us.us, %cbp
  %tobool.not.us.us = icmp eq i32 %and.us.us, 0
  br i1 %tobool.not.us.us, label %for.inc190.us.us, label %if.then67.us.us

if.then67.us.us:                                  ; preds = %for.body65.us.us
  %13 = trunc nuw nsw i64 %indvars.iv399 to i32
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %9, i32 noundef %13, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.body128.us.us

for.body128.us.us:                                ; preds = %for.end184.us.us, %if.then67.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end184.us.us ], [ 0, %if.then67.us.us ]
  %arrayidx131.us.us = getelementptr inbounds ptr, ptr %arrayidx61.us, i64 %indvars.iv
  %14 = load ptr, ptr %arrayidx131.us.us, align 8
  %arrayidx133.us.us = getelementptr inbounds i32, ptr %14, i64 %indvars.iv399
  %and135.us.us452 = and i64 %indvars.iv, 3
  %cmp140.not.us.us = icmp eq i64 %and135.us.us452, 0
  %idxprom144.us.us = and i64 %indvars.iv, 3
  %arrayidx145.us.us = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom144.us.us
  %arrayidx156.us.us = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom144.us.us, i64 1
  %arrayidx166.us.us = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom144.us.us, i64 2
  %arrayidx176.us.us = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom144.us.us, i64 3
  br i1 %cmp140.not.us.us, label %for.body139.us.us.us.preheader, label %for.body139.us358.us.preheader

for.body139.us358.us.preheader:                   ; preds = %for.body128.us.us
  %15 = load i32, ptr %arrayidx133.us.us, align 4
  %tobool142.not.us.us = icmp eq i32 %15, 0
  br i1 %tobool142.not.us.us, label %if.end150.us.us, label %if.then143.us.us

for.body139.us.us.us.preheader:                   ; preds = %for.body128.us.us
  %incdec.ptr151.us.us.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 4
  %16 = load i32, ptr %incdec.ptr151.us.us.us, align 4
  %tobool152.not.us.us.us = icmp eq i32 %16, 0
  br i1 %tobool152.not.us.us.us, label %if.end160.us.us.us, label %if.then153.us.us.us

if.then143.us.us:                                 ; preds = %for.body139.us358.us.preheader
  %17 = load i32, ptr %arrayidx145.us.us, align 4
  %mul147.us.us = mul nsw i32 %17, %15
  %shl148.us.us = shl i32 %mul147.us.us, %qp_per
  %add.i338.us.us = add nsw i32 %shl148.us.us, 8
  %shr.i339.us.us = ashr i32 %add.i338.us.us, 4
  store i32 %shr.i339.us.us, ptr %arrayidx133.us.us, align 4
  br label %if.end150.us.us

if.end150.us.us:                                  ; preds = %if.then143.us.us, %for.body139.us358.us.preheader
  %incdec.ptr151.us361.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 4
  %18 = load i32, ptr %incdec.ptr151.us361.us, align 4
  %tobool152.not.us362.us = icmp eq i32 %18, 0
  br i1 %tobool152.not.us362.us, label %if.end160.us368.us, label %if.then153.us363.us

if.then153.us363.us:                              ; preds = %if.end150.us.us
  %19 = load i32, ptr %arrayidx156.us.us, align 4
  %mul157.us364.us = mul nsw i32 %19, %18
  %shl158.us365.us = shl i32 %mul157.us364.us, %qp_per
  %add.i340.us366.us = add nsw i32 %shl158.us365.us, 8
  %shr.i341.us367.us = ashr i32 %add.i340.us366.us, 4
  store i32 %shr.i341.us367.us, ptr %incdec.ptr151.us361.us, align 4
  br label %if.end160.us368.us

if.end160.us368.us:                               ; preds = %if.then153.us363.us, %if.end150.us.us
  %incdec.ptr161.us369.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 8
  %20 = load i32, ptr %incdec.ptr161.us369.us, align 4
  %tobool162.not.us370.us = icmp eq i32 %20, 0
  br i1 %tobool162.not.us370.us, label %if.end170.us376.us, label %if.then163.us371.us

if.then163.us371.us:                              ; preds = %if.end160.us368.us
  %21 = load i32, ptr %arrayidx166.us.us, align 4
  %mul167.us372.us = mul nsw i32 %21, %20
  %shl168.us373.us = shl i32 %mul167.us372.us, %qp_per
  %add.i342.us374.us = add nsw i32 %shl168.us373.us, 8
  %shr.i343.us375.us = ashr i32 %add.i342.us374.us, 4
  store i32 %shr.i343.us375.us, ptr %incdec.ptr161.us369.us, align 4
  br label %if.end170.us376.us

if.end170.us376.us:                               ; preds = %if.then163.us371.us, %if.end160.us368.us
  %incdec.ptr171.us377.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 12
  %22 = load i32, ptr %incdec.ptr171.us377.us, align 4
  %tobool172.not.us378.us = icmp eq i32 %22, 0
  br i1 %tobool172.not.us378.us, label %if.end180.us384.us, label %if.then173.us379.us

if.then173.us379.us:                              ; preds = %if.end170.us376.us
  %23 = load i32, ptr %arrayidx176.us.us, align 4
  %mul177.us380.us = mul nsw i32 %23, %22
  %shl178.us381.us = shl i32 %mul177.us380.us, %qp_per
  %add.i344.us382.us = add nsw i32 %shl178.us381.us, 8
  %shr.i345.us383.us = ashr i32 %add.i344.us382.us, 4
  store i32 %shr.i345.us383.us, ptr %incdec.ptr171.us377.us, align 4
  br label %if.end180.us384.us

if.end180.us384.us:                               ; preds = %if.then173.us379.us, %if.end170.us376.us
  %incdec.ptr181.us385.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 16
  %24 = load i32, ptr %incdec.ptr181.us385.us, align 4
  %tobool142.not.us.us.1 = icmp eq i32 %24, 0
  br i1 %tobool142.not.us.us.1, label %if.end150.us.us.1, label %if.then143.us.us.1

if.then143.us.us.1:                               ; preds = %if.end180.us384.us
  %25 = load i32, ptr %arrayidx145.us.us, align 4
  %mul147.us.us.1 = mul nsw i32 %25, %24
  %shl148.us.us.1 = shl i32 %mul147.us.us.1, %qp_per
  %add.i338.us.us.1 = add nsw i32 %shl148.us.us.1, 8
  %shr.i339.us.us.1 = ashr i32 %add.i338.us.us.1, 4
  store i32 %shr.i339.us.us.1, ptr %incdec.ptr181.us385.us, align 4
  br label %if.end150.us.us.1

if.end150.us.us.1:                                ; preds = %if.then143.us.us.1, %if.end180.us384.us
  %incdec.ptr151.us361.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 20
  %26 = load i32, ptr %incdec.ptr151.us361.us.1, align 4
  %tobool152.not.us362.us.1 = icmp eq i32 %26, 0
  br i1 %tobool152.not.us362.us.1, label %if.end160.us368.us.1, label %if.then153.us363.us.1

if.then153.us363.us.1:                            ; preds = %if.end150.us.us.1
  %27 = load i32, ptr %arrayidx156.us.us, align 4
  %mul157.us364.us.1 = mul nsw i32 %27, %26
  %shl158.us365.us.1 = shl i32 %mul157.us364.us.1, %qp_per
  %add.i340.us366.us.1 = add nsw i32 %shl158.us365.us.1, 8
  %shr.i341.us367.us.1 = ashr i32 %add.i340.us366.us.1, 4
  store i32 %shr.i341.us367.us.1, ptr %incdec.ptr151.us361.us.1, align 4
  br label %if.end160.us368.us.1

if.end160.us368.us.1:                             ; preds = %if.then153.us363.us.1, %if.end150.us.us.1
  %incdec.ptr161.us369.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 24
  %28 = load i32, ptr %incdec.ptr161.us369.us.1, align 4
  %tobool162.not.us370.us.1 = icmp eq i32 %28, 0
  br i1 %tobool162.not.us370.us.1, label %if.end170.us376.us.1, label %if.then163.us371.us.1

if.then163.us371.us.1:                            ; preds = %if.end160.us368.us.1
  %29 = load i32, ptr %arrayidx166.us.us, align 4
  %mul167.us372.us.1 = mul nsw i32 %29, %28
  %shl168.us373.us.1 = shl i32 %mul167.us372.us.1, %qp_per
  %add.i342.us374.us.1 = add nsw i32 %shl168.us373.us.1, 8
  %shr.i343.us375.us.1 = ashr i32 %add.i342.us374.us.1, 4
  store i32 %shr.i343.us375.us.1, ptr %incdec.ptr161.us369.us.1, align 4
  br label %if.end170.us376.us.1

if.end170.us376.us.1:                             ; preds = %if.then163.us371.us.1, %if.end160.us368.us.1
  %incdec.ptr171.us377.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 28
  %30 = load i32, ptr %incdec.ptr171.us377.us.1, align 4
  %tobool172.not.us378.us.1 = icmp eq i32 %30, 0
  br i1 %tobool172.not.us378.us.1, label %for.end184.us.us, label %for.end184.us.us.sink.split

for.inc190.us.us:                                 ; preds = %for.end184.us.us, %for.body65.us.us
  br i1 %cmp63.us.us, label %for.body65.us.us, label %for.end192.split.us.us

for.end184.us.us.sink.split:                      ; preds = %if.end170.us376.us.1, %if.end170.us.us.us.1
  %.sink454 = phi i32 [ %41, %if.end170.us.us.us.1 ], [ %30, %if.end170.us376.us.1 ]
  %incdec.ptr171.us.us.us.1.sink = phi ptr [ %incdec.ptr171.us.us.us.1, %if.end170.us.us.us.1 ], [ %incdec.ptr171.us377.us.1, %if.end170.us376.us.1 ]
  %31 = load i32, ptr %arrayidx176.us.us, align 4
  %mul177.us.us.us.1 = mul nsw i32 %31, %.sink454
  %shl178.us.us.us.1 = shl i32 %mul177.us.us.us.1, %qp_per
  %add.i344.us.us.us.1 = add nsw i32 %shl178.us.us.us.1, 8
  %shr.i345.us.us.us.1 = ashr i32 %add.i344.us.us.us.1, 4
  store i32 %shr.i345.us.us.us.1, ptr %incdec.ptr171.us.us.us.1.sink, align 4
  br label %for.end184.us.us

for.end184.us.us:                                 ; preds = %for.end184.us.us.sink.split, %if.end170.us.us.us.1, %if.end170.us376.us.1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond.not, label %for.inc190.us.us, label %for.body128.us.us

if.then153.us.us.us:                              ; preds = %for.body139.us.us.us.preheader
  %32 = load i32, ptr %arrayidx156.us.us, align 4
  %mul157.us.us.us = mul nsw i32 %32, %16
  %shl158.us.us.us = shl i32 %mul157.us.us.us, %qp_per
  %add.i340.us.us.us = add nsw i32 %shl158.us.us.us, 8
  %shr.i341.us.us.us = ashr i32 %add.i340.us.us.us, 4
  store i32 %shr.i341.us.us.us, ptr %incdec.ptr151.us.us.us, align 4
  br label %if.end160.us.us.us

if.end160.us.us.us:                               ; preds = %if.then153.us.us.us, %for.body139.us.us.us.preheader
  %incdec.ptr161.us.us.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 8
  %33 = load i32, ptr %incdec.ptr161.us.us.us, align 4
  %tobool162.not.us.us.us = icmp eq i32 %33, 0
  br i1 %tobool162.not.us.us.us, label %if.end170.us.us.us, label %if.then163.us.us.us

if.then163.us.us.us:                              ; preds = %if.end160.us.us.us
  %34 = load i32, ptr %arrayidx166.us.us, align 4
  %mul167.us.us.us = mul nsw i32 %34, %33
  %shl168.us.us.us = shl i32 %mul167.us.us.us, %qp_per
  %add.i342.us.us.us = add nsw i32 %shl168.us.us.us, 8
  %shr.i343.us.us.us = ashr i32 %add.i342.us.us.us, 4
  store i32 %shr.i343.us.us.us, ptr %incdec.ptr161.us.us.us, align 4
  br label %if.end170.us.us.us

if.end170.us.us.us:                               ; preds = %if.then163.us.us.us, %if.end160.us.us.us
  %incdec.ptr171.us.us.us = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 12
  %35 = load i32, ptr %incdec.ptr171.us.us.us, align 4
  %tobool172.not.us.us.us = icmp eq i32 %35, 0
  br i1 %tobool172.not.us.us.us, label %if.end180.us.us.us, label %if.then173.us.us.us

if.then173.us.us.us:                              ; preds = %if.end170.us.us.us
  %36 = load i32, ptr %arrayidx176.us.us, align 4
  %mul177.us.us.us = mul nsw i32 %36, %35
  %shl178.us.us.us = shl i32 %mul177.us.us.us, %qp_per
  %add.i344.us.us.us = add nsw i32 %shl178.us.us.us, 8
  %shr.i345.us.us.us = ashr i32 %add.i344.us.us.us, 4
  store i32 %shr.i345.us.us.us, ptr %incdec.ptr171.us.us.us, align 4
  br label %if.end180.us.us.us

if.end180.us.us.us:                               ; preds = %if.then173.us.us.us, %if.end170.us.us.us
  %incdec.ptr151.us.us.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 20
  %37 = load i32, ptr %incdec.ptr151.us.us.us.1, align 4
  %tobool152.not.us.us.us.1 = icmp eq i32 %37, 0
  br i1 %tobool152.not.us.us.us.1, label %if.end160.us.us.us.1, label %if.then153.us.us.us.1

if.then153.us.us.us.1:                            ; preds = %if.end180.us.us.us
  %38 = load i32, ptr %arrayidx156.us.us, align 4
  %mul157.us.us.us.1 = mul nsw i32 %38, %37
  %shl158.us.us.us.1 = shl i32 %mul157.us.us.us.1, %qp_per
  %add.i340.us.us.us.1 = add nsw i32 %shl158.us.us.us.1, 8
  %shr.i341.us.us.us.1 = ashr i32 %add.i340.us.us.us.1, 4
  store i32 %shr.i341.us.us.us.1, ptr %incdec.ptr151.us.us.us.1, align 4
  br label %if.end160.us.us.us.1

if.end160.us.us.us.1:                             ; preds = %if.then153.us.us.us.1, %if.end180.us.us.us
  %incdec.ptr161.us.us.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 24
  %39 = load i32, ptr %incdec.ptr161.us.us.us.1, align 4
  %tobool162.not.us.us.us.1 = icmp eq i32 %39, 0
  br i1 %tobool162.not.us.us.us.1, label %if.end170.us.us.us.1, label %if.then163.us.us.us.1

if.then163.us.us.us.1:                            ; preds = %if.end160.us.us.us.1
  %40 = load i32, ptr %arrayidx166.us.us, align 4
  %mul167.us.us.us.1 = mul nsw i32 %40, %39
  %shl168.us.us.us.1 = shl i32 %mul167.us.us.us.1, %qp_per
  %add.i342.us.us.us.1 = add nsw i32 %shl168.us.us.us.1, 8
  %shr.i343.us.us.us.1 = ashr i32 %add.i342.us.us.us.1, 4
  store i32 %shr.i343.us.us.us.1, ptr %incdec.ptr161.us.us.us.1, align 4
  br label %if.end170.us.us.us.1

if.end170.us.us.us.1:                             ; preds = %if.then163.us.us.us.1, %if.end160.us.us.us.1
  %incdec.ptr171.us.us.us.1 = getelementptr inbounds i8, ptr %arrayidx133.us.us, i64 28
  %41 = load i32, ptr %incdec.ptr171.us.us.us.1, align 4
  %tobool172.not.us.us.us.1 = icmp eq i32 %41, 0
  br i1 %tobool172.not.us.us.us.1, label %for.end184.us.us, label %for.end184.us.us.sink.split

for.end192.split.us.us:                           ; preds = %for.inc190.us.us
  br i1 %cmp55.us, label %for.body.us, label %if.end219

for.body:                                         ; preds = %for.cond.preheader, %for.inc190.1
  %cmp55 = phi i1 [ false, %for.inc190.1 ], [ true, %for.cond.preheader ]
  %indvars.iv448 = phi i64 [ 8, %for.inc190.1 ], [ 0, %for.cond.preheader ]
  %42 = load ptr, ptr %cof57, align 8
  %arrayidx59 = getelementptr inbounds ptr, ptr %42, i64 %idxprom
  %43 = load ptr, ptr %arrayidx59, align 8
  %arrayidx61 = getelementptr inbounds ptr, ptr %43, i64 %indvars.iv448
  %44 = lshr exact i64 %indvars.iv448, 2
  %45 = trunc nuw nsw i64 %44 to i32
  %shl = shl nuw nsw i32 1, %45
  %and = and i32 %shl, %cbp
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.inc190, label %if.then67

if.then67:                                        ; preds = %for.body
  %46 = trunc nuw nsw i64 %indvars.iv448 to i32
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %46, i32 noundef 0, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.body74

for.body74:                                       ; preds = %if.then67, %if.end119.1
  %indvars.iv408 = phi i64 [ 0, %if.then67 ], [ %indvars.iv.next409, %if.end119.1 ]
  %arrayidx76 = getelementptr inbounds ptr, ptr %arrayidx61, i64 %indvars.iv408
  %47 = load ptr, ptr %arrayidx76, align 8
  %and79 = and i64 %indvars.iv408, 3
  %arrayidx87 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79
  %arrayidx95 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79, i64 1
  %arrayidx105 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79, i64 2
  %arrayidx115 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79, i64 3
  %48 = load i32, ptr %47, align 4
  %tobool84.not = icmp eq i32 %48, 0
  br i1 %tobool84.not, label %if.end90, label %if.then85

if.then85:                                        ; preds = %for.body74
  %49 = load i32, ptr %arrayidx87, align 4
  %mul = mul nsw i32 %49, %48
  %shl89 = shl i32 %mul, %qp_per
  %add.i = add nsw i32 %shl89, 8
  %shr.i = ashr i32 %add.i, 4
  store i32 %shr.i, ptr %47, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then85, %for.body74
  %incdec.ptr = getelementptr inbounds i8, ptr %47, i64 4
  %50 = load i32, ptr %incdec.ptr, align 4
  %tobool91.not = icmp eq i32 %50, 0
  br i1 %tobool91.not, label %if.end99, label %if.then92

if.then92:                                        ; preds = %if.end90
  %51 = load i32, ptr %arrayidx95, align 4
  %mul96 = mul nsw i32 %51, %50
  %shl97 = shl i32 %mul96, %qp_per
  %add.i332 = add nsw i32 %shl97, 8
  %shr.i333 = ashr i32 %add.i332, 4
  store i32 %shr.i333, ptr %incdec.ptr, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.then92, %if.end90
  %incdec.ptr100 = getelementptr inbounds i8, ptr %47, i64 8
  %52 = load i32, ptr %incdec.ptr100, align 4
  %tobool101.not = icmp eq i32 %52, 0
  br i1 %tobool101.not, label %if.end109, label %if.then102

if.then102:                                       ; preds = %if.end99
  %53 = load i32, ptr %arrayidx105, align 4
  %mul106 = mul nsw i32 %53, %52
  %shl107 = shl i32 %mul106, %qp_per
  %add.i334 = add nsw i32 %shl107, 8
  %shr.i335 = ashr i32 %add.i334, 4
  store i32 %shr.i335, ptr %incdec.ptr100, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.then102, %if.end99
  %incdec.ptr110 = getelementptr inbounds i8, ptr %47, i64 12
  %54 = load i32, ptr %incdec.ptr110, align 4
  %tobool111.not = icmp eq i32 %54, 0
  br i1 %tobool111.not, label %if.end119, label %if.then112

if.then112:                                       ; preds = %if.end109
  %55 = load i32, ptr %arrayidx115, align 4
  %mul116 = mul nsw i32 %55, %54
  %shl117 = shl i32 %mul116, %qp_per
  %add.i336 = add nsw i32 %shl117, 8
  %shr.i337 = ashr i32 %add.i336, 4
  store i32 %shr.i337, ptr %incdec.ptr110, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.then112, %if.end109
  %incdec.ptr120 = getelementptr inbounds i8, ptr %47, i64 16
  %56 = load i32, ptr %incdec.ptr120, align 4
  %tobool84.not.1 = icmp eq i32 %56, 0
  br i1 %tobool84.not.1, label %if.end90.1, label %if.then85.1

if.then85.1:                                      ; preds = %if.end119
  %57 = load i32, ptr %arrayidx87, align 4
  %mul.1 = mul nsw i32 %57, %56
  %shl89.1 = shl i32 %mul.1, %qp_per
  %add.i.1 = add nsw i32 %shl89.1, 8
  %shr.i.1 = ashr i32 %add.i.1, 4
  store i32 %shr.i.1, ptr %incdec.ptr120, align 4
  br label %if.end90.1

if.end90.1:                                       ; preds = %if.then85.1, %if.end119
  %incdec.ptr.1 = getelementptr inbounds i8, ptr %47, i64 20
  %58 = load i32, ptr %incdec.ptr.1, align 4
  %tobool91.not.1 = icmp eq i32 %58, 0
  br i1 %tobool91.not.1, label %if.end99.1, label %if.then92.1

if.then92.1:                                      ; preds = %if.end90.1
  %59 = load i32, ptr %arrayidx95, align 4
  %mul96.1 = mul nsw i32 %59, %58
  %shl97.1 = shl i32 %mul96.1, %qp_per
  %add.i332.1 = add nsw i32 %shl97.1, 8
  %shr.i333.1 = ashr i32 %add.i332.1, 4
  store i32 %shr.i333.1, ptr %incdec.ptr.1, align 4
  br label %if.end99.1

if.end99.1:                                       ; preds = %if.then92.1, %if.end90.1
  %incdec.ptr100.1 = getelementptr inbounds i8, ptr %47, i64 24
  %60 = load i32, ptr %incdec.ptr100.1, align 4
  %tobool101.not.1 = icmp eq i32 %60, 0
  br i1 %tobool101.not.1, label %if.end109.1, label %if.then102.1

if.then102.1:                                     ; preds = %if.end99.1
  %61 = load i32, ptr %arrayidx105, align 4
  %mul106.1 = mul nsw i32 %61, %60
  %shl107.1 = shl i32 %mul106.1, %qp_per
  %add.i334.1 = add nsw i32 %shl107.1, 8
  %shr.i335.1 = ashr i32 %add.i334.1, 4
  store i32 %shr.i335.1, ptr %incdec.ptr100.1, align 4
  br label %if.end109.1

if.end109.1:                                      ; preds = %if.then102.1, %if.end99.1
  %incdec.ptr110.1 = getelementptr inbounds i8, ptr %47, i64 28
  %62 = load i32, ptr %incdec.ptr110.1, align 4
  %tobool111.not.1 = icmp eq i32 %62, 0
  br i1 %tobool111.not.1, label %if.end119.1, label %if.then112.1

if.then112.1:                                     ; preds = %if.end109.1
  %63 = load i32, ptr %arrayidx115, align 4
  %mul116.1 = mul nsw i32 %63, %62
  %shl117.1 = shl i32 %mul116.1, %qp_per
  %add.i336.1 = add nsw i32 %shl117.1, 8
  %shr.i337.1 = ashr i32 %add.i336.1, 4
  store i32 %shr.i337.1, ptr %incdec.ptr110.1, align 4
  br label %if.end119.1

if.end119.1:                                      ; preds = %if.then112.1, %if.end109.1
  %indvars.iv.next409 = add nuw nsw i64 %indvars.iv408, 1
  %exitcond411.not = icmp eq i64 %indvars.iv.next409, 8
  br i1 %exitcond411.not, label %for.inc190, label %for.body74

for.inc190:                                       ; preds = %if.end119.1, %for.body
  %64 = trunc nuw nsw i64 %44 to i32
  %shl.1 = shl nuw nsw i32 2, %64
  %and.1 = and i32 %shl.1, %cbp
  %tobool.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool.not.1, label %for.inc190.1, label %if.then67.1

if.then67.1:                                      ; preds = %for.inc190
  %65 = trunc nuw nsw i64 %indvars.iv448 to i32
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %65, i32 noundef 8, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.body74.1

for.body74.1:                                     ; preds = %if.end119.1.1, %if.then67.1
  %indvars.iv408.1 = phi i64 [ 0, %if.then67.1 ], [ %indvars.iv.next409.1, %if.end119.1.1 ]
  %arrayidx76.1 = getelementptr inbounds ptr, ptr %arrayidx61, i64 %indvars.iv408.1
  %66 = load ptr, ptr %arrayidx76.1, align 8
  %arrayidx78.1 = getelementptr inbounds i8, ptr %66, i64 32
  %and79.1 = and i64 %indvars.iv408.1, 3
  %arrayidx87.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79.1
  %arrayidx95.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79.1, i64 1
  %arrayidx105.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79.1, i64 2
  %arrayidx115.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %and79.1, i64 3
  %67 = load i32, ptr %arrayidx78.1, align 4
  %tobool84.not.1417 = icmp eq i32 %67, 0
  br i1 %tobool84.not.1417, label %if.end90.1425, label %if.then85.1422

if.then85.1422:                                   ; preds = %for.body74.1
  %68 = load i32, ptr %arrayidx87.1, align 4
  %mul.1418 = mul nsw i32 %68, %67
  %shl89.1419 = shl i32 %mul.1418, %qp_per
  %add.i.1420 = add nsw i32 %shl89.1419, 8
  %shr.i.1421 = ashr i32 %add.i.1420, 4
  store i32 %shr.i.1421, ptr %arrayidx78.1, align 4
  br label %if.end90.1425

if.end90.1425:                                    ; preds = %if.then85.1422, %for.body74.1
  %incdec.ptr.1423 = getelementptr inbounds i8, ptr %66, i64 36
  %69 = load i32, ptr %incdec.ptr.1423, align 4
  %tobool91.not.1424 = icmp eq i32 %69, 0
  br i1 %tobool91.not.1424, label %if.end99.1433, label %if.then92.1430

if.then92.1430:                                   ; preds = %if.end90.1425
  %70 = load i32, ptr %arrayidx95.1, align 4
  %mul96.1426 = mul nsw i32 %70, %69
  %shl97.1427 = shl i32 %mul96.1426, %qp_per
  %add.i332.1428 = add nsw i32 %shl97.1427, 8
  %shr.i333.1429 = ashr i32 %add.i332.1428, 4
  store i32 %shr.i333.1429, ptr %incdec.ptr.1423, align 4
  br label %if.end99.1433

if.end99.1433:                                    ; preds = %if.then92.1430, %if.end90.1425
  %incdec.ptr100.1431 = getelementptr inbounds i8, ptr %66, i64 40
  %71 = load i32, ptr %incdec.ptr100.1431, align 4
  %tobool101.not.1432 = icmp eq i32 %71, 0
  br i1 %tobool101.not.1432, label %if.end109.1441, label %if.then102.1438

if.then102.1438:                                  ; preds = %if.end99.1433
  %72 = load i32, ptr %arrayidx105.1, align 4
  %mul106.1434 = mul nsw i32 %72, %71
  %shl107.1435 = shl i32 %mul106.1434, %qp_per
  %add.i334.1436 = add nsw i32 %shl107.1435, 8
  %shr.i335.1437 = ashr i32 %add.i334.1436, 4
  store i32 %shr.i335.1437, ptr %incdec.ptr100.1431, align 4
  br label %if.end109.1441

if.end109.1441:                                   ; preds = %if.then102.1438, %if.end99.1433
  %incdec.ptr110.1439 = getelementptr inbounds i8, ptr %66, i64 44
  %73 = load i32, ptr %incdec.ptr110.1439, align 4
  %tobool111.not.1440 = icmp eq i32 %73, 0
  br i1 %tobool111.not.1440, label %if.end119.1447, label %if.then112.1446

if.then112.1446:                                  ; preds = %if.end109.1441
  %74 = load i32, ptr %arrayidx115.1, align 4
  %mul116.1442 = mul nsw i32 %74, %73
  %shl117.1443 = shl i32 %mul116.1442, %qp_per
  %add.i336.1444 = add nsw i32 %shl117.1443, 8
  %shr.i337.1445 = ashr i32 %add.i336.1444, 4
  store i32 %shr.i337.1445, ptr %incdec.ptr110.1439, align 4
  br label %if.end119.1447

if.end119.1447:                                   ; preds = %if.then112.1446, %if.end109.1441
  %incdec.ptr120.1 = getelementptr inbounds i8, ptr %66, i64 48
  %75 = load i32, ptr %incdec.ptr120.1, align 4
  %tobool84.not.1.1 = icmp eq i32 %75, 0
  br i1 %tobool84.not.1.1, label %if.end90.1.1, label %if.then85.1.1

if.then85.1.1:                                    ; preds = %if.end119.1447
  %76 = load i32, ptr %arrayidx87.1, align 4
  %mul.1.1 = mul nsw i32 %76, %75
  %shl89.1.1 = shl i32 %mul.1.1, %qp_per
  %add.i.1.1 = add nsw i32 %shl89.1.1, 8
  %shr.i.1.1 = ashr i32 %add.i.1.1, 4
  store i32 %shr.i.1.1, ptr %incdec.ptr120.1, align 4
  br label %if.end90.1.1

if.end90.1.1:                                     ; preds = %if.then85.1.1, %if.end119.1447
  %incdec.ptr.1.1 = getelementptr inbounds i8, ptr %66, i64 52
  %77 = load i32, ptr %incdec.ptr.1.1, align 4
  %tobool91.not.1.1 = icmp eq i32 %77, 0
  br i1 %tobool91.not.1.1, label %if.end99.1.1, label %if.then92.1.1

if.then92.1.1:                                    ; preds = %if.end90.1.1
  %78 = load i32, ptr %arrayidx95.1, align 4
  %mul96.1.1 = mul nsw i32 %78, %77
  %shl97.1.1 = shl i32 %mul96.1.1, %qp_per
  %add.i332.1.1 = add nsw i32 %shl97.1.1, 8
  %shr.i333.1.1 = ashr i32 %add.i332.1.1, 4
  store i32 %shr.i333.1.1, ptr %incdec.ptr.1.1, align 4
  br label %if.end99.1.1

if.end99.1.1:                                     ; preds = %if.then92.1.1, %if.end90.1.1
  %incdec.ptr100.1.1 = getelementptr inbounds i8, ptr %66, i64 56
  %79 = load i32, ptr %incdec.ptr100.1.1, align 4
  %tobool101.not.1.1 = icmp eq i32 %79, 0
  br i1 %tobool101.not.1.1, label %if.end109.1.1, label %if.then102.1.1

if.then102.1.1:                                   ; preds = %if.end99.1.1
  %80 = load i32, ptr %arrayidx105.1, align 4
  %mul106.1.1 = mul nsw i32 %80, %79
  %shl107.1.1 = shl i32 %mul106.1.1, %qp_per
  %add.i334.1.1 = add nsw i32 %shl107.1.1, 8
  %shr.i335.1.1 = ashr i32 %add.i334.1.1, 4
  store i32 %shr.i335.1.1, ptr %incdec.ptr100.1.1, align 4
  br label %if.end109.1.1

if.end109.1.1:                                    ; preds = %if.then102.1.1, %if.end99.1.1
  %incdec.ptr110.1.1 = getelementptr inbounds i8, ptr %66, i64 60
  %81 = load i32, ptr %incdec.ptr110.1.1, align 4
  %tobool111.not.1.1 = icmp eq i32 %81, 0
  br i1 %tobool111.not.1.1, label %if.end119.1.1, label %if.then112.1.1

if.then112.1.1:                                   ; preds = %if.end109.1.1
  %82 = load i32, ptr %arrayidx115.1, align 4
  %mul116.1.1 = mul nsw i32 %82, %81
  %shl117.1.1 = shl i32 %mul116.1.1, %qp_per
  %add.i336.1.1 = add nsw i32 %shl117.1.1, 8
  %shr.i337.1.1 = ashr i32 %add.i336.1.1, 4
  store i32 %shr.i337.1.1, ptr %incdec.ptr110.1.1, align 4
  br label %if.end119.1.1

if.end119.1.1:                                    ; preds = %if.then112.1.1, %if.end109.1.1
  %indvars.iv.next409.1 = add nuw nsw i64 %indvars.iv408.1, 1
  %exitcond411.1.not = icmp eq i64 %indvars.iv.next409.1, 8
  br i1 %exitcond411.1.not, label %for.inc190.1, label %for.body74.1

for.inc190.1:                                     ; preds = %if.end119.1.1, %for.inc190
  br i1 %cmp55, label %for.body, label %if.end219

if.then211:                                       ; preds = %for.cond201.preheader.preheader
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef %pl, i32 noundef 0, i32 noundef 0, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.inc213

for.inc213:                                       ; preds = %for.cond201.preheader.preheader, %if.then211
  %and209.1 = and i32 %cbp, 2
  %tobool210.not.1 = icmp eq i32 %and209.1, 0
  br i1 %tobool210.not.1, label %for.inc213.1, label %if.then211.1

if.then211.1:                                     ; preds = %for.inc213
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef %pl, i32 noundef 0, i32 noundef 8, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.inc213.1

for.inc213.1:                                     ; preds = %if.then211.1, %for.inc213
  %and209.1394 = and i32 %cbp, 4
  %tobool210.not.1395 = icmp eq i32 %and209.1394, 0
  br i1 %tobool210.not.1395, label %for.inc213.1397, label %if.then211.1396

if.then211.1396:                                  ; preds = %for.inc213.1
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef %pl, i32 noundef 8, i32 noundef 0, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %for.inc213.1397

for.inc213.1397:                                  ; preds = %if.then211.1396, %for.inc213.1
  %and209.1.1 = and i32 %cbp, 8
  %tobool210.not.1.1 = icmp eq i32 %and209.1.1, 0
  br i1 %tobool210.not.1.1, label %if.end219, label %if.then211.1.1

if.then211.1.1:                                   ; preds = %for.inc213.1397
  tail call fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, i32 noundef %pl, i32 noundef 8, i32 noundef 8, i32 noundef %cond, ptr noundef nonnull %arrayidx)
  br label %if.end219

if.end219:                                        ; preds = %for.end192.split.us.us, %for.inc190.1, %for.inc213.1397, %if.then211.1.1
  ret void
}

declare void @linfo_levrun_c2x2(i32 noundef, i32 noundef, ptr noundef, ptr noundef) #5

declare void @ihadamard2x2(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @read_dQuant_CABAC(ptr noundef, ptr noundef, ptr noundef) #5

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff8x8_CABAC(ptr noundef %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %b8) unnamed_addr #3 {
entry:
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  %0 = load i32, ptr %cbp, align 4
  %shl = shl nuw nsw i32 1, %b8
  %and = and i32 %0, %shl
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end121, label %if.then

if.then:                                          ; preds = %entry
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %1, i64 849280
  %2 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp.not = icmp eq i32 %2, 0
  %.pre = load ptr, ptr %currMB, align 8
  br i1 %cmp.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %if.then
  %colour_plane_id = getelementptr inbounds i8, ptr %.pre, i64 216
  %3 = load i32, ptr %colour_plane_id, align 8
  br label %cond.end

cond.end:                                         ; preds = %if.then, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ %pl, %if.then ]
  %dp_mode = getelementptr inbounds i8, ptr %.pre, i64 200
  %4 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %mul = shl i32 %b8, 2
  %and3 = and i32 %b8, 1
  %mul4 = shl nuw nsw i32 %and3, 1
  %sub = sub nsw i32 %mul, %mul4
  %sh_prom = zext nneg i32 %sub to i64
  %shl5 = shl i64 51, %sh_prom
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %idxprom6 = zext nneg i32 %pl to i64
  %arrayidx7 = getelementptr inbounds [3 x i64], ptr %cbp_blk, i64 0, i64 %idxprom6
  %structure = getelementptr inbounds i8, ptr %1, i64 848876
  %5 = load i32, ptr %structure, align 4
  %cmp8 = icmp eq i32 %5, 0
  br i1 %cmp8, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %6 = load i32, ptr %mb_field, align 8
  %tobool9.not = icmp eq i32 %6, 0
  %7 = select i1 %tobool9.not, ptr @SNGL_SCAN8x8, ptr @FIELD_SCAN8x8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %cond10 = phi ptr [ @FIELD_SCAN8x8, %cond.end ], [ %7, %land.rhs ]
  %qp_per_matrix = getelementptr inbounds i8, ptr %1, i64 856032
  %8 = load ptr, ptr %qp_per_matrix, align 8
  %qp_scaled = getelementptr inbounds i8, ptr %currMB, i64 80
  %idxprom11 = sext i32 %cond to i64
  %arrayidx12 = getelementptr inbounds [3 x i32], ptr %qp_scaled, i64 0, i64 %idxprom11
  %9 = load i32, ptr %arrayidx12, align 4
  %idxprom13 = sext i32 %9 to i64
  %arrayidx14 = getelementptr inbounds i32, ptr %8, i64 %idxprom13
  %10 = load i32, ptr %arrayidx14, align 4
  %qp_rem_matrix = getelementptr inbounds i8, ptr %1, i64 856040
  %11 = load ptr, ptr %qp_rem_matrix, align 8
  %arrayidx19 = getelementptr inbounds i32, ptr %11, i64 %idxprom13
  %12 = load i32, ptr %arrayidx19, align 4
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %13 = load i32, ptr %is_intra_block, align 8
  %cmp20 = icmp eq i32 %13, 1
  %InvLevelScale8x8_Intra = getelementptr inbounds i8, ptr %.pre, i64 3696
  %idxprom24 = sext i32 %12 to i64
  %arrayidx25 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Intra, i64 0, i64 %idxprom11, i64 %idxprom24
  %InvLevelScale8x8_Inter = getelementptr inbounds i8, ptr %.pre, i64 8304
  %arrayidx31 = getelementptr inbounds [3 x [6 x [8 x [8 x i32]]]], ptr %InvLevelScale8x8_Inter, i64 0, i64 %idxprom11, i64 %idxprom24
  %cond34 = select i1 %cmp20, ptr %arrayidx25, ptr %arrayidx31
  %shl36 = shl nuw nsw i32 %and3, 3
  %shl37 = and i32 %mul, -8
  %mb_rres = getelementptr inbounds i8, ptr %.pre, i64 1264
  %14 = load ptr, ptr %mb_rres, align 8
  %arrayidx39 = getelementptr inbounds ptr, ptr %14, i64 %idxprom6
  %15 = load ptr, ptr %arrayidx39, align 8
  %idxprom40 = zext nneg i32 %shl37 to i64
  %arrayidx41 = getelementptr inbounds ptr, ptr %15, i64 %idxprom40
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  store i32 %shl36, ptr %subblock_x, align 4
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  store i32 %shl37, ptr %subblock_y, align 8
  %cmp42 = icmp eq i32 %pl, 0
  br i1 %cmp42, label %if.then45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.end
  %16 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp44.not = icmp eq i32 %16, 0
  br i1 %cmp44.not, label %if.else, label %if.then45

if.then45:                                        ; preds = %lor.lhs.false, %land.end
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 2, ptr %context, align 8
  br label %if.end51

if.else:                                          ; preds = %lor.lhs.false
  %cmp46 = icmp eq i32 %pl, 1
  %context48 = getelementptr inbounds i8, ptr %currSE, i64 24
  br i1 %cmp46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.else
  store i32 12, ptr %context48, align 8
  br label %if.end51

if.else49:                                        ; preds = %if.else
  store i32 18, ptr %context48, align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then47, %if.else49, %if.then45
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  %17 = load i32, ptr %is_intra_block, align 8
  %cmp53 = icmp eq i32 %17, 1
  %cond54 = select i1 %cmp53, i32 7, i32 12
  store i32 %cond54, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %.pre, i64 312
  %18 = load ptr, ptr %partArr, align 8
  %idxprom56 = zext nneg i32 %cond54 to i64
  %arrayidx57 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom56
  %19 = load i8, ptr %arrayidx57, align 1
  %idxprom58 = zext i8 %19 to i64
  %arrayidx59 = getelementptr inbounds %struct.datapartition, ptr %18, i64 %idxprom58
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx59, i64 40
  %20 = load ptr, ptr %readSyntaxElement, align 8
  %call = tail call i32 %20(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx59) #14
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %21 = load i32, ptr %value1, align 4
  %cmp60.not = icmp eq i32 %21, 0
  br i1 %cmp60.not, label %if.end121, label %if.then61

if.then61:                                        ; preds = %if.end51
  %22 = load i64, ptr %arrayidx7, align 8
  %or = or i64 %22, %shl5
  store i64 %or, ptr %arrayidx7, align 8
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %23 = load i32, ptr %value2, align 8
  %mul62 = shl nsw i32 %23, 1
  %idx.ext = sext i32 %mul62 to i64
  %add.ptr = getelementptr inbounds i8, ptr %cond10, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %24 = load i8, ptr %add.ptr, align 1
  %conv = zext i8 %24 to i32
  %25 = load i8, ptr %incdec.ptr, align 1
  %idxprom65 = zext i8 %25 to i64
  %idxprom67 = zext i8 %24 to i64
  %arrayidx68 = getelementptr inbounds [8 x i32], ptr %cond34, i64 %idxprom65, i64 %idxprom67
  %26 = load i32, ptr %arrayidx68, align 4
  %mul69 = mul nsw i32 %26, %21
  %shl70 = shl i32 %mul69, %10
  %add.i = add nsw i32 %shl70, 32
  %shr.i = ashr i32 %add.i, 6
  %arrayidx73 = getelementptr inbounds ptr, ptr %arrayidx41, i64 %idxprom65
  %27 = load ptr, ptr %arrayidx73, align 8
  %add = add nuw nsw i32 %shl36, %conv
  %idxprom74 = zext nneg i32 %add to i64
  %arrayidx75 = getelementptr inbounds i32, ptr %27, i64 %idxprom74
  store i32 %shr.i, ptr %arrayidx75, align 4
  %28 = load i32, ptr %is_intra_block, align 8
  %cmp77 = icmp eq i32 %28, 1
  %cond79 = select i1 %cmp77, i32 9, i32 14
  store i32 %cond79, ptr %currSE, align 8
  %29 = load ptr, ptr %partArr, align 8
  %idxprom83 = zext nneg i32 %cond79 to i64
  %arrayidx84 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom83
  %30 = load i8, ptr %arrayidx84, align 1
  %idxprom85 = zext i8 %30 to i64
  %arrayidx86 = getelementptr inbounds %struct.datapartition, ptr %29, i64 %idxprom85
  %readSyntaxElement93 = getelementptr inbounds i8, ptr %arrayidx86, i64 40
  br label %for.body

for.body:                                         ; preds = %if.then61, %for.inc
  %k.0200 = phi i32 [ 1, %if.then61 ], [ %inc, %for.inc ]
  %add.ptr.pn = phi ptr [ %add.ptr, %if.then61 ], [ %add.ptr102, %for.inc ]
  %31 = load ptr, ptr %readSyntaxElement93, align 8
  %call94 = tail call i32 %31(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx86) #14
  %32 = load i32, ptr %value1, align 4
  %cmp96.not = icmp eq i32 %32, 0
  br i1 %cmp96.not, label %if.end121, label %for.inc

for.inc:                                          ; preds = %for.body
  %pos_scan8x8.0199 = getelementptr inbounds i8, ptr %add.ptr.pn, i64 2
  %33 = load i32, ptr %value2, align 8
  %mul100 = shl nsw i32 %33, 1
  %idx.ext101 = sext i32 %mul100 to i64
  %add.ptr102 = getelementptr inbounds i8, ptr %pos_scan8x8.0199, i64 %idx.ext101
  %incdec.ptr103 = getelementptr inbounds i8, ptr %add.ptr102, i64 1
  %34 = load i8, ptr %add.ptr102, align 1
  %conv104 = zext i8 %34 to i32
  %35 = load i8, ptr %incdec.ptr103, align 1
  %idxprom107 = zext i8 %35 to i64
  %idxprom109 = zext i8 %34 to i64
  %arrayidx110 = getelementptr inbounds [8 x i32], ptr %cond34, i64 %idxprom107, i64 %idxprom109
  %36 = load i32, ptr %arrayidx110, align 4
  %mul111 = mul nsw i32 %36, %32
  %shl112 = shl i32 %mul111, %10
  %add.i197 = add nsw i32 %shl112, 32
  %shr.i198 = ashr i32 %add.i197, 6
  %arrayidx115 = getelementptr inbounds ptr, ptr %arrayidx41, i64 %idxprom107
  %37 = load ptr, ptr %arrayidx115, align 8
  %add116 = add nuw nsw i32 %shl36, %conv104
  %idxprom117 = zext nneg i32 %add116 to i64
  %arrayidx118 = getelementptr inbounds i32, ptr %37, i64 %idxprom117
  store i32 %shr.i198, ptr %arrayidx118, align 4
  %inc = add nuw nsw i32 %k.0200, 1
  %cmp87 = icmp ult i32 %k.0200, 64
  br i1 %cmp87, label %for.body, label %if.end121

if.end121:                                        ; preds = %for.body, %for.inc, %if.end51, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff8x8_CABAC_lossless(ptr noundef %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %b8) unnamed_addr #3 {
entry:
  %cbp = getelementptr inbounds i8, ptr %currMB, i64 284
  %0 = load i32, ptr %cbp, align 4
  %shl = shl nuw nsw i32 1, %b8
  %and = and i32 %0, %shl
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end50, label %if.then

if.then:                                          ; preds = %entry
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %2 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %2, i64 200
  %3 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %mul = shl i32 %b8, 2
  %and2 = and i32 %b8, 1
  %mul3 = shl nuw nsw i32 %and2, 1
  %sub = sub nsw i32 %mul, %mul3
  %sh_prom = zext nneg i32 %sub to i64
  %shl4 = shl i64 51, %sh_prom
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %idxprom5 = zext nneg i32 %pl to i64
  %arrayidx6 = getelementptr inbounds [3 x i64], ptr %cbp_blk, i64 0, i64 %idxprom5
  %structure = getelementptr inbounds i8, ptr %1, i64 848876
  %4 = load i32, ptr %structure, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %5 = load i32, ptr %mb_field, align 8
  %tobool7.not = icmp eq i32 %5, 0
  %6 = select i1 %tobool7.not, ptr @SNGL_SCAN8x8, ptr @FIELD_SCAN8x8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %cond = phi ptr [ @FIELD_SCAN8x8, %if.then ], [ %6, %land.rhs ]
  %shl9 = shl nuw nsw i32 %and2, 3
  %shl10 = and i32 %mul, -8
  %mb_rres = getelementptr inbounds i8, ptr %2, i64 1264
  %7 = load ptr, ptr %mb_rres, align 8
  %arrayidx12 = getelementptr inbounds ptr, ptr %7, i64 %idxprom5
  %8 = load ptr, ptr %arrayidx12, align 8
  %idxprom13 = zext nneg i32 %shl10 to i64
  %arrayidx14 = getelementptr inbounds ptr, ptr %8, i64 %idxprom13
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  store i32 %shl9, ptr %subblock_x, align 4
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  store i32 %shl10, ptr %subblock_y, align 8
  %cmp15 = icmp eq i32 %pl, 0
  br i1 %cmp15, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.end
  %separate_colour_plane_flag = getelementptr inbounds i8, ptr %1, i64 849280
  %9 = load i32, ptr %separate_colour_plane_flag, align 8
  %cmp16.not = icmp eq i32 %9, 0
  br i1 %cmp16.not, label %if.else, label %if.then17

if.then17:                                        ; preds = %lor.lhs.false, %land.end
  %context = getelementptr inbounds i8, ptr %currSE, i64 24
  store i32 2, ptr %context, align 8
  br label %if.end23

if.else:                                          ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %pl, 1
  %context20 = getelementptr inbounds i8, ptr %currSE, i64 24
  br i1 %cmp18, label %if.then19, label %if.else21

if.then19:                                        ; preds = %if.else
  store i32 12, ptr %context20, align 8
  br label %if.end23

if.else21:                                        ; preds = %if.else
  store i32 18, ptr %context20, align 8
  br label %if.end23

if.end23:                                         ; preds = %if.then19, %if.else21, %if.then17
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %partArr = getelementptr inbounds i8, ptr %2, i64 312
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  %10 = load i32, ptr %is_intra_block, align 8
  %cmp28.peel = icmp eq i32 %10, 1
  %cond33.peel = select i1 %cmp28.peel, i32 7, i32 12
  store i32 %cond33.peel, ptr %currSE, align 8
  %11 = load ptr, ptr %partArr, align 8
  %idxprom35.peel = zext nneg i32 %cond33.peel to i64
  %arrayidx36.peel = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom35.peel
  %12 = load i8, ptr %arrayidx36.peel, align 1
  %idxprom37.peel = zext i8 %12 to i64
  %arrayidx38.peel = getelementptr inbounds %struct.datapartition, ptr %11, i64 %idxprom37.peel
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  %readSyntaxElement.peel = getelementptr inbounds i8, ptr %arrayidx38.peel, i64 40
  %13 = load ptr, ptr %readSyntaxElement.peel, align 8
  %call.peel = tail call i32 %13(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx38.peel) #14
  %14 = load i32, ptr %value1, align 4
  %cmp40.not.peel = icmp eq i32 %14, 0
  br i1 %cmp40.not.peel, label %if.end50, label %for.body.peel.next

for.body.peel.next:                               ; preds = %if.end23
  %15 = load i32, ptr %value2, align 8
  %mul42.peel = shl nsw i32 %15, 1
  %idx.ext.peel = sext i32 %mul42.peel to i64
  %add.ptr.peel = getelementptr inbounds i8, ptr %cond, i64 %idx.ext.peel
  %incdec.ptr.peel = getelementptr inbounds i8, ptr %add.ptr.peel, i64 1
  %16 = load i8, ptr %add.ptr.peel, align 1
  %conv.peel = zext i8 %16 to i32
  %17 = load i8, ptr %incdec.ptr.peel, align 1
  %18 = load i64, ptr %arrayidx6, align 8
  %or.peel = or i64 %18, %shl4
  store i64 %or.peel, ptr %arrayidx6, align 8
  %idxprom45.peel = zext i8 %17 to i64
  %arrayidx46.peel = getelementptr inbounds ptr, ptr %arrayidx14, i64 %idxprom45.peel
  %19 = load ptr, ptr %arrayidx46.peel, align 8
  %add.peel = add nuw nsw i32 %shl9, %conv.peel
  %idxprom47.peel = zext nneg i32 %add.peel to i64
  %arrayidx48.peel = getelementptr inbounds i32, ptr %19, i64 %idxprom47.peel
  store i32 %14, ptr %arrayidx48.peel, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.peel.next, %for.inc
  %add.ptr.peel.pn = phi ptr [ %add.ptr.peel, %for.body.peel.next ], [ %add.ptr, %for.inc ]
  %k.088 = phi i32 [ 1, %for.body.peel.next ], [ %inc, %for.inc ]
  %20 = load i32, ptr %is_intra_block, align 8
  %cmp28 = icmp eq i32 %20, 1
  %cond33 = select i1 %cmp28, i32 9, i32 14
  store i32 %cond33, ptr %currSE, align 8
  %21 = load ptr, ptr %partArr, align 8
  %idxprom35 = zext nneg i32 %cond33 to i64
  %arrayidx36 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom35
  %22 = load i8, ptr %arrayidx36, align 1
  %idxprom37 = zext i8 %22 to i64
  %arrayidx38 = getelementptr inbounds %struct.datapartition, ptr %21, i64 %idxprom37
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  %readSyntaxElement = getelementptr inbounds i8, ptr %arrayidx38, i64 40
  %23 = load ptr, ptr %readSyntaxElement, align 8
  %call = tail call i32 %23(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef %arrayidx38) #14
  %24 = load i32, ptr %value1, align 4
  %cmp40.not = icmp eq i32 %24, 0
  br i1 %cmp40.not, label %if.end50, label %for.inc

for.inc:                                          ; preds = %for.body
  %pos_scan8x8.089 = getelementptr inbounds i8, ptr %add.ptr.peel.pn, i64 2
  %25 = load i32, ptr %value2, align 8
  %mul42 = shl nsw i32 %25, 1
  %idx.ext = sext i32 %mul42 to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan8x8.089, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %26 = load i8, ptr %add.ptr, align 1
  %conv = zext i8 %26 to i32
  %27 = load i8, ptr %incdec.ptr, align 1
  %28 = load i64, ptr %arrayidx6, align 8
  %or = or i64 %28, %shl4
  store i64 %or, ptr %arrayidx6, align 8
  %idxprom45 = zext i8 %27 to i64
  %arrayidx46 = getelementptr inbounds ptr, ptr %arrayidx14, i64 %idxprom45
  %29 = load ptr, ptr %arrayidx46, align 8
  %add = add nuw nsw i32 %shl9, %conv
  %idxprom47 = zext nneg i32 %add to i64
  %arrayidx48 = getelementptr inbounds i32, ptr %29, i64 %idxprom47
  store i32 %24, ptr %arrayidx48, align 4
  %inc = add nuw nsw i32 %k.088, 1
  %cmp24 = icmp ult i32 %k.088, 64
  br i1 %cmp24, label %for.body, label %if.end50, !llvm.loop !19

if.end50:                                         ; preds = %for.body, %for.inc, %if.end23, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff4x4SMB_CABAC(ptr noundef %currMB, ptr noundef %currSE, i32 noundef %pl, i32 noundef %block_y, i32 noundef %block_x, i32 noundef %start_scan, ptr nocapture noundef %cbp_blk) unnamed_addr #3 {
entry:
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %0 = load ptr, ptr %p_Vid1, align 8
  %1 = load ptr, ptr %currMB, align 8
  %dp_mode = getelementptr inbounds i8, ptr %1, i64 200
  %2 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  %structure = getelementptr inbounds i8, ptr %0, i64 848876
  %3 = load i32, ptr %structure, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %4 = load i32, ptr %mb_field, align 8
  %tobool.not = icmp eq i32 %4, 0
  %5 = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %cond = phi ptr [ @FIELD_SCAN, %entry ], [ %5, %land.rhs ]
  %cof4 = getelementptr inbounds i8, ptr %1, i64 1272
  %6 = load ptr, ptr %cof4, align 8
  %idxprom5 = zext nneg i32 %pl to i64
  %arrayidx6 = getelementptr inbounds ptr, ptr %6, i64 %idxprom5
  %7 = load ptr, ptr %arrayidx6, align 8
  %add = add nsw i32 %block_y, 8
  %subblock_y = getelementptr inbounds i8, ptr %currMB, i64 64
  %add9 = add nsw i32 %block_x, 8
  %subblock_x = getelementptr inbounds i8, ptr %currMB, i64 60
  %idxprom12 = zext nneg i32 %start_scan to i64
  %arrayidx13 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom12
  %cmp15 = icmp eq i32 %start_scan, 0
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %partArr = getelementptr inbounds i8, ptr %1, i64 312
  %mapping = getelementptr inbounds i8, ptr %currSE, i64 32
  %reading = getelementptr inbounds i8, ptr %currSE, i64 40
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  %value2 = getelementptr inbounds i8, ptr %currSE, i64 8
  br i1 %cmp15, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %land.end, %for.inc93.split.us.us
  %j.0161.us = phi i32 [ %add94.us, %for.inc93.split.us.us ], [ %block_y, %land.end ]
  store i32 %j.0161.us, ptr %subblock_y, align 8
  br label %for.body11.us.us

for.body11.us.us:                                 ; preds = %for.inc90.us.us, %for.body.us
  %i.0160.us.us = phi i32 [ %block_x, %for.body.us ], [ %add91.us.us, %for.inc90.us.us ]
  store i32 %i.0160.us.us, ptr %subblock_x, align 4
  %8 = load i32, ptr %is_intra_block, align 8
  %tobool16.not.us.us = icmp eq i32 %8, 0
  %cond17.us.us = select i1 %tobool16.not.us.us, i32 12, i32 7
  store i32 %cond17.us.us, ptr %currSE, align 8
  %9 = load ptr, ptr %partArr, align 8
  %idxprom19.us.us = zext nneg i32 %cond17.us.us to i64
  %arrayidx20.us.us = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom19.us.us
  %10 = load i8, ptr %arrayidx20.us.us, align 1
  %idxprom21.us.us = zext i8 %10 to i64
  %arrayidx22.us.us = getelementptr inbounds %struct.datapartition, ptr %9, i64 %idxprom21.us.us
  %11 = load ptr, ptr %arrayidx22.us.us, align 8
  %ei_flag.us.us = getelementptr inbounds i8, ptr %11, i64 24
  %12 = load i32, ptr %ei_flag.us.us, align 8
  %tobool23.not.us.us = icmp eq i32 %12, 0
  br i1 %tobool23.not.us.us, label %if.else.us.us, label %if.then24.us.us

if.then24.us.us:                                  ; preds = %for.body11.us.us
  store ptr @linfo_levrun_inter, ptr %mapping, align 8
  br label %if.end.us.us

if.else.us.us:                                    ; preds = %for.body11.us.us
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  br label %if.end.us.us

if.end.us.us:                                     ; preds = %if.else.us.us, %if.then24.us.us
  %readSyntaxElement.us.us = getelementptr inbounds i8, ptr %arrayidx22.us.us, i64 40
  %13 = load ptr, ptr %readSyntaxElement.us.us, align 8
  %call.us.us = tail call i32 %13(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx22.us.us) #14
  %14 = load i32, ptr %value1, align 4
  %cmp25.not.us.us = icmp eq i32 %14, 0
  br i1 %cmp25.not.us.us, label %for.inc90.us.us, label %if.then26.us.us

if.then26.us.us:                                  ; preds = %if.end.us.us
  %15 = load i32, ptr %value2, align 8
  %mul.us.us = shl nsw i32 %15, 1
  %idx.ext.us.us = sext i32 %mul.us.us to i64
  %add.ptr.us.us = getelementptr inbounds i8, ptr %arrayidx13, i64 %idx.ext.us.us
  %incdec.ptr.us.us = getelementptr inbounds i8, ptr %add.ptr.us.us, i64 1
  %16 = load i8, ptr %add.ptr.us.us, align 1
  %conv.us.us = zext i8 %16 to i32
  %17 = load i8, ptr %incdec.ptr.us.us, align 1
  %conv28.us.us = zext i8 %17 to i32
  %shr.us.us = ashr i32 %i.0160.us.us, 2
  %add29.us.us = add nsw i32 %shr.us.us, %j.0161.us
  %cmp.i.us.us = icmp sgt i32 %add29.us.us, 63
  br i1 %cmp.i.us.us, label %i64_power2.exit.us.us, label %cond.false.i.us.us

cond.false.i.us.us:                               ; preds = %if.then26.us.us
  %idxprom.i.us.us = sext i32 %add29.us.us to i64
  %arrayidx.i.us.us = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %idxprom.i.us.us
  %18 = load i64, ptr %arrayidx.i.us.us, align 8
  br label %i64_power2.exit.us.us

i64_power2.exit.us.us:                            ; preds = %cond.false.i.us.us, %if.then26.us.us
  %cond.i.us.us = phi i64 [ %18, %cond.false.i.us.us ], [ 0, %if.then26.us.us ]
  %19 = load i64, ptr %cbp_blk, align 8
  %or.us.us = or i64 %19, %cond.i.us.us
  store i64 %or.us.us, ptr %cbp_blk, align 8
  %add31.us.us = add nsw i32 %j.0161.us, %conv28.us.us
  %idxprom32.us.us = sext i32 %add31.us.us to i64
  %arrayidx33.us.us = getelementptr inbounds ptr, ptr %7, i64 %idxprom32.us.us
  %20 = load ptr, ptr %arrayidx33.us.us, align 8
  %add34.us.us = add nsw i32 %i.0160.us.us, %conv.us.us
  %idxprom35.us.us = sext i32 %add34.us.us to i64
  %arrayidx36.us.us = getelementptr inbounds i32, ptr %20, i64 %idxprom35.us.us
  store i32 %14, ptr %arrayidx36.us.us, align 4
  %21 = load i32, ptr %is_intra_block, align 8
  %tobool43.not.us.us = icmp eq i32 %21, 0
  %cond44.us.us = select i1 %tobool43.not.us.us, i32 14, i32 9
  store i32 %cond44.us.us, ptr %currSE, align 8
  %22 = load ptr, ptr %partArr, align 8
  %idxprom48.us.us = zext nneg i32 %cond44.us.us to i64
  %arrayidx49.us.us = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom48.us.us
  %23 = load i8, ptr %arrayidx49.us.us, align 1
  %idxprom50.us.us = zext i8 %23 to i64
  %arrayidx51.us.us = getelementptr inbounds %struct.datapartition, ptr %22, i64 %idxprom50.us.us
  %24 = load ptr, ptr %arrayidx51.us.us, align 8
  %ei_flag53.us.us = getelementptr inbounds i8, ptr %24, i64 24
  %25 = load i32, ptr %ei_flag53.us.us, align 8
  %tobool54.not.us.us = icmp eq i32 %25, 0
  br i1 %tobool54.not.us.us, label %if.else57.us.us, label %if.then55.us.us

if.then55.us.us:                                  ; preds = %i64_power2.exit.us.us
  store ptr @linfo_levrun_inter, ptr %mapping, align 8
  br label %if.end59.us.us

if.else57.us.us:                                  ; preds = %i64_power2.exit.us.us
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  br label %if.end59.us.us

if.end59.us.us:                                   ; preds = %if.else57.us.us, %if.then55.us.us
  %readSyntaxElement68.us.us = getelementptr inbounds i8, ptr %arrayidx51.us.us, i64 40
  br label %for.body67.us.us

for.body67.us.us:                                 ; preds = %for.inc.us.us, %if.end59.us.us
  %add.ptr.us.us.pn = phi ptr [ %add.ptr.us.us, %if.end59.us.us ], [ %add.ptr77.us.us, %for.inc.us.us ]
  %k.0158.us.us = phi i32 [ 1, %if.end59.us.us ], [ %inc.us.us, %for.inc.us.us ]
  %26 = load ptr, ptr %readSyntaxElement68.us.us, align 8
  %call69.us.us = tail call i32 %26(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx51.us.us) #14
  %27 = load i32, ptr %value1, align 4
  %cmp71.not.us.us = icmp eq i32 %27, 0
  br i1 %cmp71.not.us.us, label %for.inc90.us.us, label %for.inc.us.us

for.inc.us.us:                                    ; preds = %for.body67.us.us
  %pos_scan_4x4.1159.us.us = getelementptr inbounds i8, ptr %add.ptr.us.us.pn, i64 2
  %28 = load i32, ptr %value2, align 8
  %mul75.us.us = shl nsw i32 %28, 1
  %idx.ext76.us.us = sext i32 %mul75.us.us to i64
  %add.ptr77.us.us = getelementptr inbounds i8, ptr %pos_scan_4x4.1159.us.us, i64 %idx.ext76.us.us
  %incdec.ptr78.us.us = getelementptr inbounds i8, ptr %add.ptr77.us.us, i64 1
  %29 = load i8, ptr %add.ptr77.us.us, align 1
  %conv79.us.us = zext i8 %29 to i32
  %30 = load i8, ptr %incdec.ptr78.us.us, align 1
  %conv81.us.us = zext i8 %30 to i32
  %add82.us.us = add nsw i32 %j.0161.us, %conv81.us.us
  %idxprom83.us.us = sext i32 %add82.us.us to i64
  %arrayidx84.us.us = getelementptr inbounds ptr, ptr %7, i64 %idxprom83.us.us
  %31 = load ptr, ptr %arrayidx84.us.us, align 8
  %add85.us.us = add nsw i32 %i.0160.us.us, %conv79.us.us
  %idxprom86.us.us = sext i32 %add85.us.us to i64
  %arrayidx87.us.us = getelementptr inbounds i32, ptr %31, i64 %idxprom86.us.us
  store i32 %27, ptr %arrayidx87.us.us, align 4
  %inc.us.us = add nuw nsw i32 %k.0158.us.us, 1
  %cmp61.us.us = icmp ult i32 %k.0158.us.us, 16
  br i1 %cmp61.us.us, label %for.body67.us.us, label %for.inc90.us.us

for.inc90.us.us:                                  ; preds = %for.body67.us.us, %for.inc.us.us, %if.end.us.us
  %add91.us.us = add nsw i32 %i.0160.us.us, 4
  %cmp10.us.us = icmp slt i32 %add91.us.us, %add9
  br i1 %cmp10.us.us, label %for.body11.us.us, label %for.inc93.split.us.us

for.inc93.split.us.us:                            ; preds = %for.inc90.us.us
  %add94.us = add nsw i32 %j.0161.us, 4
  %cmp7.us = icmp slt i32 %add94.us, %add
  br i1 %cmp7.us, label %for.body.us, label %for.end95

for.body:                                         ; preds = %land.end, %for.inc93.split
  %j.0161 = phi i32 [ %add94, %for.inc93.split ], [ %block_y, %land.end ]
  store i32 %j.0161, ptr %subblock_y, align 8
  br label %for.body11

for.body11:                                       ; preds = %for.body, %for.inc90.loopexit
  %i.0160 = phi i32 [ %block_x, %for.body ], [ %add91, %for.inc90.loopexit ]
  store i32 %i.0160, ptr %subblock_x, align 4
  %32 = load i32, ptr %is_intra_block, align 8
  %tobool43.not = icmp eq i32 %32, 0
  %cond44 = select i1 %tobool43.not, i32 14, i32 9
  store i32 %cond44, ptr %currSE, align 8
  %33 = load ptr, ptr %partArr, align 8
  %idxprom48 = zext nneg i32 %cond44 to i64
  %arrayidx49 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom48
  %34 = load i8, ptr %arrayidx49, align 1
  %idxprom50 = zext i8 %34 to i64
  %arrayidx51 = getelementptr inbounds %struct.datapartition, ptr %33, i64 %idxprom50
  %35 = load ptr, ptr %arrayidx51, align 8
  %ei_flag53 = getelementptr inbounds i8, ptr %35, i64 24
  %36 = load i32, ptr %ei_flag53, align 8
  %tobool54.not = icmp eq i32 %36, 0
  br i1 %tobool54.not, label %if.else57, label %if.then55

if.then55:                                        ; preds = %for.body11
  store ptr @linfo_levrun_inter, ptr %mapping, align 8
  br label %if.end59

if.else57:                                        ; preds = %for.body11
  store ptr @readRunLevel_CABAC, ptr %reading, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else57, %if.then55
  %readSyntaxElement68 = getelementptr inbounds i8, ptr %arrayidx51, i64 40
  br label %for.body67

for.body67:                                       ; preds = %if.end59, %for.inc
  %pos_scan_4x4.1159 = phi ptr [ %arrayidx13, %if.end59 ], [ %incdec.ptr80, %for.inc ]
  %k.0158 = phi i32 [ 1, %if.end59 ], [ %inc, %for.inc ]
  %37 = load ptr, ptr %readSyntaxElement68, align 8
  %call69 = tail call i32 %37(ptr noundef nonnull %currMB, ptr noundef nonnull %currSE, ptr noundef nonnull %arrayidx51) #14
  %38 = load i32, ptr %value1, align 4
  %cmp71.not = icmp eq i32 %38, 0
  br i1 %cmp71.not, label %for.inc90.loopexit, label %for.inc

for.inc:                                          ; preds = %for.body67
  %39 = load i32, ptr %value2, align 8
  %mul75 = shl nsw i32 %39, 1
  %idx.ext76 = sext i32 %mul75 to i64
  %add.ptr77 = getelementptr inbounds i8, ptr %pos_scan_4x4.1159, i64 %idx.ext76
  %incdec.ptr78 = getelementptr inbounds i8, ptr %add.ptr77, i64 1
  %40 = load i8, ptr %add.ptr77, align 1
  %conv79 = zext i8 %40 to i32
  %incdec.ptr80 = getelementptr inbounds i8, ptr %add.ptr77, i64 2
  %41 = load i8, ptr %incdec.ptr78, align 1
  %conv81 = zext i8 %41 to i32
  %add82 = add nsw i32 %j.0161, %conv81
  %idxprom83 = sext i32 %add82 to i64
  %arrayidx84 = getelementptr inbounds ptr, ptr %7, i64 %idxprom83
  %42 = load ptr, ptr %arrayidx84, align 8
  %add85 = add nsw i32 %i.0160, %conv79
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds i32, ptr %42, i64 %idxprom86
  store i32 %38, ptr %arrayidx87, align 4
  %inc = add nuw nsw i32 %k.0158, 1
  %cmp61 = icmp ult i32 %k.0158, 16
  br i1 %cmp61, label %for.body67, label %for.inc90.loopexit

for.inc90.loopexit:                               ; preds = %for.body67, %for.inc
  %add91 = add nsw i32 %i.0160, 4
  %cmp10 = icmp slt i32 %add91, %add9
  br i1 %cmp10, label %for.body11, label %for.inc93.split

for.inc93.split:                                  ; preds = %for.inc90.loopexit
  %add94 = add nsw i32 %j.0161, 4
  %cmp7 = icmp slt i32 %add94, %add
  br i1 %cmp7, label %for.body, label %for.end95

for.end95:                                        ; preds = %for.inc93.split, %for.inc93.split.us.us
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCoeff4x4_CAVLC(ptr noundef %currMB, i32 noundef %block_type, i32 noundef %i, i32 noundef %j, ptr nocapture noundef writeonly %levarr, ptr nocapture noundef writeonly %runarr, ptr nocapture noundef writeonly %number_coefficients) unnamed_addr #3 {
entry:
  %currSE = alloca %struct.syntaxelement, align 8
  %type = alloca [15 x i8], align 1
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %mbAddrX = getelementptr inbounds i8, ptr %currMB, i64 24
  %2 = load i32, ptr %mbAddrX, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %currSE) #14
  %dp_mode = getelementptr inbounds i8, ptr %0, i64 200
  %3 = load i32, ptr %dp_mode, align 8
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [2 x [20 x i8]], ptr @assignSE2partition, i64 0, i64 %idxprom
  call void @llvm.lifetime.start.p0(i64 15, ptr nonnull %type) #14
  switch i32 %block_type, label %default.unreachable [
    i32 0, label %sw.bb
    i32 1, label %cond.true
    i32 2, label %sw.bb18
    i32 3, label %sw.bb27
    i32 4, label %if.else
    i32 5, label %sw.bb48
    i32 8, label %sw.bb57
    i32 9, label %sw.bb69
    i32 10, label %sw.bb78
    i32 6, label %if.else212
    i32 7, label %cond.false
  ]

sw.bb:                                            ; preds = %entry
  %is_intra_block = getelementptr inbounds i8, ptr %currMB, i64 96
  %4 = load i32, ptr %is_intra_block, align 8
  %cmp = icmp eq i32 %4, 1
  %cond = select i1 %cmp, i32 9, i32 14
  br label %cond.true

sw.bb18:                                          ; preds = %entry
  br label %cond.true

sw.bb27:                                          ; preds = %entry
  %is_intra_block28 = getelementptr inbounds i8, ptr %currMB, i64 96
  %5 = load i32, ptr %is_intra_block28, align 8
  %cmp29 = icmp eq i32 %5, 1
  %cond30 = select i1 %cmp29, i32 9, i32 14
  br label %if.else

sw.bb48:                                          ; preds = %entry
  br label %if.else

sw.bb57:                                          ; preds = %entry
  %is_intra_block58 = getelementptr inbounds i8, ptr %currMB, i64 96
  %6 = load i32, ptr %is_intra_block58, align 8
  %cmp59 = icmp eq i32 %6, 1
  %cond60 = select i1 %cmp59, i32 9, i32 14
  br label %if.else

sw.bb69:                                          ; preds = %entry
  br label %if.else

sw.bb78:                                          ; preds = %entry
  br label %if.else

default.unreachable:                              ; preds = %entry
  unreachable

cond.true:                                        ; preds = %entry, %sw.bb, %sw.bb18
  %dptype.0.ph.ph533 = phi i32 [ 9, %sw.bb18 ], [ %cond, %sw.bb ], [ 7, %entry ]
  %max_coeff_num.0.ph.ph534 = phi i32 [ 15, %sw.bb18 ], [ 16, %sw.bb ], [ 16, %entry ]
  %nz_coeff = getelementptr inbounds i8, ptr %1, i64 848832
  %7 = load ptr, ptr %nz_coeff, align 8
  %idxprom2 = sext i32 %2 to i64
  %arrayidx3 = getelementptr inbounds ptr, ptr %7, i64 %idxprom2
  %8 = load ptr, ptr %arrayidx3, align 8
  %9 = load ptr, ptr %8, align 8
  %idxprom5 = sext i32 %j to i64
  %arrayidx6 = getelementptr inbounds ptr, ptr %9, i64 %idxprom5
  %10 = load ptr, ptr %arrayidx6, align 8
  %idxprom7 = sext i32 %i to i64
  %arrayidx8 = getelementptr inbounds i8, ptr %10, i64 %idxprom7
  store i8 0, ptr %arrayidx8, align 1
  store i32 %dptype.0.ph.ph533, ptr %currSE, align 8
  %partArr513538 = getelementptr inbounds i8, ptr %0, i64 312
  %11 = load ptr, ptr %partArr513538, align 8
  %idxprom120514539 = zext nneg i32 %dptype.0.ph.ph533 to i64
  %arrayidx121515540 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom120514539
  %12 = load i8, ptr %arrayidx121515540, align 1
  %idxprom122516541 = zext i8 %12 to i64
  %arrayidx123517542 = getelementptr inbounds %struct.datapartition, ptr %11, i64 %idxprom122516541
  %13 = load ptr, ptr %arrayidx123517542, align 8
  %shl = shl i32 %i, 2
  %shl132 = shl i32 %j, 2
  %call = tail call i32 @predict_nnz(ptr noundef nonnull %currMB, i32 noundef 0, i32 noundef %shl, i32 noundef %shl132)
  br label %if.end149

cond.false:                                       ; preds = %entry
  %is_intra_block100 = getelementptr inbounds i8, ptr %currMB, i64 96
  %14 = load i32, ptr %is_intra_block100, align 8
  %cmp101 = icmp eq i32 %14, 1
  %cond102 = select i1 %cmp101, i32 10, i32 15
  %nz_coeff103 = getelementptr inbounds i8, ptr %1, i64 848832
  %15 = load ptr, ptr %nz_coeff103, align 8
  %idxprom104 = sext i32 %2 to i64
  %arrayidx105 = getelementptr inbounds ptr, ptr %15, i64 %idxprom104
  %16 = load ptr, ptr %arrayidx105, align 8
  %17 = load ptr, ptr %16, align 8
  %idxprom107 = sext i32 %j to i64
  %arrayidx108 = getelementptr inbounds ptr, ptr %17, i64 %idxprom107
  %18 = load ptr, ptr %arrayidx108, align 8
  %idxprom109 = sext i32 %i to i64
  %arrayidx110 = getelementptr inbounds i8, ptr %18, i64 %idxprom109
  store i8 0, ptr %arrayidx110, align 1
  store i32 %cond102, ptr %currSE, align 8
  %partArr513 = getelementptr inbounds i8, ptr %0, i64 312
  %19 = load ptr, ptr %partArr513, align 8
  %idxprom120514 = zext nneg i32 %cond102 to i64
  %arrayidx121515 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom120514
  %20 = load i8, ptr %arrayidx121515, align 1
  %idxprom122516 = zext i8 %20 to i64
  %arrayidx123517 = getelementptr inbounds %struct.datapartition, ptr %19, i64 %idxprom122516
  %21 = load ptr, ptr %arrayidx123517, align 8
  %sub = shl i32 %j, 2
  %shl133 = add i32 %sub, -16
  %call134 = tail call i32 @predict_nnz_chroma(ptr noundef nonnull %currMB, i32 noundef %i, i32 noundef %shl133)
  br label %if.end149

if.else:                                          ; preds = %entry, %sw.bb78, %sw.bb69, %sw.bb57, %sw.bb48, %sw.bb27
  %.sink566 = phi i64 [ 16, %sw.bb78 ], [ 16, %sw.bb69 ], [ 16, %sw.bb57 ], [ 8, %sw.bb48 ], [ 8, %sw.bb27 ], [ 8, %entry ]
  %dptype.0.ph.ph = phi i32 [ 9, %sw.bb78 ], [ 7, %sw.bb69 ], [ %cond60, %sw.bb57 ], [ 9, %sw.bb48 ], [ %cond30, %sw.bb27 ], [ 7, %entry ]
  %max_coeff_num.0.ph.ph = phi i32 [ 15, %sw.bb78 ], [ 16, %sw.bb69 ], [ 16, %sw.bb57 ], [ 15, %sw.bb48 ], [ 16, %sw.bb27 ], [ 16, %entry ]
  %nz_coeff79 = getelementptr inbounds i8, ptr %1, i64 848832
  %22 = load ptr, ptr %nz_coeff79, align 8
  %idxprom80 = sext i32 %2 to i64
  %arrayidx81 = getelementptr inbounds ptr, ptr %22, i64 %idxprom80
  %23 = load ptr, ptr %arrayidx81, align 8
  %arrayidx82 = getelementptr inbounds i8, ptr %23, i64 %.sink566
  %24 = load ptr, ptr %arrayidx82, align 8
  %idxprom83 = sext i32 %j to i64
  %arrayidx84 = getelementptr inbounds ptr, ptr %24, i64 %idxprom83
  %25 = load ptr, ptr %arrayidx84, align 8
  %idxprom85 = sext i32 %i to i64
  %arrayidx86 = getelementptr inbounds i8, ptr %25, i64 %idxprom85
  store i8 0, ptr %arrayidx86, align 1
  store i32 %dptype.0.ph.ph, ptr %currSE, align 8
  %partArr513526 = getelementptr inbounds i8, ptr %0, i64 312
  %26 = load ptr, ptr %partArr513526, align 8
  %idxprom120514527 = zext nneg i32 %dptype.0.ph.ph to i64
  %arrayidx121515528 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom120514527
  %27 = load i8, ptr %arrayidx121515528, align 1
  %idxprom122516529 = zext i8 %27 to i64
  %arrayidx123517530 = getelementptr inbounds %struct.datapartition, ptr %26, i64 %idxprom122516529
  %28 = load ptr, ptr %arrayidx123517530, align 8
  %29 = add nsw i32 %block_type, -3
  %or.cond342 = icmp ult i32 %29, 3
  %shl142 = shl i32 %i, 2
  %shl143 = shl i32 %j, 2
  br i1 %or.cond342, label %if.then141, label %if.else145

if.then141:                                       ; preds = %if.else
  %call144 = tail call i32 @predict_nnz(ptr noundef nonnull %currMB, i32 noundef 3, i32 noundef %shl142, i32 noundef %shl143)
  br label %if.end149

if.else145:                                       ; preds = %if.else
  %call148 = tail call i32 @predict_nnz(ptr noundef nonnull %currMB, i32 noundef 8, i32 noundef %shl142, i32 noundef %shl143)
  br label %if.end149

if.end149:                                        ; preds = %cond.true, %cond.false, %if.then141, %if.else145
  %30 = phi ptr [ %28, %if.then141 ], [ %28, %if.else145 ], [ %13, %cond.true ], [ %21, %cond.false ]
  %max_coeff_num.0.ph531 = phi i32 [ %max_coeff_num.0.ph.ph, %if.then141 ], [ %max_coeff_num.0.ph.ph, %if.else145 ], [ %max_coeff_num.0.ph.ph534, %cond.true ], [ 15, %cond.false ]
  %nnz.0 = phi i32 [ %call144, %if.then141 ], [ %call148, %if.else145 ], [ %call, %cond.true ], [ %call134, %cond.false ]
  %cmp150 = icmp ult i32 %nnz.0, 2
  br i1 %cmp150, label %if.end161, label %if.else152

if.else152:                                       ; preds = %if.end149
  %cmp153 = icmp ult i32 %nnz.0, 4
  br i1 %cmp153, label %if.end161, label %if.else155

if.else155:                                       ; preds = %if.else152
  %cmp156 = icmp ult i32 %nnz.0, 8
  %. = select i1 %cmp156, i32 2, i32 3
  br label %if.end161

if.end161:                                        ; preds = %if.else155, %if.else152, %if.end149
  %numcoeff_vlc.0 = phi i32 [ 0, %if.end149 ], [ 1, %if.else152 ], [ %., %if.else155 ]
  %value1 = getelementptr inbounds i8, ptr %currSE, i64 4
  store i32 %numcoeff_vlc.0, ptr %value1, align 4
  %call163 = call i32 @readSyntaxElement_NumCoeffTrailingOnes(ptr noundef nonnull %currSE, ptr noundef %30, ptr noundef nonnull %type) #14
  %31 = load <2 x i32>, ptr %value1, align 4
  switch i32 %block_type, label %if.else181 [
    i32 7, label %if.then172
    i32 2, label %if.then172
    i32 1, label %if.then172
    i32 0, label %if.then172
  ]

if.then172:                                       ; preds = %if.end161, %if.end161, %if.end161, %if.end161
  %32 = bitcast <2 x i32> %31 to <8 x i8>
  %conv = extractelement <8 x i8> %32, i64 0
  %nz_coeff173 = getelementptr inbounds i8, ptr %1, i64 848832
  %33 = load ptr, ptr %nz_coeff173, align 8
  %idxprom174 = sext i32 %2 to i64
  %arrayidx175 = getelementptr inbounds ptr, ptr %33, i64 %idxprom174
  %34 = load ptr, ptr %arrayidx175, align 8
  %35 = load ptr, ptr %34, align 8
  %idxprom177 = sext i32 %j to i64
  %arrayidx178 = getelementptr inbounds ptr, ptr %35, i64 %idxprom177
  %36 = load ptr, ptr %arrayidx178, align 8
  %idxprom179 = sext i32 %i to i64
  %arrayidx180 = getelementptr inbounds i8, ptr %36, i64 %idxprom179
  store i8 %conv, ptr %arrayidx180, align 1
  br label %if.end216

if.else181:                                       ; preds = %if.end161
  %37 = add nsw i32 %block_type, -3
  %or.cond347 = icmp ult i32 %37, 3
  %38 = bitcast <2 x i32> %31 to <8 x i8>
  %conv191 = extractelement <8 x i8> %38, i64 0
  %nz_coeff192 = getelementptr inbounds i8, ptr %1, i64 848832
  %39 = load ptr, ptr %nz_coeff192, align 8
  %idxprom193 = sext i32 %2 to i64
  %arrayidx194 = getelementptr inbounds ptr, ptr %39, i64 %idxprom193
  %40 = load ptr, ptr %arrayidx194, align 8
  %idxprom196 = sext i32 %j to i64
  %idxprom198 = sext i32 %i to i64
  br i1 %or.cond347, label %if.then190, label %if.else200

if.then190:                                       ; preds = %if.else181
  %arrayidx195 = getelementptr inbounds i8, ptr %40, i64 8
  %41 = load ptr, ptr %arrayidx195, align 8
  %arrayidx197 = getelementptr inbounds ptr, ptr %41, i64 %idxprom196
  %42 = load ptr, ptr %arrayidx197, align 8
  %arrayidx199 = getelementptr inbounds i8, ptr %42, i64 %idxprom198
  store i8 %conv191, ptr %arrayidx199, align 1
  br label %if.end216

if.else200:                                       ; preds = %if.else181
  %arrayidx205 = getelementptr inbounds i8, ptr %40, i64 16
  %43 = load ptr, ptr %arrayidx205, align 8
  %arrayidx207 = getelementptr inbounds ptr, ptr %43, i64 %idxprom196
  %44 = load ptr, ptr %arrayidx207, align 8
  %arrayidx209 = getelementptr inbounds i8, ptr %44, i64 %idxprom198
  store i8 %conv191, ptr %arrayidx209, align 1
  br label %if.end216

if.else212:                                       ; preds = %entry
  %num_cdc_coeff = getelementptr inbounds i8, ptr %1, i64 849104
  %45 = load i32, ptr %num_cdc_coeff, align 8
  %is_intra_block88 = getelementptr inbounds i8, ptr %currMB, i64 96
  %46 = load i32, ptr %is_intra_block88, align 8
  %cmp89 = icmp eq i32 %46, 1
  %cond90 = select i1 %cmp89, i32 8, i32 13
  %nz_coeff91 = getelementptr inbounds i8, ptr %1, i64 848832
  %47 = load ptr, ptr %nz_coeff91, align 8
  %idxprom92 = sext i32 %2 to i64
  %arrayidx93 = getelementptr inbounds ptr, ptr %47, i64 %idxprom92
  %48 = load ptr, ptr %arrayidx93, align 8
  %49 = load ptr, ptr %48, align 8
  %idxprom95 = sext i32 %j to i64
  %arrayidx96 = getelementptr inbounds ptr, ptr %49, i64 %idxprom95
  %50 = load ptr, ptr %arrayidx96, align 8
  %idxprom97 = sext i32 %i to i64
  %arrayidx98 = getelementptr inbounds i8, ptr %50, i64 %idxprom97
  store i8 0, ptr %arrayidx98, align 1
  store i32 %cond90, ptr %currSE, align 8
  %partArr = getelementptr inbounds i8, ptr %0, i64 312
  %51 = load ptr, ptr %partArr, align 8
  %idxprom120 = zext nneg i32 %cond90 to i64
  %arrayidx121 = getelementptr inbounds i8, ptr %arrayidx, i64 %idxprom120
  %52 = load i8, ptr %arrayidx121, align 1
  %idxprom122 = zext i8 %52 to i64
  %arrayidx123 = getelementptr inbounds %struct.datapartition, ptr %51, i64 %idxprom122
  %53 = load ptr, ptr %arrayidx123, align 8
  %call213 = call i32 @readSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr noundef %1, ptr noundef nonnull %currSE, ptr noundef %53) #14
  %value1214 = getelementptr inbounds i8, ptr %currSE, i64 4
  %54 = load <2 x i32>, ptr %value1214, align 4
  br label %if.end216

if.end216:                                        ; preds = %if.then172, %if.else200, %if.then190, %if.else212
  %55 = phi ptr [ %53, %if.else212 ], [ %30, %if.then172 ], [ %30, %if.then190 ], [ %30, %if.else200 ]
  %max_coeff_num.0521 = phi i32 [ %45, %if.else212 ], [ %max_coeff_num.0.ph531, %if.then172 ], [ %max_coeff_num.0.ph531, %if.then190 ], [ %max_coeff_num.0.ph531, %if.else200 ]
  %tobool.not518 = phi i1 [ false, %if.else212 ], [ true, %if.then172 ], [ true, %if.then190 ], [ true, %if.else200 ]
  %56 = phi <2 x i32> [ %54, %if.else212 ], [ %31, %if.then172 ], [ %31, %if.then190 ], [ %31, %if.else200 ]
  %conv217 = sext i32 %max_coeff_num.0521 to i64
  %mul = shl nsw i64 %conv217, 2
  call void @llvm.memset.p0.i64(ptr align 4 %levarr, i8 0, i64 %mul, i1 false)
  call void @llvm.memset.p0.i64(ptr align 4 %runarr, i8 0, i64 %mul, i1 false)
  %57 = extractelement <2 x i32> %56, i64 0
  store i32 %57, ptr %number_coefficients, align 4
  %tobool220.not = icmp eq i32 %57, 0
  br i1 %tobool220.not, label %if.end338, label %if.then221

if.then221:                                       ; preds = %if.end216
  %58 = extractelement <2 x i32> %56, i64 1
  %tobool222.not = icmp eq i32 %58, 0
  br i1 %tobool222.not, label %if.then221.if.end235_crit_edge, label %if.then223

if.then221.if.end235_crit_edge:                   ; preds = %if.then221
  %.pre563 = add nsw i32 %57, -1
  %.pre564 = sub nuw nsw i32 %.pre563, %58
  br label %if.end235

if.then223:                                       ; preds = %if.then221
  %len = getelementptr inbounds i8, ptr %currSE, i64 12
  store i32 %58, ptr %len, align 4
  %call224 = call i32 @readSyntaxElement_FLC(ptr noundef nonnull %currSE, ptr noundef %55) #14
  %inf = getelementptr inbounds i8, ptr %currSE, i64 16
  %59 = load i32, ptr %inf, align 8
  %sub225 = add i32 %57, -1
  %sub227 = sub nsw i32 %sub225, %58
  %cmp228548 = icmp sgt i32 %58, 0
  br i1 %cmp228548, label %for.body.preheader, label %if.end235

for.body.preheader:                               ; preds = %if.then223
  %60 = sext i32 %sub225 to i64
  %61 = sext i32 %sub227 to i64
  %62 = add nsw i64 %60, -1
  %smin = call i64 @llvm.smin.i64(i64 %61, i64 %62)
  %63 = sub i64 %60, %smin
  %min.iters.check = icmp ult i64 %63, 16
  br i1 %min.iters.check, label %for.body.preheader575, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %63, -16
  %ind.end = sub i64 %60, %n.vec
  %.cast = trunc i64 %n.vec to i32
  %ind.end567 = sub i32 %58, %.cast
  %.splat = shufflevector <2 x i32> %56, <2 x i32> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %induction = add nsw <4 x i32> %.splat, <i32 0, i32 -1, i32 -2, i32 -3>
  %broadcast.splatinsert = insertelement <4 x i32> poison, i32 %59, i64 0
  %broadcast.splat = shufflevector <4 x i32> %broadcast.splatinsert, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i32> [ %induction, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %offset.idx = sub i64 %60, %index
  %64 = add nsw <4 x i32> %vec.ind, <i32 -1, i32 -1, i32 -1, i32 -1>
  %65 = add <4 x i32> %vec.ind, <i32 -5, i32 -5, i32 -5, i32 -5>
  %66 = add <4 x i32> %vec.ind, <i32 -9, i32 -9, i32 -9, i32 -9>
  %67 = add <4 x i32> %vec.ind, <i32 -13, i32 -13, i32 -13, i32 -13>
  %68 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %64
  %69 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %65
  %70 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %66
  %71 = shl nuw <4 x i32> <i32 1, i32 1, i32 1, i32 1>, %67
  %72 = and <4 x i32> %68, %broadcast.splat
  %73 = and <4 x i32> %69, %broadcast.splat
  %74 = and <4 x i32> %70, %broadcast.splat
  %75 = and <4 x i32> %71, %broadcast.splat
  %76 = icmp eq <4 x i32> %72, zeroinitializer
  %77 = icmp eq <4 x i32> %73, zeroinitializer
  %78 = icmp eq <4 x i32> %74, zeroinitializer
  %79 = icmp eq <4 x i32> %75, zeroinitializer
  %80 = select <4 x i1> %76, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %81 = select <4 x i1> %77, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %82 = select <4 x i1> %78, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %83 = select <4 x i1> %79, <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %84 = getelementptr inbounds i32, ptr %levarr, i64 %offset.idx
  %85 = getelementptr inbounds i8, ptr %84, i64 -12
  %86 = getelementptr inbounds i8, ptr %84, i64 -28
  %87 = getelementptr inbounds i8, ptr %84, i64 -44
  %88 = getelementptr inbounds i8, ptr %84, i64 -60
  %reverse = shufflevector <4 x i32> %80, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  store <4 x i32> %reverse, ptr %85, align 4
  %reverse572 = shufflevector <4 x i32> %81, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  store <4 x i32> %reverse572, ptr %86, align 4
  %reverse573 = shufflevector <4 x i32> %82, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  store <4 x i32> %reverse573, ptr %87, align 4
  %reverse574 = shufflevector <4 x i32> %83, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  store <4 x i32> %reverse574, ptr %88, align 4
  %index.next = add nuw i64 %index, 16
  %vec.ind.next = add <4 x i32> %vec.ind, <i32 -16, i32 -16, i32 -16, i32 -16>
  %89 = icmp eq i64 %index.next, %n.vec
  br i1 %89, label %middle.block, label %vector.body, !llvm.loop !21

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %63, %n.vec
  br i1 %cmp.n, label %if.end235, label %for.body.preheader575

for.body.preheader575:                            ; preds = %middle.block, %for.body.preheader
  %indvars.iv.ph = phi i64 [ %60, %for.body.preheader ], [ %ind.end, %middle.block ]
  %ntr.0550.ph = phi i32 [ %58, %for.body.preheader ], [ %ind.end567, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader575, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader575 ]
  %ntr.0550 = phi i32 [ %dec, %for.body ], [ %ntr.0550.ph, %for.body.preheader575 ]
  %dec = add nsw i32 %ntr.0550, -1
  %90 = shl nuw i32 1, %dec
  %91 = and i32 %90, %59
  %tobool230.not = icmp eq i32 %91, 0
  %cond231 = select i1 %tobool230.not, i32 1, i32 -1
  %arrayidx233 = getelementptr inbounds i32, ptr %levarr, i64 %indvars.iv
  store i32 %cond231, ptr %arrayidx233, align 4
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %cmp228 = icmp sgt i64 %indvars.iv.next, %61
  br i1 %cmp228, label %for.body, label %if.end235, !llvm.loop !22

if.end235:                                        ; preds = %for.body, %middle.block, %if.then221.if.end235_crit_edge, %if.then223
  %sub249.pre-phi = phi i32 [ %.pre564, %if.then221.if.end235_crit_edge ], [ %sub227, %if.then223 ], [ %sub227, %middle.block ], [ %sub227, %for.body ]
  %sub248.pre-phi = phi i32 [ %.pre563, %if.then221.if.end235_crit_edge ], [ %sub225, %if.then223 ], [ %sub225, %middle.block ], [ %sub225, %for.body ]
  %cmp251551 = icmp sgt i32 %sub249.pre-phi, -1
  br i1 %cmp251551, label %for.body253.lr.ph, label %for.end296

for.body253.lr.ph:                                ; preds = %if.end235
  %cmp241 = icmp sgt i32 %57, 10
  %cmp244 = icmp slt i32 %58, 3
  %92 = and i1 %cmp241, %cmp244
  %cond247 = zext i1 %92 to i32
  %cmp236 = icmp sgt i32 %57, 3
  %cmp238 = icmp eq i32 %58, 3
  %.not.not = and i1 %cmp236, %cmp238
  %inf263 = getelementptr inbounds i8, ptr %currSE, i64 16
  %93 = zext nneg i32 %sub249.pre-phi to i64
  br i1 %92, label %if.else258.peel, label %if.then256.peel

if.else258.peel:                                  ; preds = %for.body253.lr.ph
  %call259.peel = call i32 @readSyntaxElement_Level_VLCN(ptr noundef nonnull %currSE, i32 noundef %cond247, ptr noundef %55) #14
  br label %if.end260.peel

if.then256.peel:                                  ; preds = %for.body253.lr.ph
  %call257.peel = call i32 @readSyntaxElement_Level_VLC0(ptr noundef nonnull %currSE, ptr noundef %55) #14
  br label %if.end260.peel

if.end260.peel:                                   ; preds = %if.then256.peel, %if.else258.peel
  %.pre = load i32, ptr %inf263, align 8
  br i1 %.not.not, label %if.end268.peel, label %if.then262.peel

if.then262.peel:                                  ; preds = %if.end260.peel
  %cmp264.inv.peel = icmp slt i32 %.pre, 1
  %cond266.peel = select i1 %cmp264.inv.peel, i32 -1, i32 1
  %add.peel = add nsw i32 %cond266.peel, %.pre
  store i32 %add.peel, ptr %inf263, align 8
  br label %if.end268.peel

if.end268.peel:                                   ; preds = %if.then262.peel, %if.end260.peel
  %94 = phi i32 [ %add.peel, %if.then262.peel ], [ %.pre, %if.end260.peel ]
  %arrayidx271.peel = getelementptr inbounds i32, ptr %levarr, i64 %93
  store i32 %94, ptr %arrayidx271.peel, align 4
  %cmp251.peel.not = icmp eq i32 %sub249.pre-phi, 0
  br i1 %cmp251.peel.not, label %for.end296, label %for.body253.peel.next

for.body253.peel.next:                            ; preds = %if.end268.peel
  %sub.i.peel = call i32 @llvm.abs.i32(i32 %94, i1 true)
  %cmp290.peel = icmp ugt i32 %sub.i.peel, 3
  %idxprom279.peel = zext i1 %92 to i64
  %arrayidx280.peel = getelementptr inbounds [7 x i32], ptr @readCoeff4x4_CAVLC.incVlc, i64 0, i64 %idxprom279.peel
  %95 = load i32, ptr %arrayidx280.peel, align 4
  %cmp281.peel = icmp sgt i32 %sub.i.peel, %95
  %inc284.peel = zext i1 %cmp281.peel to i32
  %vlcnum.1.peel = add nuw nsw i32 %cond247, %inc284.peel
  %spec.select = select i1 %cmp290.peel, i32 2, i32 %vlcnum.1.peel
  br label %for.body253

for.body253:                                      ; preds = %for.body253.peel.next, %if.end268
  %indvars.iv556.in = phi i64 [ %indvars.iv556, %if.end268 ], [ %93, %for.body253.peel.next ]
  %vlcnum.0553 = phi i32 [ %vlcnum.1, %if.end268 ], [ %spec.select, %for.body253.peel.next ]
  %indvars.iv556 = add nsw i64 %indvars.iv556.in, -1
  %cmp254 = icmp eq i32 %vlcnum.0553, 0
  br i1 %cmp254, label %if.then256, label %if.else258

if.then256:                                       ; preds = %for.body253
  %call257 = call i32 @readSyntaxElement_Level_VLC0(ptr noundef nonnull %currSE, ptr noundef %55) #14
  br label %if.end268

if.else258:                                       ; preds = %for.body253
  %call259 = call i32 @readSyntaxElement_Level_VLCN(ptr noundef nonnull %currSE, i32 noundef %vlcnum.0553, ptr noundef %55) #14
  br label %if.end268

if.end268:                                        ; preds = %if.then256, %if.else258
  %.pre562 = load i32, ptr %inf263, align 8
  %arrayidx271 = getelementptr inbounds i32, ptr %levarr, i64 %indvars.iv556
  store i32 %.pre562, ptr %arrayidx271, align 4
  %sub.i = call i32 @llvm.abs.i32(i32 %.pre562, i1 true)
  %idxprom279 = zext nneg i32 %vlcnum.0553 to i64
  %arrayidx280 = getelementptr inbounds [7 x i32], ptr @readCoeff4x4_CAVLC.incVlc, i64 0, i64 %idxprom279
  %96 = load i32, ptr %arrayidx280, align 4
  %cmp281 = icmp sgt i32 %sub.i, %96
  %inc284 = zext i1 %cmp281 to i32
  %vlcnum.1 = add nuw nsw i32 %vlcnum.0553, %inc284
  %97 = trunc nuw i64 %indvars.iv556 to i32
  %cmp251 = icmp sgt i32 %97, 0
  br i1 %cmp251, label %for.body253, label %for.end296, !llvm.loop !23

for.end296:                                       ; preds = %if.end268, %if.end268.peel, %if.end235
  %cmp297 = icmp slt i32 %57, %max_coeff_num.0521
  br i1 %cmp297, label %if.then299, label %if.end335

if.then299:                                       ; preds = %for.end296
  %value1301 = getelementptr inbounds i8, ptr %currSE, i64 4
  store i32 %sub248.pre-phi, ptr %value1301, align 4
  br i1 %tobool.not518, label %if.else305, label %if.then303

if.then303:                                       ; preds = %if.then299
  %call304 = call i32 @readSyntaxElement_TotalZerosChromaDC(ptr noundef %1, ptr noundef nonnull %currSE, ptr noundef %55) #14
  br label %if.end310

if.else305:                                       ; preds = %if.then299
  %call306 = call i32 @readSyntaxElement_TotalZeros(ptr noundef nonnull %currSE, ptr noundef %55) #14
  br label %if.end310

if.end310:                                        ; preds = %if.then303, %if.else305
  %98 = load i32, ptr %value1301, align 4
  %cmp312 = icmp sgt i32 %98, 0
  %cmp315 = icmp sgt i32 %57, 1
  %or.cond349 = and i1 %cmp315, %cmp312
  br i1 %or.cond349, label %do.body.preheader, label %if.end335

do.body.preheader:                                ; preds = %if.end310
  %99 = zext nneg i32 %57 to i64
  %100 = add nsw i64 %99, -1
  br label %do.body

do.body:                                          ; preds = %do.body.preheader, %do.body
  %indvars.iv559 = phi i64 [ %100, %do.body.preheader ], [ %indvars.iv.next560, %do.body ]
  %zerosleft.0 = phi i32 [ %98, %do.body.preheader ], [ %sub327, %do.body ]
  %101 = call i32 @llvm.smin.i32(i32 %zerosleft.0, i32 7)
  %cond.i = add nsw i32 %101, -1
  store i32 %cond.i, ptr %value1301, align 4
  %call321 = call i32 @readSyntaxElement_Run(ptr noundef nonnull %currSE, ptr noundef %55) #14
  %102 = load i32, ptr %value1301, align 4
  %arrayidx324 = getelementptr inbounds i32, ptr %runarr, i64 %indvars.iv559
  store i32 %102, ptr %arrayidx324, align 4
  %sub327 = sub nsw i32 %zerosleft.0, %102
  %indvars.iv.next560 = add nsw i64 %indvars.iv559, -1
  %cmp329 = icmp ne i32 %sub327, 0
  %cmp332 = icmp ne i64 %indvars.iv.next560, 0
  %103 = select i1 %cmp329, i1 %cmp332, i1 false
  br i1 %103, label %do.body, label %if.end335.loopexit

if.end335.loopexit:                               ; preds = %do.body
  %104 = trunc nsw i64 %indvars.iv.next560 to i32
  br label %if.end335

if.end335:                                        ; preds = %if.end335.loopexit, %for.end296, %if.end310
  %i.addr.1 = phi i32 [ %sub248.pre-phi, %if.end310 ], [ %sub248.pre-phi, %for.end296 ], [ %104, %if.end335.loopexit ]
  %zerosleft.1 = phi i32 [ %98, %if.end310 ], [ 0, %for.end296 ], [ %sub327, %if.end335.loopexit ]
  %idxprom336 = sext i32 %i.addr.1 to i64
  %arrayidx337 = getelementptr inbounds i32, ptr %runarr, i64 %idxprom336
  store i32 %zerosleft.1, ptr %arrayidx337, align 4
  br label %if.end338

if.end338:                                        ; preds = %if.end335, %if.end216
  call void @llvm.lifetime.end.p0(i64 15, ptr nonnull %type) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %currSE) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff4x4MB_CAVLC(ptr noundef %currMB, i32 noundef %pl, ptr nocapture noundef readonly %InvLevelScale4x4, i32 noundef %qp_per, i32 noundef %cbp, ptr nocapture noundef readonly %nzcoeff) unnamed_addr #3 {
entry:
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(64) %levarr, i8 0, i64 64, i1 false)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(64) %runarr, i8 0, i64 64, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %structure = getelementptr inbounds i8, ptr %1, i64 848876
  %2 = load i32, ptr %structure, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %3 = load i32, ptr %mb_field, align 8
  %tobool.not = icmp eq i32 %3, 0
  %4 = select i1 %tobool.not, ptr @SNGL_SCAN, ptr @FIELD_SCAN
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %cond = phi ptr [ @FIELD_SCAN, %entry ], [ %4, %land.rhs ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %5 = load i16, ptr %mb_type, align 8
  %6 = and i16 %5, -5
  %narrow = icmp eq i16 %6, 10
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %idxprom = zext nneg i32 %pl to i64
  %arrayidx9 = getelementptr inbounds [3 x i64], ptr %cbp_blk, i64 0, i64 %idxprom
  switch i16 %5, label %if.else26 [
    i16 10, label %if.then
    i16 14, label %if.then
  ]

if.then:                                          ; preds = %land.end, %land.end
  %switch.selectcmp = icmp eq i32 %pl, 1
  %switch.select = select i1 %switch.selectcmp, i32 5, i32 10
  %switch.selectcmp309 = icmp eq i32 %pl, 0
  %switch.select310 = select i1 %switch.selectcmp309, i32 2, i32 %switch.select
  br label %if.end37

if.else26:                                        ; preds = %land.end
  %switch.selectcmp311 = icmp eq i32 %pl, 1
  %switch.select312 = select i1 %switch.selectcmp311, i32 3, i32 8
  %switch.selectcmp313 = icmp eq i32 %pl, 0
  %switch.select314 = select i1 %switch.selectcmp313, i32 0, i32 %switch.select312
  br label %if.end37

if.end37:                                         ; preds = %if.else26, %if.then
  %cur_context.0 = phi i32 [ %switch.select310, %if.then ], [ %switch.select314, %if.else26 ]
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %7 = load i32, ptr %is_lossless, align 4
  %cmp38 = icmp eq i32 %7, 0
  %cof = getelementptr inbounds i8, ptr %0, i64 1272
  br i1 %cmp38, label %for.cond.preheader, label %for.cond126.preheader

for.cond126.preheader:                            ; preds = %if.end37
  %not.narrow = xor i1 %narrow, true
  %sub = sext i1 %not.narrow to i32
  br label %for.cond130.preheader

for.cond.preheader:                               ; preds = %if.end37
  %idxprom65 = zext i1 %narrow to i64
  %arrayidx66 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom65
  br label %for.body

for.body:                                         ; preds = %for.cond.preheader, %for.inc122
  %cmp41 = phi i1 [ true, %for.cond.preheader ], [ false, %for.inc122 ]
  %indvars.iv477 = phi i64 [ 0, %for.cond.preheader ], [ 2, %for.inc122 ]
  %indvars.iv426 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next427, %for.inc122 ]
  %arrayidx110 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %indvars.iv477
  %8 = or disjoint i64 %indvars.iv477, 1
  %arrayidx115 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %8
  %9 = lshr exact i64 %indvars.iv426, 2
  %10 = trunc nuw nsw i64 %9 to i32
  %indvars.iv.next429 = or disjoint i64 %indvars.iv426, 4
  %11 = lshr exact i64 %indvars.iv.next429, 2
  %12 = trunc nuw nsw i64 %11 to i32
  br label %for.body46

for.body46:                                       ; preds = %for.body, %for.inc119
  %cmp44 = phi i1 [ true, %for.body ], [ false, %for.inc119 ]
  %indvars.iv472 = phi i64 [ 0, %for.body ], [ 2, %for.inc119 ]
  %indvars.iv417 = phi i64 [ 0, %for.body ], [ %indvars.iv.next418, %for.inc119 ]
  %13 = lshr exact i64 %indvars.iv472, 1
  %14 = or disjoint i64 %13, %indvars.iv477
  %15 = trunc nuw nsw i64 %14 to i32
  %shl48 = shl nuw nsw i32 1, %15
  %and = and i32 %shl48, %cbp
  %tobool49.not = icmp eq i32 %and, 0
  br i1 %tobool49.not, label %if.else108, label %for.cond51.preheader

for.cond51.preheader:                             ; preds = %for.body46
  %16 = lshr exact i64 %indvars.iv417, 2
  %17 = trunc nuw nsw i64 %16 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %17, i32 noundef %10, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %18 = load i32, ptr %numcoeff, align 4
  %cmp69329 = icmp sgt i32 %18, 0
  br i1 %cmp69329, label %for.body71.preheader, label %for.inc102

for.body71.preheader:                             ; preds = %for.cond51.preheader
  %19 = add nuw nsw i64 %16, %indvars.iv426
  %arrayidx.i = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %19
  %wide.trip.count410 = zext nneg i32 %18 to i64
  br label %for.body71

for.body71:                                       ; preds = %for.body71.preheader, %for.inc
  %indvars.iv407 = phi i64 [ 0, %for.body71.preheader ], [ %indvars.iv.next408, %for.inc ]
  %pos_scan_4x4.0331 = phi ptr [ %arrayidx66, %for.body71.preheader ], [ %pos_scan_4x4.1, %for.inc ]
  %arrayidx73 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv407
  %20 = load i32, ptr %arrayidx73, align 4
  %cmp74.not = icmp eq i32 %20, 0
  br i1 %cmp74.not, label %for.inc, label %if.then76

if.then76:                                        ; preds = %for.body71
  %arrayidx78 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv407
  %21 = load i32, ptr %arrayidx78, align 4
  %shl79 = shl i32 %21, 1
  %idx.ext = sext i32 %shl79 to i64
  %add.ptr = getelementptr inbounds i8, ptr %pos_scan_4x4.0331, i64 %idx.ext
  %incdec.ptr = getelementptr inbounds i8, ptr %add.ptr, i64 1
  %22 = load i8, ptr %add.ptr, align 1
  %incdec.ptr81 = getelementptr inbounds i8, ptr %add.ptr, i64 2
  %23 = load i8, ptr %incdec.ptr, align 1
  %conv82 = zext i8 %23 to i64
  %24 = load i64, ptr %arrayidx.i, align 16
  %25 = load i64, ptr %arrayidx9, align 8
  %or = or i64 %25, %24
  store i64 %or, ptr %arrayidx9, align 8
  %idxprom87 = zext i8 %23 to i64
  %idxprom89 = zext i8 %22 to i64
  %arrayidx90 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom87, i64 %idxprom89
  %26 = load i32, ptr %arrayidx90, align 4
  %mul = mul nsw i32 %26, %20
  %shl91 = shl i32 %mul, %qp_per
  %add.i = add nsw i32 %shl91, 8
  %shr.i = ashr i32 %add.i, 4
  %27 = load ptr, ptr %cof, align 8
  %arrayidx94 = getelementptr inbounds ptr, ptr %27, i64 %idxprom
  %28 = load ptr, ptr %arrayidx94, align 8
  %add95 = add nuw i64 %indvars.iv426, %conv82
  %idxprom96 = and i64 %add95, 4294967295
  %arrayidx97 = getelementptr inbounds ptr, ptr %28, i64 %idxprom96
  %29 = load ptr, ptr %arrayidx97, align 8
  %30 = zext i8 %22 to i64
  %31 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv417
  %arrayidx100 = getelementptr inbounds i32, ptr %31, i64 %30
  store i32 %shr.i, ptr %arrayidx100, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body71, %if.then76
  %pos_scan_4x4.1 = phi ptr [ %incdec.ptr81, %if.then76 ], [ %pos_scan_4x4.0331, %for.body71 ]
  %indvars.iv.next408 = add nuw nsw i64 %indvars.iv407, 1
  %exitcond411.not = icmp eq i64 %indvars.iv.next408, %wide.trip.count410
  br i1 %exitcond411.not, label %for.inc102, label %for.body71

for.inc102:                                       ; preds = %for.inc, %for.cond51.preheader
  %indvars.iv.next420 = or disjoint i64 %indvars.iv417, 4
  %32 = lshr exact i64 %indvars.iv.next420, 2
  %33 = trunc nuw nsw i64 %32 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %33, i32 noundef %10, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %34 = load i32, ptr %numcoeff, align 4
  %cmp69329.1 = icmp sgt i32 %34, 0
  br i1 %cmp69329.1, label %for.body71.preheader.1, label %for.inc102.1

for.body71.preheader.1:                           ; preds = %for.inc102
  %35 = add nuw nsw i64 %32, %indvars.iv426
  %arrayidx.i.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %35
  %wide.trip.count410.1 = zext nneg i32 %34 to i64
  br label %for.body71.1

for.body71.1:                                     ; preds = %for.inc.1, %for.body71.preheader.1
  %indvars.iv407.1 = phi i64 [ 0, %for.body71.preheader.1 ], [ %indvars.iv.next408.1, %for.inc.1 ]
  %pos_scan_4x4.0331.1 = phi ptr [ %arrayidx66, %for.body71.preheader.1 ], [ %pos_scan_4x4.1.1, %for.inc.1 ]
  %arrayidx73.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv407.1
  %36 = load i32, ptr %arrayidx73.1, align 4
  %cmp74.not.1 = icmp eq i32 %36, 0
  br i1 %cmp74.not.1, label %for.inc.1, label %if.then76.1

if.then76.1:                                      ; preds = %for.body71.1
  %arrayidx78.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv407.1
  %37 = load i32, ptr %arrayidx78.1, align 4
  %shl79.1 = shl i32 %37, 1
  %idx.ext.1 = sext i32 %shl79.1 to i64
  %add.ptr.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.0331.1, i64 %idx.ext.1
  %incdec.ptr.1 = getelementptr inbounds i8, ptr %add.ptr.1, i64 1
  %38 = load i8, ptr %add.ptr.1, align 1
  %incdec.ptr81.1 = getelementptr inbounds i8, ptr %add.ptr.1, i64 2
  %39 = load i8, ptr %incdec.ptr.1, align 1
  %conv82.1 = zext i8 %39 to i64
  %40 = load i64, ptr %arrayidx.i.1, align 8
  %41 = load i64, ptr %arrayidx9, align 8
  %or.1 = or i64 %41, %40
  store i64 %or.1, ptr %arrayidx9, align 8
  %idxprom87.1 = zext i8 %39 to i64
  %idxprom89.1 = zext i8 %38 to i64
  %arrayidx90.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom87.1, i64 %idxprom89.1
  %42 = load i32, ptr %arrayidx90.1, align 4
  %mul.1 = mul nsw i32 %42, %36
  %shl91.1 = shl i32 %mul.1, %qp_per
  %add.i.1 = add nsw i32 %shl91.1, 8
  %shr.i.1 = ashr i32 %add.i.1, 4
  %43 = load ptr, ptr %cof, align 8
  %arrayidx94.1 = getelementptr inbounds ptr, ptr %43, i64 %idxprom
  %44 = load ptr, ptr %arrayidx94.1, align 8
  %add95.1 = add nuw i64 %indvars.iv426, %conv82.1
  %idxprom96.1 = and i64 %add95.1, 4294967295
  %arrayidx97.1 = getelementptr inbounds ptr, ptr %44, i64 %idxprom96.1
  %45 = load ptr, ptr %arrayidx97.1, align 8
  %46 = zext i8 %38 to i64
  %47 = getelementptr inbounds i32, ptr %45, i64 %indvars.iv.next420
  %arrayidx100.1 = getelementptr inbounds i32, ptr %47, i64 %46
  store i32 %shr.i.1, ptr %arrayidx100.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then76.1, %for.body71.1
  %pos_scan_4x4.1.1 = phi ptr [ %incdec.ptr81.1, %if.then76.1 ], [ %pos_scan_4x4.0331.1, %for.body71.1 ]
  %indvars.iv.next408.1 = add nuw nsw i64 %indvars.iv407.1, 1
  %exitcond411.1.not = icmp eq i64 %indvars.iv.next408.1, %wide.trip.count410.1
  br i1 %exitcond411.1.not, label %for.inc102.1, label %for.body71.1

for.inc102.1:                                     ; preds = %for.inc.1, %for.inc102
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %17, i32 noundef %12, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %48 = load i32, ptr %numcoeff, align 4
  %cmp69329.1432 = icmp sgt i32 %48, 0
  br i1 %cmp69329.1432, label %for.body71.preheader.1436, label %for.inc102.1471

for.body71.preheader.1436:                        ; preds = %for.inc102.1
  %49 = add nuw nsw i64 %16, %indvars.iv.next429
  %arrayidx.i.1433 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %49
  %wide.trip.count410.1435 = zext nneg i32 %48 to i64
  br label %for.body71.1441

for.body71.1441:                                  ; preds = %for.inc.1467, %for.body71.preheader.1436
  %indvars.iv407.1437 = phi i64 [ 0, %for.body71.preheader.1436 ], [ %indvars.iv.next408.1465, %for.inc.1467 ]
  %pos_scan_4x4.0331.1438 = phi ptr [ %arrayidx66, %for.body71.preheader.1436 ], [ %pos_scan_4x4.1.1464, %for.inc.1467 ]
  %arrayidx73.1439 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv407.1437
  %50 = load i32, ptr %arrayidx73.1439, align 4
  %cmp74.not.1440 = icmp eq i32 %50, 0
  br i1 %cmp74.not.1440, label %for.inc.1467, label %if.then76.1463

if.then76.1463:                                   ; preds = %for.body71.1441
  %arrayidx78.1442 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv407.1437
  %51 = load i32, ptr %arrayidx78.1442, align 4
  %shl79.1443 = shl i32 %51, 1
  %idx.ext.1444 = sext i32 %shl79.1443 to i64
  %add.ptr.1445 = getelementptr inbounds i8, ptr %pos_scan_4x4.0331.1438, i64 %idx.ext.1444
  %incdec.ptr.1446 = getelementptr inbounds i8, ptr %add.ptr.1445, i64 1
  %52 = load i8, ptr %add.ptr.1445, align 1
  %incdec.ptr81.1448 = getelementptr inbounds i8, ptr %add.ptr.1445, i64 2
  %53 = load i8, ptr %incdec.ptr.1446, align 1
  %conv82.1449 = zext i8 %53 to i64
  %54 = load i64, ptr %arrayidx.i.1433, align 16
  %55 = load i64, ptr %arrayidx9, align 8
  %or.1450 = or i64 %55, %54
  store i64 %or.1450, ptr %arrayidx9, align 8
  %idxprom87.1451 = zext i8 %53 to i64
  %idxprom89.1452 = zext i8 %52 to i64
  %arrayidx90.1453 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom87.1451, i64 %idxprom89.1452
  %56 = load i32, ptr %arrayidx90.1453, align 4
  %mul.1454 = mul nsw i32 %56, %50
  %shl91.1455 = shl i32 %mul.1454, %qp_per
  %add.i.1456 = add nsw i32 %shl91.1455, 8
  %shr.i.1457 = ashr i32 %add.i.1456, 4
  %57 = load ptr, ptr %cof, align 8
  %arrayidx94.1458 = getelementptr inbounds ptr, ptr %57, i64 %idxprom
  %58 = load ptr, ptr %arrayidx94.1458, align 8
  %add95.1459 = add nuw i64 %indvars.iv.next429, %conv82.1449
  %idxprom96.1460 = and i64 %add95.1459, 4294967295
  %arrayidx97.1461 = getelementptr inbounds ptr, ptr %58, i64 %idxprom96.1460
  %59 = load ptr, ptr %arrayidx97.1461, align 8
  %60 = zext i8 %52 to i64
  %61 = getelementptr inbounds i32, ptr %59, i64 %indvars.iv417
  %arrayidx100.1462 = getelementptr inbounds i32, ptr %61, i64 %60
  store i32 %shr.i.1457, ptr %arrayidx100.1462, align 4
  br label %for.inc.1467

for.inc.1467:                                     ; preds = %if.then76.1463, %for.body71.1441
  %pos_scan_4x4.1.1464 = phi ptr [ %incdec.ptr81.1448, %if.then76.1463 ], [ %pos_scan_4x4.0331.1438, %for.body71.1441 ]
  %indvars.iv.next408.1465 = add nuw nsw i64 %indvars.iv407.1437, 1
  %exitcond411.1466.not = icmp eq i64 %indvars.iv.next408.1465, %wide.trip.count410.1435
  br i1 %exitcond411.1466.not, label %for.inc102.1471, label %for.body71.1441

for.inc102.1471:                                  ; preds = %for.inc.1467, %for.inc102.1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %33, i32 noundef %12, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %62 = load i32, ptr %numcoeff, align 4
  %cmp69329.1.1 = icmp sgt i32 %62, 0
  br i1 %cmp69329.1.1, label %for.body71.preheader.1.1, label %for.inc119

for.body71.preheader.1.1:                         ; preds = %for.inc102.1471
  %63 = add nuw nsw i64 %32, %indvars.iv.next429
  %arrayidx.i.1.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %63
  %wide.trip.count410.1.1 = zext nneg i32 %62 to i64
  br label %for.body71.1.1

for.body71.1.1:                                   ; preds = %for.inc.1.1, %for.body71.preheader.1.1
  %indvars.iv407.1.1 = phi i64 [ 0, %for.body71.preheader.1.1 ], [ %indvars.iv.next408.1.1, %for.inc.1.1 ]
  %pos_scan_4x4.0331.1.1 = phi ptr [ %arrayidx66, %for.body71.preheader.1.1 ], [ %pos_scan_4x4.1.1.1, %for.inc.1.1 ]
  %arrayidx73.1.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv407.1.1
  %64 = load i32, ptr %arrayidx73.1.1, align 4
  %cmp74.not.1.1 = icmp eq i32 %64, 0
  br i1 %cmp74.not.1.1, label %for.inc.1.1, label %if.then76.1.1

if.then76.1.1:                                    ; preds = %for.body71.1.1
  %arrayidx78.1.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv407.1.1
  %65 = load i32, ptr %arrayidx78.1.1, align 4
  %shl79.1.1 = shl i32 %65, 1
  %idx.ext.1.1 = sext i32 %shl79.1.1 to i64
  %add.ptr.1.1 = getelementptr inbounds i8, ptr %pos_scan_4x4.0331.1.1, i64 %idx.ext.1.1
  %incdec.ptr.1.1 = getelementptr inbounds i8, ptr %add.ptr.1.1, i64 1
  %66 = load i8, ptr %add.ptr.1.1, align 1
  %incdec.ptr81.1.1 = getelementptr inbounds i8, ptr %add.ptr.1.1, i64 2
  %67 = load i8, ptr %incdec.ptr.1.1, align 1
  %conv82.1.1 = zext i8 %67 to i64
  %68 = load i64, ptr %arrayidx.i.1.1, align 8
  %69 = load i64, ptr %arrayidx9, align 8
  %or.1.1 = or i64 %69, %68
  store i64 %or.1.1, ptr %arrayidx9, align 8
  %idxprom87.1.1 = zext i8 %67 to i64
  %idxprom89.1.1 = zext i8 %66 to i64
  %arrayidx90.1.1 = getelementptr inbounds [4 x i32], ptr %InvLevelScale4x4, i64 %idxprom87.1.1, i64 %idxprom89.1.1
  %70 = load i32, ptr %arrayidx90.1.1, align 4
  %mul.1.1 = mul nsw i32 %70, %64
  %shl91.1.1 = shl i32 %mul.1.1, %qp_per
  %add.i.1.1 = add nsw i32 %shl91.1.1, 8
  %shr.i.1.1 = ashr i32 %add.i.1.1, 4
  %71 = load ptr, ptr %cof, align 8
  %arrayidx94.1.1 = getelementptr inbounds ptr, ptr %71, i64 %idxprom
  %72 = load ptr, ptr %arrayidx94.1.1, align 8
  %add95.1.1 = add nuw i64 %indvars.iv.next429, %conv82.1.1
  %idxprom96.1.1 = and i64 %add95.1.1, 4294967295
  %arrayidx97.1.1 = getelementptr inbounds ptr, ptr %72, i64 %idxprom96.1.1
  %73 = load ptr, ptr %arrayidx97.1.1, align 8
  %74 = zext i8 %66 to i64
  %75 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next420
  %arrayidx100.1.1 = getelementptr inbounds i32, ptr %75, i64 %74
  store i32 %shr.i.1.1, ptr %arrayidx100.1.1, align 4
  br label %for.inc.1.1

for.inc.1.1:                                      ; preds = %if.then76.1.1, %for.body71.1.1
  %pos_scan_4x4.1.1.1 = phi ptr [ %incdec.ptr81.1.1, %if.then76.1.1 ], [ %pos_scan_4x4.0331.1.1, %for.body71.1.1 ]
  %indvars.iv.next408.1.1 = add nuw nsw i64 %indvars.iv407.1.1, 1
  %exitcond411.1.1.not = icmp eq i64 %indvars.iv.next408.1.1, %wide.trip.count410.1.1
  br i1 %exitcond411.1.1.not, label %for.inc119, label %for.body71.1.1

if.else108:                                       ; preds = %for.body46
  %76 = load ptr, ptr %arrayidx110, align 8
  %arrayidx112 = getelementptr inbounds i8, ptr %76, i64 %indvars.iv472
  store i16 0, ptr %arrayidx112, align 1
  %77 = load ptr, ptr %arrayidx115, align 8
  %arrayidx117 = getelementptr inbounds i8, ptr %77, i64 %indvars.iv472
  store i16 0, ptr %arrayidx117, align 1
  br label %for.inc119

for.inc119:                                       ; preds = %for.inc.1.1, %for.inc102.1471, %if.else108
  %indvars.iv.next418 = add nuw nsw i64 %indvars.iv417, 8
  br i1 %cmp44, label %for.body46, label %for.inc122

for.inc122:                                       ; preds = %for.inc119
  %indvars.iv.next427 = add nuw nsw i64 %indvars.iv426, 8
  br i1 %cmp41, label %for.body, label %if.end219

for.cond130.preheader:                            ; preds = %for.cond126.preheader, %for.inc216
  %cmp127 = phi i1 [ true, %for.cond126.preheader ], [ false, %for.inc216 ]
  %indvars.iv359 = phi i64 [ 0, %for.cond126.preheader ], [ 2, %for.inc216 ]
  %arrayidx204 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %indvars.iv359
  %78 = or disjoint i64 %indvars.iv359, 1
  %arrayidx209 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %78
  %79 = shl nuw nsw i64 %indvars.iv359, 2
  %80 = trunc nuw nsw i64 %indvars.iv359 to i32
  %indvars.iv.next362 = or disjoint i64 %indvars.iv359, 1
  %81 = shl nuw nsw i64 %indvars.iv.next362, 2
  %82 = trunc nuw nsw i64 %indvars.iv.next362 to i32
  br label %for.body133

for.body133:                                      ; preds = %for.cond130.preheader, %for.inc213
  %cmp131 = phi i1 [ true, %for.cond130.preheader ], [ false, %for.inc213 ]
  %indvars.iv346 = phi i64 [ 0, %for.cond130.preheader ], [ 2, %for.inc213 ]
  %83 = lshr exact i64 %indvars.iv346, 1
  %84 = or disjoint i64 %83, %indvars.iv359
  %85 = trunc nuw nsw i64 %84 to i32
  %shl138 = shl nuw nsw i32 1, %85
  %and139 = and i32 %shl138, %cbp
  %tobool140.not = icmp eq i32 %and139, 0
  br i1 %tobool140.not, label %if.else202, label %for.cond142.preheader

for.cond142.preheader:                            ; preds = %for.body133
  %86 = trunc nuw nsw i64 %indvars.iv346 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %86, i32 noundef %80, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %87 = load i32, ptr %numcoeff, align 4
  %cmp155322 = icmp sgt i32 %87, 0
  br i1 %cmp155322, label %for.body157.preheader, label %for.inc196

for.body157.preheader:                            ; preds = %for.cond142.preheader
  %88 = or disjoint i64 %indvars.iv346, %79
  %arrayidx.i318 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %88
  %wide.trip.count = zext nneg i32 %87 to i64
  %.idx = shl nuw nsw i64 %indvars.iv346, 4
  br label %for.body157

for.body157:                                      ; preds = %for.body157.preheader, %for.inc193
  %indvars.iv = phi i64 [ 0, %for.body157.preheader ], [ %indvars.iv.next, %for.inc193 ]
  %coef_ctr.0324 = phi i32 [ %sub, %for.body157.preheader ], [ %coef_ctr.1, %for.inc193 ]
  %arrayidx159 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %89 = load i32, ptr %arrayidx159, align 4
  %cmp160.not = icmp eq i32 %89, 0
  br i1 %cmp160.not, label %for.inc193, label %if.then162

if.then162:                                       ; preds = %for.body157
  %arrayidx164 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %90 = load i32, ptr %arrayidx164, align 4
  %add165 = add i32 %coef_ctr.0324, 1
  %add166 = add i32 %add165, %90
  %idxprom167 = sext i32 %add166 to i64
  %arrayidx168 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom167
  %91 = load i8, ptr %arrayidx168, align 1
  %arrayidx173 = getelementptr inbounds i8, ptr %arrayidx168, i64 1
  %92 = load i8, ptr %arrayidx173, align 1
  %93 = load i64, ptr %arrayidx.i318, align 16
  %94 = load i64, ptr %arrayidx9, align 8
  %or178 = or i64 %94, %93
  store i64 %or178, ptr %arrayidx9, align 8
  %95 = load ptr, ptr %cof, align 8
  %arrayidx183 = getelementptr inbounds ptr, ptr %95, i64 %idxprom
  %96 = load ptr, ptr %arrayidx183, align 8
  %97 = zext i8 %92 to i64
  %98 = getelementptr ptr, ptr %96, i64 %79
  %arrayidx187 = getelementptr ptr, ptr %98, i64 %97
  %99 = load ptr, ptr %arrayidx187, align 8
  %100 = zext i8 %91 to i64
  %101 = getelementptr i8, ptr %99, i64 %.idx
  %arrayidx191 = getelementptr i32, ptr %101, i64 %100
  store i32 %89, ptr %arrayidx191, align 4
  br label %for.inc193

for.inc193:                                       ; preds = %for.body157, %if.then162
  %coef_ctr.1 = phi i32 [ %add166, %if.then162 ], [ %coef_ctr.0324, %for.body157 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc196, label %for.body157

for.inc196:                                       ; preds = %for.inc193, %for.cond142.preheader
  %indvars.iv.next349 = or disjoint i64 %indvars.iv346, 1
  %102 = trunc nuw nsw i64 %indvars.iv.next349 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %102, i32 noundef %80, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %103 = load i32, ptr %numcoeff, align 4
  %cmp155322.1 = icmp sgt i32 %103, 0
  br i1 %cmp155322.1, label %for.body157.preheader.1, label %for.inc196.1

for.body157.preheader.1:                          ; preds = %for.inc196
  %104 = or disjoint i64 %indvars.iv.next349, %79
  %arrayidx.i318.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %104
  %wide.trip.count.1 = zext nneg i32 %103 to i64
  %.idx481 = shl nuw nsw i64 %indvars.iv.next349, 4
  br label %for.body157.1

for.body157.1:                                    ; preds = %for.inc193.1, %for.body157.preheader.1
  %indvars.iv.1 = phi i64 [ 0, %for.body157.preheader.1 ], [ %indvars.iv.next.1, %for.inc193.1 ]
  %coef_ctr.0324.1 = phi i32 [ %sub, %for.body157.preheader.1 ], [ %coef_ctr.1.1, %for.inc193.1 ]
  %arrayidx159.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1
  %105 = load i32, ptr %arrayidx159.1, align 4
  %cmp160.not.1 = icmp eq i32 %105, 0
  br i1 %cmp160.not.1, label %for.inc193.1, label %if.then162.1

if.then162.1:                                     ; preds = %for.body157.1
  %arrayidx164.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1
  %106 = load i32, ptr %arrayidx164.1, align 4
  %add165.1 = add i32 %coef_ctr.0324.1, 1
  %add166.1 = add i32 %add165.1, %106
  %idxprom167.1 = sext i32 %add166.1 to i64
  %arrayidx168.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom167.1
  %107 = load i8, ptr %arrayidx168.1, align 1
  %arrayidx173.1 = getelementptr inbounds i8, ptr %arrayidx168.1, i64 1
  %108 = load i8, ptr %arrayidx173.1, align 1
  %109 = load i64, ptr %arrayidx.i318.1, align 8
  %110 = load i64, ptr %arrayidx9, align 8
  %or178.1 = or i64 %110, %109
  store i64 %or178.1, ptr %arrayidx9, align 8
  %111 = load ptr, ptr %cof, align 8
  %arrayidx183.1 = getelementptr inbounds ptr, ptr %111, i64 %idxprom
  %112 = load ptr, ptr %arrayidx183.1, align 8
  %113 = zext i8 %108 to i64
  %114 = getelementptr ptr, ptr %112, i64 %79
  %arrayidx187.1 = getelementptr ptr, ptr %114, i64 %113
  %115 = load ptr, ptr %arrayidx187.1, align 8
  %116 = zext i8 %107 to i64
  %117 = getelementptr i8, ptr %115, i64 %.idx481
  %arrayidx191.1 = getelementptr i32, ptr %117, i64 %116
  store i32 %105, ptr %arrayidx191.1, align 4
  br label %for.inc193.1

for.inc193.1:                                     ; preds = %if.then162.1, %for.body157.1
  %coef_ctr.1.1 = phi i32 [ %add166.1, %if.then162.1 ], [ %coef_ctr.0324.1, %for.body157.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %exitcond.1.not = icmp eq i64 %indvars.iv.next.1, %wide.trip.count.1
  br i1 %exitcond.1.not, label %for.inc196.1, label %for.body157.1

for.inc196.1:                                     ; preds = %for.inc193.1, %for.inc196
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %86, i32 noundef %82, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %118 = load i32, ptr %numcoeff, align 4
  %cmp155322.1371 = icmp sgt i32 %118, 0
  br i1 %cmp155322.1371, label %for.body157.preheader.1375, label %for.inc196.1401

for.body157.preheader.1375:                       ; preds = %for.inc196.1
  %119 = or disjoint i64 %indvars.iv346, %81
  %arrayidx.i318.1372 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %119
  %wide.trip.count.1374 = zext nneg i32 %118 to i64
  %.idx482 = shl nuw nsw i64 %indvars.iv346, 4
  br label %for.body157.1380

for.body157.1380:                                 ; preds = %for.inc193.1397, %for.body157.preheader.1375
  %indvars.iv.1376 = phi i64 [ 0, %for.body157.preheader.1375 ], [ %indvars.iv.next.1395, %for.inc193.1397 ]
  %coef_ctr.0324.1377 = phi i32 [ %sub, %for.body157.preheader.1375 ], [ %coef_ctr.1.1394, %for.inc193.1397 ]
  %arrayidx159.1378 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1376
  %120 = load i32, ptr %arrayidx159.1378, align 4
  %cmp160.not.1379 = icmp eq i32 %120, 0
  br i1 %cmp160.not.1379, label %for.inc193.1397, label %if.then162.1393

if.then162.1393:                                  ; preds = %for.body157.1380
  %arrayidx164.1381 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1376
  %121 = load i32, ptr %arrayidx164.1381, align 4
  %add165.1382 = add i32 %coef_ctr.0324.1377, 1
  %add166.1383 = add i32 %add165.1382, %121
  %idxprom167.1384 = sext i32 %add166.1383 to i64
  %arrayidx168.1385 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom167.1384
  %122 = load i8, ptr %arrayidx168.1385, align 1
  %arrayidx173.1387 = getelementptr inbounds i8, ptr %arrayidx168.1385, i64 1
  %123 = load i8, ptr %arrayidx173.1387, align 1
  %124 = load i64, ptr %arrayidx.i318.1372, align 16
  %125 = load i64, ptr %arrayidx9, align 8
  %or178.1389 = or i64 %125, %124
  store i64 %or178.1389, ptr %arrayidx9, align 8
  %126 = load ptr, ptr %cof, align 8
  %arrayidx183.1390 = getelementptr inbounds ptr, ptr %126, i64 %idxprom
  %127 = load ptr, ptr %arrayidx183.1390, align 8
  %128 = zext i8 %123 to i64
  %129 = getelementptr ptr, ptr %127, i64 %81
  %arrayidx187.1391 = getelementptr ptr, ptr %129, i64 %128
  %130 = load ptr, ptr %arrayidx187.1391, align 8
  %131 = zext i8 %122 to i64
  %132 = getelementptr i8, ptr %130, i64 %.idx482
  %arrayidx191.1392 = getelementptr i32, ptr %132, i64 %131
  store i32 %120, ptr %arrayidx191.1392, align 4
  br label %for.inc193.1397

for.inc193.1397:                                  ; preds = %if.then162.1393, %for.body157.1380
  %coef_ctr.1.1394 = phi i32 [ %add166.1383, %if.then162.1393 ], [ %coef_ctr.0324.1377, %for.body157.1380 ]
  %indvars.iv.next.1395 = add nuw nsw i64 %indvars.iv.1376, 1
  %exitcond.1396.not = icmp eq i64 %indvars.iv.next.1395, %wide.trip.count.1374
  br i1 %exitcond.1396.not, label %for.inc196.1401, label %for.body157.1380

for.inc196.1401:                                  ; preds = %for.inc193.1397, %for.inc196.1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %102, i32 noundef %82, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %133 = load i32, ptr %numcoeff, align 4
  %cmp155322.1.1 = icmp sgt i32 %133, 0
  br i1 %cmp155322.1.1, label %for.body157.preheader.1.1, label %for.inc213

for.body157.preheader.1.1:                        ; preds = %for.inc196.1401
  %134 = or disjoint i64 %indvars.iv.next349, %81
  %arrayidx.i318.1.1 = getelementptr inbounds [64 x i64], ptr @po2, i64 0, i64 %134
  %wide.trip.count.1.1 = zext nneg i32 %133 to i64
  %.idx483 = shl nuw nsw i64 %indvars.iv.next349, 4
  br label %for.body157.1.1

for.body157.1.1:                                  ; preds = %for.inc193.1.1, %for.body157.preheader.1.1
  %indvars.iv.1.1 = phi i64 [ 0, %for.body157.preheader.1.1 ], [ %indvars.iv.next.1.1, %for.inc193.1.1 ]
  %coef_ctr.0324.1.1 = phi i32 [ %sub, %for.body157.preheader.1.1 ], [ %coef_ctr.1.1.1, %for.inc193.1.1 ]
  %arrayidx159.1.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1.1
  %135 = load i32, ptr %arrayidx159.1.1, align 4
  %cmp160.not.1.1 = icmp eq i32 %135, 0
  br i1 %cmp160.not.1.1, label %for.inc193.1.1, label %if.then162.1.1

if.then162.1.1:                                   ; preds = %for.body157.1.1
  %arrayidx164.1.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1.1
  %136 = load i32, ptr %arrayidx164.1.1, align 4
  %add165.1.1 = add i32 %coef_ctr.0324.1.1, 1
  %add166.1.1 = add i32 %add165.1.1, %136
  %idxprom167.1.1 = sext i32 %add166.1.1 to i64
  %arrayidx168.1.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom167.1.1
  %137 = load i8, ptr %arrayidx168.1.1, align 1
  %arrayidx173.1.1 = getelementptr inbounds i8, ptr %arrayidx168.1.1, i64 1
  %138 = load i8, ptr %arrayidx173.1.1, align 1
  %139 = load i64, ptr %arrayidx.i318.1.1, align 8
  %140 = load i64, ptr %arrayidx9, align 8
  %or178.1.1 = or i64 %140, %139
  store i64 %or178.1.1, ptr %arrayidx9, align 8
  %141 = load ptr, ptr %cof, align 8
  %arrayidx183.1.1 = getelementptr inbounds ptr, ptr %141, i64 %idxprom
  %142 = load ptr, ptr %arrayidx183.1.1, align 8
  %143 = zext i8 %138 to i64
  %144 = getelementptr ptr, ptr %142, i64 %81
  %arrayidx187.1.1 = getelementptr ptr, ptr %144, i64 %143
  %145 = load ptr, ptr %arrayidx187.1.1, align 8
  %146 = zext i8 %137 to i64
  %147 = getelementptr i8, ptr %145, i64 %.idx483
  %arrayidx191.1.1 = getelementptr i32, ptr %147, i64 %146
  store i32 %135, ptr %arrayidx191.1.1, align 4
  br label %for.inc193.1.1

for.inc193.1.1:                                   ; preds = %if.then162.1.1, %for.body157.1.1
  %coef_ctr.1.1.1 = phi i32 [ %add166.1.1, %if.then162.1.1 ], [ %coef_ctr.0324.1.1, %for.body157.1.1 ]
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1.1, 1
  %exitcond.1.1.not = icmp eq i64 %indvars.iv.next.1.1, %wide.trip.count.1.1
  br i1 %exitcond.1.1.not, label %for.inc213, label %for.body157.1.1

if.else202:                                       ; preds = %for.body133
  %148 = load ptr, ptr %arrayidx204, align 8
  %arrayidx206 = getelementptr inbounds i8, ptr %148, i64 %indvars.iv346
  store i16 0, ptr %arrayidx206, align 1
  %149 = load ptr, ptr %arrayidx209, align 8
  %arrayidx211 = getelementptr inbounds i8, ptr %149, i64 %indvars.iv346
  store i16 0, ptr %arrayidx211, align 1
  br label %for.inc213

for.inc213:                                       ; preds = %for.inc193.1.1, %for.inc196.1401, %if.else202
  br i1 %cmp131, label %for.body133, label %for.inc216

for.inc216:                                       ; preds = %for.inc213
  br i1 %cmp127, label %for.cond130.preheader, label %if.end219

if.end219:                                        ; preds = %for.inc216, %for.inc122
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @readCompCoeff8x8MB_CAVLC(ptr noundef %currMB, i32 noundef %pl, ptr nocapture noundef readonly %InvLevelScale8x8, i32 noundef %qp_per, i32 noundef %cbp, ptr nocapture noundef readonly %nzcoeff) unnamed_addr #3 {
entry:
  %levarr = alloca [16 x i32], align 16
  %runarr = alloca [16 x i32], align 16
  %numcoeff = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %levarr) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(64) %levarr, i8 0, i64 64, i1 false)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(64) %runarr, i8 0, i64 64, i1 false)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %numcoeff) #14
  %0 = load ptr, ptr %currMB, align 8
  %p_Vid1 = getelementptr inbounds i8, ptr %currMB, i64 8
  %1 = load ptr, ptr %p_Vid1, align 8
  %structure = getelementptr inbounds i8, ptr %1, i64 848876
  %2 = load i32, ptr %structure, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %mb_field = getelementptr inbounds i8, ptr %currMB, i64 384
  %3 = load i32, ptr %mb_field, align 8
  %tobool.not = icmp eq i32 %3, 0
  %4 = select i1 %tobool.not, ptr @SNGL_SCAN8x8, ptr @FIELD_SCAN8x8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %cond = phi ptr [ @FIELD_SCAN8x8, %entry ], [ %4, %land.rhs ]
  %mb_type = getelementptr inbounds i8, ptr %currMB, i64 152
  %5 = load i16, ptr %mb_type, align 8
  %6 = and i16 %5, -5
  %narrow = icmp ne i16 %6, 10
  %cond8 = sext i1 %narrow to i32
  %cbp_blk = getelementptr inbounds i8, ptr %currMB, i64 288
  %idxprom = zext nneg i32 %pl to i64
  %arrayidx = getelementptr inbounds [3 x i64], ptr %cbp_blk, i64 0, i64 %idxprom
  switch i16 %5, label %if.else25 [
    i16 10, label %if.then
    i16 14, label %if.then
  ]

if.then:                                          ; preds = %land.end, %land.end
  %switch.selectcmp = icmp eq i32 %pl, 1
  %switch.select = select i1 %switch.selectcmp, i32 5, i32 10
  %switch.selectcmp333 = icmp eq i32 %pl, 0
  %switch.select334 = select i1 %switch.selectcmp333, i32 2, i32 %switch.select
  br label %if.end36

if.else25:                                        ; preds = %land.end
  %switch.selectcmp335 = icmp eq i32 %pl, 1
  %switch.select336 = select i1 %switch.selectcmp335, i32 3, i32 8
  %switch.selectcmp337 = icmp eq i32 %pl, 0
  %switch.select338 = select i1 %switch.selectcmp337, i32 0, i32 %switch.select336
  br label %if.end36

if.end36:                                         ; preds = %if.else25, %if.then
  %cur_context.0 = phi i32 [ %switch.select334, %if.then ], [ %switch.select338, %if.else25 ]
  %is_lossless = getelementptr inbounds i8, ptr %currMB, i64 92
  %7 = load i32, ptr %is_lossless, align 4
  %cmp37 = icmp eq i32 %7, 0
  %mb_rres = getelementptr inbounds i8, ptr %0, i64 1264
  br i1 %cmp37, label %for.body, label %for.cond135.preheader

for.body:                                         ; preds = %if.end36, %for.inc127
  %cmp40 = phi i1 [ false, %for.inc127 ], [ true, %if.end36 ]
  %indvars.iv478 = phi i64 [ 2, %for.inc127 ], [ 0, %if.end36 ]
  %8 = shl nuw nsw i64 %indvars.iv478, 2
  %arrayidx115 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %indvars.iv478
  %9 = or disjoint i64 %indvars.iv478, 1
  %arrayidx120 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %9
  %10 = trunc nuw nsw i64 %indvars.iv478 to i32
  %11 = trunc nuw nsw i64 %indvars.iv478 to i32
  %12 = or disjoint i32 %11, 1
  br label %for.body45

for.body45:                                       ; preds = %for.body, %for.inc124
  %cmp43 = phi i1 [ true, %for.body ], [ false, %for.inc124 ]
  %indvars.iv465 = phi i64 [ 0, %for.body ], [ 2, %for.inc124 ]
  %13 = shl nuw nsw i64 %indvars.iv465, 2
  %14 = lshr exact i64 %indvars.iv465, 1
  %15 = or disjoint i64 %14, %indvars.iv478
  %16 = trunc nuw nsw i64 %15 to i32
  %shl47 = shl nuw nsw i32 1, %16
  %and = and i32 %shl47, %cbp
  %tobool48.not = icmp eq i32 %and, 0
  br i1 %tobool48.not, label %if.else113, label %for.cond50.preheader

for.cond50.preheader:                             ; preds = %for.body45
  %17 = or disjoint i64 %indvars.iv465, %8
  %18 = trunc nuw nsw i64 %17 to i32
  %shl75 = shl nuw nsw i32 51, %18
  %conv76 = zext nneg i32 %shl75 to i64
  %19 = trunc nuw nsw i64 %indvars.iv465 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %19, i32 noundef %10, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %20 = load i32, ptr %numcoeff, align 4
  %cmp62347 = icmp sgt i32 %20, 0
  br i1 %cmp62347, label %for.body64.lr.ph, label %for.inc107

for.body64.lr.ph:                                 ; preds = %for.cond50.preheader
  %wide.trip.count417 = zext nneg i32 %20 to i64
  br label %for.body64

for.body64:                                       ; preds = %for.body64.lr.ph, %for.inc
  %indvars.iv414 = phi i64 [ 0, %for.body64.lr.ph ], [ %indvars.iv.next415, %for.inc ]
  %coef_ctr.0349 = phi i32 [ %cond8, %for.body64.lr.ph ], [ %coef_ctr.1, %for.inc ]
  %arrayidx66 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv414
  %21 = load i32, ptr %arrayidx66, align 4
  %cmp67.not = icmp eq i32 %21, 0
  br i1 %cmp67.not, label %for.inc, label %if.then69

if.then69:                                        ; preds = %for.body64
  %arrayidx71 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv414
  %22 = load i32, ptr %arrayidx71, align 4
  %add72 = add i32 %coef_ctr.0349, 1
  %add73 = add i32 %add72, %22
  %23 = load i64, ptr %arrayidx, align 8
  %or = or i64 %23, %conv76
  store i64 %or, ptr %arrayidx, align 8
  %shl77 = shl i32 %add73, 2
  %idxprom82 = sext i32 %shl77 to i64
  %arrayidx83 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom82
  %24 = load i8, ptr %arrayidx83, align 1
  %arrayidx88 = getelementptr inbounds i8, ptr %arrayidx83, i64 1
  %25 = load i8, ptr %arrayidx88, align 1
  %conv89 = zext i8 %25 to i64
  %idxprom92 = zext i8 %25 to i64
  %idxprom94 = zext i8 %24 to i64
  %arrayidx95 = getelementptr inbounds [8 x i32], ptr %InvLevelScale8x8, i64 %idxprom92, i64 %idxprom94
  %26 = load i32, ptr %arrayidx95, align 4
  %mul96 = mul nsw i32 %26, %21
  %shl97 = shl i32 %mul96, %qp_per
  %add.i = add nsw i32 %shl97, 32
  %shr.i = ashr i32 %add.i, 6
  %27 = load ptr, ptr %mb_rres, align 8
  %arrayidx99 = getelementptr inbounds ptr, ptr %27, i64 %idxprom
  %28 = load ptr, ptr %arrayidx99, align 8
  %29 = getelementptr inbounds ptr, ptr %28, i64 %8
  %arrayidx102 = getelementptr inbounds ptr, ptr %29, i64 %conv89
  %30 = load ptr, ptr %arrayidx102, align 8
  %31 = zext i8 %24 to i64
  %32 = getelementptr inbounds i32, ptr %30, i64 %13
  %arrayidx105 = getelementptr inbounds i32, ptr %32, i64 %31
  store i32 %shr.i, ptr %arrayidx105, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body64, %if.then69
  %coef_ctr.1 = phi i32 [ %add73, %if.then69 ], [ %coef_ctr.0349, %for.body64 ]
  %indvars.iv.next415 = add nuw nsw i64 %indvars.iv414, 1
  %exitcond418.not = icmp eq i64 %indvars.iv.next415, %wide.trip.count417
  br i1 %exitcond418.not, label %for.inc107, label %for.body64

for.inc107:                                       ; preds = %for.inc, %for.cond50.preheader
  %33 = trunc nuw nsw i64 %indvars.iv465 to i32
  %34 = or disjoint i32 %33, 1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %34, i32 noundef %10, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %35 = load i32, ptr %numcoeff, align 4
  %cmp62347.1 = icmp sgt i32 %35, 0
  br i1 %cmp62347.1, label %for.body64.lr.ph.1, label %for.inc107.1

for.body64.lr.ph.1:                               ; preds = %for.inc107
  %wide.trip.count417.1 = zext nneg i32 %35 to i64
  br label %for.body64.1

for.body64.1:                                     ; preds = %for.inc.1, %for.body64.lr.ph.1
  %indvars.iv414.1 = phi i64 [ 0, %for.body64.lr.ph.1 ], [ %indvars.iv.next415.1, %for.inc.1 ]
  %coef_ctr.0349.1 = phi i32 [ %cond8, %for.body64.lr.ph.1 ], [ %coef_ctr.1.1, %for.inc.1 ]
  %arrayidx66.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv414.1
  %36 = load i32, ptr %arrayidx66.1, align 4
  %cmp67.not.1 = icmp eq i32 %36, 0
  br i1 %cmp67.not.1, label %for.inc.1, label %if.then69.1

if.then69.1:                                      ; preds = %for.body64.1
  %arrayidx71.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv414.1
  %37 = load i32, ptr %arrayidx71.1, align 4
  %add72.1 = add i32 %coef_ctr.0349.1, 1
  %add73.1 = add i32 %add72.1, %37
  %38 = load i64, ptr %arrayidx, align 8
  %or.1 = or i64 %38, %conv76
  store i64 %or.1, ptr %arrayidx, align 8
  %shl77.1 = shl i32 %add73.1, 2
  %add81.1 = or disjoint i32 %shl77.1, 1
  %idxprom82.1 = sext i32 %add81.1 to i64
  %arrayidx83.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom82.1
  %39 = load i8, ptr %arrayidx83.1, align 1
  %arrayidx88.1 = getelementptr inbounds i8, ptr %arrayidx83.1, i64 1
  %40 = load i8, ptr %arrayidx88.1, align 1
  %conv89.1 = zext i8 %40 to i64
  %idxprom92.1 = zext i8 %40 to i64
  %idxprom94.1 = zext i8 %39 to i64
  %arrayidx95.1 = getelementptr inbounds [8 x i32], ptr %InvLevelScale8x8, i64 %idxprom92.1, i64 %idxprom94.1
  %41 = load i32, ptr %arrayidx95.1, align 4
  %mul96.1 = mul nsw i32 %41, %36
  %shl97.1 = shl i32 %mul96.1, %qp_per
  %add.i.1 = add nsw i32 %shl97.1, 32
  %shr.i.1 = ashr i32 %add.i.1, 6
  %42 = load ptr, ptr %mb_rres, align 8
  %arrayidx99.1 = getelementptr inbounds ptr, ptr %42, i64 %idxprom
  %43 = load ptr, ptr %arrayidx99.1, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %8
  %arrayidx102.1 = getelementptr inbounds ptr, ptr %44, i64 %conv89.1
  %45 = load ptr, ptr %arrayidx102.1, align 8
  %46 = zext i8 %39 to i64
  %47 = getelementptr inbounds i32, ptr %45, i64 %13
  %arrayidx105.1 = getelementptr inbounds i32, ptr %47, i64 %46
  store i32 %shr.i.1, ptr %arrayidx105.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then69.1, %for.body64.1
  %coef_ctr.1.1 = phi i32 [ %add73.1, %if.then69.1 ], [ %coef_ctr.0349.1, %for.body64.1 ]
  %indvars.iv.next415.1 = add nuw nsw i64 %indvars.iv414.1, 1
  %exitcond418.1.not = icmp eq i64 %indvars.iv.next415.1, %wide.trip.count417.1
  br i1 %exitcond418.1.not, label %for.inc107.1, label %for.body64.1

for.inc107.1:                                     ; preds = %for.inc.1, %for.inc107
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %19, i32 noundef %12, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %48 = load i32, ptr %numcoeff, align 4
  %cmp62347.1425 = icmp sgt i32 %48, 0
  br i1 %cmp62347.1425, label %for.body64.lr.ph.1427, label %for.inc107.1464

for.body64.lr.ph.1427:                            ; preds = %for.inc107.1
  %wide.trip.count417.1426 = zext nneg i32 %48 to i64
  br label %for.body64.1432

for.body64.1432:                                  ; preds = %for.inc.1462, %for.body64.lr.ph.1427
  %indvars.iv414.1428 = phi i64 [ 0, %for.body64.lr.ph.1427 ], [ %indvars.iv.next415.1460, %for.inc.1462 ]
  %coef_ctr.0349.1429 = phi i32 [ %cond8, %for.body64.lr.ph.1427 ], [ %coef_ctr.1.1459, %for.inc.1462 ]
  %arrayidx66.1430 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv414.1428
  %49 = load i32, ptr %arrayidx66.1430, align 4
  %cmp67.not.1431 = icmp eq i32 %49, 0
  br i1 %cmp67.not.1431, label %for.inc.1462, label %if.then69.1458

if.then69.1458:                                   ; preds = %for.body64.1432
  %arrayidx71.1433 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv414.1428
  %50 = load i32, ptr %arrayidx71.1433, align 4
  %add72.1434 = add i32 %coef_ctr.0349.1429, 1
  %add73.1435 = add i32 %add72.1434, %50
  %51 = load i64, ptr %arrayidx, align 8
  %or.1436 = or i64 %51, %conv76
  store i64 %or.1436, ptr %arrayidx, align 8
  %shl77.1437 = shl i32 %add73.1435, 2
  %add81.1438 = or disjoint i32 %shl77.1437, 2
  %idxprom82.1439 = sext i32 %add81.1438 to i64
  %arrayidx83.1440 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom82.1439
  %52 = load i8, ptr %arrayidx83.1440, align 1
  %arrayidx88.1442 = getelementptr inbounds i8, ptr %arrayidx83.1440, i64 1
  %53 = load i8, ptr %arrayidx88.1442, align 1
  %conv89.1443 = zext i8 %53 to i64
  %idxprom92.1444 = zext i8 %53 to i64
  %idxprom94.1445 = zext i8 %52 to i64
  %arrayidx95.1446 = getelementptr inbounds [8 x i32], ptr %InvLevelScale8x8, i64 %idxprom92.1444, i64 %idxprom94.1445
  %54 = load i32, ptr %arrayidx95.1446, align 4
  %mul96.1447 = mul nsw i32 %54, %49
  %shl97.1448 = shl i32 %mul96.1447, %qp_per
  %add.i.1449 = add nsw i32 %shl97.1448, 32
  %shr.i.1450 = ashr i32 %add.i.1449, 6
  %55 = load ptr, ptr %mb_rres, align 8
  %arrayidx99.1451 = getelementptr inbounds ptr, ptr %55, i64 %idxprom
  %56 = load ptr, ptr %arrayidx99.1451, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %8
  %arrayidx102.1454 = getelementptr inbounds ptr, ptr %57, i64 %conv89.1443
  %58 = load ptr, ptr %arrayidx102.1454, align 8
  %59 = zext i8 %52 to i64
  %60 = getelementptr inbounds i32, ptr %58, i64 %13
  %arrayidx105.1457 = getelementptr inbounds i32, ptr %60, i64 %59
  store i32 %shr.i.1450, ptr %arrayidx105.1457, align 4
  br label %for.inc.1462

for.inc.1462:                                     ; preds = %if.then69.1458, %for.body64.1432
  %coef_ctr.1.1459 = phi i32 [ %add73.1435, %if.then69.1458 ], [ %coef_ctr.0349.1429, %for.body64.1432 ]
  %indvars.iv.next415.1460 = add nuw nsw i64 %indvars.iv414.1428, 1
  %exitcond418.1461.not = icmp eq i64 %indvars.iv.next415.1460, %wide.trip.count417.1426
  br i1 %exitcond418.1461.not, label %for.inc107.1464, label %for.body64.1432

for.inc107.1464:                                  ; preds = %for.inc.1462, %for.inc107.1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %34, i32 noundef %12, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %61 = load i32, ptr %numcoeff, align 4
  %cmp62347.1.1 = icmp sgt i32 %61, 0
  br i1 %cmp62347.1.1, label %for.body64.lr.ph.1.1, label %for.inc124

for.body64.lr.ph.1.1:                             ; preds = %for.inc107.1464
  %wide.trip.count417.1.1 = zext nneg i32 %61 to i64
  br label %for.body64.1.1

for.body64.1.1:                                   ; preds = %for.inc.1.1, %for.body64.lr.ph.1.1
  %indvars.iv414.1.1 = phi i64 [ 0, %for.body64.lr.ph.1.1 ], [ %indvars.iv.next415.1.1, %for.inc.1.1 ]
  %coef_ctr.0349.1.1 = phi i32 [ %cond8, %for.body64.lr.ph.1.1 ], [ %coef_ctr.1.1.1, %for.inc.1.1 ]
  %arrayidx66.1.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv414.1.1
  %62 = load i32, ptr %arrayidx66.1.1, align 4
  %cmp67.not.1.1 = icmp eq i32 %62, 0
  br i1 %cmp67.not.1.1, label %for.inc.1.1, label %if.then69.1.1

if.then69.1.1:                                    ; preds = %for.body64.1.1
  %arrayidx71.1.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv414.1.1
  %63 = load i32, ptr %arrayidx71.1.1, align 4
  %add72.1.1 = add i32 %coef_ctr.0349.1.1, 1
  %add73.1.1 = add i32 %add72.1.1, %63
  %64 = load i64, ptr %arrayidx, align 8
  %or.1.1 = or i64 %64, %conv76
  store i64 %or.1.1, ptr %arrayidx, align 8
  %shl77.1.1 = shl i32 %add73.1.1, 2
  %add81.1.1 = or disjoint i32 %shl77.1.1, 3
  %idxprom82.1.1 = sext i32 %add81.1.1 to i64
  %arrayidx83.1.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom82.1.1
  %65 = load i8, ptr %arrayidx83.1.1, align 1
  %arrayidx88.1.1 = getelementptr inbounds i8, ptr %arrayidx83.1.1, i64 1
  %66 = load i8, ptr %arrayidx88.1.1, align 1
  %conv89.1.1 = zext i8 %66 to i64
  %idxprom92.1.1 = zext i8 %66 to i64
  %idxprom94.1.1 = zext i8 %65 to i64
  %arrayidx95.1.1 = getelementptr inbounds [8 x i32], ptr %InvLevelScale8x8, i64 %idxprom92.1.1, i64 %idxprom94.1.1
  %67 = load i32, ptr %arrayidx95.1.1, align 4
  %mul96.1.1 = mul nsw i32 %67, %62
  %shl97.1.1 = shl i32 %mul96.1.1, %qp_per
  %add.i.1.1 = add nsw i32 %shl97.1.1, 32
  %shr.i.1.1 = ashr i32 %add.i.1.1, 6
  %68 = load ptr, ptr %mb_rres, align 8
  %arrayidx99.1.1 = getelementptr inbounds ptr, ptr %68, i64 %idxprom
  %69 = load ptr, ptr %arrayidx99.1.1, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %8
  %arrayidx102.1.1 = getelementptr inbounds ptr, ptr %70, i64 %conv89.1.1
  %71 = load ptr, ptr %arrayidx102.1.1, align 8
  %72 = zext i8 %65 to i64
  %73 = getelementptr inbounds i32, ptr %71, i64 %13
  %arrayidx105.1.1 = getelementptr inbounds i32, ptr %73, i64 %72
  store i32 %shr.i.1.1, ptr %arrayidx105.1.1, align 4
  br label %for.inc.1.1

for.inc.1.1:                                      ; preds = %if.then69.1.1, %for.body64.1.1
  %coef_ctr.1.1.1 = phi i32 [ %add73.1.1, %if.then69.1.1 ], [ %coef_ctr.0349.1.1, %for.body64.1.1 ]
  %indvars.iv.next415.1.1 = add nuw nsw i64 %indvars.iv414.1.1, 1
  %exitcond418.1.1.not = icmp eq i64 %indvars.iv.next415.1.1, %wide.trip.count417.1.1
  br i1 %exitcond418.1.1.not, label %for.inc124, label %for.body64.1.1

if.else113:                                       ; preds = %for.body45
  %74 = load ptr, ptr %arrayidx115, align 8
  %arrayidx117 = getelementptr inbounds i8, ptr %74, i64 %indvars.iv465
  store i16 0, ptr %arrayidx117, align 1
  %75 = load ptr, ptr %arrayidx120, align 8
  %arrayidx122 = getelementptr inbounds i8, ptr %75, i64 %indvars.iv465
  store i16 0, ptr %arrayidx122, align 1
  br label %for.inc124

for.inc124:                                       ; preds = %for.inc.1.1, %for.inc107.1464, %if.else113
  br i1 %cmp43, label %for.body45, label %for.inc127

for.inc127:                                       ; preds = %for.inc124
  br i1 %cmp40, label %for.body, label %if.end234

for.cond135.preheader:                            ; preds = %if.end36, %for.inc231
  %cmp132 = phi i1 [ false, %for.inc231 ], [ true, %if.end36 ]
  %indvars.iv408 = phi i64 [ 2, %for.inc231 ], [ 0, %if.end36 ]
  %76 = shl nuw nsw i64 %indvars.iv408, 2
  %arrayidx219 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %indvars.iv408
  %77 = or disjoint i64 %indvars.iv408, 1
  %arrayidx224 = getelementptr inbounds ptr, ptr %nzcoeff, i64 %77
  %78 = trunc nuw nsw i64 %indvars.iv408 to i32
  %79 = trunc nuw nsw i64 %indvars.iv408 to i32
  %80 = or disjoint i32 %79, 1
  br label %for.body138

for.body138:                                      ; preds = %for.cond135.preheader, %for.inc228
  %cmp136 = phi i1 [ true, %for.cond135.preheader ], [ false, %for.inc228 ]
  %indvars.iv395 = phi i64 [ 0, %for.cond135.preheader ], [ 2, %for.inc228 ]
  %81 = lshr exact i64 %indvars.iv395, 1
  %82 = or disjoint i64 %81, %indvars.iv408
  %83 = trunc nuw nsw i64 %82 to i32
  %shl143 = shl nuw nsw i32 1, %83
  %and144 = and i32 %shl143, %cbp
  %tobool145.not = icmp eq i32 %and144, 0
  br i1 %tobool145.not, label %if.else217, label %for.cond147.preheader

for.cond147.preheader:                            ; preds = %for.body138
  %84 = or disjoint i64 %indvars.iv395, %76
  %85 = trunc nuw nsw i64 %84 to i32
  %shl175 = shl nuw nsw i32 51, %85
  %conv176 = zext nneg i32 %shl175 to i64
  %86 = shl nuw nsw i64 %indvars.iv395, 2
  %87 = trunc nuw nsw i64 %indvars.iv395 to i32
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %87, i32 noundef %78, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %88 = load i32, ptr %numcoeff, align 4
  %cmp161340 = icmp sgt i32 %88, 0
  br i1 %cmp161340, label %for.body163.lr.ph, label %for.inc211

for.body163.lr.ph:                                ; preds = %for.cond147.preheader
  %wide.trip.count = zext nneg i32 %88 to i64
  br label %for.body163

for.body163:                                      ; preds = %for.body163.lr.ph, %for.inc208
  %indvars.iv = phi i64 [ 0, %for.body163.lr.ph ], [ %indvars.iv.next, %for.inc208 ]
  %coef_ctr.2342 = phi i32 [ %cond8, %for.body163.lr.ph ], [ %coef_ctr.3, %for.inc208 ]
  %arrayidx165 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv
  %89 = load i32, ptr %arrayidx165, align 4
  %cmp166.not = icmp eq i32 %89, 0
  br i1 %cmp166.not, label %for.inc208, label %if.then168

if.then168:                                       ; preds = %for.body163
  %arrayidx170 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv
  %90 = load i32, ptr %arrayidx170, align 4
  %add171 = add i32 %coef_ctr.2342, 1
  %add172 = add i32 %add171, %90
  %91 = load i64, ptr %arrayidx, align 8
  %or177 = or i64 %91, %conv176
  store i64 %or177, ptr %arrayidx, align 8
  %mul182 = shl nsw i32 %add172, 2
  %idxprom184 = sext i32 %mul182 to i64
  %arrayidx185 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom184
  %92 = load i8, ptr %arrayidx185, align 1
  %arrayidx192 = getelementptr inbounds i8, ptr %arrayidx185, i64 1
  %93 = load i8, ptr %arrayidx192, align 1
  %conv193 = zext i8 %93 to i64
  %94 = load ptr, ptr %mb_rres, align 8
  %arrayidx198 = getelementptr inbounds ptr, ptr %94, i64 %idxprom
  %95 = load ptr, ptr %arrayidx198, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %76
  %arrayidx202 = getelementptr inbounds ptr, ptr %96, i64 %conv193
  %97 = load ptr, ptr %arrayidx202, align 8
  %98 = zext i8 %92 to i64
  %99 = getelementptr inbounds i32, ptr %97, i64 %86
  %arrayidx206 = getelementptr inbounds i32, ptr %99, i64 %98
  store i32 %89, ptr %arrayidx206, align 4
  br label %for.inc208

for.inc208:                                       ; preds = %for.body163, %if.then168
  %coef_ctr.3 = phi i32 [ %add172, %if.then168 ], [ %coef_ctr.2342, %for.body163 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc211, label %for.body163

for.inc211:                                       ; preds = %for.inc208, %for.cond147.preheader
  %100 = trunc nuw nsw i64 %indvars.iv395 to i32
  %101 = or disjoint i32 %100, 1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %101, i32 noundef %78, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %102 = load i32, ptr %numcoeff, align 4
  %cmp161340.1 = icmp sgt i32 %102, 0
  br i1 %cmp161340.1, label %for.body163.lr.ph.1, label %for.inc211.1

for.body163.lr.ph.1:                              ; preds = %for.inc211
  %wide.trip.count.1 = zext nneg i32 %102 to i64
  br label %for.body163.1

for.body163.1:                                    ; preds = %for.inc208.1, %for.body163.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body163.lr.ph.1 ], [ %indvars.iv.next.1, %for.inc208.1 ]
  %coef_ctr.2342.1 = phi i32 [ %cond8, %for.body163.lr.ph.1 ], [ %coef_ctr.3.1, %for.inc208.1 ]
  %arrayidx165.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1
  %103 = load i32, ptr %arrayidx165.1, align 4
  %cmp166.not.1 = icmp eq i32 %103, 0
  br i1 %cmp166.not.1, label %for.inc208.1, label %if.then168.1

if.then168.1:                                     ; preds = %for.body163.1
  %arrayidx170.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1
  %104 = load i32, ptr %arrayidx170.1, align 4
  %add171.1 = add i32 %coef_ctr.2342.1, 1
  %add172.1 = add i32 %add171.1, %104
  %105 = load i64, ptr %arrayidx, align 8
  %or177.1 = or i64 %105, %conv176
  store i64 %or177.1, ptr %arrayidx, align 8
  %mul182.1 = shl nsw i32 %add172.1, 2
  %add183.1 = or disjoint i32 %mul182.1, 1
  %idxprom184.1 = sext i32 %add183.1 to i64
  %arrayidx185.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom184.1
  %106 = load i8, ptr %arrayidx185.1, align 1
  %arrayidx192.1 = getelementptr inbounds i8, ptr %arrayidx185.1, i64 1
  %107 = load i8, ptr %arrayidx192.1, align 1
  %conv193.1 = zext i8 %107 to i64
  %108 = load ptr, ptr %mb_rres, align 8
  %arrayidx198.1 = getelementptr inbounds ptr, ptr %108, i64 %idxprom
  %109 = load ptr, ptr %arrayidx198.1, align 8
  %110 = getelementptr inbounds ptr, ptr %109, i64 %76
  %arrayidx202.1 = getelementptr inbounds ptr, ptr %110, i64 %conv193.1
  %111 = load ptr, ptr %arrayidx202.1, align 8
  %112 = zext i8 %106 to i64
  %113 = getelementptr inbounds i32, ptr %111, i64 %86
  %arrayidx206.1 = getelementptr inbounds i32, ptr %113, i64 %112
  store i32 %103, ptr %arrayidx206.1, align 4
  br label %for.inc208.1

for.inc208.1:                                     ; preds = %if.then168.1, %for.body163.1
  %coef_ctr.3.1 = phi i32 [ %add172.1, %if.then168.1 ], [ %coef_ctr.2342.1, %for.body163.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %exitcond.1.not = icmp eq i64 %indvars.iv.next.1, %wide.trip.count.1
  br i1 %exitcond.1.not, label %for.inc211.1, label %for.body163.1

for.inc211.1:                                     ; preds = %for.inc208.1, %for.inc211
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %87, i32 noundef %80, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %114 = load i32, ptr %numcoeff, align 4
  %cmp161340.1362 = icmp sgt i32 %114, 0
  br i1 %cmp161340.1362, label %for.body163.lr.ph.1364, label %for.inc211.1394

for.body163.lr.ph.1364:                           ; preds = %for.inc211.1
  %wide.trip.count.1363 = zext nneg i32 %114 to i64
  br label %for.body163.1369

for.body163.1369:                                 ; preds = %for.inc208.1392, %for.body163.lr.ph.1364
  %indvars.iv.1365 = phi i64 [ 0, %for.body163.lr.ph.1364 ], [ %indvars.iv.next.1390, %for.inc208.1392 ]
  %coef_ctr.2342.1366 = phi i32 [ %cond8, %for.body163.lr.ph.1364 ], [ %coef_ctr.3.1389, %for.inc208.1392 ]
  %arrayidx165.1367 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1365
  %115 = load i32, ptr %arrayidx165.1367, align 4
  %cmp166.not.1368 = icmp eq i32 %115, 0
  br i1 %cmp166.not.1368, label %for.inc208.1392, label %if.then168.1388

if.then168.1388:                                  ; preds = %for.body163.1369
  %arrayidx170.1370 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1365
  %116 = load i32, ptr %arrayidx170.1370, align 4
  %add171.1371 = add i32 %coef_ctr.2342.1366, 1
  %add172.1372 = add i32 %add171.1371, %116
  %117 = load i64, ptr %arrayidx, align 8
  %or177.1373 = or i64 %117, %conv176
  store i64 %or177.1373, ptr %arrayidx, align 8
  %mul182.1374 = shl nsw i32 %add172.1372, 2
  %add183.1375 = or disjoint i32 %mul182.1374, 2
  %idxprom184.1376 = sext i32 %add183.1375 to i64
  %arrayidx185.1377 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom184.1376
  %118 = load i8, ptr %arrayidx185.1377, align 1
  %arrayidx192.1379 = getelementptr inbounds i8, ptr %arrayidx185.1377, i64 1
  %119 = load i8, ptr %arrayidx192.1379, align 1
  %conv193.1380 = zext i8 %119 to i64
  %120 = load ptr, ptr %mb_rres, align 8
  %arrayidx198.1381 = getelementptr inbounds ptr, ptr %120, i64 %idxprom
  %121 = load ptr, ptr %arrayidx198.1381, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %76
  %arrayidx202.1384 = getelementptr inbounds ptr, ptr %122, i64 %conv193.1380
  %123 = load ptr, ptr %arrayidx202.1384, align 8
  %124 = zext i8 %118 to i64
  %125 = getelementptr inbounds i32, ptr %123, i64 %86
  %arrayidx206.1387 = getelementptr inbounds i32, ptr %125, i64 %124
  store i32 %115, ptr %arrayidx206.1387, align 4
  br label %for.inc208.1392

for.inc208.1392:                                  ; preds = %if.then168.1388, %for.body163.1369
  %coef_ctr.3.1389 = phi i32 [ %add172.1372, %if.then168.1388 ], [ %coef_ctr.2342.1366, %for.body163.1369 ]
  %indvars.iv.next.1390 = add nuw nsw i64 %indvars.iv.1365, 1
  %exitcond.1391.not = icmp eq i64 %indvars.iv.next.1390, %wide.trip.count.1363
  br i1 %exitcond.1391.not, label %for.inc211.1394, label %for.body163.1369

for.inc211.1394:                                  ; preds = %for.inc208.1392, %for.inc211.1
  call fastcc void @readCoeff4x4_CAVLC(ptr noundef nonnull %currMB, i32 noundef %cur_context.0, i32 noundef %101, i32 noundef %80, ptr noundef nonnull %levarr, ptr noundef nonnull %runarr, ptr noundef nonnull %numcoeff)
  %126 = load i32, ptr %numcoeff, align 4
  %cmp161340.1.1 = icmp sgt i32 %126, 0
  br i1 %cmp161340.1.1, label %for.body163.lr.ph.1.1, label %for.inc228

for.body163.lr.ph.1.1:                            ; preds = %for.inc211.1394
  %wide.trip.count.1.1 = zext nneg i32 %126 to i64
  br label %for.body163.1.1

for.body163.1.1:                                  ; preds = %for.inc208.1.1, %for.body163.lr.ph.1.1
  %indvars.iv.1.1 = phi i64 [ 0, %for.body163.lr.ph.1.1 ], [ %indvars.iv.next.1.1, %for.inc208.1.1 ]
  %coef_ctr.2342.1.1 = phi i32 [ %cond8, %for.body163.lr.ph.1.1 ], [ %coef_ctr.3.1.1, %for.inc208.1.1 ]
  %arrayidx165.1.1 = getelementptr inbounds [16 x i32], ptr %levarr, i64 0, i64 %indvars.iv.1.1
  %127 = load i32, ptr %arrayidx165.1.1, align 4
  %cmp166.not.1.1 = icmp eq i32 %127, 0
  br i1 %cmp166.not.1.1, label %for.inc208.1.1, label %if.then168.1.1

if.then168.1.1:                                   ; preds = %for.body163.1.1
  %arrayidx170.1.1 = getelementptr inbounds [16 x i32], ptr %runarr, i64 0, i64 %indvars.iv.1.1
  %128 = load i32, ptr %arrayidx170.1.1, align 4
  %add171.1.1 = add i32 %coef_ctr.2342.1.1, 1
  %add172.1.1 = add i32 %add171.1.1, %128
  %129 = load i64, ptr %arrayidx, align 8
  %or177.1.1 = or i64 %129, %conv176
  store i64 %or177.1.1, ptr %arrayidx, align 8
  %mul182.1.1 = shl nsw i32 %add172.1.1, 2
  %add183.1.1 = or disjoint i32 %mul182.1.1, 3
  %idxprom184.1.1 = sext i32 %add183.1.1 to i64
  %arrayidx185.1.1 = getelementptr inbounds [2 x i8], ptr %cond, i64 %idxprom184.1.1
  %130 = load i8, ptr %arrayidx185.1.1, align 1
  %arrayidx192.1.1 = getelementptr inbounds i8, ptr %arrayidx185.1.1, i64 1
  %131 = load i8, ptr %arrayidx192.1.1, align 1
  %conv193.1.1 = zext i8 %131 to i64
  %132 = load ptr, ptr %mb_rres, align 8
  %arrayidx198.1.1 = getelementptr inbounds ptr, ptr %132, i64 %idxprom
  %133 = load ptr, ptr %arrayidx198.1.1, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %76
  %arrayidx202.1.1 = getelementptr inbounds ptr, ptr %134, i64 %conv193.1.1
  %135 = load ptr, ptr %arrayidx202.1.1, align 8
  %136 = zext i8 %130 to i64
  %137 = getelementptr inbounds i32, ptr %135, i64 %86
  %arrayidx206.1.1 = getelementptr inbounds i32, ptr %137, i64 %136
  store i32 %127, ptr %arrayidx206.1.1, align 4
  br label %for.inc208.1.1

for.inc208.1.1:                                   ; preds = %if.then168.1.1, %for.body163.1.1
  %coef_ctr.3.1.1 = phi i32 [ %add172.1.1, %if.then168.1.1 ], [ %coef_ctr.2342.1.1, %for.body163.1.1 ]
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1.1, 1
  %exitcond.1.1.not = icmp eq i64 %indvars.iv.next.1.1, %wide.trip.count.1.1
  br i1 %exitcond.1.1.not, label %for.inc228, label %for.body163.1.1

if.else217:                                       ; preds = %for.body138
  %138 = load ptr, ptr %arrayidx219, align 8
  %arrayidx221 = getelementptr inbounds i8, ptr %138, i64 %indvars.iv395
  store i16 0, ptr %arrayidx221, align 1
  %139 = load ptr, ptr %arrayidx224, align 8
  %arrayidx226 = getelementptr inbounds i8, ptr %139, i64 %indvars.iv395
  store i16 0, ptr %arrayidx226, align 1
  br label %for.inc228

for.inc228:                                       ; preds = %for.inc208.1.1, %for.inc211.1394, %if.else217
  br i1 %cmp136, label %for.body138, label %for.inc231

for.inc231:                                       ; preds = %for.inc228
  br i1 %cmp132, label %for.cond135.preheader, label %if.end234

if.end234:                                        ; preds = %for.inc231, %for.inc127
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %numcoeff) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %runarr) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %levarr) #14
  ret void
}

declare i32 @readSyntaxElement_NumCoeffTrailingOnes(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_NumCoeffTrailingOnesChromaDC(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_Level_VLC0(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_Level_VLCN(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_TotalZerosChromaDC(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_TotalZeros(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @readSyntaxElement_Run(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_ipcm(ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_intra16x16(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_intra4x4(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_intra8x8(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_skip(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_p_inter16x16(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_p_inter16x8(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_p_inter8x16(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_p_inter8x8(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_sp_skip(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_b_d8x8temporal(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_b_d4x4temporal(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_b_d8x8spatial(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_b_d4x4spatial(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @mb_pred_b_inter8x8(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #13

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #13

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #10 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nofree nounwind }
attributes #13 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unswitch.partial.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !12, !16}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
!17 = distinct !{!17, !12, !16}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.peeled.count", i32 1}
!21 = distinct !{!21, !12, !16}
!22 = distinct !{!22, !16, !12}
!23 = distinct !{!23, !20}
