	.text
	.file	"io_tiff.c"
	.file	0 "/home/yjs/workspace/x264-test/src" "ldecod_src/io_tiff.c" md5 0x7e25e706e2e225d573e969d40353a77d
	.file	1 "ldecod_src/inc" "typedefs.h" md5 0xe1393d024b72e653f4e6dbeffdb0b154
	.file	2 "ldecod_src/inc" "frame.h" md5 0xfd6ca9e1c707932f749220576db72b57
	.file	3 "ldecod_src/inc" "io_video.h" md5 0x1141c07f1801ad27d87214c419749431
	.globl	constructTiff                   # -- Begin function constructTiff
	.p2align	4, 0x90
	.type	constructTiff,@function
constructTiff:                          # @constructTiff
.Lfunc_begin0:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: constructTiff:t <- $rdi
	.loc	0 167 10 prologue_end           # ldecod_src/io_tiff.c:167:10
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdi)
	movq	$0, 16(%rdi)
	.loc	0 169 1                         # ldecod_src/io_tiff.c:169:1
	retq
.Ltmp0:
.Lfunc_end0:
	.size	constructTiff, .Lfunc_end0-constructTiff
	.cfi_endproc
                                        # -- End function
	.globl	destructTiff                    # -- Begin function destructTiff
	.p2align	4, 0x90
	.type	destructTiff,@function
destructTiff:                           # @destructTiff
.Lfunc_begin1:
	.loc	0 180 0                         # ldecod_src/io_tiff.c:180:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: destructTiff:t <- $rdi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp1:
	.loc	0 181 10 prologue_end           # ldecod_src/io_tiff.c:181:10
	movq	8(%rdi), %rdi
.Ltmp2:
	#DEBUG_VALUE: destructTiff:t <- $rbx
	.loc	0 181 7 is_stmt 0               # ldecod_src/io_tiff.c:181:7
	testq	%rdi, %rdi
.Ltmp3:
	.loc	0 181 7                         # ldecod_src/io_tiff.c:181:7
	je	.LBB1_2
.Ltmp4:
# %bb.1:                                # %if.then
	#DEBUG_VALUE: destructTiff:t <- $rbx
	.loc	0 183 5 is_stmt 1               # ldecod_src/io_tiff.c:183:5
	callq	free@PLT
.Ltmp5:
	.loc	0 184 21                        # ldecod_src/io_tiff.c:184:21
	movq	$0, 8(%rbx)
.Ltmp6:
.LBB1_2:                                # %if.end
	#DEBUG_VALUE: destructTiff:t <- $rbx
	.loc	0 186 10                        # ldecod_src/io_tiff.c:186:10
	movq	(%rbx), %rdi
	.loc	0 186 7 is_stmt 0               # ldecod_src/io_tiff.c:186:7
	testq	%rdi, %rdi
.Ltmp7:
	.loc	0 186 7                         # ldecod_src/io_tiff.c:186:7
	je	.LBB1_4
.Ltmp8:
# %bb.3:                                # %if.then4
	#DEBUG_VALUE: destructTiff:t <- $rbx
	.loc	0 188 5 is_stmt 1               # ldecod_src/io_tiff.c:188:5
	callq	free@PLT
.Ltmp9:
	.loc	0 189 12                        # ldecod_src/io_tiff.c:189:12
	movq	$0, (%rbx)
.Ltmp10:
.LBB1_4:                                # %if.end7
	#DEBUG_VALUE: destructTiff:t <- $rbx
	.loc	0 191 1 epilogue_begin          # ldecod_src/io_tiff.c:191:1
	popq	%rbx
.Ltmp11:
	#DEBUG_VALUE: destructTiff:t <- [DW_OP_LLVM_entry_value 1] $rdi
	.cfi_def_cfa_offset 8
	retq
.Ltmp12:
.Lfunc_end1:
	.size	destructTiff, .Lfunc_end1-destructTiff
	.cfi_endproc
	.file	4 "/usr/include" "stdlib.h" md5 0x02258fad21adf111bb9df9825e61954a
                                        # -- End function
	.globl	horizontal_half_1chan_cosite    # -- Begin function horizontal_half_1chan_cosite
	.p2align	4, 0x90
	.type	horizontal_half_1chan_cosite,@function
horizontal_half_1chan_cosite:           # @horizontal_half_1chan_cosite
.Lfunc_begin2:
	.loc	0 827 0                         # ldecod_src/io_tiff.c:827:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- $esi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- $edx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp13:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
                                        # kill: def $esi killed $esi def $rsi
	movq	%rsi, -64(%rsp)                 # 8-byte Spill
.Ltmp14:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- 0
	movl	%edx, -88(%rsp)                 # 4-byte Spill
.Ltmp15:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	.loc	0 833 15 prologue_end           # ldecod_src/io_tiff.c:833:15
	testl	%edx, %edx
.Ltmp16:
	.loc	0 833 3 is_stmt 0               # ldecod_src/io_tiff.c:833:3
	jle	.LBB2_25
.Ltmp17:
# %bb.1:                                # %for.cond1.preheader.lr.ph
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- 0
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movslq	%ecx, %r12
	leal	(%r12,%r12,2), %edx
	movslq	%edx, %r13
	leal	(%r12,%r12,4), %edx
	movslq	%edx, %rsi
	leal	(,%r12,8), %edx
	subl	%r12d, %edx
	movslq	%edx, %r10
	movslq	%r9d, %r9
.Ltmp18:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	leal	(%r12,%r12), %edx
	movslq	%edx, %r11
	movq	%r12, %rax
	negq	%rax
	movq	%rax, -112(%rsp)                # 8-byte Spill
	movq	%r13, %rax
	negq	%rax
	movq	%rax, -56(%rsp)                 # 8-byte Spill
	movq	%rsi, %rax
	negq	%rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	-64(%rsp), %rax                 # 8-byte Reload
	movl	%eax, %edx
	andl	$-2, %edx
	movl	%edx, -124(%rsp)                # 4-byte Spill
	.loc	0 833 3                         # ldecod_src/io_tiff.c:833:3
	leal	-17(%rax), %edx
	andl	$-2, %edx
	addl	$10, %edx
	movl	%edx, -92(%rsp)                 # 4-byte Spill
	movq	%r11, %rdx
	negq	%rdx
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	leaq	(,%r12,4), %rbx
	leal	(,%r12,4), %edx
	movslq	%edx, %r14
	movq	%r10, %rdx
	negq	%r14
	movq	%r14, -8(%rsp)                  # 8-byte Spill
	leaq	(,%r12,8), %r10
	negq	%r10
	movq	%r10, -16(%rsp)                 # 8-byte Spill
	leaq	(%rbx,%rbx,2), %r10
	negq	%rbx
	movq	%rbx, (%rsp)                    # 8-byte Spill
	negq	%r10
	movq	%r10, -24(%rsp)                 # 8-byte Spill
	leaq	(%rdx,%rdx), %r10
	negq	%r10
	movq	%r10, -32(%rsp)                 # 8-byte Spill
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	addq	%rsi, %rsi
	negq	%rsi
	movq	%rsi, -40(%rsp)                 # 8-byte Spill
	leaq	(,%r13,2), %rsi
	negq	%rsi
	movq	%rsi, -48(%rsp)                 # 8-byte Spill
	leaq	(%r12,%r12), %rsi
	negq	%rsi
	leal	-8(%rax), %r10d
	movl	%r10d, -68(%rsp)                # 4-byte Spill
	leal	-1(%rax), %r10d
	movl	%r10d, -128(%rsp)               # 4-byte Spill
	leal	-3(%rax), %r10d
	movl	%r10d, -72(%rsp)                # 4-byte Spill
	leal	-5(%rax), %r10d
	movl	%r10d, -76(%rsp)                # 4-byte Spill
	addl	$-7, %eax
	movl	%eax, -80(%rsp)                 # 4-byte Spill
	movq	%r9, -104(%rsp)                 # 8-byte Spill
	leaq	(%r9,%r9), %r15
	movq	%r11, -120(%rsp)                # 8-byte Spill
	leaq	(%r11,%r11), %rbp
	xorl	%eax, %eax
	movq	%r12, 48(%rsp)                  # 8-byte Spill
	movq	%r13, 40(%rsp)                  # 8-byte Spill
	movq	%rdx, 24(%rsp)                  # 8-byte Spill
	jmp	.LBB2_2
.Ltmp19:
	.p2align	4, 0x90
.LBB2_24:                               # %for.inc254
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	-84(%rsp), %eax                 # 4-byte Reload
.Ltmp20:
	.loc	0 833 24                        # ldecod_src/io_tiff.c:833:24
	incl	%eax
.Ltmp21:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- $eax
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	.loc	0 833 15                        # ldecod_src/io_tiff.c:833:15
	cmpl	-88(%rsp), %eax                 # 4-byte Folded Reload
	movq	48(%rsp), %r12                  # 8-byte Reload
	movq	40(%rsp), %r13                  # 8-byte Reload
	movq	24(%rsp), %rdx                  # 8-byte Reload
.Ltmp22:
	.loc	0 833 3                         # ldecod_src/io_tiff.c:833:3
	je	.LBB2_25
.Ltmp23:
.LBB2_2:                                # %for.cond1.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_11 Depth 2
                                        #     Child Loop BB2_19 Depth 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- $eax
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 0
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	%eax, -84(%rsp)                 # 4-byte Spill
.Ltmp24:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 841 26 is_stmt 1              # ldecod_src/io_tiff.c:841:26
	movzwl	(%rdi), %r9d
	.loc	0 842 38                        # ldecod_src/io_tiff.c:842:38
	movzwl	(%rdi,%r12,2), %r10d
	.loc	0 842 36 is_stmt 0              # ldecod_src/io_tiff.c:842:36
	addl	%r9d, %r10d
	.loc	0 843 38 is_stmt 1              # ldecod_src/io_tiff.c:843:38
	movzwl	(%rdi,%r13,2), %r11d
	.loc	0 843 36 is_stmt 0              # ldecod_src/io_tiff.c:843:36
	addl	%r9d, %r11d
	movq	32(%rsp), %rax                  # 8-byte Reload
	.loc	0 844 38 is_stmt 1              # ldecod_src/io_tiff.c:844:38
	movzwl	(%rdi,%rax,2), %ebx
	.loc	0 844 36 is_stmt 0              # ldecod_src/io_tiff.c:844:36
	addl	%r9d, %ebx
	.loc	0 845 38 is_stmt 1              # ldecod_src/io_tiff.c:845:38
	movzwl	(%rdi,%rdx,2), %r14d
	.loc	0 845 36 is_stmt 0              # ldecod_src/io_tiff.c:845:36
	addl	%r9d, %r14d
	.loc	0 841 23 is_stmt 1              # ldecod_src/io_tiff.c:841:23
	shll	$11, %r9d
	.loc	0 842 15                        # ldecod_src/io_tiff.c:842:15
	imull	$1228, %r10d, %r10d             # imm = 0x4CC
	.loc	0 842 9 is_stmt 0               # ldecod_src/io_tiff.c:842:9
	addl	%r9d, %r10d
	.loc	0 843 15 is_stmt 1              # ldecod_src/io_tiff.c:843:15
	imull	$-262, %r11d, %r9d              # imm = 0xFEFA
	.loc	0 844 15                        # ldecod_src/io_tiff.c:844:15
	imull	$47, %ebx, %r11d
	.loc	0 843 9                         # ldecod_src/io_tiff.c:843:9
	addl	%r9d, %r11d
	.loc	0 844 9                         # ldecod_src/io_tiff.c:844:9
	addl	%r10d, %r11d
	.loc	0 845 15                        # ldecod_src/io_tiff.c:845:15
	leal	(%r14,%r14,4), %r9d
	leal	(%r14,%r9,2), %r9d
	.loc	0 845 9 is_stmt 0               # ldecod_src/io_tiff.c:845:9
	addl	%r11d, %r9d
.Ltmp25:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	movl	$0, %r10d
.Ltmp26:
	.loc	0 846 18 is_stmt 1              # ldecod_src/io_tiff.c:846:18
	cmpl	$-6143, %r9d                    # imm = 0xE801
.Ltmp27:
	.loc	0 846 11 is_stmt 0              # ldecod_src/io_tiff.c:846:11
	jl	.LBB2_4
.Ltmp28:
# %bb.3:                                # %if.else
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 845 56 is_stmt 1              # ldecod_src/io_tiff.c:845:56
	leal	2048(%r9), %r10d
.Ltmp29:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	.loc	0 845 63 is_stmt 0              # ldecod_src/io_tiff.c:845:63
	addl	$6143, %r9d                     # imm = 0x17FF
	testl	%r10d, %r10d
	cmovnsl	%r10d, %r9d
	sarl	$12, %r9d
.Ltmp30:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r9d
	.loc	0 0 63                          # ldecod_src/io_tiff.c:0:63
	movl	112(%rsp), %r10d
.Ltmp31:
	.loc	0 848 16 is_stmt 1              # ldecod_src/io_tiff.c:848:16
	cmpl	%r10d, %r9d
	cmovgel	%r10d, %r9d
.Ltmp32:
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	%r9d, %r10d
.Ltmp33:
.LBB2_4:                                # %if.end68
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	.loc	0 850 12 is_stmt 1              # ldecod_src/io_tiff.c:850:12
	movw	%r10w, (%r8)
.Ltmp34:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- undef
	.loc	0 0 12 is_stmt 0                # ldecod_src/io_tiff.c:0:12
	movq	-120(%rsp), %r10                # 8-byte Reload
.Ltmp35:
	.loc	0 852 11 is_stmt 1              # ldecod_src/io_tiff.c:852:11
	leaq	(%rdi,%r10,2), %r9
.Ltmp36:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r9
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 2
	.loc	0 841 26                        # ldecod_src/io_tiff.c:841:26
	movzwl	(%rdi,%r10,2), %edi
	.loc	0 841 23 is_stmt 0              # ldecod_src/io_tiff.c:841:23
	shll	$11, %edi
	movq	-112(%rsp), %r10                # 8-byte Reload
	.loc	0 842 18 is_stmt 1              # ldecod_src/io_tiff.c:842:18
	movzwl	(%r9,%r10,2), %r10d
	.loc	0 842 38 is_stmt 0              # ldecod_src/io_tiff.c:842:38
	movzwl	(%r9,%r12,2), %r11d
	.loc	0 842 36                        # ldecod_src/io_tiff.c:842:36
	addl	%r10d, %r11d
	.loc	0 842 15                        # ldecod_src/io_tiff.c:842:15
	imull	$1228, %r11d, %r10d             # imm = 0x4CC
	.loc	0 842 9                         # ldecod_src/io_tiff.c:842:9
	addl	%edi, %r10d
	movq	8(%rsp), %rdi                   # 8-byte Reload
	.loc	0 843 18 is_stmt 1              # ldecod_src/io_tiff.c:843:18
	movzwl	(%r9,%rdi,2), %edi
	.loc	0 843 38 is_stmt 0              # ldecod_src/io_tiff.c:843:38
	movzwl	(%r9,%r13,2), %r11d
	.loc	0 843 36                        # ldecod_src/io_tiff.c:843:36
	addl	%edi, %r11d
	.loc	0 843 15                        # ldecod_src/io_tiff.c:843:15
	imull	$-262, %r11d, %r11d             # imm = 0xFEFA
	.loc	0 844 38 is_stmt 1              # ldecod_src/io_tiff.c:844:38
	movzwl	(%r9,%rax,2), %ebx
	.loc	0 844 36 is_stmt 0              # ldecod_src/io_tiff.c:844:36
	addl	%edi, %ebx
	.loc	0 844 15                        # ldecod_src/io_tiff.c:844:15
	imull	$47, %ebx, %edi
	.loc	0 843 9 is_stmt 1               # ldecod_src/io_tiff.c:843:9
	addl	%r11d, %edi
	.loc	0 844 9                         # ldecod_src/io_tiff.c:844:9
	addl	%r10d, %edi
	movq	(%rsp), %r10                    # 8-byte Reload
	.loc	0 845 18                        # ldecod_src/io_tiff.c:845:18
	movzwl	(%r10,%r9), %r10d
	.loc	0 845 38 is_stmt 0              # ldecod_src/io_tiff.c:845:38
	movzwl	(%r9,%rdx,2), %r11d
	.loc	0 845 36                        # ldecod_src/io_tiff.c:845:36
	addl	%r10d, %r11d
	.loc	0 845 15                        # ldecod_src/io_tiff.c:845:15
	leal	(%r11,%r11,4), %r10d
	leal	(%r11,%r10,2), %r10d
	.loc	0 845 9                         # ldecod_src/io_tiff.c:845:9
	addl	%edi, %r10d
.Ltmp37:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%edi, %edi
	movl	$0, %r11d
.Ltmp38:
	.loc	0 846 18 is_stmt 1              # ldecod_src/io_tiff.c:846:18
	cmpl	$-6143, %r10d                   # imm = 0xE801
.Ltmp39:
	.loc	0 846 11 is_stmt 0              # ldecod_src/io_tiff.c:846:11
	jl	.LBB2_6
.Ltmp40:
# %bb.5:                                # %if.else.1
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r9
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	.loc	0 845 56 is_stmt 1              # ldecod_src/io_tiff.c:845:56
	leal	2048(%r10), %r11d
.Ltmp41:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r11d
	.loc	0 845 63 is_stmt 0              # ldecod_src/io_tiff.c:845:63
	addl	$6143, %r10d                    # imm = 0x17FF
	testl	%r11d, %r11d
	cmovnsl	%r11d, %r10d
	sarl	$12, %r10d
.Ltmp42:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	.loc	0 0 63                          # ldecod_src/io_tiff.c:0:63
	movl	112(%rsp), %r11d
.Ltmp43:
	.loc	0 848 16 is_stmt 1              # ldecod_src/io_tiff.c:848:16
	cmpl	%r11d, %r10d
	cmovgel	%r11d, %r10d
.Ltmp44:
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	%r10d, %r11d
.Ltmp45:
.LBB2_6:                                # %if.end68.1
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r9
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 2
	movq	-104(%rsp), %r10                # 8-byte Reload
	leaq	(%r8,%r10,2), %r8
.Ltmp46:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r11d
	.loc	0 850 12 is_stmt 1              # ldecod_src/io_tiff.c:850:12
	movw	%r11w, (%r8)
.Ltmp47:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- undef
	.loc	0 0 12 is_stmt 0                # ldecod_src/io_tiff.c:0:12
	movq	-120(%rsp), %r10                # 8-byte Reload
	.loc	0 852 11 is_stmt 1              # ldecod_src/io_tiff.c:852:11
	leaq	(%r9,%r10,2), %r14
.Ltmp48:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r14
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 4
	.loc	0 841 26                        # ldecod_src/io_tiff.c:841:26
	movzwl	(%r9,%r10,2), %r9d
	.loc	0 841 23 is_stmt 0              # ldecod_src/io_tiff.c:841:23
	shll	$11, %r9d
	movq	-112(%rsp), %r10                # 8-byte Reload
	.loc	0 842 18 is_stmt 1              # ldecod_src/io_tiff.c:842:18
	movzwl	(%r14,%r10,2), %r10d
	.loc	0 842 38 is_stmt 0              # ldecod_src/io_tiff.c:842:38
	movzwl	(%r14,%r12,2), %r11d
.Ltmp49:
	.loc	0 842 36                        # ldecod_src/io_tiff.c:842:36
	addl	%r10d, %r11d
	.loc	0 842 15                        # ldecod_src/io_tiff.c:842:15
	imull	$1228, %r11d, %r10d             # imm = 0x4CC
	.loc	0 842 9                         # ldecod_src/io_tiff.c:842:9
	addl	%r9d, %r10d
	movq	-56(%rsp), %r9                  # 8-byte Reload
	.loc	0 843 18 is_stmt 1              # ldecod_src/io_tiff.c:843:18
	movzwl	(%r14,%r9,2), %r9d
	.loc	0 843 38 is_stmt 0              # ldecod_src/io_tiff.c:843:38
	movzwl	(%r14,%r13,2), %r11d
	.loc	0 843 36                        # ldecod_src/io_tiff.c:843:36
	addl	%r9d, %r11d
	movq	-8(%rsp), %r9                   # 8-byte Reload
	.loc	0 844 18 is_stmt 1              # ldecod_src/io_tiff.c:844:18
	movzwl	(%r14,%r9,2), %r9d
	.loc	0 844 38 is_stmt 0              # ldecod_src/io_tiff.c:844:38
	movzwl	(%r14,%rax,2), %ebx
	.loc	0 844 36                        # ldecod_src/io_tiff.c:844:36
	addl	%r9d, %ebx
	.loc	0 843 15 is_stmt 1              # ldecod_src/io_tiff.c:843:15
	imull	$-262, %r11d, %r9d              # imm = 0xFEFA
	.loc	0 844 15                        # ldecod_src/io_tiff.c:844:15
	imull	$47, %ebx, %r11d
	.loc	0 843 9                         # ldecod_src/io_tiff.c:843:9
	addl	%r9d, %r11d
	.loc	0 844 9                         # ldecod_src/io_tiff.c:844:9
	addl	%r10d, %r11d
	movq	-16(%rsp), %r9                  # 8-byte Reload
	.loc	0 845 18                        # ldecod_src/io_tiff.c:845:18
	movzwl	(%r9,%r14), %r9d
	.loc	0 845 38 is_stmt 0              # ldecod_src/io_tiff.c:845:38
	movzwl	(%r14,%rdx,2), %r10d
	.loc	0 845 36                        # ldecod_src/io_tiff.c:845:36
	addl	%r9d, %r10d
	.loc	0 845 15                        # ldecod_src/io_tiff.c:845:15
	leal	(%r10,%r10,4), %r9d
	leal	(%r10,%r9,2), %r9d
	.loc	0 845 9                         # ldecod_src/io_tiff.c:845:9
	addl	%r11d, %r9d
.Ltmp50:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 846 18 is_stmt 1              # ldecod_src/io_tiff.c:846:18
	cmpl	$-6143, %r9d                    # imm = 0xE801
.Ltmp51:
	.loc	0 846 11 is_stmt 0              # ldecod_src/io_tiff.c:846:11
	jl	.LBB2_8
.Ltmp52:
# %bb.7:                                # %if.else.2
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r14
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 845 56 is_stmt 1              # ldecod_src/io_tiff.c:845:56
	leal	2048(%r9), %edi
.Ltmp53:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $edi
	.loc	0 845 63 is_stmt 0              # ldecod_src/io_tiff.c:845:63
	addl	$6143, %r9d                     # imm = 0x17FF
	testl	%edi, %edi
	cmovnsl	%edi, %r9d
	sarl	$12, %r9d
.Ltmp54:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r9d
	.loc	0 0 63                          # ldecod_src/io_tiff.c:0:63
	movl	112(%rsp), %edi
.Ltmp55:
	.loc	0 848 16 is_stmt 1              # ldecod_src/io_tiff.c:848:16
	cmpl	%edi, %r9d
	cmovgel	%edi, %r9d
.Ltmp56:
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	%r9d, %edi
.Ltmp57:
.LBB2_8:                                # %if.end68.2
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $r14
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 4
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 4
	movq	-104(%rsp), %r9                 # 8-byte Reload
	leaq	(%r8,%r9,2), %r8
.Ltmp58:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $edi
	.loc	0 850 12 is_stmt 1              # ldecod_src/io_tiff.c:850:12
	movw	%di, (%r8)
.Ltmp59:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- undef
	.loc	0 0 12 is_stmt 0                # ldecod_src/io_tiff.c:0:12
	movq	-120(%rsp), %r9                 # 8-byte Reload
	.loc	0 852 11 is_stmt 1              # ldecod_src/io_tiff.c:852:11
	leaq	(%r14,%r9,2), %rdi
.Ltmp60:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	.loc	0 841 26                        # ldecod_src/io_tiff.c:841:26
	movzwl	(%r14,%r9,2), %r9d
	.loc	0 841 23 is_stmt 0              # ldecod_src/io_tiff.c:841:23
	shll	$11, %r9d
	movq	-112(%rsp), %r10                # 8-byte Reload
	.loc	0 842 18 is_stmt 1              # ldecod_src/io_tiff.c:842:18
	movzwl	(%rdi,%r10,2), %r10d
	.loc	0 842 38 is_stmt 0              # ldecod_src/io_tiff.c:842:38
	movzwl	(%rdi,%r12,2), %r11d
	.loc	0 842 36                        # ldecod_src/io_tiff.c:842:36
	addl	%r10d, %r11d
	.loc	0 842 15                        # ldecod_src/io_tiff.c:842:15
	imull	$1228, %r11d, %r10d             # imm = 0x4CC
	.loc	0 842 9                         # ldecod_src/io_tiff.c:842:9
	addl	%r9d, %r10d
	movq	-56(%rsp), %r9                  # 8-byte Reload
	.loc	0 843 18 is_stmt 1              # ldecod_src/io_tiff.c:843:18
	movzwl	(%rdi,%r9,2), %r9d
	.loc	0 843 38 is_stmt 0              # ldecod_src/io_tiff.c:843:38
	movzwl	(%rdi,%r13,2), %r11d
	.loc	0 843 36                        # ldecod_src/io_tiff.c:843:36
	addl	%r9d, %r11d
	movq	16(%rsp), %r9                   # 8-byte Reload
	.loc	0 844 18 is_stmt 1              # ldecod_src/io_tiff.c:844:18
	movzwl	(%rdi,%r9,2), %r9d
	.loc	0 844 38 is_stmt 0              # ldecod_src/io_tiff.c:844:38
	movzwl	(%rdi,%rax,2), %ebx
	.loc	0 844 36                        # ldecod_src/io_tiff.c:844:36
	addl	%r9d, %ebx
	.loc	0 843 15 is_stmt 1              # ldecod_src/io_tiff.c:843:15
	imull	$-262, %r11d, %r9d              # imm = 0xFEFA
	.loc	0 844 15                        # ldecod_src/io_tiff.c:844:15
	imull	$47, %ebx, %r11d
	.loc	0 843 9                         # ldecod_src/io_tiff.c:843:9
	addl	%r9d, %r11d
	.loc	0 844 9                         # ldecod_src/io_tiff.c:844:9
	addl	%r10d, %r11d
	movq	-24(%rsp), %r9                  # 8-byte Reload
	.loc	0 845 18                        # ldecod_src/io_tiff.c:845:18
	movzwl	(%r9,%rdi), %r9d
	.loc	0 845 38 is_stmt 0              # ldecod_src/io_tiff.c:845:38
	movzwl	(%rdi,%rdx,2), %r10d
	.loc	0 845 36                        # ldecod_src/io_tiff.c:845:36
	addl	%r9d, %r10d
	.loc	0 845 15                        # ldecod_src/io_tiff.c:845:15
	leal	(%r10,%r10,4), %r9d
	leal	(%r10,%r9,2), %r9d
	.loc	0 845 9                         # ldecod_src/io_tiff.c:845:9
	addl	%r11d, %r9d
.Ltmp61:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%r10d, %r10d
.Ltmp62:
	.loc	0 846 18 is_stmt 1              # ldecod_src/io_tiff.c:846:18
	cmpl	$-6143, %r9d                    # imm = 0xE801
.Ltmp63:
	.loc	0 846 11 is_stmt 0              # ldecod_src/io_tiff.c:846:11
	jl	.LBB2_10
.Ltmp64:
# %bb.9:                                # %if.else.3
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r9d
	.loc	0 845 56 is_stmt 1              # ldecod_src/io_tiff.c:845:56
	leal	2048(%r9), %r10d
.Ltmp65:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	.loc	0 845 63 is_stmt 0              # ldecod_src/io_tiff.c:845:63
	addl	$6143, %r9d                     # imm = 0x17FF
	testl	%r10d, %r10d
	cmovnsl	%r10d, %r9d
	sarl	$12, %r9d
.Ltmp66:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r9d
	.loc	0 0 63                          # ldecod_src/io_tiff.c:0:63
	movl	112(%rsp), %r10d
.Ltmp67:
	.loc	0 848 16 is_stmt 1              # ldecod_src/io_tiff.c:848:16
	cmpl	%r10d, %r9d
	cmovgel	%r10d, %r9d
.Ltmp68:
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	%r9d, %r10d
.Ltmp69:
.LBB2_10:                               # %if.end68.3
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	movq	-104(%rsp), %r9                 # 8-byte Reload
	leaq	(%r8,%r9,2), %r8
.Ltmp70:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	.loc	0 850 12 is_stmt 1              # ldecod_src/io_tiff.c:850:12
	movw	%r10w, (%r8)
	.loc	0 851 11                        # ldecod_src/io_tiff.c:851:11
	leaq	(%r8,%r9,2), %r8
.Ltmp71:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movq	-120(%rsp), %r9                 # 8-byte Reload
	.loc	0 852 11 is_stmt 1              # ldecod_src/io_tiff.c:852:11
	leaq	(%rdi,%r9,2), %rdi
.Ltmp72:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movl	$8, %r9d
.Ltmp73:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 8
	cmpl	$17, -64(%rsp)                  # 4-byte Folded Reload
.Ltmp74:
	.loc	0 856 5 is_stmt 1               # ldecod_src/io_tiff.c:856:5
	jge	.LBB2_11
.Ltmp75:
# %bb.17:                               # %for.end148
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- 8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	.loc	0 873 17                        # ldecod_src/io_tiff.c:873:17
	cmpl	-124(%rsp), %r9d                # 4-byte Folded Reload
.Ltmp76:
	.loc	0 873 5 is_stmt 0               # ldecod_src/io_tiff.c:873:5
	jge	.LBB2_24
	jmp	.LBB2_18
.Ltmp77:
	.p2align	4, 0x90
.LBB2_14:                               # %if.else134
                                        #   in Loop: Header=BB2_11 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movl	%r10d, %r11d
.Ltmp78:
.LBB2_15:                               # %if.end139
                                        #   in Loop: Header=BB2_11 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r11d
	.loc	0 867 12 is_stmt 1              # ldecod_src/io_tiff.c:867:12
	movw	%r11w, (%r8)
.Ltmp79:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 10, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 10, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	.loc	0 856 27                        # ldecod_src/io_tiff.c:856:27
	addl	$2, %r9d
.Ltmp80:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	.loc	0 856 17 is_stmt 0              # ldecod_src/io_tiff.c:856:17
	addq	%r15, %r8
	addq	%rbp, %rdi
	cmpl	-68(%rsp), %r9d                 # 4-byte Folded Reload
.Ltmp81:
	.loc	0 856 5                         # ldecod_src/io_tiff.c:856:5
	jge	.LBB2_16
.Ltmp82:
.LBB2_11:                               # %for.body80
                                        #   Parent Loop BB2_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 2, DW_OP_plus, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 8, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	.loc	0 858 26 is_stmt 1              # ldecod_src/io_tiff.c:858:26
	movzwl	(%rdi), %r10d
	.loc	0 858 23 is_stmt 0              # ldecod_src/io_tiff.c:858:23
	shll	$11, %r10d
	.loc	0 859 18 is_stmt 1              # ldecod_src/io_tiff.c:859:18
	movzwl	(%rdi,%rsi), %r11d
	.loc	0 859 37 is_stmt 0              # ldecod_src/io_tiff.c:859:37
	movzwl	(%rdi,%r12,2), %ebx
	.loc	0 859 35                        # ldecod_src/io_tiff.c:859:35
	addl	%r11d, %ebx
	.loc	0 859 15                        # ldecod_src/io_tiff.c:859:15
	imull	$1228, %ebx, %r11d              # imm = 0x4CC
	.loc	0 859 9                         # ldecod_src/io_tiff.c:859:9
	addl	%r10d, %r11d
	movq	-48(%rsp), %r10                 # 8-byte Reload
	.loc	0 860 18 is_stmt 1              # ldecod_src/io_tiff.c:860:18
	movzwl	(%rdi,%r10), %r10d
	.loc	0 860 37 is_stmt 0              # ldecod_src/io_tiff.c:860:37
	movzwl	(%rdi,%r13,2), %ebx
	.loc	0 860 35                        # ldecod_src/io_tiff.c:860:35
	addl	%r10d, %ebx
	.loc	0 860 15                        # ldecod_src/io_tiff.c:860:15
	imull	$-262, %ebx, %r10d              # imm = 0xFEFA
	movq	-40(%rsp), %rbx                 # 8-byte Reload
	.loc	0 861 18 is_stmt 1              # ldecod_src/io_tiff.c:861:18
	movzwl	(%rdi,%rbx), %ebx
	.loc	0 861 37 is_stmt 0              # ldecod_src/io_tiff.c:861:37
	movzwl	(%rdi,%rax,2), %r14d
	.loc	0 861 35                        # ldecod_src/io_tiff.c:861:35
	addl	%ebx, %r14d
	.loc	0 861 15                        # ldecod_src/io_tiff.c:861:15
	imull	$47, %r14d, %ebx
	.loc	0 860 9 is_stmt 1               # ldecod_src/io_tiff.c:860:9
	addl	%r10d, %ebx
	.loc	0 861 9                         # ldecod_src/io_tiff.c:861:9
	addl	%r11d, %ebx
	movq	-32(%rsp), %r10                 # 8-byte Reload
	.loc	0 862 18                        # ldecod_src/io_tiff.c:862:18
	movzwl	(%rdi,%r10), %r10d
	.loc	0 862 37 is_stmt 0              # ldecod_src/io_tiff.c:862:37
	movzwl	(%rdi,%rdx,2), %r11d
	.loc	0 862 35                        # ldecod_src/io_tiff.c:862:35
	addl	%r10d, %r11d
	.loc	0 862 15                        # ldecod_src/io_tiff.c:862:15
	leal	(%r11,%r11,4), %r10d
	leal	(%r11,%r10,2), %r10d
	.loc	0 862 9                         # ldecod_src/io_tiff.c:862:9
	addl	%ebx, %r10d
.Ltmp83:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%r11d, %r11d
.Ltmp84:
	.loc	0 863 18 is_stmt 1              # ldecod_src/io_tiff.c:863:18
	cmpl	$-6143, %r10d                   # imm = 0xE801
.Ltmp85:
	.loc	0 863 11 is_stmt 0              # ldecod_src/io_tiff.c:863:11
	jl	.LBB2_15
.Ltmp86:
# %bb.12:                               # %if.else134
                                        #   in Loop: Header=BB2_11 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r10d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 862 55 is_stmt 1              # ldecod_src/io_tiff.c:862:55
	leal	2048(%r10), %r11d
.Ltmp87:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $r11d
	.loc	0 862 62 is_stmt 0              # ldecod_src/io_tiff.c:862:62
	addl	$6143, %r10d                    # imm = 0x17FF
	testl	%r11d, %r11d
	cmovnsl	%r11d, %r10d
	sarl	$12, %r10d
.Ltmp88:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	.loc	0 865 16 is_stmt 1              # ldecod_src/io_tiff.c:865:16
	cmpl	112(%rsp), %r10d
	jl	.LBB2_14
.Ltmp89:
# %bb.13:                               # %if.else134
                                        #   in Loop: Header=BB2_11 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	112(%rsp), %r10d
.Ltmp90:
                                        # kill: def $r10d killed $r10d def $r10
	jmp	.LBB2_14
.Ltmp91:
	.p2align	4, 0x90
.LBB2_16:                               #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r11d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 68, DW_OP_minus, DW_OP_deref] $rsp
	movl	-92(%rsp), %r9d                 # 4-byte Reload
.Ltmp92:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- [DW_OP_constu 92, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	.loc	0 873 17 is_stmt 1              # ldecod_src/io_tiff.c:873:17
	cmpl	-124(%rsp), %r9d                # 4-byte Folded Reload
.Ltmp93:
	.loc	0 873 5 is_stmt 0               # ldecod_src/io_tiff.c:873:5
	jge	.LBB2_24
.Ltmp94:
.LBB2_18:                               # %for.body153.preheader
                                        #   in Loop: Header=BB2_2 Depth=1
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- 3
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- 5
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- 6
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movl	-128(%rsp), %eax                # 4-byte Reload
	.loc	0 873 5                         # ldecod_src/io_tiff.c:873:5
	subl	%r9d, %eax
	jmp	.LBB2_19
.Ltmp95:
	.p2align	4, 0x90
.LBB2_22:                               # %if.else239
                                        #   in Loop: Header=BB2_19 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movl	%ebx, %r10d
.Ltmp96:
.LBB2_23:                               # %if.end244
                                        #   in Loop: Header=BB2_19 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $r10d
	.loc	0 888 12 is_stmt 1              # ldecod_src/io_tiff.c:888:12
	movw	%r10w, (%r8)
.Ltmp97:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	.loc	0 873 27                        # ldecod_src/io_tiff.c:873:27
	addl	$2, %r9d
.Ltmp98:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	.loc	0 873 17 is_stmt 0              # ldecod_src/io_tiff.c:873:17
	addq	%r15, %r8
	addq	%rbp, %rdi
	addl	$-2, %eax
	cmpl	-124(%rsp), %r9d                # 4-byte Folded Reload
.Ltmp99:
	.loc	0 873 5                         # ldecod_src/io_tiff.c:873:5
	jge	.LBB2_24
.Ltmp100:
.LBB2_19:                               # %for.body153
                                        #   Parent Loop BB2_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_mul, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n1 <- undef
	.loc	0 876 15 is_stmt 1              # ldecod_src/io_tiff.c:876:15
	cmpl	-72(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 876 12 is_stmt 0              # ldecod_src/io_tiff.c:876:12
	movl	%eax, %r11d
	movl	$3, %edx
	cmovll	%edx, %r11d
.Ltmp101:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n3 <- $r11d
	.loc	0 877 15 is_stmt 1              # ldecod_src/io_tiff.c:877:15
	cmpl	-76(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 877 12 is_stmt 0              # ldecod_src/io_tiff.c:877:12
	movl	%eax, %ebx
	movl	$5, %edx
	cmovll	%edx, %ebx
.Ltmp102:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n5 <- $ebx
	.loc	0 878 15 is_stmt 1              # ldecod_src/io_tiff.c:878:15
	cmpl	-80(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 878 12 is_stmt 0              # ldecod_src/io_tiff.c:878:12
	movl	%eax, %r14d
	movl	$7, %edx
	cmovll	%edx, %r14d
.Ltmp103:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:n7 <- $r14d
	.loc	0 879 26 is_stmt 1              # ldecod_src/io_tiff.c:879:26
	movzwl	(%rdi), %r13d
	.loc	0 879 23 is_stmt 0              # ldecod_src/io_tiff.c:879:23
	shll	$11, %r13d
	xorl	%r10d, %r10d
	.loc	0 875 15 is_stmt 1              # ldecod_src/io_tiff.c:875:15
	cmpl	-128(%rsp), %r9d                # 4-byte Folded Reload
	.loc	0 880 18                        # ldecod_src/io_tiff.c:880:18
	movzwl	(%rdi,%rsi), %edx
	.loc	0 880 45 is_stmt 0              # ldecod_src/io_tiff.c:880:45
	movl	$0, %r12d
	cmovll	%ecx, %r12d
	.loc	0 880 42                        # ldecod_src/io_tiff.c:880:42
	movslq	%r12d, %r12
	.loc	0 880 37                        # ldecod_src/io_tiff.c:880:37
	movzwl	(%rdi,%r12,2), %r12d
	.loc	0 880 35                        # ldecod_src/io_tiff.c:880:35
	addl	%edx, %r12d
	.loc	0 880 15                        # ldecod_src/io_tiff.c:880:15
	imull	$1228, %r12d, %edx              # imm = 0x4CC
	.loc	0 880 9                         # ldecod_src/io_tiff.c:880:9
	addl	%r13d, %edx
	movq	-48(%rsp), %r12                 # 8-byte Reload
	.loc	0 881 18 is_stmt 1              # ldecod_src/io_tiff.c:881:18
	movzwl	(%rdi,%r12), %r12d
	.loc	0 881 45 is_stmt 0              # ldecod_src/io_tiff.c:881:45
	imull	%ecx, %r11d
.Ltmp104:
	.loc	0 881 42                        # ldecod_src/io_tiff.c:881:42
	movslq	%r11d, %r11
	.loc	0 881 37                        # ldecod_src/io_tiff.c:881:37
	movzwl	(%rdi,%r11,2), %r11d
	.loc	0 881 35                        # ldecod_src/io_tiff.c:881:35
	addl	%r12d, %r11d
	.loc	0 881 15                        # ldecod_src/io_tiff.c:881:15
	imull	$-262, %r11d, %r11d             # imm = 0xFEFA
	.loc	0 881 9                         # ldecod_src/io_tiff.c:881:9
	addl	%edx, %r11d
	movq	-40(%rsp), %rdx                 # 8-byte Reload
	.loc	0 882 18 is_stmt 1              # ldecod_src/io_tiff.c:882:18
	movzwl	(%rdi,%rdx), %edx
	.loc	0 882 45 is_stmt 0              # ldecod_src/io_tiff.c:882:45
	imull	%ecx, %ebx
.Ltmp105:
	.loc	0 882 42                        # ldecod_src/io_tiff.c:882:42
	movslq	%ebx, %rbx
	.loc	0 882 37                        # ldecod_src/io_tiff.c:882:37
	movzwl	(%rdi,%rbx,2), %r12d
	.loc	0 882 35                        # ldecod_src/io_tiff.c:882:35
	addl	%edx, %r12d
	movq	-32(%rsp), %rdx                 # 8-byte Reload
	.loc	0 883 18 is_stmt 1              # ldecod_src/io_tiff.c:883:18
	movzwl	(%rdi,%rdx), %edx
	.loc	0 883 45 is_stmt 0              # ldecod_src/io_tiff.c:883:45
	imull	%ecx, %r14d
.Ltmp106:
	.loc	0 883 42                        # ldecod_src/io_tiff.c:883:42
	movslq	%r14d, %rbx
	.loc	0 883 37                        # ldecod_src/io_tiff.c:883:37
	movzwl	(%rdi,%rbx,2), %ebx
	.loc	0 883 35                        # ldecod_src/io_tiff.c:883:35
	addl	%edx, %ebx
	.loc	0 883 15                        # ldecod_src/io_tiff.c:883:15
	leal	(%rbx,%rbx,4), %edx
	leal	(%rbx,%rdx,2), %ebx
	.loc	0 882 15 is_stmt 1              # ldecod_src/io_tiff.c:882:15
	imull	$47, %r12d, %edx
	.loc	0 882 9 is_stmt 0               # ldecod_src/io_tiff.c:882:9
	addl	%edx, %ebx
	.loc	0 883 9 is_stmt 1               # ldecod_src/io_tiff.c:883:9
	addl	%r11d, %ebx
.Ltmp107:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $ebx
	.loc	0 884 18                        # ldecod_src/io_tiff.c:884:18
	cmpl	$-6143, %ebx                    # imm = 0xE801
.Ltmp108:
	.loc	0 884 11 is_stmt 0              # ldecod_src/io_tiff.c:884:11
	jl	.LBB2_23
.Ltmp109:
# %bb.20:                               # %if.else239
                                        #   in Loop: Header=BB2_19 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_plus_uconst 2048, DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $ebx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 883 56 is_stmt 1              # ldecod_src/io_tiff.c:883:56
	leal	2048(%rbx), %edx
.Ltmp110:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- [DW_OP_constu 4096, DW_OP_div, DW_OP_stack_value] $edx
	.loc	0 883 63 is_stmt 0              # ldecod_src/io_tiff.c:883:63
	addl	$6143, %ebx                     # imm = 0x17FF
	testl	%edx, %edx
	cmovnsl	%edx, %ebx
	sarl	$12, %ebx
.Ltmp111:
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $ebx
	.loc	0 886 16 is_stmt 1              # ldecod_src/io_tiff.c:886:16
	cmpl	112(%rsp), %ebx
	jl	.LBB2_22
.Ltmp112:
# %bb.21:                               # %if.else239
                                        #   in Loop: Header=BB2_19 Depth=2
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:y <- [DW_OP_constu 84, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: horizontal_half_1chan_cosite:x <- $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:result <- $ebx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:limit <- [DW_OP_constu 124, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	112(%rsp), %edx
	movl	%edx, %ebx
.Ltmp113:
	jmp	.LBB2_22
.Ltmp114:
.LBB2_25:                               # %for.end255
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcXres <- [DW_OP_constu 64, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:yres <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:srcZres <- $ecx
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: horizontal_half_1chan_cosite:pixMax <- [DW_OP_plus_uconst 112] [$rsp+0]
	#DEBUG_VALUE: horizontal_half_1chan_cosite:src <- $rdi
	#DEBUG_VALUE: horizontal_half_1chan_cosite:dst <- $r8
	.loc	0 893 1 epilogue_begin is_stmt 1 # ldecod_src/io_tiff.c:893:1
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp115:
.Lfunc_end2:
	.size	horizontal_half_1chan_cosite, .Lfunc_end2-horizontal_half_1chan_cosite
	.cfi_endproc
                                        # -- End function
	.globl	vertical_half_1chan             # -- Begin function vertical_half_1chan
	.p2align	4, 0x90
	.type	vertical_half_1chan,@function
vertical_half_1chan:                    # @vertical_half_1chan
.Lfunc_begin3:
	.loc	0 911 0                         # ldecod_src/io_tiff.c:911:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- $esi
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- $r9d
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$16, %rsp
	.cfi_def_cfa_offset 72
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp116:
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
                                        # kill: def $edx killed $edx def $rdx
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- undef
	movslq	%ecx, %r14
.Ltmp117:
	.loc	0 915 26 prologue_end           # ldecod_src/io_tiff.c:915:26
	movl	%ecx, %r10d
	imull	%esi, %r10d
.Ltmp118:
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- $r10d
	.loc	0 0 26 is_stmt 0                # ldecod_src/io_tiff.c:0:26
	leal	(%r10,%r10), %eax
	leal	(,%r10,4), %ecx
.Ltmp119:
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	movq	%r10, 8(%rsp)                   # 8-byte Spill
	movslq	%r10d, %r10
.Ltmp120:
	movslq	%eax, %rbx
	leal	(%r10,%r10,2), %eax
	movslq	%eax, %r12
	movslq	%ecx, %r11
	leal	(%r10,%r10,4), %eax
	movslq	%eax, %rbp
	leal	(%rbx,%rbx,2), %eax
	cltq
	movslq	%r9d, %r15
	testl	%esi, %esi
	movq	%r10, -96(%rsp)                 # 8-byte Spill
	movq	%rdx, -56(%rsp)                 # 8-byte Spill
.Ltmp121:
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	movl	%esi, -124(%rsp)                # 4-byte Spill
.Ltmp122:
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	movq	%r14, -8(%rsp)                  # 8-byte Spill
	movq	%rbx, -104(%rsp)                # 8-byte Spill
	movq	%r15, -16(%rsp)                 # 8-byte Spill
	movq	%rax, -72(%rsp)                 # 8-byte Spill
	jle	.LBB3_43
.Ltmp123:
# %bb.1:                                # %for.body19.us.preheader
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	.loc	0 926 5 is_stmt 1               # ldecod_src/io_tiff.c:926:5
	leaq	(%r15,%r15), %rcx
	movq	%rcx, -80(%rsp)                 # 8-byte Spill
	leaq	(%r14,%r14), %rcx
	movq	%rcx, -120(%rsp)                # 8-byte Spill
	leaq	(%rdi,%rax,2), %rax
	leaq	(%rdi,%rbp,2), %rcx
	movq	%rcx, -88(%rsp)                 # 8-byte Spill
	leaq	(%rdi,%r11,2), %r9
.Ltmp124:
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movq	%r12, -112(%rsp)                # 8-byte Spill
	.loc	0 926 5                         # ldecod_src/io_tiff.c:926:5
	leaq	(%rdi,%r12,2), %r12
	leaq	(%rdi,%rbx,2), %r13
	leaq	(%rdi,%r10,2), %rcx
	movq	%rax, %r10
	xorl	%r15d, %r15d
	movl	%esi, %ebx
	jmp	.LBB3_2
.Ltmp125:
	.p2align	4, 0x90
.LBB3_5:                                # %if.else.us
                                        #   in Loop: Header=BB3_2 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movl	%eax, %r14d
.Ltmp126:
.LBB3_6:                                # %if.end86.us
                                        #   in Loop: Header=BB3_2 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	.loc	0 938 12 is_stmt 1              # ldecod_src/io_tiff.c:938:12
	movw	%r14w, (%r8)
.Ltmp127:
	#DEBUG_VALUE: vertical_half_1chan:dst <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 926 17                        # ldecod_src/io_tiff.c:926:17
	addq	-80(%rsp), %r8                  # 8-byte Folded Reload
	addq	-120(%rsp), %r15                # 8-byte Folded Reload
	decl	%ebx
.Ltmp128:
	.loc	0 926 5 is_stmt 0               # ldecod_src/io_tiff.c:926:5
	je	.LBB3_7
.Ltmp129:
.LBB3_2:                                # %for.body19.us
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_stack_value] undef, undef, undef
	.loc	0 928 23 is_stmt 1              # ldecod_src/io_tiff.c:928:23
	movzwl	(%rdi,%r15), %eax
	.loc	0 928 47 is_stmt 0              # ldecod_src/io_tiff.c:928:47
	movzwl	(%rcx,%r15), %r14d
	.loc	0 928 45                        # ldecod_src/io_tiff.c:928:45
	addl	%eax, %r14d
	.loc	0 928 20                        # ldecod_src/io_tiff.c:928:20
	imull	$225, %r14d, %r14d
	.loc	0 929 39 is_stmt 1              # ldecod_src/io_tiff.c:929:39
	movzwl	(%r13,%r15), %esi
	.loc	0 929 37 is_stmt 0              # ldecod_src/io_tiff.c:929:37
	addl	%eax, %esi
	.loc	0 929 12                        # ldecod_src/io_tiff.c:929:12
	imull	$69, %esi, %esi
	.loc	0 929 9                         # ldecod_src/io_tiff.c:929:9
	addl	%r14d, %esi
	.loc	0 930 39 is_stmt 1              # ldecod_src/io_tiff.c:930:39
	movzwl	(%r12,%r15), %r14d
	.loc	0 930 37 is_stmt 0              # ldecod_src/io_tiff.c:930:37
	addl	%eax, %r14d
	.loc	0 930 12                        # ldecod_src/io_tiff.c:930:12
	imull	$-30, %r14d, %r14d
	.loc	0 930 9                         # ldecod_src/io_tiff.c:930:9
	addl	%esi, %r14d
	.loc	0 931 39 is_stmt 1              # ldecod_src/io_tiff.c:931:39
	movzwl	(%r9,%r15), %esi
	.loc	0 931 37 is_stmt 0              # ldecod_src/io_tiff.c:931:37
	addl	%eax, %esi
	.loc	0 931 9                         # ldecod_src/io_tiff.c:931:9
	shll	$4, %esi
	subl	%esi, %r14d
	movq	-88(%rsp), %rsi                 # 8-byte Reload
	.loc	0 932 39 is_stmt 1              # ldecod_src/io_tiff.c:932:39
	movzwl	(%rsi,%r15), %esi
	.loc	0 932 37 is_stmt 0              # ldecod_src/io_tiff.c:932:37
	addl	%eax, %esi
	.loc	0 932 12                        # ldecod_src/io_tiff.c:932:12
	leal	(%rsi,%rsi,2), %esi
	.loc	0 932 9                         # ldecod_src/io_tiff.c:932:9
	leal	(%r14,%rsi,2), %esi
	.loc	0 933 39 is_stmt 1              # ldecod_src/io_tiff.c:933:39
	movzwl	(%r10,%r15), %r14d
	.loc	0 933 37 is_stmt 0              # ldecod_src/io_tiff.c:933:37
	addl	%eax, %r14d
	.loc	0 933 9                         # ldecod_src/io_tiff.c:933:9
	leal	(%rsi,%r14,2), %eax
.Ltmp130:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $eax
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	movl	$0, %r14d
.Ltmp131:
	.loc	0 934 18 is_stmt 1              # ldecod_src/io_tiff.c:934:18
	cmpl	$-767, %eax                     # imm = 0xFD01
.Ltmp132:
	.loc	0 934 11 is_stmt 0              # ldecod_src/io_tiff.c:934:11
	jl	.LBB3_6
.Ltmp133:
# %bb.3:                                # %if.else.us
                                        #   in Loop: Header=BB3_2 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $eax
	.loc	0 933 61 is_stmt 1              # ldecod_src/io_tiff.c:933:61
	leal	256(%rax), %esi
.Ltmp134:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $esi
	.loc	0 933 67 is_stmt 0              # ldecod_src/io_tiff.c:933:67
	addl	$767, %eax                      # imm = 0x2FF
	testl	%esi, %esi
	cmovnsl	%esi, %eax
	sarl	$9, %eax
.Ltmp135:
	#DEBUG_VALUE: vertical_half_1chan:result <- $eax
	.loc	0 936 16 is_stmt 1              # ldecod_src/io_tiff.c:936:16
	cmpl	72(%rsp), %eax
	jl	.LBB3_5
.Ltmp136:
# %bb.4:                                # %if.else.us
                                        #   in Loop: Header=BB3_2 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	#DEBUG_VALUE: vertical_half_1chan:result <- $eax
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	72(%rsp), %eax
.Ltmp137:
                                        # kill: def $eax killed $eax def $rax
	jmp	.LBB3_5
.Ltmp138:
.LBB3_7:                                # %for.cond17.for.end_crit_edge.us
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	movq	-96(%rsp), %rsi                 # 8-byte Reload
	.loc	0 926 5 is_stmt 1               # ldecod_src/io_tiff.c:926:5
	leaq	(%rsi,%rsi), %rax
	movq	%rdi, %r9
	subq	%rax, %r9
	movq	-104(%rsp), %r10                # 8-byte Reload
	leaq	(%r10,%r10), %rdx
	movq	%rdx, (%rsp)                    # 8-byte Spill
	subq	%rdx, %rax
	addq	%rdi, %rax
	leaq	(%rdi,%rsi,4), %rdx
	movq	%rdx, -88(%rsp)                 # 8-byte Spill
	movl	-124(%rsp), %r10d               # 4-byte Reload
	movq	-112(%rsp), %r12                # 8-byte Reload
	jmp	.LBB3_8
.Ltmp139:
	.p2align	4, 0x90
.LBB3_11:                               # %if.else.us.1
                                        #   in Loop: Header=BB3_8 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movl	%ebx, %r13d
.Ltmp140:
.LBB3_12:                               # %if.end86.us.1
                                        #   in Loop: Header=BB3_8 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:result <- $r13d
	.loc	0 938 12 is_stmt 1              # ldecod_src/io_tiff.c:938:12
	movw	%r13w, (%r8)
.Ltmp141:
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- undef
	.loc	0 926 17                        # ldecod_src/io_tiff.c:926:17
	addq	-120(%rsp), %r15                # 8-byte Folded Reload
	addq	-80(%rsp), %r8                  # 8-byte Folded Reload
	decl	%r10d
.Ltmp142:
	.loc	0 926 5 is_stmt 0               # ldecod_src/io_tiff.c:926:5
	je	.LBB3_13
.Ltmp143:
.LBB3_8:                                # %for.body19.us.1
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- undef
	.loc	0 928 23 is_stmt 1              # ldecod_src/io_tiff.c:928:23
	leaq	(%rcx,%r15), %rbx
	movzwl	(%rcx,%r15), %esi
	movq	-88(%rsp), %rdx                 # 8-byte Reload
	.loc	0 928 47 is_stmt 0              # ldecod_src/io_tiff.c:928:47
	movzwl	(%rdx,%r15), %r14d
	.loc	0 928 45                        # ldecod_src/io_tiff.c:928:45
	addl	%esi, %r14d
	.loc	0 928 20                        # ldecod_src/io_tiff.c:928:20
	imull	$225, %r14d, %esi
	.loc	0 929 15 is_stmt 1              # ldecod_src/io_tiff.c:929:15
	movzwl	(%rdi,%r15), %r14d
	movq	%r12, %rdx
	movq	-104(%rsp), %r12                # 8-byte Reload
	.loc	0 929 39 is_stmt 0              # ldecod_src/io_tiff.c:929:39
	movzwl	(%rbx,%r12,2), %r13d
	movq	%rdx, %r12
	.loc	0 929 37                        # ldecod_src/io_tiff.c:929:37
	addl	%r14d, %r13d
	.loc	0 929 12                        # ldecod_src/io_tiff.c:929:12
	imull	$69, %r13d, %r14d
	.loc	0 929 9                         # ldecod_src/io_tiff.c:929:9
	addl	%esi, %r14d
	.loc	0 930 15 is_stmt 1              # ldecod_src/io_tiff.c:930:15
	movzwl	(%rax,%r15), %esi
	.loc	0 930 39 is_stmt 0              # ldecod_src/io_tiff.c:930:39
	movzwl	(%rbx,%rdx,2), %r13d
	.loc	0 930 37                        # ldecod_src/io_tiff.c:930:37
	addl	%esi, %r13d
	.loc	0 930 12                        # ldecod_src/io_tiff.c:930:12
	imull	$-30, %r13d, %r13d
	.loc	0 930 9                         # ldecod_src/io_tiff.c:930:9
	addl	%r14d, %r13d
	.loc	0 931 39 is_stmt 1              # ldecod_src/io_tiff.c:931:39
	movzwl	(%rbx,%r11,2), %r14d
	.loc	0 931 37 is_stmt 0              # ldecod_src/io_tiff.c:931:37
	addl	%esi, %r14d
	.loc	0 931 9                         # ldecod_src/io_tiff.c:931:9
	shll	$4, %r14d
	subl	%r14d, %r13d
	.loc	0 932 15 is_stmt 1              # ldecod_src/io_tiff.c:932:15
	movzwl	(%r9,%r15), %esi
	.loc	0 932 39 is_stmt 0              # ldecod_src/io_tiff.c:932:39
	movzwl	(%rbx,%rbp,2), %r14d
	.loc	0 932 37                        # ldecod_src/io_tiff.c:932:37
	addl	%esi, %r14d
	.loc	0 932 12                        # ldecod_src/io_tiff.c:932:12
	leal	(%r14,%r14,2), %r14d
	.loc	0 932 9                         # ldecod_src/io_tiff.c:932:9
	leal	(%r13,%r14,2), %r14d
	movq	-72(%rsp), %rdx                 # 8-byte Reload
	.loc	0 933 39 is_stmt 1              # ldecod_src/io_tiff.c:933:39
	movzwl	(%rbx,%rdx,2), %ebx
	.loc	0 933 37 is_stmt 0              # ldecod_src/io_tiff.c:933:37
	addl	%esi, %ebx
	.loc	0 933 9                         # ldecod_src/io_tiff.c:933:9
	leal	(%r14,%rbx,2), %ebx
.Ltmp144:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $ebx
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%r13d, %r13d
.Ltmp145:
	.loc	0 934 18 is_stmt 1              # ldecod_src/io_tiff.c:934:18
	cmpl	$-767, %ebx                     # imm = 0xFD01
.Ltmp146:
	.loc	0 934 11 is_stmt 0              # ldecod_src/io_tiff.c:934:11
	jl	.LBB3_12
.Ltmp147:
# %bb.9:                                # %if.else.us.1
                                        #   in Loop: Header=BB3_8 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $ebx
	.loc	0 933 61 is_stmt 1              # ldecod_src/io_tiff.c:933:61
	leal	256(%rbx), %esi
.Ltmp148:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $esi
	.loc	0 933 67 is_stmt 0              # ldecod_src/io_tiff.c:933:67
	addl	$767, %ebx                      # imm = 0x2FF
	testl	%esi, %esi
	cmovnsl	%esi, %ebx
	sarl	$9, %ebx
.Ltmp149:
	#DEBUG_VALUE: vertical_half_1chan:result <- $ebx
	.loc	0 936 16 is_stmt 1              # ldecod_src/io_tiff.c:936:16
	cmpl	72(%rsp), %ebx
	jl	.LBB3_11
.Ltmp150:
# %bb.10:                               # %if.else.us.1
                                        #   in Loop: Header=BB3_8 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:result <- $ebx
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	72(%rsp), %esi
	movl	%esi, %ebx
.Ltmp151:
	jmp	.LBB3_11
.Ltmp152:
.LBB3_13:                               # %for.cond17.for.end_crit_edge.us.1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 2
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 2
	#DEBUG_VALUE: vertical_half_1chan:result <- $r13d
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	movq	-96(%rsp), %rbx                 # 8-byte Reload
	.loc	0 926 5 is_stmt 1               # ldecod_src/io_tiff.c:926:5
	leaq	(,%rbx,4), %r10
	movq	-72(%rsp), %rax                 # 8-byte Reload
	addq	%rax, %rax
	leaq	(%rax,%rbx,4), %rax
	addq	%rdi, %rax
	movq	%rax, -112(%rsp)                # 8-byte Spill
	leaq	(,%rbp,2), %rax
	leaq	(%rax,%rbx,4), %rax
	addq	%rdi, %rax
	movq	%rax, -24(%rsp)                 # 8-byte Spill
	movq	%rdi, %rax
	subq	%r10, %rax
	movq	%rax, -32(%rsp)                 # 8-byte Spill
	leaq	(%r11,%r11), %rax
	leaq	(%rax,%rbx,4), %rax
	addq	%rdi, %rax
	movq	%rax, -40(%rsp)                 # 8-byte Spill
	leaq	(%r12,%r12), %rsi
	movq	%r10, %rax
	subq	%rsi, %rax
	addq	%rdi, %rax
	leaq	(%rsi,%rbx,4), %rdx
	addq	%rdi, %rdx
	movq	(%rsp), %rsi                    # 8-byte Reload
	subq	%rsi, %r10
	addq	%rdi, %r10
	leaq	(%rsi,%rbx,4), %r9
	addq	%rdi, %r9
	leaq	(%rbx,%rbx,2), %rsi
	leaq	(%rdi,%rsi,2), %r13
.Ltmp153:
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movl	-124(%rsp), %edi                # 4-byte Reload
.Ltmp154:
	jmp	.LBB3_14
.Ltmp155:
	.p2align	4, 0x90
.LBB3_17:                               # %if.else.us.2
                                        #   in Loop: Header=BB3_14 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	movl	%ebx, %esi
.Ltmp156:
.LBB3_18:                               # %if.end86.us.2
                                        #   in Loop: Header=BB3_14 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:result <- $esi
	.loc	0 938 12 is_stmt 1              # ldecod_src/io_tiff.c:938:12
	movw	%si, (%r8)
.Ltmp157:
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- undef
	.loc	0 926 17                        # ldecod_src/io_tiff.c:926:17
	addq	-80(%rsp), %r8                  # 8-byte Folded Reload
	addq	-120(%rsp), %r15                # 8-byte Folded Reload
	decl	%edi
.Ltmp158:
	.loc	0 926 5 is_stmt 0               # ldecod_src/io_tiff.c:926:5
	je	.LBB3_19
.Ltmp159:
.LBB3_14:                               # %for.body19.us.2
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- undef
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movq	-88(%rsp), %rsi                 # 8-byte Reload
.Ltmp160:
	.loc	0 928 23 is_stmt 1              # ldecod_src/io_tiff.c:928:23
	movzwl	(%rsi,%r15), %esi
	.loc	0 928 47 is_stmt 0              # ldecod_src/io_tiff.c:928:47
	movzwl	(%r13,%r15), %ebx
	.loc	0 928 45                        # ldecod_src/io_tiff.c:928:45
	addl	%esi, %ebx
	.loc	0 928 20                        # ldecod_src/io_tiff.c:928:20
	imull	$225, %ebx, %esi
	.loc	0 929 15 is_stmt 1              # ldecod_src/io_tiff.c:929:15
	movzwl	(%rcx,%r15), %ebx
	.loc	0 929 39 is_stmt 0              # ldecod_src/io_tiff.c:929:39
	movzwl	(%r9,%r15), %r14d
	.loc	0 929 37                        # ldecod_src/io_tiff.c:929:37
	addl	%ebx, %r14d
	.loc	0 929 12                        # ldecod_src/io_tiff.c:929:12
	imull	$69, %r14d, %ebx
	.loc	0 929 9                         # ldecod_src/io_tiff.c:929:9
	addl	%esi, %ebx
	.loc	0 930 15 is_stmt 1              # ldecod_src/io_tiff.c:930:15
	movzwl	(%r10,%r15), %esi
	.loc	0 930 39 is_stmt 0              # ldecod_src/io_tiff.c:930:39
	movzwl	(%rdx,%r15), %r14d
	.loc	0 930 37                        # ldecod_src/io_tiff.c:930:37
	addl	%esi, %r14d
	.loc	0 930 12                        # ldecod_src/io_tiff.c:930:12
	imull	$-30, %r14d, %esi
	.loc	0 930 9                         # ldecod_src/io_tiff.c:930:9
	addl	%ebx, %esi
	.loc	0 931 15 is_stmt 1              # ldecod_src/io_tiff.c:931:15
	movzwl	(%rax,%r15), %ebx
	movq	-40(%rsp), %r14                 # 8-byte Reload
	.loc	0 931 39 is_stmt 0              # ldecod_src/io_tiff.c:931:39
	movzwl	(%r14,%r15), %r14d
	.loc	0 931 37                        # ldecod_src/io_tiff.c:931:37
	addl	%ebx, %r14d
	.loc	0 931 9                         # ldecod_src/io_tiff.c:931:9
	shll	$4, %r14d
	subl	%r14d, %esi
	movq	-32(%rsp), %rbx                 # 8-byte Reload
	.loc	0 932 15 is_stmt 1              # ldecod_src/io_tiff.c:932:15
	movzwl	(%rbx,%r15), %ebx
	movq	-24(%rsp), %r14                 # 8-byte Reload
	.loc	0 932 39 is_stmt 0              # ldecod_src/io_tiff.c:932:39
	movzwl	(%r14,%r15), %r14d
	.loc	0 932 37                        # ldecod_src/io_tiff.c:932:37
	addl	%ebx, %r14d
	.loc	0 932 12                        # ldecod_src/io_tiff.c:932:12
	leal	(%r14,%r14,2), %r14d
	.loc	0 932 9                         # ldecod_src/io_tiff.c:932:9
	leal	(%rsi,%r14,2), %esi
	movq	-112(%rsp), %r14                # 8-byte Reload
	.loc	0 933 39 is_stmt 1              # ldecod_src/io_tiff.c:933:39
	movzwl	(%r14,%r15), %r14d
	.loc	0 933 37 is_stmt 0              # ldecod_src/io_tiff.c:933:37
	addl	%ebx, %r14d
	.loc	0 933 9                         # ldecod_src/io_tiff.c:933:9
	leal	(%rsi,%r14,2), %ebx
.Ltmp161:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $ebx
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%esi, %esi
.Ltmp162:
	.loc	0 934 18 is_stmt 1              # ldecod_src/io_tiff.c:934:18
	cmpl	$-767, %ebx                     # imm = 0xFD01
.Ltmp163:
	.loc	0 934 11 is_stmt 0              # ldecod_src/io_tiff.c:934:11
	jl	.LBB3_18
.Ltmp164:
# %bb.15:                               # %if.else.us.2
                                        #   in Loop: Header=BB3_14 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $ebx
	.loc	0 933 61 is_stmt 1              # ldecod_src/io_tiff.c:933:61
	leal	256(%rbx), %esi
.Ltmp165:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $esi
	.loc	0 933 67 is_stmt 0              # ldecod_src/io_tiff.c:933:67
	addl	$767, %ebx                      # imm = 0x2FF
	testl	%esi, %esi
	cmovnsl	%esi, %ebx
	sarl	$9, %ebx
.Ltmp166:
	#DEBUG_VALUE: vertical_half_1chan:result <- $ebx
	.loc	0 936 16 is_stmt 1              # ldecod_src/io_tiff.c:936:16
	cmpl	72(%rsp), %ebx
	jl	.LBB3_17
.Ltmp167:
# %bb.16:                               # %if.else.us.2
                                        #   in Loop: Header=BB3_14 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:result <- $ebx
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	72(%rsp), %esi
	movl	%esi, %ebx
.Ltmp168:
	jmp	.LBB3_17
.Ltmp169:
.LBB3_19:                               # %for.cond17.for.end_crit_edge.us.2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 4
	#DEBUG_VALUE: vertical_half_1chan:n1 <- [DW_OP_stack_value] 0
	#DEBUG_VALUE: vertical_half_1chan:n2 <- 2
	#DEBUG_VALUE: vertical_half_1chan:n3 <- 3
	#DEBUG_VALUE: vertical_half_1chan:n4 <- 4
	#DEBUG_VALUE: vertical_half_1chan:result <- $esi
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	.loc	0 945 19 is_stmt 1              # ldecod_src/io_tiff.c:945:19
	addq	%r15, %r13
	movq	-8(%rsp), %r14                  # 8-byte Reload
	movq	-96(%rsp), %r10                 # 8-byte Reload
	movq	-16(%rsp), %r15                 # 8-byte Reload
	movl	-124(%rsp), %esi                # 4-byte Reload
.Ltmp170:
	.loc	0 0 19 is_stmt 0                # ldecod_src/io_tiff.c:0:19
	movq	-56(%rsp), %rdx                 # 8-byte Reload
	jmp	.LBB3_20
.Ltmp171:
.LBB3_43:                               # %for.body.preheader
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- 0
	.loc	0 919 3 is_stmt 1               # ldecod_src/io_tiff.c:919:3
	leaq	(%r10,%r10,2), %rax
.Ltmp172:
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- undef
	#DEBUG_VALUE: vertical_half_1chan:n1 <- undef
	#DEBUG_VALUE: vertical_half_1chan:n2 <- undef
	#DEBUG_VALUE: vertical_half_1chan:n3 <- undef
	#DEBUG_VALUE: vertical_half_1chan:n4 <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	leaq	(%rdi,%rax,2), %r13
.Ltmp173:
.LBB3_20:                               # %for.end96
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	.loc	0 945 19                        # ldecod_src/io_tiff.c:945:19
	leal	-6(%rdx), %eax
.Ltmp174:
	#DEBUG_VALUE: vertical_half_1chan:limit <- $eax
	.loc	0 0 19 is_stmt 0                # ldecod_src/io_tiff.c:0:19
	movl	%eax, -80(%rsp)                 # 4-byte Spill
.Ltmp175:
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	movl	$6, %r9d
.Ltmp176:
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	.loc	0 946 15 is_stmt 1              # ldecod_src/io_tiff.c:946:15
	cmpl	$13, %edx
	movq	%r11, -64(%rsp)                 # 8-byte Spill
	movq	%rbp, -48(%rsp)                 # 8-byte Spill
.Ltmp177:
	.loc	0 946 3 is_stmt 0               # ldecod_src/io_tiff.c:946:3
	jl	.LBB3_21
.Ltmp178:
# %bb.22:                               # %for.cond102.preheader.lr.ph
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	leal	-13(%rdx), %r9d
	andl	$-2, %r9d
	testl	%esi, %esi
	jle	.LBB3_44
.Ltmp179:
# %bb.23:                               # %for.cond102.preheader.us.preheader
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	%r9d, -120(%rsp)                # 4-byte Spill
	.loc	0 946 3                         # ldecod_src/io_tiff.c:946:3
	leaq	(%r15,%r15), %rcx
	leaq	(%r14,%r14), %rdx
	leaq	(%r10,%r10), %r9
	addq	%rbp, %rbp
	negq	%rbp
	movq	-64(%rsp), %rax                 # 8-byte Reload
	addq	%rax, %rax
	negq	%rax
	leaq	(%r12,%r12), %r11
	negq	%r11
	movq	-104(%rsp), %rsi                # 8-byte Reload
	leaq	(%rsi,%rsi), %r10
	negq	%r10
	movq	%r9, %rsi
	negq	%rsi
	movl	$6, %ebx
	jmp	.LBB3_24
.Ltmp180:
	.p2align	4, 0x90
.LBB3_30:                               # %for.cond102.for.end189_crit_edge.us
                                        #   in Loop: Header=BB3_24 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	.loc	0 946 25                        # ldecod_src/io_tiff.c:946:25
	leaq	(%rdi,%r9), %r13
	movl	-112(%rsp), %ebx                # 4-byte Reload
	addl	$2, %ebx
.Ltmp181:
	#DEBUG_VALUE: vertical_half_1chan:y <- $ebx
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	.loc	0 946 15                        # ldecod_src/io_tiff.c:946:15
	cmpl	-80(%rsp), %ebx                 # 4-byte Folded Reload
.Ltmp182:
	.loc	0 946 3                         # ldecod_src/io_tiff.c:946:3
	jge	.LBB3_31
.Ltmp183:
.LBB3_24:                               # %for.cond102.preheader.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB3_25 Depth 2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- $ebx
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	%ebx, -112(%rsp)                # 4-byte Spill
.Ltmp184:
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	movl	-124(%rsp), %ebx                # 4-byte Reload
	movq	%r13, %rdi
	jmp	.LBB3_25
.Ltmp185:
	.p2align	4, 0x90
.LBB3_28:                               # %if.else176.us
                                        #   in Loop: Header=BB3_25 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	movl	%r13d, %r14d
.Ltmp186:
.LBB3_29:                               # %if.end181.us
                                        #   in Loop: Header=BB3_25 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	.loc	0 960 12 is_stmt 1              # ldecod_src/io_tiff.c:960:12
	movw	%r14w, (%r8)
.Ltmp187:
	#DEBUG_VALUE: vertical_half_1chan:dst <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 948 17                        # ldecod_src/io_tiff.c:948:17
	addq	%rcx, %r8
	addq	%rdx, %rdi
	decl	%ebx
.Ltmp188:
	.loc	0 948 5 is_stmt 0               # ldecod_src/io_tiff.c:948:5
	je	.LBB3_30
.Ltmp189:
.LBB3_25:                               # %for.body105.us
                                        #   Parent Loop BB3_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_stack_value] undef, undef, undef
	.loc	0 950 23 is_stmt 1              # ldecod_src/io_tiff.c:950:23
	movzwl	(%rdi), %r14d
	.loc	0 950 46 is_stmt 0              # ldecod_src/io_tiff.c:950:46
	movzwl	(%rdi,%r9), %r13d
	.loc	0 950 44                        # ldecod_src/io_tiff.c:950:44
	addl	%r14d, %r13d
	.loc	0 950 20                        # ldecod_src/io_tiff.c:950:20
	imull	$225, %r13d, %r14d
	.loc	0 951 15 is_stmt 1              # ldecod_src/io_tiff.c:951:15
	movzwl	(%rdi,%rsi), %r13d
	movq	-104(%rsp), %r15                # 8-byte Reload
	.loc	0 951 38 is_stmt 0              # ldecod_src/io_tiff.c:951:38
	movzwl	(%rdi,%r15,2), %r15d
	.loc	0 951 36                        # ldecod_src/io_tiff.c:951:36
	addl	%r13d, %r15d
	.loc	0 951 12                        # ldecod_src/io_tiff.c:951:12
	imull	$69, %r15d, %r15d
	.loc	0 951 9                         # ldecod_src/io_tiff.c:951:9
	addl	%r14d, %r15d
	.loc	0 952 15 is_stmt 1              # ldecod_src/io_tiff.c:952:15
	movzwl	(%rdi,%r10), %r14d
	.loc	0 952 38 is_stmt 0              # ldecod_src/io_tiff.c:952:38
	movzwl	(%rdi,%r12,2), %r13d
	.loc	0 952 36                        # ldecod_src/io_tiff.c:952:36
	addl	%r14d, %r13d
	.loc	0 952 12                        # ldecod_src/io_tiff.c:952:12
	imull	$-30, %r13d, %r14d
	.loc	0 952 9                         # ldecod_src/io_tiff.c:952:9
	addl	%r15d, %r14d
	.loc	0 953 15 is_stmt 1              # ldecod_src/io_tiff.c:953:15
	movzwl	(%rdi,%r11), %r15d
	movq	-64(%rsp), %r13                 # 8-byte Reload
	.loc	0 953 38 is_stmt 0              # ldecod_src/io_tiff.c:953:38
	movzwl	(%rdi,%r13,2), %r13d
	.loc	0 953 36                        # ldecod_src/io_tiff.c:953:36
	addl	%r15d, %r13d
	.loc	0 953 9                         # ldecod_src/io_tiff.c:953:9
	shll	$4, %r13d
	subl	%r13d, %r14d
	.loc	0 954 15 is_stmt 1              # ldecod_src/io_tiff.c:954:15
	movzwl	(%rdi,%rax), %r15d
	movq	-48(%rsp), %r13                 # 8-byte Reload
	.loc	0 954 38 is_stmt 0              # ldecod_src/io_tiff.c:954:38
	movzwl	(%rdi,%r13,2), %r13d
	.loc	0 954 36                        # ldecod_src/io_tiff.c:954:36
	addl	%r15d, %r13d
	.loc	0 954 12                        # ldecod_src/io_tiff.c:954:12
	leal	(%r13,%r13,2), %r15d
	.loc	0 954 9                         # ldecod_src/io_tiff.c:954:9
	leal	(%r14,%r15,2), %r14d
	.loc	0 955 15 is_stmt 1              # ldecod_src/io_tiff.c:955:15
	movzwl	(%rdi,%rbp), %r15d
	movq	-72(%rsp), %r13                 # 8-byte Reload
	.loc	0 955 38 is_stmt 0              # ldecod_src/io_tiff.c:955:38
	movzwl	(%rdi,%r13,2), %r13d
	.loc	0 955 36                        # ldecod_src/io_tiff.c:955:36
	addl	%r15d, %r13d
	.loc	0 955 9                         # ldecod_src/io_tiff.c:955:9
	leal	(%r14,%r13,2), %r13d
.Ltmp190:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $r13d
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	xorl	%r14d, %r14d
.Ltmp191:
	.loc	0 956 18 is_stmt 1              # ldecod_src/io_tiff.c:956:18
	cmpl	$-767, %r13d                    # imm = 0xFD01
.Ltmp192:
	.loc	0 956 11 is_stmt 0              # ldecod_src/io_tiff.c:956:11
	jl	.LBB3_29
.Ltmp193:
# %bb.26:                               # %if.else176.us
                                        #   in Loop: Header=BB3_25 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $r13d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 955 60 is_stmt 1              # ldecod_src/io_tiff.c:955:60
	leal	256(%r13), %r14d
.Ltmp194:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $r14d
	.loc	0 955 66 is_stmt 0              # ldecod_src/io_tiff.c:955:66
	addl	$767, %r13d                     # imm = 0x2FF
	testl	%r14d, %r14d
	cmovnsl	%r14d, %r13d
	sarl	$9, %r13d
.Ltmp195:
	#DEBUG_VALUE: vertical_half_1chan:result <- $r13d
	.loc	0 958 16 is_stmt 1              # ldecod_src/io_tiff.c:958:16
	cmpl	72(%rsp), %r13d
	jl	.LBB3_28
.Ltmp196:
# %bb.27:                               # %if.else176.us
                                        #   in Loop: Header=BB3_25 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 112, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- $r13d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	72(%rsp), %r14d
	movl	%r14d, %r13d
.Ltmp197:
	jmp	.LBB3_28
.Ltmp198:
.LBB3_21:
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	movq	%r12, %rcx
	.loc	0 946 3 is_stmt 1               # ldecod_src/io_tiff.c:946:3
	jmp	.LBB3_32
.Ltmp199:
.LBB3_31:                               # %for.end194.loopexit
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- $ebx
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 3 is_stmt 0                 # ldecod_src/io_tiff.c:0:3
	movq	%r12, %rcx
	movl	-120(%rsp), %r9d                # 4-byte Reload
	.loc	0 946 3                         # ldecod_src/io_tiff.c:946:3
	addl	$8, %r9d
	movq	-96(%rsp), %r10                 # 8-byte Reload
.Ltmp200:
	.loc	0 967 19 is_stmt 1              # ldecod_src/io_tiff.c:967:19
	leaq	(%rdi,%r10,2), %r13
	movq	-56(%rsp), %rdx                 # 8-byte Reload
	movq	-8(%rsp), %r14                  # 8-byte Reload
.Ltmp201:
	.loc	0 0 19 is_stmt 0                # ldecod_src/io_tiff.c:0:19
	movq	-16(%rsp), %r15                 # 8-byte Reload
	jmp	.LBB3_32
.Ltmp202:
.LBB3_44:                               # %for.cond102.preheader.preheader
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- 6
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	movq	%r12, %rcx
.Ltmp203:
	.loc	0 946 3 is_stmt 1               # ldecod_src/io_tiff.c:946:3
	movl	%r9d, %eax
	addq	$2, %rax
	imulq	%r10, %rax
.Ltmp204:
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	#DEBUG_VALUE: vertical_half_1chan:y <- undef
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	addq	%rax, %r13
	addl	$8, %r9d
.Ltmp205:
.LBB3_32:                               # %for.end194
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 80, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 967 19                        # ldecod_src/io_tiff.c:967:19
	movl	%edx, %eax
	andl	$-2, %eax
.Ltmp206:
	#DEBUG_VALUE: vertical_half_1chan:limit <- $eax
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	.loc	0 0 19 is_stmt 0                # ldecod_src/io_tiff.c:0:19
	movl	%eax, -72(%rsp)                 # 4-byte Spill
.Ltmp207:
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 968 15 is_stmt 1              # ldecod_src/io_tiff.c:968:15
	cmpl	%eax, %r9d
.Ltmp208:
	.loc	0 968 3 is_stmt 0               # ldecod_src/io_tiff.c:968:3
	jge	.LBB3_42
.Ltmp209:
# %bb.33:                               # %for.body199.lr.ph
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	cmpl	$0, -124(%rsp)                  # 4-byte Folded Reload
	jle	.LBB3_42
.Ltmp210:
# %bb.34:                               # %for.body199.us.preheader
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_constu 56, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	leal	-1(%rdx), %eax
	movl	%eax, -88(%rsp)                 # 4-byte Spill
	leal	-2(%rdx), %eax
	movl	%eax, -24(%rsp)                 # 4-byte Spill
	leal	-3(%rdx), %eax
	movl	%eax, -32(%rsp)                 # 4-byte Spill
	leal	-4(%rdx), %eax
	movl	%eax, -40(%rsp)                 # 4-byte Spill
	addl	$-5, %edx
	.loc	0 968 3                         # ldecod_src/io_tiff.c:968:3
	addq	%r15, %r15
	addq	%r10, %r10
	addq	%r14, %r14
	movq	-48(%rsp), %r12                 # 8-byte Reload
	addq	%r12, %r12
	negq	%r12
	movq	%r12, -48(%rsp)                 # 8-byte Spill
	movq	-64(%rsp), %r12                 # 8-byte Reload
	addq	%r12, %r12
	negq	%r12
	movq	%r12, -64(%rsp)                 # 8-byte Spill
	movq	%rcx, %r12
	addq	%rcx, %r12
	negq	%r12
	movq	%r12, -112(%rsp)                # 8-byte Spill
	movq	-104(%rsp), %rax                # 8-byte Reload
	addq	%rax, %rax
	negq	%rax
	movq	%rax, -104(%rsp)                # 8-byte Spill
	movq	%r10, %r12
	negq	%r12
	movq	%rdx, -56(%rsp)                 # 8-byte Spill
.Ltmp211:
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- undef
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movq	%r10, -96(%rsp)                 # 8-byte Spill
	jmp	.LBB3_35
.Ltmp212:
	.p2align	4, 0x90
.LBB3_41:                               # %for.cond249.for.end337_crit_edge.us
                                        #   in Loop: Header=BB3_35 Depth=1
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:src <- undef
	movq	-96(%rsp), %r10                 # 8-byte Reload
.Ltmp213:
	.loc	0 968 25                        # ldecod_src/io_tiff.c:968:25
	addq	%r10, %r13
	movl	-120(%rsp), %r9d                # 4-byte Reload
	addl	$2, %r9d
.Ltmp214:
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:dst <- undef
	.loc	0 968 15                        # ldecod_src/io_tiff.c:968:15
	cmpl	-72(%rsp), %r9d                 # 4-byte Folded Reload
	movq	-56(%rsp), %rdx                 # 8-byte Reload
.Ltmp215:
	.loc	0 968 3                         # ldecod_src/io_tiff.c:968:3
	jge	.LBB3_42
.Ltmp216:
.LBB3_35:                               # %for.body199.us
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB3_36 Depth 2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- $r13
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	-88(%rsp), %edi                 # 4-byte Reload
.Ltmp217:
	.loc	0 970 13 is_stmt 1              # ldecod_src/io_tiff.c:970:13
	subl	%r9d, %edi
.Ltmp218:
	#DEBUG_VALUE: vertical_half_1chan:x <- 0
	.loc	0 0 13 is_stmt 0                # ldecod_src/io_tiff.c:0:13
	movl	$0, %eax
	movq	8(%rsp), %rcx                   # 8-byte Reload
	cmovgl	%ecx, %eax
.Ltmp219:
	#DEBUG_VALUE: vertical_half_1chan:n1 <- undef
	.loc	0 971 13 is_stmt 1              # ldecod_src/io_tiff.c:971:13
	cmpl	-24(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 971 10 is_stmt 0              # ldecod_src/io_tiff.c:971:10
	movl	%edi, %esi
	movl	$2, %r10d
	cmovll	%r10d, %esi
.Ltmp220:
	#DEBUG_VALUE: vertical_half_1chan:n2 <- $esi
	.loc	0 972 13 is_stmt 1              # ldecod_src/io_tiff.c:972:13
	cmpl	-32(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 972 10 is_stmt 0              # ldecod_src/io_tiff.c:972:10
	movl	%edi, %r10d
	movl	$3, %r11d
	cmovll	%r11d, %r10d
.Ltmp221:
	#DEBUG_VALUE: vertical_half_1chan:n3 <- $r10d
	.loc	0 973 13 is_stmt 1              # ldecod_src/io_tiff.c:973:13
	cmpl	-40(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 973 10 is_stmt 0              # ldecod_src/io_tiff.c:973:10
	movl	%edi, %r11d
	movl	$4, %ebx
	cmovll	%ebx, %r11d
.Ltmp222:
	#DEBUG_VALUE: vertical_half_1chan:n4 <- $r11d
	.loc	0 974 13 is_stmt 1              # ldecod_src/io_tiff.c:974:13
	cmpl	%edx, %r9d
	.loc	0 974 10 is_stmt 0              # ldecod_src/io_tiff.c:974:10
	movl	%edi, %ebx
	movl	$5, %edx
	cmovll	%edx, %ebx
.Ltmp223:
	#DEBUG_VALUE: vertical_half_1chan:n5 <- $ebx
	.loc	0 0 10                          # ldecod_src/io_tiff.c:0:10
	movl	%r9d, -120(%rsp)                # 4-byte Spill
.Ltmp224:
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 975 13 is_stmt 1              # ldecod_src/io_tiff.c:975:13
	cmpl	-80(%rsp), %r9d                 # 4-byte Folded Reload
	.loc	0 975 10 is_stmt 0              # ldecod_src/io_tiff.c:975:10
	movl	$6, %edx
	cmovll	%edx, %edi
.Ltmp225:
	#DEBUG_VALUE: vertical_half_1chan:n6 <- $edi
	.loc	0 0 10                          # ldecod_src/io_tiff.c:0:10
	cltq
	imull	%ecx, %esi
.Ltmp226:
	movslq	%esi, %r9
	imull	%ecx, %r10d
.Ltmp227:
	movslq	%r10d, %r10
	imull	%ecx, %r11d
.Ltmp228:
	movslq	%r11d, %r11
	imull	%ecx, %ebx
.Ltmp229:
	movslq	%ebx, %rbp
	imull	%ecx, %edi
.Ltmp230:
	movslq	%edi, %rdi
	movl	-124(%rsp), %ebx                # 4-byte Reload
	jmp	.LBB3_36
.Ltmp231:
	.p2align	4, 0x90
.LBB3_39:                               # %if.else324.us
                                        #   in Loop: Header=BB3_36 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	movl	%esi, %r14d
.Ltmp232:
.LBB3_40:                               # %if.end329.us
                                        #   in Loop: Header=BB3_36 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- $r14d
	.loc	0 988 12 is_stmt 1              # ldecod_src/io_tiff.c:988:12
	movw	%r14w, (%r8)
.Ltmp233:
	#DEBUG_VALUE: vertical_half_1chan:dst <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef, undef
	.loc	0 976 17                        # ldecod_src/io_tiff.c:976:17
	addq	%r15, %r8
	movq	%rdx, %r14
.Ltmp234:
	addq	%rdx, %r13
	decl	%ebx
.Ltmp235:
	.loc	0 976 5 is_stmt 0               # ldecod_src/io_tiff.c:976:5
	je	.LBB3_41
.Ltmp236:
.LBB3_36:                               # %for.body252.us
                                        #   Parent Loop BB3_35 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:src <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_consts 2, DW_OP_LLVM_arg 3, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_mul, DW_OP_LLVM_arg 4, DW_OP_plus, DW_OP_stack_value] undef, undef, undef, undef, undef
	#DEBUG_VALUE: vertical_half_1chan:x <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 2, DW_OP_LLVM_arg 2, DW_OP_LLVM_convert 64 5, DW_OP_mul, DW_OP_div, DW_OP_stack_value] undef, undef, undef
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movq	%r14, %rdx
.Ltmp237:
	.loc	0 978 23 is_stmt 1              # ldecod_src/io_tiff.c:978:23
	movzwl	(%r13), %esi
	.loc	0 978 46 is_stmt 0              # ldecod_src/io_tiff.c:978:46
	movzwl	(%r13,%rax,2), %r14d
	.loc	0 978 44                        # ldecod_src/io_tiff.c:978:44
	addl	%esi, %r14d
	.loc	0 978 20                        # ldecod_src/io_tiff.c:978:20
	imull	$225, %r14d, %esi
	.loc	0 979 15 is_stmt 1              # ldecod_src/io_tiff.c:979:15
	movzwl	(%r13,%r12), %r14d
	movq	%r15, %rcx
	.loc	0 979 38 is_stmt 0              # ldecod_src/io_tiff.c:979:38
	movzwl	(%r13,%r9,2), %r15d
	.loc	0 979 36                        # ldecod_src/io_tiff.c:979:36
	addl	%r14d, %r15d
	.loc	0 979 12                        # ldecod_src/io_tiff.c:979:12
	imull	$69, %r15d, %r14d
	.loc	0 979 9                         # ldecod_src/io_tiff.c:979:9
	addl	%esi, %r14d
	movq	-104(%rsp), %rsi                # 8-byte Reload
	.loc	0 980 15 is_stmt 1              # ldecod_src/io_tiff.c:980:15
	movzwl	(%r13,%rsi), %esi
	.loc	0 980 38 is_stmt 0              # ldecod_src/io_tiff.c:980:38
	movzwl	(%r13,%r10,2), %r15d
	.loc	0 980 36                        # ldecod_src/io_tiff.c:980:36
	addl	%esi, %r15d
	.loc	0 980 12                        # ldecod_src/io_tiff.c:980:12
	imull	$-30, %r15d, %esi
	.loc	0 980 9                         # ldecod_src/io_tiff.c:980:9
	addl	%r14d, %esi
	movq	-112(%rsp), %r14                # 8-byte Reload
	.loc	0 981 15 is_stmt 1              # ldecod_src/io_tiff.c:981:15
	movzwl	(%r13,%r14), %r14d
	.loc	0 981 38 is_stmt 0              # ldecod_src/io_tiff.c:981:38
	movzwl	(%r13,%r11,2), %r15d
	.loc	0 981 36                        # ldecod_src/io_tiff.c:981:36
	addl	%r14d, %r15d
	.loc	0 981 9                         # ldecod_src/io_tiff.c:981:9
	shll	$4, %r15d
	subl	%r15d, %esi
	movq	-64(%rsp), %r14                 # 8-byte Reload
	.loc	0 982 15 is_stmt 1              # ldecod_src/io_tiff.c:982:15
	movzwl	(%r13,%r14), %r14d
	.loc	0 982 38 is_stmt 0              # ldecod_src/io_tiff.c:982:38
	movzwl	(%r13,%rbp,2), %r15d
	.loc	0 982 36                        # ldecod_src/io_tiff.c:982:36
	addl	%r14d, %r15d
	.loc	0 982 12                        # ldecod_src/io_tiff.c:982:12
	leal	(%r15,%r15,2), %r14d
	.loc	0 982 9                         # ldecod_src/io_tiff.c:982:9
	leal	(%rsi,%r14,2), %esi
	movq	-48(%rsp), %r14                 # 8-byte Reload
	.loc	0 983 15 is_stmt 1              # ldecod_src/io_tiff.c:983:15
	movzwl	(%r13,%r14), %r14d
	.loc	0 983 38 is_stmt 0              # ldecod_src/io_tiff.c:983:38
	movzwl	(%r13,%rdi,2), %r15d
	.loc	0 983 36                        # ldecod_src/io_tiff.c:983:36
	addl	%r14d, %r15d
	.loc	0 983 9                         # ldecod_src/io_tiff.c:983:9
	leal	(%rsi,%r15,2), %esi
.Ltmp238:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $esi
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	movq	%rcx, %r15
	xorl	%r14d, %r14d
.Ltmp239:
	.loc	0 984 18 is_stmt 1              # ldecod_src/io_tiff.c:984:18
	cmpl	$-767, %esi                     # imm = 0xFD01
.Ltmp240:
	.loc	0 984 11 is_stmt 0              # ldecod_src/io_tiff.c:984:11
	jl	.LBB3_40
.Ltmp241:
# %bb.37:                               # %if.else324.us
                                        #   in Loop: Header=BB3_36 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_plus_uconst 256, DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $esi
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 983 61 is_stmt 1              # ldecod_src/io_tiff.c:983:61
	leal	256(%rsi), %r14d
.Ltmp242:
	#DEBUG_VALUE: vertical_half_1chan:result <- [DW_OP_constu 512, DW_OP_div, DW_OP_stack_value] $r14d
	.loc	0 983 67 is_stmt 0              # ldecod_src/io_tiff.c:983:67
	addl	$767, %esi                      # imm = 0x2FF
	testl	%r14d, %r14d
	cmovnsl	%r14d, %esi
	sarl	$9, %esi
.Ltmp243:
	#DEBUG_VALUE: vertical_half_1chan:result <- $esi
	.loc	0 986 16 is_stmt 1              # ldecod_src/io_tiff.c:986:16
	cmpl	72(%rsp), %esi
	jl	.LBB3_39
.Ltmp244:
# %bb.38:                               # %if.else324.us
                                        #   in Loop: Header=BB3_36 Depth=2
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:dst <- $r8
	#DEBUG_VALUE: vertical_half_1chan:y <- [DW_OP_constu 120, DW_OP_minus, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:result <- $esi
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 0 16 is_stmt 0                # ldecod_src/io_tiff.c:0:16
	movl	72(%rsp), %esi
.Ltmp245:
                                        # kill: def $esi killed $esi def $rsi
	jmp	.LBB3_39
.Ltmp246:
.LBB3_42:                               # %for.end342
	#DEBUG_VALUE: vertical_half_1chan:srcPtr <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: vertical_half_1chan:xres <- [DW_OP_constu 124, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcYres <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: vertical_half_1chan:srcZres <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: vertical_half_1chan:dstPtr <- [DW_OP_LLVM_entry_value 1] $r8
	#DEBUG_VALUE: vertical_half_1chan:dstZres <- [DW_OP_LLVM_entry_value 1] $r9d
	#DEBUG_VALUE: vertical_half_1chan:pixMax <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: vertical_half_1chan:srcRowCount <- [DW_OP_plus_uconst 8, DW_OP_deref] $rsp
	#DEBUG_VALUE: vertical_half_1chan:y <- $r9d
	#DEBUG_VALUE: vertical_half_1chan:limit <- [DW_OP_constu 72, DW_OP_minus, DW_OP_deref] $rsp
	.loc	0 994 1 epilogue_begin is_stmt 1 # ldecod_src/io_tiff.c:994:1
	addq	$16, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp247:
.Lfunc_end3:
	.size	vertical_half_1chan, .Lfunc_end3-vertical_half_1chan
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function ReadTIFFImage
.LCPI4_0:
	.quad	0x40cb7b7b7b7b7b7b              # double 14070.964705882352
	.quad	0x40d0000000000000              # double 16384
.LCPI4_1:
	.quad	0x40cc1c1c1c1c1c1c              # double 14392.219607843137
	.quad	0x40d0000000000000              # double 16384
.LCPI4_2:
	.quad	0x3fe0000000000000              # double 0.5
	.quad	0x3fe0000000000000              # double 0.5
.LCPI4_5:
	.quad	0xbfe0000000000000              # double -0.5
	.quad	0x3fe0000000000000              # double 0.5
.LCPI4_6:
	.zero	8
	.quad	0x3fe0000000000000              # double 0.5
.LCPI4_7:
	.quad	0xbfe0000000000000              # double -0.5
	.quad	0xbfe0000000000000              # double -0.5
.LCPI4_8:
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
.LCPI4_9:
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
.LCPI4_10:
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
	.long	2147483648                      # 0x80000000
.LCPI4_11:
	.long	2147549183                      # 0x8000ffff
	.long	2147549183                      # 0x8000ffff
	.long	2147549183                      # 0x8000ffff
	.long	2147549183                      # 0x8000ffff
.LCPI4_12:
	.long	536879104                       # 0x20002000
	.long	536879104                       # 0x20002000
	.long	536879104                       # 0x20002000
	.long	536879104                       # 0x20002000
.LCPI4_13:
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
.LCPI4_14:
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
.LCPI4_15:
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
	.short	65535                           # 0xffff
	.short	65535                           # 0xffff
	.short	0                               # 0x0
.LCPI4_16:
	.long	536879104                       # 0x20002000
	.zero	4
	.zero	4
	.zero	4
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3, 0x0
.LCPI4_3:
	.quad	0xbff0000000000000              # double -1
.LCPI4_4:
	.quad	0x3fe0000000000000              # double 0.5
	.text
	.globl	ReadTIFFImage
	.p2align	4, 0x90
	.type	ReadTIFFImage,@function
ReadTIFFImage:                          # @ReadTIFFImage
.Lfunc_begin4:
	.loc	0 1016 0                        # ldecod_src/io_tiff.c:1016:0
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $rcx
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$1544, %rsp                     # imm = 0x608
	.cfi_def_cfa_offset 1600
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %r15
	movl	%edx, %r9d
	movq	%rdi, %r13
.Ltmp248:
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1030 12 prologue_end          # ldecod_src/io_tiff.c:1030:12
	movslq	16(%rcx), %r12
.Ltmp249:
	#DEBUG_VALUE: ReadTIFFImage:height <- undef
	#DEBUG_VALUE: ReadTIFFImage:width <- undef
	.loc	0 1031 12                       # ldecod_src/io_tiff.c:1031:12
	movl	28(%rcx), %ebx
.Ltmp250:
	.loc	0 1034 27                       # ldecod_src/io_tiff.c:1034:27
	cmpl	$1, 4(%rcx)
	.loc	0 1034 37 is_stmt 0             # ldecod_src/io_tiff.c:1034:37
	jne	.LBB4_2
.Ltmp251:
# %bb.1:                                # %land.lhs.true
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1034 41                       # ldecod_src/io_tiff.c:1034:41
	cmpl	$0, 916(%rsi)
.Ltmp252:
	.loc	0 1034 7                        # ldecod_src/io_tiff.c:1034:7
	je	.LBB4_70
.Ltmp253:
.LBB4_2:                                # %if.end
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:frameNumberInFile <- undef
	.loc	0 1041 19 is_stmt 1             # ldecod_src/io_tiff.c:1041:19
	movl	924(%rsi), %r8d
	.loc	0 1041 30 is_stmt 0             # ldecod_src/io_tiff.c:1041:30
	testl	%r8d, %r8d
.Ltmp254:
	.loc	0 1041 7                        # ldecod_src/io_tiff.c:1041:7
	jle	.LBB4_6
.Ltmp255:
# %bb.3:                                # %if.then5
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:frameNumberInFile <- undef
	.loc	0 1040 37 is_stmt 1             # ldecod_src/io_tiff.c:1040:37
	addl	3992(%r13), %r9d
.Ltmp256:
	#DEBUG_VALUE: ReadTIFFImage:frameNumberInFile <- $r9d
	.loc	0 0 0 is_stmt 0                 # ldecod_src/io_tiff.c:0:0
	leaq	255(%rsi), %rcx
	leaq	510(%rsi), %rax
	.loc	0 1043 9 is_stmt 1              # ldecod_src/io_tiff.c:1043:9
	cmpl	$0, 920(%rsi)
	movl	$.L.str.2, %esi
.Ltmp257:
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	.loc	0 0 9 is_stmt 0                 # ldecod_src/io_tiff.c:0:9
	movl	$.L.str.1, %edx
.Ltmp258:
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	cmoveq	%rsi, %rdx
	movq	%rax, (%rsp)
	leaq	1280(%rsp), %rdi
	movl	$255, %esi
	xorl	%eax, %eax
	callq	snprintf@PLT
.Ltmp259:
	#DEBUG_VALUE: ReadTIFFImage:n <- $eax
	.loc	0 1051 29 is_stmt 1             # ldecod_src/io_tiff.c:1051:29
	cmpl	$255, %eax
	je	.LBB4_5
.Ltmp260:
# %bb.4:                                # %if.then5
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:n <- $eax
	cmpl	$-1, %eax
	jne	.LBB4_7
.Ltmp261:
.LBB4_5:                                # %if.then22
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:n <- $eax
	.loc	0 1053 16                       # ldecod_src/io_tiff.c:1053:16
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp262:
	movq	(%rax), %rcx
	.loc	0 1053 7 is_stmt 0              # ldecod_src/io_tiff.c:1053:7
	movl	$.L.str.3, %edi
	movl	$39, %esi
	movl	$1, %edx
	callq	fwrite@PLT
.Ltmp263:
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	jmp	.LBB4_107
.Ltmp264:
.LBB4_6:                                # %if.else25
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	leaq	1280(%rsp), %rdi
.Ltmp265:
	.loc	0 1059 5 is_stmt 1              # ldecod_src/io_tiff.c:1059:5
	callq	strcpy@PLT
.Ltmp266:
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
.LBB4_7:                                # %if.end29
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	leaq	1280(%rsp), %rdi
.Ltmp267:
	.loc	0 465 8 is_stmt 1               # ldecod_src/io_tiff.c:465:8
	xorl	%esi, %esi
	xorl	%eax, %eax
	callq	open@PLT
.Ltmp268:
	#DEBUG_VALUE: readFileIntoMemory:fd <- $eax
	.loc	0 466 10                        # ldecod_src/io_tiff.c:466:10
	cmpl	$-1, %eax
.Ltmp269:
	#DEBUG_VALUE: readTiff:t <- undef
	#DEBUG_VALUE: readFileIntoMemory:t <- undef
	.loc	0 466 7 is_stmt 0               # ldecod_src/io_tiff.c:466:7
	je	.LBB4_16
.Ltmp270:
# %bb.8:                                # %if.end.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $eax
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movl	%eax, %ebp
	movq	%r12, 216(%rsp)                 # 8-byte Spill
	.loc	0 472 16 is_stmt 1              # ldecod_src/io_tiff.c:472:16
	movl	%eax, %edi
	xorl	%esi, %esi
	movl	$2, %edx
	callq	lseek@PLT
.Ltmp271:
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $rax
	.loc	0 473 11                        # ldecod_src/io_tiff.c:473:11
	cmpq	$-1, %rax
.Ltmp272:
	.loc	0 473 7 is_stmt 0               # ldecod_src/io_tiff.c:473:7
	je	.LBB4_101
.Ltmp273:
# %bb.9:                                # %if.end9.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $rax
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	movq	%rax, %r12
.Ltmp274:
	.loc	0 476 7 is_stmt 1               # ldecod_src/io_tiff.c:476:7
	movl	%ebp, %edi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	lseek@PLT
.Ltmp275:
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	.loc	0 476 31 is_stmt 0              # ldecod_src/io_tiff.c:476:31
	cmpq	$-1, %rax
.Ltmp276:
	.loc	0 476 7                         # ldecod_src/io_tiff.c:476:7
	je	.LBB4_101
.Ltmp277:
# %bb.10:                               # %if.end14.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	.loc	0 479 43 is_stmt 1              # ldecod_src/io_tiff.c:479:43
	movq	ReadTIFFImage.t+8(%rip), %rdi
	.loc	0 479 31 is_stmt 0              # ldecod_src/io_tiff.c:479:31
	movq	%r12, %rsi
	callq	realloc@PLT
.Ltmp278:
	.loc	0 479 19                        # ldecod_src/io_tiff.c:479:19
	movq	%rax, ReadTIFFImage.t+8(%rip)
.Ltmp279:
	.loc	0 480 23 is_stmt 1              # ldecod_src/io_tiff.c:480:23
	testq	%rax, %rax
.Ltmp280:
	.loc	0 480 7 is_stmt 0               # ldecod_src/io_tiff.c:480:7
	je	.LBB4_15
.Ltmp281:
# %bb.11:                               # %if.end22.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	.loc	0 486 19 is_stmt 1              # ldecod_src/io_tiff.c:486:19
	movl	%ebp, %edi
	movq	%rax, %rsi
	movq	%r12, %rdx
	callq	read@PLT
.Ltmp282:
	.loc	0 0 19 is_stmt 0                # ldecod_src/io_tiff.c:0:19
	movq	%rbx, 296(%rsp)                 # 8-byte Spill
	.loc	0 486 19                        # ldecod_src/io_tiff.c:486:19
	movq	%rax, %rbx
.Ltmp283:
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	movl	%ebp, %edi
	callq	close@PLT
.Ltmp284:
	.loc	0 487 14 is_stmt 1              # ldecod_src/io_tiff.c:487:14
	cmpq	%r12, %rbx
.Ltmp285:
	.loc	0 487 7 is_stmt 0               # ldecod_src/io_tiff.c:487:7
	jne	.LBB4_101
.Ltmp286:
# %bb.12:                               # %if.end29.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	.loc	0 495 19 is_stmt 1              # ldecod_src/io_tiff.c:495:19
	movq	ReadTIFFImage.t+8(%rip), %rax
	.loc	0 495 41 is_stmt 0              # ldecod_src/io_tiff.c:495:41
	movzwl	(%rax), %ecx
	rolw	$8, %cx
	movzwl	%cx, %ecx
.Ltmp287:
	#DEBUG_VALUE: readFileIntoMemory:byteOrder <- undef
	.loc	0 496 3 is_stmt 1               # ldecod_src/io_tiff.c:496:3
	cmpl	$18761, %ecx                    # imm = 0x4949
	je	.LBB4_17
.Ltmp288:
# %bb.13:                               # %if.end29.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	cmpl	$19789, %ecx                    # imm = 0x4D4D
	jne	.LBB4_127
.Ltmp289:
# %bb.14:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	.loc	0 0 3 is_stmt 0                 # ldecod_src/io_tiff.c:0:3
	movl	$getSwappedU32, %edx
	movl	$getSwappedU16, %ecx
	xorl	%esi, %esi
	.loc	0 496 3                         # ldecod_src/io_tiff.c:496:3
	jmp	.LBB4_18
.Ltmp290:
.LBB4_15:                               # %if.then20.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	.loc	0 482 5 is_stmt 1               # ldecod_src/io_tiff.c:482:5
	movl	%ebp, %edi
	callq	close@PLT
.Ltmp291:
	.loc	0 483 5                         # ldecod_src/io_tiff.c:483:5
	jmp	.LBB4_101
.Ltmp292:
.LBB4_16:                               # %if.then.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $eax
	.loc	0 468 14                        # ldecod_src/io_tiff.c:468:14
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp293:
	movq	(%rax), %rdi
	leaq	1280(%rsp), %rdx
	.loc	0 468 5 is_stmt 0               # ldecod_src/io_tiff.c:468:5
	movl	$.L.str.9, %esi
	xorl	%eax, %eax
	callq	fprintf@PLT
.Ltmp294:
	.loc	0 469 5 is_stmt 1               # ldecod_src/io_tiff.c:469:5
	jmp	.LBB4_101
.Ltmp295:
.LBB4_17:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movl	$getU32, %edx
	movl	$getU16, %ecx
	movl	$1, %esi
.Ltmp296:
.LBB4_18:                               # %if.end.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	leaq	1(%rax), %rdi
.Ltmp297:
	movl	%esi, ReadTIFFImage.t+24(%rip)
.Ltmp298:
	movq	%rcx, ReadTIFFImage.t+8728(%rip)
	movq	%rdx, ReadTIFFImage.t+8736(%rip)
.Ltmp299:
	#DEBUG_VALUE: readImageFileHeader:t <- undef
	#DEBUG_VALUE: getU16:t <- undef
	.loc	0 209 19 is_stmt 1              # ldecod_src/io_tiff.c:209:19
	movq	%rdi, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%rax), %edx
.Ltmp300:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%rax), %rsi
	movq	%rsi, ReadTIFFImage.t+16(%rip)
.Ltmp301:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10                        # ldecod_src/io_tiff.c:211:10
	movzbl	1(%rax), %esi
	shll	$8, %esi
	orl	%edx, %esi
.Ltmp302:
	.loc	0 609 20                        # ldecod_src/io_tiff.c:609:20
	movw	%si, ReadTIFFImage.t+32(%rip)
.Ltmp303:
	#DEBUG_VALUE: getU16:t <- undef
	.loc	0 209 19                        # ldecod_src/io_tiff.c:209:19
	leaq	3(%rax), %rdx
	movq	%rdx, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	2(%rax), %esi
.Ltmp304:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	4(%rax), %rdx
	movq	%rdx, ReadTIFFImage.t+16(%rip)
.Ltmp305:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10                        # ldecod_src/io_tiff.c:211:10
	movzbl	3(%rax), %edx
	shll	$8, %edx
	orl	%esi, %edx
.Ltmp306:
	.loc	0 610 26                        # ldecod_src/io_tiff.c:610:26
	movw	%dx, ReadTIFFImage.t+34(%rip)
.Ltmp307:
	#DEBUG_VALUE: getU32:t <- undef
	.loc	0 228 19                        # ldecod_src/io_tiff.c:228:19
	leaq	5(%rax), %rsi
	movq	%rsi, ReadTIFFImage.t+16(%rip)
	.loc	0 228 13 is_stmt 0              # ldecod_src/io_tiff.c:228:13
	movzbl	4(%rax), %edi
.Ltmp308:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 229 19 is_stmt 1              # ldecod_src/io_tiff.c:229:19
	leaq	6(%rax), %rsi
	movq	%rsi, ReadTIFFImage.t+16(%rip)
	.loc	0 229 13 is_stmt 0              # ldecod_src/io_tiff.c:229:13
	movzbl	5(%rax), %esi
.Ltmp309:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 230 19 is_stmt 1              # ldecod_src/io_tiff.c:230:19
	leaq	7(%rax), %r8
	movq	%r8, ReadTIFFImage.t+16(%rip)
	.loc	0 230 13 is_stmt 0              # ldecod_src/io_tiff.c:230:13
	movzbl	6(%rax), %r8d
.Ltmp310:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 16 8] undef
	.loc	0 231 19 is_stmt 1              # ldecod_src/io_tiff.c:231:19
	leaq	8(%rax), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
.Ltmp311:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 24 8] undef
	.loc	0 233 1                         # ldecod_src/io_tiff.c:233:1
	movzbl	7(%rax), %r9d
	shll	$24, %r9d
	shll	$16, %r8d
	shll	$8, %esi
	orl	%edi, %esi
	orl	%r8d, %esi
	orl	%r9d, %esi
.Ltmp312:
	.loc	0 611 17                        # ldecod_src/io_tiff.c:611:17
	movl	%esi, ReadTIFFImage.t+36(%rip)
.Ltmp313:
	.loc	0 612 30                        # ldecod_src/io_tiff.c:612:30
	cmpw	$42, %dx
.Ltmp314:
	.loc	0 612 7 is_stmt 0               # ldecod_src/io_tiff.c:612:7
	jne	.LBB4_100
.Ltmp315:
# %bb.19:                               # %if.end4.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	%r15, 136(%rsp)                 # 8-byte Spill
.Ltmp316:
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	.loc	0 617 27 is_stmt 1              # ldecod_src/io_tiff.c:617:27
	movl	%esi, %edx
	addq	%rdx, %rax
	.loc	0 617 9 is_stmt 0               # ldecod_src/io_tiff.c:617:9
	movq	%rax, ReadTIFFImage.t+16(%rip)
.Ltmp317:
	#DEBUG_VALUE: readImageFileDirectory:t <- undef
	.loc	0 590 21 is_stmt 1              # ldecod_src/io_tiff.c:590:21
	movl	$ReadTIFFImage.t, %edi
	callq	*%rcx
.Ltmp318:
	#DEBUG_VALUE: readImageFileDirectory:nEntries <- $eax
	#DEBUG_VALUE: readImageFileDirectory:i <- 0
	.loc	0 592 15                        # ldecod_src/io_tiff.c:592:15
	testl	%eax, %eax
.Ltmp319:
	.loc	0 592 3 is_stmt 0               # ldecod_src/io_tiff.c:592:3
	je	.LBB4_47
.Ltmp320:
# %bb.20:                               # %for.body.i.i.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageFileDirectory:nEntries <- $eax
	#DEBUG_VALUE: readImageFileDirectory:i <- 0
	.loc	0 0 3                           # ldecod_src/io_tiff.c:0:3
	movl	%eax, %ebp
	jmp	.LBB4_23
.Ltmp321:
.LBB4_21:                               # %sw.bb.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 337 19 is_stmt 1              # ldecod_src/io_tiff.c:337:19
	movl	%eax, ReadTIFFImage.t+64(%rip)
.Ltmp322:
	.p2align	4, 0x90
.LBB4_22:                               # %readDirectoryEntry.exit.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageFileDirectory:i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 592 15                        # ldecod_src/io_tiff.c:592:15
	decl	%ebp
.Ltmp323:
	.loc	0 592 3 is_stmt 0               # ldecod_src/io_tiff.c:592:3
	je	.LBB4_47
.Ltmp324:
.LBB4_23:                               # %for.body.i.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageFileDirectory:i <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: readDirectoryEntry:t <- undef
	.loc	0 327 21 is_stmt 1              # ldecod_src/io_tiff.c:327:21
	movl	$ReadTIFFImage.t, %edi
	callq	*ReadTIFFImage.t+8728(%rip)
.Ltmp325:
	movl	%eax, %ebx
.Ltmp326:
	#DEBUG_VALUE: readDirectoryEntry:tag <- $ebx
	.loc	0 328 32                        # ldecod_src/io_tiff.c:328:32
	movl	$ReadTIFFImage.t, %edi
	callq	*ReadTIFFImage.t+8728(%rip)
.Ltmp327:
	movl	%eax, %r12d
.Ltmp328:
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	.loc	0 329 21                        # ldecod_src/io_tiff.c:329:21
	movl	$ReadTIFFImage.t, %edi
	callq	*ReadTIFFImage.t+8736(%rip)
.Ltmp329:
	movl	%eax, %r15d
.Ltmp330:
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	.loc	0 330 21                        # ldecod_src/io_tiff.c:330:21
	movl	$ReadTIFFImage.t, %edi
	callq	*ReadTIFFImage.t+8736(%rip)
.Ltmp331:
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 332 3                         # ldecod_src/io_tiff.c:332:3
	addl	$-256, %ebx
.Ltmp332:
	cmpl	$27, %ebx
	ja	.LBB4_22
.Ltmp333:
# %bb.24:                               # %for.body.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	jmpq	*.LJTI4_0(,%rbx,8)
.Ltmp334:
.LBB4_25:                               # %sw.bb6.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 342 20                        # ldecod_src/io_tiff.c:342:20
	movl	%eax, ReadTIFFImage.t+60(%rip)
.Ltmp335:
	.loc	0 343 16                        # ldecod_src/io_tiff.c:343:16
	cmpl	$1081, %eax                     # imm = 0x439
.Ltmp336:
	.loc	0 343 9 is_stmt 0               # ldecod_src/io_tiff.c:343:9
	jb	.LBB4_22
.Ltmp337:
# %bb.26:                               # %if.then.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 345 16 is_stmt 1              # ldecod_src/io_tiff.c:345:16
	movq	stderr@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rdi
	.loc	0 345 7 is_stmt 0               # ldecod_src/io_tiff.c:345:7
	movl	$.L.str.12, %esi
	movl	%eax, %edx
	movl	$1080, %ecx                     # imm = 0x438
	xorl	%eax, %eax
.Ltmp338:
	#DEBUG_VALUE: readDirectoryEntry:offset <- $edx
	callq	fprintf@PLT
.Ltmp339:
	.loc	0 346 7 is_stmt 1               # ldecod_src/io_tiff.c:346:7
	jmp	.LBB4_22
.Ltmp340:
.LBB4_27:                               # %sw.bb8.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 350 15                        # ldecod_src/io_tiff.c:350:15
	cmpl	$3, %r15d
.Ltmp341:
	.loc	0 350 9 is_stmt 0               # ldecod_src/io_tiff.c:350:9
	jne	.LBB4_44
.Ltmp342:
# %bb.28:                               # %if.end12.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 355 5 is_stmt 1               # ldecod_src/io_tiff.c:355:5
	movl	$ReadTIFFImage.t+44, %edx
	movl	%eax, %edi
	movl	%r12d, %esi
	movl	$3, %ecx
	callq	getIntArray
.Ltmp343:
	.loc	0 357 9                         # ldecod_src/io_tiff.c:357:9
	movl	ReadTIFFImage.t+44(%rip), %eax
	.loc	0 357 29 is_stmt 0              # ldecod_src/io_tiff.c:357:29
	cmpl	ReadTIFFImage.t+48(%rip), %eax
	.loc	0 357 52                        # ldecod_src/io_tiff.c:357:52
	jne	.LBB4_45
.Ltmp344:
# %bb.29:                               # %if.end12.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	cmpl	ReadTIFFImage.t+52(%rip), %eax
	jne	.LBB4_45
.Ltmp345:
# %bb.30:                               # %if.end24.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	.loc	0 362 34 is_stmt 1              # ldecod_src/io_tiff.c:362:34
	cmpl	$8, %eax
	je	.LBB4_22
.Ltmp346:
# %bb.31:                               # %if.end24.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	cmpl	$16, %eax
	je	.LBB4_22
.Ltmp347:
# %bb.32:                               # %if.then31.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	.loc	0 364 16                        # ldecod_src/io_tiff.c:364:16
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	.loc	0 364 7 is_stmt 0               # ldecod_src/io_tiff.c:364:7
	movl	$.L.str.15, %edi
	movl	$40, %esi
	jmp	.LBB4_46
.Ltmp348:
.LBB4_33:                               # %sw.bb42.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 390 20 is_stmt 1              # ldecod_src/io_tiff.c:390:20
	movw	%ax, ReadTIFFImage.t+40(%rip)
.Ltmp349:
	.loc	0 391 24                        # ldecod_src/io_tiff.c:391:24
	cmpw	$1, %ax
.Ltmp350:
	.loc	0 391 9 is_stmt 0               # ldecod_src/io_tiff.c:391:9
	je	.LBB4_22
.Ltmp351:
# %bb.34:                               # %if.then47.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 393 16 is_stmt 1              # ldecod_src/io_tiff.c:393:16
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp352:
	movq	(%rax), %rcx
	.loc	0 393 7 is_stmt 0               # ldecod_src/io_tiff.c:393:7
	movl	$.L.str.17, %edi
	movl	$32, %esi
	jmp	.LBB4_46
.Ltmp353:
.LBB4_35:                               # %sw.bb51.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 405 21 is_stmt 1              # ldecod_src/io_tiff.c:405:21
	movl	%eax, ReadTIFFImage.t+56(%rip)
	.loc	0 406 5                         # ldecod_src/io_tiff.c:406:5
	jmp	.LBB4_22
.Ltmp354:
.LBB4_36:                               # %sw.bb52.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 409 5                         # ldecod_src/io_tiff.c:409:5
	movl	$ReadTIFFImage.t+68, %edx
	movl	%eax, %edi
	movl	%r12d, %esi
	movl	%r15d, %ecx
	jmp	.LBB4_43
.Ltmp355:
.LBB4_37:                               # %sw.bb34.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 371 16                        # ldecod_src/io_tiff.c:371:16
	cmpl	$1, %eax
.Ltmp356:
	.loc	0 371 9 is_stmt 0               # ldecod_src/io_tiff.c:371:9
	je	.LBB4_22
.Ltmp357:
# %bb.38:                               # %if.then36.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 373 16 is_stmt 1              # ldecod_src/io_tiff.c:373:16
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp358:
	movq	(%rax), %rcx
	.loc	0 373 7 is_stmt 0               # ldecod_src/io_tiff.c:373:7
	movl	$.L.str.16, %edi
	movl	$39, %esi
	jmp	.LBB4_46
.Ltmp359:
.LBB4_39:                               # %sw.bb40.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 384 5 is_stmt 1               # ldecod_src/io_tiff.c:384:5
	movl	$ReadTIFFImage.t+4388, %edx
	movl	%eax, %edi
	movl	%r12d, %esi
	movl	%r15d, %ecx
	callq	getIntArray
.Ltmp360:
	.loc	0 385 16                        # ldecod_src/io_tiff.c:385:16
	movl	%r15d, ReadTIFFImage.t+28(%rip)
	.loc	0 386 5                         # ldecod_src/io_tiff.c:386:5
	jmp	.LBB4_22
.Ltmp361:
.LBB4_40:                               # %sw.bb56.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 418 5                         # ldecod_src/io_tiff.c:418:5
	movl	$ReadTIFFImage.t+8716, %edx
	jmp	.LBB4_42
.Ltmp362:
.LBB4_41:                               # %sw.bb54.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 413 5                         # ldecod_src/io_tiff.c:413:5
	movl	$ReadTIFFImage.t+8708, %edx
.Ltmp363:
.LBB4_42:                               # %readDirectoryEntry.exit.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 0 0 is_stmt 0                 # ldecod_src/io_tiff.c:0:0
	movl	%eax, %edi
	movl	%r12d, %esi
	movl	$1, %ecx
.Ltmp364:
.LBB4_43:                               # %readDirectoryEntry.exit.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $edi
	callq	getIntArray
.Ltmp365:
	jmp	.LBB4_22
.Ltmp366:
.LBB4_44:                               # %if.then10.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	#DEBUG_VALUE: readDirectoryEntry:offset <- $eax
	.loc	0 352 16 is_stmt 1              # ldecod_src/io_tiff.c:352:16
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp367:
	movq	(%rax), %rcx
	.loc	0 352 7 is_stmt 0               # ldecod_src/io_tiff.c:352:7
	movl	$.L.str.13, %edi
	movl	$35, %esi
	jmp	.LBB4_46
.Ltmp368:
.LBB4_45:                               # %if.then22.i.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	.loc	0 359 16 is_stmt 1              # ldecod_src/io_tiff.c:359:16
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	.loc	0 359 7 is_stmt 0               # ldecod_src/io_tiff.c:359:7
	movl	$.L.str.14, %edi
	movl	$47, %esi
.Ltmp369:
.LBB4_46:                               # %readDirectoryEntry.exit.i.i
                                        #   in Loop: Header=BB4_23 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readDirectoryEntry:type <- $r12d
	#DEBUG_VALUE: readDirectoryEntry:count <- $r15d
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	movl	$1, %edx
	callq	fwrite@PLT
.Ltmp370:
	.loc	0 353 7 is_stmt 1               # ldecod_src/io_tiff.c:353:7
	jmp	.LBB4_22
.Ltmp371:
.LBB4_47:                               # %readImageFileDirectory.exit.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 542 13                        # ldecod_src/io_tiff.c:542:13
	movl	ReadTIFFImage.t+64(%rip), %eax
.Ltmp372:
	#DEBUG_VALUE: readImageData:t <- undef
	.loc	0 542 24 is_stmt 0              # ldecod_src/io_tiff.c:542:24
	imull	ReadTIFFImage.t+60(%rip), %eax
	.loc	0 542 45                        # ldecod_src/io_tiff.c:542:45
	addl	%eax, %eax
	leal	(%rax,%rax,2), %esi
.Ltmp373:
	#DEBUG_VALUE: readImageData:size <- $esi
	.loc	0 543 35 is_stmt 1              # ldecod_src/io_tiff.c:543:35
	movq	ReadTIFFImage.t(%rip), %rdi
	.loc	0 543 23 is_stmt 0              # ldecod_src/io_tiff.c:543:23
	callq	realloc@PLT
.Ltmp374:
	.loc	0 543 10                        # ldecod_src/io_tiff.c:543:10
	movq	%rax, ReadTIFFImage.t(%rip)
.Ltmp375:
	.loc	0 544 14 is_stmt 1              # ldecod_src/io_tiff.c:544:14
	testq	%rax, %rax
	movq	136(%rsp), %r15                 # 8-byte Reload
	movq	296(%rsp), %rbx                 # 8-byte Reload
.Ltmp376:
	.loc	0 544 7 is_stmt 0               # ldecod_src/io_tiff.c:544:7
	je	.LBB4_101
.Ltmp377:
# %bb.48:                               # %if.end.i38.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 547 11 is_stmt 1              # ldecod_src/io_tiff.c:547:11
	movl	ReadTIFFImage.t+44(%rip), %ecx
	.loc	0 547 3 is_stmt 0               # ldecod_src/io_tiff.c:547:3
	cmpl	$16, %ecx
	je	.LBB4_71
.Ltmp378:
# %bb.49:                               # %if.end.i38.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	cmpl	$8, %ecx
	movq	216(%rsp), %r12                 # 8-byte Reload
	jne	.LBB4_82
.Ltmp379:
# %bb.50:                               # %for.cond.preheader.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- 0
	.loc	0 551 22 is_stmt 1              # ldecod_src/io_tiff.c:551:22
	movl	ReadTIFFImage.t+28(%rip), %esi
	.loc	0 551 17 is_stmt 0              # ldecod_src/io_tiff.c:551:17
	testl	%esi, %esi
.Ltmp380:
	.loc	0 551 5                         # ldecod_src/io_tiff.c:551:5
	jle	.LBB4_82
.Ltmp381:
# %bb.51:                               # %for.body.i47.i.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	xorl	%ecx, %ecx
	pxor	%xmm0, %xmm0
	jmp	.LBB4_54
.Ltmp382:
	.p2align	4, 0x90
.LBB4_52:                               # %for.inc20.loopexit.i.i
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	.loc	0 551 22                        # ldecod_src/io_tiff.c:551:22
	movl	ReadTIFFImage.t+28(%rip), %esi
	movq	%rdi, %rax
.Ltmp383:
.LBB4_53:                               # %for.inc20.i.i
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	.loc	0 551 31                        # ldecod_src/io_tiff.c:551:31
	incq	%rcx
.Ltmp384:
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rax
	.loc	0 551 17                        # ldecod_src/io_tiff.c:551:17
	movslq	%esi, %rdx
	cmpq	%rdx, %rcx
.Ltmp385:
	.loc	0 551 5                         # ldecod_src/io_tiff.c:551:5
	jge	.LBB4_82
.Ltmp386:
.LBB4_54:                               # %for.body.i47.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_61 Depth 2
                                        #     Child Loop BB4_65 Depth 2
                                        #     Child Loop BB4_69 Depth 2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	.loc	0 553 11 is_stmt 1              # ldecod_src/io_tiff.c:553:11
	movslq	ReadTIFFImage.t+68(,%rcx,4), %rdx
	testq	%rdx, %rdx
.Ltmp387:
	#DEBUG_VALUE: readImageData:n <- undef
	#DEBUG_VALUE: readImageData:s <- undef
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 555 7                         # ldecod_src/io_tiff.c:555:7
	jle	.LBB4_53
.Ltmp388:
# %bb.55:                               # %for.body17.preheader.i.i
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 554 14                        # ldecod_src/io_tiff.c:554:14
	movq	ReadTIFFImage.t+8(%rip), %r9
	.loc	0 554 29 is_stmt 0              # ldecod_src/io_tiff.c:554:29
	movl	ReadTIFFImage.t+4388(,%rcx,4), %r10d
.Ltmp389:
	#DEBUG_VALUE: readImageData:s <- undef
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9, $r10d
	.loc	0 554 27                        # ldecod_src/io_tiff.c:554:27
	leaq	(%r9,%r10), %rsi
.Ltmp390:
	#DEBUG_VALUE: readImageData:s <- $rsi
	.loc	0 0 27                          # ldecod_src/io_tiff.c:0:27
	xorl	%r8d, %r8d
.Ltmp391:
	.loc	0 555 7 is_stmt 1               # ldecod_src/io_tiff.c:555:7
	cmpl	$32, %edx
	jb	.LBB4_56
.Ltmp392:
# %bb.57:                               # %vector.memcheck
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:s <- $rsi
	#DEBUG_VALUE: readImageData:j <- 0
	leal	-1(%rdx), %edi
	leaq	(%r9,%r10), %r11
	addq	%rdi, %r11
	incq	%r11
	cmpq	%r11, %rax
	jae	.LBB4_60
.Ltmp393:
# %bb.58:                               # %vector.memcheck
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:s <- $rsi
	#DEBUG_VALUE: readImageData:j <- 0
	leaq	(%rax,%rdi,2), %rdi
	addq	$2, %rdi
	cmpq	%rdi, %rsi
	jae	.LBB4_60
.Ltmp394:
.LBB4_56:                               #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:s <- $rsi
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 0 7 is_stmt 0                 # ldecod_src/io_tiff.c:0:7
	movq	%rax, %rdi
.Ltmp395:
.LBB4_63:                               # %for.body17.i.i.preheader
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 555 7                         # ldecod_src/io_tiff.c:555:7
	movl	%edx, %eax
.Ltmp396:
	subl	%r8d, %eax
	andl	$7, %eax
	je	.LBB4_67
.Ltmp397:
# %bb.64:                               # %for.body17.i.i.prol.preheader
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	negl	%eax
	xorl	%r9d, %r9d
.Ltmp398:
	.p2align	4, 0x90
.LBB4_65:                               # %for.body17.i.i.prol
                                        #   Parent Loop BB4_54 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	.loc	0 557 16 is_stmt 1              # ldecod_src/io_tiff.c:557:16
	movzbl	(%rsi), %r10d
.Ltmp399:
	#DEBUG_VALUE: readImageData:p <- $rdi
	#DEBUG_VALUE: readImageData:s <- $rsi
	#DEBUG_VALUE: readImageData:j <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $r9d, $r8d
	.loc	0 557 18 is_stmt 0              # ldecod_src/io_tiff.c:557:18
	incq	%rsi
.Ltmp400:
	#DEBUG_VALUE: readImageData:s <- $rsi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r10w, (%rdi)
	.loc	0 557 11                        # ldecod_src/io_tiff.c:557:11
	addq	$2, %rdi
.Ltmp401:
	#DEBUG_VALUE: readImageData:p <- $rdi
	#DEBUG_VALUE: readImageData:j <- [DW_OP_LLVM_arg 0, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $r9d, $r8d
	.loc	0 555 7 is_stmt 1               # ldecod_src/io_tiff.c:555:7
	decl	%r9d
.Ltmp402:
	cmpl	%r9d, %eax
	jne	.LBB4_65
.Ltmp403:
# %bb.66:                               # %for.body17.i.i.prol.loopexit.loopexit
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rdi
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:s <- $rsi
	movl	%r8d, %eax
	subl	%r9d, %eax
	subl	%edx, %r8d
	cmpl	$-8, %r8d
	ja	.LBB4_52
	jmp	.LBB4_68
.Ltmp404:
.LBB4_67:                               #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 0 7 is_stmt 0                 # ldecod_src/io_tiff.c:0:7
	movl	%r8d, %eax
	.loc	0 555 7                         # ldecod_src/io_tiff.c:555:7
	subl	%edx, %r8d
	cmpl	$-8, %r8d
	ja	.LBB4_52
.Ltmp405:
.LBB4_68:                               # %for.body17.i.i.preheader5
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	subl	%eax, %edx
	xorl	%eax, %eax
.Ltmp406:
	.p2align	4, 0x90
.LBB4_69:                               # %for.body17.i.i
                                        #   Parent Loop BB4_54 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rdi
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	#DEBUG_VALUE: readImageData:j <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16 is_stmt 1              # ldecod_src/io_tiff.c:557:16
	movzbl	(%rsi,%rax), %r8d
.Ltmp407:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rdi
	.loc	0 557 14 is_stmt 0              # ldecod_src/io_tiff.c:557:14
	movw	%r8w, (%rdi)
.Ltmp408:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 2, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	1(%rsi,%rax), %r8d
.Ltmp409:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 2(%rdi)
.Ltmp410:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 3, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	2(%rsi,%rax), %r8d
.Ltmp411:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 6, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 4(%rdi)
.Ltmp412:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 4, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	3(%rsi,%rax), %r8d
.Ltmp413:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 8, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 6(%rdi)
.Ltmp414:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 4, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 5, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	4(%rsi,%rax), %r8d
.Ltmp415:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 10, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 8(%rdi)
.Ltmp416:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 5, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	5(%rsi,%rax), %r8d
.Ltmp417:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 12, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 10(%rdi)
.Ltmp418:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 6, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 7, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	6(%rsi,%rax), %r8d
.Ltmp419:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 14, DW_OP_stack_value] $rdi
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 12(%rdi)
.Ltmp420:
	#DEBUG_VALUE: readImageData:j <- [DW_OP_plus_uconst 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: readImageData:s <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rax, $rsi
	.loc	0 557 16                        # ldecod_src/io_tiff.c:557:16
	movzbl	7(%rsi,%rax), %r8d
	.loc	0 557 14                        # ldecod_src/io_tiff.c:557:14
	movw	%r8w, 14(%rdi)
	.loc	0 557 11                        # ldecod_src/io_tiff.c:557:11
	addq	$16, %rdi
.Ltmp421:
	#DEBUG_VALUE: readImageData:p <- $rdi
	#DEBUG_VALUE: readImageData:j <- [DW_OP_LLVM_arg 0, DW_OP_consts 8, DW_OP_div, DW_OP_consts 8, DW_OP_mul, DW_OP_consts 8, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 555 19 is_stmt 1              # ldecod_src/io_tiff.c:555:19
	addq	$8, %rax
.Ltmp422:
	cmpl	%eax, %edx
.Ltmp423:
	.loc	0 555 7 is_stmt 0               # ldecod_src/io_tiff.c:555:7
	jne	.LBB4_69
	jmp	.LBB4_52
.Ltmp424:
.LBB4_60:                               # %vector.ph
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:s <- $rsi
	#DEBUG_VALUE: readImageData:j <- 0
	movl	%edx, %r8d
	andl	$2147483616, %r8d               # imm = 0x7FFFFFE0
	movl	%r8d, %edi
	leaq	(%rax,%rdi,2), %rdi
	addq	%r8, %rsi
.Ltmp425:
	addq	%r10, %r9
	addq	$24, %r9
	xorl	%r10d, %r10d
.Ltmp426:
	.p2align	4, 0x90
.LBB4_61:                               # %vector.body
                                        #   Parent Loop BB4_54 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 557 16 is_stmt 1              # ldecod_src/io_tiff.c:557:16
	movq	-24(%r9,%r10), %xmm1            # xmm1 = mem[0],zero
	movq	-16(%r9,%r10), %xmm2            # xmm2 = mem[0],zero
	movq	-8(%r9,%r10), %xmm3             # xmm3 = mem[0],zero
	movq	(%r9,%r10), %xmm4               # xmm4 = mem[0],zero
	punpcklbw	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1],xmm1[2],xmm0[2],xmm1[3],xmm0[3],xmm1[4],xmm0[4],xmm1[5],xmm0[5],xmm1[6],xmm0[6],xmm1[7],xmm0[7]
	punpcklbw	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1],xmm2[2],xmm0[2],xmm2[3],xmm0[3],xmm2[4],xmm0[4],xmm2[5],xmm0[5],xmm2[6],xmm0[6],xmm2[7],xmm0[7]
	punpcklbw	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1],xmm3[2],xmm0[2],xmm3[3],xmm0[3],xmm3[4],xmm0[4],xmm3[5],xmm0[5],xmm3[6],xmm0[6],xmm3[7],xmm0[7]
	punpcklbw	%xmm0, %xmm4            # xmm4 = xmm4[0],xmm0[0],xmm4[1],xmm0[1],xmm4[2],xmm0[2],xmm4[3],xmm0[3],xmm4[4],xmm0[4],xmm4[5],xmm0[5],xmm4[6],xmm0[6],xmm4[7],xmm0[7]
	.loc	0 557 14 is_stmt 0              # ldecod_src/io_tiff.c:557:14
	movdqu	%xmm1, (%rax,%r10,2)
	movdqu	%xmm2, 16(%rax,%r10,2)
	movdqu	%xmm3, 32(%rax,%r10,2)
	movdqu	%xmm4, 48(%rax,%r10,2)
	addq	$32, %r10
	cmpq	%r10, %r8
	jne	.LBB4_61
.Ltmp427:
# %bb.62:                               # %middle.block
                                        #   in Loop: Header=BB4_54 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rcx
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 555 7 is_stmt 1               # ldecod_src/io_tiff.c:555:7
	cmpq	%rdx, %r8
	je	.LBB4_52
	jmp	.LBB4_63
.Ltmp428:
.LBB4_70:                               # %if.then
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1036 14                       # ldecod_src/io_tiff.c:1036:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	.loc	0 1036 5 is_stmt 0              # ldecod_src/io_tiff.c:1036:5
	movl	$.L.str, %edi
	movl	$102, %esi
.Ltmp429:
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	movl	$1, %edx
.Ltmp430:
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- $r9d
	callq	fwrite@PLT
.Ltmp431:
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	.loc	0 1037 5 is_stmt 1              # ldecod_src/io_tiff.c:1037:5
	jmp	.LBB4_106
.Ltmp432:
.LBB4_71:                               # %sw.bb23.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 562 13                        # ldecod_src/io_tiff.c:562:13
	movq	ReadTIFFImage.t+16(%rip), %rcx
.Ltmp433:
	#DEBUG_VALUE: readImageData:mp <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- 0
	.loc	0 564 22                        # ldecod_src/io_tiff.c:564:22
	movl	ReadTIFFImage.t+28(%rip), %edi
	.loc	0 564 17 is_stmt 0              # ldecod_src/io_tiff.c:564:17
	testl	%edi, %edi
	movq	216(%rsp), %r12                 # 8-byte Reload
.Ltmp434:
	.loc	0 564 5                         # ldecod_src/io_tiff.c:564:5
	jle	.LBB4_81
.Ltmp435:
# %bb.72:                               # %for.body30.i.i.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- 0
	#DEBUG_VALUE: readImageData:mp <- $rcx
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	xorl	%edx, %edx
	jmp	.LBB4_75
.Ltmp436:
.LBB4_73:                               # %for.inc51.loopexit.i.i
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:mp <- $rcx
	.loc	0 564 22                        # ldecod_src/io_tiff.c:564:22
	movl	ReadTIFFImage.t+28(%rip), %edi
.Ltmp437:
.LBB4_74:                               # %for.inc51.i.i
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:mp <- $rcx
	.loc	0 564 31                        # ldecod_src/io_tiff.c:564:31
	incq	%rdx
.Ltmp438:
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:p <- $rax
	.loc	0 564 17                        # ldecod_src/io_tiff.c:564:17
	movslq	%edi, %rsi
	cmpq	%rsi, %rdx
.Ltmp439:
	.loc	0 564 5                         # ldecod_src/io_tiff.c:564:5
	jge	.LBB4_81
.Ltmp440:
.LBB4_75:                               # %for.body30.i.i
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_78 Depth 2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:mp <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	.loc	0 566 11 is_stmt 1              # ldecod_src/io_tiff.c:566:11
	movl	ReadTIFFImage.t+68(,%rdx,4), %esi
.Ltmp441:
	#DEBUG_VALUE: readImageData:n <- undef
	.loc	0 567 33                        # ldecod_src/io_tiff.c:567:33
	movl	ReadTIFFImage.t+4388(,%rdx,4), %r8d
	.loc	0 567 31 is_stmt 0              # ldecod_src/io_tiff.c:567:31
	addq	ReadTIFFImage.t+8(%rip), %r8
	.loc	0 567 13                        # ldecod_src/io_tiff.c:567:13
	movq	%r8, ReadTIFFImage.t+16(%rip)
.Ltmp442:
	#DEBUG_VALUE: readImageData:j <- 0
	.loc	0 568 19 is_stmt 1              # ldecod_src/io_tiff.c:568:19
	cmpl	$2, %esi
.Ltmp443:
	.loc	0 568 7 is_stmt 0               # ldecod_src/io_tiff.c:568:7
	jb	.LBB4_74
.Ltmp444:
# %bb.76:                               # %for.body44.i.i.preheader
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:j <- 0
	#DEBUG_VALUE: readImageData:mp <- $rcx
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	movl	%esi, %edi
	shrl	%edi
.Ltmp445:
	#DEBUG_VALUE: readImageData:n <- $edi
	.loc	0 568 7                         # ldecod_src/io_tiff.c:568:7
	cmpl	$1, %edi
	je	.LBB4_79
.Ltmp446:
# %bb.77:                               # %for.body44.i.i.preheader.new
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:n <- $edi
	#DEBUG_VALUE: readImageData:j <- 0
	#DEBUG_VALUE: readImageData:mp <- $rcx
	andl	$-2, %edi
.Ltmp447:
	.p2align	4, 0x90
.LBB4_78:                               # %for.body44.i.i
                                        #   Parent Loop BB4_75 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:mp <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:j <- undef
	.loc	0 209 19 is_stmt 1              # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %r8
.Ltmp448:
	#DEBUG_VALUE: getU16:t <- undef
	leaq	1(%r8), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%r8), %r9d
.Ltmp449:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%r8), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
.Ltmp450:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10                        # ldecod_src/io_tiff.c:211:10
	movzbl	1(%r8), %r8d
	shll	$8, %r8d
	orl	%r9d, %r8d
.Ltmp451:
	#DEBUG_VALUE: readImageData:p <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rax
	.loc	0 570 14                        # ldecod_src/io_tiff.c:570:14
	movw	%r8w, (%rax)
.Ltmp452:
	.loc	0 209 19                        # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %r8
	leaq	1(%r8), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%r8), %r9d
.Ltmp453:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%r8), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
.Ltmp454:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10                        # ldecod_src/io_tiff.c:211:10
	movzbl	1(%r8), %r8d
	shll	$8, %r8d
	orl	%r9d, %r8d
.Ltmp455:
	.loc	0 570 14                        # ldecod_src/io_tiff.c:570:14
	movw	%r8w, 2(%rax)
	.loc	0 570 11 is_stmt 0              # ldecod_src/io_tiff.c:570:11
	addq	$4, %rax
.Ltmp456:
	#DEBUG_VALUE: readImageData:p <- $rax
	.loc	0 568 7 is_stmt 1               # ldecod_src/io_tiff.c:568:7
	addl	$-2, %edi
	jne	.LBB4_78
.Ltmp457:
.LBB4_79:                               # %for.inc51.loopexit.i.i.unr-lcssa
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:mp <- $rcx
	testb	$2, %sil
	je	.LBB4_73
.Ltmp458:
# %bb.80:                               # %for.body44.i.i.epil
                                        #   in Loop: Header=BB4_75 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:i <- $rdx
	#DEBUG_VALUE: readImageData:mp <- $rcx
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:j <- undef
	.loc	0 209 19                        # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %rsi
.Ltmp459:
	#DEBUG_VALUE: getU16:t <- undef
	leaq	1(%rsi), %rdi
	movq	%rdi, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%rsi), %edi
.Ltmp460:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%rsi), %r8
	movq	%r8, ReadTIFFImage.t+16(%rip)
.Ltmp461:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10                        # ldecod_src/io_tiff.c:211:10
	movzbl	1(%rsi), %esi
	shll	$8, %esi
	orl	%edi, %esi
.Ltmp462:
	.loc	0 570 14                        # ldecod_src/io_tiff.c:570:14
	movw	%si, (%rax)
	.loc	0 570 11 is_stmt 0              # ldecod_src/io_tiff.c:570:11
	addq	$2, %rax
.Ltmp463:
	#DEBUG_VALUE: readImageData:p <- $rax
	.loc	0 0 11                          # ldecod_src/io_tiff.c:0:11
	jmp	.LBB4_73
.Ltmp464:
.LBB4_81:                               # %for.end53.i.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readImageData:p <- $rax
	#DEBUG_VALUE: readImageData:mp <- $rcx
	.loc	0 573 11 is_stmt 1              # ldecod_src/io_tiff.c:573:11
	movq	%rcx, ReadTIFFImage.t+16(%rip)
.Ltmp465:
.LBB4_82:                               # %if.end34
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1067 15                       # ldecod_src/io_tiff.c:1067:15
	movl	ReadTIFFImage.t+60(%rip), %edx
	.loc	0 1067 27 is_stmt 0             # ldecod_src/io_tiff.c:1067:27
	cmpl	%ebx, %edx
.Ltmp466:
	.loc	0 1067 7                        # ldecod_src/io_tiff.c:1067:7
	jne	.LBB4_125
.Ltmp467:
# %bb.83:                               # %if.end38
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1072 15 is_stmt 1             # ldecod_src/io_tiff.c:1072:15
	movl	ReadTIFFImage.t+64(%rip), %edx
	.loc	0 1072 26 is_stmt 0             # ldecod_src/io_tiff.c:1072:26
	cmpl	%r12d, %edx
.Ltmp468:
	.loc	0 1072 7                        # ldecod_src/io_tiff.c:1072:7
	jne	.LBB4_126
.Ltmp469:
# %bb.84:                               # %if.end42
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1078 15 is_stmt 1             # ldecod_src/io_tiff.c:1078:15
	movl	124(%r15), %edx
	.loc	0 1078 42 is_stmt 0             # ldecod_src/io_tiff.c:1078:42
	cmpl	$8, %edx
	je	.LBB4_86
.Ltmp470:
# %bb.85:                               # %if.end42
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	cmpl	$16, %edx
	jne	.LBB4_142
.Ltmp471:
.LBB4_86:                               # %if.end50
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1085 11 is_stmt 1             # ldecod_src/io_tiff.c:1085:11
	movq	ReadTIFFImage.t(%rip), %rbp
.Ltmp472:
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	.loc	0 1086 23                       # ldecod_src/io_tiff.c:1086:23
	movl	%ebx, %edi
	imull	%r12d, %edi
	.loc	0 1086 32 is_stmt 0             # ldecod_src/io_tiff.c:1086:32
	leal	(%rdi,%rdi,2), %r8d
.Ltmp473:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	.loc	0 1088 27 is_stmt 1             # ldecod_src/io_tiff.c:1088:27
	cmpl	$0, 4(%r15)
.Ltmp474:
	.loc	0 1088 7 is_stmt 0              # ldecod_src/io_tiff.c:1088:7
	je	.LBB4_88
.Ltmp475:
# %bb.87:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	xorl	%edi, %edi
	jmp	.LBB4_170
.Ltmp476:
.LBB4_88:                               # %if.then54
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	.loc	0 1090 58 is_stmt 1             # ldecod_src/io_tiff.c:1090:58
	movl	4000(%r13), %edx
.Ltmp477:
	#DEBUG_VALUE: RGB_YUV_initialize:videoCode <- $edx
	#DEBUG_VALUE: RGB_YUV_initialize:T <- undef
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- undef
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	.loc	0 663 3                         # ldecod_src/io_tiff.c:663:3
	movl	%edx, %eax
	orl	$2, %eax
	cmpl	$3, %eax
	jne	.LBB4_201
.Ltmp478:
# %bb.89:                               # %sw.epilog.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:videoCode <- $edx
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	.loc	0 1090 76                       # ldecod_src/io_tiff.c:1090:76
	movl	3996(%r13), %eax
.Ltmp479:
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	xorl	%ecx, %ecx
	xorl	%r11d, %r11d
	testl	%eax, %eax
	sete	%cl
	setne	%sil
.Ltmp480:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] undef
	.loc	0 678 7                         # ldecod_src/io_tiff.c:678:7
	shll	$3, %ecx
	movsd	.LCPI4_0(%rcx), %xmm5           # xmm5 = [1.4070964705882352E+4,0.0E+0]
	movsd	.LCPI4_1(%rcx), %xmm2           # xmm2 = [1.4392219607843137E+4,0.0E+0]
.Ltmp481:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 704 64] $xmm2
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 640 64] $xmm5
	.loc	0 693 24                        # ldecod_src/io_tiff.c:693:24
	shlq	$3, %rdx
.Ltmp482:
	movsd	Coef(%rdx,%rdx,2), %xmm0        # xmm0 = mem[0],zero
.Ltmp483:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 256 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 288 32] undef
	.loc	0 693 58 is_stmt 0              # ldecod_src/io_tiff.c:693:58
	movupd	Coef+8(%rdx,%rdx,2), %xmm4
	.loc	0 693 63                        # ldecod_src/io_tiff.c:693:63
	movapd	%xmm5, %xmm1
	unpcklpd	%xmm5, %xmm1                    # xmm1 = xmm1[0],xmm5[0]
	mulpd	%xmm4, %xmm1
	addpd	.LCPI4_2(%rip), %xmm1
	.loc	0 693 45                        # ldecod_src/io_tiff.c:693:45
	cvttpd2dq	%xmm1, %xmm10
	pshufd	$85, %xmm10, %xmm9              # xmm9 = xmm10[1,1,1,1]
	movd	%xmm9, %r10d
	movd	%xmm10, %r9d
.Ltmp484:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 320 32] undef
	.loc	0 694 23 is_stmt 1              # ldecod_src/io_tiff.c:694:23
	movapd	%xmm2, %xmm7
	mulsd	%xmm0, %xmm7
	.loc	0 694 27 is_stmt 0              # ldecod_src/io_tiff.c:694:27
	movapd	%xmm4, %xmm8
	unpckhpd	%xmm4, %xmm8                    # xmm8 = xmm8[1],xmm4[1]
	movsd	.LCPI4_3(%rip), %xmm3           # xmm3 = [-1.0E+0,0.0E+0]
	addsd	%xmm3, %xmm8
	movsd	.LCPI4_4(%rip), %xmm1           # xmm1 = [5.0E-1,0.0E+0]
	movapd	%xmm1, %xmm6
	divsd	%xmm8, %xmm6
	.loc	0 694 29                        # ldecod_src/io_tiff.c:694:29
	unpcklpd	%xmm5, %xmm7                    # xmm7 = xmm7[0],xmm5[0]
	movapd	%xmm6, %xmm8
	unpcklpd	%xmm0, %xmm8                    # xmm8 = xmm8[0],xmm0[0]
	mulpd	%xmm7, %xmm8
	movapd	.LCPI4_5(%rip), %xmm7           # xmm7 = [-5.0E-1,5.0E-1]
	addpd	%xmm7, %xmm8
	.loc	0 694 11                        # ldecod_src/io_tiff.c:694:11
	cvttpd2dq	%xmm8, %xmm11
	pshufd	$85, %xmm11, %xmm8              # xmm8 = xmm11[1,1,1,1]
	.loc	0 697 28 is_stmt 1              # ldecod_src/io_tiff.c:697:28
	addsd	%xmm1, %xmm5
.Ltmp485:
	.loc	0 697 7 is_stmt 0               # ldecod_src/io_tiff.c:697:7
	cvttsd2si	%xmm5, %rcx
.Ltmp486:
	#DEBUG_VALUE: RGB_YUV_initialize:i <- $ecx
	.loc	0 694 11 is_stmt 1              # ldecod_src/io_tiff.c:694:11
	movd	%xmm8, %r13d
.Ltmp487:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 352 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 384 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 416 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 448 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 480 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 512 32] undef
	.loc	0 698 12                        # ldecod_src/io_tiff.c:698:12
	leal	(%r9,%r10), %edx
	.loc	0 698 18 is_stmt 0              # ldecod_src/io_tiff.c:698:18
	addl	%r13d, %edx
	.loc	0 698 25                        # ldecod_src/io_tiff.c:698:25
	cmpl	%ecx, %edx
.Ltmp488:
	.loc	0 698 7                         # ldecod_src/io_tiff.c:698:7
	jne	.LBB4_146
.Ltmp489:
# %bb.90:                               # %if.end100.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 704 64] $xmm2
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_initialize:i <- $ecx
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	%r10, 144(%rsp)                 # 8-byte Spill
	shufpd	$2, .LCPI4_6(%rip), %xmm6       # xmm6 = xmm6[0],mem[1]
	movapd	%xmm2, %xmm5
	unpcklpd	%xmm2, %xmm5                    # xmm5 = xmm5[0],xmm2[0]
	mulpd	%xmm4, %xmm5
	movapd	%xmm5, %xmm4
	unpcklpd	%xmm2, %xmm4                    # xmm4 = xmm4[0],xmm2[0]
	mulpd	%xmm6, %xmm4
	addpd	%xmm7, %xmm4
	cvttpd2dq	%xmm4, %xmm12
.Ltmp490:
	.loc	0 703 12 is_stmt 1              # ldecod_src/io_tiff.c:703:12
	movd	%xmm12, %edx
	pshufd	$85, %xmm12, %xmm2              # xmm2 = xmm12[1,1,1,1]
.Ltmp491:
	movd	%xmm2, %ecx
.Ltmp492:
	.loc	0 0 12 is_stmt 0                # ldecod_src/io_tiff.c:0:12
	movq	%rdx, 272(%rsp)                 # 8-byte Spill
	.loc	0 703 12                        # ldecod_src/io_tiff.c:703:12
	addl	%ecx, %edx
	.loc	0 703 18                        # ldecod_src/io_tiff.c:703:18
	movd	%xmm11, %r12d
	addl	%r12d, %edx
.Ltmp493:
	.loc	0 703 7                         # ldecod_src/io_tiff.c:703:7
	jne	.LBB4_148
.Ltmp494:
# %bb.91:                               # %if.end114.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movl	%r12d, %r15d
	addsd	%xmm3, %xmm0
	divsd	%xmm0, %xmm1
	unpcklpd	%xmm1, %xmm1                    # xmm1 = xmm1[0,0]
	mulpd	%xmm1, %xmm5
	addpd	.LCPI4_7(%rip), %xmm5
	cvttpd2dq	%xmm5, %xmm13
.Ltmp495:
	.loc	0 708 12 is_stmt 1              # ldecod_src/io_tiff.c:708:12
	movd	%xmm13, %r12d
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	leal	(%r12,%rcx), %edx
	.loc	0 708 18 is_stmt 0              # ldecod_src/io_tiff.c:708:18
	pshufd	$85, %xmm13, %xmm0              # xmm0 = xmm13[1,1,1,1]
	movd	%xmm0, %ebx
	addl	%ebx, %edx
.Ltmp496:
	.loc	0 708 7                         # ldecod_src/io_tiff.c:708:7
	jne	.LBB4_149
.Ltmp497:
# %bb.92:                               # %if.end58
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	%r14, 208(%rsp)                 # 8-byte Spill
.Ltmp498:
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	movl	%r8d, 12(%rsp)                  # 4-byte Spill
.Ltmp499:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	movb	%sil, %r11b
	shll	$26, %r11d
	orl	$8192, %r11d                    # imm = 0x2000
.Ltmp500:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 512 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 256 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 288 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 320 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 352 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 384 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 416 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 448 32] undef
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 480 32] undef
	.loc	0 1092 43 is_stmt 1             # ldecod_src/io_tiff.c:1092:43
	leaq	2(%rbp), %rcx
	movq	%rcx, 128(%rsp)                 # 8-byte Spill
	movq	%rbp, 56(%rsp)                  # 8-byte Spill
.Ltmp501:
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	.loc	0 1092 50 is_stmt 0             # ldecod_src/io_tiff.c:1092:50
	leaq	4(%rbp), %rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- $rcx
	movq	%rcx, 88(%rsp)                  # 8-byte Spill
.Ltmp502:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	.loc	0 678 7 is_stmt 1               # ldecod_src/io_tiff.c:678:7
	testl	%eax, %eax
.Ltmp503:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:T <- undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- $edi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:xres <- undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yres <- undef
	.loc	0 0 7 is_stmt 0                 # ldecod_src/io_tiff.c:0:7
	movq	%rdi, 24(%rsp)                  # 8-byte Spill
.Ltmp504:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 740 7 is_stmt 1               # ldecod_src/io_tiff.c:740:7
	je	.LBB4_109
.Ltmp505:
# %bb.93:                               # %for.cond.preheader.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 0 is_stmt 0                 # ldecod_src/io_tiff.c:0:0
	testl	%edi, %edi
	movq	16(%rsp), %rbp                  # 8-byte Reload
	movl	%r13d, 256(%rsp)                # 4-byte Spill
	movl	%r15d, 240(%rsp)                # 4-byte Spill
	movq	144(%rsp), %r10                 # 8-byte Reload
.Ltmp506:
	.loc	0 742 5 is_stmt 1               # ldecod_src/io_tiff.c:742:5
	jle	.LBB4_114
.Ltmp507:
# %bb.94:                               # %for.body.i.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movl	%r11d, %r14d
.Ltmp508:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r14d
	xorl	%ecx, %ecx
	movq	56(%rsp), %r15                  # 8-byte Reload
	movq	128(%rsp), %r11                 # 8-byte Reload
	movq	88(%rsp), %r13                  # 8-byte Reload
	.loc	0 742 5                         # ldecod_src/io_tiff.c:742:5
	cmpl	$3, 24(%rsp)                    # 4-byte Folded Reload
	movl	%ebx, 224(%rsp)                 # 4-byte Spill
	jbe	.LBB4_98
.Ltmp509:
# %bb.95:                               # %vector.ph432
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r14d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	movl	24(%rsp), %edx                  # 4-byte Reload
	movq	%rdx, 464(%rsp)                 # 8-byte Spill
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	andl	$2147483644, %edx               # imm = 0x7FFFFFFC
	leal	(%rdx,%rdx), %eax
	leaq	(%rax,%rax,2), %rcx
	movq	56(%rsp), %rax                  # 8-byte Reload
	addq	%rcx, %rax
	movq	%rax, 528(%rsp)                 # 8-byte Spill
	movq	128(%rsp), %rax                 # 8-byte Reload
	addq	%rcx, %rax
	movq	%rax, 496(%rsp)                 # 8-byte Spill
	movq	88(%rsp), %rax                  # 8-byte Reload
	addq	%rax, %rcx
	movq	%rcx, 512(%rsp)                 # 8-byte Spill
	leaq	18(%rax), %rbx
	movq	%rdx, 480(%rsp)                 # 8-byte Spill
	movq	%rdx, %rax
	movl	%r14d, 336(%rsp)                # 4-byte Spill
.Ltmp510:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_plus_uconst 336, DW_OP_deref, DW_OP_LLVM_fragment 544 32] $rsp
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movq	%r9, 320(%rsp)                  # 8-byte Spill
	movq	%r12, 352(%rsp)                 # 8-byte Spill
.Ltmp511:
.LBB4_96:                               # %vector.body443
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_plus_uconst 336, DW_OP_deref, DW_OP_LLVM_fragment 544 32] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	movq	%rax, 304(%rsp)                 # 8-byte Spill
.Ltmp512:
	.loc	0 744 20 is_stmt 1              # ldecod_src/io_tiff.c:744:20
	movzwl	-22(%rbx), %r14d
	movzwl	-16(%rbx), %eax
	movl	%eax, 64(%rsp)                  # 4-byte Spill
	.loc	0 745 20                        # ldecod_src/io_tiff.c:745:20
	movzwl	-20(%rbx), %r15d
	movzwl	-14(%rbx), %r12d
	movzwl	-8(%rbx), %r13d
	movzwl	-2(%rbx), %esi
	movq	%rsi, 96(%rsp)                  # 8-byte Spill
	.loc	0 746 20                        # ldecod_src/io_tiff.c:746:20
	movzwl	-18(%rbx), %edx
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	movzwl	-12(%rbx), %edi
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
	movzwl	-6(%rbx), %r8d
	movq	%r8, 176(%rsp)                  # 8-byte Spill
	movzwl	(%rbx), %r9d
	movq	%r9, 192(%rsp)                  # 8-byte Spill
	movq	320(%rsp), %rax                 # 8-byte Reload
	.loc	0 748 41                        # ldecod_src/io_tiff.c:748:41
	movl	%eax, %ecx
	imull	%r15d, %ecx
	movl	%eax, %r10d
	imull	%r12d, %r10d
	movl	%eax, %r11d
	imull	%r13d, %r11d
	movl	%eax, %ebp
	imull	%esi, %ebp
	movq	144(%rsp), %rsi                 # 8-byte Reload
	.loc	0 748 54 is_stmt 0              # ldecod_src/io_tiff.c:748:54
	movl	%esi, %eax
	imull	%edx, %eax
	.loc	0 748 47                        # ldecod_src/io_tiff.c:748:47
	addl	%ecx, %eax
	.loc	0 748 54                        # ldecod_src/io_tiff.c:748:54
	movl	%esi, %ecx
	imull	%edi, %ecx
	.loc	0 748 47                        # ldecod_src/io_tiff.c:748:47
	addl	%r10d, %ecx
	.loc	0 748 54                        # ldecod_src/io_tiff.c:748:54
	movl	%esi, %edx
	imull	%r8d, %edx
	.loc	0 748 47                        # ldecod_src/io_tiff.c:748:47
	addl	%r11d, %edx
                                        # kill: def $esi killed $esi killed $rsi
	.loc	0 748 54                        # ldecod_src/io_tiff.c:748:54
	imull	%r9d, %esi
	.loc	0 748 47                        # ldecod_src/io_tiff.c:748:47
	addl	%ebp, %esi
	movl	256(%rsp), %edi                 # 4-byte Reload
	.loc	0 748 28                        # ldecod_src/io_tiff.c:748:28
	movl	%edi, %ebp
	movl	%r14d, %r10d
	movl	%r14d, 160(%rsp)                # 4-byte Spill
	imull	%r14d, %ebp
	movl	336(%rsp), %r8d                 # 4-byte Reload
	.loc	0 748 34                        # ldecod_src/io_tiff.c:748:34
	addl	%r8d, %ebp
	.loc	0 748 60                        # ldecod_src/io_tiff.c:748:60
	addl	%eax, %ebp
	.loc	0 748 28                        # ldecod_src/io_tiff.c:748:28
	movl	%edi, %eax
	movl	64(%rsp), %r9d                  # 4-byte Reload
	imull	%r9d, %eax
	.loc	0 748 34                        # ldecod_src/io_tiff.c:748:34
	addl	%r8d, %eax
	.loc	0 748 60                        # ldecod_src/io_tiff.c:748:60
	addl	%ecx, %eax
	.loc	0 744 20 is_stmt 1              # ldecod_src/io_tiff.c:744:20
	movzwl	-10(%rbx), %r14d
	.loc	0 748 28                        # ldecod_src/io_tiff.c:748:28
	movl	%edi, %ecx
	imull	%r14d, %ecx
	.loc	0 748 34 is_stmt 0              # ldecod_src/io_tiff.c:748:34
	addl	%r8d, %ecx
	.loc	0 748 60                        # ldecod_src/io_tiff.c:748:60
	addl	%edx, %ecx
	.loc	0 744 20 is_stmt 1              # ldecod_src/io_tiff.c:744:20
	movzwl	-4(%rbx), %r11d
	.loc	0 748 28                        # ldecod_src/io_tiff.c:748:28
	imull	%r11d, %edi
	.loc	0 748 34 is_stmt 0              # ldecod_src/io_tiff.c:748:34
	addl	%r8d, %edi
	.loc	0 748 60                        # ldecod_src/io_tiff.c:748:60
	addl	%esi, %edi
	.loc	0 748 72                        # ldecod_src/io_tiff.c:748:72
	shrl	$14, %ebp
	.loc	0 748 11                        # ldecod_src/io_tiff.c:748:11
	movw	%bp, -22(%rbx)
	.loc	0 748 72                        # ldecod_src/io_tiff.c:748:72
	shrl	$14, %eax
	shrl	$14, %ecx
	shrl	$14, %edi
	.loc	0 748 11                        # ldecod_src/io_tiff.c:748:11
	movw	%ax, -16(%rbx)
	movw	%cx, -10(%rbx)
	movw	%di, -4(%rbx)
	movl	240(%rsp), %edi                 # 4-byte Reload
	.loc	0 749 28 is_stmt 1              # ldecod_src/io_tiff.c:749:28
	movl	%edi, %eax
	imull	%r10d, %eax
	movl	%edi, %ecx
	imull	%r9d, %ecx
	movq	272(%rsp), %rbp                 # 8-byte Reload
	.loc	0 749 41 is_stmt 0              # ldecod_src/io_tiff.c:749:41
	movl	%ebp, %edx
	imull	%r15d, %edx
	.loc	0 749 34                        # ldecod_src/io_tiff.c:749:34
	addl	%eax, %edx
	.loc	0 749 41                        # ldecod_src/io_tiff.c:749:41
	movl	%ebp, %eax
	imull	%r12d, %eax
	.loc	0 749 34                        # ldecod_src/io_tiff.c:749:34
	addl	%ecx, %eax
	.loc	0 749 28                        # ldecod_src/io_tiff.c:749:28
	movl	%edi, %ecx
	imull	%r14d, %ecx
	.loc	0 749 41                        # ldecod_src/io_tiff.c:749:41
	movl	%ebp, %esi
	imull	%r13d, %esi
	.loc	0 749 34                        # ldecod_src/io_tiff.c:749:34
	addl	%ecx, %esi
	.loc	0 749 28                        # ldecod_src/io_tiff.c:749:28
	imull	%r11d, %edi
                                        # kill: def $ebp killed $ebp killed $rbp def $rbp
	movq	96(%rsp), %r10                  # 8-byte Reload
	.loc	0 749 41                        # ldecod_src/io_tiff.c:749:41
	imull	%r10d, %ebp
	.loc	0 749 34                        # ldecod_src/io_tiff.c:749:34
	addl	%edi, %ebp
	movq	16(%rsp), %rcx                  # 8-byte Reload
                                        # kill: def $ecx killed $ecx killed $rcx def $rcx
	.loc	0 749 54                        # ldecod_src/io_tiff.c:749:54
	imull	32(%rsp), %ecx                  # 4-byte Folded Reload
	.loc	0 749 60                        # ldecod_src/io_tiff.c:749:60
	addl	%edx, %ecx
	addl	$536879104, %ecx                # imm = 0x20002000
	movq	16(%rsp), %rdx                  # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	movq	112(%rsp), %r8                  # 8-byte Reload
	.loc	0 749 54                        # ldecod_src/io_tiff.c:749:54
	imull	%r8d, %edx
	.loc	0 749 60                        # ldecod_src/io_tiff.c:749:60
	addl	%edx, %eax
	addl	$536879104, %eax                # imm = 0x20002000
	movq	16(%rsp), %rdx                  # 8-byte Reload
                                        # kill: def $edx killed $edx killed $rdx def $rdx
	movq	176(%rsp), %r9                  # 8-byte Reload
	.loc	0 749 54                        # ldecod_src/io_tiff.c:749:54
	imull	%r9d, %edx
	.loc	0 749 60                        # ldecod_src/io_tiff.c:749:60
	addl	%esi, %edx
	addl	$536879104, %edx                # imm = 0x20002000
	movq	16(%rsp), %rsi                  # 8-byte Reload
                                        # kill: def $esi killed $esi killed $rsi def $rsi
	movq	192(%rsp), %rdi                 # 8-byte Reload
	.loc	0 749 54                        # ldecod_src/io_tiff.c:749:54
	imull	%edi, %esi
	.loc	0 749 60                        # ldecod_src/io_tiff.c:749:60
	addl	%ebp, %esi
	addl	$536879104, %esi                # imm = 0x20002000
	movq	16(%rsp), %rbp                  # 8-byte Reload
	.loc	0 749 72                        # ldecod_src/io_tiff.c:749:72
	shrl	$14, %ecx
	.loc	0 749 11                        # ldecod_src/io_tiff.c:749:11
	movw	%cx, -20(%rbx)
	.loc	0 749 72                        # ldecod_src/io_tiff.c:749:72
	shrl	$14, %eax
	.loc	0 749 11                        # ldecod_src/io_tiff.c:749:11
	movw	%ax, -14(%rbx)
	.loc	0 749 72                        # ldecod_src/io_tiff.c:749:72
	shrl	$14, %edx
	.loc	0 749 11                        # ldecod_src/io_tiff.c:749:11
	movw	%dx, -8(%rbx)
	.loc	0 749 72                        # ldecod_src/io_tiff.c:749:72
	shrl	$14, %esi
	.loc	0 749 11                        # ldecod_src/io_tiff.c:749:11
	movw	%si, -2(%rbx)
	movl	160(%rsp), %ecx                 # 4-byte Reload
	.loc	0 750 28 is_stmt 1              # ldecod_src/io_tiff.c:750:28
	imull	%ebp, %ecx
	movq	352(%rsp), %rax                 # 8-byte Reload
	.loc	0 750 41 is_stmt 0              # ldecod_src/io_tiff.c:750:41
	imull	%eax, %r15d
	.loc	0 750 34                        # ldecod_src/io_tiff.c:750:34
	addl	%ecx, %r15d
	movl	64(%rsp), %ecx                  # 4-byte Reload
	.loc	0 750 28                        # ldecod_src/io_tiff.c:750:28
	imull	%ebp, %ecx
	.loc	0 750 41                        # ldecod_src/io_tiff.c:750:41
	imull	%eax, %r12d
	.loc	0 750 34                        # ldecod_src/io_tiff.c:750:34
	addl	%ecx, %r12d
	.loc	0 750 28                        # ldecod_src/io_tiff.c:750:28
	imull	%ebp, %r14d
	.loc	0 750 41                        # ldecod_src/io_tiff.c:750:41
	imull	%eax, %r13d
	.loc	0 750 34                        # ldecod_src/io_tiff.c:750:34
	addl	%r14d, %r13d
	.loc	0 750 28                        # ldecod_src/io_tiff.c:750:28
	imull	%ebp, %r11d
	movq	%r10, %rcx
	.loc	0 750 41                        # ldecod_src/io_tiff.c:750:41
	imull	%eax, %ecx
	.loc	0 750 34                        # ldecod_src/io_tiff.c:750:34
	addl	%r11d, %ecx
	movq	%rcx, %r10
	movq	32(%rsp), %rax                  # 8-byte Reload
	movl	224(%rsp), %esi                 # 4-byte Reload
	.loc	0 750 54                        # ldecod_src/io_tiff.c:750:54
	imull	%esi, %eax
	.loc	0 750 60                        # ldecod_src/io_tiff.c:750:60
	addl	%r15d, %eax
	addl	$536879104, %eax                # imm = 0x20002000
	.loc	0 750 54                        # ldecod_src/io_tiff.c:750:54
	imull	%esi, %r8d
	.loc	0 750 60                        # ldecod_src/io_tiff.c:750:60
	leal	(%r8,%r12), %ecx
	addl	$536879104, %ecx                # imm = 0x20002000
	movq	%r9, %rdx
	.loc	0 750 54                        # ldecod_src/io_tiff.c:750:54
	imull	%esi, %edx
	movl	%esi, %r8d
	.loc	0 750 60                        # ldecod_src/io_tiff.c:750:60
	addl	%r13d, %edx
	addl	$536879104, %edx                # imm = 0x20002000
	movq	%rdi, %rsi
	.loc	0 750 54                        # ldecod_src/io_tiff.c:750:54
	imull	%r8d, %esi
	.loc	0 750 60                        # ldecod_src/io_tiff.c:750:60
	addl	%r10d, %esi
	addl	$536879104, %esi                # imm = 0x20002000
	.loc	0 750 72                        # ldecod_src/io_tiff.c:750:72
	shrl	$14, %eax
	.loc	0 750 11                        # ldecod_src/io_tiff.c:750:11
	movw	%ax, -18(%rbx)
	movq	304(%rsp), %rax                 # 8-byte Reload
	.loc	0 750 72                        # ldecod_src/io_tiff.c:750:72
	shrl	$14, %ecx
	.loc	0 750 11                        # ldecod_src/io_tiff.c:750:11
	movw	%cx, -12(%rbx)
	.loc	0 750 72                        # ldecod_src/io_tiff.c:750:72
	shrl	$14, %edx
	.loc	0 750 11                        # ldecod_src/io_tiff.c:750:11
	movw	%dx, -6(%rbx)
	.loc	0 750 72                        # ldecod_src/io_tiff.c:750:72
	shrl	$14, %esi
	.loc	0 750 11                        # ldecod_src/io_tiff.c:750:11
	movw	%si, (%rbx)
	addq	$24, %rbx
	addq	$-4, %rax
	jne	.LBB4_96
.Ltmp513:
# %bb.97:                               # %middle.block429
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_plus_uconst 336, DW_OP_deref, DW_OP_LLVM_fragment 544 32] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 11                          # ldecod_src/io_tiff.c:0:11
	movq	480(%rsp), %rcx                 # 8-byte Reload
	.loc	0 742 5 is_stmt 1               # ldecod_src/io_tiff.c:742:5
	cmpl	464(%rsp), %ecx                 # 4-byte Folded Reload
	movl	336(%rsp), %r14d                # 4-byte Reload
	movq	144(%rsp), %r10                 # 8-byte Reload
	movq	320(%rsp), %r9                  # 8-byte Reload
	movq	352(%rsp), %r12                 # 8-byte Reload
	movq	528(%rsp), %r15                 # 8-byte Reload
	movq	512(%rsp), %r13                 # 8-byte Reload
	movq	496(%rsp), %r11                 # 8-byte Reload
	je	.LBB4_114
.Ltmp514:
.LBB4_98:                               # %for.body.i.preheader630
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r14d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movq	24(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
	.loc	0 742 5                         # ldecod_src/io_tiff.c:742:5
	subl	%ecx, %eax
	xorl	%ecx, %ecx
.Ltmp515:
.LBB4_99:                               # %for.body.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r14d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r15
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r11
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r13
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r11
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r15
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rcx, $r13
	.loc	0 744 20 is_stmt 1              # ldecod_src/io_tiff.c:744:20
	movzwl	(%r15,%rcx), %edi
.Ltmp516:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r15
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $edi
	.loc	0 745 20                        # ldecod_src/io_tiff.c:745:20
	movzwl	(%r11,%rcx), %edx
.Ltmp517:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r11
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 192 32] $edx
	.loc	0 746 20                        # ldecod_src/io_tiff.c:746:20
	movzwl	(%r13,%rcx), %esi
.Ltmp518:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r13
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 224 32] $esi
	.loc	0 748 41                        # ldecod_src/io_tiff.c:748:41
	movl	%r9d, %r8d
	imull	%edx, %r8d
	movq	%r12, %rbx
	movq	%r9, %r12
	.loc	0 748 54 is_stmt 0              # ldecod_src/io_tiff.c:748:54
	movl	%r10d, %r9d
	imull	%esi, %r9d
	.loc	0 748 47                        # ldecod_src/io_tiff.c:748:47
	addl	%r8d, %r9d
	movl	256(%rsp), %r8d                 # 4-byte Reload
	.loc	0 748 28                        # ldecod_src/io_tiff.c:748:28
	imull	%edi, %r8d
	.loc	0 748 34                        # ldecod_src/io_tiff.c:748:34
	addl	%r14d, %r8d
	.loc	0 748 60                        # ldecod_src/io_tiff.c:748:60
	addl	%r9d, %r8d
	.loc	0 748 72                        # ldecod_src/io_tiff.c:748:72
	shrl	$14, %r8d
	.loc	0 748 11                        # ldecod_src/io_tiff.c:748:11
	movw	%r8w, (%r15,%rcx)
.Ltmp519:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r15
	.loc	0 0 11                          # ldecod_src/io_tiff.c:0:11
	movl	240(%rsp), %r8d                 # 4-byte Reload
	.loc	0 749 28 is_stmt 1              # ldecod_src/io_tiff.c:749:28
	imull	%edi, %r8d
	movq	272(%rsp), %r9                  # 8-byte Reload
                                        # kill: def $r9d killed $r9d killed $r9 def $r9
	.loc	0 749 41 is_stmt 0              # ldecod_src/io_tiff.c:749:41
	imull	%edx, %r9d
	.loc	0 749 34                        # ldecod_src/io_tiff.c:749:34
	addl	%r8d, %r9d
	.loc	0 749 54                        # ldecod_src/io_tiff.c:749:54
	movl	%ebp, %r8d
	imull	%esi, %r8d
	.loc	0 749 60                        # ldecod_src/io_tiff.c:749:60
	addl	%r9d, %r8d
	addl	$536879104, %r8d                # imm = 0x20002000
	movq	%r12, %r9
	movq	%rbx, %r12
	.loc	0 749 72                        # ldecod_src/io_tiff.c:749:72
	shrl	$14, %r8d
	.loc	0 749 11                        # ldecod_src/io_tiff.c:749:11
	movw	%r8w, (%r11,%rcx)
.Ltmp520:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r11
	.loc	0 750 28 is_stmt 1              # ldecod_src/io_tiff.c:750:28
	imull	%ebp, %edi
.Ltmp521:
	.loc	0 750 41 is_stmt 0              # ldecod_src/io_tiff.c:750:41
	imull	%r12d, %edx
.Ltmp522:
	.loc	0 750 34                        # ldecod_src/io_tiff.c:750:34
	addl	%edi, %edx
	.loc	0 750 54                        # ldecod_src/io_tiff.c:750:54
	imull	224(%rsp), %esi                 # 4-byte Folded Reload
.Ltmp523:
	.loc	0 750 60                        # ldecod_src/io_tiff.c:750:60
	addl	%esi, %edx
	addl	$536879104, %edx                # imm = 0x20002000
	.loc	0 750 72                        # ldecod_src/io_tiff.c:750:72
	shrl	$14, %edx
	.loc	0 750 11                        # ldecod_src/io_tiff.c:750:11
	movw	%dx, (%r13,%rcx)
.Ltmp524:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rcx, $r13
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 742 17 is_stmt 1              # ldecod_src/io_tiff.c:742:17
	addq	$6, %rcx
.Ltmp525:
	decl	%eax
.Ltmp526:
	.loc	0 742 5 is_stmt 0               # ldecod_src/io_tiff.c:742:5
	jne	.LBB4_99
	jmp	.LBB4_114
.Ltmp527:
.LBB4_100:                              # %readImageFileHeader.exit.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 614 14 is_stmt 1              # ldecod_src/io_tiff.c:614:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	.loc	0 614 5 is_stmt 0               # ldecod_src/io_tiff.c:614:5
	movl	$.L.str.11, %edi
	movl	$32, %esi
	movl	$1, %edx
	callq	fwrite@PLT
.Ltmp528:
.LBB4_101:                              # %Error.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 643 10 is_stmt 1              # ldecod_src/io_tiff.c:643:10
	movq	ReadTIFFImage.t+8(%rip), %rdi
.Ltmp529:
	#DEBUG_LABEL: readTiff:Error
	.loc	0 643 7 is_stmt 0               # ldecod_src/io_tiff.c:643:7
	testq	%rdi, %rdi
.Ltmp530:
	.loc	0 643 7                         # ldecod_src/io_tiff.c:643:7
	je	.LBB4_103
.Ltmp531:
.LBB4_102:                              # %if.then14.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	callq	free@PLT
.Ltmp532:
.LBB4_103:                              # %if.end16.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 643 65                        # ldecod_src/io_tiff.c:643:65
	movq	$0, ReadTIFFImage.t+8(%rip)
.Ltmp533:
	.loc	0 644 10 is_stmt 1              # ldecod_src/io_tiff.c:644:10
	movq	ReadTIFFImage.t(%rip), %rdi
	.loc	0 644 7 is_stmt 0               # ldecod_src/io_tiff.c:644:7
	testq	%rdi, %rdi
.Ltmp534:
	.loc	0 644 7                         # ldecod_src/io_tiff.c:644:7
	je	.LBB4_105
.Ltmp535:
# %bb.104:                              # %if.then19.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 644 24                        # ldecod_src/io_tiff.c:644:24
	callq	free@PLT
.Ltmp536:
.LBB4_105:                              # %readTiff.exit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	.loc	0 644 56                        # ldecod_src/io_tiff.c:644:56
	movq	$0, ReadTIFFImage.t(%rip)
.Ltmp537:
.LBB4_106:                              # %if.end173
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1170 3 is_stmt 1              # ldecod_src/io_tiff.c:1170:3
	callq	report_stats_on_error@PLT
.Ltmp538:
.LBB4_107:                              # %cleanup
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 0 3 is_stmt 0                 # ldecod_src/io_tiff.c:0:3
	xorl	%eax, %eax
.Ltmp539:
.LBB4_108:                              # %cleanup
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_LLVM_entry_value 1] $rcx
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1173 1 epilogue_begin is_stmt 1 # ldecod_src/io_tiff.c:1173:1
	addq	$1544, %rsp                     # imm = 0x608
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp540:
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_LLVM_entry_value 1] $r8
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp541:
.LBB4_109:                              # %for.cond45.preheader.i
	.cfi_def_cfa_offset 1600
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 0 is_stmt 0                 # ldecod_src/io_tiff.c:0:0
	testl	%edi, %edi
	movq	16(%rsp), %rbp                  # 8-byte Reload
.Ltmp542:
	.loc	0 755 5 is_stmt 1               # ldecod_src/io_tiff.c:755:5
	jle	.LBB4_114
.Ltmp543:
# %bb.110:                              # %for.body48.i.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	xorl	%edi, %edi
	movd	%r11d, %xmm1
	movq	56(%rsp), %rcx                  # 8-byte Reload
	movq	128(%rsp), %rsi                 # 8-byte Reload
	movq	88(%rsp), %rdx                  # 8-byte Reload
	.loc	0 755 5                         # ldecod_src/io_tiff.c:755:5
	cmpl	$31, 24(%rsp)                   # 4-byte Folded Reload
	jbe	.LBB4_128
.Ltmp544:
# %bb.111:                              # %vector.ph465
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	movl	24(%rsp), %r8d                  # 4-byte Reload
	movl	%r8d, %edi
	andl	$2147483616, %edi               # imm = 0x7FFFFFE0
	leal	(%rdi,%rdi), %eax
	leaq	(%rax,%rax,2), %rdx
	movq	56(%rsp), %r9                   # 8-byte Reload
	leaq	(%r9,%rdx), %rcx
	movq	128(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rdx), %rsi
	addq	88(%rsp), %rdx                  # 8-byte Folded Reload
	movaps	%xmm10, 1072(%rsp)              # 16-byte Spill
	pshufd	$0, %xmm10, %xmm3               # xmm3 = xmm10[0,0,0,0]
	movdqa	%xmm3, 1216(%rsp)               # 16-byte Spill
	movdqa	%xmm1, 1008(%rsp)               # 16-byte Spill
	pshufd	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,0,0,0]
	movdqa	%xmm1, 1200(%rsp)               # 16-byte Spill
	movaps	%xmm11, 1056(%rsp)              # 16-byte Spill
	pshufd	$0, %xmm11, %xmm1               # xmm1 = xmm11[0,0,0,0]
	movdqa	%xmm1, 1184(%rsp)               # 16-byte Spill
	movaps	%xmm12, 1040(%rsp)              # 16-byte Spill
	pshufd	$0, %xmm12, %xmm1               # xmm1 = xmm12[0,0,0,0]
	movdqa	%xmm1, 1168(%rsp)               # 16-byte Spill
	movaps	%xmm13, 1024(%rsp)              # 16-byte Spill
	pshufd	$0, %xmm13, %xmm1               # xmm1 = xmm13[0,0,0,0]
	movdqa	%xmm1, 1152(%rsp)               # 16-byte Spill
	movq	%rdi, %r10
	movdqa	%xmm9, 1136(%rsp)               # 16-byte Spill
	movdqa	%xmm8, 1120(%rsp)               # 16-byte Spill
	movdqa	%xmm2, 1104(%rsp)               # 16-byte Spill
	movdqa	%xmm0, 1088(%rsp)               # 16-byte Spill
.Ltmp545:
.LBB4_112:                              # %vector.body476
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 757 20 is_stmt 1              # ldecod_src/io_tiff.c:757:20
	movups	64(%r9), %xmm5
	movups	(%r9), %xmm4
	movups	16(%r9), %xmm7
	movups	48(%r9), %xmm10
	movups	96(%r9), %xmm9
	movups	112(%r9), %xmm3
	movups	144(%r9), %xmm8
	movups	160(%r9), %xmm1
	movaps	.LCPI4_8(%rip), %xmm12          # xmm12 = [65535,0,65535,65535,65535,65535,65535,65535]
	movaps	%xmm12, %xmm0
	andnps	%xmm7, %xmm0
	movaps	%xmm7, %xmm2
	shufps	$1, %xmm4, %xmm2                # xmm2 = xmm2[1,0],xmm4[0,0]
	shufps	$226, %xmm4, %xmm2              # xmm2 = xmm2[2,0],xmm4[2,3]
	movaps	%xmm2, 96(%rsp)                 # 16-byte Spill
	movaps	%xmm4, %xmm6
	andps	%xmm12, %xmm6
	orps	%xmm0, %xmm6
	movaps	%xmm12, %xmm2
	andnps	%xmm5, %xmm2
	movaps	%xmm5, %xmm0
	shufps	$1, %xmm10, %xmm0               # xmm0 = xmm0[1,0],xmm10[0,0]
	shufps	$226, %xmm10, %xmm0             # xmm0 = xmm0[2,0],xmm10[2,3]
	movaps	%xmm0, 112(%rsp)                # 16-byte Spill
	movaps	%xmm10, %xmm14
	andps	%xmm12, %xmm14
	orps	%xmm2, %xmm14
	movaps	%xmm12, %xmm2
	andnps	%xmm3, %xmm2
	movaps	%xmm3, %xmm11
	shufps	$1, %xmm9, %xmm11               # xmm11 = xmm11[1,0],xmm9[0,0]
	shufps	$226, %xmm9, %xmm11             # xmm11 = xmm11[2,0],xmm9[2,3]
	movaps	%xmm11, 192(%rsp)               # 16-byte Spill
	movaps	%xmm9, %xmm11
	andps	%xmm12, %xmm11
	orps	%xmm2, %xmm11
	movaps	%xmm12, %xmm2
	andnps	%xmm1, %xmm2
	movaps	%xmm8, %xmm13
	andps	%xmm12, %xmm13
	orps	%xmm2, %xmm13
	movaps	%xmm13, 448(%rsp)               # 16-byte Spill
	pshuflw	$236, %xmm7, %xmm2              # xmm2 = xmm7[0,3,2,3,4,5,6,7]
	pshufd	$230, %xmm4, %xmm4              # xmm4 = xmm4[2,1,2,3]
	pshuflw	$230, %xmm4, %xmm4              # xmm4 = xmm4[2,1,2,3,4,5,6,7]
	punpckldq	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1]
	movdqa	%xmm4, 256(%rsp)                # 16-byte Spill
	pshuflw	$236, %xmm5, %xmm2              # xmm2 = xmm5[0,3,2,3,4,5,6,7]
	pshufd	$230, %xmm10, %xmm4             # xmm4 = xmm10[2,1,2,3]
	pshuflw	$230, %xmm4, %xmm4              # xmm4 = xmm4[2,1,2,3,4,5,6,7]
	punpckldq	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1]
	movdqa	%xmm4, 240(%rsp)                # 16-byte Spill
	pshuflw	$236, %xmm3, %xmm2              # xmm2 = xmm3[0,3,2,3,4,5,6,7]
	pshufd	$230, %xmm9, %xmm4              # xmm4 = xmm9[2,1,2,3]
	pshuflw	$230, %xmm4, %xmm4              # xmm4 = xmm4[2,1,2,3,4,5,6,7]
	punpckldq	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1]
	movdqa	%xmm4, 224(%rsp)                # 16-byte Spill
	movaps	%xmm1, %xmm2
	shufps	$1, %xmm8, %xmm2                # xmm2 = xmm2[1,0],xmm8[0,0]
	shufps	$226, %xmm8, %xmm2              # xmm2 = xmm2[2,0],xmm8[2,3]
	movaps	%xmm2, 176(%rsp)                # 16-byte Spill
	pshufd	$230, %xmm8, %xmm2              # xmm2 = xmm8[2,1,2,3]
	pshuflw	$230, %xmm2, %xmm4              # xmm4 = xmm2[2,1,2,3,4,5,6,7]
	pshuflw	$236, %xmm1, %xmm2              # xmm2 = xmm1[0,3,2,3,4,5,6,7]
	punpckldq	%xmm2, %xmm4            # xmm4 = xmm4[0],xmm2[0],xmm4[1],xmm2[1]
	movdqa	%xmm4, 304(%rsp)                # 16-byte Spill
	movdqu	32(%r9), %xmm15
	.loc	0 757 14 is_stmt 0              # ldecod_src/io_tiff.c:757:14
	pshufd	$100, %xmm15, %xmm4             # xmm4 = xmm15[0,1,2,1]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufhw	$236, %xmm7, %xmm12             # xmm12 = xmm7[0,1,2,3,4,7,6,7]
	punpckhdq	%xmm4, %xmm12           # xmm12 = xmm12[2],xmm4[2],xmm12[3],xmm4[3]
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	movdqu	80(%r9), %xmm13
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	pshufd	$100, %xmm13, %xmm4             # xmm4 = xmm13[0,1,2,1]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufhw	$236, %xmm5, %xmm0              # xmm0 = xmm5[0,1,2,3,4,7,6,7]
	punpckhdq	%xmm4, %xmm0            # xmm0 = xmm0[2],xmm4[2],xmm0[3],xmm4[3]
	movdqa	%xmm0, 32(%rsp)                 # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	movdqu	128(%r9), %xmm10
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	pshufd	$100, %xmm10, %xmm4             # xmm4 = xmm10[0,1,2,1]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufhw	$236, %xmm3, %xmm2              # xmm2 = xmm3[0,1,2,3,4,7,6,7]
	punpckhdq	%xmm4, %xmm2            # xmm2 = xmm2[2],xmm4[2],xmm2[3],xmm4[3]
	movdqa	%xmm2, 64(%rsp)                 # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	movdqu	176(%r9), %xmm0
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	pshufd	$100, %xmm0, %xmm4              # xmm4 = xmm0[0,1,2,1]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufhw	$236, %xmm1, %xmm8              # xmm8 = xmm1[0,1,2,3,4,7,6,7]
	punpckhdq	%xmm4, %xmm8            # xmm8 = xmm8[2],xmm4[2],xmm8[3],xmm4[3]
	movdqa	%xmm8, 272(%rsp)                # 16-byte Spill
	movdqa	.LCPI4_9(%rip), %xmm8           # xmm8 = [65535,65535,65535,65535,65535,65535,0,65535]
	.loc	0 759 14 is_stmt 1              # ldecod_src/io_tiff.c:759:14
	movdqa	%xmm8, %xmm4
	pandn	%xmm7, %xmm4
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	shufps	$50, %xmm15, %xmm7              # xmm7 = xmm7[2,0],xmm15[3,0]
	movaps	%xmm15, %xmm9
	shufps	$132, %xmm7, %xmm9              # xmm9 = xmm9[0,1],xmm7[0,2]
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	movdqa	%xmm8, %xmm7
	pandn	%xmm5, %xmm7
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	shufps	$50, %xmm13, %xmm5              # xmm5 = xmm5[2,0],xmm13[3,0]
	movaps	%xmm13, %xmm2
	shufps	$132, %xmm5, %xmm2              # xmm2 = xmm2[0,1],xmm5[0,2]
	movaps	%xmm2, 432(%rsp)                # 16-byte Spill
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	movdqa	%xmm8, %xmm5
	pandn	%xmm3, %xmm5
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	shufps	$50, %xmm10, %xmm3              # xmm3 = xmm3[2,0],xmm10[3,0]
	movaps	%xmm10, %xmm2
	shufps	$132, %xmm3, %xmm2              # xmm2 = xmm2[0,1],xmm3[0,2]
	movaps	%xmm2, 416(%rsp)                # 16-byte Spill
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	movdqa	%xmm8, %xmm3
	pandn	%xmm1, %xmm3
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	shufps	$50, %xmm0, %xmm1               # xmm1 = xmm1[2,0],xmm0[3,0]
	movaps	%xmm0, %xmm2
	shufps	$132, %xmm1, %xmm2              # xmm2 = xmm2[0,1],xmm1[0,2]
	movaps	%xmm2, 400(%rsp)                # 16-byte Spill
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	pand	%xmm8, %xmm15
	por	%xmm4, %xmm15
	pand	%xmm8, %xmm13
	por	%xmm7, %xmm13
	movdqa	%xmm13, 384(%rsp)               # 16-byte Spill
	pand	%xmm8, %xmm10
	por	%xmm5, %xmm10
	movdqa	%xmm10, 368(%rsp)               # 16-byte Spill
	pand	%xmm8, %xmm0
	por	%xmm3, %xmm0
	movdqa	%xmm0, 144(%rsp)                # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshufd	$216, %xmm6, %xmm1              # xmm1 = xmm6[0,2,1,3]
	pshufhw	$230, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$108, %xmm1, %xmm3              # xmm3 = xmm1[0,3,2,1,4,5,6,7]
	pxor	%xmm7, %xmm7
	.loc	0 757 14 is_stmt 0              # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 336(%rsp)                # 16-byte Spill
	movdqa	1120(%rsp), %xmm4               # 16-byte Reload
	.loc	0 763 20 is_stmt 1              # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm1
	pmuludq	%xmm3, %xmm1
	pshufd	$232, %xmm1, %xmm2              # xmm2 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm1              # xmm1 = xmm4[1,1,3,3]
	pshufd	$245, %xmm3, %xmm5              # xmm5 = xmm3[1,1,3,3]
	movdqa	%xmm5, 352(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm3
	pmuludq	%xmm5, %xmm3
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm2            # xmm2 = xmm2[0],xmm3[0],xmm2[1],xmm3[1]
	movdqa	%xmm2, 160(%rsp)                # 16-byte Spill
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm12           # xmm12 = xmm12[0],xmm7[0],xmm12[1],xmm7[1],xmm12[2],xmm7[2],xmm12[3],xmm7[3]
	movdqa	%xmm12, 528(%rsp)               # 16-byte Spill
	.loc	0 763 20                        # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm3
	pmuludq	%xmm12, %xmm3
	pshufd	$232, %xmm3, %xmm10             # xmm10 = xmm3[0,2,2,3]
	pshufd	$245, %xmm12, %xmm6             # xmm6 = xmm12[1,1,3,3]
	movdqa	%xmm6, 320(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm3
	pmuludq	%xmm6, %xmm3
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm10           # xmm10 = xmm10[0],xmm3[0],xmm10[1],xmm3[1]
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshufd	$216, %xmm14, %xmm0             # xmm0 = xmm14[0,2,1,3]
	pshufhw	$230, %xmm0, %xmm0              # xmm0 = xmm0[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	pshuflw	$108, %xmm0, %xmm3              # xmm3 = xmm0[0,3,2,1,4,5,6,7]
	.loc	0 757 14 is_stmt 0              # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 496(%rsp)                # 16-byte Spill
	.loc	0 763 20 is_stmt 1              # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm5              # xmm5 = xmm3[1,1,3,3]
	movdqa	%xmm5, 512(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm0
	pmuludq	%xmm5, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	%xmm2, 560(%rsp)                # 16-byte Spill
	movdqa	32(%rsp), %xmm12                # 16-byte Reload
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm12           # xmm12 = xmm12[0],xmm7[0],xmm12[1],xmm7[1],xmm12[2],xmm7[2],xmm12[3],xmm7[3]
	movdqa	%xmm12, 32(%rsp)                # 16-byte Spill
	.loc	0 763 20                        # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm12, %xmm0
	pshufd	$232, %xmm0, %xmm8              # xmm8 = xmm0[0,2,2,3]
	pshufd	$245, %xmm12, %xmm3             # xmm3 = xmm12[1,1,3,3]
	movdqa	%xmm3, 480(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm8            # xmm8 = xmm8[0],xmm0[0],xmm8[1],xmm0[1]
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshufd	$216, %xmm11, %xmm0             # xmm0 = xmm11[0,2,1,3]
	pshufhw	$230, %xmm0, %xmm0              # xmm0 = xmm0[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	pshuflw	$108, %xmm0, %xmm3              # xmm3 = xmm0[0,3,2,1,4,5,6,7]
	.loc	0 757 14 is_stmt 0              # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 992(%rsp)                # 16-byte Spill
	.loc	0 763 20 is_stmt 1              # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm5              # xmm5 = xmm3[1,1,3,3]
	movdqa	%xmm5, 464(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm0
	pmuludq	%xmm5, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	%xmm2, 544(%rsp)                # 16-byte Spill
	movdqa	64(%rsp), %xmm3                 # 16-byte Reload
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 64(%rsp)                 # 16-byte Spill
	.loc	0 763 20                        # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm3              # xmm3 = xmm3[1,1,3,3]
	movdqa	%xmm3, 976(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	%xmm2, 1264(%rsp)               # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshufd	$216, 448(%rsp), %xmm0          # 16-byte Folded Reload
                                        # xmm0 = mem[0,2,1,3]
	pshufhw	$230, %xmm0, %xmm0              # xmm0 = xmm0[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	pshuflw	$108, %xmm0, %xmm3              # xmm3 = xmm0[0,3,2,1,4,5,6,7]
	.loc	0 757 14 is_stmt 0              # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 960(%rsp)                # 16-byte Spill
	.loc	0 763 20 is_stmt 1              # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm5              # xmm5 = xmm3[1,1,3,3]
	movdqa	%xmm5, 448(%rsp)                # 16-byte Spill
	movdqa	%xmm1, %xmm0
	pmuludq	%xmm5, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	%xmm2, 1232(%rsp)               # 16-byte Spill
	movdqa	272(%rsp), %xmm3                # 16-byte Reload
	.loc	0 757 14                        # ldecod_src/io_tiff.c:757:14
	punpcklwd	%xmm7, %xmm3            # xmm3 = xmm3[0],xmm7[0],xmm3[1],xmm7[1],xmm3[2],xmm7[2],xmm3[3],xmm7[3]
	movdqa	%xmm3, 272(%rsp)                # 16-byte Spill
	.loc	0 763 20                        # ldecod_src/io_tiff.c:763:20
	movdqa	%xmm4, %xmm0
	pmuludq	%xmm3, %xmm0
	pshufd	$232, %xmm0, %xmm13             # xmm13 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm0              # xmm0 = xmm3[1,1,3,3]
	movdqa	%xmm0, 944(%rsp)                # 16-byte Spill
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm0              # xmm0 = xmm1[0,2,2,3]
	punpckldq	%xmm0, %xmm13           # xmm13 = xmm13[0],xmm0[0],xmm13[1],xmm0[1]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	pshuflw	$236, %xmm9, %xmm0              # xmm0 = xmm9[0,3,2,3,4,5,6,7]
	pshufhw	$230, %xmm0, %xmm0              # xmm0 = xmm0[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	pshuflw	$147, %xmm0, %xmm1              # xmm1 = xmm0[3,0,1,2,4,5,6,7]
	punpcklwd	%xmm7, %xmm1            # xmm1 = xmm1[0],xmm7[0],xmm1[1],xmm7[1],xmm1[2],xmm7[2],xmm1[3],xmm7[3]
	movdqa	%xmm1, 912(%rsp)                # 16-byte Spill
	movdqa	1216(%rsp), %xmm3               # 16-byte Reload
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm0
	pmuludq	%xmm1, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm3, %xmm0              # xmm0 = xmm3[1,1,3,3]
	pshufd	$245, %xmm1, %xmm4              # xmm4 = xmm1[1,1,3,3]
	movdqa	%xmm4, 928(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm2            # xmm2 = xmm2[0],xmm1[0],xmm2[1],xmm1[1]
	movdqa	%xmm2, 1248(%rsp)               # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshuflw	$230, 96(%rsp), %xmm1           # 16-byte Folded Reload
                                        # xmm1 = mem[2,1,2,3,4,5,6,7]
	pshufhw	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,7,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$57, %xmm1, %xmm4               # xmm4 = xmm1[1,2,3,0,4,5,6,7]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 880(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm2              # xmm2 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 896(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm2            # xmm2 = xmm2[0],xmm1[0],xmm2[1],xmm1[1]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	pshuflw	$236, 432(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,3,2,3,4,5,6,7]
	pshufhw	$230, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$147, %xmm1, %xmm4              # xmm4 = xmm1[3,0,1,2,4,5,6,7]
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 864(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm9              # xmm9 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 432(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm9            # xmm9 = xmm9[0],xmm1[0],xmm9[1],xmm1[1]
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshuflw	$230, 112(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[2,1,2,3,4,5,6,7]
	pshufhw	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,7,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$57, %xmm1, %xmm4               # xmm4 = xmm1[1,2,3,0,4,5,6,7]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 832(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm14             # xmm14 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 848(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm14           # xmm14 = xmm14[0],xmm1[0],xmm14[1],xmm1[1]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	pshuflw	$236, 416(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,3,2,3,4,5,6,7]
	pshufhw	$230, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$147, %xmm1, %xmm4              # xmm4 = xmm1[3,0,1,2,4,5,6,7]
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 816(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm6              # xmm6 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 416(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm6            # xmm6 = xmm6[0],xmm1[0],xmm6[1],xmm1[1]
	movdqa	%xmm6, 112(%rsp)                # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshuflw	$230, 192(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[2,1,2,3,4,5,6,7]
	pshufhw	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,7,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$57, %xmm1, %xmm4               # xmm4 = xmm1[1,2,3,0,4,5,6,7]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 784(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm11             # xmm11 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 800(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm11           # xmm11 = xmm11[0],xmm1[0],xmm11[1],xmm1[1]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	pshuflw	$236, 400(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,3,2,3,4,5,6,7]
	pshufhw	$230, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,6,5,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$147, %xmm1, %xmm4              # xmm4 = xmm1[3,0,1,2,4,5,6,7]
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 752(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm6              # xmm6 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm5              # xmm5 = xmm4[1,1,3,3]
	movdqa	%xmm5, 400(%rsp)                # 16-byte Spill
	movdqa	%xmm0, %xmm1
	pmuludq	%xmm5, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm6            # xmm6 = xmm6[0],xmm1[0],xmm6[1],xmm1[1]
	movdqa	%xmm6, 192(%rsp)                # 16-byte Spill
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	pshuflw	$230, 176(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[2,1,2,3,4,5,6,7]
	pshufhw	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,7,6,7]
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pshuflw	$57, %xmm1, %xmm4               # xmm4 = xmm1[1,2,3,0,4,5,6,7]
	.loc	0 758 14                        # ldecod_src/io_tiff.c:758:14
	punpcklwd	%xmm7, %xmm4            # xmm4 = xmm4[0],xmm7[0],xmm4[1],xmm7[1],xmm4[2],xmm7[2],xmm4[3],xmm7[3]
	movdqa	%xmm4, 768(%rsp)                # 16-byte Spill
	.loc	0 763 33                        # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm3              # xmm3 = xmm1[0,2,2,3]
	pshufd	$245, %xmm4, %xmm1              # xmm1 = xmm4[1,1,3,3]
	movdqa	%xmm1, 736(%rsp)                # 16-byte Spill
	pmuludq	%xmm1, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1]
	movdqa	%xmm3, 176(%rsp)                # 16-byte Spill
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	pshufd	$216, %xmm15, %xmm0             # xmm0 = xmm15[0,2,1,3]
	pshuflw	$230, %xmm0, %xmm0              # xmm0 = xmm0[2,1,2,3,4,5,6,7]
	pshufd	$236, %xmm0, %xmm0              # xmm0 = xmm0[0,3,2,3]
	pshuflw	$198, %xmm0, %xmm1              # xmm1 = xmm0[2,1,0,3,4,5,6,7]
	punpcklwd	%xmm7, %xmm1            # xmm1 = xmm1[0],xmm7[0],xmm1[1],xmm7[1],xmm1[2],xmm7[2],xmm1[3],xmm7[3]
	movdqa	%xmm1, 704(%rsp)                # 16-byte Spill
	movdqa	1136(%rsp), %xmm5               # 16-byte Reload
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm0
	pmuludq	%xmm1, %xmm0
	pshufd	$232, %xmm0, %xmm4              # xmm4 = xmm0[0,2,2,3]
	pshufd	$245, %xmm5, %xmm3              # xmm3 = xmm5[1,1,3,3]
	pshufd	$245, %xmm1, %xmm0              # xmm0 = xmm1[1,1,3,3]
	movdqa	%xmm0, 720(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm4            # xmm4 = xmm4[0],xmm1[0],xmm4[1],xmm1[1]
	movdqa	%xmm4, 96(%rsp)                 # 16-byte Spill
	movdqa	256(%rsp), %xmm0                # 16-byte Reload
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 256(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm6              # xmm6 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm4              # xmm4 = xmm0[1,1,3,3]
	movdqa	%xmm4, 688(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm6            # xmm6 = xmm6[0],xmm1[0],xmm6[1],xmm1[1]
	.loc	0 763 39 is_stmt 0              # ldecod_src/io_tiff.c:763:39
	paddd	%xmm2, %xmm6
	.loc	0 759 14 is_stmt 1              # ldecod_src/io_tiff.c:759:14
	pshufd	$216, 384(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,2,1,3]
	pshuflw	$230, %xmm1, %xmm1              # xmm1 = xmm1[2,1,2,3,4,5,6,7]
	pshufd	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,3,2,3]
	pshuflw	$198, %xmm1, %xmm0              # xmm0 = xmm1[2,1,0,3,4,5,6,7]
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 672(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm12             # xmm12 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm4              # xmm4 = xmm0[1,1,3,3]
	movdqa	%xmm4, 384(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm12           # xmm12 = xmm12[0],xmm1[0],xmm12[1],xmm1[1]
	movdqa	240(%rsp), %xmm0                # 16-byte Reload
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 240(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm15             # xmm15 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm4              # xmm4 = xmm0[1,1,3,3]
	movdqa	%xmm4, 656(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm4, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm15           # xmm15 = xmm15[0],xmm1[0],xmm15[1],xmm1[1]
	.loc	0 763 39 is_stmt 0              # ldecod_src/io_tiff.c:763:39
	paddd	%xmm14, %xmm15
	.loc	0 759 14 is_stmt 1              # ldecod_src/io_tiff.c:759:14
	pshufd	$216, 368(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,2,1,3]
	pshuflw	$230, %xmm1, %xmm1              # xmm1 = xmm1[2,1,2,3,4,5,6,7]
	pshufd	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,3,2,3]
	pshuflw	$198, %xmm1, %xmm0              # xmm0 = xmm1[2,1,0,3,4,5,6,7]
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 640(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm14             # xmm14 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm2              # xmm2 = xmm0[1,1,3,3]
	movdqa	%xmm2, 368(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm2, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm14           # xmm14 = xmm14[0],xmm1[0],xmm14[1],xmm1[1]
	movdqa	224(%rsp), %xmm0                # 16-byte Reload
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 224(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm4              # xmm4 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm2              # xmm2 = xmm0[1,1,3,3]
	movdqa	%xmm2, 624(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm2, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm4            # xmm4 = xmm4[0],xmm1[0],xmm4[1],xmm1[1]
	.loc	0 763 39 is_stmt 0              # ldecod_src/io_tiff.c:763:39
	paddd	%xmm11, %xmm4
	.loc	0 759 14 is_stmt 1              # ldecod_src/io_tiff.c:759:14
	pshufd	$216, 144(%rsp), %xmm1          # 16-byte Folded Reload
                                        # xmm1 = mem[0,2,1,3]
	pshuflw	$230, %xmm1, %xmm1              # xmm1 = xmm1[2,1,2,3,4,5,6,7]
	pshufd	$236, %xmm1, %xmm1              # xmm1 = xmm1[0,3,2,3]
	pshuflw	$198, %xmm1, %xmm0              # xmm0 = xmm1[2,1,0,3,4,5,6,7]
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 592(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	movdqa	%xmm5, %xmm1
	pmuludq	%xmm0, %xmm1
	pshufd	$232, %xmm1, %xmm11             # xmm11 = xmm1[0,2,2,3]
	pshufd	$245, %xmm0, %xmm2              # xmm2 = xmm0[1,1,3,3]
	movdqa	%xmm2, 608(%rsp)                # 16-byte Spill
	movdqa	%xmm3, %xmm1
	pmuludq	%xmm2, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm11           # xmm11 = xmm11[0],xmm1[0],xmm11[1],xmm1[1]
	movdqa	304(%rsp), %xmm0                # 16-byte Reload
	.loc	0 759 14                        # ldecod_src/io_tiff.c:759:14
	punpcklwd	%xmm7, %xmm0            # xmm0 = xmm0[0],xmm7[0],xmm0[1],xmm7[1],xmm0[2],xmm7[2],xmm0[3],xmm7[3]
	movdqa	%xmm0, 304(%rsp)                # 16-byte Spill
	.loc	0 763 46                        # ldecod_src/io_tiff.c:763:46
	pmuludq	%xmm0, %xmm5
	pshufd	$232, %xmm5, %xmm1              # xmm1 = xmm5[0,2,2,3]
	pshufd	$245, %xmm0, %xmm0              # xmm0 = xmm0[1,1,3,3]
	movdqa	%xmm0, 576(%rsp)                # 16-byte Spill
	pmuludq	%xmm0, %xmm3
	pshufd	$232, %xmm3, %xmm0              # xmm0 = xmm3[0,2,2,3]
	punpckldq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	.loc	0 763 39 is_stmt 0              # ldecod_src/io_tiff.c:763:39
	paddd	176(%rsp), %xmm1                # 16-byte Folded Reload
	movdqa	1200(%rsp), %xmm0               # 16-byte Reload
	movdqa	160(%rsp), %xmm5                # 16-byte Reload
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm5
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm6, %xmm5
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm10
	.loc	0 763 39                        # ldecod_src/io_tiff.c:763:39
	paddd	1248(%rsp), %xmm10              # 16-byte Folded Reload
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	96(%rsp), %xmm10                # 16-byte Folded Reload
	movdqa	560(%rsp), %xmm7                # 16-byte Reload
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm7
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm15, %xmm7
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm8
	.loc	0 763 39                        # ldecod_src/io_tiff.c:763:39
	paddd	%xmm9, %xmm8
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm12, %xmm8
	movdqa	544(%rsp), %xmm6                # 16-byte Reload
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm6
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm4, %xmm6
	movdqa	1264(%rsp), %xmm3               # 16-byte Reload
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm3
	.loc	0 763 39                        # ldecod_src/io_tiff.c:763:39
	paddd	112(%rsp), %xmm3                # 16-byte Folded Reload
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm14, %xmm3
	movdqa	1232(%rsp), %xmm9               # 16-byte Reload
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm9
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm1, %xmm9
	.loc	0 763 26                        # ldecod_src/io_tiff.c:763:26
	paddd	%xmm0, %xmm13
	.loc	0 763 39                        # ldecod_src/io_tiff.c:763:39
	paddd	192(%rsp), %xmm13               # 16-byte Folded Reload
	.loc	0 763 52                        # ldecod_src/io_tiff.c:763:52
	paddd	%xmm11, %xmm13
	.loc	0 763 64                        # ldecod_src/io_tiff.c:763:64
	psrad	$14, %xmm10
	psrad	$14, %xmm5
.Ltmp546:
	.loc	0 764 16 is_stmt 1              # ldecod_src/io_tiff.c:764:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm10, %xmm0
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm5, %xmm1
	packssdw	%xmm0, %xmm1
	movdqa	%xmm1, %xmm14
.Ltmp547:
	.loc	0 763 64                        # ldecod_src/io_tiff.c:763:64
	psrad	$14, %xmm8
	psrad	$14, %xmm7
.Ltmp548:
	.loc	0 764 16                        # ldecod_src/io_tiff.c:764:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm8, %xmm0
	pxor	%xmm15, %xmm15
	pcmpgtd	%xmm7, %xmm15
	packssdw	%xmm0, %xmm15
.Ltmp549:
	.loc	0 763 64                        # ldecod_src/io_tiff.c:763:64
	psrad	$14, %xmm3
	psrad	$14, %xmm6
.Ltmp550:
	.loc	0 764 16                        # ldecod_src/io_tiff.c:764:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm3, %xmm0
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm6, %xmm1
	packssdw	%xmm0, %xmm1
	movdqa	%xmm1, 176(%rsp)                # 16-byte Spill
.Ltmp551:
	.loc	0 763 64                        # ldecod_src/io_tiff.c:763:64
	psrad	$14, %xmm13
	psrad	$14, %xmm9
.Ltmp552:
	.loc	0 764 16                        # ldecod_src/io_tiff.c:764:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm13, %xmm0
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm9, %xmm1
	packssdw	%xmm0, %xmm1
	movdqa	%xmm1, 192(%rsp)                # 16-byte Spill
.Ltmp553:
	.loc	0 764 11 is_stmt 0              # ldecod_src/io_tiff.c:764:11
	movdqa	%xmm10, %xmm1
	movdqa	.LCPI4_10(%rip), %xmm11         # xmm11 = [2147483648,2147483648,2147483648,2147483648]
	pxor	%xmm11, %xmm1
	movdqa	.LCPI4_11(%rip), %xmm4          # xmm4 = [2147549183,2147549183,2147549183,2147549183]
	movdqa	%xmm4, %xmm0
	pcmpgtd	%xmm1, %xmm0
	pand	%xmm0, %xmm10
	pcmpeqd	%xmm1, %xmm1
	pxor	%xmm1, %xmm0
	pcmpeqd	%xmm12, %xmm12
	por	%xmm10, %xmm0
	movdqa	%xmm5, %xmm2
	pxor	%xmm11, %xmm2
	movdqa	%xmm4, %xmm1
	movdqa	%xmm4, %xmm10
	pcmpgtd	%xmm2, %xmm1
	pand	%xmm1, %xmm5
	pxor	%xmm12, %xmm1
	por	%xmm5, %xmm1
	movdqa	%xmm8, %xmm2
	pxor	%xmm11, %xmm2
	movdqa	%xmm4, %xmm5
	pcmpgtd	%xmm2, %xmm5
	pand	%xmm5, %xmm8
	pxor	%xmm12, %xmm5
	por	%xmm8, %xmm5
	movdqa	%xmm7, %xmm2
	pxor	%xmm11, %xmm2
	pcmpgtd	%xmm2, %xmm4
	pand	%xmm4, %xmm7
	pxor	%xmm12, %xmm4
	por	%xmm7, %xmm4
	movdqa	%xmm3, %xmm2
	pxor	%xmm11, %xmm2
	movdqa	%xmm10, %xmm8
	pcmpgtd	%xmm2, %xmm8
	pand	%xmm8, %xmm3
	pxor	%xmm12, %xmm8
	por	%xmm3, %xmm8
	movdqa	%xmm6, %xmm2
	pxor	%xmm11, %xmm2
	movdqa	%xmm10, %xmm3
	pcmpgtd	%xmm2, %xmm3
	pand	%xmm3, %xmm6
	pxor	%xmm12, %xmm3
	por	%xmm6, %xmm3
	movdqa	%xmm13, %xmm2
	pxor	%xmm11, %xmm2
	movdqa	%xmm10, %xmm7
	pcmpgtd	%xmm2, %xmm7
	pand	%xmm7, %xmm13
	pxor	%xmm12, %xmm7
	por	%xmm13, %xmm7
	movdqa	%xmm9, %xmm6
	pxor	%xmm11, %xmm6
	movdqa	%xmm10, %xmm2
	pcmpgtd	%xmm6, %xmm2
	pand	%xmm2, %xmm9
	pxor	%xmm12, %xmm2
	por	%xmm9, %xmm2
	.loc	0 768 13 is_stmt 1              # ldecod_src/io_tiff.c:768:13
	pslld	$16, %xmm0
	psrad	$16, %xmm0
	pslld	$16, %xmm1
	psrad	$16, %xmm1
	packssdw	%xmm0, %xmm1
	pandn	%xmm1, %xmm14
	movdqa	%xmm14, 544(%rsp)               # 16-byte Spill
	pslld	$16, %xmm5
	psrad	$16, %xmm5
	pslld	$16, %xmm4
	psrad	$16, %xmm4
	packssdw	%xmm5, %xmm4
	pandn	%xmm4, %xmm15
	movdqa	%xmm15, 560(%rsp)               # 16-byte Spill
	pslld	$16, %xmm8
	psrad	$16, %xmm8
	pslld	$16, %xmm3
	psrad	$16, %xmm3
	packssdw	%xmm8, %xmm3
	movdqa	176(%rsp), %xmm0                # 16-byte Reload
	pandn	%xmm3, %xmm0
	movdqa	%xmm0, 176(%rsp)                # 16-byte Spill
	pslld	$16, %xmm7
	psrad	$16, %xmm7
	pslld	$16, %xmm2
	psrad	$16, %xmm2
	packssdw	%xmm7, %xmm2
	movdqa	192(%rsp), %xmm0                # 16-byte Reload
	pandn	%xmm2, %xmm0
	movdqa	%xmm0, 192(%rsp)                # 16-byte Spill
	movdqa	1184(%rsp), %xmm9               # 16-byte Reload
	.loc	0 770 20                        # ldecod_src/io_tiff.c:770:20
	movdqa	%xmm9, %xmm0
	pmuludq	336(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm3              # xmm3 = xmm0[0,2,2,3]
	pshufd	$245, %xmm9, %xmm5              # xmm5 = xmm9[1,1,3,3]
	movdqa	%xmm5, %xmm0
	pmuludq	352(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	528(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm8              # xmm8 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm0
	pmuludq	320(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm8            # xmm8 = xmm8[0],xmm0[0],xmm8[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	496(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm0
	pmuludq	512(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	32(%rsp), %xmm0                 # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm7              # xmm7 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm0
	pmuludq	480(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm7            # xmm7 = xmm7[0],xmm0[0],xmm7[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	992(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm1              # xmm1 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm0
	pmuludq	464(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	64(%rsp), %xmm0                 # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm6              # xmm6 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm0
	pmuludq	976(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm6            # xmm6 = xmm6[0],xmm0[0],xmm6[1],xmm0[1]
	movdqa	%xmm9, %xmm0
	pmuludq	960(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	movdqa	%xmm5, %xmm4
	pmuludq	448(%rsp), %xmm4                # 16-byte Folded Reload
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	punpckldq	%xmm4, %xmm0            # xmm0 = xmm0[0],xmm4[0],xmm0[1],xmm4[1]
	movdqa	%xmm9, %xmm4
	pmuludq	272(%rsp), %xmm4                # 16-byte Folded Reload
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	pmuludq	944(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm4            # xmm4 = xmm4[0],xmm5[0],xmm4[1],xmm5[1]
	movdqa	1168(%rsp), %xmm10              # 16-byte Reload
	.loc	0 770 33 is_stmt 0              # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm5
	pmuludq	912(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm11             # xmm11 = xmm5[0,2,2,3]
	pshufd	$245, %xmm10, %xmm5             # xmm5 = xmm10[1,1,3,3]
	movdqa	%xmm5, %xmm9
	pmuludq	928(%rsp), %xmm9                # 16-byte Folded Reload
	pshufd	$232, %xmm9, %xmm9              # xmm9 = xmm9[0,2,2,3]
	punpckldq	%xmm9, %xmm11           # xmm11 = xmm11[0],xmm9[0],xmm11[1],xmm9[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm8, %xmm11
	movdqa	%xmm11, 112(%rsp)               # 16-byte Spill
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm8
	pmuludq	880(%rsp), %xmm8                # 16-byte Folded Reload
	pshufd	$232, %xmm8, %xmm9              # xmm9 = xmm8[0,2,2,3]
	movdqa	%xmm5, %xmm8
	pmuludq	896(%rsp), %xmm8                # 16-byte Folded Reload
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm9            # xmm9 = xmm9[0],xmm8[0],xmm9[1],xmm8[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm3, %xmm9
	movdqa	%xmm9, 96(%rsp)                 # 16-byte Spill
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm3
	pmuludq	864(%rsp), %xmm3                # 16-byte Folded Reload
	pshufd	$232, %xmm3, %xmm8              # xmm8 = xmm3[0,2,2,3]
	movdqa	%xmm5, %xmm3
	pmuludq	432(%rsp), %xmm3                # 16-byte Folded Reload
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm8            # xmm8 = xmm8[0],xmm3[0],xmm8[1],xmm3[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm7, %xmm8
	movdqa	%xmm8, 160(%rsp)                # 16-byte Spill
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm3
	pmuludq	832(%rsp), %xmm3                # 16-byte Folded Reload
	pshufd	$232, %xmm3, %xmm8              # xmm8 = xmm3[0,2,2,3]
	movdqa	%xmm5, %xmm3
	pmuludq	848(%rsp), %xmm3                # 16-byte Folded Reload
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm8            # xmm8 = xmm8[0],xmm3[0],xmm8[1],xmm3[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm2, %xmm8
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm2
	pmuludq	816(%rsp), %xmm2                # 16-byte Folded Reload
	pshufd	$232, %xmm2, %xmm3              # xmm3 = xmm2[0,2,2,3]
	movdqa	%xmm5, %xmm2
	pmuludq	416(%rsp), %xmm2                # 16-byte Folded Reload
	pshufd	$232, %xmm2, %xmm2              # xmm2 = xmm2[0,2,2,3]
	punpckldq	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm6, %xmm3
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm2
	pmuludq	784(%rsp), %xmm2                # 16-byte Folded Reload
	pshufd	$232, %xmm2, %xmm2              # xmm2 = xmm2[0,2,2,3]
	movdqa	%xmm5, %xmm6
	pmuludq	800(%rsp), %xmm6                # 16-byte Folded Reload
	pshufd	$232, %xmm6, %xmm6              # xmm6 = xmm6[0,2,2,3]
	punpckldq	%xmm6, %xmm2            # xmm2 = xmm2[0],xmm6[0],xmm2[1],xmm6[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm1, %xmm2
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm1
	pmuludq	752(%rsp), %xmm1                # 16-byte Folded Reload
	pshufd	$232, %xmm1, %xmm14             # xmm14 = xmm1[0,2,2,3]
	movdqa	%xmm5, %xmm1
	pmuludq	400(%rsp), %xmm1                # 16-byte Folded Reload
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm14           # xmm14 = xmm14[0],xmm1[0],xmm14[1],xmm1[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm4, %xmm14
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm10, %xmm1
	pmuludq	768(%rsp), %xmm1                # 16-byte Folded Reload
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	pmuludq	736(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm4              # xmm4 = xmm5[0,2,2,3]
	punpckldq	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm0, %xmm1
	movdqa	1104(%rsp), %xmm13              # 16-byte Reload
	.loc	0 770 46                        # ldecod_src/io_tiff.c:770:46
	movdqa	%xmm13, %xmm0
	pmuludq	704(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm15             # xmm15 = xmm0[0,2,2,3]
	pshufd	$245, %xmm13, %xmm10            # xmm10 = xmm13[1,1,3,3]
	movdqa	%xmm10, %xmm0
	pmuludq	720(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm15           # xmm15 = xmm15[0],xmm0[0],xmm15[1],xmm0[1]
	movdqa	%xmm13, %xmm0
	pmuludq	256(%rsp), %xmm0                # 16-byte Folded Reload
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	688(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm0            # xmm0 = xmm0[0],xmm5[0],xmm0[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	672(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm12             # xmm12 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	384(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm12           # xmm12 = xmm12[0],xmm5[0],xmm12[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	240(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm11             # xmm11 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	656(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm11           # xmm11 = xmm11[0],xmm5[0],xmm11[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	640(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm9              # xmm9 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	368(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm9            # xmm9 = xmm9[0],xmm5[0],xmm9[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	224(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm7              # xmm7 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	624(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm7            # xmm7 = xmm7[0],xmm5[0],xmm7[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	592(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm6              # xmm6 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm5
	pmuludq	608(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	punpckldq	%xmm5, %xmm6            # xmm6 = xmm6[0],xmm5[0],xmm6[1],xmm5[1]
	movdqa	%xmm13, %xmm5
	pmuludq	304(%rsp), %xmm5                # 16-byte Folded Reload
	pshufd	$232, %xmm5, %xmm5              # xmm5 = xmm5[0,2,2,3]
	movdqa	%xmm10, %xmm4
	pmuludq	576(%rsp), %xmm4                # 16-byte Folded Reload
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	movdqa	.LCPI4_12(%rip), %xmm4          # xmm4 = [536879104,536879104,536879104,536879104]
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm15
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	112(%rsp), %xmm15               # 16-byte Folded Reload
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm0
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	96(%rsp), %xmm0                 # 16-byte Folded Reload
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm12
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	160(%rsp), %xmm12               # 16-byte Folded Reload
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm11
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	%xmm8, %xmm11
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm9
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	%xmm3, %xmm9
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm7
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	%xmm2, %xmm7
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm6
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	%xmm14, %xmm6
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm4, %xmm5
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	paddd	%xmm1, %xmm5
	.loc	0 770 64                        # ldecod_src/io_tiff.c:770:64
	psrad	$14, %xmm15
	psrad	$14, %xmm0
.Ltmp554:
	.loc	0 771 16 is_stmt 1              # ldecod_src/io_tiff.c:771:16
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm15, %xmm1
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm0, %xmm2
	packssdw	%xmm1, %xmm2
	movdqa	%xmm2, 144(%rsp)                # 16-byte Spill
.Ltmp555:
	.loc	0 770 64                        # ldecod_src/io_tiff.c:770:64
	psrad	$14, %xmm12
	psrad	$14, %xmm11
.Ltmp556:
	.loc	0 771 16                        # ldecod_src/io_tiff.c:771:16
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm12, %xmm1
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm11, %xmm2
	packssdw	%xmm1, %xmm2
	movdqa	%xmm2, 160(%rsp)                # 16-byte Spill
.Ltmp557:
	.loc	0 770 64                        # ldecod_src/io_tiff.c:770:64
	psrad	$14, %xmm9
	psrad	$14, %xmm7
.Ltmp558:
	.loc	0 771 16                        # ldecod_src/io_tiff.c:771:16
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm9, %xmm1
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm7, %xmm2
	packssdw	%xmm1, %xmm2
	movdqa	%xmm2, 96(%rsp)                 # 16-byte Spill
.Ltmp559:
	.loc	0 770 64                        # ldecod_src/io_tiff.c:770:64
	psrad	$14, %xmm6
	psrad	$14, %xmm5
.Ltmp560:
	.loc	0 771 16                        # ldecod_src/io_tiff.c:771:16
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm6, %xmm1
	pxor	%xmm2, %xmm2
	pcmpgtd	%xmm5, %xmm2
	packssdw	%xmm1, %xmm2
	movdqa	%xmm2, 112(%rsp)                # 16-byte Spill
.Ltmp561:
	.loc	0 771 11 is_stmt 0              # ldecod_src/io_tiff.c:771:11
	movdqa	%xmm15, %xmm2
	movdqa	.LCPI4_10(%rip), %xmm14         # xmm14 = [2147483648,2147483648,2147483648,2147483648]
	pxor	%xmm14, %xmm2
	movdqa	.LCPI4_11(%rip), %xmm8          # xmm8 = [2147549183,2147549183,2147549183,2147549183]
	movdqa	%xmm8, %xmm1
	pcmpgtd	%xmm2, %xmm1
	pand	%xmm1, %xmm15
	pcmpeqd	%xmm4, %xmm4
	pxor	%xmm4, %xmm1
	por	%xmm15, %xmm1
	movdqa	%xmm0, %xmm3
	pxor	%xmm14, %xmm3
	movdqa	%xmm8, %xmm2
	pcmpgtd	%xmm3, %xmm2
	pand	%xmm2, %xmm0
	pxor	%xmm4, %xmm2
	por	%xmm0, %xmm2
	movdqa	%xmm12, %xmm3
	pxor	%xmm14, %xmm3
	movdqa	%xmm8, %xmm0
	pcmpgtd	%xmm3, %xmm0
	pand	%xmm0, %xmm12
	pxor	%xmm4, %xmm0
	pcmpeqd	%xmm15, %xmm15
	por	%xmm12, %xmm0
	movdqa	%xmm11, %xmm4
	pxor	%xmm14, %xmm4
	movdqa	%xmm8, %xmm3
	movdqa	%xmm8, %xmm12
	pcmpgtd	%xmm4, %xmm3
	pand	%xmm3, %xmm11
	pxor	%xmm15, %xmm3
	por	%xmm11, %xmm3
	movdqa	%xmm9, %xmm4
	pxor	%xmm14, %xmm4
	pcmpgtd	%xmm4, %xmm8
	pand	%xmm8, %xmm9
	pxor	%xmm15, %xmm8
	por	%xmm9, %xmm8
	movdqa	%xmm7, %xmm4
	pxor	%xmm14, %xmm4
	movdqa	%xmm12, %xmm9
	pcmpgtd	%xmm4, %xmm9
	pand	%xmm9, %xmm7
	pxor	%xmm15, %xmm9
	por	%xmm7, %xmm9
	movdqa	%xmm6, %xmm4
	pxor	%xmm14, %xmm4
	movdqa	%xmm12, %xmm7
	pcmpgtd	%xmm4, %xmm7
	pand	%xmm7, %xmm6
	pxor	%xmm15, %xmm7
	por	%xmm6, %xmm7
	movdqa	%xmm5, %xmm4
	pxor	%xmm14, %xmm4
	movdqa	%xmm12, %xmm6
	pcmpgtd	%xmm4, %xmm6
	pand	%xmm6, %xmm5
	pxor	%xmm15, %xmm6
	por	%xmm5, %xmm6
	.loc	0 775 13 is_stmt 1              # ldecod_src/io_tiff.c:775:13
	pslld	$16, %xmm1
	psrad	$16, %xmm1
	pslld	$16, %xmm2
	psrad	$16, %xmm2
	packssdw	%xmm1, %xmm2
	movdqa	144(%rsp), %xmm1                # 16-byte Reload
	pandn	%xmm2, %xmm1
	movdqa	%xmm1, 144(%rsp)                # 16-byte Spill
	pslld	$16, %xmm0
	psrad	$16, %xmm0
	pslld	$16, %xmm3
	psrad	$16, %xmm3
	packssdw	%xmm0, %xmm3
	movdqa	160(%rsp), %xmm0                # 16-byte Reload
	pandn	%xmm3, %xmm0
	movdqa	%xmm0, 160(%rsp)                # 16-byte Spill
	pslld	$16, %xmm8
	psrad	$16, %xmm8
	pslld	$16, %xmm9
	psrad	$16, %xmm9
	packssdw	%xmm8, %xmm9
	movdqa	96(%rsp), %xmm0                 # 16-byte Reload
	pandn	%xmm9, %xmm0
	movdqa	%xmm0, 96(%rsp)                 # 16-byte Spill
	pslld	$16, %xmm7
	psrad	$16, %xmm7
	pslld	$16, %xmm6
	psrad	$16, %xmm6
	packssdw	%xmm7, %xmm6
	movdqa	112(%rsp), %xmm0                # 16-byte Reload
	pandn	%xmm6, %xmm0
	movdqa	%xmm0, 112(%rsp)                # 16-byte Spill
	movdqa	336(%rsp), %xmm0                # 16-byte Reload
	.loc	0 777 20                        # ldecod_src/io_tiff.c:777:20
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm3              # xmm3 = xmm0[0,2,2,3]
	movdqa	352(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm3            # xmm3 = xmm3[0],xmm0[0],xmm3[1],xmm0[1]
	movdqa	528(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm5              # xmm5 = xmm0[0,2,2,3]
	movdqa	320(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm5            # xmm5 = xmm5[0],xmm0[0],xmm5[1],xmm0[1]
	movdqa	496(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	movdqa	512(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm2            # xmm2 = xmm2[0],xmm0[0],xmm2[1],xmm0[1]
	movdqa	32(%rsp), %xmm0                 # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm7              # xmm7 = xmm0[0,2,2,3]
	movdqa	480(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm7            # xmm7 = xmm7[0],xmm0[0],xmm7[1],xmm0[1]
	movdqa	992(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm1              # xmm1 = xmm0[0,2,2,3]
	movdqa	464(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm1            # xmm1 = xmm1[0],xmm0[0],xmm1[1],xmm0[1]
	movdqa	64(%rsp), %xmm0                 # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm9              # xmm9 = xmm0[0,2,2,3]
	movdqa	976(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm10, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm9            # xmm9 = xmm9[0],xmm0[0],xmm9[1],xmm0[1]
	movdqa	960(%rsp), %xmm0                # 16-byte Reload
	pmuludq	%xmm13, %xmm0
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	movdqa	448(%rsp), %xmm4                # 16-byte Reload
	pmuludq	%xmm10, %xmm4
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	punpckldq	%xmm4, %xmm0            # xmm0 = xmm0[0],xmm4[0],xmm0[1],xmm4[1]
	pmuludq	944(%rsp), %xmm10               # 16-byte Folded Reload
	movdqa	272(%rsp), %xmm4                # 16-byte Reload
	pmuludq	%xmm13, %xmm4
	pshufd	$232, %xmm4, %xmm11             # xmm11 = xmm4[0,2,2,3]
	pshufd	$232, %xmm10, %xmm4             # xmm4 = xmm10[0,2,2,3]
	punpckldq	%xmm4, %xmm11           # xmm11 = xmm11[0],xmm4[0],xmm11[1],xmm4[1]
	movdqa	1152(%rsp), %xmm10              # 16-byte Reload
	movdqa	912(%rsp), %xmm4                # 16-byte Reload
	.loc	0 777 33 is_stmt 0              # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm4
	pshufd	$232, %xmm4, %xmm6              # xmm6 = xmm4[0,2,2,3]
	pshufd	$245, %xmm10, %xmm8             # xmm8 = xmm10[1,1,3,3]
	movdqa	928(%rsp), %xmm4                # 16-byte Reload
	pmuludq	%xmm8, %xmm4
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	punpckldq	%xmm4, %xmm6            # xmm6 = xmm6[0],xmm4[0],xmm6[1],xmm4[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm5, %xmm6
	movdqa	%xmm6, 32(%rsp)                 # 16-byte Spill
	movdqa	880(%rsp), %xmm4                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm4
	pshufd	$232, %xmm4, %xmm5              # xmm5 = xmm4[0,2,2,3]
	movdqa	896(%rsp), %xmm4                # 16-byte Reload
	pmuludq	%xmm8, %xmm4
	pshufd	$232, %xmm4, %xmm4              # xmm4 = xmm4[0,2,2,3]
	punpckldq	%xmm4, %xmm5            # xmm5 = xmm5[0],xmm4[0],xmm5[1],xmm4[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm3, %xmm5
	movdqa	%xmm5, 64(%rsp)                 # 16-byte Spill
	movdqa	864(%rsp), %xmm3                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm3
	pshufd	$232, %xmm3, %xmm13             # xmm13 = xmm3[0,2,2,3]
	movdqa	432(%rsp), %xmm3                # 16-byte Reload
	pmuludq	%xmm8, %xmm3
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm13           # xmm13 = xmm13[0],xmm3[0],xmm13[1],xmm3[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm7, %xmm13
	movdqa	832(%rsp), %xmm3                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm3
	pshufd	$232, %xmm3, %xmm7              # xmm7 = xmm3[0,2,2,3]
	movdqa	848(%rsp), %xmm3                # 16-byte Reload
	pmuludq	%xmm8, %xmm3
	pshufd	$232, %xmm3, %xmm3              # xmm3 = xmm3[0,2,2,3]
	punpckldq	%xmm3, %xmm7            # xmm7 = xmm7[0],xmm3[0],xmm7[1],xmm3[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm2, %xmm7
	movdqa	816(%rsp), %xmm2                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm2
	pshufd	$232, %xmm2, %xmm6              # xmm6 = xmm2[0,2,2,3]
	movdqa	416(%rsp), %xmm2                # 16-byte Reload
	pmuludq	%xmm8, %xmm2
	pshufd	$232, %xmm2, %xmm2              # xmm2 = xmm2[0,2,2,3]
	punpckldq	%xmm2, %xmm6            # xmm6 = xmm6[0],xmm2[0],xmm6[1],xmm2[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm9, %xmm6
	movdqa	784(%rsp), %xmm2                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm2
	pshufd	$232, %xmm2, %xmm5              # xmm5 = xmm2[0,2,2,3]
	movdqa	800(%rsp), %xmm2                # 16-byte Reload
	pmuludq	%xmm8, %xmm2
	pshufd	$232, %xmm2, %xmm2              # xmm2 = xmm2[0,2,2,3]
	punpckldq	%xmm2, %xmm5            # xmm5 = xmm5[0],xmm2[0],xmm5[1],xmm2[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm1, %xmm5
	movdqa	752(%rsp), %xmm1                # 16-byte Reload
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm10, %xmm1
	pshufd	$232, %xmm1, %xmm4              # xmm4 = xmm1[0,2,2,3]
	movdqa	400(%rsp), %xmm1                # 16-byte Reload
	pmuludq	%xmm8, %xmm1
	pshufd	$232, %xmm1, %xmm1              # xmm1 = xmm1[0,2,2,3]
	punpckldq	%xmm1, %xmm4            # xmm4 = xmm4[0],xmm1[0],xmm4[1],xmm1[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm11, %xmm4
	.loc	0 777 33                        # ldecod_src/io_tiff.c:777:33
	pmuludq	736(%rsp), %xmm8                # 16-byte Folded Reload
	movdqa	768(%rsp), %xmm1                # 16-byte Reload
	pmuludq	%xmm10, %xmm1
	pshufd	$232, %xmm1, %xmm3              # xmm3 = xmm1[0,2,2,3]
	pshufd	$232, %xmm8, %xmm2              # xmm2 = xmm8[0,2,2,3]
	punpckldq	%xmm2, %xmm3            # xmm3 = xmm3[0],xmm2[0],xmm3[1],xmm2[1]
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	paddd	%xmm0, %xmm3
	movdqa	1088(%rsp), %xmm1               # 16-byte Reload
	movdqa	704(%rsp), %xmm0                # 16-byte Reload
	.loc	0 777 46                        # ldecod_src/io_tiff.c:777:46
	pmuludq	%xmm1, %xmm0
	pshufd	$232, %xmm0, %xmm2              # xmm2 = xmm0[0,2,2,3]
	pshufd	$245, %xmm1, %xmm0              # xmm0 = xmm1[1,1,3,3]
	movdqa	720(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm2            # xmm2 = xmm2[0],xmm8[0],xmm2[1],xmm8[1]
	movdqa	256(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm15             # xmm15 = xmm8[0,2,2,3]
	movdqa	688(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm15           # xmm15 = xmm15[0],xmm8[0],xmm15[1],xmm8[1]
	movdqa	672(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm14             # xmm14 = xmm8[0,2,2,3]
	movdqa	384(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm14           # xmm14 = xmm14[0],xmm8[0],xmm14[1],xmm8[1]
	movdqa	240(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm12             # xmm12 = xmm8[0,2,2,3]
	movdqa	656(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm12           # xmm12 = xmm12[0],xmm8[0],xmm12[1],xmm8[1]
	movdqa	640(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm11             # xmm11 = xmm8[0,2,2,3]
	movdqa	368(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm11           # xmm11 = xmm11[0],xmm8[0],xmm11[1],xmm8[1]
	movdqa	224(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm9              # xmm9 = xmm8[0,2,2,3]
	movdqa	624(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm0, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	punpckldq	%xmm8, %xmm9            # xmm9 = xmm9[0],xmm8[0],xmm9[1],xmm8[1]
	movdqa	592(%rsp), %xmm8                # 16-byte Reload
	pmuludq	%xmm1, %xmm8
	pshufd	$232, %xmm8, %xmm8              # xmm8 = xmm8[0,2,2,3]
	movdqa	608(%rsp), %xmm10               # 16-byte Reload
	pmuludq	%xmm0, %xmm10
	pshufd	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,2,2,3]
	punpckldq	%xmm10, %xmm8           # xmm8 = xmm8[0],xmm10[0],xmm8[1],xmm10[1]
	pmuludq	576(%rsp), %xmm0                # 16-byte Folded Reload
	movdqa	304(%rsp), %xmm10               # 16-byte Reload
	pmuludq	%xmm1, %xmm10
	pshufd	$232, %xmm10, %xmm10            # xmm10 = xmm10[0,2,2,3]
	pshufd	$232, %xmm0, %xmm0              # xmm0 = xmm0[0,2,2,3]
	punpckldq	%xmm0, %xmm10           # xmm10 = xmm10[0],xmm0[0],xmm10[1],xmm0[1]
	movdqa	.LCPI4_12(%rip), %xmm0          # xmm0 = [536879104,536879104,536879104,536879104]
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm2
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	32(%rsp), %xmm2                 # 16-byte Folded Reload
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm15
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	64(%rsp), %xmm15                # 16-byte Folded Reload
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm14
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm13, %xmm14
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm12
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm7, %xmm12
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm11
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm6, %xmm11
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm9
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm5, %xmm9
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm8
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm4, %xmm8
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	paddd	%xmm0, %xmm10
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	paddd	%xmm3, %xmm10
	.loc	0 777 64                        # ldecod_src/io_tiff.c:777:64
	psrad	$14, %xmm2
	psrad	$14, %xmm15
.Ltmp562:
	.loc	0 778 16 is_stmt 1              # ldecod_src/io_tiff.c:778:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm2, %xmm0
	pxor	%xmm7, %xmm7
	pcmpgtd	%xmm15, %xmm7
	packssdw	%xmm0, %xmm7
.Ltmp563:
	.loc	0 777 64                        # ldecod_src/io_tiff.c:777:64
	psrad	$14, %xmm14
	psrad	$14, %xmm12
.Ltmp564:
	.loc	0 778 16                        # ldecod_src/io_tiff.c:778:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm14, %xmm0
	pxor	%xmm6, %xmm6
	pcmpgtd	%xmm12, %xmm6
	packssdw	%xmm0, %xmm6
.Ltmp565:
	.loc	0 777 64                        # ldecod_src/io_tiff.c:777:64
	psrad	$14, %xmm11
	psrad	$14, %xmm9
.Ltmp566:
	.loc	0 778 16                        # ldecod_src/io_tiff.c:778:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm11, %xmm0
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm9, %xmm1
	packssdw	%xmm0, %xmm1
	movdqa	%xmm1, 64(%rsp)                 # 16-byte Spill
.Ltmp567:
	.loc	0 777 64                        # ldecod_src/io_tiff.c:777:64
	psrad	$14, %xmm8
	psrad	$14, %xmm10
.Ltmp568:
	.loc	0 778 16                        # ldecod_src/io_tiff.c:778:16
	pxor	%xmm0, %xmm0
	pcmpgtd	%xmm8, %xmm0
	pxor	%xmm1, %xmm1
	pcmpgtd	%xmm10, %xmm1
	packssdw	%xmm0, %xmm1
	movdqa	%xmm1, 32(%rsp)                 # 16-byte Spill
.Ltmp569:
	.loc	0 778 11 is_stmt 0              # ldecod_src/io_tiff.c:778:11
	movdqa	%xmm2, %xmm0
	movdqa	.LCPI4_10(%rip), %xmm5          # xmm5 = [2147483648,2147483648,2147483648,2147483648]
	pxor	%xmm5, %xmm0
	movdqa	.LCPI4_11(%rip), %xmm4          # xmm4 = [2147549183,2147549183,2147549183,2147549183]
	movdqa	%xmm4, %xmm1
	pcmpgtd	%xmm0, %xmm1
	pand	%xmm1, %xmm2
	pcmpeqd	%xmm13, %xmm13
	pxor	%xmm13, %xmm1
	por	%xmm2, %xmm1
	movdqa	%xmm15, %xmm2
	pxor	%xmm5, %xmm2
	movdqa	%xmm4, %xmm0
	pcmpgtd	%xmm2, %xmm0
	pand	%xmm0, %xmm15
	pxor	%xmm13, %xmm0
	por	%xmm15, %xmm0
	movdqa	%xmm14, %xmm3
	pxor	%xmm5, %xmm3
	movdqa	%xmm4, %xmm2
	pcmpgtd	%xmm3, %xmm2
	pand	%xmm2, %xmm14
	pxor	%xmm13, %xmm2
	pcmpeqd	%xmm15, %xmm15
	por	%xmm14, %xmm2
	movdqa	%xmm12, %xmm13
	pxor	%xmm5, %xmm13
	movdqa	%xmm4, %xmm3
	pcmpgtd	%xmm13, %xmm3
	pand	%xmm3, %xmm12
	pxor	%xmm15, %xmm3
	por	%xmm12, %xmm3
	movdqa	%xmm11, %xmm13
	pxor	%xmm5, %xmm13
	movdqa	%xmm4, %xmm12
	pcmpgtd	%xmm13, %xmm12
	pand	%xmm12, %xmm11
	pxor	%xmm15, %xmm12
	por	%xmm11, %xmm12
	movdqa	%xmm9, %xmm13
	pxor	%xmm5, %xmm13
	movdqa	%xmm4, %xmm11
	pcmpgtd	%xmm13, %xmm11
	pand	%xmm11, %xmm9
	pxor	%xmm15, %xmm11
	por	%xmm9, %xmm11
	movdqa	%xmm8, %xmm13
	pxor	%xmm5, %xmm13
	movdqa	%xmm4, %xmm9
	pcmpgtd	%xmm13, %xmm9
	pand	%xmm9, %xmm8
	pxor	%xmm15, %xmm9
	por	%xmm8, %xmm9
	movdqa	%xmm10, %xmm13
	pxor	%xmm5, %xmm13
	pcmpgtd	%xmm13, %xmm4
	pand	%xmm4, %xmm10
	pxor	%xmm15, %xmm4
	por	%xmm10, %xmm4
	.loc	0 782 13 is_stmt 1              # ldecod_src/io_tiff.c:782:13
	pslld	$16, %xmm1
	psrad	$16, %xmm1
	pslld	$16, %xmm0
	psrad	$16, %xmm0
	packssdw	%xmm1, %xmm0
	pandn	%xmm0, %xmm7
	pslld	$16, %xmm2
	psrad	$16, %xmm2
	pslld	$16, %xmm3
	psrad	$16, %xmm3
	packssdw	%xmm2, %xmm3
	pandn	%xmm3, %xmm6
	pslld	$16, %xmm12
	psrad	$16, %xmm12
	pslld	$16, %xmm11
	psrad	$16, %xmm11
	packssdw	%xmm12, %xmm11
	movdqa	64(%rsp), %xmm10                # 16-byte Reload
	pandn	%xmm11, %xmm10
	pslld	$16, %xmm9
	psrad	$16, %xmm9
	pslld	$16, %xmm4
	psrad	$16, %xmm4
	packssdw	%xmm9, %xmm4
	movdqa	32(%rsp), %xmm5                 # 16-byte Reload
	pandn	%xmm4, %xmm5
	movdqa	544(%rsp), %xmm3                # 16-byte Reload
	.loc	0 782 11 is_stmt 0              # ldecod_src/io_tiff.c:782:11
	pshufd	$165, %xmm3, %xmm0              # xmm0 = xmm3[1,1,2,2]
	movdqa	.LCPI4_13(%rip), %xmm8          # xmm8 = [65535,65535,0,65535,65535,0,65535,65535]
	pand	%xmm8, %xmm0
	movdqa	144(%rsp), %xmm4                # 16-byte Reload
	pshuflw	$255, %xmm4, %xmm1              # xmm1 = xmm4[3,3,3,3,4,5,6,7]
	pshufhw	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,1,2,3,4,4,4,4]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	movdqa	.LCPI4_14(%rip), %xmm9          # xmm9 = [0,65535,65535,0,65535,65535,0,65535]
	pand	%xmm9, %xmm2
	pshufd	$165, %xmm7, %xmm1              # xmm1 = xmm7[1,1,2,2]
	movdqa	%xmm9, %xmm0
	pandn	%xmm1, %xmm0
	por	%xmm2, %xmm0
	pshufd	$0, %xmm7, %xmm1                # xmm1 = xmm7[0,0,0,0]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	movdqa	%xmm3, %xmm1
	punpcklwd	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1],xmm1[2],xmm4[2],xmm1[3],xmm4[3]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshuflw	$164, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,2,4,5,6,7]
	pshufhw	$71, %xmm1, %xmm1               # xmm1 = xmm1[0,1,2,3,7,5,4,5]
	pand	%xmm8, %xmm1
	por	%xmm1, %xmm2
	punpckhwd	%xmm3, %xmm4            # xmm4 = xmm4[4],xmm3[4],xmm4[5],xmm3[5],xmm4[6],xmm3[6],xmm4[7],xmm3[7]
	pshufd	$250, %xmm7, %xmm1              # xmm1 = xmm7[2,2,3,3]
	movdqa	.LCPI4_15(%rip), %xmm7          # xmm7 = [65535,0,65535,65535,0,65535,65535,0]
	movdqa	%xmm7, %xmm3
	pandn	%xmm1, %xmm3
	pshufd	$246, %xmm4, %xmm1              # xmm1 = xmm4[2,1,3,3]
	pshuflw	$22, %xmm1, %xmm1               # xmm1 = xmm1[2,1,1,0,4,5,6,7]
	pand	%xmm7, %xmm1
	por	%xmm1, %xmm3
	movdqu	%xmm3, 32(%r9)
	movdqu	%xmm2, (%r9)
	movdqu	%xmm0, 16(%r9)
	movdqa	560(%rsp), %xmm3                # 16-byte Reload
	pshufd	$165, %xmm3, %xmm0              # xmm0 = xmm3[1,1,2,2]
	pand	%xmm8, %xmm0
	movdqa	160(%rsp), %xmm4                # 16-byte Reload
	pshuflw	$255, %xmm4, %xmm1              # xmm1 = xmm4[3,3,3,3,4,5,6,7]
	pshufhw	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,1,2,3,4,4,4,4]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pand	%xmm9, %xmm2
	pshufd	$165, %xmm6, %xmm1              # xmm1 = xmm6[1,1,2,2]
	movdqa	%xmm9, %xmm0
	pandn	%xmm1, %xmm0
	por	%xmm2, %xmm0
	pshufd	$0, %xmm6, %xmm1                # xmm1 = xmm6[0,0,0,0]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	movdqa	%xmm3, %xmm1
	punpcklwd	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1],xmm1[2],xmm4[2],xmm1[3],xmm4[3]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshuflw	$164, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,2,4,5,6,7]
	pshufhw	$71, %xmm1, %xmm1               # xmm1 = xmm1[0,1,2,3,7,5,4,5]
	pand	%xmm8, %xmm1
	por	%xmm1, %xmm2
	punpckhwd	%xmm3, %xmm4            # xmm4 = xmm4[4],xmm3[4],xmm4[5],xmm3[5],xmm4[6],xmm3[6],xmm4[7],xmm3[7]
	pshufd	$250, %xmm6, %xmm1              # xmm1 = xmm6[2,2,3,3]
	movdqa	%xmm7, %xmm3
	pandn	%xmm1, %xmm3
	pshufd	$246, %xmm4, %xmm1              # xmm1 = xmm4[2,1,3,3]
	pshuflw	$22, %xmm1, %xmm1               # xmm1 = xmm1[2,1,1,0,4,5,6,7]
	pand	%xmm7, %xmm1
	por	%xmm1, %xmm3
	movdqu	%xmm3, 80(%r9)
	movdqu	%xmm2, 48(%r9)
	movdqu	%xmm0, 64(%r9)
	movdqa	176(%rsp), %xmm3                # 16-byte Reload
	pshufd	$165, %xmm3, %xmm0              # xmm0 = xmm3[1,1,2,2]
	pand	%xmm8, %xmm0
	movdqa	96(%rsp), %xmm4                 # 16-byte Reload
	pshuflw	$255, %xmm4, %xmm1              # xmm1 = xmm4[3,3,3,3,4,5,6,7]
	pshufhw	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,1,2,3,4,4,4,4]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pand	%xmm9, %xmm2
	pshufd	$165, %xmm10, %xmm1             # xmm1 = xmm10[1,1,2,2]
	movdqa	%xmm9, %xmm0
	pandn	%xmm1, %xmm0
	por	%xmm2, %xmm0
	pshufd	$0, %xmm10, %xmm1               # xmm1 = xmm10[0,0,0,0]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	movdqa	%xmm3, %xmm1
	punpcklwd	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1],xmm1[2],xmm4[2],xmm1[3],xmm4[3]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshuflw	$164, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,2,4,5,6,7]
	pshufhw	$71, %xmm1, %xmm1               # xmm1 = xmm1[0,1,2,3,7,5,4,5]
	pand	%xmm8, %xmm1
	por	%xmm1, %xmm2
	punpckhwd	%xmm3, %xmm4            # xmm4 = xmm4[4],xmm3[4],xmm4[5],xmm3[5],xmm4[6],xmm3[6],xmm4[7],xmm3[7]
	pshufd	$250, %xmm10, %xmm1             # xmm1 = xmm10[2,2,3,3]
	movdqa	%xmm7, %xmm3
	pandn	%xmm1, %xmm3
	pshufd	$246, %xmm4, %xmm1              # xmm1 = xmm4[2,1,3,3]
	pshuflw	$22, %xmm1, %xmm1               # xmm1 = xmm1[2,1,1,0,4,5,6,7]
	pand	%xmm7, %xmm1
	por	%xmm1, %xmm3
	movdqu	%xmm3, 128(%r9)
	movdqu	%xmm2, 96(%r9)
	movdqu	%xmm0, 112(%r9)
	movdqa	192(%rsp), %xmm3                # 16-byte Reload
	pshufd	$165, %xmm3, %xmm0              # xmm0 = xmm3[1,1,2,2]
	pand	%xmm8, %xmm0
	movdqa	112(%rsp), %xmm4                # 16-byte Reload
	pshuflw	$255, %xmm4, %xmm1              # xmm1 = xmm4[3,3,3,3,4,5,6,7]
	pshufhw	$0, %xmm1, %xmm1                # xmm1 = xmm1[0,1,2,3,4,4,4,4]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	por	%xmm0, %xmm2
	pand	%xmm9, %xmm2
	pshufd	$165, %xmm5, %xmm1              # xmm1 = xmm5[1,1,2,2]
	movdqa	%xmm9, %xmm0
	pandn	%xmm1, %xmm0
	por	%xmm2, %xmm0
	pshufd	$0, %xmm5, %xmm1                # xmm1 = xmm5[0,0,0,0]
	movdqa	%xmm8, %xmm2
	pandn	%xmm1, %xmm2
	movdqa	%xmm3, %xmm1
	punpcklwd	%xmm4, %xmm1            # xmm1 = xmm1[0],xmm4[0],xmm1[1],xmm4[1],xmm1[2],xmm4[2],xmm1[3],xmm4[3]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshuflw	$164, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,2,4,5,6,7]
	pshufhw	$71, %xmm1, %xmm1               # xmm1 = xmm1[0,1,2,3,7,5,4,5]
	pand	%xmm8, %xmm1
	por	%xmm1, %xmm2
	punpckhwd	%xmm3, %xmm4            # xmm4 = xmm4[4],xmm3[4],xmm4[5],xmm3[5],xmm4[6],xmm3[6],xmm4[7],xmm3[7]
	pshufd	$250, %xmm5, %xmm1              # xmm1 = xmm5[2,2,3,3]
	movdqa	%xmm7, %xmm3
	pandn	%xmm1, %xmm3
	pshufd	$246, %xmm4, %xmm1              # xmm1 = xmm4[2,1,3,3]
	pshuflw	$22, %xmm1, %xmm1               # xmm1 = xmm1[2,1,1,0,4,5,6,7]
	pand	%xmm7, %xmm1
	por	%xmm1, %xmm3
	movdqu	%xmm3, 176(%r9)
	movdqu	%xmm2, 144(%r9)
	movdqu	%xmm0, 160(%r9)
	addq	$192, %r9
	addq	$-32, %r10
	jne	.LBB4_112
.Ltmp570:
# %bb.113:                              # %middle.block462
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 755 5 is_stmt 1               # ldecod_src/io_tiff.c:755:5
	cmpl	%r8d, %edi
	movapd	1072(%rsp), %xmm10              # 16-byte Reload
	movapd	1056(%rsp), %xmm11              # 16-byte Reload
	movapd	1040(%rsp), %xmm12              # 16-byte Reload
	movapd	1024(%rsp), %xmm13              # 16-byte Reload
	movdqa	1008(%rsp), %xmm1               # 16-byte Reload
	jne	.LBB4_128
.Ltmp571:
.LBB4_114:                              # %RGB_YUV_rgb_to_yuv.exit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movq	136(%rsp), %r15                 # 8-byte Reload
	.loc	0 1093 21 is_stmt 1             # ldecod_src/io_tiff.c:1093:21
	movl	(%r15), %edx
	.loc	0 1093 5 is_stmt 0              # ldecod_src/io_tiff.c:1093:5
	cmpl	$3, %edx
	je	.LBB4_120
.Ltmp572:
# %bb.115:                              # %RGB_YUV_rgb_to_yuv.exit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	cmpl	$2, %edx
	movl	12(%rsp), %ecx                  # 4-byte Reload
	movq	208(%rsp), %r14                 # 8-byte Reload
	je	.LBB4_121
.Ltmp573:
# %bb.116:                              # %RGB_YUV_rgb_to_yuv.exit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	cmpl	$1, %edx
	jne	.LBB4_202
.Ltmp574:
# %bb.117:                              # %sw.bb
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 1097 40 is_stmt 1             # ldecod_src/io_tiff.c:1097:40
	movl	%ecx, %eax
	shrl	$31, %eax
	addl	%eax, %ecx
	sarl	%ecx
.Ltmp575:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $ecx
	.loc	0 0 40 is_stmt 0                # ldecod_src/io_tiff.c:0:40
	movl	%ecx, 12(%rsp)                  # 4-byte Spill
.Ltmp576:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 1098 38 is_stmt 1             # ldecod_src/io_tiff.c:1098:38
	movslq	%ecx, %rdi
	.loc	0 1098 50 is_stmt 0             # ldecod_src/io_tiff.c:1098:50
	addq	%rdi, %rdi
	.loc	0 1098 30                       # ldecod_src/io_tiff.c:1098:30
	callq	malloc@PLT
.Ltmp577:
	movq	%rax, %rbp
.Ltmp578:
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	.loc	0 0 30                          # ldecod_src/io_tiff.c:0:30
	movq	24(%rsp), %rcx                  # 8-byte Reload
	.loc	0 1100 32 is_stmt 1             # ldecod_src/io_tiff.c:1100:32
	leal	3(%rcx), %eax
.Ltmp579:
	.loc	0 0 0 is_stmt 0                 # ldecod_src/io_tiff.c:0:0
	testl	%ecx, %ecx
.Ltmp580:
	.loc	0 1100 32                       # ldecod_src/io_tiff.c:1100:32
	cmovnsl	%ecx, %eax
	sarl	$2, %eax
	.loc	0 1099 15 is_stmt 1             # ldecod_src/io_tiff.c:1099:15
	movslq	%ecx, %rdi
	leaq	(,%rdi,2), %rdx
	addq	%rbp, %rdx
.Ltmp581:
	#DEBUG_VALUE: ReadTIFFImage:up <- $rdx
	.loc	0 1100 15                       # ldecod_src/io_tiff.c:1100:15
	cltq
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
.Ltmp582:
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	leaq	(%rdx,%rax,2), %rax
.Ltmp583:
	#DEBUG_VALUE: ReadTIFFImage:vp <- $rax
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 15 is_stmt 0                # ldecod_src/io_tiff.c:0:15
	movq	%rax, 16(%rsp)                  # 8-byte Spill
.Ltmp584:
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	testl	%ecx, %ecx
	movq	56(%rsp), %r9                   # 8-byte Reload
.Ltmp585:
	.loc	0 1103 7 is_stmt 1              # ldecod_src/io_tiff.c:1103:7
	jle	.LBB4_157
.Ltmp586:
# %bb.118:                              # %for.body.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1103 19 is_stmt 0             # ldecod_src/io_tiff.c:1103:19
	movl	%ecx, %eax
.Ltmp587:
	.loc	0 1103 7                        # ldecod_src/io_tiff.c:1103:7
	cmpl	$33, %ecx
	jb	.LBB4_119
.Ltmp588:
# %bb.143:                              # %vector.memcheck554
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	leaq	(%rax,%rax,2), %rcx
	leaq	(%r9,%rcx,2), %rcx
	addq	$-4, %rcx
	cmpq	%rcx, %rbp
	jae	.LBB4_150
.Ltmp589:
# %bb.144:                              # %vector.memcheck554
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	leaq	(,%rax,2), %rcx
	addq	%rbp, %rcx
	.loc	0 1103 7                        # ldecod_src/io_tiff.c:1103:7
	cmpq	%rcx, %r9
	jae	.LBB4_150
.Ltmp590:
.LBB4_119:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	xorl	%ecx, %ecx
	jmp	.LBB4_153
.Ltmp591:
.LBB4_120:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	xorl	%edi, %edi
	movq	56(%rsp), %rbp                  # 8-byte Reload
	movl	12(%rsp), %r8d                  # 4-byte Reload
	movq	208(%rsp), %r14                 # 8-byte Reload
	.loc	0 1093 5 is_stmt 1              # ldecod_src/io_tiff.c:1093:5
	jmp	.LBB4_170
.Ltmp592:
.LBB4_121:                              # %sw.bb86
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	.loc	0 0 5 is_stmt 0                 # ldecod_src/io_tiff.c:0:5
	movq	24(%rsp), %r14                  # 8-byte Reload
.Ltmp593:
	.loc	0 1120 36 is_stmt 1             # ldecod_src/io_tiff.c:1120:36
	leal	(%r14,%r14), %eax
.Ltmp594:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	.loc	0 0 36 is_stmt 0                # ldecod_src/io_tiff.c:0:36
	movl	%eax, 12(%rsp)                  # 4-byte Spill
.Ltmp595:
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	0 1121 38 is_stmt 1             # ldecod_src/io_tiff.c:1121:38
	movslq	%eax, %rdi
	.loc	0 1121 50 is_stmt 0             # ldecod_src/io_tiff.c:1121:50
	addq	%rdi, %rdi
	.loc	0 1121 30                       # ldecod_src/io_tiff.c:1121:30
	callq	malloc@PLT
.Ltmp596:
	.loc	0 0 30                          # ldecod_src/io_tiff.c:0:30
	movq	%r14, %r9
	.loc	0 1121 30                       # ldecod_src/io_tiff.c:1121:30
	movq	%rax, %rbp
.Ltmp597:
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	testl	%r9d, %r9d
.Ltmp598:
	#DEBUG_VALUE: ReadTIFFImage:up <- undef
	#DEBUG_VALUE: ReadTIFFImage:vp <- undef
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	movq	56(%rsp), %r8                   # 8-byte Reload
	movq	216(%rsp), %r14                 # 8-byte Reload
	movq	88(%rsp), %r15                  # 8-byte Reload
.Ltmp599:
	.loc	0 1126 7 is_stmt 1              # ldecod_src/io_tiff.c:1126:7
	jle	.LBB4_165
.Ltmp600:
# %bb.122:                              # %for.body103.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1126 19 is_stmt 0             # ldecod_src/io_tiff.c:1126:19
	movl	%r9d, %eax
.Ltmp601:
	.loc	0 1126 7                        # ldecod_src/io_tiff.c:1126:7
	cmpl	$32, %r9d
	jbe	.LBB4_124
.Ltmp602:
# %bb.123:                              # %vector.memcheck523
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	leaq	(,%rax,2), %rcx
	addq	%rbp, %rcx
	leaq	(%rax,%rax,2), %rdx
	leaq	(%r8,%rdx,2), %rdx
	addq	$-4, %rdx
	cmpq	%rdx, %rbp
	setb	%dl
	cmpq	%rcx, %r8
	setb	%cl
	testb	%cl, %dl
	je	.LBB4_158
.Ltmp603:
.LBB4_124:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	xorl	%ecx, %ecx
	jmp	.LBB4_161
.Ltmp604:
.LBB4_125:                              # %if.then36
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1069 14 is_stmt 1             # ldecod_src/io_tiff.c:1069:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	.loc	0 1069 5 is_stmt 0              # ldecod_src/io_tiff.c:1069:5
	movl	$.L.str.4, %esi
	movl	%ebx, %ecx
	jmp	.LBB4_147
.Ltmp605:
.LBB4_126:                              # %if.then40
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1074 14 is_stmt 1             # ldecod_src/io_tiff.c:1074:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	.loc	0 1074 5 is_stmt 0              # ldecod_src/io_tiff.c:1074:5
	movl	$.L.str.5, %esi
	movl	%r12d, %ecx
	jmp	.LBB4_147
.Ltmp606:
.LBB4_127:                              # %Error.thread.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- $r15
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: readTiff:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:path <- [DW_OP_plus_uconst 1280, DW_OP_stack_value] $rsp
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 0 8] 1
	#DEBUG_VALUE: readFileIntoMemory:endian <- [DW_OP_LLVM_fragment 8 24] 0
	#DEBUG_VALUE: readFileIntoMemory:machineLittleEndian <- 1
	#DEBUG_VALUE: readFileIntoMemory:fd <- $ebp
	#DEBUG_VALUE: readFileIntoMemory:cnt <- $r12
	#DEBUG_VALUE: readFileIntoMemory:result <- $rbx
	.loc	0 507 16 is_stmt 1              # ldecod_src/io_tiff.c:507:16
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rcx
	.loc	0 507 7 is_stmt 0               # ldecod_src/io_tiff.c:507:7
	movl	$.L.str.10, %edi
	movl	$43, %esi
	movl	$1, %edx
	callq	fwrite@PLT
.Ltmp607:
	.loc	0 508 16 is_stmt 1              # ldecod_src/io_tiff.c:508:16
	movq	ReadTIFFImage.t+8(%rip), %rdi
	.loc	0 508 7 is_stmt 0               # ldecod_src/io_tiff.c:508:7
	jmp	.LBB4_102
.Ltmp608:
.LBB4_128:                              # %for.body48.i.preheader629
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 544 32] $r11d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_plus_uconst 88, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_plus_uconst 128, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movdqa	.LCPI4_16(%rip), %xmm0          # xmm0 = [536879104,u,u,u]
	punpckldq	%xmm1, %xmm0            # xmm0 = xmm0[0],xmm1[0],xmm0[1],xmm1[1]
	movq	24(%rsp), %rax                  # 8-byte Reload
                                        # kill: def $eax killed $eax killed $rax
.Ltmp609:
	.loc	0 755 5 is_stmt 1               # ldecod_src/io_tiff.c:755:5
	subl	%edi, %eax
	xorl	%edi, %edi
	pshufd	$245, %xmm10, %xmm1             # xmm1 = xmm10[1,1,3,3]
	pshufd	$245, %xmm12, %xmm2             # xmm2 = xmm12[1,1,3,3]
	pshufd	$245, %xmm11, %xmm3             # xmm3 = xmm11[1,1,3,3]
	pshufd	$245, %xmm13, %xmm4             # xmm4 = xmm13[1,1,3,3]
	jmp	.LBB4_130
.Ltmp610:
.LBB4_129:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 128 32] $r8d
	.loc	0 782 11                        # ldecod_src/io_tiff.c:782:11
	movw	%r9w, (%rdx,%rdi)
.Ltmp611:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 1, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] undef, undef
	.loc	0 755 17                        # ldecod_src/io_tiff.c:755:17
	addq	$6, %rdi
.Ltmp612:
	decl	%eax
	je	.LBB4_114
.Ltmp613:
.LBB4_130:                              # %for.body48.i
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:i <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] undef, undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	.loc	0 757 20                        # ldecod_src/io_tiff.c:757:20
	movzwl	(%rcx,%rdi), %r8d
.Ltmp614:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 758 20                        # ldecod_src/io_tiff.c:758:20
	movzwl	(%rsi,%rdi), %r9d
.Ltmp615:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 192 32] undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 224 32] undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	.loc	0 758 14 is_stmt 0              # ldecod_src/io_tiff.c:758:14
	movd	%r9d, %xmm5
	movdqa	%xmm5, %xmm6
	pinsrw	$2, (%rdx,%rdi), %xmm6
	.loc	0 763 33 is_stmt 1              # ldecod_src/io_tiff.c:763:33
	movdqa	%xmm5, %xmm7
	pmuludq	%xmm10, %xmm7
	pshufd	$245, %xmm6, %xmm6              # xmm6 = xmm6[1,1,3,3]
	movdqa	%xmm6, %xmm8
	pmuludq	%xmm1, %xmm8
	punpckldq	%xmm8, %xmm7            # xmm7 = xmm7[0],xmm8[0],xmm7[1],xmm8[1]
.Ltmp616:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 64 32] undef
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	.loc	0 770 33                        # ldecod_src/io_tiff.c:770:33
	movdqa	%xmm5, %xmm8
	pmuludq	%xmm12, %xmm8
	movdqa	%xmm6, %xmm9
	pmuludq	%xmm2, %xmm9
	punpckldq	%xmm9, %xmm8            # xmm8 = xmm8[0],xmm9[0],xmm8[1],xmm9[1]
	.loc	0 770 39 is_stmt 0              # ldecod_src/io_tiff.c:770:39
	punpckldq	%xmm7, %xmm8            # xmm8 = xmm8[0],xmm7[0],xmm8[1],xmm7[1]
	.loc	0 770 20                        # ldecod_src/io_tiff.c:770:20
	movd	%r8d, %xmm7
	movdqa	%xmm7, %xmm9
	pmuludq	%xmm3, %xmm9
	pshufd	$232, %xmm9, %xmm9              # xmm9 = xmm9[0,2,2,3]
	pmuludq	%xmm11, %xmm7
	pshufd	$232, %xmm7, %xmm7              # xmm7 = xmm7[0,2,2,3]
	punpckldq	%xmm9, %xmm7            # xmm7 = xmm7[0],xmm9[0],xmm7[1],xmm9[1]
	.loc	0 770 26                        # ldecod_src/io_tiff.c:770:26
	paddd	%xmm0, %xmm7
	.loc	0 770 39                        # ldecod_src/io_tiff.c:770:39
	paddd	%xmm8, %xmm7
	.loc	0 770 52                        # ldecod_src/io_tiff.c:770:52
	pshufd	$238, %xmm8, %xmm8              # xmm8 = xmm8[2,3,2,3]
	paddd	%xmm7, %xmm8
	.loc	0 770 64                        # ldecod_src/io_tiff.c:770:64
	movdqa	%xmm8, %xmm7
	psrad	$14, %xmm7
	.loc	0 764 11 is_stmt 1              # ldecod_src/io_tiff.c:764:11
	pshufd	$85, %xmm7, %xmm9               # xmm9 = xmm7[1,1,1,1]
	movd	%xmm9, %r11d
	cmpl	$65535, %r11d                   # imm = 0xFFFF
	jb	.LBB4_132
.Ltmp617:
# %bb.131:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movl	$65535, %r11d                   # imm = 0xFFFF
.Ltmp618:
.LBB4_132:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 96 32] undef
	.loc	0 771 16 is_stmt 1              # ldecod_src/io_tiff.c:771:16
	pshufd	$80, %xmm8, %xmm8               # xmm8 = xmm8[0,0,1,1]
	movmskpd	%xmm8, %r10d
	xorl	%r9d, %r9d
	movl	$0, %ebx
.Ltmp619:
	.loc	0 768 13                        # ldecod_src/io_tiff.c:768:13
	testb	$2, %r10b
	jne	.LBB4_133
.Ltmp620:
# %bb.140:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 0 13 is_stmt 0                # ldecod_src/io_tiff.c:0:13
	movl	%r11d, %ebx
	.loc	0 768 11                        # ldecod_src/io_tiff.c:768:11
	movw	%bx, (%rcx,%rdi)
	.loc	0 771 11 is_stmt 1              # ldecod_src/io_tiff.c:771:11
	movd	%xmm7, %r11d
	cmpl	$65535, %r11d                   # imm = 0xFFFF
	jae	.LBB4_141
.Ltmp621:
.LBB4_134:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movl	$0, %ebx
	.loc	0 775 13 is_stmt 1              # ldecod_src/io_tiff.c:775:13
	testb	$1, %r10b
	jne	.LBB4_136
.Ltmp622:
.LBB4_135:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 0 13 is_stmt 0                # ldecod_src/io_tiff.c:0:13
	movl	%r11d, %ebx
.Ltmp623:
.LBB4_136:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 775 11                        # ldecod_src/io_tiff.c:775:11
	movw	%bx, (%rsi,%rdi)
.Ltmp624:
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	.loc	0 777 20 is_stmt 1              # ldecod_src/io_tiff.c:777:20
	imull	%ebp, %r8d
.Ltmp625:
	.loc	0 777 33 is_stmt 0              # ldecod_src/io_tiff.c:777:33
	pmuludq	%xmm4, %xmm6
	pmuludq	%xmm13, %xmm5
	.loc	0 777 39                        # ldecod_src/io_tiff.c:777:39
	movd	%xmm5, %r10d
	.loc	0 777 26                        # ldecod_src/io_tiff.c:777:26
	addl	%r8d, %r10d
	.loc	0 777 52                        # ldecod_src/io_tiff.c:777:52
	movd	%xmm6, %r8d
	addl	%r10d, %r8d
	addl	$536879104, %r8d                # imm = 0x20002000
	.loc	0 777 64                        # ldecod_src/io_tiff.c:777:64
	sarl	$14, %r8d
.Ltmp626:
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 128 32] $r8d
	.loc	0 0 64                          # ldecod_src/io_tiff.c:0:64
	movl	%r8d, %r10d
	.loc	0 778 11 is_stmt 1              # ldecod_src/io_tiff.c:778:11
	cmpl	$65535, %r8d                    # imm = 0xFFFF
	jb	.LBB4_138
.Ltmp627:
# %bb.137:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 128 32] $r8d
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movl	$65535, %r10d                   # imm = 0xFFFF
.Ltmp628:
.LBB4_138:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 128 32] $r8d
	.loc	0 778 16                        # ldecod_src/io_tiff.c:778:16
	testl	%r8d, %r8d
.Ltmp629:
	.loc	0 782 13 is_stmt 1              # ldecod_src/io_tiff.c:782:13
	js	.LBB4_129
.Ltmp630:
# %bb.139:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 128 32] $r8d
	.loc	0 0 13 is_stmt 0                # ldecod_src/io_tiff.c:0:13
	movl	%r10d, %r9d
	jmp	.LBB4_129
.Ltmp631:
.LBB4_133:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 768 11 is_stmt 1              # ldecod_src/io_tiff.c:768:11
	movw	%bx, (%rcx,%rdi)
	.loc	0 771 11                        # ldecod_src/io_tiff.c:771:11
	movd	%xmm7, %r11d
	cmpl	$65535, %r11d                   # imm = 0xFFFF
	jb	.LBB4_134
.Ltmp632:
.LBB4_141:                              # %for.body48.i
                                        #   in Loop: Header=BB4_130 Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:bp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:vp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rdx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:gp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:rgb_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yp <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_consts 6, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_plus, DW_OP_stack_value] $rdi, $rcx
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:up <- [DW_OP_LLVM_arg 0, DW_OP_consts 6, DW_OP_div, DW_OP_consts 6, DW_OP_mul, DW_OP_LLVM_arg 1, DW_OP_plus, DW_OP_stack_value] $rdi, $rsi
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:yuv_stride <- 3
	#DEBUG_VALUE: RGB_YUV_rgb_to_yuv:count <- [DW_OP_plus_uconst 24, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 160 32] $r8d
	.loc	0 0 11 is_stmt 0                # ldecod_src/io_tiff.c:0:11
	movl	$65535, %r11d                   # imm = 0xFFFF
	movl	$0, %ebx
	.loc	0 775 13 is_stmt 1              # ldecod_src/io_tiff.c:775:13
	testb	$1, %r10b
	je	.LBB4_135
	jmp	.LBB4_136
.Ltmp633:
.LBB4_142:                              # %if.then47
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 1079 14                       # ldecod_src/io_tiff.c:1079:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	.loc	0 1079 5 is_stmt 0              # ldecod_src/io_tiff.c:1079:5
	movl	$.L.str.6, %esi
	jmp	.LBB4_203
.Ltmp634:
.LBB4_146:                              # %if.then93.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 704 64] $xmm2
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: RGB_YUV_initialize:i <- $ecx
	.loc	0 700 14 is_stmt 1              # ldecod_src/io_tiff.c:700:14
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp635:
	movq	(%rax), %rdi
	.loc	0 700 5 is_stmt 0               # ldecod_src/io_tiff.c:700:5
	movl	$.L.str.19, %esi
.Ltmp636:
                                        # kill: def $ecx killed $ecx killed $rcx
.LBB4_147:                              # %if.end173
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	xorl	%eax, %eax
	callq	fprintf@PLT
.Ltmp637:
	.loc	0 1070 5 is_stmt 1              # ldecod_src/io_tiff.c:1070:5
	jmp	.LBB4_106
.Ltmp638:
.LBB4_148:                              # %if.then107.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 705 14                        # ldecod_src/io_tiff.c:705:14
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp639:
	movq	(%rax), %rdi
	.loc	0 705 5 is_stmt 0               # ldecod_src/io_tiff.c:705:5
	movl	$.L.str.20, %esi
	jmp	.LBB4_203
.Ltmp640:
.LBB4_149:                              # %if.then121.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:stdRange <- $eax
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 32 32] $eax
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: RGB_YUV_initialize:pixScale <- 65536
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 710 14 is_stmt 1              # ldecod_src/io_tiff.c:710:14
	movq	stderr@GOTPCREL(%rip), %rax
.Ltmp641:
	movq	(%rax), %rdi
	.loc	0 710 5 is_stmt 0               # ldecod_src/io_tiff.c:710:5
	movl	$.L.str.21, %esi
	jmp	.LBB4_203
.Ltmp642:
.LBB4_150:                              # %vector.ph563
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1103 7 is_stmt 1              # ldecod_src/io_tiff.c:1103:7
	movl	%eax, %ecx
	andl	$31, %ecx
	movl	$32, %edx
	cmovneq	%rcx, %rdx
	movq	%rax, %rcx
	subq	%rdx, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	leaq	(%r9,%rdx,2), %rdx
	xorl	%esi, %esi
	movdqa	.LCPI4_15(%rip), %xmm0          # xmm0 = [65535,0,65535,65535,0,65535,65535,0]
.Ltmp643:
.LBB4_151:                              # %vector.body569
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1105 17                       # ldecod_src/io_tiff.c:1105:17
	movdqu	80(%r9), %xmm9
	movdqu	64(%r9), %xmm10
	movdqu	(%r9), %xmm3
	movdqu	16(%r9), %xmm8
	movdqu	32(%r9), %xmm11
	movdqu	48(%r9), %xmm12
	movdqu	128(%r9), %xmm5
	movdqu	96(%r9), %xmm7
	movdqu	112(%r9), %xmm6
	movdqu	176(%r9), %xmm1
	movdqu	144(%r9), %xmm4
	movdqu	160(%r9), %xmm2
	movdqa	%xmm0, %xmm13
	pandn	%xmm8, %xmm13
	pand	%xmm0, %xmm3
	por	%xmm13, %xmm3
	pshufd	$216, %xmm3, %xmm3              # xmm3 = xmm3[0,2,1,3]
	pshufhw	$230, %xmm3, %xmm3              # xmm3 = xmm3[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm3, %xmm3              # xmm3 = xmm3[0,2,1,3]
	pshuflw	$108, %xmm3, %xmm3              # xmm3 = xmm3[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm8, %xmm8              # xmm8 = xmm8[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm11, %xmm11            # xmm11 = xmm11[0,1,2,1]
	pshufhw	$100, %xmm11, %xmm11            # xmm11 = xmm11[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm8, %xmm11              # xmm11 = xmm11[3,0],xmm8[2,0]
	shufps	$36, %xmm11, %xmm3              # xmm3 = xmm3[0,1],xmm11[2,0]
	movdqa	%xmm0, %xmm8
	pandn	%xmm10, %xmm8
	pand	%xmm0, %xmm12
	por	%xmm8, %xmm12
	pshufd	$216, %xmm12, %xmm8             # xmm8 = xmm12[0,2,1,3]
	pshufhw	$230, %xmm8, %xmm8              # xmm8 = xmm8[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm8, %xmm8              # xmm8 = xmm8[0,2,1,3]
	pshuflw	$108, %xmm8, %xmm8              # xmm8 = xmm8[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm10, %xmm10            # xmm10 = xmm10[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm9, %xmm9              # xmm9 = xmm9[0,1,2,1]
	pshufhw	$100, %xmm9, %xmm9              # xmm9 = xmm9[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm10, %xmm9              # xmm9 = xmm9[3,0],xmm10[2,0]
	shufps	$36, %xmm9, %xmm8               # xmm8 = xmm8[0,1],xmm9[2,0]
	movdqa	%xmm0, %xmm9
	pandn	%xmm6, %xmm9
	pand	%xmm0, %xmm7
	por	%xmm9, %xmm7
	pshufd	$216, %xmm7, %xmm7              # xmm7 = xmm7[0,2,1,3]
	pshufhw	$230, %xmm7, %xmm7              # xmm7 = xmm7[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm7, %xmm7              # xmm7 = xmm7[0,2,1,3]
	pshuflw	$108, %xmm7, %xmm7              # xmm7 = xmm7[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm6, %xmm6              # xmm6 = xmm6[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm5, %xmm5              # xmm5 = xmm5[0,1,2,1]
	pshufhw	$100, %xmm5, %xmm5              # xmm5 = xmm5[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm6, %xmm5               # xmm5 = xmm5[3,0],xmm6[2,0]
	shufps	$36, %xmm5, %xmm7               # xmm7 = xmm7[0,1],xmm5[2,0]
	movdqa	%xmm0, %xmm5
	pandn	%xmm2, %xmm5
	pand	%xmm0, %xmm4
	por	%xmm5, %xmm4
	pshufd	$216, %xmm4, %xmm4              # xmm4 = xmm4[0,2,1,3]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm4, %xmm4              # xmm4 = xmm4[0,2,1,3]
	pshuflw	$108, %xmm4, %xmm4              # xmm4 = xmm4[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm2, %xmm2              # xmm2 = xmm2[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshufhw	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm2, %xmm1               # xmm1 = xmm1[3,0],xmm2[2,0]
	shufps	$36, %xmm1, %xmm4               # xmm4 = xmm4[0,1],xmm1[2,0]
	.loc	0 1105 15 is_stmt 0             # ldecod_src/io_tiff.c:1105:15
	movups	%xmm3, (%rbp,%rsi,2)
	movups	%xmm8, 16(%rbp,%rsi,2)
	movups	%xmm7, 32(%rbp,%rsi,2)
	movups	%xmm4, 48(%rbp,%rsi,2)
.Ltmp644:
	.loc	0 1103 35 is_stmt 1             # ldecod_src/io_tiff.c:1103:35
	addq	$32, %rsi
	addq	$192, %r9
	cmpq	%rsi, %rcx
	jne	.LBB4_151
.Ltmp645:
# %bb.152:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 35 is_stmt 0                # ldecod_src/io_tiff.c:0:35
	movq	%rdx, %r9
.Ltmp646:
.LBB4_153:                              # %for.body.preheader627
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1103 7                        # ldecod_src/io_tiff.c:1103:7
	movl	%eax, %esi
	subl	%ecx, %esi
	movq	%rcx, %rdx
	andl	$3, %esi
	je	.LBB4_155
.Ltmp647:
.LBB4_154:                              # %for.body.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- $r9
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1105 17 is_stmt 1             # ldecod_src/io_tiff.c:1105:17
	movzwl	(%r9), %r8d
	.loc	0 1105 15 is_stmt 0             # ldecod_src/io_tiff.c:1105:15
	movw	%r8w, (%rbp,%rdx,2)
	.loc	0 1105 24                       # ldecod_src/io_tiff.c:1105:24
	addq	$6, %r9
.Ltmp648:
	#DEBUG_VALUE: ReadTIFFImage:p <- $r9
	.loc	0 1103 35 is_stmt 1             # ldecod_src/io_tiff.c:1103:35
	incq	%rdx
.Ltmp649:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1103 7 is_stmt 0              # ldecod_src/io_tiff.c:1103:7
	decq	%rsi
	jne	.LBB4_154
.Ltmp650:
.LBB4_155:                              # %for.body.prol.loopexit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	subq	%rax, %rcx
	cmpq	$-4, %rcx
	ja	.LBB4_157
.Ltmp651:
.LBB4_156:                              # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:p <- $r9
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1105 17 is_stmt 1             # ldecod_src/io_tiff.c:1105:17
	movzwl	(%r9), %ecx
	.loc	0 1105 15 is_stmt 0             # ldecod_src/io_tiff.c:1105:15
	movw	%cx, (%rbp,%rdx,2)
.Ltmp652:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 6, DW_OP_stack_value] $r9
	.loc	0 1105 17                       # ldecod_src/io_tiff.c:1105:17
	movzwl	6(%r9), %ecx
	.loc	0 1105 15                       # ldecod_src/io_tiff.c:1105:15
	movw	%cx, 2(%rbp,%rdx,2)
.Ltmp653:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 12, DW_OP_stack_value] $r9
	.loc	0 1105 17                       # ldecod_src/io_tiff.c:1105:17
	movzwl	12(%r9), %ecx
	.loc	0 1105 15                       # ldecod_src/io_tiff.c:1105:15
	movw	%cx, 4(%rbp,%rdx,2)
.Ltmp654:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 18, DW_OP_stack_value] $r9
	.loc	0 1105 17                       # ldecod_src/io_tiff.c:1105:17
	movzwl	18(%r9), %ecx
	.loc	0 1105 15                       # ldecod_src/io_tiff.c:1105:15
	movw	%cx, 6(%rbp,%rdx,2)
	.loc	0 1105 24                       # ldecod_src/io_tiff.c:1105:24
	addq	$24, %r9
.Ltmp655:
	#DEBUG_VALUE: ReadTIFFImage:p <- $r9
	.loc	0 1103 35 is_stmt 1             # ldecod_src/io_tiff.c:1103:35
	addq	$4, %rdx
.Ltmp656:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1103 19 is_stmt 0             # ldecod_src/io_tiff.c:1103:19
	cmpq	%rdx, %rax
.Ltmp657:
	.loc	0 1103 7                        # ldecod_src/io_tiff.c:1103:7
	jne	.LBB4_156
.Ltmp658:
.LBB4_157:                              # %for.end
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	.loc	0 1108 66 is_stmt 1             # ldecod_src/io_tiff.c:1108:66
	andq	%rax, %rdi
	.loc	0 1108 26 is_stmt 0             # ldecod_src/io_tiff.c:1108:26
	callq	malloc@PLT
.Ltmp659:
	movq	%rax, %r12
.Ltmp660:
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- $r12
	.loc	0 1110 7 is_stmt 1              # ldecod_src/io_tiff.c:1110:7
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movq	128(%rsp), %rdi                 # 8-byte Reload
	movq	216(%rsp), %r13                 # 8-byte Reload
	movl	%r13d, %esi
	movq	296(%rsp), %rbx                 # 8-byte Reload
	movl	%ebx, %edx
	movl	$3, %ecx
	movq	%rax, %r8
	movl	$1, %r9d
	callq	horizontal_half_1chan_cosite
.Ltmp661:
	.loc	0 1111 40                       # ldecod_src/io_tiff.c:1111:40
	movl	%r13d, %r15d
	shrl	$31, %r15d
	addl	%r13d, %r15d
	sarl	%r15d
	.loc	0 1111 7 is_stmt 0              # ldecod_src/io_tiff.c:1111:7
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movq	%r12, %rdi
	movl	%r15d, %esi
	movl	%ebx, %edx
	movl	$1, %ecx
	movq	32(%rsp), %r8                   # 8-byte Reload
	movl	$1, %r9d
	callq	vertical_half_1chan
.Ltmp662:
	.loc	0 1113 7 is_stmt 1              # ldecod_src/io_tiff.c:1113:7
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movq	88(%rsp), %rdi                  # 8-byte Reload
	movl	%r13d, %esi
	movl	%ebx, %edx
	movl	$3, %ecx
	movq	%r12, %r8
	movl	$1, %r9d
	callq	horizontal_half_1chan_cosite
.Ltmp663:
	.loc	0 1114 7                        # ldecod_src/io_tiff.c:1114:7
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movq	%r12, %rdi
	movl	%r15d, %esi
	movl	%ebx, %edx
	movl	$1, %ecx
	movq	16(%rsp), %r8                   # 8-byte Reload
	movl	$1, %r9d
	callq	vertical_half_1chan
.Ltmp664:
	.loc	0 1115 7                        # ldecod_src/io_tiff.c:1115:7
	movq	%r12, %rdi
	callq	free@PLT
.Ltmp665:
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	.loc	0 0 7 is_stmt 0                 # ldecod_src/io_tiff.c:0:7
	movq	%rbp, %rdi
	jmp	.LBB4_169
.Ltmp666:
.LBB4_158:                              # %vector.ph532
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1126 7 is_stmt 1              # ldecod_src/io_tiff.c:1126:7
	movl	%eax, %ecx
	andl	$31, %ecx
	movl	$32, %edx
	cmovneq	%rcx, %rdx
	movq	%rax, %rcx
	subq	%rdx, %rcx
	leaq	(%rcx,%rcx,2), %rdx
	leaq	(%r8,%rdx,2), %rdx
	xorl	%esi, %esi
	movdqa	.LCPI4_15(%rip), %xmm0          # xmm0 = [65535,0,65535,65535,0,65535,65535,0]
.Ltmp667:
.LBB4_159:                              # %vector.body538
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1128 17                       # ldecod_src/io_tiff.c:1128:17
	movdqu	80(%r8), %xmm9
	movdqu	64(%r8), %xmm10
	movdqu	(%r8), %xmm3
	movdqu	16(%r8), %xmm8
	movdqu	32(%r8), %xmm11
	movdqu	48(%r8), %xmm12
	movdqu	128(%r8), %xmm5
	movdqu	96(%r8), %xmm7
	movdqu	112(%r8), %xmm6
	movdqu	176(%r8), %xmm1
	movdqu	144(%r8), %xmm4
	movdqu	160(%r8), %xmm2
	movdqa	%xmm0, %xmm13
	pandn	%xmm8, %xmm13
	pand	%xmm0, %xmm3
	por	%xmm13, %xmm3
	pshufd	$216, %xmm3, %xmm3              # xmm3 = xmm3[0,2,1,3]
	pshufhw	$230, %xmm3, %xmm3              # xmm3 = xmm3[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm3, %xmm3              # xmm3 = xmm3[0,2,1,3]
	pshuflw	$108, %xmm3, %xmm3              # xmm3 = xmm3[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm8, %xmm8              # xmm8 = xmm8[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm11, %xmm11            # xmm11 = xmm11[0,1,2,1]
	pshufhw	$100, %xmm11, %xmm11            # xmm11 = xmm11[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm8, %xmm11              # xmm11 = xmm11[3,0],xmm8[2,0]
	shufps	$36, %xmm11, %xmm3              # xmm3 = xmm3[0,1],xmm11[2,0]
	movdqa	%xmm0, %xmm8
	pandn	%xmm10, %xmm8
	pand	%xmm0, %xmm12
	por	%xmm8, %xmm12
	pshufd	$216, %xmm12, %xmm8             # xmm8 = xmm12[0,2,1,3]
	pshufhw	$230, %xmm8, %xmm8              # xmm8 = xmm8[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm8, %xmm8              # xmm8 = xmm8[0,2,1,3]
	pshuflw	$108, %xmm8, %xmm8              # xmm8 = xmm8[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm10, %xmm10            # xmm10 = xmm10[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm9, %xmm9              # xmm9 = xmm9[0,1,2,1]
	pshufhw	$100, %xmm9, %xmm9              # xmm9 = xmm9[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm10, %xmm9              # xmm9 = xmm9[3,0],xmm10[2,0]
	shufps	$36, %xmm9, %xmm8               # xmm8 = xmm8[0,1],xmm9[2,0]
	movdqa	%xmm0, %xmm9
	pandn	%xmm6, %xmm9
	pand	%xmm0, %xmm7
	por	%xmm9, %xmm7
	pshufd	$216, %xmm7, %xmm7              # xmm7 = xmm7[0,2,1,3]
	pshufhw	$230, %xmm7, %xmm7              # xmm7 = xmm7[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm7, %xmm7              # xmm7 = xmm7[0,2,1,3]
	pshuflw	$108, %xmm7, %xmm7              # xmm7 = xmm7[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm6, %xmm6              # xmm6 = xmm6[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm5, %xmm5              # xmm5 = xmm5[0,1,2,1]
	pshufhw	$100, %xmm5, %xmm5              # xmm5 = xmm5[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm6, %xmm5               # xmm5 = xmm5[3,0],xmm6[2,0]
	shufps	$36, %xmm5, %xmm7               # xmm7 = xmm7[0,1],xmm5[2,0]
	movdqa	%xmm0, %xmm5
	pandn	%xmm2, %xmm5
	pand	%xmm0, %xmm4
	por	%xmm5, %xmm4
	pshufd	$216, %xmm4, %xmm4              # xmm4 = xmm4[0,2,1,3]
	pshufhw	$230, %xmm4, %xmm4              # xmm4 = xmm4[0,1,2,3,6,5,6,7]
	pshufd	$216, %xmm4, %xmm4              # xmm4 = xmm4[0,2,1,3]
	pshuflw	$108, %xmm4, %xmm4              # xmm4 = xmm4[0,3,2,1,4,5,6,7]
	pshufhw	$236, %xmm2, %xmm2              # xmm2 = xmm2[0,1,2,3,4,7,6,7]
	pshufd	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,1]
	pshufhw	$100, %xmm1, %xmm1              # xmm1 = xmm1[0,1,2,3,4,5,6,5]
	shufps	$35, %xmm2, %xmm1               # xmm1 = xmm1[3,0],xmm2[2,0]
	shufps	$36, %xmm1, %xmm4               # xmm4 = xmm4[0,1],xmm1[2,0]
	.loc	0 1128 15 is_stmt 0             # ldecod_src/io_tiff.c:1128:15
	movups	%xmm3, (%rbp,%rsi,2)
	movups	%xmm8, 16(%rbp,%rsi,2)
	movups	%xmm7, 32(%rbp,%rsi,2)
	movups	%xmm4, 48(%rbp,%rsi,2)
.Ltmp668:
	.loc	0 1126 35 is_stmt 1             # ldecod_src/io_tiff.c:1126:35
	addq	$32, %rsi
	addq	$192, %r8
	cmpq	%rsi, %rcx
	jne	.LBB4_159
.Ltmp669:
# %bb.160:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 35 is_stmt 0                # ldecod_src/io_tiff.c:0:35
	movq	%rdx, %r8
.Ltmp670:
.LBB4_161:                              # %for.body103.preheader628
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1126 7                        # ldecod_src/io_tiff.c:1126:7
	movl	%eax, %esi
	subl	%ecx, %esi
	movq	%rcx, %rdx
	andl	$3, %esi
	je	.LBB4_163
.Ltmp671:
.LBB4_162:                              # %for.body103.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- $r8
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1128 17 is_stmt 1             # ldecod_src/io_tiff.c:1128:17
	movzwl	(%r8), %edi
	.loc	0 1128 15 is_stmt 0             # ldecod_src/io_tiff.c:1128:15
	movw	%di, (%rbp,%rdx,2)
	.loc	0 1128 24                       # ldecod_src/io_tiff.c:1128:24
	addq	$6, %r8
.Ltmp672:
	#DEBUG_VALUE: ReadTIFFImage:p <- $r8
	.loc	0 1126 35 is_stmt 1             # ldecod_src/io_tiff.c:1126:35
	incq	%rdx
.Ltmp673:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1126 7 is_stmt 0              # ldecod_src/io_tiff.c:1126:7
	decq	%rsi
	jne	.LBB4_162
.Ltmp674:
.LBB4_163:                              # %for.body103.prol.loopexit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	subq	%rax, %rcx
	cmpq	$-4, %rcx
	ja	.LBB4_165
.Ltmp675:
.LBB4_164:                              # %for.body103
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:p <- $r8
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1128 17 is_stmt 1             # ldecod_src/io_tiff.c:1128:17
	movzwl	(%r8), %ecx
	.loc	0 1128 15 is_stmt 0             # ldecod_src/io_tiff.c:1128:15
	movw	%cx, (%rbp,%rdx,2)
.Ltmp676:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 6, DW_OP_stack_value] $r8
	.loc	0 1128 17                       # ldecod_src/io_tiff.c:1128:17
	movzwl	6(%r8), %ecx
	.loc	0 1128 15                       # ldecod_src/io_tiff.c:1128:15
	movw	%cx, 2(%rbp,%rdx,2)
.Ltmp677:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 12, DW_OP_stack_value] $r8
	.loc	0 1128 17                       # ldecod_src/io_tiff.c:1128:17
	movzwl	12(%r8), %ecx
	.loc	0 1128 15                       # ldecod_src/io_tiff.c:1128:15
	movw	%cx, 4(%rbp,%rdx,2)
.Ltmp678:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: ReadTIFFImage:p <- [DW_OP_plus_uconst 18, DW_OP_stack_value] $r8
	.loc	0 1128 17                       # ldecod_src/io_tiff.c:1128:17
	movzwl	18(%r8), %ecx
	.loc	0 1128 15                       # ldecod_src/io_tiff.c:1128:15
	movw	%cx, 6(%rbp,%rdx,2)
	.loc	0 1128 24                       # ldecod_src/io_tiff.c:1128:24
	addq	$24, %r8
.Ltmp679:
	#DEBUG_VALUE: ReadTIFFImage:p <- $r8
	.loc	0 1126 35 is_stmt 1             # ldecod_src/io_tiff.c:1126:35
	addq	$4, %rdx
.Ltmp680:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1126 19 is_stmt 0             # ldecod_src/io_tiff.c:1126:19
	cmpq	%rdx, %rax
.Ltmp681:
	.loc	0 1126 7                        # ldecod_src/io_tiff.c:1126:7
	jne	.LBB4_164
.Ltmp682:
.LBB4_165:                              # %for.cond110.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:y <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	296(%rsp), %rbx                 # 8-byte Reload
.Ltmp683:
	.loc	0 1131 19 is_stmt 1             # ldecod_src/io_tiff.c:1131:19
	testl	%ebx, %ebx
.Ltmp684:
	.loc	0 1131 7 is_stmt 0              # ldecod_src/io_tiff.c:1131:7
	jle	.LBB4_168
.Ltmp685:
# %bb.166:                              # %for.body113.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:y <- 0
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movl	%r9d, %eax
	shrl	$31, %eax
	addl	%r9d, %eax
	sarl	%eax
	movslq	%r9d, %rcx
	cltq
	leaq	(,%rcx,2), %rcx
	addq	%rbp, %rcx
.Ltmp686:
	#DEBUG_VALUE: ReadTIFFImage:up <- $rcx
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	leaq	(%rbp,%rax,2), %rax
.Ltmp687:
	#DEBUG_VALUE: ReadTIFFImage:vp <- $rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	.loc	0 1131 7                        # ldecod_src/io_tiff.c:1131:7
	leaq	(%r14,%r14), %rax
.Ltmp688:
	leaq	(%rax,%rax,2), %rax
	movq	%rax, 64(%rsp)                  # 8-byte Spill
	xorl	%r12d, %r12d
.Ltmp689:
.LBB4_167:                              # %for.body113
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:up <- [DW_OP_plus_uconst 16, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:vp <- [DW_OP_plus_uconst 32, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:y <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 7, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_stack_value] undef
	.loc	0 1132 87 is_stmt 1             # ldecod_src/io_tiff.c:1132:87
	leaq	-2(%r15), %rdi
	movl	%r12d, %eax
	shrl	$31, %eax
	addl	%r12d, %eax
	sarl	%eax
	.loc	0 1132 76 is_stmt 0             # ldecod_src/io_tiff.c:1132:76
	movslq	%eax, %r13
	movq	16(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r13,2), %r8
	.loc	0 1132 9                        # ldecod_src/io_tiff.c:1132:9
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movl	%r14d, %esi
	movl	$1, %edx
	movl	$3, %ecx
	movl	$1, %r9d
	callq	horizontal_half_1chan_cosite
.Ltmp690:
	.loc	0 0 9                           # ldecod_src/io_tiff.c:0:9
	movq	32(%rsp), %rax                  # 8-byte Reload
	.loc	0 1133 76 is_stmt 1             # ldecod_src/io_tiff.c:1133:76
	leaq	(%rax,%r13,2), %r8
	.loc	0 1133 9 is_stmt 0              # ldecod_src/io_tiff.c:1133:9
	movl	$65535, (%rsp)                  # imm = 0xFFFF
	movq	%r15, %rdi
	movl	%r14d, %esi
	movl	$1, %edx
	movl	$3, %ecx
	movl	$1, %r9d
	callq	horizontal_half_1chan_cosite
.Ltmp691:
	#DEBUG_VALUE: ReadTIFFImage:y <- [DW_OP_LLVM_arg 0, DW_OP_LLVM_arg 0, DW_OP_LLVM_convert 64 7, DW_OP_minus, DW_OP_consts 18446744073709551615, DW_OP_div, DW_OP_consts 1, DW_OP_plus, DW_OP_stack_value] undef
	.loc	0 1131 19 is_stmt 1             # ldecod_src/io_tiff.c:1131:19
	addl	%r14d, %r12d
	addq	64(%rsp), %r15                  # 8-byte Folded Reload
	decq	%rbx
.Ltmp692:
	.loc	0 1131 7 is_stmt 0              # ldecod_src/io_tiff.c:1131:7
	jne	.LBB4_167
.Ltmp693:
.LBB4_168:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	%rbp, %rdi
	movq	208(%rsp), %r14                 # 8-byte Reload
.Ltmp694:
.LBB4_169:                              # %if.end137
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	#DEBUG_VALUE: ReadTIFFImage:yp <- $rbp
	movq	136(%rsp), %r15                 # 8-byte Reload
	movl	12(%rsp), %r8d                  # 4-byte Reload
.Ltmp695:
.LBB4_170:                              # %if.end137
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	.loc	0 1145 19 is_stmt 1             # ldecod_src/io_tiff.c:1145:19
	movl	128(%r15), %edx
	.loc	0 1145 3 is_stmt 0              # ldecod_src/io_tiff.c:1145:3
	cmpl	$1, %edx
	je	.LBB4_183
.Ltmp696:
# %bb.171:                              # %if.end137
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	cmpl	$2, %edx
	jne	.LBB4_199
.Ltmp697:
# %bb.172:                              # %for.cond153.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1154 17 is_stmt 1             # ldecod_src/io_tiff.c:1154:17
	testl	%r8d, %r8d
.Ltmp698:
	.loc	0 1154 5 is_stmt 0              # ldecod_src/io_tiff.c:1154:5
	jle	.LBB4_197
.Ltmp699:
# %bb.173:                              # %for.body156.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1154 17                       # ldecod_src/io_tiff.c:1154:17
	movl	%r8d, %eax
	xorl	%ecx, %ecx
.Ltmp700:
	.loc	0 1154 5                        # ldecod_src/io_tiff.c:1154:5
	cmpl	$32, %r8d
	jb	.LBB4_178
.Ltmp701:
# %bb.174:                              # %for.body156.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	movq	%r14, %rdx
	subq	%rbp, %rdx
	cmpq	$63, %rdx
	jbe	.LBB4_178
.Ltmp702:
# %bb.175:                              # %vector.ph591
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	movl	%eax, %ecx
	andl	$2147483616, %ecx               # imm = 0x7FFFFFE0
	leal	(%rax,%rax), %edx
	andl	$-64, %edx
	xorl	%esi, %esi
.Ltmp703:
	.p2align	4, 0x90
.LBB4_176:                              # %vector.body595
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1156 29 is_stmt 1             # ldecod_src/io_tiff.c:1156:29
	movdqu	(%rbp,%rsi), %xmm0
	movdqu	16(%rbp,%rsi), %xmm1
	movdqu	32(%rbp,%rsi), %xmm2
	movdqu	48(%rbp,%rsi), %xmm3
	.loc	0 1156 27 is_stmt 0             # ldecod_src/io_tiff.c:1156:27
	movdqu	%xmm0, (%r14,%rsi)
	movdqu	%xmm1, 16(%r14,%rsi)
	movdqu	%xmm2, 32(%r14,%rsi)
	movdqu	%xmm3, 48(%r14,%rsi)
.Ltmp704:
	.loc	0 1154 32 is_stmt 1             # ldecod_src/io_tiff.c:1154:32
	addq	$64, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB4_176
.Ltmp705:
# %bb.177:                              # %middle.block588
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1154 5 is_stmt 0              # ldecod_src/io_tiff.c:1154:5
	cmpl	%eax, %ecx
	je	.LBB4_197
.Ltmp706:
.LBB4_178:                              # %for.body156.preheader625
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	movq	%rax, %rsi
	movq	%rcx, %rdx
	andq	$3, %rsi
	je	.LBB4_181
.Ltmp707:
# %bb.179:                              # %for.body156.prol.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movq	%rcx, %rdx
.Ltmp708:
	.p2align	4, 0x90
.LBB4_180:                              # %for.body156.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1156 29 is_stmt 1             # ldecod_src/io_tiff.c:1156:29
	movzwl	(%rbp,%rdx,2), %r8d
	.loc	0 1156 27 is_stmt 0             # ldecod_src/io_tiff.c:1156:27
	movw	%r8w, (%r14,%rdx,2)
.Ltmp709:
	.loc	0 1154 32 is_stmt 1             # ldecod_src/io_tiff.c:1154:32
	incq	%rdx
.Ltmp710:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1154 5 is_stmt 0              # ldecod_src/io_tiff.c:1154:5
	decq	%rsi
	jne	.LBB4_180
.Ltmp711:
.LBB4_181:                              # %for.body156.prol.loopexit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	subq	%rax, %rcx
	cmpq	$-4, %rcx
	ja	.LBB4_197
.Ltmp712:
.LBB4_182:                              # %for.body156
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1156 29 is_stmt 1             # ldecod_src/io_tiff.c:1156:29
	movzwl	(%rbp,%rdx,2), %ecx
	.loc	0 1156 27 is_stmt 0             # ldecod_src/io_tiff.c:1156:27
	movw	%cx, (%r14,%rdx,2)
.Ltmp713:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	.loc	0 1156 29                       # ldecod_src/io_tiff.c:1156:29
	movzwl	2(%rbp,%rdx,2), %ecx
	.loc	0 1156 27                       # ldecod_src/io_tiff.c:1156:27
	movw	%cx, 2(%r14,%rdx,2)
.Ltmp714:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rdx
	.loc	0 1156 29                       # ldecod_src/io_tiff.c:1156:29
	movzwl	4(%rbp,%rdx,2), %ecx
	.loc	0 1156 27                       # ldecod_src/io_tiff.c:1156:27
	movw	%cx, 4(%r14,%rdx,2)
.Ltmp715:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rdx
	.loc	0 1156 29                       # ldecod_src/io_tiff.c:1156:29
	movzwl	6(%rbp,%rdx,2), %ecx
	.loc	0 1156 27                       # ldecod_src/io_tiff.c:1156:27
	movw	%cx, 6(%r14,%rdx,2)
.Ltmp716:
	.loc	0 1154 32 is_stmt 1             # ldecod_src/io_tiff.c:1154:32
	addq	$4, %rdx
.Ltmp717:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1154 17 is_stmt 0             # ldecod_src/io_tiff.c:1154:17
	cmpq	%rdx, %rax
	jne	.LBB4_182
	jmp	.LBB4_197
.Ltmp718:
.LBB4_183:                              # %for.cond139.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1148 17 is_stmt 1             # ldecod_src/io_tiff.c:1148:17
	testl	%r8d, %r8d
.Ltmp719:
	.loc	0 1148 5 is_stmt 0              # ldecod_src/io_tiff.c:1148:5
	jle	.LBB4_197
.Ltmp720:
# %bb.184:                              # %for.body142.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1148 17                       # ldecod_src/io_tiff.c:1148:17
	movl	%r8d, %eax
.Ltmp721:
	.loc	0 1148 5                        # ldecod_src/io_tiff.c:1148:5
	cmpl	$32, %r8d
	jb	.LBB4_185
.Ltmp722:
# %bb.186:                              # %vector.memcheck603
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	leaq	(,%rax,2), %rcx
	addq	%rbp, %rcx
	cmpq	%r14, %rcx
	jbe	.LBB4_189
.Ltmp723:
# %bb.187:                              # %vector.memcheck603
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	leaq	(%r14,%rax), %rcx
	.loc	0 1148 5                        # ldecod_src/io_tiff.c:1148:5
	cmpq	%rcx, %rbp
	jae	.LBB4_189
.Ltmp724:
.LBB4_185:
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	xorl	%ecx, %ecx
.Ltmp725:
.LBB4_192:                              # %for.body142.preheader624
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1148 5                        # ldecod_src/io_tiff.c:1148:5
	movq	%rax, %rsi
	movq	%rcx, %rdx
	andq	$3, %rsi
	je	.LBB4_195
.Ltmp726:
# %bb.193:                              # %for.body142.prol.preheader
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movq	%rcx, %rdx
.Ltmp727:
	.p2align	4, 0x90
.LBB4_194:                              # %for.body142.prol
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1150 24 is_stmt 1             # ldecod_src/io_tiff.c:1150:24
	movzbl	1(%rbp,%rdx,2), %r8d
	.loc	0 1150 14 is_stmt 0             # ldecod_src/io_tiff.c:1150:14
	movb	%r8b, (%r14,%rdx)
.Ltmp728:
	.loc	0 1148 32 is_stmt 1             # ldecod_src/io_tiff.c:1148:32
	incq	%rdx
.Ltmp729:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1148 5 is_stmt 0              # ldecod_src/io_tiff.c:1148:5
	decq	%rsi
	jne	.LBB4_194
.Ltmp730:
.LBB4_195:                              # %for.body142.prol.loopexit
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	subq	%rax, %rcx
	cmpq	$-4, %rcx
	ja	.LBB4_197
.Ltmp731:
.LBB4_196:                              # %for.body142
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $eax
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1150 24 is_stmt 1             # ldecod_src/io_tiff.c:1150:24
	movzbl	1(%rbp,%rdx,2), %ecx
	.loc	0 1150 14 is_stmt 0             # ldecod_src/io_tiff.c:1150:14
	movb	%cl, (%r14,%rdx)
.Ltmp732:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdx
	.loc	0 1150 24                       # ldecod_src/io_tiff.c:1150:24
	movzbl	3(%rbp,%rdx,2), %ecx
	.loc	0 1150 14                       # ldecod_src/io_tiff.c:1150:14
	movb	%cl, 1(%r14,%rdx)
.Ltmp733:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 2, DW_OP_stack_value] $rdx
	.loc	0 1150 24                       # ldecod_src/io_tiff.c:1150:24
	movzbl	5(%rbp,%rdx,2), %ecx
	.loc	0 1150 14                       # ldecod_src/io_tiff.c:1150:14
	movb	%cl, 2(%r14,%rdx)
.Ltmp734:
	#DEBUG_VALUE: ReadTIFFImage:i <- [DW_OP_plus_uconst 3, DW_OP_stack_value] $rdx
	.loc	0 1150 24                       # ldecod_src/io_tiff.c:1150:24
	movzbl	7(%rbp,%rdx,2), %ecx
	.loc	0 1150 14                       # ldecod_src/io_tiff.c:1150:14
	movb	%cl, 3(%r14,%rdx)
.Ltmp735:
	.loc	0 1148 32 is_stmt 1             # ldecod_src/io_tiff.c:1148:32
	addq	$4, %rdx
.Ltmp736:
	#DEBUG_VALUE: ReadTIFFImage:i <- $rdx
	.loc	0 1148 17 is_stmt 0             # ldecod_src/io_tiff.c:1148:17
	cmpq	%rdx, %rax
.Ltmp737:
	.loc	0 1148 5                        # ldecod_src/io_tiff.c:1148:5
	jne	.LBB4_196
	jmp	.LBB4_197
.Ltmp738:
.LBB4_189:                              # %vector.ph612
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	movl	%eax, %ecx
	andl	$2147483616, %ecx               # imm = 0x7FFFFFE0
	xorl	%edx, %edx
.Ltmp739:
.LBB4_190:                              # %vector.body616
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1150 24 is_stmt 1             # ldecod_src/io_tiff.c:1150:24
	movdqu	(%rbp,%rdx,2), %xmm0
	movdqu	16(%rbp,%rdx,2), %xmm1
	movdqu	32(%rbp,%rdx,2), %xmm2
	movdqu	48(%rbp,%rdx,2), %xmm3
	.loc	0 1150 31 is_stmt 0             # ldecod_src/io_tiff.c:1150:31
	psrlw	$8, %xmm0
	psrlw	$8, %xmm1
	.loc	0 1150 14                       # ldecod_src/io_tiff.c:1150:14
	packuswb	%xmm1, %xmm0
	.loc	0 1150 31                       # ldecod_src/io_tiff.c:1150:31
	psrlw	$8, %xmm2
	psrlw	$8, %xmm3
	.loc	0 1150 14                       # ldecod_src/io_tiff.c:1150:14
	packuswb	%xmm3, %xmm2
	movdqu	%xmm0, (%r14,%rdx)
	movdqu	%xmm2, 16(%r14,%rdx)
.Ltmp740:
	.loc	0 1148 32 is_stmt 1             # ldecod_src/io_tiff.c:1148:32
	addq	$32, %rdx
	cmpq	%rdx, %rcx
	jne	.LBB4_190
.Ltmp741:
# %bb.191:                              # %middle.block609
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: ReadTIFFImage:i <- 0
	.loc	0 1148 5 is_stmt 0              # ldecod_src/io_tiff.c:1148:5
	cmpl	%eax, %ecx
	jne	.LBB4_192
.Ltmp742:
.LBB4_197:                              # %sw.epilog167
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	movl	$1, %eax
.Ltmp743:
	.loc	0 1164 7 is_stmt 1              # ldecod_src/io_tiff.c:1164:7
	testq	%rdi, %rdi
.Ltmp744:
	.loc	0 1164 7 is_stmt 0              # ldecod_src/io_tiff.c:1164:7
	je	.LBB4_108
.Ltmp745:
# %bb.198:                              # %if.then169
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	.loc	0 1164 13                       # ldecod_src/io_tiff.c:1164:13
	callq	free@PLT
.Ltmp746:
	.loc	0 0 13                          # ldecod_src/io_tiff.c:0:13
	movl	$1, %eax
	.loc	0 1164 13                       # ldecod_src/io_tiff.c:1164:13
	jmp	.LBB4_108
.Ltmp747:
.LBB4_199:                              # %Error
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rdi
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	.loc	0 1160 14 is_stmt 1             # ldecod_src/io_tiff.c:1160:14
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	.loc	0 1160 5 is_stmt 0              # ldecod_src/io_tiff.c:1160:5
	movl	$.L.str.8, %esi
	movq	%rdi, %rbx
.Ltmp748:
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbx
	movq	%rax, %rdi
	xorl	%eax, %eax
	callq	fprintf@PLT
.Ltmp749:
	#DEBUG_LABEL: ReadTIFFImage:Error
	.loc	0 1169 7 is_stmt 1              # ldecod_src/io_tiff.c:1169:7
	testq	%rbx, %rbx
.Ltmp750:
	.loc	0 1169 7 is_stmt 0              # ldecod_src/io_tiff.c:1169:7
	je	.LBB4_106
.Ltmp751:
# %bb.200:                              # %if.then172
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- $rbx
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	.loc	0 0 7                           # ldecod_src/io_tiff.c:0:7
	movq	%rbx, %rdi
.Ltmp752:
	.loc	0 1169 13                       # ldecod_src/io_tiff.c:1169:13
	callq	free@PLT
.Ltmp753:
	.loc	0 0 13                          # ldecod_src/io_tiff.c:0:13
	jmp	.LBB4_106
.Ltmp754:
.LBB4_201:                              # %sw.default.i
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- $r13
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- $rbp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- $r8d
	#DEBUG_VALUE: RGB_YUV_initialize:videoCode <- $edx
	#DEBUG_VALUE: RGB_YUV_initialize:pixMax <- -1
	.loc	0 669 16 is_stmt 1              # ldecod_src/io_tiff.c:669:16
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	.loc	0 669 7 is_stmt 0               # ldecod_src/io_tiff.c:669:7
	movl	$.L.str.18, %esi
                                        # kill: def $edx killed $edx killed $rdx
	jmp	.LBB4_203
.Ltmp755:
.LBB4_202:                              # %sw.default
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- [DW_OP_plus_uconst 208] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	#DEBUG_VALUE: ReadTIFFImage:img <- [DW_OP_plus_uconst 56, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:nComponents <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 0 16] -1
	#DEBUG_VALUE: ReadTIFFImage:rgb_yuv <- [DW_OP_LLVM_fragment 576 32] 536879104
	.loc	0 1140 16 is_stmt 1             # ldecod_src/io_tiff.c:1140:16
	movq	stderr@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	.loc	0 1140 7 is_stmt 0              # ldecod_src/io_tiff.c:1140:7
	movl	$.L.str.7, %esi
.Ltmp756:
.LBB4_203:                              # %if.end173
	#DEBUG_VALUE: ReadTIFFImage:p_Inp <- [DW_OP_LLVM_entry_value 1] $rdi
	#DEBUG_VALUE: ReadTIFFImage:input_file <- [DW_OP_LLVM_entry_value 1] $rsi
	#DEBUG_VALUE: ReadTIFFImage:FrameNoInFile <- [DW_OP_LLVM_entry_value 1] $edx
	#DEBUG_VALUE: ReadTIFFImage:source <- [DW_OP_plus_uconst 136] [$rsp+0]
	#DEBUG_VALUE: ReadTIFFImage:buf <- $r14
	#DEBUG_VALUE: ReadTIFFImage:temp <- 0
	#DEBUG_VALUE: ReadTIFFImage:temp2 <- 0
	.loc	0 0 0                           # ldecod_src/io_tiff.c:0:0
	xorl	%eax, %eax
	callq	fprintf@PLT
.Ltmp757:
	.loc	0 1080 5 is_stmt 1              # ldecod_src/io_tiff.c:1080:5
	jmp	.LBB4_106
.Ltmp758:
.Lfunc_end4:
	.size	ReadTIFFImage, .Lfunc_end4-ReadTIFFImage
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3, 0x0
.LJTI4_0:
	.quad	.LBB4_21
	.quad	.LBB4_25
	.quad	.LBB4_27
	.quad	.LBB4_37
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_39
	.quad	.LBB4_33
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_35
	.quad	.LBB4_36
	.quad	.LBB4_22
	.quad	.LBB4_22
	.quad	.LBB4_41
	.quad	.LBB4_40
	.file	5 "/usr/include" "stdio.h" md5 0xf31eefcc3f15835fc5a4023a625cf609
	.file	6 "/home/yjs/workspace" "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h" md5 0x2c44e821a2b1951cde2eb0fb2e656867
	.file	7 "/usr/include" "string.h" md5 0xf443da8025a0b7c1498fb6c554ec788d
	.file	8 "/usr/include" "fcntl.h" md5 0x1a9bb91818c37dc7bc291ca6e49fc221
	.file	9 "/usr/include" "unistd.h" md5 0xed37c2e6f30ba31a8b41e4d70547c39c
	.file	10 "/usr/include/x86_64-linux-gnu/bits" "types.h" md5 0xd108b5f93a74c50510d7d9bc0ab36df9
	.file	11 "/usr/include/x86_64-linux-gnu/bits/types" "struct_FILE.h" md5 0x1bad07471b7974df4ecc1d1c2ca207e6
	.file	12 "/usr/include/x86_64-linux-gnu/bits/types" "FILE.h" md5 0x571f9fb6223c42439075fdde11a0de5d
	.file	13 "ldecod_src/inc" "report.h" md5 0xa98963f4c391ce641c06f3255ae22ee2
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function getU16
	.type	getU16,@function
getU16:                                 # @getU16
.Lfunc_begin5:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: getU16:t <- $rdi
	.loc	0 209 19 prologue_end           # ldecod_src/io_tiff.c:209:19
	movq	16(%rdi), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, 16(%rdi)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%rax), %ecx
.Ltmp759:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%rax), %rdx
	movq	%rdx, 16(%rdi)
	.loc	0 210 13 is_stmt 0              # ldecod_src/io_tiff.c:210:13
	movzbl	1(%rax), %eax
.Ltmp760:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10 is_stmt 1              # ldecod_src/io_tiff.c:211:10
	shll	$8, %eax
	orl	%ecx, %eax
	.loc	0 211 3 is_stmt 0               # ldecod_src/io_tiff.c:211:3
	retq
.Ltmp761:
.Lfunc_end5:
	.size	getU16, .Lfunc_end5-getU16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function getU32
	.type	getU32,@function
getU32:                                 # @getU32
.Lfunc_begin6:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: getU32:t <- $rdi
	.loc	0 228 19 prologue_end is_stmt 1 # ldecod_src/io_tiff.c:228:19
	movq	16(%rdi), %rcx
	leaq	1(%rcx), %rax
	movq	%rax, 16(%rdi)
	.loc	0 228 13 is_stmt 0              # ldecod_src/io_tiff.c:228:13
	movzbl	(%rcx), %edx
.Ltmp762:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 229 19 is_stmt 1              # ldecod_src/io_tiff.c:229:19
	leaq	2(%rcx), %rax
	movq	%rax, 16(%rdi)
	.loc	0 229 13 is_stmt 0              # ldecod_src/io_tiff.c:229:13
	movzbl	1(%rcx), %eax
.Ltmp763:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 230 19 is_stmt 1              # ldecod_src/io_tiff.c:230:19
	leaq	3(%rcx), %rsi
	movq	%rsi, 16(%rdi)
	.loc	0 230 13 is_stmt 0              # ldecod_src/io_tiff.c:230:13
	movzbl	2(%rcx), %esi
.Ltmp764:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 16 8] undef
	.loc	0 231 19 is_stmt 1              # ldecod_src/io_tiff.c:231:19
	leaq	4(%rcx), %r8
	movq	%r8, 16(%rdi)
.Ltmp765:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 24 8] undef
	.loc	0 233 1                         # ldecod_src/io_tiff.c:233:1
	movzbl	3(%rcx), %ecx
	shll	$24, %ecx
	shll	$16, %esi
	shll	$8, %eax
	orl	%edx, %eax
	orl	%esi, %eax
	orl	%ecx, %eax
	.loc	0 232 3                         # ldecod_src/io_tiff.c:232:3
	retq
.Ltmp766:
.Lfunc_end6:
	.size	getU32, .Lfunc_end6-getU32
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function getSwappedU16
	.type	getSwappedU16,@function
getSwappedU16:                          # @getSwappedU16
.Lfunc_begin7:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: getSwappedU16:t <- $rdi
	.loc	0 251 19 prologue_end           # ldecod_src/io_tiff.c:251:19
	movq	16(%rdi), %rcx
	leaq	1(%rcx), %rax
	movq	%rax, 16(%rdi)
	.loc	0 251 13 is_stmt 0              # ldecod_src/io_tiff.c:251:13
	movzbl	(%rcx), %eax
.Ltmp767:
	#DEBUG_VALUE: getSwappedU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 252 19 is_stmt 1              # ldecod_src/io_tiff.c:252:19
	leaq	2(%rcx), %rdx
	movq	%rdx, 16(%rdi)
	.loc	0 252 13 is_stmt 0              # ldecod_src/io_tiff.c:252:13
	movzbl	1(%rcx), %ecx
.Ltmp768:
	#DEBUG_VALUE: getSwappedU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 253 10 is_stmt 1              # ldecod_src/io_tiff.c:253:10
	shll	$8, %eax
	orl	%ecx, %eax
	.loc	0 253 3 is_stmt 0               # ldecod_src/io_tiff.c:253:3
	retq
.Ltmp769:
.Lfunc_end7:
	.size	getSwappedU16, .Lfunc_end7-getSwappedU16
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function getSwappedU32
	.type	getSwappedU32,@function
getSwappedU32:                          # @getSwappedU32
.Lfunc_begin8:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: getSwappedU32:t <- $rdi
	.loc	0 270 19 prologue_end is_stmt 1 # ldecod_src/io_tiff.c:270:19
	movq	16(%rdi), %rcx
	leaq	1(%rcx), %rax
	movq	%rax, 16(%rdi)
.Ltmp770:
	#DEBUG_VALUE: getSwappedU32:u <- [DW_OP_LLVM_fragment 24 8] undef
	.loc	0 271 19                        # ldecod_src/io_tiff.c:271:19
	leaq	2(%rcx), %rax
.Ltmp771:
	#DEBUG_VALUE: getSwappedU32:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 275 1                         # ldecod_src/io_tiff.c:275:1
	movzbl	(%rcx), %edx
	.loc	0 271 19                        # ldecod_src/io_tiff.c:271:19
	movq	%rax, 16(%rdi)
	.loc	0 271 13 is_stmt 0              # ldecod_src/io_tiff.c:271:13
	movzbl	1(%rcx), %esi
.Ltmp772:
	#DEBUG_VALUE: getSwappedU32:u <- [DW_OP_LLVM_fragment 16 8] undef
	.loc	0 272 19 is_stmt 1              # ldecod_src/io_tiff.c:272:19
	leaq	3(%rcx), %rax
	movq	%rax, 16(%rdi)
	.loc	0 272 13 is_stmt 0              # ldecod_src/io_tiff.c:272:13
	movzbl	2(%rcx), %eax
.Ltmp773:
	#DEBUG_VALUE: getSwappedU32:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 273 19 is_stmt 1              # ldecod_src/io_tiff.c:273:19
	leaq	4(%rcx), %r8
	movq	%r8, 16(%rdi)
	.loc	0 273 13 is_stmt 0              # ldecod_src/io_tiff.c:273:13
	movzbl	3(%rcx), %ecx
	.loc	0 275 1 is_stmt 1               # ldecod_src/io_tiff.c:275:1
	shll	$24, %edx
	shll	$16, %esi
	orl	%edx, %esi
	shll	$8, %eax
	orl	%esi, %eax
	orl	%ecx, %eax
	.loc	0 274 3                         # ldecod_src/io_tiff.c:274:3
	retq
.Ltmp774:
.Lfunc_end8:
	.size	getSwappedU32, .Lfunc_end8-getSwappedU32
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function getIntArray
	.type	getIntArray,@function
getIntArray:                            # @getIntArray
.Lfunc_begin9:
	.cfi_startproc
# %bb.0:                                # %entry
	#DEBUG_VALUE: getIntArray:offset <- $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	.loc	0 288 19 prologue_end           # ldecod_src/io_tiff.c:288:19
	movq	ReadTIFFImage.t+16(%rip), %rax
.Ltmp775:
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:t <- undef
	.loc	0 290 27                        # ldecod_src/io_tiff.c:290:27
	movl	%edi, %edi
.Ltmp776:
	addq	ReadTIFFImage.t+8(%rip), %rdi
.Ltmp777:
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	.loc	0 290 9 is_stmt 0               # ldecod_src/io_tiff.c:290:9
	movq	%rdi, ReadTIFFImage.t+16(%rip)
	.loc	0 291 3 is_stmt 1               # ldecod_src/io_tiff.c:291:3
	cmpl	$3, %esi
	je	.LBB9_9
.Ltmp778:
# %bb.1:                                # %entry
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	cmpl	$4, %esi
	je	.LBB9_6
.Ltmp779:
# %bb.2:                                # %entry
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	cmpl	$5, %esi
	jne	.LBB9_16
.Ltmp780:
# %bb.3:                                # %for.cond14.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 306 17                        # ldecod_src/io_tiff.c:306:17
	testl	%ecx, %ecx
.Ltmp781:
	.loc	0 306 5 is_stmt 0               # ldecod_src/io_tiff.c:306:5
	jle	.LBB9_16
.Ltmp782:
# %bb.4:                                # %for.body16.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	addl	%ecx, %ecx
.Ltmp783:
	#DEBUG_VALUE: getIntArray:n <- [DW_OP_LLVM_entry_value 1] $ecx
	.loc	0 306 5                         # ldecod_src/io_tiff.c:306:5
	cmpl	$2, %ecx
	movl	$1, %esi
.Ltmp784:
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	cmovgel	%ecx, %esi
	xorl	%ecx, %ecx
.Ltmp785:
	.p2align	4, 0x90
.LBB9_5:                                # %for.body16
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- $rcx
	.loc	0 228 19 is_stmt 1              # ldecod_src/io_tiff.c:228:19
	movq	ReadTIFFImage.t+16(%rip), %rdi
.Ltmp786:
	#DEBUG_VALUE: getU32:t <- undef
	leaq	1(%rdi), %r8
	movq	%r8, ReadTIFFImage.t+16(%rip)
	.loc	0 228 13 is_stmt 0              # ldecod_src/io_tiff.c:228:13
	movzbl	(%rdi), %r8d
.Ltmp787:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 229 19 is_stmt 1              # ldecod_src/io_tiff.c:229:19
	leaq	2(%rdi), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 229 13 is_stmt 0              # ldecod_src/io_tiff.c:229:13
	movzbl	1(%rdi), %r9d
.Ltmp788:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 230 19 is_stmt 1              # ldecod_src/io_tiff.c:230:19
	leaq	3(%rdi), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
	.loc	0 230 13 is_stmt 0              # ldecod_src/io_tiff.c:230:13
	movzbl	2(%rdi), %r10d
.Ltmp789:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 16 8] undef
	.loc	0 231 19 is_stmt 1              # ldecod_src/io_tiff.c:231:19
	leaq	4(%rdi), %r11
	movq	%r11, ReadTIFFImage.t+16(%rip)
.Ltmp790:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 24 8] undef
	.loc	0 233 1                         # ldecod_src/io_tiff.c:233:1
	movzbl	3(%rdi), %edi
	shll	$24, %edi
	shll	$16, %r10d
	shll	$8, %r9d
	orl	%r8d, %r9d
	orl	%r10d, %r9d
	orl	%edi, %r9d
.Ltmp791:
	.loc	0 308 12                        # ldecod_src/io_tiff.c:308:12
	movl	%r9d, (%rdx,%rcx,4)
.Ltmp792:
	.loc	0 306 24                        # ldecod_src/io_tiff.c:306:24
	incq	%rcx
.Ltmp793:
	#DEBUG_VALUE: getIntArray:i <- $rcx
	.loc	0 306 17 is_stmt 0              # ldecod_src/io_tiff.c:306:17
	cmpq	%rcx, %rsi
.Ltmp794:
	.loc	0 306 5                         # ldecod_src/io_tiff.c:306:5
	jne	.LBB9_5
.Ltmp795:
.LBB9_16:                               # %sw.epilog
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	.loc	0 314 9 is_stmt 1               # ldecod_src/io_tiff.c:314:9
	movq	%rax, ReadTIFFImage.t+16(%rip)
	.loc	0 315 1                         # ldecod_src/io_tiff.c:315:1
	retq
.Ltmp796:
.LBB9_6:                                # %for.cond4.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 300 17                        # ldecod_src/io_tiff.c:300:17
	testl	%ecx, %ecx
.Ltmp797:
	.loc	0 300 5 is_stmt 0               # ldecod_src/io_tiff.c:300:5
	jle	.LBB9_16
.Ltmp798:
# %bb.7:                                # %for.body6.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 300 17                        # ldecod_src/io_tiff.c:300:17
	movl	%ecx, %ecx
.Ltmp799:
	.loc	0 0 17                          # ldecod_src/io_tiff.c:0:17
	xorl	%esi, %esi
.Ltmp800:
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	.p2align	4, 0x90
.LBB9_8:                                # %for.body6
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- $rsi
	.loc	0 228 19 is_stmt 1              # ldecod_src/io_tiff.c:228:19
	movq	ReadTIFFImage.t+16(%rip), %rdi
.Ltmp801:
	#DEBUG_VALUE: getU32:t <- undef
	leaq	1(%rdi), %r8
	movq	%r8, ReadTIFFImage.t+16(%rip)
	.loc	0 228 13 is_stmt 0              # ldecod_src/io_tiff.c:228:13
	movzbl	(%rdi), %r8d
.Ltmp802:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 229 19 is_stmt 1              # ldecod_src/io_tiff.c:229:19
	leaq	2(%rdi), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 229 13 is_stmt 0              # ldecod_src/io_tiff.c:229:13
	movzbl	1(%rdi), %r9d
.Ltmp803:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 230 19 is_stmt 1              # ldecod_src/io_tiff.c:230:19
	leaq	3(%rdi), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
	.loc	0 230 13 is_stmt 0              # ldecod_src/io_tiff.c:230:13
	movzbl	2(%rdi), %r10d
.Ltmp804:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 16 8] undef
	.loc	0 231 19 is_stmt 1              # ldecod_src/io_tiff.c:231:19
	leaq	4(%rdi), %r11
	movq	%r11, ReadTIFFImage.t+16(%rip)
.Ltmp805:
	#DEBUG_VALUE: getU32:u <- [DW_OP_LLVM_fragment 24 8] undef
	.loc	0 233 1                         # ldecod_src/io_tiff.c:233:1
	movzbl	3(%rdi), %edi
	shll	$24, %edi
	shll	$16, %r10d
	shll	$8, %r9d
	orl	%r8d, %r9d
	orl	%r10d, %r9d
	orl	%edi, %r9d
.Ltmp806:
	.loc	0 302 12                        # ldecod_src/io_tiff.c:302:12
	movl	%r9d, (%rdx,%rsi,4)
.Ltmp807:
	.loc	0 300 22                        # ldecod_src/io_tiff.c:300:22
	incq	%rsi
.Ltmp808:
	#DEBUG_VALUE: getIntArray:i <- $rsi
	.loc	0 300 17 is_stmt 0              # ldecod_src/io_tiff.c:300:17
	cmpq	%rsi, %rcx
.Ltmp809:
	.loc	0 300 5                         # ldecod_src/io_tiff.c:300:5
	jne	.LBB9_8
	jmp	.LBB9_16
.Ltmp810:
.LBB9_9:                                # %for.cond.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 294 17 is_stmt 1              # ldecod_src/io_tiff.c:294:17
	testl	%ecx, %ecx
.Ltmp811:
	.loc	0 294 5 is_stmt 0               # ldecod_src/io_tiff.c:294:5
	jle	.LBB9_16
.Ltmp812:
# %bb.10:                               # %for.body.preheader
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $ecx
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 294 17                        # ldecod_src/io_tiff.c:294:17
	movl	%ecx, %esi
.Ltmp813:
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	.loc	0 294 5                         # ldecod_src/io_tiff.c:294:5
	cmpl	$1, %ecx
	jne	.LBB9_12
.Ltmp814:
# %bb.11:
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $esi
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	.loc	0 0 5                           # ldecod_src/io_tiff.c:0:5
	xorl	%ecx, %ecx
	.loc	0 294 5                         # ldecod_src/io_tiff.c:294:5
	jmp	.LBB9_14
.Ltmp815:
.LBB9_12:                               # %for.body.preheader.new
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $esi
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- 0
	movl	%esi, %edi
	andl	$2147483646, %edi               # imm = 0x7FFFFFFE
	xorl	%ecx, %ecx
.Ltmp816:
	.p2align	4, 0x90
.LBB9_13:                               # %for.body
                                        # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $esi
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- $rcx
	.loc	0 209 19 is_stmt 1              # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %r8
.Ltmp817:
	#DEBUG_VALUE: getU16:t <- undef
	leaq	1(%r8), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%r8), %r9d
.Ltmp818:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%r8), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
	.loc	0 210 13 is_stmt 0              # ldecod_src/io_tiff.c:210:13
	movzbl	1(%r8), %r8d
.Ltmp819:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10 is_stmt 1              # ldecod_src/io_tiff.c:211:10
	shll	$8, %r8d
	orl	%r9d, %r8d
.Ltmp820:
	.loc	0 296 12                        # ldecod_src/io_tiff.c:296:12
	movl	%r8d, (%rdx,%rcx,4)
.Ltmp821:
	#DEBUG_VALUE: getIntArray:i <- [DW_OP_constu 1, DW_OP_or, DW_OP_stack_value] $rcx
	.loc	0 209 19                        # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %r8
	leaq	1(%r8), %r9
	movq	%r9, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%r8), %r9d
.Ltmp822:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%r8), %r10
	movq	%r10, ReadTIFFImage.t+16(%rip)
	.loc	0 210 13 is_stmt 0              # ldecod_src/io_tiff.c:210:13
	movzbl	1(%r8), %r8d
.Ltmp823:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10 is_stmt 1              # ldecod_src/io_tiff.c:211:10
	shll	$8, %r8d
	orl	%r9d, %r8d
.Ltmp824:
	.loc	0 296 12                        # ldecod_src/io_tiff.c:296:12
	movl	%r8d, 4(%rdx,%rcx,4)
.Ltmp825:
	.loc	0 294 22                        # ldecod_src/io_tiff.c:294:22
	addq	$2, %rcx
.Ltmp826:
	#DEBUG_VALUE: getIntArray:i <- $rcx
	.loc	0 294 5 is_stmt 0               # ldecod_src/io_tiff.c:294:5
	cmpq	%rcx, %rdi
	jne	.LBB9_13
.Ltmp827:
.LBB9_14:                               # %sw.epilog.loopexit.unr-lcssa
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $esi
	#DEBUG_VALUE: getIntArray:mp <- $rax
	testb	$1, %sil
	je	.LBB9_16
.Ltmp828:
# %bb.15:                               # %for.body.epil
	#DEBUG_VALUE: getIntArray:offset <- [DW_OP_LLVM_entry_value 1] $edi
	#DEBUG_VALUE: getIntArray:type <- [DW_OP_LLVM_entry_value 1] $esi
	#DEBUG_VALUE: getIntArray:a <- $rdx
	#DEBUG_VALUE: getIntArray:n <- $esi
	#DEBUG_VALUE: getIntArray:mp <- $rax
	#DEBUG_VALUE: getIntArray:i <- $rcx
	.loc	0 209 19 is_stmt 1              # ldecod_src/io_tiff.c:209:19
	movq	ReadTIFFImage.t+16(%rip), %rsi
.Ltmp829:
	#DEBUG_VALUE: getIntArray:n <- [DW_OP_LLVM_entry_value 1] $ecx
	#DEBUG_VALUE: getU16:t <- undef
	leaq	1(%rsi), %rdi
	movq	%rdi, ReadTIFFImage.t+16(%rip)
	.loc	0 209 13 is_stmt 0              # ldecod_src/io_tiff.c:209:13
	movzbl	(%rsi), %edi
.Ltmp830:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 0 8] undef
	.loc	0 210 19 is_stmt 1              # ldecod_src/io_tiff.c:210:19
	leaq	2(%rsi), %r8
	movq	%r8, ReadTIFFImage.t+16(%rip)
	.loc	0 210 13 is_stmt 0              # ldecod_src/io_tiff.c:210:13
	movzbl	1(%rsi), %esi
.Ltmp831:
	#DEBUG_VALUE: getU16:u <- [DW_OP_LLVM_fragment 8 8] undef
	.loc	0 211 10 is_stmt 1              # ldecod_src/io_tiff.c:211:10
	shll	$8, %esi
	orl	%edi, %esi
.Ltmp832:
	.loc	0 296 12                        # ldecod_src/io_tiff.c:296:12
	movl	%esi, (%rdx,%rcx,4)
.Ltmp833:
	#DEBUG_VALUE: getIntArray:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
	.loc	0 314 9                         # ldecod_src/io_tiff.c:314:9
	movq	%rax, ReadTIFFImage.t+16(%rip)
	.loc	0 315 1                         # ldecod_src/io_tiff.c:315:1
	retq
.Ltmp834:
.Lfunc_end9:
	.size	getIntArray, .Lfunc_end9-getIntArray
	.cfi_endproc
                                        # -- End function
	.type	ReadTIFFImage.t,@object         # @ReadTIFFImage.t
	.local	ReadTIFFImage.t
	.comm	ReadTIFFImage.t,8744,8
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"ReadTIFFImage:  RGB input file has not been declared as interleaved but only interleaved is supported\n"
	.size	.L.str, 103

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"%s%0*d%s"
	.size	.L.str.1, 9

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"%s%*d%s"
	.size	.L.str.2, 8

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"ReadTIFFImage:  file name is too large\n"
	.size	.L.str.3, 40

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"ReadTIFFImage:  Tiff height (%u) different from encoder input height (%d) . Exiting...\n"
	.size	.L.str.4, 88

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"ReadTIFFImage:  Tiff width (%u) different from encoder input width (%d) . Exiting...\n"
	.size	.L.str.5, 86

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"ReadTIFFImage only supports pic_unit_size_on_disk of 8 or 16 not %d\n"
	.size	.L.str.6, 69

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"ReadTIFFImage:  Unsupported ColorFormat (%d)\n"
	.size	.L.str.7, 46

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"ReadTIFFImage only supports pic_unit_size_shift3 of 1 or 2 not %d\n"
	.size	.L.str.8, 67

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"Couldn't open to read:  %s\n"
	.size	.L.str.9, 28

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"First two bytes indicate:  Not a TIFF file\n"
	.size	.L.str.10, 44

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"ImageFileHeader.arbitrary != 42\n"
	.size	.L.str.11, 33

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"readDirectoryEntry:  ImageLength (%d) exceeds builtin maximum of %d\n"
	.size	.L.str.12, 69

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"BitsPerSample (only [3] supported)\n"
	.size	.L.str.13, 36

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"BitsPerSample must be the same for all samples\n"
	.size	.L.str.14, 48

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"Only 8 or 16 BitsPerSample is supported\n"
	.size	.L.str.15, 41

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"Only uncompressed TIFF files supported\n"
	.size	.L.str.16, 40

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"Only Orientation 1 is supported\n"
	.size	.L.str.17, 33

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"RGB_YUV_initialize:  Unsupported videoCode (%d)\n"
	.size	.L.str.18, 49

	.type	Coef,@object                    # @Coef
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
Coef:
	.quad	0x3fd322d0e5604189              # double 0.29899999999999999
	.quad	0x3fe2c8b439581062              # double 0.58699999999999997
	.quad	0x3fbd2f1a9fbe76c9              # double 0.114
	.quad	0x3fcb367a0f9096bc              # double 0.21260000000000001
	.quad	0x3fe6e2eb1c432ca5              # double 0.71519999999999995
	.quad	0x3fb27bb2fec56d5d              # double 0.0722
	.quad	0x3fd322d0e5604189              # double 0.29899999999999999
	.quad	0x3fe2c8b439581062              # double 0.58699999999999997
	.quad	0x3fbd2f1a9fbe76c9              # double 0.114
	.quad	0x3fd322d0e5604189              # double 0.29899999999999999
	.quad	0x3fe2c8b439581062              # double 0.58699999999999997
	.quad	0x3fbd2f1a9fbe76c9              # double 0.114
	.quad	0x3fd3333333333333              # double 0.29999999999999999
	.quad	0x3fe2e147ae147ae1              # double 0.58999999999999997
	.quad	0x3fbc28f5c28f5c29              # double 0.11
	.quad	0x3fd322d0e5604189              # double 0.29899999999999999
	.quad	0x3fe2c8b439581062              # double 0.58699999999999997
	.quad	0x3fbd2f1a9fbe76c9              # double 0.114
	.quad	0x3fd322d0e5604189              # double 0.29899999999999999
	.quad	0x3fe2c8b439581062              # double 0.58699999999999997
	.quad	0x3fbd2f1a9fbe76c9              # double 0.114
	.quad	0x3fcb22d0e5604189              # double 0.21199999999999999
	.quad	0x3fe66e978d4fdf3b              # double 0.70099999999999996
	.quad	0x3fb645a1cac08312              # double 0.086999999999999994
	.quad	0x3fcb37c1376d5497              # double 0.21263899999999999
	.quad	0x3fe6e2aa19439de5              # double 0.71516900000000005
	.quad	0x3fb27b2cc70867ae              # double 0.072192000000000006
	.size	Coef, 216

	.type	.L.str.19,@object               # @.str.19
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.19:
	.asciz	"ERROR: RGB_YUV_initialize: yr+yg+yb=%d sy=%u\n"
	.size	.L.str.19, 46

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"ERROR: RGB_YUV_initialize: ur+ug+ub=%d\n"
	.size	.L.str.20, 40

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"ERROR: RGB_YUV_initialize: vr+vg+vb=%d\n"
	.size	.L.str.21, 40

	.file	14 "ldecod_src/inc" "global.h" md5 0xc4ca3c417c5616a2ff6b6266e7376fc1
	.section	.debug_loclists,"",@progbits
	.long	.Ldebug_list_header_end0-.Ldebug_list_header_start0 # Length
.Ldebug_list_header_start0:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	93                              # Offset entry count
.Lloclists_table_base0:
	.long	.Ldebug_loc0-.Lloclists_table_base0
	.long	.Ldebug_loc1-.Lloclists_table_base0
	.long	.Ldebug_loc2-.Lloclists_table_base0
	.long	.Ldebug_loc3-.Lloclists_table_base0
	.long	.Ldebug_loc4-.Lloclists_table_base0
	.long	.Ldebug_loc5-.Lloclists_table_base0
	.long	.Ldebug_loc6-.Lloclists_table_base0
	.long	.Ldebug_loc7-.Lloclists_table_base0
	.long	.Ldebug_loc8-.Lloclists_table_base0
	.long	.Ldebug_loc9-.Lloclists_table_base0
	.long	.Ldebug_loc10-.Lloclists_table_base0
	.long	.Ldebug_loc11-.Lloclists_table_base0
	.long	.Ldebug_loc12-.Lloclists_table_base0
	.long	.Ldebug_loc13-.Lloclists_table_base0
	.long	.Ldebug_loc14-.Lloclists_table_base0
	.long	.Ldebug_loc15-.Lloclists_table_base0
	.long	.Ldebug_loc16-.Lloclists_table_base0
	.long	.Ldebug_loc17-.Lloclists_table_base0
	.long	.Ldebug_loc18-.Lloclists_table_base0
	.long	.Ldebug_loc19-.Lloclists_table_base0
	.long	.Ldebug_loc20-.Lloclists_table_base0
	.long	.Ldebug_loc21-.Lloclists_table_base0
	.long	.Ldebug_loc22-.Lloclists_table_base0
	.long	.Ldebug_loc23-.Lloclists_table_base0
	.long	.Ldebug_loc24-.Lloclists_table_base0
	.long	.Ldebug_loc25-.Lloclists_table_base0
	.long	.Ldebug_loc26-.Lloclists_table_base0
	.long	.Ldebug_loc27-.Lloclists_table_base0
	.long	.Ldebug_loc28-.Lloclists_table_base0
	.long	.Ldebug_loc29-.Lloclists_table_base0
	.long	.Ldebug_loc30-.Lloclists_table_base0
	.long	.Ldebug_loc31-.Lloclists_table_base0
	.long	.Ldebug_loc32-.Lloclists_table_base0
	.long	.Ldebug_loc33-.Lloclists_table_base0
	.long	.Ldebug_loc34-.Lloclists_table_base0
	.long	.Ldebug_loc35-.Lloclists_table_base0
	.long	.Ldebug_loc36-.Lloclists_table_base0
	.long	.Ldebug_loc37-.Lloclists_table_base0
	.long	.Ldebug_loc38-.Lloclists_table_base0
	.long	.Ldebug_loc39-.Lloclists_table_base0
	.long	.Ldebug_loc40-.Lloclists_table_base0
	.long	.Ldebug_loc41-.Lloclists_table_base0
	.long	.Ldebug_loc42-.Lloclists_table_base0
	.long	.Ldebug_loc43-.Lloclists_table_base0
	.long	.Ldebug_loc44-.Lloclists_table_base0
	.long	.Ldebug_loc45-.Lloclists_table_base0
	.long	.Ldebug_loc46-.Lloclists_table_base0
	.long	.Ldebug_loc47-.Lloclists_table_base0
	.long	.Ldebug_loc48-.Lloclists_table_base0
	.long	.Ldebug_loc49-.Lloclists_table_base0
	.long	.Ldebug_loc50-.Lloclists_table_base0
	.long	.Ldebug_loc51-.Lloclists_table_base0
	.long	.Ldebug_loc52-.Lloclists_table_base0
	.long	.Ldebug_loc53-.Lloclists_table_base0
	.long	.Ldebug_loc54-.Lloclists_table_base0
	.long	.Ldebug_loc55-.Lloclists_table_base0
	.long	.Ldebug_loc56-.Lloclists_table_base0
	.long	.Ldebug_loc57-.Lloclists_table_base0
	.long	.Ldebug_loc58-.Lloclists_table_base0
	.long	.Ldebug_loc59-.Lloclists_table_base0
	.long	.Ldebug_loc60-.Lloclists_table_base0
	.long	.Ldebug_loc61-.Lloclists_table_base0
	.long	.Ldebug_loc62-.Lloclists_table_base0
	.long	.Ldebug_loc63-.Lloclists_table_base0
	.long	.Ldebug_loc64-.Lloclists_table_base0
	.long	.Ldebug_loc65-.Lloclists_table_base0
	.long	.Ldebug_loc66-.Lloclists_table_base0
	.long	.Ldebug_loc67-.Lloclists_table_base0
	.long	.Ldebug_loc68-.Lloclists_table_base0
	.long	.Ldebug_loc69-.Lloclists_table_base0
	.long	.Ldebug_loc70-.Lloclists_table_base0
	.long	.Ldebug_loc71-.Lloclists_table_base0
	.long	.Ldebug_loc72-.Lloclists_table_base0
	.long	.Ldebug_loc73-.Lloclists_table_base0
	.long	.Ldebug_loc74-.Lloclists_table_base0
	.long	.Ldebug_loc75-.Lloclists_table_base0
	.long	.Ldebug_loc76-.Lloclists_table_base0
	.long	.Ldebug_loc77-.Lloclists_table_base0
	.long	.Ldebug_loc78-.Lloclists_table_base0
	.long	.Ldebug_loc79-.Lloclists_table_base0
	.long	.Ldebug_loc80-.Lloclists_table_base0
	.long	.Ldebug_loc81-.Lloclists_table_base0
	.long	.Ldebug_loc82-.Lloclists_table_base0
	.long	.Ldebug_loc83-.Lloclists_table_base0
	.long	.Ldebug_loc84-.Lloclists_table_base0
	.long	.Ldebug_loc85-.Lloclists_table_base0
	.long	.Ldebug_loc86-.Lloclists_table_base0
	.long	.Ldebug_loc87-.Lloclists_table_base0
	.long	.Ldebug_loc88-.Lloclists_table_base0
	.long	.Ldebug_loc89-.Lloclists_table_base0
	.long	.Ldebug_loc90-.Lloclists_table_base0
	.long	.Ldebug_loc91-.Lloclists_table_base0
	.long	.Ldebug_loc92-.Lloclists_table_base0
.Ldebug_loc0:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin1-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp2-.Lfunc_begin0           #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp2-.Lfunc_begin0           #   starting offset
	.uleb128 .Ltmp11-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp11-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end1-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc1:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc2:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp14-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	64                              # -64
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc3:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp15-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp15-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	168                             # -88
	.byte	127                             # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc4:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc5:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin2-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp18-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp18-.Lfunc_begin0          #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc6:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp13-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp21-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp114-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc7:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp13-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp21-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp34-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp47-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp58-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp59-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp70-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp79-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp82-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp91-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp97-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp100-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end2-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc8:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp14-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp19-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp21-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	172                             # -84
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp21-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp24-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp24-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	172                             # -84
	.byte	127                             # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc9:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp23-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp73-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp92-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	164                             # -92
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp94-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc10:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp19-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp23-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	132                             # -124
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp73-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp75-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	188                             # -68
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp75-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	132                             # -124
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp77-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp92-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	188                             # -68
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp92-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp114-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	132                             # -124
	.byte	127                             # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc11:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc12:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp101-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp104-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc13:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp102-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp105-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc14:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp23-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp36-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp36-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp48-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp48-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp60-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp95-.Lfunc_begin0          #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp103-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp106-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc15:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp25-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp29-.Lfunc_begin0          #   ending offset
	.byte	15                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp29-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp30-.Lfunc_begin0          #   ending offset
	.byte	14                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp30-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp32-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp33-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp35-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp37-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp41-.Lfunc_begin0          #   ending offset
	.byte	15                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp41-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp42-.Lfunc_begin0          #   ending offset
	.byte	14                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp42-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp44-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp46-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp49-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp50-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp53-.Lfunc_begin0          #   ending offset
	.byte	15                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp53-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp54-.Lfunc_begin0          #   ending offset
	.byte	14                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp54-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp56-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp58-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp60-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp61-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp65-.Lfunc_begin0          #   ending offset
	.byte	15                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp65-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp66-.Lfunc_begin0          #   ending offset
	.byte	14                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp66-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp68-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp70-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp77-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp78-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp82-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp83-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp87-.Lfunc_begin0          #   ending offset
	.byte	15                              # Loc expr size
	.byte	122                             # DW_OP_breg10
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp87-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp88-.Lfunc_begin0          #   ending offset
	.byte	14                              # Loc expr size
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp88-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp90-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp91-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp94-.Lfunc_begin0          #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp96-.Lfunc_begin0          #   starting offset
	.uleb128 .Ltmp100-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp107-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp110-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	128                             # 2048
	.byte	16                              # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp110-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp111-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 4096
	.byte	32                              # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp111-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp113-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc16:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp154-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp155-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc17:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp122-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp122-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	132                             # -124
	.byte	127                             # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc18:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp121-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp121-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp211-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	72                              # -56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc19:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp119-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc20:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp125-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc21:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin3-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp124-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp124-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp173-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	89                              # super-register DW_OP_reg9
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc22:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp118-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp120-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp123-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	8                               # 8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc23:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp180-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp185-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp199-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp202-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp204-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp212-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp216-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc24:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp125-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp127-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp129-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp138-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp180-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp187-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp189-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp199-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp202-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp204-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp212-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp216-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp233-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp236-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp246-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc25:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp119-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp138-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp169-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp171-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp172-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp176-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp180-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp180-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp181-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # -112
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp181-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp184-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp184-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp198-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	144                             # -112
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp198-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp199-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp199-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp202-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp202-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp204-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp212-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp212-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp214-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # -120
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp214-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp224-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp224-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp246-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # -120
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp246-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc26:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp126-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp129-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp130-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp134-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	128                             # 256
	.byte	2                               # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp134-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp135-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp135-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp137-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp139-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp140-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp143-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp144-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp148-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	128                             # 256
	.byte	2                               # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp148-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp149-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp149-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp151-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp153-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp156-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp159-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp161-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp165-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	115                             # DW_OP_breg3
	.byte	128                             # 256
	.byte	2                               # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp165-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp166-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp166-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp168-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp169-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp170-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp180-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp183-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp186-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp189-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp190-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp194-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	125                             # DW_OP_breg13
	.byte	128                             # 256
	.byte	2                               # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp194-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp195-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp195-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp197-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # super-register DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp199-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp201-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp232-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp234-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # super-register DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp238-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp242-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	116                             # DW_OP_breg4
	.byte	128                             # 256
	.byte	2                               # 
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp242-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp243-.Lfunc_begin0         #   ending offset
	.byte	14                              # Loc expr size
	.byte	126                             # DW_OP_breg14
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	16                              # DW_OP_constu
	.byte	128                             # 512
	.byte	4                               # 
	.byte	27                              # DW_OP_div
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp243-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp245-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc27:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp139-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp155-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp172-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp173-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp183-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp185-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp204-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp205-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp218-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp231-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc28:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc29:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp220-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp226-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc30:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp221-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp227-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	90                              # super-register DW_OP_reg10
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc31:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp138-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp152-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp152-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp171-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp222-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp228-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	91                              # super-register DW_OP_reg11
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc32:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp174-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp175-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp175-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp206-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	176                             # -80
	.byte	127                             # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp206-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp207-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp207-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end3-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	184                             # -72
	.byte	127                             # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc33:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp223-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp229-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc34:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp225-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp230-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc35:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp487-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp487-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp634-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp754-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	93                              # DW_OP_reg13
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc36:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp257-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp257-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp264-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp264-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp429-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp429-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc37:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp258-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp258-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp264-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp264-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp266-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp430-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp430-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp431-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp431-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	81                              # super-register DW_OP_reg1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc38:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp316-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp316-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp428-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp432-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp537-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp606-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	136                             # 136
	.byte	1                               # 
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc39:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin4-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp251-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp251-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp498-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp498-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp540-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp540-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp541-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	88                              # DW_OP_reg8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp633-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 208
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp756-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	94                              # DW_OP_reg14
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc40:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp578-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp578-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp591-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp597-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp604-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp746-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp747-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp748-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp748-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp754-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc41:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp248-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp660-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp660-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp665-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp665-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end4-.Lfunc_begin0      #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc42:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp256-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp259-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # super-register DW_OP_reg9
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc43:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp259-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp262-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc44:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc45:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 1280
	.byte	10                              # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc46:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	1                               # 1
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	3                               # 3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc47:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp266-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc48:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp268-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp271-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp271-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp292-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp292-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp293-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp295-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # super-register DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc49:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp271-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp275-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp275-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp292-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp295-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc50:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp283-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp290-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp295-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp315-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc51:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp321-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc52:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp318-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp321-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc53:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp328-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp371-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	92                              # super-register DW_OP_reg12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc54:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp330-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp371-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	95                              # super-register DW_OP_reg15
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc55:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp331-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp338-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp338-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp339-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp340-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp343-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp348-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp352-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp353-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp358-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp359-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp360-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp361-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp364-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp364-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp365-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp366-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp367-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc56:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp326-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp332-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	83                              # super-register DW_OP_reg3
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc57:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp373-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp374-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc58:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp382-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp384-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp396-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp399-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp407-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp407-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp409-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp409-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp411-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp411-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp413-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp413-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp415-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	8                               # 8
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp415-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp417-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	10                              # 10
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp417-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp419-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp419-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp421-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	14                              # 14
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp421-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp424-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp451-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp451-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp456-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp456-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc59:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp379-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp382-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp382-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp436-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp436-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp464-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc60:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp445-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc61:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp389-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp390-.Lfunc_begin0         #   ending offset
	.byte	13                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	122                             # DW_OP_breg10
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp390-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp395-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp399-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp404-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp406-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp408-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp410-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	2                               # 2
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp410-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp412-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp412-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp414-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	4                               # 4
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp414-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp416-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	5                               # 5
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp416-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp418-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp420-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	7                               # 7
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp422-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	8                               # 8
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp425-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc62:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp387-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp398-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp399-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp401-.Lfunc_begin0         #   ending offset
	.byte	23                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp401-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp402-.Lfunc_begin0         #   ending offset
	.byte	26                              # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	17                              # DW_OP_consts
	.byte	127                             # -1
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	1                               # 1
	.byte	120                             # DW_OP_breg8
	.byte	0                               # 0
	.byte	16                              # DW_OP_constu
	.byte	255                             # 4294967295
	.byte	255                             # 
	.byte	255                             # 
	.byte	255                             # 
	.byte	15                              # 
	.byte	26                              # DW_OP_and
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp404-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp405-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp408-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp410-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp410-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp412-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp412-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp414-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp414-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp416-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	4                               # 4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp416-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp418-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	5                               # 5
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp418-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp420-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp420-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp421-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	112                             # DW_OP_breg0
	.byte	7                               # 7
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp424-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp442-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp447-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc63:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp433-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc64:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp472-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp501-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp501-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp665-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp665-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp666-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp694-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc65:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp473-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp499-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp499-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp575-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp575-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp576-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp576-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp594-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp594-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp595-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp595-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp695-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp727-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp747-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp749-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # super-register DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	12                              # 12
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc66:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp482-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # super-register DW_OP_reg1
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc67:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp639-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp640-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # super-register DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc68:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc69:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp481-.Lfunc_begin0         #   ending offset
	.byte	10                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp481-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp485-.Lfunc_begin0         #   ending offset
	.byte	29                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	102                             # DW_OP_reg22
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	99                              # DW_OP_reg19
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp485-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp491-.Lfunc_begin0         #   ending offset
	.byte	26                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	12                              # 12
	.byte	99                              # DW_OP_reg19
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp491-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp500-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp500-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp508-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp508-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp510-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp510-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp514-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	119                             # DW_OP_breg7
	.byte	208                             # 336
	.byte	2                               # 
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp514-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp516-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	24                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	18                              # 18
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	44                              # 44
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp518-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	18                              # 18
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	40                              # 40
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp518-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp521-.Lfunc_begin0         #   ending offset
	.byte	30                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	18                              # 18
	.byte	85                              # super-register DW_OP_reg5
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	36                              # 36
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp521-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp522-.Lfunc_begin0         #   ending offset
	.byte	27                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	22                              # 22
	.byte	81                              # super-register DW_OP_reg1
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	36                              # 36
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp522-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp523-.Lfunc_begin0         #   ending offset
	.byte	24                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	26                              # 26
	.byte	84                              # super-register DW_OP_reg4
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	36                              # 36
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp523-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	94                              # super-register DW_OP_reg14
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp571-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	19                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	66                              # 66
	.byte	91                              # super-register DW_OP_reg11
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp613-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	14                              # 14
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	52                              # 52
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp614-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp614-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp625-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	18                              # 18
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	48                              # 48
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp625-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp626-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp626-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp631-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	14                              # 14
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	52                              # 52
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	18                              # 18
	.byte	88                              # super-register DW_OP_reg8
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	48                              # 48
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp635-.Lfunc_begin0         #   ending offset
	.byte	26                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	12                              # 12
	.byte	99                              # DW_OP_reg19
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp635-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	12                              # 12
	.byte	99                              # DW_OP_reg19
	.byte	147                             # DW_OP_piece
	.byte	8                               # 8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp639-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp639-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp640-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp640-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp641-.Lfunc_begin0         #   ending offset
	.byte	21                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	80                              # super-register DW_OP_reg0
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	147                             # DW_OP_piece
	.byte	64                              # 64
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp641-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp755-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp756-.Lfunc_begin0         #   ending offset
	.byte	16                              # Loc expr size
	.byte	48                              # DW_OP_lit0
	.byte	32                              # DW_OP_not
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	2                               # 2
	.byte	147                             # DW_OP_piece
	.byte	70                              # 70
	.byte	16                              # DW_OP_constu
	.byte	128                             # 536879104
	.byte	192                             # 
	.byte	128                             # 
	.byte	128                             # 
	.byte	2                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	147                             # DW_OP_piece
	.byte	4                               # 4
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc70:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp479-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp505-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 65536
	.byte	128                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 65536
	.byte	128                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	128                             # 65536
	.byte	128                             # 
	.byte	4                               # 
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc71:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp486-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp492-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc72:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp518-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp518-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp615-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp615-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc73:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp524-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp524-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	125                             # DW_OP_breg13
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	216                             # 88
	.byte	0                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp611-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp611-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	113                             # DW_OP_breg1
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc74:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp516-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp516-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp614-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp614-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc75:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp517-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp517-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp615-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp615-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc76:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp586-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc77:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp519-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp519-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	127                             # DW_OP_breg15
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp616-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp616-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc78:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp515-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp520-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp520-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp525-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	123                             # DW_OP_breg11
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	128                             # 128
	.byte	1                               # 
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp610-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp612-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp613-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp624-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp624-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp631-.Lfunc_begin0         #   ending offset
	.byte	15                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp631-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	12                              # Loc expr size
	.byte	117                             # DW_OP_breg5
	.byte	0                               # 0
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	27                              # DW_OP_div
	.byte	17                              # DW_OP_consts
	.byte	6                               # 6
	.byte	30                              # DW_OP_mul
	.byte	116                             # DW_OP_breg4
	.byte	0                               # 0
	.byte	34                              # DW_OP_plus
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc79:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp586-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc80:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp574-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp586-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp592-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp600-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	24                              # 24
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc81:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp503-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp515-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp608-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp610-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc82:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp578-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp695-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	86                              # DW_OP_reg6
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc83:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp581-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp582-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp582-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp666-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp686-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp693-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc84:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp584-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp584-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp666-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	16                              # 16
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp687-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp688-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp689-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp693-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	32                              # 32
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc85:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp653-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp653-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp654-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp654-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp655-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	121                             # DW_OP_breg9
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp655-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp658-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	89                              # DW_OP_reg9
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp671-.Lfunc_begin0         #   ending offset
	.byte	2                               # Loc expr size
	.byte	119                             # DW_OP_breg7
	.byte	56                              # 56
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp671-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp676-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp676-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp677-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	6                               # 6
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp677-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp678-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	12                              # 12
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp678-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp679-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	120                             # DW_OP_breg8
	.byte	18                              # 18
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp679-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	88                              # DW_OP_reg8
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc86:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp583-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp591-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp598-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp604-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp642-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp647-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp647-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp650-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp651-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp652-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp652-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp653-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp653-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp654-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp654-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp656-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp656-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp658-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp666-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp671-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp671-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp674-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp675-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp676-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp676-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp677-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp677-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp678-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp678-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp680-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp680-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp682-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp697-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp708-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp708-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp711-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp712-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp713-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp713-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp714-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp714-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp715-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp715-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp717-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp717-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp718-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp718-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp727-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp727-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp730-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp731-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp732-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp732-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp733-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp733-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp734-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	2                               # 2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp734-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp736-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	113                             # DW_OP_breg1
	.byte	3                               # 3
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp736-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp738-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	81                              # DW_OP_reg1
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp738-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp742-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc87:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp682-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp689-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc88:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp776-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	85                              # super-register DW_OP_reg5
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp777-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	85                              # super-register DW_OP_reg5
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc89:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp784-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp784-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp810-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp813-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp813-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	84                              # super-register DW_OP_reg4
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc90:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Lfunc_begin9-.Lfunc_begin0    #   starting offset
	.uleb128 .Ltmp783-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp783-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp796-.Lfunc_begin0         #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp799-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp814-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # super-register DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp814-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp829-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # super-register DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp829-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	4                               # Loc expr size
	.byte	163                             # DW_OP_entry_value
	.byte	1                               # 1
	.byte	82                              # super-register DW_OP_reg2
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc91:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp775-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	1                               # Loc expr size
	.byte	80                              # DW_OP_reg0
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_loc92:
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp780-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp785-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp785-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp795-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp796-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp800-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp800-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp810-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	84                              # DW_OP_reg4
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp810-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp816-.Lfunc_begin0         #   ending offset
	.byte	3                               # Loc expr size
	.byte	17                              # DW_OP_consts
	.byte	0                               # 0
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp821-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp826-.Lfunc_begin0         #   ending offset
	.byte	5                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	0                               # 0
	.byte	49                              # DW_OP_lit1
	.byte	33                              # DW_OP_or
	.byte	159                             # DW_OP_stack_value
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp826-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp827-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp828-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp833-.Lfunc_begin0         #   ending offset
	.byte	1                               # Loc expr size
	.byte	82                              # DW_OP_reg2
	.byte	4                               # DW_LLE_offset_pair
	.uleb128 .Ltmp833-.Lfunc_begin0         #   starting offset
	.uleb128 .Lfunc_end9-.Lfunc_begin0      #   ending offset
	.byte	3                               # Loc expr size
	.byte	114                             # DW_OP_breg2
	.byte	1                               # 1
	.byte	159                             # DW_OP_stack_value
	.byte	0                               # DW_LLE_end_of_list
.Ldebug_list_header_end0:
	.section	.debug_abbrev,"",@progbits
	.byte	1                               # Abbreviation Code
	.byte	17                              # DW_TAG_compile_unit
	.byte	1                               # DW_CHILDREN_yes
	.byte	37                              # DW_AT_producer
	.byte	37                              # DW_FORM_strx1
	.byte	19                              # DW_AT_language
	.byte	5                               # DW_FORM_data2
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	114                             # DW_AT_str_offsets_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	16                              # DW_AT_stmt_list
	.byte	23                              # DW_FORM_sec_offset
	.byte	27                              # DW_AT_comp_dir
	.byte	37                              # DW_FORM_strx1
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	115                             # DW_AT_addr_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	116                             # DW_AT_rnglists_base
	.byte	23                              # DW_FORM_sec_offset
	.ascii	"\214\001"                      # DW_AT_loclists_base
	.byte	23                              # DW_FORM_sec_offset
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	2                               # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	3                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	4                               # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	5                               # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	6                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	7                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	8                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	9                               # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	10                              # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	11                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	12                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	13                              # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	14                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	15                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	16                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	1                               # DW_CHILDREN_yes
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	17                              # Abbreviation Code
	.byte	29                              # DW_TAG_inlined_subroutine
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	85                              # DW_AT_ranges
	.byte	35                              # DW_FORM_rnglistx
	.byte	88                              # DW_AT_call_file
	.byte	11                              # DW_FORM_data1
	.byte	89                              # DW_AT_call_line
	.byte	5                               # DW_FORM_data2
	.byte	87                              # DW_AT_call_column
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	18                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.byte	127                             # DW_AT_call_origin
	.byte	19                              # DW_FORM_ref4
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	19                              # Abbreviation Code
	.byte	72                              # DW_TAG_call_site
	.byte	0                               # DW_CHILDREN_no
	.ascii	"\203\001"                      # DW_AT_call_target
	.byte	24                              # DW_FORM_exprloc
	.byte	125                             # DW_AT_call_return_pc
	.byte	27                              # DW_FORM_addrx
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	20                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	21                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	22                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	23                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	24                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	25                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	26                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	27                              # Abbreviation Code
	.byte	1                               # DW_TAG_array_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	28                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	29                              # Abbreviation Code
	.byte	36                              # DW_TAG_base_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	62                              # DW_AT_encoding
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	30                              # Abbreviation Code
	.byte	33                              # DW_TAG_subrange_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	55                              # DW_AT_count
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	31                              # Abbreviation Code
	.byte	21                              # DW_TAG_subroutine_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	32                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	33                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	34                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	35                              # Abbreviation Code
	.byte	38                              # DW_TAG_const_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	36                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	37                              # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	13                              # DW_FORM_sdata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	38                              # Abbreviation Code
	.byte	4                               # DW_TAG_enumeration_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	39                              # Abbreviation Code
	.byte	40                              # DW_TAG_enumerator
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	28                              # DW_AT_const_value
	.byte	15                              # DW_FORM_udata
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	40                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	41                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	42                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	34                              # DW_FORM_loclistx
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	43                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	44                              # Abbreviation Code
	.byte	15                              # DW_TAG_pointer_type
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	45                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	46                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	47                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	48                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	49                              # Abbreviation Code
	.byte	10                              # DW_TAG_label
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	50                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	51                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	52                              # Abbreviation Code
	.byte	23                              # DW_TAG_union_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	53                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	54                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	32                              # DW_AT_inline
	.byte	33                              # DW_FORM_implicit_const
	.byte	1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	55                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	56                              # Abbreviation Code
	.byte	24                              # DW_TAG_unspecified_parameters
	.byte	0                               # DW_CHILDREN_no
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	57                              # Abbreviation Code
	.byte	55                              # DW_TAG_restrict_type
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	58                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	59                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	60                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	61                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	62                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	63                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	60                              # DW_AT_declaration
	.byte	25                              # DW_FORM_flag_present
	.byte	63                              # DW_AT_external
	.byte	25                              # DW_FORM_flag_present
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	64                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	65                              # Abbreviation Code
	.byte	5                               # DW_TAG_formal_parameter
	.byte	0                               # DW_CHILDREN_no
	.byte	2                               # DW_AT_location
	.byte	24                              # DW_FORM_exprloc
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	66                              # Abbreviation Code
	.byte	52                              # DW_TAG_variable
	.byte	0                               # DW_CHILDREN_no
	.byte	49                              # DW_AT_abstract_origin
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	67                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	68                              # Abbreviation Code
	.byte	46                              # DW_TAG_subprogram
	.byte	1                               # DW_CHILDREN_yes
	.byte	17                              # DW_AT_low_pc
	.byte	27                              # DW_FORM_addrx
	.byte	18                              # DW_AT_high_pc
	.byte	6                               # DW_FORM_data4
	.byte	64                              # DW_AT_frame_base
	.byte	24                              # DW_FORM_exprloc
	.byte	122                             # DW_AT_call_all_calls
	.byte	25                              # DW_FORM_flag_present
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	39                              # DW_AT_prototyped
	.byte	25                              # DW_FORM_flag_present
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	69                              # Abbreviation Code
	.byte	23                              # DW_TAG_union_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	11                              # DW_AT_byte_size
	.byte	11                              # DW_FORM_data1
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	70                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	71                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	72                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	73                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	37                              # DW_FORM_strx1
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	74                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	5                               # DW_FORM_data2
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	75                              # Abbreviation Code
	.byte	22                              # DW_TAG_typedef
	.byte	0                               # DW_CHILDREN_no
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	76                              # Abbreviation Code
	.byte	19                              # DW_TAG_structure_type
	.byte	1                               # DW_CHILDREN_yes
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	11                              # DW_AT_byte_size
	.byte	5                               # DW_FORM_data2
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	77                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	11                              # DW_FORM_data1
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	78                              # Abbreviation Code
	.byte	13                              # DW_TAG_member
	.byte	0                               # DW_CHILDREN_no
	.byte	3                               # DW_AT_name
	.byte	38                              # DW_FORM_strx2
	.byte	73                              # DW_AT_type
	.byte	19                              # DW_FORM_ref4
	.byte	58                              # DW_AT_decl_file
	.byte	11                              # DW_FORM_data1
	.byte	59                              # DW_AT_decl_line
	.byte	11                              # DW_FORM_data1
	.byte	56                              # DW_AT_data_member_location
	.byte	5                               # DW_FORM_data2
	.byte	0                               # EOM(1)
	.byte	0                               # EOM(2)
	.byte	0                               # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	5                               # DWARF version number
	.byte	1                               # DWARF Unit Type
	.byte	8                               # Address Size (in bytes)
	.long	.debug_abbrev                   # Offset Into Abbrev. Section
	.byte	1                               # Abbrev [1] 0xc:0x12ed DW_TAG_compile_unit
	.byte	0                               # DW_AT_producer
	.short	12                              # DW_AT_language
	.byte	1                               # DW_AT_name
	.long	.Lstr_offsets_base0             # DW_AT_str_offsets_base
	.long	.Lline_table_start0             # DW_AT_stmt_list
	.byte	2                               # DW_AT_comp_dir
	.byte	24                              # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin0       # DW_AT_high_pc
	.long	.Laddr_table_base0              # DW_AT_addr_base
	.long	.Lrnglists_table_base0          # DW_AT_rnglists_base
	.long	.Lloclists_table_base0          # DW_AT_loclists_base
	.byte	2                               # Abbrev [2] 0x2b:0x340 DW_TAG_subprogram
	.byte	30                              # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	196                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_external
	.byte	3                               # Abbrev [3] 0x3b:0xc DW_TAG_variable
	.byte	3                               # DW_AT_name
	.long	875                             # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1017                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	0
	.byte	4                               # Abbrev [4] 0x47:0xa DW_TAG_formal_parameter
	.byte	35                              # DW_AT_location
	.byte	218                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
	.long	4069                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x51:0xb DW_TAG_formal_parameter
	.byte	36                              # DW_AT_location
	.short	288                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
	.long	4836                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x5c:0xb DW_TAG_formal_parameter
	.byte	37                              # DW_AT_location
	.short	289                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x67:0xa DW_TAG_formal_parameter
	.byte	38                              # DW_AT_location
	.byte	228                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
	.long	4841                            # DW_AT_type
	.byte	5                               # Abbrev [5] 0x71:0xb DW_TAG_formal_parameter
	.byte	39                              # DW_AT_location
	.short	290                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1015                            # DW_AT_decl_line
	.long	4846                            # DW_AT_type
	.byte	6                               # Abbrev [6] 0x7c:0xd DW_TAG_variable
	.byte	3                               # DW_AT_location
	.byte	145
	.ascii	"\200\n"
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1018                            # DW_AT_decl_line
	.long	4057                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0x89:0xb DW_TAG_variable
	.byte	40                              # DW_AT_location
	.short	291                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1022                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0x94:0xb DW_TAG_variable
	.byte	41                              # DW_AT_location
	.short	292                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1022                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0x9f:0xb DW_TAG_variable
	.byte	42                              # DW_AT_location
	.short	293                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xaa:0xa DW_TAG_variable
	.byte	43                              # DW_AT_location
	.byte	102                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xb4:0xa DW_TAG_variable
	.byte	64                              # DW_AT_location
	.byte	4                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1022                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0xbe:0xb DW_TAG_variable
	.byte	65                              # DW_AT_location
	.short	294                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	7                               # Abbrev [7] 0xc9:0xb DW_TAG_variable
	.byte	69                              # DW_AT_location
	.short	295                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1020                            # DW_AT_decl_line
	.long	2851                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xd4:0xa DW_TAG_variable
	.byte	82                              # DW_AT_location
	.byte	137                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xde:0xa DW_TAG_variable
	.byte	83                              # DW_AT_location
	.byte	138                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xe8:0xa DW_TAG_variable
	.byte	84                              # DW_AT_location
	.byte	139                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xf2:0xa DW_TAG_variable
	.byte	85                              # DW_AT_location
	.byte	101                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1023                            # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xfc:0xa DW_TAG_variable
	.byte	86                              # DW_AT_location
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x106:0xa DW_TAG_variable
	.byte	87                              # DW_AT_location
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x110:0x9 DW_TAG_variable
	.byte	235                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x119:0x9 DW_TAG_variable
	.byte	234                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1019                            # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	10                              # Abbrev [10] 0x122:0x6 DW_TAG_label
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	1167                            # DW_AT_decl_line
	.byte	70                              # DW_AT_low_pc
	.byte	11                              # Abbrev [11] 0x128:0xf8 DW_TAG_inlined_subroutine
	.long	2431                            # DW_AT_abstract_origin
	.byte	0                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1062                            # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	12                              # Abbrev [12] 0x132:0x6 DW_TAG_formal_parameter
	.byte	44                              # DW_AT_location
	.long	2449                            # DW_AT_abstract_origin
	.byte	13                              # Abbrev [13] 0x138:0x6 DW_TAG_label
	.long	2458                            # DW_AT_abstract_origin
	.byte	80                              # DW_AT_low_pc
	.byte	11                              # Abbrev [11] 0x13e:0x2f DW_TAG_inlined_subroutine
	.long	2334                            # DW_AT_abstract_origin
	.byte	1                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	632                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	12                              # Abbrev [12] 0x148:0x6 DW_TAG_formal_parameter
	.byte	45                              # DW_AT_location
	.long	2352                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x14e:0x6 DW_TAG_variable
	.byte	46                              # DW_AT_location
	.long	2361                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x154:0x6 DW_TAG_variable
	.byte	47                              # DW_AT_location
	.long	2370                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x15a:0x6 DW_TAG_variable
	.byte	48                              # DW_AT_location
	.long	2379                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x160:0x6 DW_TAG_variable
	.byte	49                              # DW_AT_location
	.long	2388                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x166:0x6 DW_TAG_variable
	.byte	50                              # DW_AT_location
	.long	2397                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0x16d:0x35 DW_TAG_inlined_subroutine
	.long	2529                            # DW_AT_abstract_origin
	.byte	2                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	634                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x177:0xe DW_TAG_inlined_subroutine
	.long	2469                            # DW_AT_abstract_origin
	.byte	31                              # DW_AT_low_pc
	.long	.Ltmp302-.Ltmp299               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	609                             # DW_AT_call_line
	.byte	31                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x185:0xe DW_TAG_inlined_subroutine
	.long	2469                            # DW_AT_abstract_origin
	.byte	32                              # DW_AT_low_pc
	.long	.Ltmp306-.Ltmp303               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	610                             # DW_AT_call_line
	.byte	37                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0x193:0xe DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	33                              # DW_AT_low_pc
	.long	.Ltmp312-.Ltmp307               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	611                             # DW_AT_call_line
	.byte	19                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	16                              # Abbrev [16] 0x1a2:0x3e DW_TAG_inlined_subroutine
	.long	2608                            # DW_AT_abstract_origin
	.byte	34                              # DW_AT_low_pc
	.long	.Ltmp371-.Ltmp317               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	636                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x1b0:0x6 DW_TAG_variable
	.byte	51                              # DW_AT_location
	.long	2626                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1b6:0x6 DW_TAG_variable
	.byte	52                              # DW_AT_location
	.long	2635                            # DW_AT_abstract_origin
	.byte	11                              # Abbrev [11] 0x1bc:0x23 DW_TAG_inlined_subroutine
	.long	2645                            # DW_AT_abstract_origin
	.byte	3                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	594                             # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x1c6:0x6 DW_TAG_variable
	.byte	53                              # DW_AT_location
	.long	2663                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1cc:0x6 DW_TAG_variable
	.byte	54                              # DW_AT_location
	.long	2672                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1d2:0x6 DW_TAG_variable
	.byte	55                              # DW_AT_location
	.long	2681                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1d8:0x6 DW_TAG_variable
	.byte	56                              # DW_AT_location
	.long	2690                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0x1e0:0x3f DW_TAG_inlined_subroutine
	.long	2700                            # DW_AT_abstract_origin
	.byte	4                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	638                             # DW_AT_call_line
	.byte	7                               # DW_AT_call_column
	.byte	14                              # Abbrev [14] 0x1ea:0x6 DW_TAG_variable
	.byte	57                              # DW_AT_location
	.long	2718                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1f0:0x6 DW_TAG_variable
	.byte	58                              # DW_AT_location
	.long	2727                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1f6:0x6 DW_TAG_variable
	.byte	59                              # DW_AT_location
	.long	2736                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x1fc:0x6 DW_TAG_variable
	.byte	60                              # DW_AT_location
	.long	2745                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x202:0x6 DW_TAG_variable
	.byte	61                              # DW_AT_location
	.long	2754                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x208:0x6 DW_TAG_variable
	.byte	62                              # DW_AT_location
	.long	2763                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x20e:0x6 DW_TAG_variable
	.byte	63                              # DW_AT_location
	.long	2772                            # DW_AT_abstract_origin
	.byte	17                              # Abbrev [17] 0x214:0xa DW_TAG_inlined_subroutine
	.long	2469                            # DW_AT_abstract_origin
	.byte	5                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	570                             # DW_AT_call_line
	.byte	25                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0x220:0x29 DW_TAG_inlined_subroutine
	.long	2782                            # DW_AT_abstract_origin
	.byte	6                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1090                            # DW_AT_call_line
	.byte	9                               # DW_AT_call_column
	.byte	12                              # Abbrev [12] 0x22a:0x6 DW_TAG_formal_parameter
	.byte	66                              # DW_AT_location
	.long	2800                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x230:0x6 DW_TAG_formal_parameter
	.byte	67                              # DW_AT_location
	.long	2809                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x236:0x6 DW_TAG_formal_parameter
	.byte	68                              # DW_AT_location
	.long	2818                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x23c:0x6 DW_TAG_variable
	.byte	70                              # DW_AT_location
	.long	2827                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x242:0x6 DW_TAG_variable
	.byte	71                              # DW_AT_location
	.long	2836                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	11                              # Abbrev [11] 0x249:0x47 DW_TAG_inlined_subroutine
	.long	3054                            # DW_AT_abstract_origin
	.byte	7                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	1092                            # DW_AT_call_line
	.byte	5                               # DW_AT_call_column
	.byte	12                              # Abbrev [12] 0x253:0x6 DW_TAG_formal_parameter
	.byte	74                              # DW_AT_location
	.long	3068                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x259:0x6 DW_TAG_formal_parameter
	.byte	75                              # DW_AT_location
	.long	3077                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x25f:0x6 DW_TAG_formal_parameter
	.byte	72                              # DW_AT_location
	.long	3086                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x265:0x6 DW_TAG_formal_parameter
	.byte	76                              # DW_AT_location
	.long	3113                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x26b:0x6 DW_TAG_formal_parameter
	.byte	77                              # DW_AT_location
	.long	3122                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x271:0x6 DW_TAG_formal_parameter
	.byte	78                              # DW_AT_location
	.long	3131                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x277:0x6 DW_TAG_formal_parameter
	.byte	73                              # DW_AT_location
	.long	3140                            # DW_AT_abstract_origin
	.byte	12                              # Abbrev [12] 0x27d:0x6 DW_TAG_formal_parameter
	.byte	79                              # DW_AT_location
	.long	3149                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x283:0x6 DW_TAG_variable
	.byte	80                              # DW_AT_location
	.long	3158                            # DW_AT_abstract_origin
	.byte	14                              # Abbrev [14] 0x289:0x6 DW_TAG_variable
	.byte	81                              # DW_AT_location
	.long	3167                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	18                              # Abbrev [18] 0x290:0x6 DW_TAG_call_site
	.long	3177                            # DW_AT_call_origin
	.byte	35                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x296:0x6 DW_TAG_call_site
	.long	3225                            # DW_AT_call_origin
	.byte	36                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x29c:0x6 DW_TAG_call_site
	.long	3244                            # DW_AT_call_origin
	.byte	37                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2a2:0x6 DW_TAG_call_site
	.long	3264                            # DW_AT_call_origin
	.byte	38                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2a8:0x6 DW_TAG_call_site
	.long	3264                            # DW_AT_call_origin
	.byte	39                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2ae:0x6 DW_TAG_call_site
	.long	3297                            # DW_AT_call_origin
	.byte	40                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2b4:0x6 DW_TAG_call_site
	.long	3317                            # DW_AT_call_origin
	.byte	41                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2ba:0x6 DW_TAG_call_site
	.long	3358                            # DW_AT_call_origin
	.byte	42                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2c0:0x6 DW_TAG_call_site
	.long	3358                            # DW_AT_call_origin
	.byte	43                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2c6:0x6 DW_TAG_call_site
	.long	3373                            # DW_AT_call_origin
	.byte	44                              # DW_AT_call_return_pc
	.byte	19                              # Abbrev [19] 0x2cc:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	82
	.byte	45                              # DW_AT_call_return_pc
	.byte	19                              # Abbrev [19] 0x2d0:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	96
	.byte	46                              # DW_AT_call_return_pc
	.byte	19                              # Abbrev [19] 0x2d4:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	96
	.byte	47                              # DW_AT_call_return_pc
	.byte	19                              # Abbrev [19] 0x2d8:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	96
	.byte	48                              # DW_AT_call_return_pc
	.byte	19                              # Abbrev [19] 0x2dc:0x4 DW_TAG_call_site
	.byte	1                               # DW_AT_call_target
	.byte	96
	.byte	49                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2e0:0x6 DW_TAG_call_site
	.long	3373                            # DW_AT_call_origin
	.byte	50                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2e6:0x6 DW_TAG_call_site
	.long	3746                            # DW_AT_call_origin
	.byte	51                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2ec:0x6 DW_TAG_call_site
	.long	3746                            # DW_AT_call_origin
	.byte	52                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2f2:0x6 DW_TAG_call_site
	.long	3746                            # DW_AT_call_origin
	.byte	53                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2f8:0x6 DW_TAG_call_site
	.long	3297                            # DW_AT_call_origin
	.byte	54                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x2fe:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	55                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x304:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	56                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x30a:0x6 DW_TAG_call_site
	.long	3868                            # DW_AT_call_origin
	.byte	57                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x310:0x6 DW_TAG_call_site
	.long	3872                            # DW_AT_call_origin
	.byte	58                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x316:0x6 DW_TAG_call_site
	.long	3872                            # DW_AT_call_origin
	.byte	59                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x31c:0x6 DW_TAG_call_site
	.long	3373                            # DW_AT_call_origin
	.byte	60                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x322:0x6 DW_TAG_call_site
	.long	3872                            # DW_AT_call_origin
	.byte	61                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x328:0x6 DW_TAG_call_site
	.long	1931                            # DW_AT_call_origin
	.byte	62                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x32e:0x6 DW_TAG_call_site
	.long	2118                            # DW_AT_call_origin
	.byte	63                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x334:0x6 DW_TAG_call_site
	.long	1931                            # DW_AT_call_origin
	.byte	64                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x33a:0x6 DW_TAG_call_site
	.long	2118                            # DW_AT_call_origin
	.byte	65                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x340:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	66                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x346:0x6 DW_TAG_call_site
	.long	1931                            # DW_AT_call_origin
	.byte	67                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x34c:0x6 DW_TAG_call_site
	.long	1931                            # DW_AT_call_origin
	.byte	68                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x352:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	69                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x358:0x6 DW_TAG_call_site
	.long	3373                            # DW_AT_call_origin
	.byte	70                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x35e:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	71                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x364:0x6 DW_TAG_call_site
	.long	3373                            # DW_AT_call_origin
	.byte	72                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x36b:0x8 DW_TAG_typedef
	.long	883                             # DW_AT_type
	.byte	33                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	21                              # Abbrev [21] 0x373:0xa5 DW_TAG_structure_type
	.byte	33                              # DW_AT_name
	.short	8744                            # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	71                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x379:0x9 DW_TAG_member
	.byte	4                               # DW_AT_name
	.long	1048                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x382:0x9 DW_TAG_member
	.byte	7                               # DW_AT_name
	.long	1065                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	75                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x38b:0x9 DW_TAG_member
	.byte	10                              # DW_AT_name
	.long	1065                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x394:0x9 DW_TAG_member
	.byte	11                              # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x39d:0x9 DW_TAG_member
	.byte	13                              # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	80                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3a6:0x9 DW_TAG_member
	.byte	14                              # DW_AT_name
	.long	1086                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	82                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3af:0x9 DW_TAG_member
	.byte	21                              # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	85                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3b8:0x9 DW_TAG_member
	.byte	22                              # DW_AT_name
	.long	1139                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	87                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3c1:0x9 DW_TAG_member
	.byte	24                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	88                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3ca:0x9 DW_TAG_member
	.byte	25                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3d3:0x9 DW_TAG_member
	.byte	26                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	90                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x3dc:0x9 DW_TAG_member
	.byte	27                              # DW_AT_name
	.long	1155                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	23                              # Abbrev [23] 0x3e5:0xa DW_TAG_member
	.byte	28                              # DW_AT_name
	.long	1155                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.short	4388                            # DW_AT_data_member_location
	.byte	23                              # Abbrev [23] 0x3ef:0xa DW_TAG_member
	.byte	29                              # DW_AT_name
	.long	1168                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.short	8708                            # DW_AT_data_member_location
	.byte	23                              # Abbrev [23] 0x3f9:0xa DW_TAG_member
	.byte	30                              # DW_AT_name
	.long	1168                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.short	8716                            # DW_AT_data_member_location
	.byte	23                              # Abbrev [23] 0x403:0xa DW_TAG_member
	.byte	31                              # DW_AT_name
	.long	1180                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.short	8728                            # DW_AT_data_member_location
	.byte	23                              # Abbrev [23] 0x40d:0xa DW_TAG_member
	.byte	32                              # DW_AT_name
	.long	1180                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	97                              # DW_AT_decl_line
	.short	8736                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x418:0x5 DW_TAG_pointer_type
	.long	1053                            # DW_AT_type
	.byte	20                              # Abbrev [20] 0x41d:0x8 DW_TAG_typedef
	.long	1061                            # DW_AT_type
	.byte	6                               # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	23                              # DW_AT_decl_line
	.byte	25                              # Abbrev [25] 0x425:0x4 DW_TAG_base_type
	.byte	5                               # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	2                               # DW_AT_byte_size
	.byte	24                              # Abbrev [24] 0x429:0x5 DW_TAG_pointer_type
	.long	1070                            # DW_AT_type
	.byte	20                              # Abbrev [20] 0x42e:0x8 DW_TAG_typedef
	.long	1078                            # DW_AT_type
	.byte	9                               # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.byte	25                              # Abbrev [25] 0x436:0x4 DW_TAG_base_type
	.byte	8                               # DW_AT_name
	.byte	8                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	25                              # Abbrev [25] 0x43a:0x4 DW_TAG_base_type
	.byte	12                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	20                              # Abbrev [20] 0x43e:0x8 DW_TAG_typedef
	.long	1094                            # DW_AT_type
	.byte	20                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	67                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0x446:0x21 DW_TAG_structure_type
	.byte	20                              # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x44b:0x9 DW_TAG_member
	.byte	15                              # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	63                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x454:0x9 DW_TAG_member
	.byte	16                              # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	2                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x45d:0x9 DW_TAG_member
	.byte	17                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x467:0x8 DW_TAG_typedef
	.long	1135                            # DW_AT_type
	.byte	19                              # DW_AT_name
	.byte	1                               # DW_AT_decl_file
	.byte	24                              # DW_AT_decl_line
	.byte	25                              # Abbrev [25] 0x46f:0x4 DW_TAG_base_type
	.byte	18                              # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	4                               # DW_AT_byte_size
	.byte	27                              # Abbrev [27] 0x473:0xc DW_TAG_array_type
	.long	1127                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x478:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	29                              # Abbrev [29] 0x47f:0x4 DW_TAG_base_type
	.byte	23                              # DW_AT_name
	.byte	8                               # DW_AT_byte_size
	.byte	7                               # DW_AT_encoding
	.byte	27                              # Abbrev [27] 0x483:0xd DW_TAG_array_type
	.long	1127                            # DW_AT_type
	.byte	30                              # Abbrev [30] 0x488:0x7 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.short	1080                            # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x490:0xc DW_TAG_array_type
	.long	1127                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x495:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x49c:0x5 DW_TAG_pointer_type
	.long	1185                            # DW_AT_type
	.byte	31                              # Abbrev [31] 0x4a1:0xb DW_TAG_subroutine_type
	.long	1127                            # DW_AT_type
                                        # DW_AT_prototyped
	.byte	32                              # Abbrev [32] 0x4a6:0x5 DW_TAG_formal_parameter
	.long	1196                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x4ac:0x5 DW_TAG_pointer_type
	.long	883                             # DW_AT_type
	.byte	33                              # Abbrev [33] 0x4b1:0xb DW_TAG_variable
	.long	1212                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1036                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	1
	.byte	27                              # Abbrev [27] 0x4bc:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4c1:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	103                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	25                              # Abbrev [25] 0x4c8:0x4 DW_TAG_base_type
	.byte	34                              # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	33                              # Abbrev [33] 0x4cc:0xb DW_TAG_variable
	.long	1239                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1045                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	2
	.byte	27                              # Abbrev [27] 0x4d7:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4dc:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x4e3:0xb DW_TAG_variable
	.long	1262                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1049                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	3
	.byte	27                              # Abbrev [27] 0x4ee:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x4f3:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	8                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x4fa:0xb DW_TAG_variable
	.long	1285                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1053                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	4
	.byte	27                              # Abbrev [27] 0x505:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x50a:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	40                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x511:0xb DW_TAG_variable
	.long	1308                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1069                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	5
	.byte	27                              # Abbrev [27] 0x51c:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x521:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	88                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x528:0xb DW_TAG_variable
	.long	1331                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1074                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	6
	.byte	27                              # Abbrev [27] 0x533:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x538:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	86                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x53f:0xb DW_TAG_variable
	.long	1354                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1079                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	7
	.byte	27                              # Abbrev [27] 0x54a:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x54f:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	69                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x556:0xb DW_TAG_variable
	.long	1377                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1140                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	8
	.byte	27                              # Abbrev [27] 0x561:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x566:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	46                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x56d:0xb DW_TAG_variable
	.long	1400                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	1160                            # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	9
	.byte	27                              # Abbrev [27] 0x578:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x57d:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	67                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x584:0xb DW_TAG_variable
	.long	1423                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	468                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	10
	.byte	27                              # Abbrev [27] 0x58f:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x594:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	28                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x59b:0xb DW_TAG_variable
	.long	1446                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	507                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	11
	.byte	27                              # Abbrev [27] 0x5a6:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x5ab:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	44                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x5b2:0xb DW_TAG_variable
	.long	1469                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	614                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	12
	.byte	27                              # Abbrev [27] 0x5bd:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x5c2:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	33                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x5c9:0xb DW_TAG_variable
	.long	1354                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	345                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	13
	.byte	33                              # Abbrev [33] 0x5d4:0xb DW_TAG_variable
	.long	1503                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	352                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	14
	.byte	27                              # Abbrev [27] 0x5df:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x5e4:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	36                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x5eb:0xb DW_TAG_variable
	.long	1526                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	359                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	15
	.byte	27                              # Abbrev [27] 0x5f6:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x5fb:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	48                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x602:0xb DW_TAG_variable
	.long	1549                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	364                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	16
	.byte	27                              # Abbrev [27] 0x60d:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x612:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	41                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x619:0xb DW_TAG_variable
	.long	1285                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	373                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	17
	.byte	33                              # Abbrev [33] 0x624:0xb DW_TAG_variable
	.long	1469                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	393                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	18
	.byte	33                              # Abbrev [33] 0x62f:0xb DW_TAG_variable
	.long	1594                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	669                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	19
	.byte	27                              # Abbrev [27] 0x63a:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x63f:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	49                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	33                              # Abbrev [33] 0x646:0xb DW_TAG_variable
	.long	1377                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	700                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	20
	.byte	33                              # Abbrev [33] 0x651:0xb DW_TAG_variable
	.long	1285                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	705                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	21
	.byte	33                              # Abbrev [33] 0x65c:0xb DW_TAG_variable
	.long	1285                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	710                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	22
	.byte	34                              # Abbrev [34] 0x667:0xb DW_TAG_variable
	.byte	35                              # DW_AT_name
	.long	1650                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	115                             # DW_AT_decl_line
	.byte	2                               # DW_AT_location
	.byte	161
	.byte	23
	.byte	27                              # Abbrev [27] 0x672:0x12 DW_TAG_array_type
	.long	1668                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x677:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	9                               # DW_AT_count
	.byte	28                              # Abbrev [28] 0x67d:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	35                              # Abbrev [35] 0x684:0x5 DW_TAG_const_type
	.long	1673                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0x689:0x4 DW_TAG_base_type
	.byte	36                              # DW_AT_name
	.byte	4                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	36                              # Abbrev [36] 0x68d:0x18 DW_TAG_enumeration_type
	.long	1082                            # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
	.byte	37                              # Abbrev [37] 0x695:0x3 DW_TAG_enumerator
	.byte	37                              # DW_AT_name
	.byte	127                             # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x698:0x3 DW_TAG_enumerator
	.byte	38                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x69b:0x3 DW_TAG_enumerator
	.byte	39                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x69e:0x3 DW_TAG_enumerator
	.byte	40                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6a1:0x3 DW_TAG_enumerator
	.byte	41                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x6a5:0x15 DW_TAG_enumeration_type
	.long	1082                            # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	2                               # DW_AT_decl_file
	.byte	15                              # DW_AT_decl_line
	.byte	37                              # Abbrev [37] 0x6ad:0x3 DW_TAG_enumerator
	.byte	42                              # DW_AT_name
	.byte	127                             # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6b0:0x3 DW_TAG_enumerator
	.byte	43                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6b3:0x3 DW_TAG_enumerator
	.byte	44                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6b6:0x3 DW_TAG_enumerator
	.byte	45                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	36                              # Abbrev [36] 0x6ba:0x1b DW_TAG_enumeration_type
	.long	1082                            # DW_AT_type
	.byte	4                               # DW_AT_byte_size
	.byte	3                               # DW_AT_decl_file
	.byte	25                              # DW_AT_decl_line
	.byte	37                              # Abbrev [37] 0x6c2:0x3 DW_TAG_enumerator
	.byte	46                              # DW_AT_name
	.byte	127                             # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6c5:0x3 DW_TAG_enumerator
	.byte	47                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6c8:0x3 DW_TAG_enumerator
	.byte	48                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6cb:0x3 DW_TAG_enumerator
	.byte	49                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6ce:0x3 DW_TAG_enumerator
	.byte	50                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	37                              # Abbrev [37] 0x6d1:0x3 DW_TAG_enumerator
	.byte	51                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x6d5:0x28 DW_TAG_enumeration_type
	.long	1135                            # DW_AT_type
	.byte	62                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	101                             # DW_AT_decl_line
	.byte	39                              # Abbrev [39] 0x6de:0x3 DW_TAG_enumerator
	.byte	52                              # DW_AT_name
	.byte	0                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6e1:0x3 DW_TAG_enumerator
	.byte	53                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6e4:0x3 DW_TAG_enumerator
	.byte	54                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6e7:0x3 DW_TAG_enumerator
	.byte	55                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6ea:0x3 DW_TAG_enumerator
	.byte	56                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6ed:0x3 DW_TAG_enumerator
	.byte	57                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6f0:0x3 DW_TAG_enumerator
	.byte	58                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6f3:0x3 DW_TAG_enumerator
	.byte	59                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6f6:0x3 DW_TAG_enumerator
	.byte	60                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x6f9:0x3 DW_TAG_enumerator
	.byte	61                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	38                              # Abbrev [38] 0x6fd:0x2e DW_TAG_enumeration_type
	.long	1135                            # DW_AT_type
	.byte	75                              # DW_AT_name
	.byte	4                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	26                              # DW_AT_decl_line
	.byte	39                              # Abbrev [39] 0x706:0x3 DW_TAG_enumerator
	.byte	63                              # DW_AT_name
	.byte	1                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x709:0x3 DW_TAG_enumerator
	.byte	64                              # DW_AT_name
	.byte	2                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x70c:0x3 DW_TAG_enumerator
	.byte	65                              # DW_AT_name
	.byte	3                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x70f:0x3 DW_TAG_enumerator
	.byte	66                              # DW_AT_name
	.byte	4                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x712:0x3 DW_TAG_enumerator
	.byte	67                              # DW_AT_name
	.byte	5                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x715:0x3 DW_TAG_enumerator
	.byte	68                              # DW_AT_name
	.byte	6                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x718:0x3 DW_TAG_enumerator
	.byte	69                              # DW_AT_name
	.byte	7                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x71b:0x3 DW_TAG_enumerator
	.byte	70                              # DW_AT_name
	.byte	8                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x71e:0x3 DW_TAG_enumerator
	.byte	71                              # DW_AT_name
	.byte	9                               # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x721:0x3 DW_TAG_enumerator
	.byte	72                              # DW_AT_name
	.byte	10                              # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x724:0x3 DW_TAG_enumerator
	.byte	73                              # DW_AT_name
	.byte	11                              # DW_AT_const_value
	.byte	39                              # Abbrev [39] 0x727:0x3 DW_TAG_enumerator
	.byte	74                              # DW_AT_name
	.byte	12                              # DW_AT_const_value
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x72b:0x8 DW_TAG_typedef
	.long	1749                            # DW_AT_type
	.byte	62                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	112                             # DW_AT_decl_line
	.byte	24                              # Abbrev [24] 0x733:0x5 DW_TAG_pointer_type
	.long	1848                            # DW_AT_type
	.byte	25                              # Abbrev [25] 0x738:0x4 DW_TAG_base_type
	.byte	76                              # DW_AT_name
	.byte	6                               # DW_AT_encoding
	.byte	1                               # DW_AT_byte_size
	.byte	25                              # Abbrev [25] 0x73c:0x4 DW_TAG_base_type
	.byte	77                              # DW_AT_name
	.byte	5                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	20                              # Abbrev [20] 0x740:0x8 DW_TAG_typedef
	.long	1789                            # DW_AT_type
	.byte	75                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	40                              # Abbrev [40] 0x748:0x16 DW_TAG_subprogram
	.byte	24                              # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	192                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                              # Abbrev [41] 0x753:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	164                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	40                              # Abbrev [40] 0x75e:0x21 DW_TAG_subprogram
	.byte	25                              # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	193                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	42                              # Abbrev [42] 0x769:0x9 DW_TAG_formal_parameter
	.byte	0                               # DW_AT_location
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	179                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	18                              # Abbrev [18] 0x772:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	26                              # DW_AT_call_return_pc
	.byte	18                              # Abbrev [18] 0x778:0x6 DW_TAG_call_site
	.long	1919                            # DW_AT_call_origin
	.byte	27                              # DW_AT_call_return_pc
	.byte	0                               # End Of Children Mark
	.byte	43                              # Abbrev [43] 0x77f:0xb DW_TAG_subprogram
	.byte	78                              # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.short	555                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0x784:0x5 DW_TAG_formal_parameter
	.long	1930                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	44                              # Abbrev [44] 0x78a:0x1 DW_TAG_pointer_type
	.byte	45                              # Abbrev [45] 0x78b:0xbb DW_TAG_subprogram
	.byte	28                              # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	194                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	819                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	4                               # Abbrev [4] 0x797:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	819                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x7a1:0xa DW_TAG_formal_parameter
	.byte	2                               # DW_AT_location
	.byte	201                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	820                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x7ab:0xa DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	135                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	821                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	46                              # Abbrev [46] 0x7b5:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	82
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	822                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x7c0:0xa DW_TAG_formal_parameter
	.byte	4                               # DW_AT_location
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	823                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x7ca:0xa DW_TAG_formal_parameter
	.byte	5                               # DW_AT_location
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	824                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	46                              # Abbrev [46] 0x7d4:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\360"
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	825                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x7e1:0xa DW_TAG_variable
	.byte	6                               # DW_AT_location
	.byte	205                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	830                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x7eb:0xa DW_TAG_variable
	.byte	7                               # DW_AT_location
	.byte	206                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	831                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x7f5:0xa DW_TAG_variable
	.byte	8                               # DW_AT_location
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x7ff:0xa DW_TAG_variable
	.byte	9                               # DW_AT_location
	.byte	207                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x809:0xa DW_TAG_variable
	.byte	10                              # DW_AT_location
	.byte	208                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x813:0xa DW_TAG_variable
	.byte	11                              # DW_AT_location
	.byte	209                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x81d:0xa DW_TAG_variable
	.byte	12                              # DW_AT_location
	.byte	210                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x827:0xa DW_TAG_variable
	.byte	13                              # DW_AT_location
	.byte	211                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x831:0xa DW_TAG_variable
	.byte	14                              # DW_AT_location
	.byte	212                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	828                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x83b:0xa DW_TAG_variable
	.byte	15                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	829                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	45                              # Abbrev [45] 0x846:0xd8 DW_TAG_subprogram
	.byte	29                              # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	195                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	903                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	4                               # Abbrev [4] 0x852:0xa DW_TAG_formal_parameter
	.byte	16                              # DW_AT_location
	.byte	200                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	903                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x85c:0xa DW_TAG_formal_parameter
	.byte	17                              # DW_AT_location
	.byte	134                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	904                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x866:0xa DW_TAG_formal_parameter
	.byte	18                              # DW_AT_location
	.byte	213                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	905                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x870:0xa DW_TAG_formal_parameter
	.byte	19                              # DW_AT_location
	.byte	202                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	906                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x87a:0xa DW_TAG_formal_parameter
	.byte	20                              # DW_AT_location
	.byte	203                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	907                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0x884:0xa DW_TAG_formal_parameter
	.byte	21                              # DW_AT_location
	.byte	204                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	908                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	46                              # Abbrev [46] 0x88e:0xd DW_TAG_formal_parameter
	.byte	3                               # DW_AT_location
	.byte	145
	.asciz	"\310"
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	909                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x89b:0xa DW_TAG_variable
	.byte	22                              # DW_AT_location
	.byte	214                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	915                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8a5:0xa DW_TAG_variable
	.byte	23                              # DW_AT_location
	.byte	205                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	916                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8af:0xa DW_TAG_variable
	.byte	24                              # DW_AT_location
	.byte	206                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	917                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8b9:0xa DW_TAG_variable
	.byte	25                              # DW_AT_location
	.byte	109                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8c3:0xa DW_TAG_variable
	.byte	26                              # DW_AT_location
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	913                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8cd:0xa DW_TAG_variable
	.byte	27                              # DW_AT_location
	.byte	207                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8d7:0xa DW_TAG_variable
	.byte	28                              # DW_AT_location
	.byte	209                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8e1:0xa DW_TAG_variable
	.byte	29                              # DW_AT_location
	.byte	215                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8eb:0xa DW_TAG_variable
	.byte	30                              # DW_AT_location
	.byte	210                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8f5:0xa DW_TAG_variable
	.byte	31                              # DW_AT_location
	.byte	216                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x8ff:0xa DW_TAG_variable
	.byte	32                              # DW_AT_location
	.byte	208                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x909:0xa DW_TAG_variable
	.byte	33                              # DW_AT_location
	.byte	211                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0x913:0xa DW_TAG_variable
	.byte	34                              # DW_AT_location
	.byte	217                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	912                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x91e:0x52 DW_TAG_subprogram
	.byte	79                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	451                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0x927:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	451                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0x930:0x9 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	451                             # DW_AT_decl_line
	.long	2421                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x939:0x9 DW_TAG_variable
	.byte	81                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	458                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x942:0x9 DW_TAG_variable
	.byte	82                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	459                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x94b:0x9 DW_TAG_variable
	.byte	83                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	460                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x954:0x9 DW_TAG_variable
	.byte	84                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	454                             # DW_AT_decl_line
	.long	1852                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x95d:0x9 DW_TAG_variable
	.byte	85                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	454                             # DW_AT_decl_line
	.long	1852                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0x966:0x9 DW_TAG_variable
	.byte	15                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	456                             # DW_AT_decl_line
	.long	1053                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x970:0x5 DW_TAG_pointer_type
	.long	875                             # DW_AT_type
	.byte	24                              # Abbrev [24] 0x975:0x5 DW_TAG_pointer_type
	.long	2426                            # DW_AT_type
	.byte	35                              # Abbrev [35] 0x97a:0x5 DW_TAG_const_type
	.long	1224                            # DW_AT_type
	.byte	47                              # Abbrev [47] 0x97f:0x21 DW_TAG_subprogram
	.byte	86                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	628                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0x988:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	628                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0x991:0x9 DW_TAG_formal_parameter
	.byte	80                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	628                             # DW_AT_decl_line
	.long	2464                            # DW_AT_type
	.byte	49                              # Abbrev [49] 0x99a:0x5 DW_TAG_label
	.byte	87                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	642                             # DW_AT_decl_line
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0x9a0:0x5 DW_TAG_pointer_type
	.long	1224                            # DW_AT_type
	.byte	50                              # Abbrev [50] 0x9a5:0x30 DW_TAG_subprogram
	.byte	31                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	203                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1127                            # DW_AT_type
                                        # DW_AT_inline
	.byte	51                              # Abbrev [51] 0x9ad:0x8 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	203                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	52                              # Abbrev [52] 0x9b5:0x17 DW_TAG_union_type
	.byte	2                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	205                             # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x9b9:0x9 DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2517                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	206                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x9c2:0x9 DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	207                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0x9cc:0x8 DW_TAG_variable
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	208                             # DW_AT_decl_line
	.long	2485                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0x9d5:0xc DW_TAG_array_type
	.long	1070                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x9da:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	2                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0x9e1:0x13 DW_TAG_subprogram
	.byte	91                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	607                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0x9ea:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	607                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	50                              # Abbrev [50] 0x9f4:0x30 DW_TAG_subprogram
	.byte	32                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1127                            # DW_AT_type
                                        # DW_AT_inline
	.byte	51                              # Abbrev [51] 0x9fc:0x8 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	222                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	52                              # Abbrev [52] 0xa04:0x17 DW_TAG_union_type
	.byte	4                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	224                             # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0xa08:0x9 DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2596                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	225                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xa11:0x9 DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	226                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	53                              # Abbrev [53] 0xa1b:0x8 DW_TAG_variable
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	227                             # DW_AT_decl_line
	.long	2564                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xa24:0xc DW_TAG_array_type
	.long	1070                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xa29:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	4                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xa30:0x25 DW_TAG_subprogram
	.byte	92                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	587                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0xa39:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	587                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa42:0x9 DW_TAG_variable
	.byte	93                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	590                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa4b:0x9 DW_TAG_variable
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	589                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xa55:0x37 DW_TAG_subprogram
	.byte	95                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0xa5e:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	325                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa67:0x9 DW_TAG_variable
	.byte	96                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	328                             # DW_AT_decl_line
	.long	1856                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa70:0x9 DW_TAG_variable
	.byte	97                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	329                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa79:0x9 DW_TAG_variable
	.byte	17                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	330                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa82:0x9 DW_TAG_variable
	.byte	98                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	327                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xa8c:0x52 DW_TAG_subprogram
	.byte	99                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	533                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0xa95:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	533                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xa9e:0x9 DW_TAG_variable
	.byte	100                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	538                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xaa7:0x9 DW_TAG_variable
	.byte	101                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	537                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xab0:0x9 DW_TAG_variable
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xab9:0x9 DW_TAG_variable
	.byte	102                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xac2:0x9 DW_TAG_variable
	.byte	103                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	536                             # DW_AT_decl_line
	.long	1065                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xacb:0x9 DW_TAG_variable
	.byte	104                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	535                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xad4:0x9 DW_TAG_variable
	.byte	10                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	536                             # DW_AT_decl_line
	.long	1065                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	47                              # Abbrev [47] 0xade:0x40 DW_TAG_subprogram
	.byte	105                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	655                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0xae7:0x9 DW_TAG_formal_parameter
	.byte	106                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	655                             # DW_AT_decl_line
	.long	2846                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xaf0:0x9 DW_TAG_formal_parameter
	.byte	128                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	656                             # DW_AT_decl_line
	.long	1835                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xaf9:0x9 DW_TAG_formal_parameter
	.byte	108                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	657                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xb02:0x9 DW_TAG_formal_parameter
	.byte	107                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	658                             # DW_AT_decl_line
	.long	1053                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xb0b:0x9 DW_TAG_variable
	.byte	129                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xb14:0x9 DW_TAG_variable
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	661                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0xb1e:0x5 DW_TAG_pointer_type
	.long	2851                            # DW_AT_type
	.byte	20                              # Abbrev [20] 0xb23:0x8 DW_TAG_typedef
	.long	2859                            # DW_AT_type
	.byte	127                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	155                             # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xb2b:0xc3 DW_TAG_structure_type
	.byte	127                             # DW_AT_name
	.byte	96                              # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	142                             # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0xb30:0x9 DW_TAG_member
	.byte	107                             # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	144                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb39:0x9 DW_TAG_member
	.byte	108                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	146                             # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb42:0x9 DW_TAG_member
	.byte	109                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	147                             # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb4b:0x9 DW_TAG_member
	.byte	88                              # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	147                             # DW_AT_decl_line
	.byte	12                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb54:0x9 DW_TAG_member
	.byte	110                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	147                             # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb5d:0x9 DW_TAG_member
	.byte	111                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
	.byte	20                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb66:0x9 DW_TAG_member
	.byte	112                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb6f:0x9 DW_TAG_member
	.byte	113                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	148                             # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb78:0x9 DW_TAG_member
	.byte	114                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	149                             # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb81:0x9 DW_TAG_member
	.byte	115                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	149                             # DW_AT_decl_line
	.byte	36                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb8a:0x9 DW_TAG_member
	.byte	116                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	149                             # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb93:0x9 DW_TAG_member
	.byte	117                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	150                             # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xb9c:0x9 DW_TAG_member
	.byte	118                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	150                             # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xba5:0x9 DW_TAG_member
	.byte	119                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	150                             # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbae:0x9 DW_TAG_member
	.byte	120                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	151                             # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbb7:0x9 DW_TAG_member
	.byte	121                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	151                             # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbc0:0x9 DW_TAG_member
	.byte	122                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	151                             # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbc9:0x9 DW_TAG_member
	.byte	123                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbd2:0x9 DW_TAG_member
	.byte	124                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbdb:0x9 DW_TAG_member
	.byte	125                             # DW_AT_name
	.long	1673                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xbe4:0x9 DW_TAG_member
	.byte	126                             # DW_AT_name
	.long	1673                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	154                             # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	54                              # Abbrev [54] 0xbee:0x7b DW_TAG_subprogram
	.byte	130                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	724                             # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_inline
	.byte	48                              # Abbrev [48] 0xbf3:0x9 DW_TAG_formal_parameter
	.byte	106                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	724                             # DW_AT_decl_line
	.long	2846                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xbfc:0x9 DW_TAG_formal_parameter
	.byte	131                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	725                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc05:0x9 DW_TAG_formal_parameter
	.byte	132                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	726                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc0e:0x9 DW_TAG_formal_parameter
	.byte	133                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	727                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc17:0x9 DW_TAG_formal_parameter
	.byte	134                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	728                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc20:0x9 DW_TAG_formal_parameter
	.byte	135                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	729                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc29:0x9 DW_TAG_formal_parameter
	.byte	136                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	730                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc32:0x9 DW_TAG_formal_parameter
	.byte	137                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	731                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc3b:0x9 DW_TAG_formal_parameter
	.byte	138                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	732                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc44:0x9 DW_TAG_formal_parameter
	.byte	139                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	733                             # DW_AT_decl_line
	.long	1048                            # DW_AT_type
	.byte	48                              # Abbrev [48] 0xc4d:0x9 DW_TAG_formal_parameter
	.byte	140                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	734                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xc56:0x9 DW_TAG_variable
	.byte	97                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	738                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xc5f:0x9 DW_TAG_variable
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	737                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	55                              # Abbrev [55] 0xc69:0x1a DW_TAG_subprogram
	.byte	141                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	378                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xc72:0x5 DW_TAG_formal_parameter
	.long	3203                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xc77:0x5 DW_TAG_formal_parameter
	.long	3208                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xc7c:0x5 DW_TAG_formal_parameter
	.long	3220                            # DW_AT_type
	.byte	56                              # Abbrev [56] 0xc81:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	57                              # Abbrev [57] 0xc83:0x5 DW_TAG_restrict_type
	.long	2464                            # DW_AT_type
	.byte	20                              # Abbrev [20] 0xc88:0x8 DW_TAG_typedef
	.long	3216                            # DW_AT_type
	.byte	143                             # DW_AT_name
	.byte	6                               # DW_AT_decl_file
	.byte	18                              # DW_AT_decl_line
	.byte	25                              # Abbrev [25] 0xc90:0x4 DW_TAG_base_type
	.byte	142                             # DW_AT_name
	.byte	7                               # DW_AT_encoding
	.byte	8                               # DW_AT_byte_size
	.byte	57                              # Abbrev [57] 0xc94:0x5 DW_TAG_restrict_type
	.long	2421                            # DW_AT_type
	.byte	58                              # Abbrev [58] 0xc99:0x13 DW_TAG_subprogram
	.byte	144                             # DW_AT_name
	.byte	7                               # DW_AT_decl_file
	.byte	141                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	2464                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xca1:0x5 DW_TAG_formal_parameter
	.long	3203                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xca6:0x5 DW_TAG_formal_parameter
	.long	3220                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	58                              # Abbrev [58] 0xcac:0x14 DW_TAG_subprogram
	.byte	145                             # DW_AT_name
	.byte	8                               # DW_AT_decl_file
	.byte	181                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xcb4:0x5 DW_TAG_formal_parameter
	.long	2421                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xcb9:0x5 DW_TAG_formal_parameter
	.long	1082                            # DW_AT_type
	.byte	56                              # Abbrev [56] 0xcbe:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	55                              # Abbrev [55] 0xcc0:0x19 DW_TAG_subprogram
	.byte	146                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	339                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3289                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xcc9:0x5 DW_TAG_formal_parameter
	.long	1082                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xcce:0x5 DW_TAG_formal_parameter
	.long	3289                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xcd3:0x5 DW_TAG_formal_parameter
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0xcd9:0x8 DW_TAG_typedef
	.long	1852                            # DW_AT_type
	.byte	147                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	152                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0xce1:0x14 DW_TAG_subprogram
	.byte	148                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.short	551                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1930                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xcea:0x5 DW_TAG_formal_parameter
	.long	1930                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xcef:0x5 DW_TAG_formal_parameter
	.long	3208                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	55                              # Abbrev [55] 0xcf5:0x19 DW_TAG_subprogram
	.byte	149                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	371                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	3342                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xcfe:0x5 DW_TAG_formal_parameter
	.long	1082                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xd03:0x5 DW_TAG_formal_parameter
	.long	1930                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xd08:0x5 DW_TAG_formal_parameter
	.long	3208                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0xd0e:0x8 DW_TAG_typedef
	.long	3350                            # DW_AT_type
	.byte	151                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.byte	220                             # DW_AT_decl_line
	.byte	20                              # Abbrev [20] 0xd16:0x8 DW_TAG_typedef
	.long	1852                            # DW_AT_type
	.byte	150                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	194                             # DW_AT_decl_line
	.byte	55                              # Abbrev [55] 0xd1e:0xf DW_TAG_subprogram
	.byte	152                             # DW_AT_name
	.byte	9                               # DW_AT_decl_file
	.short	358                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xd27:0x5 DW_TAG_formal_parameter
	.long	1082                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	55                              # Abbrev [55] 0xd2d:0x15 DW_TAG_subprogram
	.byte	153                             # DW_AT_name
	.byte	5                               # DW_AT_decl_file
	.short	350                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1082                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xd36:0x5 DW_TAG_formal_parameter
	.long	3394                            # DW_AT_type
	.byte	32                              # Abbrev [32] 0xd3b:0x5 DW_TAG_formal_parameter
	.long	3220                            # DW_AT_type
	.byte	56                              # Abbrev [56] 0xd40:0x1 DW_TAG_unspecified_parameters
	.byte	0                               # End Of Children Mark
	.byte	57                              # Abbrev [57] 0xd42:0x5 DW_TAG_restrict_type
	.long	3399                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0xd47:0x5 DW_TAG_pointer_type
	.long	3404                            # DW_AT_type
	.byte	20                              # Abbrev [20] 0xd4c:0x8 DW_TAG_typedef
	.long	3412                            # DW_AT_type
	.byte	189                             # DW_AT_name
	.byte	12                              # DW_AT_decl_file
	.byte	7                               # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0xd54:0x10b DW_TAG_structure_type
	.byte	188                             # DW_AT_name
	.byte	216                             # DW_AT_byte_size
	.byte	11                              # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0xd59:0x9 DW_TAG_member
	.byte	154                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd62:0x9 DW_TAG_member
	.byte	155                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	54                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd6b:0x9 DW_TAG_member
	.byte	156                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	55                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd74:0x9 DW_TAG_member
	.byte	157                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.byte	24                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd7d:0x9 DW_TAG_member
	.byte	158                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	57                              # DW_AT_decl_line
	.byte	32                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd86:0x9 DW_TAG_member
	.byte	159                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	58                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd8f:0x9 DW_TAG_member
	.byte	160                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	59                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xd98:0x9 DW_TAG_member
	.byte	161                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xda1:0x9 DW_TAG_member
	.byte	162                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	61                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdaa:0x9 DW_TAG_member
	.byte	163                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	64                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdb3:0x9 DW_TAG_member
	.byte	164                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	65                              # DW_AT_decl_line
	.byte	80                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdbc:0x9 DW_TAG_member
	.byte	165                             # DW_AT_name
	.long	2464                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	66                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdc5:0x9 DW_TAG_member
	.byte	166                             # DW_AT_name
	.long	3679                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	68                              # DW_AT_decl_line
	.byte	96                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdce:0x9 DW_TAG_member
	.byte	168                             # DW_AT_name
	.long	3686                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	70                              # DW_AT_decl_line
	.byte	104                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdd7:0x9 DW_TAG_member
	.byte	169                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	72                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xde0:0x9 DW_TAG_member
	.byte	170                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	73                              # DW_AT_decl_line
	.byte	116                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xde9:0x9 DW_TAG_member
	.byte	171                             # DW_AT_name
	.long	3289                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	74                              # DW_AT_decl_line
	.byte	120                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdf2:0x9 DW_TAG_member
	.byte	172                             # DW_AT_name
	.long	1061                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	77                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xdfb:0x9 DW_TAG_member
	.byte	173                             # DW_AT_name
	.long	1848                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	78                              # DW_AT_decl_line
	.byte	130                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe04:0x9 DW_TAG_member
	.byte	174                             # DW_AT_name
	.long	3691                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	79                              # DW_AT_decl_line
	.byte	131                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe0d:0x9 DW_TAG_member
	.byte	175                             # DW_AT_name
	.long	3703                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	81                              # DW_AT_decl_line
	.byte	136                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe16:0x9 DW_TAG_member
	.byte	177                             # DW_AT_name
	.long	3712                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	89                              # DW_AT_decl_line
	.byte	144                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe1f:0x9 DW_TAG_member
	.byte	179                             # DW_AT_name
	.long	3720                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	91                              # DW_AT_decl_line
	.byte	152                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe28:0x9 DW_TAG_member
	.byte	181                             # DW_AT_name
	.long	3727                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	92                              # DW_AT_decl_line
	.byte	160                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe31:0x9 DW_TAG_member
	.byte	183                             # DW_AT_name
	.long	3686                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	93                              # DW_AT_decl_line
	.byte	168                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe3a:0x9 DW_TAG_member
	.byte	184                             # DW_AT_name
	.long	1930                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	94                              # DW_AT_decl_line
	.byte	176                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe43:0x9 DW_TAG_member
	.byte	185                             # DW_AT_name
	.long	3208                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	95                              # DW_AT_decl_line
	.byte	184                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe4c:0x9 DW_TAG_member
	.byte	186                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	96                              # DW_AT_decl_line
	.byte	192                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xe55:0x9 DW_TAG_member
	.byte	187                             # DW_AT_name
	.long	3734                            # DW_AT_type
	.byte	11                              # DW_AT_decl_file
	.byte	98                              # DW_AT_decl_line
	.byte	196                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0xe5f:0x5 DW_TAG_pointer_type
	.long	3684                            # DW_AT_type
	.byte	59                              # Abbrev [59] 0xe64:0x2 DW_TAG_structure_type
	.byte	167                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	24                              # Abbrev [24] 0xe66:0x5 DW_TAG_pointer_type
	.long	3412                            # DW_AT_type
	.byte	27                              # Abbrev [27] 0xe6b:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe70:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	1                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0xe77:0x5 DW_TAG_pointer_type
	.long	3708                            # DW_AT_type
	.byte	60                              # Abbrev [60] 0xe7c:0x4 DW_TAG_typedef
	.byte	176                             # DW_AT_name
	.byte	11                              # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	20                              # Abbrev [20] 0xe80:0x8 DW_TAG_typedef
	.long	1852                            # DW_AT_type
	.byte	178                             # DW_AT_name
	.byte	10                              # DW_AT_decl_file
	.byte	153                             # DW_AT_decl_line
	.byte	24                              # Abbrev [24] 0xe88:0x5 DW_TAG_pointer_type
	.long	3725                            # DW_AT_type
	.byte	59                              # Abbrev [59] 0xe8d:0x2 DW_TAG_structure_type
	.byte	180                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	24                              # Abbrev [24] 0xe8f:0x5 DW_TAG_pointer_type
	.long	3732                            # DW_AT_type
	.byte	59                              # Abbrev [59] 0xe94:0x2 DW_TAG_structure_type
	.byte	182                             # DW_AT_name
                                        # DW_AT_declaration
	.byte	27                              # Abbrev [27] 0xe96:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xe9b:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	20                              # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	61                              # Abbrev [61] 0xea2:0x7a DW_TAG_subprogram
	.byte	77                              # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	199                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.byte	48                              # Abbrev [48] 0xeae:0x9 DW_TAG_formal_parameter
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0xeb7:0xa DW_TAG_formal_parameter
	.byte	88                              # DW_AT_location
	.byte	17                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	1127                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0xec1:0xa DW_TAG_formal_parameter
	.byte	89                              # DW_AT_location
	.byte	96                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	1856                            # DW_AT_type
	.byte	62                              # Abbrev [62] 0xecb:0xc DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	81
	.short	296                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	4851                            # DW_AT_type
	.byte	4                               # Abbrev [4] 0xed7:0xa DW_TAG_formal_parameter
	.byte	90                              # DW_AT_location
	.byte	102                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	285                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xee1:0xa DW_TAG_variable
	.byte	91                              # DW_AT_location
	.byte	10                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	288                             # DW_AT_decl_line
	.long	1065                            # DW_AT_type
	.byte	8                               # Abbrev [8] 0xeeb:0xa DW_TAG_variable
	.byte	92                              # DW_AT_location
	.byte	94                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	287                             # DW_AT_decl_line
	.long	1082                            # DW_AT_type
	.byte	15                              # Abbrev [15] 0xef5:0xe DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	78                              # DW_AT_low_pc
	.long	.Ltmp791-.Ltmp785               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	308                             # DW_AT_call_line
	.byte	14                              # DW_AT_call_column
	.byte	15                              # Abbrev [15] 0xf03:0xe DW_TAG_inlined_subroutine
	.long	2548                            # DW_AT_abstract_origin
	.byte	79                              # DW_AT_low_pc
	.long	.Ltmp806-.Ltmp800               # DW_AT_high_pc
	.byte	0                               # DW_AT_call_file
	.short	302                             # DW_AT_call_line
	.byte	14                              # DW_AT_call_column
	.byte	17                              # Abbrev [17] 0xf11:0xa DW_TAG_inlined_subroutine
	.long	2469                            # DW_AT_abstract_origin
	.byte	8                               # DW_AT_ranges
	.byte	0                               # DW_AT_call_file
	.short	296                             # DW_AT_call_line
	.byte	14                              # DW_AT_call_column
	.byte	0                               # End Of Children Mark
	.byte	63                              # Abbrev [63] 0xf1c:0x4 DW_TAG_subprogram
	.byte	190                             # DW_AT_name
	.byte	13                              # DW_AT_decl_file
	.byte	22                              # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	55                              # Abbrev [55] 0xf20:0xf DW_TAG_subprogram
	.byte	191                             # DW_AT_name
	.byte	4                               # DW_AT_decl_file
	.short	540                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1930                            # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	32                              # Abbrev [32] 0xf29:0x5 DW_TAG_formal_parameter
	.long	3208                            # DW_AT_type
	.byte	0                               # End Of Children Mark
	.byte	64                              # Abbrev [64] 0xf2f:0x19 DW_TAG_subprogram
	.byte	73                              # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	2469                            # DW_AT_abstract_origin
	.byte	65                              # Abbrev [65] 0xf3b:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	2477                            # DW_AT_abstract_origin
	.byte	66                              # Abbrev [66] 0xf42:0x5 DW_TAG_variable
	.long	2508                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	64                              # Abbrev [64] 0xf48:0x19 DW_TAG_subprogram
	.byte	74                              # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.long	2548                            # DW_AT_abstract_origin
	.byte	65                              # Abbrev [65] 0xf54:0x7 DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.long	2556                            # DW_AT_abstract_origin
	.byte	66                              # Abbrev [66] 0xf5b:0x5 DW_TAG_variable
	.long	2587                            # DW_AT_abstract_origin
	.byte	0                               # End Of Children Mark
	.byte	67                              # Abbrev [67] 0xf61:0x39 DW_TAG_subprogram
	.byte	75                              # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	197                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1127                            # DW_AT_type
	.byte	41                              # Abbrev [41] 0xf70:0xa DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	245                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	53                              # Abbrev [53] 0xf7a:0x8 DW_TAG_variable
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.byte	250                             # DW_AT_decl_line
	.long	3970                            # DW_AT_type
	.byte	52                              # Abbrev [52] 0xf82:0x17 DW_TAG_union_type
	.byte	2                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.byte	247                             # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0xf86:0x9 DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2517                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	248                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0xf8f:0x9 DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	1053                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.byte	249                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	68                              # Abbrev [68] 0xf9a:0x3f DW_TAG_subprogram
	.byte	76                              # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8       # DW_AT_high_pc
	.byte	1                               # DW_AT_frame_base
	.byte	87
                                        # DW_AT_call_all_calls
	.byte	198                             # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	264                             # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	1127                            # DW_AT_type
	.byte	46                              # Abbrev [46] 0xfaa:0xb DW_TAG_formal_parameter
	.byte	1                               # DW_AT_location
	.byte	85
	.byte	3                               # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	264                             # DW_AT_decl_line
	.long	2416                            # DW_AT_type
	.byte	9                               # Abbrev [9] 0xfb5:0x9 DW_TAG_variable
	.byte	88                              # DW_AT_name
	.byte	0                               # DW_AT_decl_file
	.short	269                             # DW_AT_decl_line
	.long	4030                            # DW_AT_type
	.byte	69                              # Abbrev [69] 0xfbe:0x1a DW_TAG_union_type
	.byte	4                               # DW_AT_byte_size
	.byte	0                               # DW_AT_decl_file
	.short	266                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0xfc3:0xa DW_TAG_member
	.byte	89                              # DW_AT_name
	.long	2596                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	267                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0xfcd:0xa DW_TAG_member
	.byte	90                              # DW_AT_name
	.long	1127                            # DW_AT_type
	.byte	0                               # DW_AT_decl_file
	.short	268                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	0                               # End Of Children Mark
	.byte	27                              # Abbrev [27] 0xfd9:0xc DW_TAG_array_type
	.long	1224                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0xfde:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	255                             # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	24                              # Abbrev [24] 0xfe5:0x5 DW_TAG_pointer_type
	.long	4074                            # DW_AT_type
	.byte	71                              # Abbrev [71] 0xfea:0xa DW_TAG_typedef
	.long	4084                            # DW_AT_type
	.short	287                             # DW_AT_name
	.byte	14                              # DW_AT_decl_file
	.short	900                             # DW_AT_decl_line
	.byte	72                              # Abbrev [72] 0xff4:0x12f DW_TAG_structure_type
	.short	286                             # DW_AT_name
	.short	4016                            # DW_AT_byte_size
	.byte	14                              # DW_AT_decl_file
	.short	850                             # DW_AT_decl_line
	.byte	70                              # Abbrev [70] 0xffc:0xa DW_TAG_member
	.byte	219                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	852                             # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	70                              # Abbrev [70] 0x1006:0xa DW_TAG_member
	.byte	220                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	853                             # DW_AT_decl_line
	.byte	255                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1010:0xb DW_TAG_member
	.byte	221                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	854                             # DW_AT_decl_line
	.short	510                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x101b:0xb DW_TAG_member
	.byte	222                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	856                             # DW_AT_decl_line
	.short	768                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1026:0xb DW_TAG_member
	.byte	223                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	857                             # DW_AT_decl_line
	.short	772                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1031:0xb DW_TAG_member
	.byte	224                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	858                             # DW_AT_decl_line
	.short	776                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x103c:0xb DW_TAG_member
	.byte	225                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	859                             # DW_AT_decl_line
	.short	780                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1047:0xb DW_TAG_member
	.byte	226                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	860                             # DW_AT_decl_line
	.short	784                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1052:0xb DW_TAG_member
	.byte	227                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	861                             # DW_AT_decl_line
	.short	788                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x105d:0xb DW_TAG_member
	.byte	228                             # DW_AT_name
	.long	4387                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	864                             # DW_AT_decl_line
	.short	792                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1068:0xb DW_TAG_member
	.byte	252                             # DW_AT_name
	.long	4387                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	865                             # DW_AT_decl_line
	.short	928                             # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1073:0xb DW_TAG_member
	.byte	253                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	867                             # DW_AT_decl_line
	.short	1064                            # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x107e:0xb DW_TAG_member
	.byte	254                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	868                             # DW_AT_decl_line
	.short	1068                            # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x1089:0xb DW_TAG_member
	.byte	255                             # DW_AT_name
	.long	4609                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	869                             # DW_AT_decl_line
	.short	1072                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x1094:0xc DW_TAG_member
	.short	277                             # DW_AT_name
	.long	4609                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	870                             # DW_AT_decl_line
	.short	2040                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10a0:0xc DW_TAG_member
	.short	278                             # DW_AT_name
	.long	4609                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	871                             # DW_AT_decl_line
	.short	3008                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10ac:0xc DW_TAG_member
	.short	279                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	873                             # DW_AT_decl_line
	.short	3976                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10b8:0xc DW_TAG_member
	.short	280                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	884                             # DW_AT_decl_line
	.short	3980                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10c4:0xc DW_TAG_member
	.short	281                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	885                             # DW_AT_decl_line
	.short	3984                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10d0:0xc DW_TAG_member
	.short	282                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	886                             # DW_AT_decl_line
	.short	3988                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10dc:0xc DW_TAG_member
	.short	267                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	890                             # DW_AT_decl_line
	.short	3992                            # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x10e8:0xb DW_TAG_member
	.byte	108                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	893                             # DW_AT_decl_line
	.short	3996                            # DW_AT_data_member_location
	.byte	73                              # Abbrev [73] 0x10f3:0xb DW_TAG_member
	.byte	128                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	894                             # DW_AT_decl_line
	.short	4000                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x10fe:0xc DW_TAG_member
	.short	283                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	895                             # DW_AT_decl_line
	.short	4004                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x110a:0xc DW_TAG_member
	.short	284                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	897                             # DW_AT_decl_line
	.short	4008                            # DW_AT_data_member_location
	.byte	74                              # Abbrev [74] 0x1116:0xc DW_TAG_member
	.short	285                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	14                              # DW_AT_decl_file
	.short	899                             # DW_AT_decl_line
	.short	4012                            # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x1123:0x8 DW_TAG_typedef
	.long	4395                            # DW_AT_type
	.byte	251                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.byte	26                              # Abbrev [26] 0x112b:0xba DW_TAG_structure_type
	.byte	250                             # DW_AT_name
	.byte	136                             # DW_AT_byte_size
	.byte	2                               # DW_AT_decl_file
	.byte	30                              # DW_AT_decl_line
	.byte	22                              # Abbrev [22] 0x1130:0x9 DW_TAG_member
	.byte	229                             # DW_AT_name
	.long	4581                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1139:0x9 DW_TAG_member
	.byte	231                             # DW_AT_name
	.long	4589                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	33                              # DW_AT_decl_line
	.byte	4                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1142:0x9 DW_TAG_member
	.byte	233                             # DW_AT_name
	.long	1673                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	8                               # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x114b:0x9 DW_TAG_member
	.byte	234                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	35                              # DW_AT_decl_line
	.byte	16                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1154:0x9 DW_TAG_member
	.byte	235                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	36                              # DW_AT_decl_line
	.byte	28                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x115d:0x9 DW_TAG_member
	.byte	236                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	40                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1166:0x9 DW_TAG_member
	.byte	237                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	44                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x116f:0x9 DW_TAG_member
	.byte	238                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.byte	48                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1178:0x9 DW_TAG_member
	.byte	239                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.byte	52                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1181:0x9 DW_TAG_member
	.byte	240                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.byte	56                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x118a:0x9 DW_TAG_member
	.byte	241                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.byte	60                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x1193:0x9 DW_TAG_member
	.byte	242                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.byte	64                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x119c:0x9 DW_TAG_member
	.byte	243                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.byte	68                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11a5:0x9 DW_TAG_member
	.byte	244                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.byte	72                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11ae:0x9 DW_TAG_member
	.byte	100                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.byte	84                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11b7:0x9 DW_TAG_member
	.byte	245                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.byte	88                              # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11c0:0x9 DW_TAG_member
	.byte	246                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.byte	100                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11c9:0x9 DW_TAG_member
	.byte	247                             # DW_AT_name
	.long	4597                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.byte	112                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11d2:0x9 DW_TAG_member
	.byte	248                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.byte	124                             # DW_AT_data_member_location
	.byte	22                              # Abbrev [22] 0x11db:0x9 DW_TAG_member
	.byte	249                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	2                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.byte	128                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	20                              # Abbrev [20] 0x11e5:0x8 DW_TAG_typedef
	.long	1677                            # DW_AT_type
	.byte	230                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	28                              # DW_AT_decl_line
	.byte	20                              # Abbrev [20] 0x11ed:0x8 DW_TAG_typedef
	.long	1701                            # DW_AT_type
	.byte	232                             # DW_AT_name
	.byte	2                               # DW_AT_decl_file
	.byte	20                              # DW_AT_decl_line
	.byte	27                              # Abbrev [27] 0x11f5:0xc DW_TAG_array_type
	.long	1082                            # DW_AT_type
	.byte	28                              # Abbrev [28] 0x11fa:0x6 DW_TAG_subrange_type
	.long	1151                            # DW_AT_type
	.byte	3                               # DW_AT_count
	.byte	0                               # End Of Children Mark
	.byte	75                              # Abbrev [75] 0x1201:0x9 DW_TAG_typedef
	.long	4618                            # DW_AT_type
	.short	276                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	60                              # DW_AT_decl_line
	.byte	76                              # Abbrev [76] 0x120a:0xcc DW_TAG_structure_type
	.short	275                             # DW_AT_name
	.short	968                             # DW_AT_byte_size
	.byte	3                               # DW_AT_decl_file
	.byte	34                              # DW_AT_decl_line
	.byte	77                              # Abbrev [77] 0x1211:0xa DW_TAG_member
	.short	256                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	37                              # DW_AT_decl_line
	.byte	0                               # DW_AT_data_member_location
	.byte	77                              # Abbrev [77] 0x121b:0xa DW_TAG_member
	.short	257                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	38                              # DW_AT_decl_line
	.byte	255                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1225:0xb DW_TAG_member
	.short	258                             # DW_AT_name
	.long	4057                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	39                              # DW_AT_decl_line
	.short	510                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1230:0xb DW_TAG_member
	.short	259                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	40                              # DW_AT_decl_line
	.short	768                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x123b:0xb DW_TAG_member
	.short	260                             # DW_AT_name
	.long	4822                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	41                              # DW_AT_decl_line
	.short	772                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1246:0xb DW_TAG_member
	.short	262                             # DW_AT_name
	.long	4387                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	42                              # DW_AT_decl_line
	.short	776                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1251:0xb DW_TAG_member
	.short	263                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	43                              # DW_AT_decl_line
	.short	912                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x125c:0xb DW_TAG_member
	.short	264                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	44                              # DW_AT_decl_line
	.short	916                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1267:0xb DW_TAG_member
	.short	265                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	45                              # DW_AT_decl_line
	.short	920                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1272:0xb DW_TAG_member
	.short	266                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	46                              # DW_AT_decl_line
	.short	924                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x127d:0xb DW_TAG_member
	.short	267                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	47                              # DW_AT_decl_line
	.short	928                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1288:0xb DW_TAG_member
	.short	268                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	48                              # DW_AT_decl_line
	.short	932                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x1293:0xb DW_TAG_member
	.short	269                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	49                              # DW_AT_decl_line
	.short	936                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x129e:0xb DW_TAG_member
	.short	270                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	50                              # DW_AT_decl_line
	.short	940                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x12a9:0xb DW_TAG_member
	.short	271                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	51                              # DW_AT_decl_line
	.short	944                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x12b4:0xb DW_TAG_member
	.short	272                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	52                              # DW_AT_decl_line
	.short	948                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x12bf:0xb DW_TAG_member
	.short	273                             # DW_AT_name
	.long	1082                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	53                              # DW_AT_decl_line
	.short	952                             # DW_AT_data_member_location
	.byte	78                              # Abbrev [78] 0x12ca:0xb DW_TAG_member
	.short	274                             # DW_AT_name
	.long	4831                            # DW_AT_type
	.byte	3                               # DW_AT_decl_file
	.byte	56                              # DW_AT_decl_line
	.short	960                             # DW_AT_data_member_location
	.byte	0                               # End Of Children Mark
	.byte	75                              # Abbrev [75] 0x12d6:0x9 DW_TAG_typedef
	.long	1722                            # DW_AT_type
	.short	261                             # DW_AT_name
	.byte	3                               # DW_AT_decl_file
	.byte	32                              # DW_AT_decl_line
	.byte	24                              # Abbrev [24] 0x12df:0x5 DW_TAG_pointer_type
	.long	1082                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x12e4:0x5 DW_TAG_pointer_type
	.long	4609                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x12e9:0x5 DW_TAG_pointer_type
	.long	4387                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x12ee:0x5 DW_TAG_pointer_type
	.long	1078                            # DW_AT_type
	.byte	24                              # Abbrev [24] 0x12f3:0x5 DW_TAG_pointer_type
	.long	1127                            # DW_AT_type
	.byte	0                               # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_rnglists,"",@progbits
	.long	.Ldebug_list_header_end1-.Ldebug_list_header_start1 # Length
.Ldebug_list_header_start1:
	.short	5                               # Version
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
	.long	9                               # Offset entry count
.Lrnglists_table_base0:
	.long	.Ldebug_ranges0-.Lrnglists_table_base0
	.long	.Ldebug_ranges1-.Lrnglists_table_base0
	.long	.Ldebug_ranges2-.Lrnglists_table_base0
	.long	.Ldebug_ranges3-.Lrnglists_table_base0
	.long	.Ldebug_ranges4-.Lrnglists_table_base0
	.long	.Ldebug_ranges5-.Lrnglists_table_base0
	.long	.Ldebug_ranges6-.Lrnglists_table_base0
	.long	.Ldebug_ranges7-.Lrnglists_table_base0
	.long	.Ldebug_ranges8-.Lrnglists_table_base0
.Ldebug_ranges0:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp267-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp537-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges1:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp267-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp299-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp606-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp608-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges2:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp299-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp317-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp527-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp528-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges3:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp321-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp322-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp324-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp371-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges4:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp371-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp428-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp432-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp465-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges5:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp447-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp451-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp452-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp455-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp458-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp462-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges6:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp477-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp478-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp480-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp497-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp502-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp504-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp634-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp636-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp638-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp642-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp754-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp755-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges7:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp504-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp527-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp541-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp571-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp579-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp580-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp584-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp585-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp597-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp599-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp609-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp633-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_ranges8:
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp816-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp820-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp821-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp824-.Lfunc_begin0         #   ending offset
	.byte	4                               # DW_RLE_offset_pair
	.uleb128 .Ltmp828-.Lfunc_begin0         #   starting offset
	.uleb128 .Ltmp832-.Lfunc_begin0         #   ending offset
	.byte	0                               # DW_RLE_end_of_list
.Ldebug_list_header_end1:
	.section	.debug_str_offsets,"",@progbits
	.long	1192                            # Length of String Offsets Set
	.short	5
	.short	0
.Lstr_offsets_base0:
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)" # string offset=0
.Linfo_string1:
	.asciz	"ldecod_src/io_tiff.c"          # string offset=105
.Linfo_string2:
	.asciz	"/home/yjs/workspace/x264-test/src" # string offset=126
.Linfo_string3:
	.asciz	"t"                             # string offset=160
.Linfo_string4:
	.asciz	"img"                           # string offset=162
.Linfo_string5:
	.asciz	"unsigned short"                # string offset=166
.Linfo_string6:
	.asciz	"uint16"                        # string offset=181
.Linfo_string7:
	.asciz	"fileInMemory"                  # string offset=188
.Linfo_string8:
	.asciz	"unsigned char"                 # string offset=201
.Linfo_string9:
	.asciz	"uint8"                         # string offset=215
.Linfo_string10:
	.asciz	"mp"                            # string offset=221
.Linfo_string11:
	.asciz	"le"                            # string offset=224
.Linfo_string12:
	.asciz	"int"                           # string offset=227
.Linfo_string13:
	.asciz	"nStrips"                       # string offset=231
.Linfo_string14:
	.asciz	"ifh"                           # string offset=239
.Linfo_string15:
	.asciz	"byteOrder"                     # string offset=243
.Linfo_string16:
	.asciz	"arbitraryNumber"               # string offset=253
.Linfo_string17:
	.asciz	"offset"                        # string offset=269
.Linfo_string18:
	.asciz	"unsigned int"                  # string offset=276
.Linfo_string19:
	.asciz	"uint32"                        # string offset=289
.Linfo_string20:
	.asciz	"TiffImageFileHeader"           # string offset=296
.Linfo_string21:
	.asciz	"Orientation"                   # string offset=316
.Linfo_string22:
	.asciz	"BitsPerSample"                 # string offset=328
.Linfo_string23:
	.asciz	"__ARRAY_SIZE_TYPE__"           # string offset=342
.Linfo_string24:
	.asciz	"RowsPerStrip"                  # string offset=362
.Linfo_string25:
	.asciz	"ImageLength"                   # string offset=375
.Linfo_string26:
	.asciz	"ImageWidth"                    # string offset=387
.Linfo_string27:
	.asciz	"StripByteCounts"               # string offset=398
.Linfo_string28:
	.asciz	"StripOffsets"                  # string offset=414
.Linfo_string29:
	.asciz	"XResolution"                   # string offset=427
.Linfo_string30:
	.asciz	"YResolution"                   # string offset=439
.Linfo_string31:
	.asciz	"getU16"                        # string offset=451
.Linfo_string32:
	.asciz	"getU32"                        # string offset=458
.Linfo_string33:
	.asciz	"Tiff"                          # string offset=465
.Linfo_string34:
	.asciz	"char"                          # string offset=470
.Linfo_string35:
	.asciz	"Coef"                          # string offset=475
.Linfo_string36:
	.asciz	"double"                        # string offset=480
.Linfo_string37:
	.asciz	"CF_UNKNOWN"                    # string offset=487
.Linfo_string38:
	.asciz	"YUV400"                        # string offset=498
.Linfo_string39:
	.asciz	"YUV420"                        # string offset=505
.Linfo_string40:
	.asciz	"YUV422"                        # string offset=512
.Linfo_string41:
	.asciz	"YUV444"                        # string offset=519
.Linfo_string42:
	.asciz	"CM_UNKNOWN"                    # string offset=526
.Linfo_string43:
	.asciz	"CM_YUV"                        # string offset=537
.Linfo_string44:
	.asciz	"CM_RGB"                        # string offset=544
.Linfo_string45:
	.asciz	"CM_XYZ"                        # string offset=551
.Linfo_string46:
	.asciz	"VIDEO_UNKNOWN"                 # string offset=558
.Linfo_string47:
	.asciz	"VIDEO_YUV"                     # string offset=572
.Linfo_string48:
	.asciz	"VIDEO_RGB"                     # string offset=582
.Linfo_string49:
	.asciz	"VIDEO_XYZ"                     # string offset=592
.Linfo_string50:
	.asciz	"VIDEO_TIFF"                    # string offset=602
.Linfo_string51:
	.asciz	"VIDEO_AVI"                     # string offset=613
.Linfo_string52:
	.asciz	"VC_NULL"                       # string offset=623
.Linfo_string53:
	.asciz	"VC_ITU_REC709"                 # string offset=631
.Linfo_string54:
	.asciz	"VC_CCIR_601"                   # string offset=645
.Linfo_string55:
	.asciz	"VC_FCC"                        # string offset=657
.Linfo_string56:
	.asciz	"VC_ITU_REC624BG"               # string offset=664
.Linfo_string57:
	.asciz	"VC_SMPTE_170M"                 # string offset=680
.Linfo_string58:
	.asciz	"VC_SMPTE_240M"                 # string offset=694
.Linfo_string59:
	.asciz	"VC_SMPTE_260M"                 # string offset=708
.Linfo_string60:
	.asciz	"VC_ITU_REC709_EXACT"           # string offset=722
.Linfo_string61:
	.asciz	"VC_MAX"                        # string offset=742
.Linfo_string62:
	.asciz	"VideoCode"                     # string offset=749
.Linfo_string63:
	.asciz	"T_BYTE"                        # string offset=759
.Linfo_string64:
	.asciz	"T_ASCII"                       # string offset=766
.Linfo_string65:
	.asciz	"T_SHORT"                       # string offset=774
.Linfo_string66:
	.asciz	"T_LONG"                        # string offset=782
.Linfo_string67:
	.asciz	"T_RATIONAL"                    # string offset=789
.Linfo_string68:
	.asciz	"T_SBYTE"                       # string offset=800
.Linfo_string69:
	.asciz	"T_UNDEFINED"                   # string offset=808
.Linfo_string70:
	.asciz	"T_SSHORT"                      # string offset=820
.Linfo_string71:
	.asciz	"T_SLONG"                       # string offset=829
.Linfo_string72:
	.asciz	"T_SRATIONAL"                   # string offset=837
.Linfo_string73:
	.asciz	"T_FLOAT"                       # string offset=849
.Linfo_string74:
	.asciz	"T_DOUBLE"                      # string offset=857
.Linfo_string75:
	.asciz	"TiffType"                      # string offset=866
.Linfo_string76:
	.asciz	"signed char"                   # string offset=875
.Linfo_string77:
	.asciz	"long"                          # string offset=887
.Linfo_string78:
	.asciz	"free"                          # string offset=892
.Linfo_string79:
	.asciz	"readFileIntoMemory"            # string offset=897
.Linfo_string80:
	.asciz	"path"                          # string offset=916
.Linfo_string81:
	.asciz	"endian"                        # string offset=921
.Linfo_string82:
	.asciz	"machineLittleEndian"           # string offset=928
.Linfo_string83:
	.asciz	"fd"                            # string offset=948
.Linfo_string84:
	.asciz	"cnt"                           # string offset=951
.Linfo_string85:
	.asciz	"result"                        # string offset=955
.Linfo_string86:
	.asciz	"readTiff"                      # string offset=962
.Linfo_string87:
	.asciz	"Error"                         # string offset=971
.Linfo_string88:
	.asciz	"u"                             # string offset=977
.Linfo_string89:
	.asciz	"in"                            # string offset=979
.Linfo_string90:
	.asciz	"out"                           # string offset=982
.Linfo_string91:
	.asciz	"readImageFileHeader"           # string offset=986
.Linfo_string92:
	.asciz	"readImageFileDirectory"        # string offset=1006
.Linfo_string93:
	.asciz	"nEntries"                      # string offset=1029
.Linfo_string94:
	.asciz	"i"                             # string offset=1038
.Linfo_string95:
	.asciz	"readDirectoryEntry"            # string offset=1040
.Linfo_string96:
	.asciz	"type"                          # string offset=1059
.Linfo_string97:
	.asciz	"count"                         # string offset=1064
.Linfo_string98:
	.asciz	"tag"                           # string offset=1070
.Linfo_string99:
	.asciz	"readImageData"                 # string offset=1074
.Linfo_string100:
	.asciz	"size"                          # string offset=1088
.Linfo_string101:
	.asciz	"p"                             # string offset=1093
.Linfo_string102:
	.asciz	"n"                             # string offset=1095
.Linfo_string103:
	.asciz	"s"                             # string offset=1097
.Linfo_string104:
	.asciz	"j"                             # string offset=1099
.Linfo_string105:
	.asciz	"RGB_YUV_initialize"            # string offset=1101
.Linfo_string106:
	.asciz	"T"                             # string offset=1120
.Linfo_string107:
	.asciz	"pixMax"                        # string offset=1122
.Linfo_string108:
	.asciz	"stdRange"                      # string offset=1129
.Linfo_string109:
	.asciz	"y"                             # string offset=1138
.Linfo_string110:
	.asciz	"v"                             # string offset=1140
.Linfo_string111:
	.asciz	"r"                             # string offset=1142
.Linfo_string112:
	.asciz	"g"                             # string offset=1144
.Linfo_string113:
	.asciz	"b"                             # string offset=1146
.Linfo_string114:
	.asciz	"yr"                            # string offset=1148
.Linfo_string115:
	.asciz	"yg"                            # string offset=1151
.Linfo_string116:
	.asciz	"yb"                            # string offset=1154
.Linfo_string117:
	.asciz	"ur"                            # string offset=1157
.Linfo_string118:
	.asciz	"ug"                            # string offset=1160
.Linfo_string119:
	.asciz	"ub"                            # string offset=1163
.Linfo_string120:
	.asciz	"vr"                            # string offset=1166
.Linfo_string121:
	.asciz	"vg"                            # string offset=1169
.Linfo_string122:
	.asciz	"vb"                            # string offset=1172
.Linfo_string123:
	.asciz	"offy"                          # string offset=1175
.Linfo_string124:
	.asciz	"offuv"                         # string offset=1180
.Linfo_string125:
	.asciz	"sy"                            # string offset=1186
.Linfo_string126:
	.asciz	"suv"                           # string offset=1189
.Linfo_string127:
	.asciz	"RGB_YUV"                       # string offset=1193
.Linfo_string128:
	.asciz	"videoCode"                     # string offset=1201
.Linfo_string129:
	.asciz	"pixScale"                      # string offset=1211
.Linfo_string130:
	.asciz	"RGB_YUV_rgb_to_yuv"            # string offset=1220
.Linfo_string131:
	.asciz	"rp"                            # string offset=1239
.Linfo_string132:
	.asciz	"gp"                            # string offset=1242
.Linfo_string133:
	.asciz	"bp"                            # string offset=1245
.Linfo_string134:
	.asciz	"xres"                          # string offset=1248
.Linfo_string135:
	.asciz	"yres"                          # string offset=1253
.Linfo_string136:
	.asciz	"rgb_stride"                    # string offset=1258
.Linfo_string137:
	.asciz	"yp"                            # string offset=1269
.Linfo_string138:
	.asciz	"up"                            # string offset=1272
.Linfo_string139:
	.asciz	"vp"                            # string offset=1275
.Linfo_string140:
	.asciz	"yuv_stride"                    # string offset=1278
.Linfo_string141:
	.asciz	"snprintf"                      # string offset=1289
.Linfo_string142:
	.asciz	"unsigned long"                 # string offset=1298
.Linfo_string143:
	.asciz	"size_t"                        # string offset=1312
.Linfo_string144:
	.asciz	"strcpy"                        # string offset=1319
.Linfo_string145:
	.asciz	"open"                          # string offset=1326
.Linfo_string146:
	.asciz	"lseek"                         # string offset=1331
.Linfo_string147:
	.asciz	"__off_t"                       # string offset=1337
.Linfo_string148:
	.asciz	"realloc"                       # string offset=1345
.Linfo_string149:
	.asciz	"read"                          # string offset=1353
.Linfo_string150:
	.asciz	"__ssize_t"                     # string offset=1358
.Linfo_string151:
	.asciz	"ssize_t"                       # string offset=1368
.Linfo_string152:
	.asciz	"close"                         # string offset=1376
.Linfo_string153:
	.asciz	"fprintf"                       # string offset=1382
.Linfo_string154:
	.asciz	"_flags"                        # string offset=1390
.Linfo_string155:
	.asciz	"_IO_read_ptr"                  # string offset=1397
.Linfo_string156:
	.asciz	"_IO_read_end"                  # string offset=1410
.Linfo_string157:
	.asciz	"_IO_read_base"                 # string offset=1423
.Linfo_string158:
	.asciz	"_IO_write_base"                # string offset=1437
.Linfo_string159:
	.asciz	"_IO_write_ptr"                 # string offset=1452
.Linfo_string160:
	.asciz	"_IO_write_end"                 # string offset=1466
.Linfo_string161:
	.asciz	"_IO_buf_base"                  # string offset=1480
.Linfo_string162:
	.asciz	"_IO_buf_end"                   # string offset=1493
.Linfo_string163:
	.asciz	"_IO_save_base"                 # string offset=1505
.Linfo_string164:
	.asciz	"_IO_backup_base"               # string offset=1519
.Linfo_string165:
	.asciz	"_IO_save_end"                  # string offset=1535
.Linfo_string166:
	.asciz	"_markers"                      # string offset=1548
.Linfo_string167:
	.asciz	"_IO_marker"                    # string offset=1557
.Linfo_string168:
	.asciz	"_chain"                        # string offset=1568
.Linfo_string169:
	.asciz	"_fileno"                       # string offset=1575
.Linfo_string170:
	.asciz	"_flags2"                       # string offset=1583
.Linfo_string171:
	.asciz	"_old_offset"                   # string offset=1591
.Linfo_string172:
	.asciz	"_cur_column"                   # string offset=1603
.Linfo_string173:
	.asciz	"_vtable_offset"                # string offset=1615
.Linfo_string174:
	.asciz	"_shortbuf"                     # string offset=1630
.Linfo_string175:
	.asciz	"_lock"                         # string offset=1640
.Linfo_string176:
	.asciz	"_IO_lock_t"                    # string offset=1646
.Linfo_string177:
	.asciz	"_offset"                       # string offset=1657
.Linfo_string178:
	.asciz	"__off64_t"                     # string offset=1665
.Linfo_string179:
	.asciz	"_codecvt"                      # string offset=1675
.Linfo_string180:
	.asciz	"_IO_codecvt"                   # string offset=1684
.Linfo_string181:
	.asciz	"_wide_data"                    # string offset=1696
.Linfo_string182:
	.asciz	"_IO_wide_data"                 # string offset=1707
.Linfo_string183:
	.asciz	"_freeres_list"                 # string offset=1721
.Linfo_string184:
	.asciz	"_freeres_buf"                  # string offset=1735
.Linfo_string185:
	.asciz	"__pad5"                        # string offset=1748
.Linfo_string186:
	.asciz	"_mode"                         # string offset=1755
.Linfo_string187:
	.asciz	"_unused2"                      # string offset=1761
.Linfo_string188:
	.asciz	"_IO_FILE"                      # string offset=1770
.Linfo_string189:
	.asciz	"FILE"                          # string offset=1779
.Linfo_string190:
	.asciz	"report_stats_on_error"         # string offset=1784
.Linfo_string191:
	.asciz	"malloc"                        # string offset=1806
.Linfo_string192:
	.asciz	"constructTiff"                 # string offset=1813
.Linfo_string193:
	.asciz	"destructTiff"                  # string offset=1827
.Linfo_string194:
	.asciz	"horizontal_half_1chan_cosite"  # string offset=1840
.Linfo_string195:
	.asciz	"vertical_half_1chan"           # string offset=1869
.Linfo_string196:
	.asciz	"ReadTIFFImage"                 # string offset=1889
.Linfo_string197:
	.asciz	"getSwappedU16"                 # string offset=1903
.Linfo_string198:
	.asciz	"getSwappedU32"                 # string offset=1917
.Linfo_string199:
	.asciz	"getIntArray"                   # string offset=1931
.Linfo_string200:
	.asciz	"srcPtr"                        # string offset=1943
.Linfo_string201:
	.asciz	"srcXres"                       # string offset=1950
.Linfo_string202:
	.asciz	"srcZres"                       # string offset=1958
.Linfo_string203:
	.asciz	"dstPtr"                        # string offset=1966
.Linfo_string204:
	.asciz	"dstZres"                       # string offset=1973
.Linfo_string205:
	.asciz	"src"                           # string offset=1981
.Linfo_string206:
	.asciz	"dst"                           # string offset=1985
.Linfo_string207:
	.asciz	"x"                             # string offset=1989
.Linfo_string208:
	.asciz	"limit"                         # string offset=1991
.Linfo_string209:
	.asciz	"n1"                            # string offset=1997
.Linfo_string210:
	.asciz	"n3"                            # string offset=2000
.Linfo_string211:
	.asciz	"n5"                            # string offset=2003
.Linfo_string212:
	.asciz	"n7"                            # string offset=2006
.Linfo_string213:
	.asciz	"srcYres"                       # string offset=2009
.Linfo_string214:
	.asciz	"srcRowCount"                   # string offset=2017
.Linfo_string215:
	.asciz	"n2"                            # string offset=2029
.Linfo_string216:
	.asciz	"n4"                            # string offset=2032
.Linfo_string217:
	.asciz	"n6"                            # string offset=2035
.Linfo_string218:
	.asciz	"p_Inp"                         # string offset=2038
.Linfo_string219:
	.asciz	"infile"                        # string offset=2044
.Linfo_string220:
	.asciz	"outfile"                       # string offset=2051
.Linfo_string221:
	.asciz	"reffile"                       # string offset=2059
.Linfo_string222:
	.asciz	"FileFormat"                    # string offset=2067
.Linfo_string223:
	.asciz	"ref_offset"                    # string offset=2078
.Linfo_string224:
	.asciz	"poc_scale"                     # string offset=2089
.Linfo_string225:
	.asciz	"write_uv"                      # string offset=2099
.Linfo_string226:
	.asciz	"silent"                        # string offset=2108
.Linfo_string227:
	.asciz	"intra_profile_deblocking"      # string offset=2115
.Linfo_string228:
	.asciz	"source"                        # string offset=2140
.Linfo_string229:
	.asciz	"yuv_format"                    # string offset=2147
.Linfo_string230:
	.asciz	"ColorFormat"                   # string offset=2158
.Linfo_string231:
	.asciz	"color_model"                   # string offset=2170
.Linfo_string232:
	.asciz	"ColorModel"                    # string offset=2182
.Linfo_string233:
	.asciz	"frame_rate"                    # string offset=2193
.Linfo_string234:
	.asciz	"width"                         # string offset=2204
.Linfo_string235:
	.asciz	"height"                        # string offset=2210
.Linfo_string236:
	.asciz	"auto_crop_right"               # string offset=2217
.Linfo_string237:
	.asciz	"auto_crop_bottom"              # string offset=2233
.Linfo_string238:
	.asciz	"auto_crop_right_cr"            # string offset=2250
.Linfo_string239:
	.asciz	"auto_crop_bottom_cr"           # string offset=2269
.Linfo_string240:
	.asciz	"width_crop"                    # string offset=2289
.Linfo_string241:
	.asciz	"height_crop"                   # string offset=2300
.Linfo_string242:
	.asciz	"mb_width"                      # string offset=2312
.Linfo_string243:
	.asciz	"mb_height"                     # string offset=2321
.Linfo_string244:
	.asciz	"size_cmp"                      # string offset=2331
.Linfo_string245:
	.asciz	"bit_depth"                     # string offset=2340
.Linfo_string246:
	.asciz	"max_value"                     # string offset=2350
.Linfo_string247:
	.asciz	"max_value_sq"                  # string offset=2360
.Linfo_string248:
	.asciz	"pic_unit_size_on_disk"         # string offset=2373
.Linfo_string249:
	.asciz	"pic_unit_size_shift3"          # string offset=2395
.Linfo_string250:
	.asciz	"frame_format"                  # string offset=2416
.Linfo_string251:
	.asciz	"FrameFormat"                   # string offset=2429
.Linfo_string252:
	.asciz	"output"                        # string offset=2441
.Linfo_string253:
	.asciz	"ProcessInput"                  # string offset=2448
.Linfo_string254:
	.asciz	"enable_32_pulldown"            # string offset=2461
.Linfo_string255:
	.asciz	"input_file1"                   # string offset=2480
.Linfo_string256:
	.asciz	"fname"                         # string offset=2492
.Linfo_string257:
	.asciz	"fhead"                         # string offset=2498
.Linfo_string258:
	.asciz	"ftail"                         # string offset=2504
.Linfo_string259:
	.asciz	"f_num"                         # string offset=2510
.Linfo_string260:
	.asciz	"vdtype"                        # string offset=2516
.Linfo_string261:
	.asciz	"VideoFileType"                 # string offset=2523
.Linfo_string262:
	.asciz	"format"                        # string offset=2537
.Linfo_string263:
	.asciz	"is_concatenated"               # string offset=2544
.Linfo_string264:
	.asciz	"is_interleaved"                # string offset=2560
.Linfo_string265:
	.asciz	"zero_pad"                      # string offset=2575
.Linfo_string266:
	.asciz	"num_digits"                    # string offset=2584
.Linfo_string267:
	.asciz	"start_frame"                   # string offset=2595
.Linfo_string268:
	.asciz	"end_frame"                     # string offset=2607
.Linfo_string269:
	.asciz	"nframes"                       # string offset=2617
.Linfo_string270:
	.asciz	"crop_x_size"                   # string offset=2625
.Linfo_string271:
	.asciz	"crop_y_size"                   # string offset=2637
.Linfo_string272:
	.asciz	"crop_x_offset"                 # string offset=2649
.Linfo_string273:
	.asciz	"crop_y_offset"                 # string offset=2663
.Linfo_string274:
	.asciz	"avi"                           # string offset=2677
.Linfo_string275:
	.asciz	"video_data_file"               # string offset=2681
.Linfo_string276:
	.asciz	"VideoDataFile"                 # string offset=2697
.Linfo_string277:
	.asciz	"input_file2"                   # string offset=2711
.Linfo_string278:
	.asciz	"input_file3"                   # string offset=2723
.Linfo_string279:
	.asciz	"DecodeAllLayers"               # string offset=2735
.Linfo_string280:
	.asciz	"conceal_mode"                  # string offset=2751
.Linfo_string281:
	.asciz	"ref_poc_gap"                   # string offset=2764
.Linfo_string282:
	.asciz	"poc_gap"                       # string offset=2776
.Linfo_string283:
	.asciz	"export_views"                  # string offset=2784
.Linfo_string284:
	.asciz	"iDecFrmNum"                    # string offset=2797
.Linfo_string285:
	.asciz	"bDisplayDecParams"             # string offset=2808
.Linfo_string286:
	.asciz	"inp_par"                       # string offset=2826
.Linfo_string287:
	.asciz	"InputParameters"               # string offset=2834
.Linfo_string288:
	.asciz	"input_file"                    # string offset=2850
.Linfo_string289:
	.asciz	"FrameNoInFile"                 # string offset=2861
.Linfo_string290:
	.asciz	"buf"                           # string offset=2875
.Linfo_string291:
	.asciz	"temp"                          # string offset=2879
.Linfo_string292:
	.asciz	"temp2"                         # string offset=2884
.Linfo_string293:
	.asciz	"frameNumberInFile"             # string offset=2890
.Linfo_string294:
	.asciz	"nComponents"                   # string offset=2908
.Linfo_string295:
	.asciz	"rgb_yuv"                       # string offset=2920
.Linfo_string296:
	.asciz	"a"                             # string offset=2928
	.section	.debug_str_offsets,"",@progbits
	.long	.Linfo_string0
	.long	.Linfo_string1
	.long	.Linfo_string2
	.long	.Linfo_string3
	.long	.Linfo_string4
	.long	.Linfo_string5
	.long	.Linfo_string6
	.long	.Linfo_string7
	.long	.Linfo_string8
	.long	.Linfo_string9
	.long	.Linfo_string10
	.long	.Linfo_string11
	.long	.Linfo_string12
	.long	.Linfo_string13
	.long	.Linfo_string14
	.long	.Linfo_string15
	.long	.Linfo_string16
	.long	.Linfo_string17
	.long	.Linfo_string18
	.long	.Linfo_string19
	.long	.Linfo_string20
	.long	.Linfo_string21
	.long	.Linfo_string22
	.long	.Linfo_string23
	.long	.Linfo_string24
	.long	.Linfo_string25
	.long	.Linfo_string26
	.long	.Linfo_string27
	.long	.Linfo_string28
	.long	.Linfo_string29
	.long	.Linfo_string30
	.long	.Linfo_string31
	.long	.Linfo_string32
	.long	.Linfo_string33
	.long	.Linfo_string34
	.long	.Linfo_string35
	.long	.Linfo_string36
	.long	.Linfo_string37
	.long	.Linfo_string38
	.long	.Linfo_string39
	.long	.Linfo_string40
	.long	.Linfo_string41
	.long	.Linfo_string42
	.long	.Linfo_string43
	.long	.Linfo_string44
	.long	.Linfo_string45
	.long	.Linfo_string46
	.long	.Linfo_string47
	.long	.Linfo_string48
	.long	.Linfo_string49
	.long	.Linfo_string50
	.long	.Linfo_string51
	.long	.Linfo_string52
	.long	.Linfo_string53
	.long	.Linfo_string54
	.long	.Linfo_string55
	.long	.Linfo_string56
	.long	.Linfo_string57
	.long	.Linfo_string58
	.long	.Linfo_string59
	.long	.Linfo_string60
	.long	.Linfo_string61
	.long	.Linfo_string62
	.long	.Linfo_string63
	.long	.Linfo_string64
	.long	.Linfo_string65
	.long	.Linfo_string66
	.long	.Linfo_string67
	.long	.Linfo_string68
	.long	.Linfo_string69
	.long	.Linfo_string70
	.long	.Linfo_string71
	.long	.Linfo_string72
	.long	.Linfo_string73
	.long	.Linfo_string74
	.long	.Linfo_string75
	.long	.Linfo_string76
	.long	.Linfo_string77
	.long	.Linfo_string78
	.long	.Linfo_string79
	.long	.Linfo_string80
	.long	.Linfo_string81
	.long	.Linfo_string82
	.long	.Linfo_string83
	.long	.Linfo_string84
	.long	.Linfo_string85
	.long	.Linfo_string86
	.long	.Linfo_string87
	.long	.Linfo_string88
	.long	.Linfo_string89
	.long	.Linfo_string90
	.long	.Linfo_string91
	.long	.Linfo_string92
	.long	.Linfo_string93
	.long	.Linfo_string94
	.long	.Linfo_string95
	.long	.Linfo_string96
	.long	.Linfo_string97
	.long	.Linfo_string98
	.long	.Linfo_string99
	.long	.Linfo_string100
	.long	.Linfo_string101
	.long	.Linfo_string102
	.long	.Linfo_string103
	.long	.Linfo_string104
	.long	.Linfo_string105
	.long	.Linfo_string106
	.long	.Linfo_string107
	.long	.Linfo_string108
	.long	.Linfo_string109
	.long	.Linfo_string110
	.long	.Linfo_string111
	.long	.Linfo_string112
	.long	.Linfo_string113
	.long	.Linfo_string114
	.long	.Linfo_string115
	.long	.Linfo_string116
	.long	.Linfo_string117
	.long	.Linfo_string118
	.long	.Linfo_string119
	.long	.Linfo_string120
	.long	.Linfo_string121
	.long	.Linfo_string122
	.long	.Linfo_string123
	.long	.Linfo_string124
	.long	.Linfo_string125
	.long	.Linfo_string126
	.long	.Linfo_string127
	.long	.Linfo_string128
	.long	.Linfo_string129
	.long	.Linfo_string130
	.long	.Linfo_string131
	.long	.Linfo_string132
	.long	.Linfo_string133
	.long	.Linfo_string134
	.long	.Linfo_string135
	.long	.Linfo_string136
	.long	.Linfo_string137
	.long	.Linfo_string138
	.long	.Linfo_string139
	.long	.Linfo_string140
	.long	.Linfo_string141
	.long	.Linfo_string142
	.long	.Linfo_string143
	.long	.Linfo_string144
	.long	.Linfo_string145
	.long	.Linfo_string146
	.long	.Linfo_string147
	.long	.Linfo_string148
	.long	.Linfo_string149
	.long	.Linfo_string150
	.long	.Linfo_string151
	.long	.Linfo_string152
	.long	.Linfo_string153
	.long	.Linfo_string154
	.long	.Linfo_string155
	.long	.Linfo_string156
	.long	.Linfo_string157
	.long	.Linfo_string158
	.long	.Linfo_string159
	.long	.Linfo_string160
	.long	.Linfo_string161
	.long	.Linfo_string162
	.long	.Linfo_string163
	.long	.Linfo_string164
	.long	.Linfo_string165
	.long	.Linfo_string166
	.long	.Linfo_string167
	.long	.Linfo_string168
	.long	.Linfo_string169
	.long	.Linfo_string170
	.long	.Linfo_string171
	.long	.Linfo_string172
	.long	.Linfo_string173
	.long	.Linfo_string174
	.long	.Linfo_string175
	.long	.Linfo_string176
	.long	.Linfo_string177
	.long	.Linfo_string178
	.long	.Linfo_string179
	.long	.Linfo_string180
	.long	.Linfo_string181
	.long	.Linfo_string182
	.long	.Linfo_string183
	.long	.Linfo_string184
	.long	.Linfo_string185
	.long	.Linfo_string186
	.long	.Linfo_string187
	.long	.Linfo_string188
	.long	.Linfo_string189
	.long	.Linfo_string190
	.long	.Linfo_string191
	.long	.Linfo_string192
	.long	.Linfo_string193
	.long	.Linfo_string194
	.long	.Linfo_string195
	.long	.Linfo_string196
	.long	.Linfo_string197
	.long	.Linfo_string198
	.long	.Linfo_string199
	.long	.Linfo_string200
	.long	.Linfo_string201
	.long	.Linfo_string202
	.long	.Linfo_string203
	.long	.Linfo_string204
	.long	.Linfo_string205
	.long	.Linfo_string206
	.long	.Linfo_string207
	.long	.Linfo_string208
	.long	.Linfo_string209
	.long	.Linfo_string210
	.long	.Linfo_string211
	.long	.Linfo_string212
	.long	.Linfo_string213
	.long	.Linfo_string214
	.long	.Linfo_string215
	.long	.Linfo_string216
	.long	.Linfo_string217
	.long	.Linfo_string218
	.long	.Linfo_string219
	.long	.Linfo_string220
	.long	.Linfo_string221
	.long	.Linfo_string222
	.long	.Linfo_string223
	.long	.Linfo_string224
	.long	.Linfo_string225
	.long	.Linfo_string226
	.long	.Linfo_string227
	.long	.Linfo_string228
	.long	.Linfo_string229
	.long	.Linfo_string230
	.long	.Linfo_string231
	.long	.Linfo_string232
	.long	.Linfo_string233
	.long	.Linfo_string234
	.long	.Linfo_string235
	.long	.Linfo_string236
	.long	.Linfo_string237
	.long	.Linfo_string238
	.long	.Linfo_string239
	.long	.Linfo_string240
	.long	.Linfo_string241
	.long	.Linfo_string242
	.long	.Linfo_string243
	.long	.Linfo_string244
	.long	.Linfo_string245
	.long	.Linfo_string246
	.long	.Linfo_string247
	.long	.Linfo_string248
	.long	.Linfo_string249
	.long	.Linfo_string250
	.long	.Linfo_string251
	.long	.Linfo_string252
	.long	.Linfo_string253
	.long	.Linfo_string254
	.long	.Linfo_string255
	.long	.Linfo_string256
	.long	.Linfo_string257
	.long	.Linfo_string258
	.long	.Linfo_string259
	.long	.Linfo_string260
	.long	.Linfo_string261
	.long	.Linfo_string262
	.long	.Linfo_string263
	.long	.Linfo_string264
	.long	.Linfo_string265
	.long	.Linfo_string266
	.long	.Linfo_string267
	.long	.Linfo_string268
	.long	.Linfo_string269
	.long	.Linfo_string270
	.long	.Linfo_string271
	.long	.Linfo_string272
	.long	.Linfo_string273
	.long	.Linfo_string274
	.long	.Linfo_string275
	.long	.Linfo_string276
	.long	.Linfo_string277
	.long	.Linfo_string278
	.long	.Linfo_string279
	.long	.Linfo_string280
	.long	.Linfo_string281
	.long	.Linfo_string282
	.long	.Linfo_string283
	.long	.Linfo_string284
	.long	.Linfo_string285
	.long	.Linfo_string286
	.long	.Linfo_string287
	.long	.Linfo_string288
	.long	.Linfo_string289
	.long	.Linfo_string290
	.long	.Linfo_string291
	.long	.Linfo_string292
	.long	.Linfo_string293
	.long	.Linfo_string294
	.long	.Linfo_string295
	.long	.Linfo_string296
	.section	.debug_addr,"",@progbits
	.long	.Ldebug_addr_end0-.Ldebug_addr_start0 # Length of contribution
.Ldebug_addr_start0:
	.short	5                               # DWARF version number
	.byte	8                               # Address size
	.byte	0                               # Segment selector size
.Laddr_table_base0:
	.quad	ReadTIFFImage.t
	.quad	.L.str
	.quad	.L.str.1
	.quad	.L.str.2
	.quad	.L.str.3
	.quad	.L.str.4
	.quad	.L.str.5
	.quad	.L.str.6
	.quad	.L.str.7
	.quad	.L.str.8
	.quad	.L.str.9
	.quad	.L.str.10
	.quad	.L.str.11
	.quad	.L.str.12
	.quad	.L.str.13
	.quad	.L.str.14
	.quad	.L.str.15
	.quad	.L.str.16
	.quad	.L.str.17
	.quad	.L.str.18
	.quad	.L.str.19
	.quad	.L.str.20
	.quad	.L.str.21
	.quad	Coef
	.quad	.Lfunc_begin0
	.quad	.Lfunc_begin1
	.quad	.Ltmp5
	.quad	.Ltmp9
	.quad	.Lfunc_begin2
	.quad	.Lfunc_begin3
	.quad	.Lfunc_begin4
	.quad	.Ltmp299
	.quad	.Ltmp303
	.quad	.Ltmp307
	.quad	.Ltmp317
	.quad	.Ltmp259
	.quad	.Ltmp266
	.quad	.Ltmp268
	.quad	.Ltmp271
	.quad	.Ltmp275
	.quad	.Ltmp278
	.quad	.Ltmp282
	.quad	.Ltmp284
	.quad	.Ltmp291
	.quad	.Ltmp294
	.quad	.Ltmp318
	.quad	.Ltmp325
	.quad	.Ltmp327
	.quad	.Ltmp329
	.quad	.Ltmp331
	.quad	.Ltmp339
	.quad	.Ltmp343
	.quad	.Ltmp360
	.quad	.Ltmp365
	.quad	.Ltmp374
	.quad	.Ltmp532
	.quad	.Ltmp536
	.quad	.Ltmp538
	.quad	.Ltmp577
	.quad	.Ltmp596
	.quad	.Ltmp637
	.quad	.Ltmp659
	.quad	.Ltmp661
	.quad	.Ltmp662
	.quad	.Ltmp663
	.quad	.Ltmp664
	.quad	.Ltmp665
	.quad	.Ltmp690
	.quad	.Ltmp691
	.quad	.Ltmp746
	.quad	.Ltmp749
	.quad	.Ltmp753
	.quad	.Ltmp757
	.quad	.Lfunc_begin5
	.quad	.Lfunc_begin6
	.quad	.Lfunc_begin7
	.quad	.Lfunc_begin8
	.quad	.Lfunc_begin9
	.quad	.Ltmp785
	.quad	.Ltmp800
	.quad	.Ltmp529
.Ldebug_addr_end0:
	.ident	"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"
	.section	".note.GNU-stack","",@progbits
	.section	.debug_line,"",@progbits
.Lline_table_start0:
