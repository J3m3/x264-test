; ModuleID = 'ldecod_src/memalloc.c'
source_filename = "ldecod_src/memalloc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.distortion_data = type { [4 x [4 x i32]], [4 x [4 x i64]], [2 x [2 x i64]], [2 x [2 x i32]], i32, i32, double }
%struct.lambda_params = type { double, [3 x double], [3 x i32] }
%struct.pic_motion_params = type { [2 x ptr], [2 x %struct.MotionVector], [2 x i8] }
%struct.MotionVector = type { i16, i16 }
%struct.level_quant_params = type { i32, i32, i32 }

@.str = private unnamed_addr constant [33 x i8] c"init_top_bot_planes: imgTopField\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [33 x i8] c"init_top_bot_planes: imgBotField\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [23 x i8] c"get_mem2Ddist: array2D\00", align 1, !dbg !9
@.str.3 = private unnamed_addr constant [21 x i8] c"get_mem2Dlm: array2D\00", align 1, !dbg !14
@.str.4 = private unnamed_addr constant [45 x i8] c"free_mem2Ddist: trying to free unused memory\00", align 1, !dbg !19
@.str.5 = private unnamed_addr constant [43 x i8] c"free_mem2Dlm: trying to free unused memory\00", align 1, !dbg !24
@.str.6 = private unnamed_addr constant [21 x i8] c"get_mem2Dmv: array2D\00", align 1, !dbg !29
@.str.7 = private unnamed_addr constant [21 x i8] c"get_mem2Dmp: array2D\00", align 1, !dbg !31
@.str.8 = private unnamed_addr constant [21 x i8] c"get_mem3Dmp: array3D\00", align 1, !dbg !33
@.str.9 = private unnamed_addr constant [43 x i8] c"free_mem2Dmp: trying to free unused memory\00", align 1, !dbg !35
@.str.10 = private unnamed_addr constant [43 x i8] c"free_mem3Dmp: trying to free unused memory\00", align 1, !dbg !37
@.str.11 = private unnamed_addr constant [24 x i8] c"get_mem2Dquant: array2D\00", align 1, !dbg !39
@.str.12 = private unnamed_addr constant [24 x i8] c"get_mem3Dquant: array3D\00", align 1, !dbg !44
@.str.13 = private unnamed_addr constant [24 x i8] c"get_mem4Dquant: array4D\00", align 1, !dbg !46
@.str.14 = private unnamed_addr constant [24 x i8] c"get_mem5Dquant: array5D\00", align 1, !dbg !48
@.str.15 = private unnamed_addr constant [46 x i8] c"free_mem2Dquant: trying to free unused memory\00", align 1, !dbg !50
@.str.16 = private unnamed_addr constant [46 x i8] c"free_mem3Dquant: trying to free unused memory\00", align 1, !dbg !55
@.str.17 = private unnamed_addr constant [46 x i8] c"free_mem4Dquant: trying to free unused memory\00", align 1, !dbg !57
@.str.18 = private unnamed_addr constant [46 x i8] c"free_mem5Dquant: trying to free unused memory\00", align 1, !dbg !59
@.str.19 = private unnamed_addr constant [23 x i8] c"get_mem2D_spp: array2D\00", align 1, !dbg !61
@.str.20 = private unnamed_addr constant [23 x i8] c"get_mem3D_spp: array3D\00", align 1, !dbg !63
@.str.21 = private unnamed_addr constant [21 x i8] c"get_mem3Dmv: array3D\00", align 1, !dbg !65
@.str.22 = private unnamed_addr constant [22 x i8] c"get_mem4Dpel: array4D\00", align 1, !dbg !67
@.str.23 = private unnamed_addr constant [22 x i8] c"get_mem5Dpel: array5D\00", align 1, !dbg !72
@.str.24 = private unnamed_addr constant [22 x i8] c"get_mem5Dpel: array6D\00", align 1, !dbg !74
@.str.25 = private unnamed_addr constant [21 x i8] c"get_mem7Dmv: array7D\00", align 1, !dbg !76
@.str.26 = private unnamed_addr constant [45 x i8] c"free_mem2D_spp: trying to free unused memory\00", align 1, !dbg !78
@.str.27 = private unnamed_addr constant [45 x i8] c"free_mem3D_spp: trying to free unused memory\00", align 1, !dbg !80
@.str.28 = private unnamed_addr constant [43 x i8] c"free_mem2Dmv: trying to free unused memory\00", align 1, !dbg !82
@.str.29 = private unnamed_addr constant [43 x i8] c"free_mem3Dmv: trying to free unused memory\00", align 1, !dbg !84
@.str.30 = private unnamed_addr constant [43 x i8] c"free_mem4Dmv: trying to free unused memory\00", align 1, !dbg !86
@.str.31 = private unnamed_addr constant [43 x i8] c"free_mem5Dmv: trying to free unused memory\00", align 1, !dbg !88
@.str.32 = private unnamed_addr constant [43 x i8] c"free_mem6Dmv: trying to free unused memory\00", align 1, !dbg !90
@.str.33 = private unnamed_addr constant [43 x i8] c"free_mem7Dmv: trying to free unused memory\00", align 1, !dbg !92
@.str.34 = private unnamed_addr constant [22 x i8] c"get_mem1Dpel: arra12D\00", align 1, !dbg !94
@.str.35 = private unnamed_addr constant [22 x i8] c"get_mem2Dpel: array2D\00", align 1, !dbg !96
@.str.36 = private unnamed_addr constant [29 x i8] c"get_mem2DpelWithPad: array2D\00", align 1, !dbg !98
@.str.37 = private unnamed_addr constant [22 x i8] c"get_mem3Dpel: array3D\00", align 1, !dbg !103
@.str.38 = private unnamed_addr constant [29 x i8] c"get_mem3DpelWithPad: array3D\00", align 1, !dbg !105
@.str.39 = private unnamed_addr constant [39 x i8] c"get_mem3DpelWithPadSeparately: array3D\00", align 1, !dbg !107
@.str.40 = private unnamed_addr constant [29 x i8] c"get_mem4DpelWithPad: array4D\00", align 1, !dbg !112
@.str.41 = private unnamed_addr constant [39 x i8] c"get_mem4DpelWithPadSeparately: array4D\00", align 1, !dbg !114
@.str.42 = private unnamed_addr constant [29 x i8] c"get_mem5DpelWithPad: array5D\00", align 1, !dbg !116
@.str.43 = private unnamed_addr constant [39 x i8] c"get_mem5DpelWithPadSeparately: array5D\00", align 1, !dbg !118
@.str.44 = private unnamed_addr constant [44 x i8] c"free_mem1Dpel: trying to free unused memory\00", align 1, !dbg !120
@.str.45 = private unnamed_addr constant [44 x i8] c"free_mem2Dpel: trying to free unused memory\00", align 1, !dbg !125
@.str.46 = private unnamed_addr constant [51 x i8] c"free_mem2DpelWithPad: trying to free unused memory\00", align 1, !dbg !127
@.str.47 = private unnamed_addr constant [44 x i8] c"free_mem3Dpel: trying to free unused memory\00", align 1, !dbg !132
@.str.48 = private unnamed_addr constant [61 x i8] c"free_mem3DpelWithPadSeparately: trying to free unused memory\00", align 1, !dbg !134
@.str.49 = private unnamed_addr constant [44 x i8] c"free_mem4Dpel: trying to free unused memory\00", align 1, !dbg !139
@.str.50 = private unnamed_addr constant [51 x i8] c"free_mem4DpelWithPad: trying to free unused memory\00", align 1, !dbg !141
@.str.51 = private unnamed_addr constant [61 x i8] c"free_mem4DpelWithPadSeparately: trying to free unused memory\00", align 1, !dbg !143
@.str.52 = private unnamed_addr constant [44 x i8] c"free_mem5Dpel: trying to free unused memory\00", align 1, !dbg !145
@.str.53 = private unnamed_addr constant [51 x i8] c"free_mem5DpelWithPad: trying to free unused memory\00", align 1, !dbg !147
@.str.54 = private unnamed_addr constant [19 x i8] c"get_mem2D: array2D\00", align 1, !dbg !149
@.str.55 = private unnamed_addr constant [22 x i8] c"get_mem2Dint: array2D\00", align 1, !dbg !154
@.str.56 = private unnamed_addr constant [29 x i8] c"get_mem2DintWithPad: array2D\00", align 1, !dbg !156
@.str.57 = private unnamed_addr constant [24 x i8] c"get_mem2Dint64: array2D\00", align 1, !dbg !158
@.str.58 = private unnamed_addr constant [26 x i8] c"get_mem2Ddistblk: array2D\00", align 1, !dbg !160
@.str.59 = private unnamed_addr constant [19 x i8] c"get_mem3D: array3D\00", align 1, !dbg !165
@.str.60 = private unnamed_addr constant [19 x i8] c"get_mem4D: array4D\00", align 1, !dbg !167
@.str.61 = private unnamed_addr constant [22 x i8] c"get_mem3Dint: array3D\00", align 1, !dbg !169
@.str.62 = private unnamed_addr constant [24 x i8] c"get_mem3Dint64: array3D\00", align 1, !dbg !171
@.str.63 = private unnamed_addr constant [26 x i8] c"get_mem3Ddistblk: array3D\00", align 1, !dbg !173
@.str.64 = private unnamed_addr constant [22 x i8] c"get_mem4Dint: array4D\00", align 1, !dbg !175
@.str.65 = private unnamed_addr constant [24 x i8] c"get_mem4Dint64: array4D\00", align 1, !dbg !177
@.str.66 = private unnamed_addr constant [26 x i8] c"get_mem4Ddistblk: array4D\00", align 1, !dbg !179
@.str.67 = private unnamed_addr constant [22 x i8] c"get_mem5Dint: array5D\00", align 1, !dbg !181
@.str.68 = private unnamed_addr constant [41 x i8] c"free_mem2D: trying to free unused memory\00", align 1, !dbg !183
@.str.69 = private unnamed_addr constant [44 x i8] c"free_mem2Dint: trying to free unused memory\00", align 1, !dbg !188
@.str.70 = private unnamed_addr constant [51 x i8] c"free_mem2DintWithPad: trying to free unused memory\00", align 1, !dbg !190
@.str.71 = private unnamed_addr constant [46 x i8] c"free_mem2Dint64: trying to free unused memory\00", align 1, !dbg !192
@.str.72 = private unnamed_addr constant [41 x i8] c"free_mem3D: trying to free unused memory\00", align 1, !dbg !194
@.str.73 = private unnamed_addr constant [41 x i8] c"free_mem4D: trying to free unused memory\00", align 1, !dbg !196
@.str.74 = private unnamed_addr constant [44 x i8] c"free_mem3Dint: trying to free unused memory\00", align 1, !dbg !198
@.str.75 = private unnamed_addr constant [46 x i8] c"free_mem3Dint64: trying to free unused memory\00", align 1, !dbg !200
@.str.76 = private unnamed_addr constant [48 x i8] c"free_mem3Ddistblk: trying to free unused memory\00", align 1, !dbg !202
@.str.77 = private unnamed_addr constant [44 x i8] c"free_mem4Dint: trying to free unused memory\00", align 1, !dbg !207
@.str.78 = private unnamed_addr constant [46 x i8] c"free_mem4Dint64: trying to free unused memory\00", align 1, !dbg !209
@.str.79 = private unnamed_addr constant [48 x i8] c"free_mem4Ddistblk: trying to free unused memory\00", align 1, !dbg !211
@.str.80 = private unnamed_addr constant [44 x i8] c"free_mem5Dint: trying to free unused memory\00", align 1, !dbg !213
@errortext = external global [300 x i8], align 16
@.str.81 = private unnamed_addr constant [30 x i8] c"Could not allocate memory: %s\00", align 1, !dbg !215
@.str.82 = private unnamed_addr constant [25 x i8] c"get_mem2Duint16: array2D\00", align 1, !dbg !220
@.str.83 = private unnamed_addr constant [25 x i8] c"get_mem3Duint16: array3D\00", align 1, !dbg !225
@.str.84 = private unnamed_addr constant [25 x i8] c"get_mem4Duint16: array4D\00", align 1, !dbg !227
@.str.85 = private unnamed_addr constant [24 x i8] c"get_mem2Dshort: array2D\00", align 1, !dbg !229
@.str.86 = private unnamed_addr constant [24 x i8] c"get_mem3Dshort: array3D\00", align 1, !dbg !231
@.str.87 = private unnamed_addr constant [24 x i8] c"get_mem4Dshort: array4D\00", align 1, !dbg !233
@.str.88 = private unnamed_addr constant [24 x i8] c"get_mem5Dshort: array5D\00", align 1, !dbg !235
@.str.89 = private unnamed_addr constant [24 x i8] c"get_mem6Dshort: array6D\00", align 1, !dbg !237
@.str.90 = private unnamed_addr constant [24 x i8] c"get_mem7Dshort: array7D\00", align 1, !dbg !239
@.str.91 = private unnamed_addr constant [47 x i8] c"free_mem2Duint16: trying to free unused memory\00", align 1, !dbg !241
@.str.92 = private unnamed_addr constant [47 x i8] c"free_mem3Duint16: trying to free unused memory\00", align 1, !dbg !246
@.str.93 = private unnamed_addr constant [47 x i8] c"free_mem4Duint16: trying to free unused memory\00", align 1, !dbg !248
@.str.94 = private unnamed_addr constant [46 x i8] c"free_mem2Dshort: trying to free unused memory\00", align 1, !dbg !250
@.str.95 = private unnamed_addr constant [46 x i8] c"free_mem3Dshort: trying to free unused memory\00", align 1, !dbg !252
@.str.96 = private unnamed_addr constant [46 x i8] c"free_mem4Dshort: trying to free unused memory\00", align 1, !dbg !254
@.str.97 = private unnamed_addr constant [46 x i8] c"free_mem5Dshort: trying to free unused memory\00", align 1, !dbg !256
@.str.98 = private unnamed_addr constant [46 x i8] c"free_mem6Dshort: trying to free unused memory\00", align 1, !dbg !258
@.str.99 = private unnamed_addr constant [46 x i8] c"free_mem7Dshort: trying to free unused memory\00", align 1, !dbg !260
@.str.100 = private unnamed_addr constant [25 x i8] c"get_mem2Ddouble: array2D\00", align 1, !dbg !262
@.str.101 = private unnamed_addr constant [26 x i8] c"get_mem1Dodouble: array2D\00", align 1, !dbg !264
@.str.102 = private unnamed_addr constant [26 x i8] c"get_mem2Dodouble: array2D\00", align 1, !dbg !266
@.str.103 = private unnamed_addr constant [26 x i8] c"get_mem3Dodouble: array3D\00", align 1, !dbg !268
@.str.104 = private unnamed_addr constant [31 x i8] c"get_offset_mem2Dshort: array2D\00", align 1, !dbg !270
@.str.105 = private unnamed_addr constant [23 x i8] c"get_mem3Doint: array3D\00", align 1, !dbg !275
@.str.106 = private unnamed_addr constant [25 x i8] c"get_mem3Ddouble: array3D\00", align 1, !dbg !277
@.str.107 = private unnamed_addr constant [47 x i8] c"free_mem2Ddouble: trying to free unused memory\00", align 1, !dbg !279
@.str.108 = private unnamed_addr constant [48 x i8] c"free_mem1Dodouble: trying to free unused memory\00", align 1, !dbg !281
@.str.109 = private unnamed_addr constant [48 x i8] c"free_mem2Dodouble: trying to free unused memory\00", align 1, !dbg !283
@.str.110 = private unnamed_addr constant [48 x i8] c"free_mem3Dodouble: trying to free unused memory\00", align 1, !dbg !285
@.str.111 = private unnamed_addr constant [45 x i8] c"free_mem3Doint: trying to free unused memory\00", align 1, !dbg !287
@.str.112 = private unnamed_addr constant [45 x i8] c"free_mem2Doint: trying to free unused memory\00", align 1, !dbg !289
@.str.113 = private unnamed_addr constant [53 x i8] c"free_offset_mem2Dshort: trying to free unused memory\00", align 1, !dbg !291
@.str.114 = private unnamed_addr constant [22 x i8] c"get_mem2Dolm: array2D\00", align 1, !dbg !296
@.str.115 = private unnamed_addr constant [44 x i8] c"free_mem2Dolm: trying to free unused memory\00", align 1, !dbg !298
@.str.116 = private unnamed_addr constant [48 x i8] c"free_mem2Ddistblk: trying to free unused memory\00", align 1, !dbg !300

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @init_top_bot_planes(ptr nocapture noundef readonly %imgFrame, i32 noundef %dim0, ptr nocapture noundef %imgTopField, ptr nocapture noundef %imgBotField) local_unnamed_addr #0 !dbg !556 {
entry:
    #dbg_value(ptr %imgFrame, !560, !DIExpression(), !565)
    #dbg_value(i32 %dim0, !561, !DIExpression(), !565)
    #dbg_value(ptr %imgTopField, !562, !DIExpression(), !565)
    #dbg_value(ptr %imgBotField, !563, !DIExpression(), !565)
  %shr = ashr i32 %dim0, 1, !dbg !566
  %conv = sext i32 %shr to i64, !dbg !568
  %mul = shl nsw i64 %conv, 3, !dbg !569
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !570
  store ptr %call, ptr %imgTopField, align 8, !dbg !571
  %cmp = icmp eq ptr %call, null, !dbg !572
  br i1 %cmp, label %if.then, label %if.end, !dbg !573

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str, !574, !DIExpression(), !580)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str) #9, !dbg !582
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !583
  br label %if.end, !dbg !584

if.end:                                           ; preds = %if.then, %entry
  %call5 = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !585
  store ptr %call5, ptr %imgBotField, align 8, !dbg !587
  %cmp6 = icmp eq ptr %call5, null, !dbg !588
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !589

if.then8:                                         ; preds = %if.end
    #dbg_value(ptr @.str.1, !574, !DIExpression(), !590)
  %call.i35 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.1) #9, !dbg !592
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !593
  br label %if.end9, !dbg !594

if.end9:                                          ; preds = %if.then8, %if.end
    #dbg_value(i32 0, !564, !DIExpression(), !565)
  %cmp1136 = icmp sgt i32 %shr, 0, !dbg !595
  br i1 %cmp1136, label %for.body.preheader, label %for.end, !dbg !598

for.body.preheader:                               ; preds = %if.end9
  %wide.trip.count = zext nneg i32 %shr to i64, !dbg !595
  %xtraiter = and i64 %wide.trip.count, 1, !dbg !598
  %0 = icmp eq i32 %shr, 1, !dbg !598
  br i1 %0, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new, !dbg !598

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 2147483646, !dbg !598
  br label %for.body, !dbg !598

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.body ]
    #dbg_value(i64 %indvars.iv, !564, !DIExpression(), !565)
  %1 = shl nuw nsw i64 %indvars.iv, 1, !dbg !599
  %arrayidx = getelementptr inbounds ptr, ptr %imgFrame, i64 %1, !dbg !601
  %2 = load ptr, ptr %arrayidx, align 8, !dbg !601
  %3 = load ptr, ptr %imgTopField, align 8, !dbg !602
  %arrayidx15 = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv, !dbg !603
  store ptr %2, ptr %arrayidx15, align 8, !dbg !604
  %4 = or disjoint i64 %1, 1, !dbg !605
  %arrayidx18 = getelementptr inbounds ptr, ptr %imgFrame, i64 %4, !dbg !606
  %5 = load ptr, ptr %arrayidx18, align 8, !dbg !606
  %6 = load ptr, ptr %imgBotField, align 8, !dbg !607
  %arrayidx20 = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv, !dbg !608
  store ptr %5, ptr %arrayidx20, align 8, !dbg !609
  %indvars.iv.next = or disjoint i64 %indvars.iv, 1, !dbg !610
    #dbg_value(i64 %indvars.iv.next, !564, !DIExpression(), !565)
  %7 = shl nuw nsw i64 %indvars.iv.next, 1, !dbg !599
  %arrayidx.1 = getelementptr inbounds ptr, ptr %imgFrame, i64 %7, !dbg !601
  %8 = load ptr, ptr %arrayidx.1, align 8, !dbg !601
  %9 = load ptr, ptr %imgTopField, align 8, !dbg !602
  %arrayidx15.1 = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv.next, !dbg !603
  store ptr %8, ptr %arrayidx15.1, align 8, !dbg !604
  %10 = or disjoint i64 %7, 1, !dbg !605
  %arrayidx18.1 = getelementptr inbounds ptr, ptr %imgFrame, i64 %10, !dbg !606
  %11 = load ptr, ptr %arrayidx18.1, align 8, !dbg !606
  %12 = load ptr, ptr %imgBotField, align 8, !dbg !607
  %arrayidx20.1 = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv.next, !dbg !608
  store ptr %11, ptr %arrayidx20.1, align 8, !dbg !609
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2, !dbg !610
    #dbg_value(i64 %indvars.iv.next.1, !564, !DIExpression(), !565)
  %niter.next.1 = add nuw i64 %niter, 2, !dbg !598
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter, !dbg !598
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !598, !llvm.loop !611

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !598
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !598

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
    #dbg_value(i64 %indvars.iv.unr, !564, !DIExpression(), !565)
  %13 = shl nuw nsw i64 %indvars.iv.unr, 1, !dbg !599
  %arrayidx.epil = getelementptr inbounds ptr, ptr %imgFrame, i64 %13, !dbg !601
  %14 = load ptr, ptr %arrayidx.epil, align 8, !dbg !601
  %15 = load ptr, ptr %imgTopField, align 8, !dbg !602
  %arrayidx15.epil = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv.unr, !dbg !603
  store ptr %14, ptr %arrayidx15.epil, align 8, !dbg !604
  %16 = or disjoint i64 %13, 1, !dbg !605
  %arrayidx18.epil = getelementptr inbounds ptr, ptr %imgFrame, i64 %16, !dbg !606
  %17 = load ptr, ptr %arrayidx18.epil, align 8, !dbg !606
  %18 = load ptr, ptr %imgBotField, align 8, !dbg !607
  %arrayidx20.epil = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv.unr, !dbg !608
  store ptr %17, ptr %arrayidx20.epil, align 8, !dbg !609
    #dbg_value(i64 %indvars.iv.unr, !564, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !565)
  br label %for.end, !dbg !613

for.end:                                          ; preds = %for.body.epil, %for.end.loopexit.unr-lcssa, %if.end9
  %mul22 = shl i32 %dim0, 3, !dbg !613
  ret i32 %mul22, !dbg !614
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare !dbg !615 noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @no_mem_exit(ptr noundef %where) local_unnamed_addr #0 !dbg !575 {
entry:
    #dbg_value(ptr %where, !574, !DIExpression(), !622)
  %call = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef %where) #9, !dbg !623
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !624
  ret void, !dbg !625
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable
define dso_local void @free_top_bot_planes(ptr nocapture noundef %imgTopField, ptr nocapture noundef %imgBotField) local_unnamed_addr #3 !dbg !626 {
entry:
    #dbg_value(ptr %imgTopField, !630, !DIExpression(), !632)
    #dbg_value(ptr %imgBotField, !631, !DIExpression(), !632)
  tail call void @free(ptr noundef %imgTopField) #9, !dbg !633
  tail call void @free(ptr noundef %imgBotField) #9, !dbg !634
  ret void, !dbg !635
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare !dbg !636 void @free(ptr allocptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2Ddist(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !639 {
entry:
    #dbg_value(ptr %array2D, !644, !DIExpression(), !648)
    #dbg_value(i32 %dim0, !645, !DIExpression(), !648)
    #dbg_value(i32 %dim1, !646, !DIExpression(), !648)
  %conv = sext i32 %dim0 to i64, !dbg !649
  %mul = shl nsw i64 %conv, 3, !dbg !651
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !652
  store ptr %call, ptr %array2D, align 8, !dbg !653
  %cmp = icmp eq ptr %call, null, !dbg !654
  br i1 %cmp, label %if.then, label %if.end, !dbg !655

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.2, !574, !DIExpression(), !656)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.2) #9, !dbg !658
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !659
  %.pre = load ptr, ptr %array2D, align 8, !dbg !660
  br label %if.end, !dbg !662

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !660
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !663
  %conv3 = sext i32 %mul2 to i64, !dbg !664
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 256) #10, !dbg !665
  store ptr %call4, ptr %0, align 8, !dbg !666
  %cmp5 = icmp eq ptr %call4, null, !dbg !667
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !668

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.2, !574, !DIExpression(), !669)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.2) #9, !dbg !671
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !672
  br label %if.end8, !dbg !673

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !647, !DIExpression(), !648)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !674
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !677

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !674
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !677
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !677
  %xtraiter = and i64 %1, 3, !dbg !677
  %3 = icmp ult i64 %2, 3, !dbg !677
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !677

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !677
  br label %for.body, !dbg !677

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !647, !DIExpression(), !648)
  %4 = load ptr, ptr %array2D, align 8, !dbg !678
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !679
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !679
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !679
  %add.ptr = getelementptr inbounds %struct.distortion_data, ptr %6, i64 %idx.ext, !dbg !680
  store ptr %add.ptr, ptr %5, align 8, !dbg !681
    #dbg_value(i64 %indvars.iv, !647, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !648)
  %7 = load ptr, ptr %array2D, align 8, !dbg !678
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !679
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !679
  %10 = load ptr, ptr %8, align 8, !dbg !679
  %add.ptr.1 = getelementptr inbounds %struct.distortion_data, ptr %10, i64 %idx.ext, !dbg !680
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !681
    #dbg_value(i64 %indvars.iv, !647, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !648)
  %11 = load ptr, ptr %array2D, align 8, !dbg !678
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !679
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !679
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !679
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !679
  %add.ptr.2 = getelementptr inbounds %struct.distortion_data, ptr %14, i64 %idx.ext, !dbg !680
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !681
    #dbg_value(i64 %indvars.iv, !647, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !648)
  %15 = load ptr, ptr %array2D, align 8, !dbg !678
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !679
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !679
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !679
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !679
  %add.ptr.3 = getelementptr inbounds %struct.distortion_data, ptr %18, i64 %idx.ext, !dbg !680
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !681
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !682
    #dbg_value(i64 %indvars.iv.next.3, !647, !DIExpression(), !648)
  %niter.next.3 = add i64 %niter, 4, !dbg !677
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !677
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !677, !llvm.loop !683

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !677
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !677

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !647, !DIExpression(), !648)
  %19 = load ptr, ptr %array2D, align 8, !dbg !678
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !679
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !679
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !679
  %add.ptr.epil = getelementptr inbounds %struct.distortion_data, ptr %21, i64 %idx.ext, !dbg !680
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !681
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !682
    #dbg_value(i64 %indvars.iv.next.epil, !647, !DIExpression(), !648)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !677
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !677
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !677, !llvm.loop !685

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 8, !dbg !687
  %add = or disjoint i32 %mul15, 8, !dbg !688
  %mul16 = mul i32 %add, %dim0, !dbg !689
  ret i32 %mul16, !dbg !690
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare !dbg !691 noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2Dlm(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !694 {
entry:
    #dbg_value(ptr %array2D, !699, !DIExpression(), !703)
    #dbg_value(i32 %dim0, !700, !DIExpression(), !703)
    #dbg_value(i32 %dim1, !701, !DIExpression(), !703)
  %conv = sext i32 %dim0 to i64, !dbg !704
  %mul = shl nsw i64 %conv, 3, !dbg !706
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !707
  store ptr %call, ptr %array2D, align 8, !dbg !708
  %cmp = icmp eq ptr %call, null, !dbg !709
  br i1 %cmp, label %if.then, label %if.end, !dbg !710

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.3, !574, !DIExpression(), !711)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.3) #9, !dbg !713
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !714
  %.pre = load ptr, ptr %array2D, align 8, !dbg !715
  br label %if.end, !dbg !717

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !715
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !718
  %conv3 = sext i32 %mul2 to i64, !dbg !719
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 48) #10, !dbg !720
  store ptr %call4, ptr %0, align 8, !dbg !721
  %cmp5 = icmp eq ptr %call4, null, !dbg !722
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !723

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.3, !574, !DIExpression(), !724)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.3) #9, !dbg !726
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !727
  br label %if.end8, !dbg !728

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !702, !DIExpression(), !703)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !729
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !732

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !729
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !732
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !732
  %xtraiter = and i64 %1, 3, !dbg !732
  %3 = icmp ult i64 %2, 3, !dbg !732
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !732

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !732
  br label %for.body, !dbg !732

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !702, !DIExpression(), !703)
  %4 = load ptr, ptr %array2D, align 8, !dbg !733
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !734
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !734
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !734
  %add.ptr = getelementptr inbounds %struct.lambda_params, ptr %6, i64 %idx.ext, !dbg !735
  store ptr %add.ptr, ptr %5, align 8, !dbg !736
    #dbg_value(i64 %indvars.iv, !702, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !703)
  %7 = load ptr, ptr %array2D, align 8, !dbg !733
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !734
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !734
  %10 = load ptr, ptr %8, align 8, !dbg !734
  %add.ptr.1 = getelementptr inbounds %struct.lambda_params, ptr %10, i64 %idx.ext, !dbg !735
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !736
    #dbg_value(i64 %indvars.iv, !702, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !703)
  %11 = load ptr, ptr %array2D, align 8, !dbg !733
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !734
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !734
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !734
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !734
  %add.ptr.2 = getelementptr inbounds %struct.lambda_params, ptr %14, i64 %idx.ext, !dbg !735
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !736
    #dbg_value(i64 %indvars.iv, !702, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !703)
  %15 = load ptr, ptr %array2D, align 8, !dbg !733
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !734
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !734
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !734
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !734
  %add.ptr.3 = getelementptr inbounds %struct.lambda_params, ptr %18, i64 %idx.ext, !dbg !735
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !736
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !737
    #dbg_value(i64 %indvars.iv.next.3, !702, !DIExpression(), !703)
  %niter.next.3 = add i64 %niter, 4, !dbg !732
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !732
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !732, !llvm.loop !738

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !732
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !732

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !702, !DIExpression(), !703)
  %19 = load ptr, ptr %array2D, align 8, !dbg !733
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !734
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !734
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !734
  %add.ptr.epil = getelementptr inbounds %struct.lambda_params, ptr %21, i64 %idx.ext, !dbg !735
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !736
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !737
    #dbg_value(i64 %indvars.iv.next.epil, !702, !DIExpression(), !703)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !732
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !732
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !732, !llvm.loop !740

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = mul i32 %dim1, 48, !dbg !741
  %add = or disjoint i32 %mul15, 8, !dbg !742
  %mul16 = mul i32 %add, %dim0, !dbg !743
  ret i32 %mul16, !dbg !744
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Ddist(ptr noundef %array2D) local_unnamed_addr #0 !dbg !745 {
entry:
    #dbg_value(ptr %array2D, !749, !DIExpression(), !750)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !751
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !753

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !754
  %tobool1.not = icmp eq ptr %0, null, !dbg !754
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !757

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !758
  br label %if.end, !dbg !758

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.4, i32 noundef 100) #9, !dbg !759
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !760
  br label %if.end4, !dbg !761

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.4, i32 noundef 100) #9, !dbg !762
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !764
}

declare !dbg !765 void @error(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dlm(ptr noundef %array2D) local_unnamed_addr #0 !dbg !768 {
entry:
    #dbg_value(ptr %array2D, !772, !DIExpression(), !773)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !774
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !776

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !777
  %tobool1.not = icmp eq ptr %0, null, !dbg !777
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !780

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !781
  br label %if.end, !dbg !781

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.5, i32 noundef 100) #9, !dbg !782
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !783
  br label %if.end4, !dbg !784

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.5, i32 noundef 100) #9, !dbg !785
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !787
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2Dmp(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !788 {
entry:
    #dbg_value(ptr %array2D, !792, !DIExpression(), !796)
    #dbg_value(i32 %dim0, !793, !DIExpression(), !796)
    #dbg_value(i32 %dim1, !794, !DIExpression(), !796)
  %conv = sext i32 %dim0 to i64, !dbg !797
  %mul = shl nsw i64 %conv, 3, !dbg !799
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !800
  store ptr %call, ptr %array2D, align 8, !dbg !801
  %cmp = icmp eq ptr %call, null, !dbg !802
  br i1 %cmp, label %if.then, label %if.end, !dbg !803

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.6, !574, !DIExpression(), !804)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.6) #9, !dbg !806
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !807
  %.pre = load ptr, ptr %array2D, align 8, !dbg !808
  br label %if.end, !dbg !810

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !808
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !811
  %conv3 = sext i32 %mul2 to i64, !dbg !812
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 32) #10, !dbg !813
  store ptr %call4, ptr %0, align 8, !dbg !814
  %cmp5 = icmp eq ptr %call4, null, !dbg !815
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !816

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.7, !574, !DIExpression(), !817)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.7) #9, !dbg !819
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !820
  br label %if.end8, !dbg !821

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !795, !DIExpression(), !796)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !822
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !825

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !822
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !825
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !825
  %xtraiter = and i64 %1, 3, !dbg !825
  %3 = icmp ult i64 %2, 3, !dbg !825
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !825

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !825
  br label %for.body, !dbg !825

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !795, !DIExpression(), !796)
  %4 = load ptr, ptr %array2D, align 8, !dbg !826
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !827
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !827
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !827
  %add.ptr = getelementptr inbounds %struct.pic_motion_params, ptr %6, i64 %idx.ext, !dbg !828
  store ptr %add.ptr, ptr %5, align 8, !dbg !829
    #dbg_value(i64 %indvars.iv, !795, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !796)
  %7 = load ptr, ptr %array2D, align 8, !dbg !826
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !827
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !827
  %10 = load ptr, ptr %8, align 8, !dbg !827
  %add.ptr.1 = getelementptr inbounds %struct.pic_motion_params, ptr %10, i64 %idx.ext, !dbg !828
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !829
    #dbg_value(i64 %indvars.iv, !795, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !796)
  %11 = load ptr, ptr %array2D, align 8, !dbg !826
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !827
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !827
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !827
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !827
  %add.ptr.2 = getelementptr inbounds %struct.pic_motion_params, ptr %14, i64 %idx.ext, !dbg !828
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !829
    #dbg_value(i64 %indvars.iv, !795, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !796)
  %15 = load ptr, ptr %array2D, align 8, !dbg !826
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !827
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !827
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !827
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !827
  %add.ptr.3 = getelementptr inbounds %struct.pic_motion_params, ptr %18, i64 %idx.ext, !dbg !828
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !829
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !830
    #dbg_value(i64 %indvars.iv.next.3, !795, !DIExpression(), !796)
  %niter.next.3 = add i64 %niter, 4, !dbg !825
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !825
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !825, !llvm.loop !831

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !825
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !825

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !795, !DIExpression(), !796)
  %19 = load ptr, ptr %array2D, align 8, !dbg !826
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !827
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !827
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !827
  %add.ptr.epil = getelementptr inbounds %struct.pic_motion_params, ptr %21, i64 %idx.ext, !dbg !828
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !829
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !830
    #dbg_value(i64 %indvars.iv.next.epil, !795, !DIExpression(), !796)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !825
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !825
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !825, !llvm.loop !833

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 5, !dbg !834
  %add = or disjoint i32 %mul15, 8, !dbg !835
  %mul16 = mul i32 %add, %dim0, !dbg !836
  ret i32 %mul16, !dbg !837
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dmp(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !838 {
entry:
    #dbg_value(ptr %array3D, !843, !DIExpression(), !849)
    #dbg_value(i32 %dim0, !844, !DIExpression(), !849)
    #dbg_value(i32 %dim1, !845, !DIExpression(), !849)
    #dbg_value(i32 %dim2, !846, !DIExpression(), !849)
  %conv = sext i32 %dim0 to i64, !dbg !850
  %mul = shl nsw i64 %conv, 3, !dbg !851
    #dbg_value(i64 %mul, !848, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !849)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !852
  store ptr %call, ptr %array3D, align 8, !dbg !854
  %cmp = icmp eq ptr %call, null, !dbg !855
  br i1 %cmp, label %if.then, label %if.end, !dbg !856

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.8, !574, !DIExpression(), !857)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.8) #9, !dbg !859
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !860
  %.pre = load ptr, ptr %array3D, align 8, !dbg !861
  br label %if.end, !dbg !862

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !861
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !863
  %call6 = tail call i32 @get_mem2Dmp(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !864
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !848, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !849)
    #dbg_value(i32 1, !847, !DIExpression(), !849)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !865
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !868

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !865
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !868
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !868
  %xtraiter = and i64 %1, 3, !dbg !868
  %3 = icmp ult i64 %2, 3, !dbg !868
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !868

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !868
  br label %for.body, !dbg !868

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !847, !DIExpression(), !849)
  %4 = load ptr, ptr %array3D, align 8, !dbg !869
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !870
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !870
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !870
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !871
  store ptr %add.ptr, ptr %5, align 8, !dbg !872
    #dbg_value(i64 %indvars.iv, !847, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !849)
  %7 = load ptr, ptr %array3D, align 8, !dbg !869
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !870
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !870
  %10 = load ptr, ptr %8, align 8, !dbg !870
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !871
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !872
    #dbg_value(i64 %indvars.iv, !847, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !849)
  %11 = load ptr, ptr %array3D, align 8, !dbg !869
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !870
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !870
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !870
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !870
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !871
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !872
    #dbg_value(i64 %indvars.iv, !847, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !849)
  %15 = load ptr, ptr %array3D, align 8, !dbg !869
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !870
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !870
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !870
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !870
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !871
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !872
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !873
    #dbg_value(i64 %indvars.iv.next.3, !847, !DIExpression(), !849)
  %niter.next.3 = add i64 %niter, 4, !dbg !868
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !868
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !868, !llvm.loop !874

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !868
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !868

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !847, !DIExpression(), !849)
  %19 = load ptr, ptr %array3D, align 8, !dbg !869
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !870
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !870
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !870
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !871
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !872
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !873
    #dbg_value(i64 %indvars.iv.next.epil, !847, !DIExpression(), !849)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !868
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !868
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !868, !llvm.loop !876

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !850
    #dbg_value(i32 %conv1, !848, !DIExpression(), !849)
  %add = add nsw i32 %call6, %conv1, !dbg !877
    #dbg_value(i32 %add, !848, !DIExpression(), !849)
  ret i32 %add, !dbg !878
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dmp(ptr noundef %array2D) local_unnamed_addr #0 !dbg !879 {
entry:
    #dbg_value(ptr %array2D, !883, !DIExpression(), !884)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !885
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !887

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !888
  %tobool1.not = icmp eq ptr %0, null, !dbg !888
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !891

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !892
  br label %if.end, !dbg !892

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.9, i32 noundef 100) #9, !dbg !893
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !894
  br label %if.end4, !dbg !895

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.9, i32 noundef 100) #9, !dbg !896
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !898
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dmp(ptr noundef %array3D) local_unnamed_addr #0 !dbg !899 {
entry:
    #dbg_value(ptr %array3D, !903, !DIExpression(), !904)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !905
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !907

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !908
    #dbg_value(ptr %0, !883, !DIExpression(), !910)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !912
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !913

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !914
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !914
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !915

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !916
  br label %if.end.i, !dbg !916

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.9, i32 noundef 100) #9, !dbg !917
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !918
  br label %free_mem2Dmp.exit, !dbg !919

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.9, i32 noundef 100) #9, !dbg !920
  br label %free_mem2Dmp.exit

free_mem2Dmp.exit:                                ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !921
  br label %if.end, !dbg !922

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.10, i32 noundef 100) #9, !dbg !923
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dmp.exit
  ret void, !dbg !925
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dquant(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !926 {
entry:
    #dbg_value(ptr %array2D, !930, !DIExpression(), !934)
    #dbg_value(i32 %dim0, !931, !DIExpression(), !934)
    #dbg_value(i32 %dim1, !932, !DIExpression(), !934)
  %conv = sext i32 %dim0 to i64, !dbg !935
  %mul = shl nsw i64 %conv, 3, !dbg !937
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !938
  store ptr %call, ptr %array2D, align 8, !dbg !939
  %cmp = icmp eq ptr %call, null, !dbg !940
  br i1 %cmp, label %if.then, label %if.end, !dbg !941

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.11, !574, !DIExpression(), !942)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.11) #9, !dbg !944
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !945
  %.pre = load ptr, ptr %array2D, align 8, !dbg !946
  br label %if.end, !dbg !948

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !946
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !949
  %conv3 = sext i32 %mul2 to i64, !dbg !950
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 12) #10, !dbg !951
  store ptr %call4, ptr %0, align 8, !dbg !952
  %cmp5 = icmp eq ptr %call4, null, !dbg !953
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !954

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.11, !574, !DIExpression(), !955)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.11) #9, !dbg !957
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !958
  br label %if.end8, !dbg !959

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !933, !DIExpression(), !934)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !960
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !963

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !960
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !963
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !963
  %xtraiter = and i64 %1, 3, !dbg !963
  %3 = icmp ult i64 %2, 3, !dbg !963
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !963

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !963
  br label %for.body, !dbg !963

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !933, !DIExpression(), !934)
  %4 = load ptr, ptr %array2D, align 8, !dbg !964
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !965
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !965
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !965
  %add.ptr = getelementptr inbounds %struct.level_quant_params, ptr %6, i64 %idx.ext, !dbg !966
  store ptr %add.ptr, ptr %5, align 8, !dbg !967
    #dbg_value(i64 %indvars.iv, !933, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !934)
  %7 = load ptr, ptr %array2D, align 8, !dbg !964
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !965
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !965
  %10 = load ptr, ptr %8, align 8, !dbg !965
  %add.ptr.1 = getelementptr inbounds %struct.level_quant_params, ptr %10, i64 %idx.ext, !dbg !966
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !967
    #dbg_value(i64 %indvars.iv, !933, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !934)
  %11 = load ptr, ptr %array2D, align 8, !dbg !964
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !965
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !965
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !965
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !965
  %add.ptr.2 = getelementptr inbounds %struct.level_quant_params, ptr %14, i64 %idx.ext, !dbg !966
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !967
    #dbg_value(i64 %indvars.iv, !933, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !934)
  %15 = load ptr, ptr %array2D, align 8, !dbg !964
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !965
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !965
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !965
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !965
  %add.ptr.3 = getelementptr inbounds %struct.level_quant_params, ptr %18, i64 %idx.ext, !dbg !966
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !967
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !968
    #dbg_value(i64 %indvars.iv.next.3, !933, !DIExpression(), !934)
  %niter.next.3 = add i64 %niter, 4, !dbg !963
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !963
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !963, !llvm.loop !969

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !963
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !963

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !933, !DIExpression(), !934)
  %19 = load ptr, ptr %array2D, align 8, !dbg !964
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !965
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !965
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !965
  %add.ptr.epil = getelementptr inbounds %struct.level_quant_params, ptr %21, i64 %idx.ext, !dbg !966
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !967
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !968
    #dbg_value(i64 %indvars.iv.next.epil, !933, !DIExpression(), !934)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !963
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !963
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !963, !llvm.loop !971

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = mul i32 %dim1, 12, !dbg !972
  %add = add i32 %mul15, 8, !dbg !973
  %mul16 = mul i32 %add, %dim0, !dbg !974
  ret i32 %mul16, !dbg !975
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dquant(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !976 {
entry:
    #dbg_value(ptr %array3D, !980, !DIExpression(), !986)
    #dbg_value(i32 %dim0, !981, !DIExpression(), !986)
    #dbg_value(i32 %dim1, !982, !DIExpression(), !986)
    #dbg_value(i32 %dim2, !983, !DIExpression(), !986)
  %conv = sext i32 %dim0 to i64, !dbg !987
  %mul = shl nsw i64 %conv, 3, !dbg !988
    #dbg_value(i64 %mul, !985, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !986)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !989
  store ptr %call, ptr %array3D, align 8, !dbg !991
  %cmp = icmp eq ptr %call, null, !dbg !992
  br i1 %cmp, label %if.then, label %if.end, !dbg !993

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.12, !574, !DIExpression(), !994)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.12) #9, !dbg !996
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !997
  %.pre = load ptr, ptr %array3D, align 8, !dbg !998
  br label %if.end, !dbg !999

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !998
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1000
  %call6 = tail call i32 @get_mem2Dquant(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !1001
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !985, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !986)
    #dbg_value(i32 1, !984, !DIExpression(), !986)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1002
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1005

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1002
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1005
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1005
  %xtraiter = and i64 %1, 3, !dbg !1005
  %3 = icmp ult i64 %2, 3, !dbg !1005
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1005

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1005
  br label %for.body, !dbg !1005

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !984, !DIExpression(), !986)
  %4 = load ptr, ptr %array3D, align 8, !dbg !1006
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1007
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1007
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1007
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1008
  store ptr %add.ptr, ptr %5, align 8, !dbg !1009
    #dbg_value(i64 %indvars.iv, !984, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !986)
  %7 = load ptr, ptr %array3D, align 8, !dbg !1006
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1007
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1007
  %10 = load ptr, ptr %8, align 8, !dbg !1007
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1008
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1009
    #dbg_value(i64 %indvars.iv, !984, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !986)
  %11 = load ptr, ptr %array3D, align 8, !dbg !1006
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1007
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1007
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1007
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1007
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1008
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1009
    #dbg_value(i64 %indvars.iv, !984, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !986)
  %15 = load ptr, ptr %array3D, align 8, !dbg !1006
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1007
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1007
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1007
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1007
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1008
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1009
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1010
    #dbg_value(i64 %indvars.iv.next.3, !984, !DIExpression(), !986)
  %niter.next.3 = add i64 %niter, 4, !dbg !1005
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1005
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1005, !llvm.loop !1011

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1005
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1005

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !984, !DIExpression(), !986)
  %19 = load ptr, ptr %array3D, align 8, !dbg !1006
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1007
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1007
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1007
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1008
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1009
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1010
    #dbg_value(i64 %indvars.iv.next.epil, !984, !DIExpression(), !986)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1005
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1005
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1005, !llvm.loop !1013

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !987
    #dbg_value(i32 %conv1, !985, !DIExpression(), !986)
  %add = add nsw i32 %call6, %conv1, !dbg !1014
    #dbg_value(i32 %add, !985, !DIExpression(), !986)
  ret i32 %add, !dbg !1015
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dquant(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !1016 {
entry:
    #dbg_value(ptr %array4D, !1020, !DIExpression(), !1027)
    #dbg_value(i32 %dim0, !1021, !DIExpression(), !1027)
    #dbg_value(i32 %dim1, !1022, !DIExpression(), !1027)
    #dbg_value(i32 %dim2, !1023, !DIExpression(), !1027)
    #dbg_value(i32 %dim3, !1024, !DIExpression(), !1027)
  %conv = sext i32 %dim0 to i64, !dbg !1028
  %mul = shl nsw i64 %conv, 3, !dbg !1029
    #dbg_value(i64 %mul, !1026, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1027)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1030
  store ptr %call, ptr %array4D, align 8, !dbg !1032
  %cmp = icmp eq ptr %call, null, !dbg !1033
  br i1 %cmp, label %if.then, label %if.end, !dbg !1034

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.13, !574, !DIExpression(), !1035)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.13) #9, !dbg !1037
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1038
  %.pre = load ptr, ptr %array4D, align 8, !dbg !1039
  br label %if.end, !dbg !1040

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1039
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1041
    #dbg_value(ptr %0, !980, !DIExpression(), !1042)
    #dbg_value(i32 %mul5, !981, !DIExpression(), !1042)
    #dbg_value(i32 %dim2, !982, !DIExpression(), !1042)
    #dbg_value(i32 %dim3, !983, !DIExpression(), !1042)
  %conv.i = sext i32 %mul5 to i64, !dbg !1044
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !1045
    #dbg_value(i64 %mul.i, !985, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1042)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !1046
  store ptr %call.i22, ptr %0, align 8, !dbg !1047
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !1048
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !1049

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.12, !574, !DIExpression(), !1050)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.12) #9, !dbg !1052
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1053
  %.pre.i = load ptr, ptr %0, align 8, !dbg !1054
  br label %if.end.i, !dbg !1055

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !1054
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !1056
  %call6.i = tail call i32 @get_mem2Dquant(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !1057
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !985, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1042)
    #dbg_value(i32 1, !984, !DIExpression(), !1042)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !1058
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dquant.exit, !dbg !1059

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !1058
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !1059
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !1059
  %xtraiter = and i64 %2, 3, !dbg !1059
  %4 = icmp ult i64 %3, 3, !dbg !1059
  br i1 %4, label %get_mem3Dquant.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !1059

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !1059
  br label %for.body.i, !dbg !1059

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !984, !DIExpression(), !1042)
  %5 = load ptr, ptr %0, align 8, !dbg !1060
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !1061
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !1061
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !1061
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !1062
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !1063
    #dbg_value(i64 %indvars.iv.i, !984, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1042)
  %8 = load ptr, ptr %0, align 8, !dbg !1060
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !1061
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !1061
  %11 = load ptr, ptr %9, align 8, !dbg !1061
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !1062
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !1063
    #dbg_value(i64 %indvars.iv.i, !984, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1042)
  %12 = load ptr, ptr %0, align 8, !dbg !1060
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !1061
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !1061
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !1061
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !1061
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !1062
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !1063
    #dbg_value(i64 %indvars.iv.i, !984, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1042)
  %16 = load ptr, ptr %0, align 8, !dbg !1060
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !1061
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !1061
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !1061
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !1061
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !1062
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !1063
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !1064
    #dbg_value(i64 %indvars.iv.next.i.3, !984, !DIExpression(), !1042)
  %niter.next.3 = add i64 %niter, 4, !dbg !1059
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1059
  br i1 %niter.ncmp.3, label %get_mem3Dquant.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !1059, !llvm.loop !1065

get_mem3Dquant.exit.loopexit.unr-lcssa:           ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1059
  br i1 %lcmp.mod.not, label %get_mem3Dquant.exit, label %for.body.i.epil, !dbg !1059

for.body.i.epil:                                  ; preds = %get_mem3Dquant.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dquant.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dquant.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !984, !DIExpression(), !1042)
  %20 = load ptr, ptr %0, align 8, !dbg !1060
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !1061
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !1061
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !1061
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !1062
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !1063
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !1064
    #dbg_value(i64 %indvars.iv.next.i.epil, !984, !DIExpression(), !1042)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1059
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1059
  br i1 %epil.iter.cmp.not, label %get_mem3Dquant.exit, label %for.body.i.epil, !dbg !1059, !llvm.loop !1067

get_mem3Dquant.exit:                              ; preds = %get_mem3Dquant.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !985, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !1042)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !1026, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !1027)
    #dbg_value(i32 1, !1025, !DIExpression(), !1027)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !1068
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !1071

for.body.lr.ph:                                   ; preds = %get_mem3Dquant.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1068
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !1071
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !1071
  %xtraiter26 = and i64 %23, 3, !dbg !1071
  %25 = icmp ult i64 %24, 3, !dbg !1071
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1071

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !1071
  br label %for.body, !dbg !1071

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1025, !DIExpression(), !1027)
  %26 = load ptr, ptr %array4D, align 8, !dbg !1072
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !1073
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !1073
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !1073
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !1074
  store ptr %add.ptr, ptr %27, align 8, !dbg !1075
    #dbg_value(i64 %indvars.iv, !1025, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1027)
  %29 = load ptr, ptr %array4D, align 8, !dbg !1072
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !1073
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !1073
  %32 = load ptr, ptr %30, align 8, !dbg !1073
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !1074
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !1075
    #dbg_value(i64 %indvars.iv, !1025, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1027)
  %33 = load ptr, ptr %array4D, align 8, !dbg !1072
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !1073
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !1073
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !1073
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !1073
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !1074
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !1075
    #dbg_value(i64 %indvars.iv, !1025, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1027)
  %37 = load ptr, ptr %array4D, align 8, !dbg !1072
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !1073
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !1073
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !1073
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !1073
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !1074
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !1075
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1076
    #dbg_value(i64 %indvars.iv.next.3, !1025, !DIExpression(), !1027)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !1071
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !1071
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1071, !llvm.loop !1077

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !1071
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !1071

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1025, !DIExpression(), !1027)
  %41 = load ptr, ptr %array4D, align 8, !dbg !1072
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !1073
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !1073
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1073
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !1074
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !1075
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1076
    #dbg_value(i64 %indvars.iv.next.epil, !1025, !DIExpression(), !1027)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !1071
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !1071
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !1071, !llvm.loop !1079

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dquant.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !1044
    #dbg_value(!DIArgList(i64 poison, i32 poison), !1026, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1027)
    #dbg_value(i32 poison, !985, !DIExpression(), !1042)
  %conv1 = trunc i64 %mul to i32, !dbg !1028
    #dbg_value(i32 %conv1, !1026, !DIExpression(), !1027)
  %add.i = add i32 %conv1.i, %conv1, !dbg !1080
  %add = add i32 %add.i, %call6.i, !dbg !1081
    #dbg_value(i32 %add, !1026, !DIExpression(), !1027)
  ret i32 %add, !dbg !1082
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5Dquant(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4) local_unnamed_addr #0 !dbg !1083 {
entry:
    #dbg_value(ptr %array5D, !1088, !DIExpression(), !1096)
    #dbg_value(i32 %dim0, !1089, !DIExpression(), !1096)
    #dbg_value(i32 %dim1, !1090, !DIExpression(), !1096)
    #dbg_value(i32 %dim2, !1091, !DIExpression(), !1096)
    #dbg_value(i32 %dim3, !1092, !DIExpression(), !1096)
    #dbg_value(i32 %dim4, !1093, !DIExpression(), !1096)
  %conv = sext i32 %dim0 to i64, !dbg !1097
  %mul = shl nsw i64 %conv, 3, !dbg !1098
    #dbg_value(i64 %mul, !1095, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1096)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1099
  store ptr %call, ptr %array5D, align 8, !dbg !1101
  %cmp = icmp eq ptr %call, null, !dbg !1102
  br i1 %cmp, label %if.then, label %if.end, !dbg !1103

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.14, !574, !DIExpression(), !1104)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.14) #9, !dbg !1106
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1107
  %.pre = load ptr, ptr %array5D, align 8, !dbg !1108
  br label %if.end, !dbg !1109

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1108
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1110
  %call6 = tail call i32 @get_mem4Dquant(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4), !dbg !1111
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1095, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1096)
    #dbg_value(i32 1, !1094, !DIExpression(), !1096)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1112
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1115

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1112
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1115
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1115
  %xtraiter = and i64 %1, 3, !dbg !1115
  %3 = icmp ult i64 %2, 3, !dbg !1115
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1115

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1115
  br label %for.body, !dbg !1115

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1094, !DIExpression(), !1096)
  %4 = load ptr, ptr %array5D, align 8, !dbg !1116
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1117
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1117
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1117
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1118
  store ptr %add.ptr, ptr %5, align 8, !dbg !1119
    #dbg_value(i64 %indvars.iv, !1094, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1096)
  %7 = load ptr, ptr %array5D, align 8, !dbg !1116
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1117
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1117
  %10 = load ptr, ptr %8, align 8, !dbg !1117
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1118
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1119
    #dbg_value(i64 %indvars.iv, !1094, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1096)
  %11 = load ptr, ptr %array5D, align 8, !dbg !1116
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1117
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1117
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1117
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1117
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1118
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1119
    #dbg_value(i64 %indvars.iv, !1094, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1096)
  %15 = load ptr, ptr %array5D, align 8, !dbg !1116
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1117
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1117
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1117
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1117
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1118
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1119
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1120
    #dbg_value(i64 %indvars.iv.next.3, !1094, !DIExpression(), !1096)
  %niter.next.3 = add i64 %niter, 4, !dbg !1115
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1115
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1115, !llvm.loop !1121

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1115
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1115

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1094, !DIExpression(), !1096)
  %19 = load ptr, ptr %array5D, align 8, !dbg !1116
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1117
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1117
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1117
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1118
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1119
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1120
    #dbg_value(i64 %indvars.iv.next.epil, !1094, !DIExpression(), !1096)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1115
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1115
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1115, !llvm.loop !1123

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1097
    #dbg_value(i32 %conv1, !1095, !DIExpression(), !1096)
  %add = add nsw i32 %call6, %conv1, !dbg !1124
    #dbg_value(i32 %add, !1095, !DIExpression(), !1096)
  ret i32 %add, !dbg !1125
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dquant(ptr noundef %array2D) local_unnamed_addr #0 !dbg !1126 {
entry:
    #dbg_value(ptr %array2D, !1130, !DIExpression(), !1131)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !1132
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !1134

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !1135
  %tobool1.not = icmp eq ptr %0, null, !dbg !1135
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !1138

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1139
  br label %if.end, !dbg !1139

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1140
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !1141
  br label %if.end4, !dbg !1142

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1143
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !1145
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dquant(ptr noundef %array3D) local_unnamed_addr #0 !dbg !1146 {
entry:
    #dbg_value(ptr %array3D, !1150, !DIExpression(), !1151)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !1152
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1154

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !1155
    #dbg_value(ptr %0, !1130, !DIExpression(), !1157)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1159
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !1160

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1161
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !1161
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !1162

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1163
  br label %if.end.i, !dbg !1163

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1164
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1165
  br label %free_mem2Dquant.exit, !dbg !1166

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1167
  br label %free_mem2Dquant.exit

free_mem2Dquant.exit:                             ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !1168
  br label %if.end, !dbg !1169

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.16, i32 noundef 100) #9, !dbg !1170
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dquant.exit
  ret void, !dbg !1172
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dquant(ptr noundef %array4D) local_unnamed_addr #0 !dbg !1173 {
entry:
    #dbg_value(ptr %array4D, !1177, !DIExpression(), !1178)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !1179
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1181

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !1182
    #dbg_value(ptr %0, !1150, !DIExpression(), !1184)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1186
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !1187

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1188
    #dbg_value(ptr %1, !1130, !DIExpression(), !1189)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !1191
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !1192

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !1193
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !1193
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !1194

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !1195
  br label %if.end.i.i, !dbg !1195

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1196
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1197
  br label %free_mem2Dquant.exit.i, !dbg !1198

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.15, i32 noundef 100) #9, !dbg !1199
  br label %free_mem2Dquant.exit.i

free_mem2Dquant.exit.i:                           ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1200
  br label %free_mem3Dquant.exit, !dbg !1201

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.16, i32 noundef 100) #9, !dbg !1202
  br label %free_mem3Dquant.exit

free_mem3Dquant.exit:                             ; preds = %free_mem2Dquant.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !1203
  br label %if.end, !dbg !1204

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.17, i32 noundef 100) #9, !dbg !1205
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dquant.exit
  ret void, !dbg !1207
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5Dquant(ptr noundef %array5D) local_unnamed_addr #0 !dbg !1208 {
entry:
    #dbg_value(ptr %array5D, !1212, !DIExpression(), !1213)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !1214
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1216

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !1217
  tail call void @free_mem4Dquant(ptr noundef %0), !dbg !1219
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !1220
  br label %if.end, !dbg !1221

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.18, i32 noundef 100) #9, !dbg !1222
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1224
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2D_spp(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !1225 {
entry:
    #dbg_value(ptr %array2D, !1229, !DIExpression(), !1233)
    #dbg_value(i32 %dim0, !1230, !DIExpression(), !1233)
    #dbg_value(i32 %dim1, !1231, !DIExpression(), !1233)
  %conv = sext i32 %dim0 to i64, !dbg !1234
  %mul = shl nsw i64 %conv, 3, !dbg !1236
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1237
  store ptr %call, ptr %array2D, align 8, !dbg !1238
  %cmp = icmp eq ptr %call, null, !dbg !1239
  br i1 %cmp, label %if.then, label %if.end, !dbg !1240

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.19, !574, !DIExpression(), !1241)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.19) #9, !dbg !1243
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1244
  %.pre = load ptr, ptr %array2D, align 8, !dbg !1245
  br label %if.end, !dbg !1247

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1245
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !1248
  %conv3 = sext i32 %mul2 to i64, !dbg !1249
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !1250
  store ptr %call4, ptr %0, align 8, !dbg !1251
  %cmp5 = icmp eq ptr %call4, null, !dbg !1252
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1253

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.19, !574, !DIExpression(), !1254)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.19) #9, !dbg !1256
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1257
  br label %if.end8, !dbg !1258

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !1232, !DIExpression(), !1233)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !1259
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !1262

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1259
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1262
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1262
  %xtraiter = and i64 %1, 3, !dbg !1262
  %3 = icmp ult i64 %2, 3, !dbg !1262
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1262

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1262
  br label %for.body, !dbg !1262

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1232, !DIExpression(), !1233)
  %4 = load ptr, ptr %array2D, align 8, !dbg !1263
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1264
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1264
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1264
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1265
  store ptr %add.ptr, ptr %5, align 8, !dbg !1266
    #dbg_value(i64 %indvars.iv, !1232, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1233)
  %7 = load ptr, ptr %array2D, align 8, !dbg !1263
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1264
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1264
  %10 = load ptr, ptr %8, align 8, !dbg !1264
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1265
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1266
    #dbg_value(i64 %indvars.iv, !1232, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1233)
  %11 = load ptr, ptr %array2D, align 8, !dbg !1263
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1264
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1264
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1264
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1264
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1265
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1266
    #dbg_value(i64 %indvars.iv, !1232, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1233)
  %15 = load ptr, ptr %array2D, align 8, !dbg !1263
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1264
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1264
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1264
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1264
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1265
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1266
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1267
    #dbg_value(i64 %indvars.iv.next.3, !1232, !DIExpression(), !1233)
  %niter.next.3 = add i64 %niter, 4, !dbg !1262
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1262
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1262, !llvm.loop !1268

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1262
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1262

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1232, !DIExpression(), !1233)
  %19 = load ptr, ptr %array2D, align 8, !dbg !1263
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1264
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1264
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1264
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1265
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1266
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1267
    #dbg_value(i64 %indvars.iv.next.epil, !1232, !DIExpression(), !1233)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1262
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1262
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1262, !llvm.loop !1270

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 3, !dbg !1271
  %add = add i32 %mul15, 8, !dbg !1272
  %mul16 = mul i32 %add, %dim0, !dbg !1273
  ret i32 %mul16, !dbg !1274
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3D_spp(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !1275 {
entry:
    #dbg_value(ptr %array3D, !1280, !DIExpression(), !1286)
    #dbg_value(i32 %dim0, !1281, !DIExpression(), !1286)
    #dbg_value(i32 %dim1, !1282, !DIExpression(), !1286)
    #dbg_value(i32 %dim2, !1283, !DIExpression(), !1286)
  %conv = sext i32 %dim0 to i64, !dbg !1287
  %mul = shl nsw i64 %conv, 3, !dbg !1288
    #dbg_value(i64 %mul, !1285, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1286)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1289
  store ptr %call, ptr %array3D, align 8, !dbg !1291
  %cmp = icmp eq ptr %call, null, !dbg !1292
  br i1 %cmp, label %if.then, label %if.end, !dbg !1293

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.20, !574, !DIExpression(), !1294)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.20) #9, !dbg !1296
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1297
  %.pre = load ptr, ptr %array3D, align 8, !dbg !1298
  br label %if.end, !dbg !1299

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1298
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1300
  %call6 = tail call i32 @get_mem2D_spp(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !1301
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1285, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1286)
    #dbg_value(i32 1, !1284, !DIExpression(), !1286)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1302
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1305

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1302
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1305
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1305
  %xtraiter = and i64 %1, 3, !dbg !1305
  %3 = icmp ult i64 %2, 3, !dbg !1305
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1305

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1305
  br label %for.body, !dbg !1305

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1284, !DIExpression(), !1286)
  %4 = load ptr, ptr %array3D, align 8, !dbg !1306
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1307
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1307
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1307
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1308
  store ptr %add.ptr, ptr %5, align 8, !dbg !1309
    #dbg_value(i64 %indvars.iv, !1284, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1286)
  %7 = load ptr, ptr %array3D, align 8, !dbg !1306
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1307
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1307
  %10 = load ptr, ptr %8, align 8, !dbg !1307
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1308
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1309
    #dbg_value(i64 %indvars.iv, !1284, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1286)
  %11 = load ptr, ptr %array3D, align 8, !dbg !1306
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1307
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1307
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1307
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1307
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1308
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1309
    #dbg_value(i64 %indvars.iv, !1284, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1286)
  %15 = load ptr, ptr %array3D, align 8, !dbg !1306
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1307
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1307
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1307
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1307
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1308
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1309
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1310
    #dbg_value(i64 %indvars.iv.next.3, !1284, !DIExpression(), !1286)
  %niter.next.3 = add i64 %niter, 4, !dbg !1305
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1305
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1305, !llvm.loop !1311

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1305
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1305

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1284, !DIExpression(), !1286)
  %19 = load ptr, ptr %array3D, align 8, !dbg !1306
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1307
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1307
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1307
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1308
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1309
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1310
    #dbg_value(i64 %indvars.iv.next.epil, !1284, !DIExpression(), !1286)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1305
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1305
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1305, !llvm.loop !1313

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1287
    #dbg_value(i32 %conv1, !1285, !DIExpression(), !1286)
  %add = add nsw i32 %call6, %conv1, !dbg !1314
    #dbg_value(i32 %add, !1285, !DIExpression(), !1286)
  ret i32 %add, !dbg !1315
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dmv(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !1316 {
entry:
    #dbg_value(ptr %array2D, !1320, !DIExpression(), !1324)
    #dbg_value(i32 %dim0, !1321, !DIExpression(), !1324)
    #dbg_value(i32 %dim1, !1322, !DIExpression(), !1324)
  %conv = sext i32 %dim0 to i64, !dbg !1325
  %mul = shl nsw i64 %conv, 3, !dbg !1327
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1328
  store ptr %call, ptr %array2D, align 8, !dbg !1329
  %cmp = icmp eq ptr %call, null, !dbg !1330
  br i1 %cmp, label %if.then, label %if.end, !dbg !1331

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.6, !574, !DIExpression(), !1332)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.6) #9, !dbg !1334
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1335
  %.pre = load ptr, ptr %array2D, align 8, !dbg !1336
  br label %if.end, !dbg !1338

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1336
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !1339
  %conv3 = sext i32 %mul2 to i64, !dbg !1340
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 4) #10, !dbg !1341
  store ptr %call4, ptr %0, align 8, !dbg !1342
  %cmp5 = icmp eq ptr %call4, null, !dbg !1343
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1344

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.6, !574, !DIExpression(), !1345)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.6) #9, !dbg !1347
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1348
  br label %if.end8, !dbg !1349

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !1323, !DIExpression(), !1324)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !1350
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !1353

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1350
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1353
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1353
  %xtraiter = and i64 %1, 3, !dbg !1353
  %3 = icmp ult i64 %2, 3, !dbg !1353
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1353

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1353
  br label %for.body, !dbg !1353

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1323, !DIExpression(), !1324)
  %4 = load ptr, ptr %array2D, align 8, !dbg !1354
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1355
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1355
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1355
  %add.ptr = getelementptr inbounds %struct.MotionVector, ptr %6, i64 %idx.ext, !dbg !1356
  store ptr %add.ptr, ptr %5, align 8, !dbg !1357
    #dbg_value(i64 %indvars.iv, !1323, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1324)
  %7 = load ptr, ptr %array2D, align 8, !dbg !1354
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1355
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1355
  %10 = load ptr, ptr %8, align 8, !dbg !1355
  %add.ptr.1 = getelementptr inbounds %struct.MotionVector, ptr %10, i64 %idx.ext, !dbg !1356
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1357
    #dbg_value(i64 %indvars.iv, !1323, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1324)
  %11 = load ptr, ptr %array2D, align 8, !dbg !1354
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1355
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1355
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1355
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1355
  %add.ptr.2 = getelementptr inbounds %struct.MotionVector, ptr %14, i64 %idx.ext, !dbg !1356
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1357
    #dbg_value(i64 %indvars.iv, !1323, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1324)
  %15 = load ptr, ptr %array2D, align 8, !dbg !1354
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1355
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1355
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1355
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1355
  %add.ptr.3 = getelementptr inbounds %struct.MotionVector, ptr %18, i64 %idx.ext, !dbg !1356
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1357
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1358
    #dbg_value(i64 %indvars.iv.next.3, !1323, !DIExpression(), !1324)
  %niter.next.3 = add i64 %niter, 4, !dbg !1353
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1353
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1353, !llvm.loop !1359

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1353
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1353

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1323, !DIExpression(), !1324)
  %19 = load ptr, ptr %array2D, align 8, !dbg !1354
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1355
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1355
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1355
  %add.ptr.epil = getelementptr inbounds %struct.MotionVector, ptr %21, i64 %idx.ext, !dbg !1356
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1357
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1358
    #dbg_value(i64 %indvars.iv.next.epil, !1323, !DIExpression(), !1324)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1353
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1353
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1353, !llvm.loop !1361

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 2, !dbg !1362
  %add = add i32 %mul15, 8, !dbg !1363
  %mul16 = mul i32 %add, %dim0, !dbg !1364
  ret i32 %mul16, !dbg !1365
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dmv(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !1366 {
entry:
    #dbg_value(ptr %array3D, !1370, !DIExpression(), !1376)
    #dbg_value(i32 %dim0, !1371, !DIExpression(), !1376)
    #dbg_value(i32 %dim1, !1372, !DIExpression(), !1376)
    #dbg_value(i32 %dim2, !1373, !DIExpression(), !1376)
  %conv = sext i32 %dim0 to i64, !dbg !1377
  %mul = shl nsw i64 %conv, 3, !dbg !1378
    #dbg_value(i64 %mul, !1375, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1376)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1379
  store ptr %call, ptr %array3D, align 8, !dbg !1381
  %cmp = icmp eq ptr %call, null, !dbg !1382
  br i1 %cmp, label %if.then, label %if.end, !dbg !1383

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.21, !574, !DIExpression(), !1384)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.21) #9, !dbg !1386
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1387
  %.pre = load ptr, ptr %array3D, align 8, !dbg !1388
  br label %if.end, !dbg !1389

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1388
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1390
  %call6 = tail call i32 @get_mem2Dmv(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !1391
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1375, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1376)
    #dbg_value(i32 1, !1374, !DIExpression(), !1376)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1392
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1395

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1392
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1395
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1395
  %xtraiter = and i64 %1, 3, !dbg !1395
  %3 = icmp ult i64 %2, 3, !dbg !1395
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1395

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1395
  br label %for.body, !dbg !1395

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1374, !DIExpression(), !1376)
  %4 = load ptr, ptr %array3D, align 8, !dbg !1396
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1397
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1397
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1397
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1398
  store ptr %add.ptr, ptr %5, align 8, !dbg !1399
    #dbg_value(i64 %indvars.iv, !1374, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1376)
  %7 = load ptr, ptr %array3D, align 8, !dbg !1396
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1397
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1397
  %10 = load ptr, ptr %8, align 8, !dbg !1397
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1398
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1399
    #dbg_value(i64 %indvars.iv, !1374, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1376)
  %11 = load ptr, ptr %array3D, align 8, !dbg !1396
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1397
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1397
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1397
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1397
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1398
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1399
    #dbg_value(i64 %indvars.iv, !1374, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1376)
  %15 = load ptr, ptr %array3D, align 8, !dbg !1396
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1397
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1397
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1397
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1397
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1398
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1399
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1400
    #dbg_value(i64 %indvars.iv.next.3, !1374, !DIExpression(), !1376)
  %niter.next.3 = add i64 %niter, 4, !dbg !1395
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1395
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1395, !llvm.loop !1401

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1395
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1395

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1374, !DIExpression(), !1376)
  %19 = load ptr, ptr %array3D, align 8, !dbg !1396
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1397
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1397
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1397
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1398
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1399
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1400
    #dbg_value(i64 %indvars.iv.next.epil, !1374, !DIExpression(), !1376)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1395
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1395
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1395, !llvm.loop !1403

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1377
    #dbg_value(i32 %conv1, !1375, !DIExpression(), !1376)
  %add = add nsw i32 %call6, %conv1, !dbg !1404
    #dbg_value(i32 %add, !1375, !DIExpression(), !1376)
  ret i32 %add, !dbg !1405
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dmv(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !1406 {
entry:
    #dbg_value(ptr %array4D, !1410, !DIExpression(), !1417)
    #dbg_value(i32 %dim0, !1411, !DIExpression(), !1417)
    #dbg_value(i32 %dim1, !1412, !DIExpression(), !1417)
    #dbg_value(i32 %dim2, !1413, !DIExpression(), !1417)
    #dbg_value(i32 %dim3, !1414, !DIExpression(), !1417)
  %conv = sext i32 %dim0 to i64, !dbg !1418
  %mul = shl nsw i64 %conv, 3, !dbg !1419
    #dbg_value(i64 %mul, !1416, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1417)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1420
  store ptr %call, ptr %array4D, align 8, !dbg !1422
  %cmp = icmp eq ptr %call, null, !dbg !1423
  br i1 %cmp, label %if.then, label %if.end, !dbg !1424

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.22, !574, !DIExpression(), !1425)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.22) #9, !dbg !1427
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1428
  %.pre = load ptr, ptr %array4D, align 8, !dbg !1429
  br label %if.end, !dbg !1430

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1429
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1431
    #dbg_value(ptr %0, !1370, !DIExpression(), !1432)
    #dbg_value(i32 %mul5, !1371, !DIExpression(), !1432)
    #dbg_value(i32 %dim2, !1372, !DIExpression(), !1432)
    #dbg_value(i32 %dim3, !1373, !DIExpression(), !1432)
  %conv.i = sext i32 %mul5 to i64, !dbg !1434
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !1435
    #dbg_value(i64 %mul.i, !1375, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1432)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !1436
  store ptr %call.i22, ptr %0, align 8, !dbg !1437
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !1438
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !1439

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.21, !574, !DIExpression(), !1440)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.21) #9, !dbg !1442
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1443
  %.pre.i = load ptr, ptr %0, align 8, !dbg !1444
  br label %if.end.i, !dbg !1445

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !1444
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !1446
  %call6.i = tail call i32 @get_mem2Dmv(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !1447
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !1375, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1432)
    #dbg_value(i32 1, !1374, !DIExpression(), !1432)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !1448
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dmv.exit, !dbg !1449

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !1448
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !1449
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !1449
  %xtraiter = and i64 %2, 3, !dbg !1449
  %4 = icmp ult i64 %3, 3, !dbg !1449
  br i1 %4, label %get_mem3Dmv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !1449

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !1449
  br label %for.body.i, !dbg !1449

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !1374, !DIExpression(), !1432)
  %5 = load ptr, ptr %0, align 8, !dbg !1450
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !1451
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !1451
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !1451
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !1452
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !1453
    #dbg_value(i64 %indvars.iv.i, !1374, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1432)
  %8 = load ptr, ptr %0, align 8, !dbg !1450
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !1451
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !1451
  %11 = load ptr, ptr %9, align 8, !dbg !1451
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !1452
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !1453
    #dbg_value(i64 %indvars.iv.i, !1374, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1432)
  %12 = load ptr, ptr %0, align 8, !dbg !1450
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !1451
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !1451
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !1451
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !1451
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !1452
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !1453
    #dbg_value(i64 %indvars.iv.i, !1374, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1432)
  %16 = load ptr, ptr %0, align 8, !dbg !1450
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !1451
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !1451
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !1451
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !1451
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !1452
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !1453
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !1454
    #dbg_value(i64 %indvars.iv.next.i.3, !1374, !DIExpression(), !1432)
  %niter.next.3 = add i64 %niter, 4, !dbg !1449
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1449
  br i1 %niter.ncmp.3, label %get_mem3Dmv.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !1449, !llvm.loop !1455

get_mem3Dmv.exit.loopexit.unr-lcssa:              ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1449
  br i1 %lcmp.mod.not, label %get_mem3Dmv.exit, label %for.body.i.epil, !dbg !1449

for.body.i.epil:                                  ; preds = %get_mem3Dmv.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dmv.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dmv.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !1374, !DIExpression(), !1432)
  %20 = load ptr, ptr %0, align 8, !dbg !1450
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !1451
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !1451
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !1451
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !1452
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !1453
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !1454
    #dbg_value(i64 %indvars.iv.next.i.epil, !1374, !DIExpression(), !1432)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1449
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1449
  br i1 %epil.iter.cmp.not, label %get_mem3Dmv.exit, label %for.body.i.epil, !dbg !1449, !llvm.loop !1457

get_mem3Dmv.exit:                                 ; preds = %get_mem3Dmv.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !1375, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !1432)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !1416, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !1417)
    #dbg_value(i32 1, !1415, !DIExpression(), !1417)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !1458
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !1461

for.body.lr.ph:                                   ; preds = %get_mem3Dmv.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1458
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !1461
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !1461
  %xtraiter26 = and i64 %23, 3, !dbg !1461
  %25 = icmp ult i64 %24, 3, !dbg !1461
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1461

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !1461
  br label %for.body, !dbg !1461

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1415, !DIExpression(), !1417)
  %26 = load ptr, ptr %array4D, align 8, !dbg !1462
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !1463
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !1463
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !1463
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !1464
  store ptr %add.ptr, ptr %27, align 8, !dbg !1465
    #dbg_value(i64 %indvars.iv, !1415, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1417)
  %29 = load ptr, ptr %array4D, align 8, !dbg !1462
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !1463
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !1463
  %32 = load ptr, ptr %30, align 8, !dbg !1463
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !1464
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !1465
    #dbg_value(i64 %indvars.iv, !1415, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1417)
  %33 = load ptr, ptr %array4D, align 8, !dbg !1462
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !1463
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !1463
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !1463
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !1463
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !1464
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !1465
    #dbg_value(i64 %indvars.iv, !1415, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1417)
  %37 = load ptr, ptr %array4D, align 8, !dbg !1462
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !1463
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !1463
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !1463
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !1463
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !1464
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !1465
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1466
    #dbg_value(i64 %indvars.iv.next.3, !1415, !DIExpression(), !1417)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !1461
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !1461
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1461, !llvm.loop !1467

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !1461
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !1461

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1415, !DIExpression(), !1417)
  %41 = load ptr, ptr %array4D, align 8, !dbg !1462
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !1463
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !1463
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1463
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !1464
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !1465
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1466
    #dbg_value(i64 %indvars.iv.next.epil, !1415, !DIExpression(), !1417)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !1461
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !1461
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !1461, !llvm.loop !1469

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dmv.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !1434
    #dbg_value(!DIArgList(i64 poison, i32 poison), !1416, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1417)
    #dbg_value(i32 poison, !1375, !DIExpression(), !1432)
  %conv1 = trunc i64 %mul to i32, !dbg !1418
    #dbg_value(i32 %conv1, !1416, !DIExpression(), !1417)
  %add.i = add i32 %conv1.i, %conv1, !dbg !1470
  %add = add i32 %add.i, %call6.i, !dbg !1471
    #dbg_value(i32 %add, !1416, !DIExpression(), !1417)
  ret i32 %add, !dbg !1472
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5Dmv(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4) local_unnamed_addr #0 !dbg !1473 {
entry:
    #dbg_value(ptr %array5D, !1477, !DIExpression(), !1485)
    #dbg_value(i32 %dim0, !1478, !DIExpression(), !1485)
    #dbg_value(i32 %dim1, !1479, !DIExpression(), !1485)
    #dbg_value(i32 %dim2, !1480, !DIExpression(), !1485)
    #dbg_value(i32 %dim3, !1481, !DIExpression(), !1485)
    #dbg_value(i32 %dim4, !1482, !DIExpression(), !1485)
  %conv = sext i32 %dim0 to i64, !dbg !1486
  %mul = shl nsw i64 %conv, 3, !dbg !1487
    #dbg_value(i64 %mul, !1484, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1485)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1488
  store ptr %call, ptr %array5D, align 8, !dbg !1490
  %cmp = icmp eq ptr %call, null, !dbg !1491
  br i1 %cmp, label %if.then, label %if.end, !dbg !1492

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.23, !574, !DIExpression(), !1493)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.23) #9, !dbg !1495
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1496
  %.pre = load ptr, ptr %array5D, align 8, !dbg !1497
  br label %if.end, !dbg !1498

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1497
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1499
  %call6 = tail call i32 @get_mem4Dmv(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4), !dbg !1500
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1484, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1485)
    #dbg_value(i32 1, !1483, !DIExpression(), !1485)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1501
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1504

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1501
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1504
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1504
  %xtraiter = and i64 %1, 3, !dbg !1504
  %3 = icmp ult i64 %2, 3, !dbg !1504
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1504

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1504
  br label %for.body, !dbg !1504

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1483, !DIExpression(), !1485)
  %4 = load ptr, ptr %array5D, align 8, !dbg !1505
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1506
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1506
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1506
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1507
  store ptr %add.ptr, ptr %5, align 8, !dbg !1508
    #dbg_value(i64 %indvars.iv, !1483, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1485)
  %7 = load ptr, ptr %array5D, align 8, !dbg !1505
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1506
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1506
  %10 = load ptr, ptr %8, align 8, !dbg !1506
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1507
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1508
    #dbg_value(i64 %indvars.iv, !1483, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1485)
  %11 = load ptr, ptr %array5D, align 8, !dbg !1505
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1506
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1506
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1506
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1506
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1507
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1508
    #dbg_value(i64 %indvars.iv, !1483, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1485)
  %15 = load ptr, ptr %array5D, align 8, !dbg !1505
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1506
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1506
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1506
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1506
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1507
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1508
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1509
    #dbg_value(i64 %indvars.iv.next.3, !1483, !DIExpression(), !1485)
  %niter.next.3 = add i64 %niter, 4, !dbg !1504
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1504
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1504, !llvm.loop !1510

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1504
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1504

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1483, !DIExpression(), !1485)
  %19 = load ptr, ptr %array5D, align 8, !dbg !1505
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1506
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1506
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1506
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1507
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1508
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1509
    #dbg_value(i64 %indvars.iv.next.epil, !1483, !DIExpression(), !1485)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1504
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1504
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1504, !llvm.loop !1512

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1486
    #dbg_value(i32 %conv1, !1484, !DIExpression(), !1485)
  %add = add nsw i32 %call6, %conv1, !dbg !1513
    #dbg_value(i32 %add, !1484, !DIExpression(), !1485)
  ret i32 %add, !dbg !1514
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem6Dmv(ptr nocapture noundef %array6D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5) local_unnamed_addr #0 !dbg !1515 {
entry:
    #dbg_value(ptr %array6D, !1519, !DIExpression(), !1528)
    #dbg_value(i32 %dim0, !1520, !DIExpression(), !1528)
    #dbg_value(i32 %dim1, !1521, !DIExpression(), !1528)
    #dbg_value(i32 %dim2, !1522, !DIExpression(), !1528)
    #dbg_value(i32 %dim3, !1523, !DIExpression(), !1528)
    #dbg_value(i32 %dim4, !1524, !DIExpression(), !1528)
    #dbg_value(i32 %dim5, !1525, !DIExpression(), !1528)
  %conv = sext i32 %dim0 to i64, !dbg !1529
  %mul = shl nsw i64 %conv, 3, !dbg !1530
    #dbg_value(i64 %mul, !1527, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1528)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1531
  store ptr %call, ptr %array6D, align 8, !dbg !1533
  %cmp = icmp eq ptr %call, null, !dbg !1534
  br i1 %cmp, label %if.then, label %if.end, !dbg !1535

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.24, !574, !DIExpression(), !1536)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.24) #9, !dbg !1538
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1539
  %.pre = load ptr, ptr %array6D, align 8, !dbg !1540
  br label %if.end, !dbg !1541

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1540
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1542
    #dbg_value(ptr %0, !1477, !DIExpression(), !1543)
    #dbg_value(i32 %mul5, !1478, !DIExpression(), !1543)
    #dbg_value(i32 %dim2, !1479, !DIExpression(), !1543)
    #dbg_value(i32 %dim3, !1480, !DIExpression(), !1543)
    #dbg_value(i32 %dim4, !1481, !DIExpression(), !1543)
    #dbg_value(i32 %dim5, !1482, !DIExpression(), !1543)
  %conv.i = sext i32 %mul5 to i64, !dbg !1545
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !1546
    #dbg_value(i64 %mul.i, !1484, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1543)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !1547
  store ptr %call.i22, ptr %0, align 8, !dbg !1548
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !1549
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !1550

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.23, !574, !DIExpression(), !1551)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.23) #9, !dbg !1553
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1554
  %.pre.i = load ptr, ptr %0, align 8, !dbg !1555
  br label %if.end.i, !dbg !1556

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !1555
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !1557
  %call6.i = tail call i32 @get_mem4Dmv(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5), !dbg !1558
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !1484, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1543)
    #dbg_value(i32 1, !1483, !DIExpression(), !1543)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !1559
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem5Dmv.exit, !dbg !1560

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !1559
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !1560
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !1560
  %xtraiter = and i64 %2, 3, !dbg !1560
  %4 = icmp ult i64 %3, 3, !dbg !1560
  br i1 %4, label %get_mem5Dmv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !1560

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !1560
  br label %for.body.i, !dbg !1560

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !1483, !DIExpression(), !1543)
  %5 = load ptr, ptr %0, align 8, !dbg !1561
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !1562
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !1562
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !1562
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !1563
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !1564
    #dbg_value(i64 %indvars.iv.i, !1483, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1543)
  %8 = load ptr, ptr %0, align 8, !dbg !1561
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !1562
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !1562
  %11 = load ptr, ptr %9, align 8, !dbg !1562
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !1563
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !1564
    #dbg_value(i64 %indvars.iv.i, !1483, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1543)
  %12 = load ptr, ptr %0, align 8, !dbg !1561
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !1562
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !1562
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !1562
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !1562
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !1563
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !1564
    #dbg_value(i64 %indvars.iv.i, !1483, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1543)
  %16 = load ptr, ptr %0, align 8, !dbg !1561
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !1562
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !1562
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !1562
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !1562
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !1563
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !1564
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !1565
    #dbg_value(i64 %indvars.iv.next.i.3, !1483, !DIExpression(), !1543)
  %niter.next.3 = add i64 %niter, 4, !dbg !1560
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1560
  br i1 %niter.ncmp.3, label %get_mem5Dmv.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !1560, !llvm.loop !1566

get_mem5Dmv.exit.loopexit.unr-lcssa:              ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1560
  br i1 %lcmp.mod.not, label %get_mem5Dmv.exit, label %for.body.i.epil, !dbg !1560

for.body.i.epil:                                  ; preds = %get_mem5Dmv.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem5Dmv.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem5Dmv.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !1483, !DIExpression(), !1543)
  %20 = load ptr, ptr %0, align 8, !dbg !1561
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !1562
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !1562
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !1562
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !1563
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !1564
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !1565
    #dbg_value(i64 %indvars.iv.next.i.epil, !1483, !DIExpression(), !1543)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1560
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1560
  br i1 %epil.iter.cmp.not, label %get_mem5Dmv.exit, label %for.body.i.epil, !dbg !1560, !llvm.loop !1568

get_mem5Dmv.exit:                                 ; preds = %get_mem5Dmv.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !1484, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !1543)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !1527, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !1528)
    #dbg_value(i32 1, !1526, !DIExpression(), !1528)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !1569
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !1572

for.body.lr.ph:                                   ; preds = %get_mem5Dmv.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1569
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !1572
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !1572
  %xtraiter26 = and i64 %23, 3, !dbg !1572
  %25 = icmp ult i64 %24, 3, !dbg !1572
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1572

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !1572
  br label %for.body, !dbg !1572

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1526, !DIExpression(), !1528)
  %26 = load ptr, ptr %array6D, align 8, !dbg !1573
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !1574
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !1574
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !1574
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !1575
  store ptr %add.ptr, ptr %27, align 8, !dbg !1576
    #dbg_value(i64 %indvars.iv, !1526, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1528)
  %29 = load ptr, ptr %array6D, align 8, !dbg !1573
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !1574
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !1574
  %32 = load ptr, ptr %30, align 8, !dbg !1574
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !1575
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !1576
    #dbg_value(i64 %indvars.iv, !1526, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1528)
  %33 = load ptr, ptr %array6D, align 8, !dbg !1573
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !1574
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !1574
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !1574
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !1574
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !1575
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !1576
    #dbg_value(i64 %indvars.iv, !1526, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1528)
  %37 = load ptr, ptr %array6D, align 8, !dbg !1573
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !1574
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !1574
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !1574
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !1574
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !1575
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !1576
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1577
    #dbg_value(i64 %indvars.iv.next.3, !1526, !DIExpression(), !1528)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !1572
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !1572
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1572, !llvm.loop !1578

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !1572
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !1572

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1526, !DIExpression(), !1528)
  %41 = load ptr, ptr %array6D, align 8, !dbg !1573
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !1574
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !1574
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1574
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !1575
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !1576
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1577
    #dbg_value(i64 %indvars.iv.next.epil, !1526, !DIExpression(), !1528)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !1572
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !1572
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !1572, !llvm.loop !1580

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem5Dmv.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !1545
    #dbg_value(!DIArgList(i64 poison, i32 poison), !1527, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1528)
    #dbg_value(i32 poison, !1484, !DIExpression(), !1543)
  %conv1 = trunc i64 %mul to i32, !dbg !1529
    #dbg_value(i32 %conv1, !1527, !DIExpression(), !1528)
  %add.i = add i32 %conv1.i, %conv1, !dbg !1581
  %add = add i32 %add.i, %call6.i, !dbg !1582
    #dbg_value(i32 %add, !1527, !DIExpression(), !1528)
  ret i32 %add, !dbg !1583
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem7Dmv(ptr nocapture noundef %array7D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5, i32 noundef %dim6) local_unnamed_addr #0 !dbg !1584 {
entry:
    #dbg_value(ptr %array7D, !1589, !DIExpression(), !1599)
    #dbg_value(i32 %dim0, !1590, !DIExpression(), !1599)
    #dbg_value(i32 %dim1, !1591, !DIExpression(), !1599)
    #dbg_value(i32 %dim2, !1592, !DIExpression(), !1599)
    #dbg_value(i32 %dim3, !1593, !DIExpression(), !1599)
    #dbg_value(i32 %dim4, !1594, !DIExpression(), !1599)
    #dbg_value(i32 %dim5, !1595, !DIExpression(), !1599)
    #dbg_value(i32 %dim6, !1596, !DIExpression(), !1599)
  %conv = sext i32 %dim0 to i64, !dbg !1600
  %mul = shl nsw i64 %conv, 3, !dbg !1601
    #dbg_value(i64 %mul, !1598, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1599)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1602
  store ptr %call, ptr %array7D, align 8, !dbg !1604
  %cmp = icmp eq ptr %call, null, !dbg !1605
  br i1 %cmp, label %if.then, label %if.end, !dbg !1606

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.25, !574, !DIExpression(), !1607)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.25) #9, !dbg !1609
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1610
  %.pre = load ptr, ptr %array7D, align 8, !dbg !1611
  br label %if.end, !dbg !1612

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1611
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1613
  %call6 = tail call i32 @get_mem6Dmv(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5, i32 noundef %dim6), !dbg !1614
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1598, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1599)
    #dbg_value(i32 1, !1597, !DIExpression(), !1599)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1615
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !1618

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1615
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1618
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1618
  %xtraiter = and i64 %1, 3, !dbg !1618
  %3 = icmp ult i64 %2, 3, !dbg !1618
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1618

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1618
  br label %for.body, !dbg !1618

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1597, !DIExpression(), !1599)
  %4 = load ptr, ptr %array7D, align 8, !dbg !1619
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1620
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1620
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1620
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !1621
  store ptr %add.ptr, ptr %5, align 8, !dbg !1622
    #dbg_value(i64 %indvars.iv, !1597, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1599)
  %7 = load ptr, ptr %array7D, align 8, !dbg !1619
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1620
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1620
  %10 = load ptr, ptr %8, align 8, !dbg !1620
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !1621
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1622
    #dbg_value(i64 %indvars.iv, !1597, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1599)
  %11 = load ptr, ptr %array7D, align 8, !dbg !1619
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1620
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1620
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1620
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1620
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !1621
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1622
    #dbg_value(i64 %indvars.iv, !1597, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1599)
  %15 = load ptr, ptr %array7D, align 8, !dbg !1619
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1620
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1620
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1620
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1620
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !1621
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1622
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1623
    #dbg_value(i64 %indvars.iv.next.3, !1597, !DIExpression(), !1599)
  %niter.next.3 = add i64 %niter, 4, !dbg !1618
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1618
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1618, !llvm.loop !1624

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1618
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1618

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1597, !DIExpression(), !1599)
  %19 = load ptr, ptr %array7D, align 8, !dbg !1619
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1620
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1620
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1620
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !1621
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1622
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1623
    #dbg_value(i64 %indvars.iv.next.epil, !1597, !DIExpression(), !1599)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1618
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1618
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1618, !llvm.loop !1626

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1600
    #dbg_value(i32 %conv1, !1598, !DIExpression(), !1599)
  %add = add nsw i32 %call6, %conv1, !dbg !1627
    #dbg_value(i32 %add, !1598, !DIExpression(), !1599)
  ret i32 %add, !dbg !1628
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2D_spp(ptr noundef %array2D) local_unnamed_addr #0 !dbg !1629 {
entry:
    #dbg_value(ptr %array2D, !1633, !DIExpression(), !1634)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !1635
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !1637

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !1638
  %tobool1.not = icmp eq ptr %0, null, !dbg !1638
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !1641

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1642
  br label %if.end, !dbg !1642

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.26, i32 noundef 100) #9, !dbg !1643
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !1644
  br label %if.end4, !dbg !1645

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.26, i32 noundef 100) #9, !dbg !1646
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !1648
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3D_spp(ptr noundef %array3D) local_unnamed_addr #0 !dbg !1649 {
entry:
    #dbg_value(ptr %array3D, !1653, !DIExpression(), !1654)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !1655
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1657

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !1658
    #dbg_value(ptr %0, !1633, !DIExpression(), !1660)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1662
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !1663

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1664
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !1664
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !1665

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1666
  br label %if.end.i, !dbg !1666

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.26, i32 noundef 100) #9, !dbg !1667
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1668
  br label %free_mem2D_spp.exit, !dbg !1669

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.26, i32 noundef 100) #9, !dbg !1670
  br label %free_mem2D_spp.exit

free_mem2D_spp.exit:                              ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !1671
  br label %if.end, !dbg !1672

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.27, i32 noundef 100) #9, !dbg !1673
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2D_spp.exit
  ret void, !dbg !1675
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dmv(ptr noundef %array2D) local_unnamed_addr #0 !dbg !1676 {
entry:
    #dbg_value(ptr %array2D, !1680, !DIExpression(), !1681)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !1682
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !1684

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !1685
  %tobool1.not = icmp eq ptr %0, null, !dbg !1685
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !1688

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1689
  br label %if.end, !dbg !1689

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1690
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !1691
  br label %if.end4, !dbg !1692

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1693
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !1695
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dmv(ptr noundef %array3D) local_unnamed_addr #0 !dbg !1696 {
entry:
    #dbg_value(ptr %array3D, !1700, !DIExpression(), !1701)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !1702
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1704

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !1705
    #dbg_value(ptr %0, !1680, !DIExpression(), !1707)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1709
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !1710

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1711
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !1711
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !1712

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1713
  br label %if.end.i, !dbg !1713

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1714
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1715
  br label %free_mem2Dmv.exit, !dbg !1716

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1717
  br label %free_mem2Dmv.exit

free_mem2Dmv.exit:                                ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !1718
  br label %if.end, !dbg !1719

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.29, i32 noundef 100) #9, !dbg !1720
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dmv.exit
  ret void, !dbg !1722
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dmv(ptr noundef %array4D) local_unnamed_addr #0 !dbg !1723 {
entry:
    #dbg_value(ptr %array4D, !1727, !DIExpression(), !1728)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !1729
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1731

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !1732
    #dbg_value(ptr %0, !1700, !DIExpression(), !1734)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1736
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !1737

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1738
    #dbg_value(ptr %1, !1680, !DIExpression(), !1739)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !1741
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !1742

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !1743
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !1743
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !1744

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !1745
  br label %if.end.i.i, !dbg !1745

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1746
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1747
  br label %free_mem2Dmv.exit.i, !dbg !1748

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.28, i32 noundef 100) #9, !dbg !1749
  br label %free_mem2Dmv.exit.i

free_mem2Dmv.exit.i:                              ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1750
  br label %free_mem3Dmv.exit, !dbg !1751

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.29, i32 noundef 100) #9, !dbg !1752
  br label %free_mem3Dmv.exit

free_mem3Dmv.exit:                                ; preds = %free_mem2Dmv.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !1753
  br label %if.end, !dbg !1754

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.30, i32 noundef 100) #9, !dbg !1755
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dmv.exit
  ret void, !dbg !1757
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5Dmv(ptr noundef %array5D) local_unnamed_addr #0 !dbg !1758 {
entry:
    #dbg_value(ptr %array5D, !1762, !DIExpression(), !1763)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !1764
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1766

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !1767
  tail call void @free_mem4Dmv(ptr noundef %0), !dbg !1769
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !1770
  br label %if.end, !dbg !1771

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.31, i32 noundef 100) #9, !dbg !1772
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !1774
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem6Dmv(ptr noundef %array6D) local_unnamed_addr #0 !dbg !1775 {
entry:
    #dbg_value(ptr %array6D, !1779, !DIExpression(), !1780)
  %tobool.not = icmp eq ptr %array6D, null, !dbg !1781
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1783

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array6D, align 8, !dbg !1784
    #dbg_value(ptr %0, !1762, !DIExpression(), !1786)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1788
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !1789

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1790
  tail call void @free_mem4Dmv(ptr noundef %1), !dbg !1791
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1792
  br label %free_mem5Dmv.exit, !dbg !1793

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.31, i32 noundef 100) #9, !dbg !1794
  br label %free_mem5Dmv.exit

free_mem5Dmv.exit:                                ; preds = %if.then.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array6D) #9, !dbg !1795
  br label %if.end, !dbg !1796

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.32, i32 noundef 100) #9, !dbg !1797
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem5Dmv.exit
  ret void, !dbg !1799
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem7Dmv(ptr noundef %array7D) local_unnamed_addr #0 !dbg !1800 {
entry:
    #dbg_value(ptr %array7D, !1804, !DIExpression(), !1805)
  %tobool.not = icmp eq ptr %array7D, null, !dbg !1806
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !1808

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array7D, align 8, !dbg !1809
    #dbg_value(ptr %0, !1779, !DIExpression(), !1811)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1813
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !1814

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !1815
    #dbg_value(ptr %1, !1762, !DIExpression(), !1816)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !1818
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i, !dbg !1819

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !1820
  tail call void @free_mem4Dmv(ptr noundef %2), !dbg !1821
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !1822
  br label %free_mem5Dmv.exit.i, !dbg !1823

if.else.i.i:                                      ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.31, i32 noundef 100) #9, !dbg !1824
  br label %free_mem5Dmv.exit.i

free_mem5Dmv.exit.i:                              ; preds = %if.else.i.i, %if.then.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !1825
  br label %free_mem6Dmv.exit, !dbg !1826

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.32, i32 noundef 100) #9, !dbg !1827
  br label %free_mem6Dmv.exit

free_mem6Dmv.exit:                                ; preds = %free_mem5Dmv.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array7D) #9, !dbg !1828
  br label %if.end, !dbg !1829

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.33, i32 noundef 100) #9, !dbg !1830
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem6Dmv.exit
  ret void, !dbg !1832
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem1Dpel(ptr nocapture noundef writeonly %array1D, i32 noundef %dim0) local_unnamed_addr #0 !dbg !1833 {
entry:
    #dbg_value(ptr %array1D, !1837, !DIExpression(), !1839)
    #dbg_value(i32 %dim0, !1838, !DIExpression(), !1839)
  %conv = sext i32 %dim0 to i64, !dbg !1840
  %call = tail call noalias ptr @calloc(i64 noundef %conv, i64 noundef 2) #10, !dbg !1842
  store ptr %call, ptr %array1D, align 8, !dbg !1843
  %cmp = icmp eq ptr %call, null, !dbg !1844
  br i1 %cmp, label %if.then, label %if.end, !dbg !1845

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.34, !574, !DIExpression(), !1846)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.34) #9, !dbg !1848
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1849
  br label %if.end, !dbg !1850

if.end:                                           ; preds = %if.then, %entry
  %mul = shl i32 %dim0, 1, !dbg !1851
  %add = add i32 %mul, 8, !dbg !1852
  ret i32 %add, !dbg !1853
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dpel(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !1854 {
entry:
    #dbg_value(ptr %array2D, !1858, !DIExpression(), !1862)
    #dbg_value(i32 %dim0, !1859, !DIExpression(), !1862)
    #dbg_value(i32 %dim1, !1860, !DIExpression(), !1862)
  %conv = sext i32 %dim0 to i64, !dbg !1863
  %mul = shl nsw i64 %conv, 3, !dbg !1865
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1866
  store ptr %call, ptr %array2D, align 8, !dbg !1867
  %cmp = icmp eq ptr %call, null, !dbg !1868
  br i1 %cmp, label %if.then, label %if.end, !dbg !1869

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.35, !574, !DIExpression(), !1870)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.35) #9, !dbg !1872
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1873
  %.pre = load ptr, ptr %array2D, align 8, !dbg !1874
  br label %if.end, !dbg !1876

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1874
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !1877
  %conv3 = sext i32 %mul2 to i64, !dbg !1878
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 2) #10, !dbg !1879
  store ptr %call4, ptr %0, align 8, !dbg !1880
  %cmp5 = icmp eq ptr %call4, null, !dbg !1881
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !1882

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.35, !574, !DIExpression(), !1883)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.35) #9, !dbg !1885
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1886
  br label %if.end8, !dbg !1887

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !1861, !DIExpression(), !1862)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !1888
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !1891

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1888
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !1891
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !1891
  %xtraiter = and i64 %1, 3, !dbg !1891
  %3 = icmp ult i64 %2, 3, !dbg !1891
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1891

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !1891
  br label %for.body, !dbg !1891

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1861, !DIExpression(), !1862)
  %4 = load ptr, ptr %array2D, align 8, !dbg !1892
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !1893
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !1893
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !1893
  %add.ptr = getelementptr inbounds i16, ptr %6, i64 %idx.ext, !dbg !1894
  store ptr %add.ptr, ptr %5, align 8, !dbg !1895
    #dbg_value(i64 %indvars.iv, !1861, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1862)
  %7 = load ptr, ptr %array2D, align 8, !dbg !1892
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !1893
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !1893
  %10 = load ptr, ptr %8, align 8, !dbg !1893
  %add.ptr.1 = getelementptr inbounds i16, ptr %10, i64 %idx.ext, !dbg !1894
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !1895
    #dbg_value(i64 %indvars.iv, !1861, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1862)
  %11 = load ptr, ptr %array2D, align 8, !dbg !1892
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !1893
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !1893
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !1893
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !1893
  %add.ptr.2 = getelementptr inbounds i16, ptr %14, i64 %idx.ext, !dbg !1894
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !1895
    #dbg_value(i64 %indvars.iv, !1861, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1862)
  %15 = load ptr, ptr %array2D, align 8, !dbg !1892
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !1893
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !1893
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !1893
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !1893
  %add.ptr.3 = getelementptr inbounds i16, ptr %18, i64 %idx.ext, !dbg !1894
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !1895
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1896
    #dbg_value(i64 %indvars.iv.next.3, !1861, !DIExpression(), !1862)
  %niter.next.3 = add i64 %niter, 4, !dbg !1891
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1891
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1891, !llvm.loop !1897

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1891
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1891

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1861, !DIExpression(), !1862)
  %19 = load ptr, ptr %array2D, align 8, !dbg !1892
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !1893
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !1893
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !1893
  %add.ptr.epil = getelementptr inbounds i16, ptr %21, i64 %idx.ext, !dbg !1894
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !1895
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1896
    #dbg_value(i64 %indvars.iv.next.epil, !1861, !DIExpression(), !1862)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1891
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1891
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1891, !llvm.loop !1899

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 1, !dbg !1900
  %add = add i32 %mul15, 8, !dbg !1901
  %mul16 = mul i32 %add, %dim0, !dbg !1902
  ret i32 %mul16, !dbg !1903
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2DpelWithPad(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !1904 {
entry:
    #dbg_value(ptr %array2D, !1908, !DIExpression(), !1917)
    #dbg_value(i32 %dim0, !1909, !DIExpression(), !1917)
    #dbg_value(i32 %dim1, !1910, !DIExpression(), !1917)
    #dbg_value(i32 %iPadY, !1911, !DIExpression(), !1917)
    #dbg_value(i32 %iPadX, !1912, !DIExpression(), !1917)
    #dbg_value(ptr null, !1914, !DIExpression(), !1917)
  %mul = shl nsw i32 %iPadY, 1, !dbg !1918
  %add = add nsw i32 %mul, %dim0, !dbg !1919
    #dbg_value(i32 %add, !1915, !DIExpression(), !1917)
  %mul1 = shl nsw i32 %iPadX, 1, !dbg !1920
  %add2 = add nsw i32 %mul1, %dim1, !dbg !1921
    #dbg_value(i32 %add2, !1916, !DIExpression(), !1917)
  %conv = sext i32 %add to i64, !dbg !1922
  %mul3 = shl nsw i64 %conv, 3, !dbg !1924
  %call = tail call noalias ptr @malloc(i64 noundef %mul3) #8, !dbg !1925
  store ptr %call, ptr %array2D, align 8, !dbg !1926
  %cmp = icmp eq ptr %call, null, !dbg !1927
  br i1 %cmp, label %if.then, label %if.end, !dbg !1928

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.36, !574, !DIExpression(), !1929)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.36) #9, !dbg !1931
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1932
  %.pre = load ptr, ptr %array2D, align 8, !dbg !1933
  br label %if.end, !dbg !1935

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1933
  %mul5 = mul nsw i32 %add2, %add, !dbg !1936
  %conv6 = sext i32 %mul5 to i64, !dbg !1937
  %call7 = tail call noalias ptr @calloc(i64 noundef %conv6, i64 noundef 2) #10, !dbg !1938
  store ptr %call7, ptr %0, align 8, !dbg !1939
  %cmp8 = icmp eq ptr %call7, null, !dbg !1940
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !1941

if.then10:                                        ; preds = %if.end
    #dbg_value(ptr @.str.36, !574, !DIExpression(), !1942)
  %call.i42 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.36) #9, !dbg !1944
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1945
  br label %if.end11, !dbg !1946

if.end11:                                         ; preds = %if.then10, %if.end
  %1 = load ptr, ptr %array2D, align 8, !dbg !1947
  %2 = load ptr, ptr %1, align 8, !dbg !1948
  %idx.ext = sext i32 %iPadX to i64, !dbg !1948
  %add.ptr = getelementptr inbounds i16, ptr %2, i64 %idx.ext, !dbg !1948
  store ptr %add.ptr, ptr %1, align 8, !dbg !1948
    #dbg_value(ptr poison, !1914, !DIExpression(), !1917)
    #dbg_value(i32 1, !1913, !DIExpression(), !1917)
  %cmp1343 = icmp sgt i32 %add, 1, !dbg !1949
  br i1 %cmp1343, label %for.body.lr.ph, label %for.end, !dbg !1952

for.body.lr.ph:                                   ; preds = %if.end11
  %3 = load ptr, ptr %array2D, align 8, !dbg !1953
  %4 = load ptr, ptr %3, align 8, !dbg !1954
    #dbg_value(ptr %4, !1914, !DIExpression(), !1917)
  %idx.ext15 = sext i32 %add2 to i64
  %wide.trip.count = zext nneg i32 %add to i64, !dbg !1949
  %5 = add nsw i64 %wide.trip.count, -1, !dbg !1952
  %6 = add nsw i64 %wide.trip.count, -2, !dbg !1952
  %xtraiter = and i64 %5, 3, !dbg !1952
  %7 = icmp ult i64 %6, 3, !dbg !1952
  br i1 %7, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !1952

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %5, -4, !dbg !1952
  br label %for.body, !dbg !1952

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %curr.044 = phi ptr [ %4, %for.body.lr.ph.new ], [ %add.ptr16.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1913, !DIExpression(), !1917)
    #dbg_value(ptr %curr.044, !1914, !DIExpression(), !1917)
  %add.ptr16 = getelementptr inbounds i16, ptr %curr.044, i64 %idx.ext15, !dbg !1955
    #dbg_value(ptr %add.ptr16, !1914, !DIExpression(), !1917)
  %8 = load ptr, ptr %array2D, align 8, !dbg !1957
  %arrayidx17 = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv, !dbg !1958
  store ptr %add.ptr16, ptr %arrayidx17, align 8, !dbg !1959
    #dbg_value(i64 %indvars.iv, !1913, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1917)
  %add.ptr16.1 = getelementptr inbounds i16, ptr %add.ptr16, i64 %idx.ext15, !dbg !1955
    #dbg_value(ptr %add.ptr16.1, !1914, !DIExpression(), !1917)
  %9 = load ptr, ptr %array2D, align 8, !dbg !1957
  %10 = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv, !dbg !1958
  %arrayidx17.1 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !1958
  store ptr %add.ptr16.1, ptr %arrayidx17.1, align 8, !dbg !1959
    #dbg_value(i64 %indvars.iv, !1913, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1917)
  %add.ptr16.2 = getelementptr inbounds i16, ptr %add.ptr16.1, i64 %idx.ext15, !dbg !1955
    #dbg_value(ptr %add.ptr16.2, !1914, !DIExpression(), !1917)
  %11 = load ptr, ptr %array2D, align 8, !dbg !1957
  %12 = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv, !dbg !1958
  %arrayidx17.2 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !1958
  store ptr %add.ptr16.2, ptr %arrayidx17.2, align 8, !dbg !1959
    #dbg_value(i64 %indvars.iv, !1913, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1917)
  %add.ptr16.3 = getelementptr inbounds i16, ptr %add.ptr16.2, i64 %idx.ext15, !dbg !1955
    #dbg_value(ptr %add.ptr16.3, !1914, !DIExpression(), !1917)
  %13 = load ptr, ptr %array2D, align 8, !dbg !1957
  %14 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv, !dbg !1958
  %arrayidx17.3 = getelementptr inbounds i8, ptr %14, i64 24, !dbg !1958
  store ptr %add.ptr16.3, ptr %arrayidx17.3, align 8, !dbg !1959
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !1960
    #dbg_value(i64 %indvars.iv.next.3, !1913, !DIExpression(), !1917)
  %niter.next.3 = add i64 %niter, 4, !dbg !1952
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !1952
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !1952, !llvm.loop !1961

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %curr.044.unr = phi ptr [ %4, %for.body.lr.ph ], [ %add.ptr16.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !1952
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !1952

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %curr.044.epil = phi ptr [ %add.ptr16.epil, %for.body.epil ], [ %curr.044.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1913, !DIExpression(), !1917)
    #dbg_value(ptr %curr.044.epil, !1914, !DIExpression(), !1917)
  %add.ptr16.epil = getelementptr inbounds i16, ptr %curr.044.epil, i64 %idx.ext15, !dbg !1955
    #dbg_value(ptr %add.ptr16.epil, !1914, !DIExpression(), !1917)
  %15 = load ptr, ptr %array2D, align 8, !dbg !1957
  %arrayidx17.epil = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv.epil, !dbg !1958
  store ptr %add.ptr16.epil, ptr %arrayidx17.epil, align 8, !dbg !1959
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !1960
    #dbg_value(i64 %indvars.iv.next.epil, !1913, !DIExpression(), !1917)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !1952
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !1952
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !1952, !llvm.loop !1963

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end11
  %16 = load ptr, ptr %array2D, align 8, !dbg !1964
  %idxprom18 = sext i32 %iPadY to i64, !dbg !1965
  %arrayidx19 = getelementptr inbounds ptr, ptr %16, i64 %idxprom18, !dbg !1965
  store ptr %arrayidx19, ptr %array2D, align 8, !dbg !1966
  %mul22 = shl i32 %add2, 1, !dbg !1967
  %add23 = add i32 %mul22, 8, !dbg !1968
  %mul24 = mul i32 %add23, %add, !dbg !1969
  ret i32 %mul24, !dbg !1970
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dpel(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !1971 {
entry:
    #dbg_value(ptr %array3D, !1975, !DIExpression(), !1981)
    #dbg_value(i32 %dim0, !1976, !DIExpression(), !1981)
    #dbg_value(i32 %dim1, !1977, !DIExpression(), !1981)
    #dbg_value(i32 %dim2, !1978, !DIExpression(), !1981)
  %conv = sext i32 %dim0 to i64, !dbg !1982
  %mul = shl nsw i64 %conv, 3, !dbg !1983
    #dbg_value(i64 %mul, !1980, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !1981)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !1984
  store ptr %call, ptr %array3D, align 8, !dbg !1986
  %cmp = icmp eq ptr %call, null, !dbg !1987
  br i1 %cmp, label %if.then, label %if.end, !dbg !1988

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.37, !574, !DIExpression(), !1989)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.37) #9, !dbg !1991
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !1992
  %.pre = load ptr, ptr %array3D, align 8, !dbg !1993
  br label %if.end, !dbg !1994

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !1993
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !1995
  %call6 = tail call i32 @get_mem2Dpel(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !1996
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !1980, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !1981)
    #dbg_value(i32 1, !1979, !DIExpression(), !1981)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !1997
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !2000

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !1997
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2000
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2000
  %xtraiter = and i64 %1, 3, !dbg !2000
  %3 = icmp ult i64 %2, 3, !dbg !2000
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2000

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2000
  br label %for.body, !dbg !2000

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !1979, !DIExpression(), !1981)
  %4 = load ptr, ptr %array3D, align 8, !dbg !2001
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2002
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2002
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2002
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !2003
  store ptr %add.ptr, ptr %5, align 8, !dbg !2004
    #dbg_value(i64 %indvars.iv, !1979, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !1981)
  %7 = load ptr, ptr %array3D, align 8, !dbg !2001
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2002
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2002
  %10 = load ptr, ptr %8, align 8, !dbg !2002
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !2003
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2004
    #dbg_value(i64 %indvars.iv, !1979, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !1981)
  %11 = load ptr, ptr %array3D, align 8, !dbg !2001
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2002
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2002
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2002
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2002
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !2003
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2004
    #dbg_value(i64 %indvars.iv, !1979, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !1981)
  %15 = load ptr, ptr %array3D, align 8, !dbg !2001
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2002
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2002
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2002
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2002
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !2003
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2004
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2005
    #dbg_value(i64 %indvars.iv.next.3, !1979, !DIExpression(), !1981)
  %niter.next.3 = add i64 %niter, 4, !dbg !2000
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2000
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2000, !llvm.loop !2006

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2000
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2000

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !1979, !DIExpression(), !1981)
  %19 = load ptr, ptr %array3D, align 8, !dbg !2001
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2002
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2002
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2002
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !2003
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2004
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2005
    #dbg_value(i64 %indvars.iv.next.epil, !1979, !DIExpression(), !1981)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2000
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2000
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2000, !llvm.loop !2008

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !1982
    #dbg_value(i32 %conv1, !1980, !DIExpression(), !1981)
  %add = add nsw i32 %call6, %conv1, !dbg !2009
    #dbg_value(i32 %add, !1980, !DIExpression(), !1981)
  ret i32 %add, !dbg !2010
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3DpelWithPad(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2011 {
entry:
    #dbg_value(ptr %array3D, !2015, !DIExpression(), !2023)
    #dbg_value(i32 %dim0, !2016, !DIExpression(), !2023)
    #dbg_value(i32 %dim1, !2017, !DIExpression(), !2023)
    #dbg_value(i32 %dim2, !2018, !DIExpression(), !2023)
    #dbg_value(i32 %iPadY, !2019, !DIExpression(), !2023)
    #dbg_value(i32 %iPadX, !2020, !DIExpression(), !2023)
  %conv = sext i32 %dim0 to i64, !dbg !2024
  %mul = shl nsw i64 %conv, 3, !dbg !2025
    #dbg_value(i64 %mul, !2022, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2023)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2026
  store ptr %call, ptr %array3D, align 8, !dbg !2028
  %cmp = icmp eq ptr %call, null, !dbg !2029
  br i1 %cmp, label %if.then, label %if.end, !dbg !2030

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.38, !574, !DIExpression(), !2031)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.38) #9, !dbg !2033
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2034
  %.pre = load ptr, ptr %array3D, align 8, !dbg !2035
  br label %if.end, !dbg !2036

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2035
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2037
  %sub = shl i32 %dim0, 1, !dbg !2038
  %mul6 = add i32 %sub, -2, !dbg !2038
  %mul7 = mul nsw i32 %mul6, %iPadY, !dbg !2039
  %add = add nsw i32 %mul7, %mul5, !dbg !2040
  %call8 = tail call i32 @get_mem2DpelWithPad(ptr noundef %0, i32 noundef %add, i32 noundef %dim2, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2041
    #dbg_value(!DIArgList(i64 %mul, i32 %call8), !2022, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2023)
    #dbg_value(i32 1, !2021, !DIExpression(), !2023)
  %cmp1031 = icmp sgt i32 %dim0, 1, !dbg !2042
  br i1 %cmp1031, label %for.body.lr.ph, label %for.end, !dbg !2045

for.body.lr.ph:                                   ; preds = %if.end
  %mul13 = shl nsw i32 %iPadY, 1
  %add14 = add nsw i32 %mul13, %dim1
  %idx.ext = sext i32 %add14 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2042
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2045
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2045
  %xtraiter = and i64 %1, 3, !dbg !2045
  %3 = icmp ult i64 %2, 3, !dbg !2045
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2045

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2045
  br label %for.body, !dbg !2045

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2021, !DIExpression(), !2023)
  %4 = load ptr, ptr %array3D, align 8, !dbg !2046
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2047
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2047
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2047
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !2048
  store ptr %add.ptr, ptr %5, align 8, !dbg !2049
    #dbg_value(i64 %indvars.iv, !2021, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2023)
  %7 = load ptr, ptr %array3D, align 8, !dbg !2046
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2047
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2047
  %10 = load ptr, ptr %8, align 8, !dbg !2047
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !2048
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2049
    #dbg_value(i64 %indvars.iv, !2021, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2023)
  %11 = load ptr, ptr %array3D, align 8, !dbg !2046
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2047
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2047
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2047
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2047
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !2048
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2049
    #dbg_value(i64 %indvars.iv, !2021, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2023)
  %15 = load ptr, ptr %array3D, align 8, !dbg !2046
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2047
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2047
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2047
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2047
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !2048
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2049
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2050
    #dbg_value(i64 %indvars.iv.next.3, !2021, !DIExpression(), !2023)
  %niter.next.3 = add i64 %niter, 4, !dbg !2045
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2045
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2045, !llvm.loop !2051

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2045
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2045

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2021, !DIExpression(), !2023)
  %19 = load ptr, ptr %array3D, align 8, !dbg !2046
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2047
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2047
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2047
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !2048
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2049
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2050
    #dbg_value(i64 %indvars.iv.next.epil, !2021, !DIExpression(), !2023)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2045
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2045
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2045, !llvm.loop !2053

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !2024
    #dbg_value(i32 %conv1, !2022, !DIExpression(), !2023)
  %add9 = add nsw i32 %call8, %conv1, !dbg !2054
    #dbg_value(i32 %add9, !2022, !DIExpression(), !2023)
  ret i32 %add9, !dbg !2055
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3DpelWithPadSeparately(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2056 {
entry:
    #dbg_value(ptr %array3D, !2058, !DIExpression(), !2066)
    #dbg_value(i32 %dim0, !2059, !DIExpression(), !2066)
    #dbg_value(i32 %dim1, !2060, !DIExpression(), !2066)
    #dbg_value(i32 %dim2, !2061, !DIExpression(), !2066)
    #dbg_value(i32 %iPadY, !2062, !DIExpression(), !2066)
    #dbg_value(i32 %iPadX, !2063, !DIExpression(), !2066)
  %conv = sext i32 %dim0 to i64, !dbg !2067
  %mul = shl nsw i64 %conv, 3, !dbg !2068
  %conv1 = trunc i64 %mul to i32, !dbg !2067
    #dbg_value(i32 %conv1, !2065, !DIExpression(), !2066)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2069
  store ptr %call, ptr %array3D, align 8, !dbg !2071
  %cmp = icmp eq ptr %call, null, !dbg !2072
  br i1 %cmp, label %if.then, label %if.end, !dbg !2073

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.39, !574, !DIExpression(), !2074)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.39) #9, !dbg !2076
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2077
  br label %if.end, !dbg !2078

if.end:                                           ; preds = %if.then, %entry
    #dbg_value(i32 0, !2064, !DIExpression(), !2066)
    #dbg_value(i32 %conv1, !2065, !DIExpression(), !2066)
  %cmp514 = icmp sgt i32 %dim0, 0, !dbg !2079
  br i1 %cmp514, label %for.body.preheader, label %for.end, !dbg !2082

for.body.preheader:                               ; preds = %if.end
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2079
  br label %for.body, !dbg !2082

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %mem_size.016 = phi i32 [ %conv1, %for.body.preheader ], [ %add, %for.body ]
    #dbg_value(i32 %mem_size.016, !2065, !DIExpression(), !2066)
    #dbg_value(i64 %indvars.iv, !2064, !DIExpression(), !2066)
  %0 = load ptr, ptr %array3D, align 8, !dbg !2083
  %add.ptr = getelementptr inbounds ptr, ptr %0, i64 %indvars.iv, !dbg !2084
  %call7 = tail call i32 @get_mem2DpelWithPad(ptr noundef %add.ptr, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2085
  %add = add nsw i32 %call7, %mem_size.016, !dbg !2086
    #dbg_value(i32 %add, !2065, !DIExpression(), !2066)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2087
    #dbg_value(i64 %indvars.iv.next, !2064, !DIExpression(), !2066)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !2079
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !2082, !llvm.loop !2088

for.end:                                          ; preds = %for.body, %if.end
  %mem_size.0.lcssa = phi i32 [ %conv1, %if.end ], [ %add, %for.body ], !dbg !2066
  ret i32 %mem_size.0.lcssa, !dbg !2090
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dpel(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !2091 {
entry:
    #dbg_value(ptr %array4D, !2095, !DIExpression(), !2102)
    #dbg_value(i32 %dim0, !2096, !DIExpression(), !2102)
    #dbg_value(i32 %dim1, !2097, !DIExpression(), !2102)
    #dbg_value(i32 %dim2, !2098, !DIExpression(), !2102)
    #dbg_value(i32 %dim3, !2099, !DIExpression(), !2102)
  %conv = sext i32 %dim0 to i64, !dbg !2103
  %mul = shl nsw i64 %conv, 3, !dbg !2104
    #dbg_value(i64 %mul, !2101, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2102)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2105
  store ptr %call, ptr %array4D, align 8, !dbg !2107
  %cmp = icmp eq ptr %call, null, !dbg !2108
  br i1 %cmp, label %if.then, label %if.end, !dbg !2109

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.22, !574, !DIExpression(), !2110)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.22) #9, !dbg !2112
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2113
  %.pre = load ptr, ptr %array4D, align 8, !dbg !2114
  br label %if.end, !dbg !2115

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2114
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2116
    #dbg_value(ptr %0, !1975, !DIExpression(), !2117)
    #dbg_value(i32 %mul5, !1976, !DIExpression(), !2117)
    #dbg_value(i32 %dim2, !1977, !DIExpression(), !2117)
    #dbg_value(i32 %dim3, !1978, !DIExpression(), !2117)
  %conv.i = sext i32 %mul5 to i64, !dbg !2119
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !2120
    #dbg_value(i64 %mul.i, !1980, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2117)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !2121
  store ptr %call.i22, ptr %0, align 8, !dbg !2122
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !2123
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !2124

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.37, !574, !DIExpression(), !2125)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.37) #9, !dbg !2127
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2128
  %.pre.i = load ptr, ptr %0, align 8, !dbg !2129
  br label %if.end.i, !dbg !2130

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !2129
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !2131
  %call6.i = tail call i32 @get_mem2Dpel(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !2132
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !1980, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2117)
    #dbg_value(i32 1, !1979, !DIExpression(), !2117)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !2133
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dpel.exit, !dbg !2134

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !2133
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !2134
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !2134
  %xtraiter = and i64 %2, 3, !dbg !2134
  %4 = icmp ult i64 %3, 3, !dbg !2134
  br i1 %4, label %get_mem3Dpel.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !2134

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !2134
  br label %for.body.i, !dbg !2134

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !1979, !DIExpression(), !2117)
  %5 = load ptr, ptr %0, align 8, !dbg !2135
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !2136
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !2136
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !2136
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !2137
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !2138
    #dbg_value(i64 %indvars.iv.i, !1979, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2117)
  %8 = load ptr, ptr %0, align 8, !dbg !2135
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !2136
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !2136
  %11 = load ptr, ptr %9, align 8, !dbg !2136
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !2137
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !2138
    #dbg_value(i64 %indvars.iv.i, !1979, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2117)
  %12 = load ptr, ptr %0, align 8, !dbg !2135
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !2136
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !2136
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !2136
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !2136
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !2137
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !2138
    #dbg_value(i64 %indvars.iv.i, !1979, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2117)
  %16 = load ptr, ptr %0, align 8, !dbg !2135
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !2136
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !2136
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !2136
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !2136
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !2137
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !2138
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !2139
    #dbg_value(i64 %indvars.iv.next.i.3, !1979, !DIExpression(), !2117)
  %niter.next.3 = add i64 %niter, 4, !dbg !2134
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2134
  br i1 %niter.ncmp.3, label %get_mem3Dpel.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !2134, !llvm.loop !2140

get_mem3Dpel.exit.loopexit.unr-lcssa:             ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2134
  br i1 %lcmp.mod.not, label %get_mem3Dpel.exit, label %for.body.i.epil, !dbg !2134

for.body.i.epil:                                  ; preds = %get_mem3Dpel.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dpel.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dpel.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !1979, !DIExpression(), !2117)
  %20 = load ptr, ptr %0, align 8, !dbg !2135
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !2136
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !2136
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !2136
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !2137
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !2138
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !2139
    #dbg_value(i64 %indvars.iv.next.i.epil, !1979, !DIExpression(), !2117)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2134
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2134
  br i1 %epil.iter.cmp.not, label %get_mem3Dpel.exit, label %for.body.i.epil, !dbg !2134, !llvm.loop !2142

get_mem3Dpel.exit:                                ; preds = %get_mem3Dpel.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !1980, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !2117)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !2101, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !2102)
    #dbg_value(i32 1, !2100, !DIExpression(), !2102)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !2143
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !2146

for.body.lr.ph:                                   ; preds = %get_mem3Dpel.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2143
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !2146
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !2146
  %xtraiter26 = and i64 %23, 3, !dbg !2146
  %25 = icmp ult i64 %24, 3, !dbg !2146
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2146

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !2146
  br label %for.body, !dbg !2146

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2100, !DIExpression(), !2102)
  %26 = load ptr, ptr %array4D, align 8, !dbg !2147
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !2148
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !2148
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !2148
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !2149
  store ptr %add.ptr, ptr %27, align 8, !dbg !2150
    #dbg_value(i64 %indvars.iv, !2100, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2102)
  %29 = load ptr, ptr %array4D, align 8, !dbg !2147
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !2148
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !2148
  %32 = load ptr, ptr %30, align 8, !dbg !2148
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !2149
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !2150
    #dbg_value(i64 %indvars.iv, !2100, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2102)
  %33 = load ptr, ptr %array4D, align 8, !dbg !2147
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !2148
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !2148
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !2148
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !2148
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !2149
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !2150
    #dbg_value(i64 %indvars.iv, !2100, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2102)
  %37 = load ptr, ptr %array4D, align 8, !dbg !2147
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !2148
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !2148
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !2148
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !2148
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !2149
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !2150
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2151
    #dbg_value(i64 %indvars.iv.next.3, !2100, !DIExpression(), !2102)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !2146
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !2146
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2146, !llvm.loop !2152

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !2146
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !2146

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2100, !DIExpression(), !2102)
  %41 = load ptr, ptr %array4D, align 8, !dbg !2147
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !2148
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !2148
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2148
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !2149
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !2150
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2151
    #dbg_value(i64 %indvars.iv.next.epil, !2100, !DIExpression(), !2102)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !2146
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !2146
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !2146, !llvm.loop !2154

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dpel.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !2119
    #dbg_value(!DIArgList(i64 poison, i32 poison), !2101, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2102)
    #dbg_value(i32 poison, !1980, !DIExpression(), !2117)
  %conv1 = trunc i64 %mul to i32, !dbg !2103
    #dbg_value(i32 %conv1, !2101, !DIExpression(), !2102)
  %add.i = add i32 %conv1.i, %conv1, !dbg !2155
  %add = add i32 %add.i, %call6.i, !dbg !2156
    #dbg_value(i32 %add, !2101, !DIExpression(), !2102)
  ret i32 %add, !dbg !2157
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem4DpelWithPad(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2158 {
entry:
    #dbg_value(ptr %array4D, !2162, !DIExpression(), !2171)
    #dbg_value(i32 %dim0, !2163, !DIExpression(), !2171)
    #dbg_value(i32 %dim1, !2164, !DIExpression(), !2171)
    #dbg_value(i32 %dim2, !2165, !DIExpression(), !2171)
    #dbg_value(i32 %dim3, !2166, !DIExpression(), !2171)
    #dbg_value(i32 %iPadY, !2167, !DIExpression(), !2171)
    #dbg_value(i32 %iPadX, !2168, !DIExpression(), !2171)
  %conv = sext i32 %dim0 to i64, !dbg !2172
  %mul = shl nsw i64 %conv, 3, !dbg !2173
    #dbg_value(i64 %mul, !2170, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2171)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2174
  store ptr %call, ptr %array4D, align 8, !dbg !2176
  %cmp = icmp eq ptr %call, null, !dbg !2177
  br i1 %cmp, label %if.then, label %if.end, !dbg !2178

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.40, !574, !DIExpression(), !2179)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.40) #9, !dbg !2181
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2182
  %.pre = load ptr, ptr %array4D, align 8, !dbg !2183
  br label %if.end, !dbg !2184

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2183
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2185
    #dbg_value(ptr %0, !2015, !DIExpression(), !2186)
    #dbg_value(i32 %mul5, !2016, !DIExpression(), !2186)
    #dbg_value(i32 %dim2, !2017, !DIExpression(), !2186)
    #dbg_value(i32 %dim3, !2018, !DIExpression(), !2186)
    #dbg_value(i32 %iPadY, !2019, !DIExpression(), !2186)
    #dbg_value(i32 %iPadX, !2020, !DIExpression(), !2186)
  %conv.i = sext i32 %mul5 to i64, !dbg !2188
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !2189
    #dbg_value(i64 %mul.i, !2022, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2186)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !2190
  store ptr %call.i22, ptr %0, align 8, !dbg !2191
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !2192
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !2193

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.38, !574, !DIExpression(), !2194)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.38) #9, !dbg !2196
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2197
  %.pre.i = load ptr, ptr %0, align 8, !dbg !2198
  br label %if.end.i, !dbg !2199

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !2198
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !2200
  %sub.i = shl i32 %mul5, 1, !dbg !2201
  %mul6.i = add i32 %sub.i, -2, !dbg !2201
  %mul7.i = mul nsw i32 %mul6.i, %iPadY, !dbg !2202
  %add.i = add nsw i32 %mul7.i, %mul5.i, !dbg !2203
  %call8.i = tail call i32 @get_mem2DpelWithPad(ptr noundef %1, i32 noundef %add.i, i32 noundef %dim3, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2204
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call8.i), !2022, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2186)
    #dbg_value(i32 1, !2021, !DIExpression(), !2186)
  %cmp1031.i = icmp sgt i32 %mul5, 1, !dbg !2205
  br i1 %cmp1031.i, label %for.body.lr.ph.i, label %get_mem3DpelWithPad.exit, !dbg !2206

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %mul13.i = shl nsw i32 %iPadY, 1
  %add14.i = add nsw i32 %mul13.i, %dim2
  %idx.ext.i = sext i32 %add14.i to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !2205
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !2206
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !2206
  %xtraiter = and i64 %2, 3, !dbg !2206
  %4 = icmp ult i64 %3, 3, !dbg !2206
  br i1 %4, label %get_mem3DpelWithPad.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !2206

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !2206
  br label %for.body.i, !dbg !2206

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !2021, !DIExpression(), !2186)
  %5 = load ptr, ptr %0, align 8, !dbg !2207
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !2208
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !2208
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !2208
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !2209
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !2210
    #dbg_value(i64 %indvars.iv.i, !2021, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2186)
  %8 = load ptr, ptr %0, align 8, !dbg !2207
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !2208
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !2208
  %11 = load ptr, ptr %9, align 8, !dbg !2208
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !2209
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !2210
    #dbg_value(i64 %indvars.iv.i, !2021, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2186)
  %12 = load ptr, ptr %0, align 8, !dbg !2207
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !2208
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !2208
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !2208
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !2208
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !2209
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !2210
    #dbg_value(i64 %indvars.iv.i, !2021, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2186)
  %16 = load ptr, ptr %0, align 8, !dbg !2207
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !2208
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !2208
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !2208
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !2208
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !2209
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !2210
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !2211
    #dbg_value(i64 %indvars.iv.next.i.3, !2021, !DIExpression(), !2186)
  %niter.next.3 = add i64 %niter, 4, !dbg !2206
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2206
  br i1 %niter.ncmp.3, label %get_mem3DpelWithPad.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !2206, !llvm.loop !2212

get_mem3DpelWithPad.exit.loopexit.unr-lcssa:      ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2206
  br i1 %lcmp.mod.not, label %get_mem3DpelWithPad.exit, label %for.body.i.epil, !dbg !2206

for.body.i.epil:                                  ; preds = %get_mem3DpelWithPad.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3DpelWithPad.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3DpelWithPad.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !2021, !DIExpression(), !2186)
  %20 = load ptr, ptr %0, align 8, !dbg !2207
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !2208
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !2208
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !2208
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !2209
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !2210
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !2211
    #dbg_value(i64 %indvars.iv.next.i.epil, !2021, !DIExpression(), !2186)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2206
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2206
  br i1 %epil.iter.cmp.not, label %get_mem3DpelWithPad.exit, label %for.body.i.epil, !dbg !2206, !llvm.loop !2214

get_mem3DpelWithPad.exit:                         ; preds = %get_mem3DpelWithPad.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call8.i, i64 %mul.i), !2022, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !2186)
    #dbg_value(!DIArgList(i64 %mul, i32 %call8.i, i64 %mul.i), !2170, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !2171)
    #dbg_value(i32 1, !2169, !DIExpression(), !2171)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !2215
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !2218

for.body.lr.ph:                                   ; preds = %get_mem3DpelWithPad.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2215
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !2218
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !2218
  %xtraiter26 = and i64 %23, 3, !dbg !2218
  %25 = icmp ult i64 %24, 3, !dbg !2218
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2218

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !2218
  br label %for.body, !dbg !2218

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2169, !DIExpression(), !2171)
  %26 = load ptr, ptr %array4D, align 8, !dbg !2219
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !2220
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !2220
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !2220
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !2221
  store ptr %add.ptr, ptr %27, align 8, !dbg !2222
    #dbg_value(i64 %indvars.iv, !2169, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2171)
  %29 = load ptr, ptr %array4D, align 8, !dbg !2219
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !2220
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !2220
  %32 = load ptr, ptr %30, align 8, !dbg !2220
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !2221
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !2222
    #dbg_value(i64 %indvars.iv, !2169, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2171)
  %33 = load ptr, ptr %array4D, align 8, !dbg !2219
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !2220
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !2220
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !2220
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !2220
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !2221
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !2222
    #dbg_value(i64 %indvars.iv, !2169, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2171)
  %37 = load ptr, ptr %array4D, align 8, !dbg !2219
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !2220
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !2220
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !2220
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !2220
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !2221
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !2222
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2223
    #dbg_value(i64 %indvars.iv.next.3, !2169, !DIExpression(), !2171)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !2218
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !2218
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2218, !llvm.loop !2224

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !2218
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !2218

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2169, !DIExpression(), !2171)
  %41 = load ptr, ptr %array4D, align 8, !dbg !2219
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !2220
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !2220
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2220
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !2221
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !2222
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2223
    #dbg_value(i64 %indvars.iv.next.epil, !2169, !DIExpression(), !2171)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !2218
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !2218
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !2218, !llvm.loop !2226

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3DpelWithPad.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !2188
    #dbg_value(!DIArgList(i64 poison, i32 poison), !2170, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2171)
    #dbg_value(i32 poison, !2022, !DIExpression(), !2186)
  %conv1 = trunc i64 %mul to i32, !dbg !2172
    #dbg_value(i32 %conv1, !2170, !DIExpression(), !2171)
  %add9.i = add i32 %conv1.i, %conv1, !dbg !2227
  %add = add i32 %add9.i, %call8.i, !dbg !2228
    #dbg_value(i32 %add, !2170, !DIExpression(), !2171)
  ret i32 %add, !dbg !2229
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem4DpelWithPadSeparately(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2230 {
entry:
    #dbg_value(ptr %array4D, !2232, !DIExpression(), !2241)
    #dbg_value(i32 %dim0, !2233, !DIExpression(), !2241)
    #dbg_value(i32 %dim1, !2234, !DIExpression(), !2241)
    #dbg_value(i32 %dim2, !2235, !DIExpression(), !2241)
    #dbg_value(i32 %dim3, !2236, !DIExpression(), !2241)
    #dbg_value(i32 %iPadY, !2237, !DIExpression(), !2241)
    #dbg_value(i32 %iPadX, !2238, !DIExpression(), !2241)
  %conv = sext i32 %dim0 to i64, !dbg !2242
  %mul = shl nsw i64 %conv, 3, !dbg !2243
    #dbg_value(i64 %mul, !2240, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2241)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2244
  store ptr %call, ptr %array4D, align 8, !dbg !2246
  %cmp = icmp eq ptr %call, null, !dbg !2247
  br i1 %cmp, label %if.then, label %if.end, !dbg !2248

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.41, !574, !DIExpression(), !2249)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.41) #9, !dbg !2251
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2252
  %.pre = load ptr, ptr %array4D, align 8, !dbg !2253
  br label %if.end, !dbg !2254

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2253
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2255
    #dbg_value(ptr %0, !2058, !DIExpression(), !2256)
    #dbg_value(i32 %mul5, !2059, !DIExpression(), !2256)
    #dbg_value(i32 %dim2, !2060, !DIExpression(), !2256)
    #dbg_value(i32 %dim3, !2061, !DIExpression(), !2256)
    #dbg_value(i32 %iPadY, !2062, !DIExpression(), !2256)
    #dbg_value(i32 %iPadX, !2063, !DIExpression(), !2256)
  %conv.i = sext i32 %mul5 to i64, !dbg !2258
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !2259
  %conv1.i = trunc i64 %mul.i to i32, !dbg !2258
    #dbg_value(i32 %conv1.i, !2065, !DIExpression(), !2256)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !2260
  store ptr %call.i22, ptr %0, align 8, !dbg !2261
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !2262
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !2263

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.39, !574, !DIExpression(), !2264)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.39) #9, !dbg !2266
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2267
  br label %if.end.i, !dbg !2268

if.end.i:                                         ; preds = %if.then.i, %if.end
    #dbg_value(i32 0, !2064, !DIExpression(), !2256)
    #dbg_value(i32 %conv1.i, !2065, !DIExpression(), !2256)
  %cmp514.i = icmp sgt i32 %mul5, 0, !dbg !2269
  br i1 %cmp514.i, label %for.body.preheader.i, label %get_mem3DpelWithPadSeparately.exit, !dbg !2270

for.body.preheader.i:                             ; preds = %if.end.i
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !2269
  br label %for.body.i, !dbg !2270

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next.i, %for.body.i ]
  %mem_size.016.i = phi i32 [ %conv1.i, %for.body.preheader.i ], [ %add.i, %for.body.i ]
    #dbg_value(i32 %mem_size.016.i, !2065, !DIExpression(), !2256)
    #dbg_value(i64 %indvars.iv.i, !2064, !DIExpression(), !2256)
  %1 = load ptr, ptr %0, align 8, !dbg !2271
  %add.ptr.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.i, !dbg !2272
  %call7.i = tail call i32 @get_mem2DpelWithPad(ptr noundef %add.ptr.i, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2273
  %add.i = add nsw i32 %call7.i, %mem_size.016.i, !dbg !2274
    #dbg_value(i32 %add.i, !2065, !DIExpression(), !2256)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !2275
    #dbg_value(i64 %indvars.iv.next.i, !2064, !DIExpression(), !2256)
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i, !dbg !2269
  br i1 %exitcond.not.i, label %get_mem3DpelWithPadSeparately.exit, label %for.body.i, !dbg !2270, !llvm.loop !2276

get_mem3DpelWithPadSeparately.exit:               ; preds = %for.body.i, %if.end.i
  %mem_size.0.lcssa.i = phi i32 [ %conv1.i, %if.end.i ], [ %add.i, %for.body.i ], !dbg !2256
    #dbg_value(!DIArgList(i64 %mul, i32 %mem_size.0.lcssa.i), !2240, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2241)
    #dbg_value(i32 1, !2239, !DIExpression(), !2241)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !2278
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !2281

for.body.lr.ph:                                   ; preds = %get_mem3DpelWithPadSeparately.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2278
  %2 = add nsw i64 %wide.trip.count, -1, !dbg !2281
  %3 = add nsw i64 %wide.trip.count, -2, !dbg !2281
  %xtraiter = and i64 %2, 3, !dbg !2281
  %4 = icmp ult i64 %3, 3, !dbg !2281
  br i1 %4, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2281

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %2, -4, !dbg !2281
  br label %for.body, !dbg !2281

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2239, !DIExpression(), !2241)
  %5 = load ptr, ptr %array4D, align 8, !dbg !2282
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv, !dbg !2283
  %arrayidx = getelementptr i8, ptr %6, i64 -8, !dbg !2283
  %7 = load ptr, ptr %arrayidx, align 8, !dbg !2283
  %add.ptr = getelementptr inbounds ptr, ptr %7, i64 %idx.ext, !dbg !2284
  store ptr %add.ptr, ptr %6, align 8, !dbg !2285
    #dbg_value(i64 %indvars.iv, !2239, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2241)
  %8 = load ptr, ptr %array4D, align 8, !dbg !2282
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv, !dbg !2283
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !2283
  %11 = load ptr, ptr %9, align 8, !dbg !2283
  %add.ptr.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext, !dbg !2284
  store ptr %add.ptr.1, ptr %10, align 8, !dbg !2285
    #dbg_value(i64 %indvars.iv, !2239, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2241)
  %12 = load ptr, ptr %array4D, align 8, !dbg !2282
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv, !dbg !2283
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !2283
  %arrayidx.2 = getelementptr i8, ptr %13, i64 8, !dbg !2283
  %15 = load ptr, ptr %arrayidx.2, align 8, !dbg !2283
  %add.ptr.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext, !dbg !2284
  store ptr %add.ptr.2, ptr %14, align 8, !dbg !2285
    #dbg_value(i64 %indvars.iv, !2239, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2241)
  %16 = load ptr, ptr %array4D, align 8, !dbg !2282
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv, !dbg !2283
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !2283
  %arrayidx.3 = getelementptr i8, ptr %17, i64 16, !dbg !2283
  %19 = load ptr, ptr %arrayidx.3, align 8, !dbg !2283
  %add.ptr.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext, !dbg !2284
  store ptr %add.ptr.3, ptr %18, align 8, !dbg !2285
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2286
    #dbg_value(i64 %indvars.iv.next.3, !2239, !DIExpression(), !2241)
  %niter.next.3 = add i64 %niter, 4, !dbg !2281
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2281
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2281, !llvm.loop !2287

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2281
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2281

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2239, !DIExpression(), !2241)
  %20 = load ptr, ptr %array4D, align 8, !dbg !2282
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.epil, !dbg !2283
  %arrayidx.epil = getelementptr i8, ptr %21, i64 -8, !dbg !2283
  %22 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2283
  %add.ptr.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext, !dbg !2284
  store ptr %add.ptr.epil, ptr %21, align 8, !dbg !2285
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2286
    #dbg_value(i64 %indvars.iv.next.epil, !2239, !DIExpression(), !2241)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2281
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2281
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2281, !llvm.loop !2289

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3DpelWithPadSeparately.exit
  %conv1 = trunc i64 %mul to i32, !dbg !2242
    #dbg_value(i32 %conv1, !2240, !DIExpression(), !2241)
  %add = add nsw i32 %mem_size.0.lcssa.i, %conv1, !dbg !2290
    #dbg_value(i32 %add, !2240, !DIExpression(), !2241)
  ret i32 %add, !dbg !2291
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5Dpel(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4) local_unnamed_addr #0 !dbg !2292 {
entry:
    #dbg_value(ptr %array5D, !2297, !DIExpression(), !2305)
    #dbg_value(i32 %dim0, !2298, !DIExpression(), !2305)
    #dbg_value(i32 %dim1, !2299, !DIExpression(), !2305)
    #dbg_value(i32 %dim2, !2300, !DIExpression(), !2305)
    #dbg_value(i32 %dim3, !2301, !DIExpression(), !2305)
    #dbg_value(i32 %dim4, !2302, !DIExpression(), !2305)
  %conv = sext i32 %dim0 to i64, !dbg !2306
  %mul = shl nsw i64 %conv, 3, !dbg !2307
    #dbg_value(i64 %mul, !2304, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2305)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2308
  store ptr %call, ptr %array5D, align 8, !dbg !2310
  %cmp = icmp eq ptr %call, null, !dbg !2311
  br i1 %cmp, label %if.then, label %if.end, !dbg !2312

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.23, !574, !DIExpression(), !2313)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.23) #9, !dbg !2315
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2316
  %.pre = load ptr, ptr %array5D, align 8, !dbg !2317
  br label %if.end, !dbg !2318

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2317
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2319
  %call6 = tail call i32 @get_mem4Dpel(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4), !dbg !2320
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !2304, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2305)
    #dbg_value(i32 1, !2303, !DIExpression(), !2305)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !2321
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !2324

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2321
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2324
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2324
  %xtraiter = and i64 %1, 3, !dbg !2324
  %3 = icmp ult i64 %2, 3, !dbg !2324
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2324

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2324
  br label %for.body, !dbg !2324

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2303, !DIExpression(), !2305)
  %4 = load ptr, ptr %array5D, align 8, !dbg !2325
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2326
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2326
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2326
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !2327
  store ptr %add.ptr, ptr %5, align 8, !dbg !2328
    #dbg_value(i64 %indvars.iv, !2303, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2305)
  %7 = load ptr, ptr %array5D, align 8, !dbg !2325
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2326
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2326
  %10 = load ptr, ptr %8, align 8, !dbg !2326
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !2327
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2328
    #dbg_value(i64 %indvars.iv, !2303, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2305)
  %11 = load ptr, ptr %array5D, align 8, !dbg !2325
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2326
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2326
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2326
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2326
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !2327
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2328
    #dbg_value(i64 %indvars.iv, !2303, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2305)
  %15 = load ptr, ptr %array5D, align 8, !dbg !2325
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2326
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2326
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2326
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2326
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !2327
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2328
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2329
    #dbg_value(i64 %indvars.iv.next.3, !2303, !DIExpression(), !2305)
  %niter.next.3 = add i64 %niter, 4, !dbg !2324
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2324
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2324, !llvm.loop !2330

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2324
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2324

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2303, !DIExpression(), !2305)
  %19 = load ptr, ptr %array5D, align 8, !dbg !2325
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2326
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2326
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2326
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !2327
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2328
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2329
    #dbg_value(i64 %indvars.iv.next.epil, !2303, !DIExpression(), !2305)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2324
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2324
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2324, !llvm.loop !2332

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !2306
    #dbg_value(i32 %conv1, !2304, !DIExpression(), !2305)
  %add = add nsw i32 %call6, %conv1, !dbg !2333
    #dbg_value(i32 %add, !2304, !DIExpression(), !2305)
  ret i32 %add, !dbg !2334
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5DpelWithPad(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2335 {
entry:
    #dbg_value(ptr %array5D, !2339, !DIExpression(), !2349)
    #dbg_value(i32 %dim0, !2340, !DIExpression(), !2349)
    #dbg_value(i32 %dim1, !2341, !DIExpression(), !2349)
    #dbg_value(i32 %dim2, !2342, !DIExpression(), !2349)
    #dbg_value(i32 %dim3, !2343, !DIExpression(), !2349)
    #dbg_value(i32 %dim4, !2344, !DIExpression(), !2349)
    #dbg_value(i32 %iPadY, !2345, !DIExpression(), !2349)
    #dbg_value(i32 %iPadX, !2346, !DIExpression(), !2349)
  %conv = sext i32 %dim0 to i64, !dbg !2350
  %mul = shl nsw i64 %conv, 3, !dbg !2351
    #dbg_value(i64 %mul, !2348, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2349)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2352
  store ptr %call, ptr %array5D, align 8, !dbg !2354
  %cmp = icmp eq ptr %call, null, !dbg !2355
  br i1 %cmp, label %if.then, label %if.end, !dbg !2356

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.42, !574, !DIExpression(), !2357)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.42) #9, !dbg !2359
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2360
  %.pre = load ptr, ptr %array5D, align 8, !dbg !2361
  br label %if.end, !dbg !2362

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2361
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2363
  %call6 = tail call i32 @get_mem4DpelWithPad(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2364
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !2348, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2349)
    #dbg_value(i32 1, !2347, !DIExpression(), !2349)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !2365
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !2368

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2365
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2368
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2368
  %xtraiter = and i64 %1, 3, !dbg !2368
  %3 = icmp ult i64 %2, 3, !dbg !2368
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2368

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2368
  br label %for.body, !dbg !2368

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2347, !DIExpression(), !2349)
  %4 = load ptr, ptr %array5D, align 8, !dbg !2369
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2370
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2370
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2370
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !2371
  store ptr %add.ptr, ptr %5, align 8, !dbg !2372
    #dbg_value(i64 %indvars.iv, !2347, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2349)
  %7 = load ptr, ptr %array5D, align 8, !dbg !2369
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2370
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2370
  %10 = load ptr, ptr %8, align 8, !dbg !2370
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !2371
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2372
    #dbg_value(i64 %indvars.iv, !2347, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2349)
  %11 = load ptr, ptr %array5D, align 8, !dbg !2369
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2370
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2370
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2370
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2370
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !2371
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2372
    #dbg_value(i64 %indvars.iv, !2347, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2349)
  %15 = load ptr, ptr %array5D, align 8, !dbg !2369
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2370
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2370
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2370
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2370
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !2371
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2372
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2373
    #dbg_value(i64 %indvars.iv.next.3, !2347, !DIExpression(), !2349)
  %niter.next.3 = add i64 %niter, 4, !dbg !2368
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2368
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2368, !llvm.loop !2374

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2368
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2368

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2347, !DIExpression(), !2349)
  %19 = load ptr, ptr %array5D, align 8, !dbg !2369
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2370
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2370
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2370
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !2371
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2372
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2373
    #dbg_value(i64 %indvars.iv.next.epil, !2347, !DIExpression(), !2349)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2368
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2368
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2368, !llvm.loop !2376

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !2350
    #dbg_value(i32 %conv1, !2348, !DIExpression(), !2349)
  %add = add nsw i32 %call6, %conv1, !dbg !2377
    #dbg_value(i32 %add, !2348, !DIExpression(), !2349)
  ret i32 %add, !dbg !2378
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5DpelWithPadSeparately(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2379 {
entry:
    #dbg_value(ptr %array5D, !2381, !DIExpression(), !2391)
    #dbg_value(i32 %dim0, !2382, !DIExpression(), !2391)
    #dbg_value(i32 %dim1, !2383, !DIExpression(), !2391)
    #dbg_value(i32 %dim2, !2384, !DIExpression(), !2391)
    #dbg_value(i32 %dim3, !2385, !DIExpression(), !2391)
    #dbg_value(i32 %dim4, !2386, !DIExpression(), !2391)
    #dbg_value(i32 %iPadY, !2387, !DIExpression(), !2391)
    #dbg_value(i32 %iPadX, !2388, !DIExpression(), !2391)
  %conv = sext i32 %dim0 to i64, !dbg !2392
  %mul = shl nsw i64 %conv, 3, !dbg !2393
    #dbg_value(i64 %mul, !2390, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !2391)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2394
  store ptr %call, ptr %array5D, align 8, !dbg !2396
  %cmp = icmp eq ptr %call, null, !dbg !2397
  br i1 %cmp, label %if.then, label %if.end, !dbg !2398

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.43, !574, !DIExpression(), !2399)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.43) #9, !dbg !2401
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2402
  %.pre = load ptr, ptr %array5D, align 8, !dbg !2403
  br label %if.end, !dbg !2404

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2403
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !2405
  %call6 = tail call i32 @get_mem4DpelWithPadSeparately(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2406
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !2390, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !2391)
    #dbg_value(i32 1, !2389, !DIExpression(), !2391)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !2407
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !2410

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2407
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2410
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2410
  %xtraiter = and i64 %1, 3, !dbg !2410
  %3 = icmp ult i64 %2, 3, !dbg !2410
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2410

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2410
  br label %for.body, !dbg !2410

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2389, !DIExpression(), !2391)
  %4 = load ptr, ptr %array5D, align 8, !dbg !2411
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2412
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2412
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2412
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !2413
  store ptr %add.ptr, ptr %5, align 8, !dbg !2414
    #dbg_value(i64 %indvars.iv, !2389, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2391)
  %7 = load ptr, ptr %array5D, align 8, !dbg !2411
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2412
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2412
  %10 = load ptr, ptr %8, align 8, !dbg !2412
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !2413
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2414
    #dbg_value(i64 %indvars.iv, !2389, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2391)
  %11 = load ptr, ptr %array5D, align 8, !dbg !2411
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2412
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2412
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2412
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2412
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !2413
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2414
    #dbg_value(i64 %indvars.iv, !2389, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2391)
  %15 = load ptr, ptr %array5D, align 8, !dbg !2411
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2412
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2412
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2412
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2412
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !2413
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2414
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2415
    #dbg_value(i64 %indvars.iv.next.3, !2389, !DIExpression(), !2391)
  %niter.next.3 = add i64 %niter, 4, !dbg !2410
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2410
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2410, !llvm.loop !2416

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2410
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2410

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2389, !DIExpression(), !2391)
  %19 = load ptr, ptr %array5D, align 8, !dbg !2411
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2412
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2412
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2412
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !2413
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2414
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2415
    #dbg_value(i64 %indvars.iv.next.epil, !2389, !DIExpression(), !2391)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2410
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2410
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2410, !llvm.loop !2418

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !2392
    #dbg_value(i32 %conv1, !2390, !DIExpression(), !2391)
  %add = add nsw i32 %call6, %conv1, !dbg !2419
    #dbg_value(i32 %add, !2390, !DIExpression(), !2391)
  ret i32 %add, !dbg !2420
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem1Dpel(ptr noundef %array1D) local_unnamed_addr #0 !dbg !2421 {
entry:
    #dbg_value(ptr %array1D, !2425, !DIExpression(), !2426)
  %tobool.not = icmp eq ptr %array1D, null, !dbg !2427
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2429

if.then:                                          ; preds = %entry
  tail call void @free(ptr noundef nonnull %array1D) #9, !dbg !2430
  br label %if.end, !dbg !2432

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.44, i32 noundef 100) #9, !dbg !2433
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2435
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dpel(ptr noundef %array2D) local_unnamed_addr #0 !dbg !2436 {
entry:
    #dbg_value(ptr %array2D, !2440, !DIExpression(), !2441)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !2442
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !2444

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !2445
  %tobool1.not = icmp eq ptr %0, null, !dbg !2445
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !2448

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !2449
  br label %if.end, !dbg !2449

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2450
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !2451
  br label %if.end4, !dbg !2452

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2453
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !2455
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2DpelWithPad(ptr noundef %array2D, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2456 {
entry:
    #dbg_value(ptr %array2D, !2460, !DIExpression(), !2463)
    #dbg_value(i32 %iPadY, !2461, !DIExpression(), !2463)
    #dbg_value(i32 %iPadX, !2462, !DIExpression(), !2463)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !2464
  br i1 %tobool.not, label %if.else6, label %if.then, !dbg !2466

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !2467
  %tobool1.not = icmp eq ptr %0, null, !dbg !2467
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !2470

if.then2:                                         ; preds = %if.then
  %sub = sub nsw i32 0, %iPadY, !dbg !2471
  %idxprom = sext i32 %sub to i64, !dbg !2472
  %arrayidx = getelementptr inbounds ptr, ptr %array2D, i64 %idxprom, !dbg !2472
  %1 = load ptr, ptr %arrayidx, align 8, !dbg !2472
  %idx.ext = sext i32 %iPadX to i64, !dbg !2473
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !2473
  %add.ptr = getelementptr inbounds i16, ptr %1, i64 %idx.neg, !dbg !2473
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !2474
  br label %if.end, !dbg !2474

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2475
  %.pre = sub nsw i32 0, %iPadY, !dbg !2476
  %.pre12 = sext i32 %.pre to i64, !dbg !2477
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %idxprom4.pre-phi = phi i64 [ %.pre12, %if.else ], [ %idxprom, %if.then2 ], !dbg !2477
  %arrayidx5 = getelementptr inbounds ptr, ptr %array2D, i64 %idxprom4.pre-phi, !dbg !2477
  tail call void @free(ptr noundef %arrayidx5) #9, !dbg !2478
  br label %if.end7, !dbg !2479

if.else6:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2480
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.end
  ret void, !dbg !2482
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dpel(ptr noundef %array3D) local_unnamed_addr #0 !dbg !2483 {
entry:
    #dbg_value(ptr %array3D, !2487, !DIExpression(), !2488)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !2489
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2491

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !2492
    #dbg_value(ptr %0, !2440, !DIExpression(), !2494)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !2496
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !2497

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !2498
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !2498
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !2499

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !2500
  br label %if.end.i, !dbg !2500

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2501
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !2502
  br label %free_mem2Dpel.exit, !dbg !2503

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2504
  br label %free_mem2Dpel.exit

free_mem2Dpel.exit:                               ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !2505
  br label %if.end, !dbg !2506

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.47, i32 noundef 100) #9, !dbg !2507
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dpel.exit
  ret void, !dbg !2509
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3DpelWithPad(ptr noundef %array3D, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2510 {
entry:
    #dbg_value(ptr %array3D, !2514, !DIExpression(), !2517)
    #dbg_value(i32 %iPadY, !2515, !DIExpression(), !2517)
    #dbg_value(i32 %iPadX, !2516, !DIExpression(), !2517)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !2518
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2520

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !2521
    #dbg_value(ptr %0, !2460, !DIExpression(), !2523)
    #dbg_value(i32 %iPadY, !2461, !DIExpression(), !2523)
    #dbg_value(i32 %iPadX, !2462, !DIExpression(), !2523)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !2525
  br i1 %tobool.not.i, label %if.else6.i, label %if.then.i, !dbg !2526

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !2527
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !2527
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !2528

if.then2.i:                                       ; preds = %if.then.i
  %sub.i = sub nsw i32 0, %iPadY, !dbg !2529
  %idxprom.i = sext i32 %sub.i to i64, !dbg !2530
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i, !dbg !2530
  %2 = load ptr, ptr %arrayidx.i, align 8, !dbg !2530
  %idx.ext.i = sext i32 %iPadX to i64, !dbg !2531
  %idx.neg.i = sub nsw i64 0, %idx.ext.i, !dbg !2531
  %add.ptr.i = getelementptr inbounds i16, ptr %2, i64 %idx.neg.i, !dbg !2531
  tail call void @free(ptr noundef %add.ptr.i) #9, !dbg !2532
  br label %if.end.i, !dbg !2532

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2533
  %.pre.i = sub nsw i32 0, %iPadY, !dbg !2534
  %.pre12.i = sext i32 %.pre.i to i64, !dbg !2535
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  %idxprom4.pre-phi.i = phi i64 [ %.pre12.i, %if.else.i ], [ %idxprom.i, %if.then2.i ], !dbg !2535
  %arrayidx5.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom4.pre-phi.i, !dbg !2535
  tail call void @free(ptr noundef %arrayidx5.i) #9, !dbg !2536
  br label %free_mem2DpelWithPad.exit, !dbg !2537

if.else6.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2538
  br label %free_mem2DpelWithPad.exit

free_mem2DpelWithPad.exit:                        ; preds = %if.end.i, %if.else6.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !2539
  br label %if.end, !dbg !2540

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.47, i32 noundef 100) #9, !dbg !2541
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2DpelWithPad.exit
  ret void, !dbg !2543
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3DpelWithPadSeparately(ptr noundef %array3D, i32 noundef %iDim12, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2544 {
entry:
    #dbg_value(ptr %array3D, !2548, !DIExpression(), !2555)
    #dbg_value(i32 %iDim12, !2549, !DIExpression(), !2555)
    #dbg_value(i32 %iPadY, !2550, !DIExpression(), !2555)
    #dbg_value(i32 %iPadX, !2551, !DIExpression(), !2555)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !2556
  br i1 %tobool.not, label %if.else, label %for.cond.preheader, !dbg !2557

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !2552, !DIExpression(), !2558)
  %cmp16 = icmp sgt i32 %iDim12, 0, !dbg !2559
  br i1 %cmp16, label %for.body.lr.ph, label %for.end, !dbg !2562

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %sub.i = sub nsw i32 0, %iPadY
  %idxprom.i = sext i32 %sub.i to i64
  %idx.ext.i = sext i32 %iPadX to i64
  %idx.neg.i = sub nsw i64 0, %idx.ext.i
  %wide.trip.count = zext nneg i32 %iDim12 to i64, !dbg !2559
  br label %for.body, !dbg !2562

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
    #dbg_value(i64 %indvars.iv, !2552, !DIExpression(), !2558)
  %arrayidx = getelementptr inbounds ptr, ptr %array3D, i64 %indvars.iv, !dbg !2563
  %0 = load ptr, ptr %arrayidx, align 8, !dbg !2563
  %tobool1.not = icmp eq ptr %0, null, !dbg !2563
  br i1 %tobool1.not, label %for.inc, label %if.then.i, !dbg !2565

if.then.i:                                        ; preds = %for.body
    #dbg_value(ptr %0, !2460, !DIExpression(), !2566)
    #dbg_value(i32 %iPadY, !2461, !DIExpression(), !2566)
    #dbg_value(i32 %iPadX, !2462, !DIExpression(), !2566)
  %1 = load ptr, ptr %0, align 8, !dbg !2569
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !2569
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !2570

if.then2.i:                                       ; preds = %if.then.i
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i, !dbg !2571
  %2 = load ptr, ptr %arrayidx.i, align 8, !dbg !2571
  %add.ptr.i = getelementptr inbounds i16, ptr %2, i64 %idx.neg.i, !dbg !2572
  tail call void @free(ptr noundef %add.ptr.i) #9, !dbg !2573
  br label %free_mem2DpelWithPad.exit, !dbg !2573

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2574
  br label %free_mem2DpelWithPad.exit

free_mem2DpelWithPad.exit:                        ; preds = %if.then2.i, %if.else.i
  %arrayidx5.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i, !dbg !2575
  tail call void @free(ptr noundef %arrayidx5.i) #9, !dbg !2576
  store ptr null, ptr %arrayidx, align 8, !dbg !2577
  br label %for.inc, !dbg !2578

for.inc:                                          ; preds = %for.body, %free_mem2DpelWithPad.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2579
    #dbg_value(i64 %indvars.iv.next, !2552, !DIExpression(), !2558)
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !2559
  br i1 %exitcond.not, label %for.end, label %for.body, !dbg !2562, !llvm.loop !2580

for.end:                                          ; preds = %for.inc, %for.cond.preheader
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !2582
  br label %if.end7, !dbg !2583

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.48, i32 noundef 100) #9, !dbg !2584
  br label %if.end7

if.end7:                                          ; preds = %if.else, %for.end
  ret void, !dbg !2586
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dpel(ptr noundef %array4D) local_unnamed_addr #0 !dbg !2587 {
entry:
    #dbg_value(ptr %array4D, !2591, !DIExpression(), !2592)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !2593
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2595

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !2596
    #dbg_value(ptr %0, !2487, !DIExpression(), !2598)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !2600
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !2601

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !2602
    #dbg_value(ptr %1, !2440, !DIExpression(), !2603)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !2605
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !2606

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !2607
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !2607
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !2608

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !2609
  br label %if.end.i.i, !dbg !2609

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2610
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !2611
  br label %free_mem2Dpel.exit.i, !dbg !2612

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.45, i32 noundef 100) #9, !dbg !2613
  br label %free_mem2Dpel.exit.i

free_mem2Dpel.exit.i:                             ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !2614
  br label %free_mem3Dpel.exit, !dbg !2615

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.47, i32 noundef 100) #9, !dbg !2616
  br label %free_mem3Dpel.exit

free_mem3Dpel.exit:                               ; preds = %free_mem2Dpel.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !2617
  br label %if.end, !dbg !2618

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.49, i32 noundef 100) #9, !dbg !2619
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dpel.exit
  ret void, !dbg !2621
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4DpelWithPad(ptr noundef %array4D, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2622 {
entry:
    #dbg_value(ptr %array4D, !2626, !DIExpression(), !2629)
    #dbg_value(i32 %iPadY, !2627, !DIExpression(), !2629)
    #dbg_value(i32 %iPadX, !2628, !DIExpression(), !2629)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !2630
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2632

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !2633
  tail call void @free_mem3DpelWithPad(ptr noundef %0, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2635
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !2636
  br label %if.end, !dbg !2637

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.50, i32 noundef 100) #9, !dbg !2638
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2640
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4DpelWithPadSeparately(ptr noundef %array4D, i32 noundef %iFrames, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2641 {
entry:
    #dbg_value(ptr %array4D, !2645, !DIExpression(), !2649)
    #dbg_value(i32 %iFrames, !2646, !DIExpression(), !2649)
    #dbg_value(i32 %iPadY, !2647, !DIExpression(), !2649)
    #dbg_value(i32 %iPadX, !2648, !DIExpression(), !2649)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !2650
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2652

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !2653
    #dbg_value(ptr %0, !2548, !DIExpression(), !2655)
    #dbg_value(i32 %iFrames, !2549, !DIExpression(), !2655)
    #dbg_value(i32 %iPadY, !2550, !DIExpression(), !2655)
    #dbg_value(i32 %iPadX, !2551, !DIExpression(), !2655)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !2657
  br i1 %tobool.not.i, label %if.else.i, label %for.cond.preheader.i, !dbg !2658

for.cond.preheader.i:                             ; preds = %if.then
    #dbg_value(i32 0, !2552, !DIExpression(), !2659)
  %cmp16.i = icmp sgt i32 %iFrames, 0, !dbg !2660
  br i1 %cmp16.i, label %for.body.lr.ph.i, label %for.end.i, !dbg !2661

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %sub.i.i = sub nsw i32 0, %iPadY
  %idxprom.i.i = sext i32 %sub.i.i to i64
  %idx.ext.i.i = sext i32 %iPadX to i64
  %idx.neg.i.i = sub nsw i64 0, %idx.ext.i.i
  %wide.trip.count.i = zext nneg i32 %iFrames to i64, !dbg !2660
  br label %for.body.i, !dbg !2661

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
    #dbg_value(i64 %indvars.iv.i, !2552, !DIExpression(), !2659)
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %indvars.iv.i, !dbg !2662
  %1 = load ptr, ptr %arrayidx.i, align 8, !dbg !2662
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !2662
  br i1 %tobool1.not.i, label %for.inc.i, label %if.then.i.i, !dbg !2663

if.then.i.i:                                      ; preds = %for.body.i
    #dbg_value(ptr %1, !2460, !DIExpression(), !2664)
    #dbg_value(i32 %iPadY, !2461, !DIExpression(), !2664)
    #dbg_value(i32 %iPadX, !2462, !DIExpression(), !2664)
  %2 = load ptr, ptr %1, align 8, !dbg !2666
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !2666
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !2667

if.then2.i.i:                                     ; preds = %if.then.i.i
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %1, i64 %idxprom.i.i, !dbg !2668
  %3 = load ptr, ptr %arrayidx.i.i, align 8, !dbg !2668
  %add.ptr.i.i = getelementptr inbounds i16, ptr %3, i64 %idx.neg.i.i, !dbg !2669
  tail call void @free(ptr noundef %add.ptr.i.i) #9, !dbg !2670
  br label %free_mem2DpelWithPad.exit.i, !dbg !2670

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.46, i32 noundef 100) #9, !dbg !2671
  br label %free_mem2DpelWithPad.exit.i

free_mem2DpelWithPad.exit.i:                      ; preds = %if.else.i.i, %if.then2.i.i
  %arrayidx5.i.i = getelementptr inbounds ptr, ptr %1, i64 %idxprom.i.i, !dbg !2672
  tail call void @free(ptr noundef %arrayidx5.i.i) #9, !dbg !2673
  store ptr null, ptr %arrayidx.i, align 8, !dbg !2674
  br label %for.inc.i, !dbg !2675

for.inc.i:                                        ; preds = %free_mem2DpelWithPad.exit.i, %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !2676
    #dbg_value(i64 %indvars.iv.next.i, !2552, !DIExpression(), !2659)
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i, !dbg !2660
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i, !dbg !2661, !llvm.loop !2677

for.end.i:                                        ; preds = %for.inc.i, %for.cond.preheader.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !2679
  br label %free_mem3DpelWithPadSeparately.exit, !dbg !2680

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.48, i32 noundef 100) #9, !dbg !2681
  br label %free_mem3DpelWithPadSeparately.exit

free_mem3DpelWithPadSeparately.exit:              ; preds = %for.end.i, %if.else.i
  tail call void @free(ptr noundef %array4D) #9, !dbg !2682
  br label %if.end, !dbg !2683

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.51, i32 noundef 100) #9, !dbg !2684
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3DpelWithPadSeparately.exit
  ret void, !dbg !2686
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5Dpel(ptr noundef %array5D) local_unnamed_addr #0 !dbg !2687 {
entry:
    #dbg_value(ptr %array5D, !2691, !DIExpression(), !2692)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !2693
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2695

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !2696
  tail call void @free_mem4Dpel(ptr noundef %0), !dbg !2698
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !2699
  br label %if.end, !dbg !2700

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.52, i32 noundef 100) #9, !dbg !2701
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2703
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5DpelWithPad(ptr noundef %array5D, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2704 {
entry:
    #dbg_value(ptr %array5D, !2708, !DIExpression(), !2711)
    #dbg_value(i32 %iPadY, !2709, !DIExpression(), !2711)
    #dbg_value(i32 %iPadX, !2710, !DIExpression(), !2711)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !2712
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2714

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !2715
    #dbg_value(ptr %0, !2626, !DIExpression(), !2717)
    #dbg_value(i32 %iPadY, !2627, !DIExpression(), !2717)
    #dbg_value(i32 %iPadX, !2628, !DIExpression(), !2717)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !2719
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !2720

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !2721
  tail call void @free_mem3DpelWithPad(ptr noundef %1, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2722
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !2723
  br label %free_mem4DpelWithPad.exit, !dbg !2724

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.50, i32 noundef 100) #9, !dbg !2725
  br label %free_mem4DpelWithPad.exit

free_mem4DpelWithPad.exit:                        ; preds = %if.then.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !2726
  br label %if.end, !dbg !2727

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.53, i32 noundef 100) #9, !dbg !2728
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem4DpelWithPad.exit
  ret void, !dbg !2730
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5DpelWithPadSeparately(ptr noundef %array5D, i32 noundef %iFrames, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2731 {
entry:
    #dbg_value(ptr %array5D, !2735, !DIExpression(), !2739)
    #dbg_value(i32 %iFrames, !2736, !DIExpression(), !2739)
    #dbg_value(i32 %iPadY, !2737, !DIExpression(), !2739)
    #dbg_value(i32 %iPadX, !2738, !DIExpression(), !2739)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !2740
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !2742

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !2743
  tail call void @free_mem4DpelWithPadSeparately(ptr noundef %0, i32 noundef %iFrames, i32 noundef %iPadY, i32 noundef %iPadX), !dbg !2745
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !2746
  br label %if.end, !dbg !2747

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.53, i32 noundef 100) #9, !dbg !2748
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2750
}

; Function Attrs: nounwind uwtable
define dso_local noalias noundef ptr @new_mem2D(i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !2751 {
entry:
    #dbg_value(i32 %dim0, !2755, !DIExpression(), !2759)
    #dbg_value(i32 %dim1, !2756, !DIExpression(), !2759)
  %conv = sext i32 %dim0 to i64, !dbg !2760
  %mul = shl nsw i64 %conv, 3, !dbg !2762
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2763
    #dbg_value(ptr %call, !2758, !DIExpression(), !2759)
  %cmp = icmp eq ptr %call, null, !dbg !2764
  br i1 %cmp, label %if.then, label %if.end, !dbg !2765

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.54, !574, !DIExpression(), !2766)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.54) #9, !dbg !2768
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2769
  br label %if.end, !dbg !2770

if.end:                                           ; preds = %if.then, %entry
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !2771
  %conv3 = sext i32 %mul2 to i64, !dbg !2773
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 1) #10, !dbg !2774
  store ptr %call4, ptr %call, align 8, !dbg !2775
  %cmp5 = icmp eq ptr %call4, null, !dbg !2776
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2777

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.54, !574, !DIExpression(), !2778)
  %call.i22 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.54) #9, !dbg !2780
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2781
  br label %if.end8, !dbg !2782

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !2757, !DIExpression(), !2759)
  %cmp923 = icmp sgt i32 %dim0, 1, !dbg !2783
  br i1 %cmp923, label %for.body.lr.ph, label %for.end, !dbg !2786

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2783
  %load_initial = load ptr, ptr %call, align 8
  %0 = add nsw i64 %wide.trip.count, -1, !dbg !2786
  %1 = add nsw i64 %wide.trip.count, -2, !dbg !2786
  %xtraiter = and i64 %0, 7, !dbg !2786
  %2 = icmp ult i64 %1, 7, !dbg !2786
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2786

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %0, -8, !dbg !2786
  %invariant.gep = getelementptr i8, ptr %call, i64 8, !dbg !2786
  %invariant.gep26 = getelementptr i8, ptr %call, i64 16, !dbg !2786
  %invariant.gep28 = getelementptr i8, ptr %call, i64 24, !dbg !2786
  %invariant.gep30 = getelementptr i8, ptr %call, i64 32, !dbg !2786
  %invariant.gep32 = getelementptr i8, ptr %call, i64 40, !dbg !2786
  %invariant.gep34 = getelementptr i8, ptr %call, i64 48, !dbg !2786
  %invariant.gep36 = getelementptr i8, ptr %call, i64 56, !dbg !2786
  br label %for.body, !dbg !2786

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %store_forwarded = phi ptr [ %load_initial, %for.body.lr.ph.new ], [ %add.ptr.7, %for.body ], !dbg !2787
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.7, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.7, %for.body ]
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(), !2759)
  %3 = getelementptr ptr, ptr %call, i64 %indvars.iv, !dbg !2787
  %add.ptr = getelementptr inbounds i8, ptr %store_forwarded, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr, ptr %3, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2759)
  %gep = getelementptr ptr, ptr %invariant.gep, i64 %indvars.iv, !dbg !2787
  %add.ptr.1 = getelementptr inbounds i8, ptr %add.ptr, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.1, ptr %gep, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2759)
  %gep27 = getelementptr ptr, ptr %invariant.gep26, i64 %indvars.iv, !dbg !2787
  %add.ptr.2 = getelementptr inbounds i8, ptr %add.ptr.1, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.2, ptr %gep27, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2759)
  %gep29 = getelementptr ptr, ptr %invariant.gep28, i64 %indvars.iv, !dbg !2787
  %add.ptr.3 = getelementptr inbounds i8, ptr %add.ptr.2, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.3, ptr %gep29, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !2759)
  %gep31 = getelementptr ptr, ptr %invariant.gep30, i64 %indvars.iv, !dbg !2787
  %add.ptr.4 = getelementptr inbounds i8, ptr %add.ptr.3, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.4, ptr %gep31, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 5, DW_OP_stack_value), !2759)
  %gep33 = getelementptr ptr, ptr %invariant.gep32, i64 %indvars.iv, !dbg !2787
  %add.ptr.5 = getelementptr inbounds i8, ptr %add.ptr.4, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.5, ptr %gep33, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 6, DW_OP_stack_value), !2759)
  %gep35 = getelementptr ptr, ptr %invariant.gep34, i64 %indvars.iv, !dbg !2787
  %add.ptr.6 = getelementptr inbounds i8, ptr %add.ptr.5, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.6, ptr %gep35, align 8, !dbg !2789
    #dbg_value(i64 %indvars.iv, !2757, !DIExpression(DW_OP_plus_uconst, 7, DW_OP_stack_value), !2759)
  %gep37 = getelementptr ptr, ptr %invariant.gep36, i64 %indvars.iv, !dbg !2787
  %add.ptr.7 = getelementptr inbounds i8, ptr %add.ptr.6, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.7, ptr %gep37, align 8, !dbg !2789
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8, !dbg !2790
    #dbg_value(i64 %indvars.iv.next.7, !2757, !DIExpression(), !2759)
  %niter.next.7 = add i64 %niter, 8, !dbg !2786
  %niter.ncmp.7 = icmp eq i64 %niter.next.7, %unroll_iter, !dbg !2786
  br i1 %niter.ncmp.7, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2786, !llvm.loop !2791

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %store_forwarded.unr = phi ptr [ %load_initial, %for.body.lr.ph ], [ %add.ptr.7, %for.body ]
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2786
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2786

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %store_forwarded.epil = phi ptr [ %add.ptr.epil, %for.body.epil ], [ %store_forwarded.unr, %for.end.loopexit.unr-lcssa ], !dbg !2787
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2757, !DIExpression(), !2759)
  %4 = getelementptr ptr, ptr %call, i64 %indvars.iv.epil, !dbg !2787
  %add.ptr.epil = getelementptr inbounds i8, ptr %store_forwarded.epil, i64 %idx.ext, !dbg !2788
  store ptr %add.ptr.epil, ptr %4, align 8, !dbg !2789
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2790
    #dbg_value(i64 %indvars.iv.next.epil, !2757, !DIExpression(), !2759)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2786
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2786
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2786, !llvm.loop !2793

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  ret ptr %call, !dbg !2794
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2D(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !2795 {
entry:
    #dbg_value(ptr %array2D, !2799, !DIExpression(), !2803)
    #dbg_value(i32 %dim0, !2800, !DIExpression(), !2803)
    #dbg_value(i32 %dim1, !2801, !DIExpression(), !2803)
  %conv = sext i32 %dim0 to i64, !dbg !2804
  %mul = shl nsw i64 %conv, 3, !dbg !2806
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2807
  store ptr %call, ptr %array2D, align 8, !dbg !2808
  %cmp = icmp eq ptr %call, null, !dbg !2809
  br i1 %cmp, label %if.then, label %if.end, !dbg !2810

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.54, !574, !DIExpression(), !2811)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.54) #9, !dbg !2813
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2814
  %.pre = load ptr, ptr %array2D, align 8, !dbg !2815
  br label %if.end, !dbg !2817

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2815
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !2818
  %conv3 = sext i32 %mul2 to i64, !dbg !2819
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 1) #10, !dbg !2820
  store ptr %call4, ptr %0, align 8, !dbg !2821
  %cmp5 = icmp eq ptr %call4, null, !dbg !2822
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2823

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.54, !574, !DIExpression(), !2824)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.54) #9, !dbg !2826
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2827
  br label %if.end8, !dbg !2828

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !2802, !DIExpression(), !2803)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !2829
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !2832

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2829
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2832
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2832
  %xtraiter = and i64 %1, 3, !dbg !2832
  %3 = icmp ult i64 %2, 3, !dbg !2832
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2832

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2832
  br label %for.body, !dbg !2832

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2802, !DIExpression(), !2803)
  %4 = load ptr, ptr %array2D, align 8, !dbg !2833
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2834
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2834
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2834
  %add.ptr = getelementptr inbounds i8, ptr %6, i64 %idx.ext, !dbg !2835
  store ptr %add.ptr, ptr %5, align 8, !dbg !2836
    #dbg_value(i64 %indvars.iv, !2802, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2803)
  %7 = load ptr, ptr %array2D, align 8, !dbg !2833
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2834
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2834
  %10 = load ptr, ptr %8, align 8, !dbg !2834
  %add.ptr.1 = getelementptr inbounds i8, ptr %10, i64 %idx.ext, !dbg !2835
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2836
    #dbg_value(i64 %indvars.iv, !2802, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2803)
  %11 = load ptr, ptr %array2D, align 8, !dbg !2833
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2834
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2834
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2834
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2834
  %add.ptr.2 = getelementptr inbounds i8, ptr %14, i64 %idx.ext, !dbg !2835
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2836
    #dbg_value(i64 %indvars.iv, !2802, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2803)
  %15 = load ptr, ptr %array2D, align 8, !dbg !2833
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2834
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2834
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2834
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2834
  %add.ptr.3 = getelementptr inbounds i8, ptr %18, i64 %idx.ext, !dbg !2835
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2836
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2837
    #dbg_value(i64 %indvars.iv.next.3, !2802, !DIExpression(), !2803)
  %niter.next.3 = add i64 %niter, 4, !dbg !2832
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2832
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2832, !llvm.loop !2838

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2832
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2832

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2802, !DIExpression(), !2803)
  %19 = load ptr, ptr %array2D, align 8, !dbg !2833
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2834
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2834
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2834
  %add.ptr.epil = getelementptr inbounds i8, ptr %21, i64 %idx.ext, !dbg !2835
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2836
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2837
    #dbg_value(i64 %indvars.iv.next.epil, !2802, !DIExpression(), !2803)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2832
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2832
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2832, !llvm.loop !2840

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %add = add i32 %dim1, 8, !dbg !2841
  %mul16 = mul i32 %add, %dim0, !dbg !2842
  ret i32 %mul16, !dbg !2843
}

; Function Attrs: nounwind uwtable
define dso_local noalias noundef ptr @new_mem2Dint(i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !2844 {
entry:
    #dbg_value(i32 %dim0, !2848, !DIExpression(), !2852)
    #dbg_value(i32 %dim1, !2849, !DIExpression(), !2852)
  %conv = sext i32 %dim0 to i64, !dbg !2853
  %mul = shl nsw i64 %conv, 3, !dbg !2855
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2856
    #dbg_value(ptr %call, !2851, !DIExpression(), !2852)
  %cmp = icmp eq ptr %call, null, !dbg !2857
  br i1 %cmp, label %if.then, label %if.end, !dbg !2858

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !2859)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !2861
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2862
  br label %if.end, !dbg !2863

if.end:                                           ; preds = %if.then, %entry
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !2864
  %conv3 = sext i32 %mul2 to i64, !dbg !2866
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 4) #10, !dbg !2867
  store ptr %call4, ptr %call, align 8, !dbg !2868
  %cmp5 = icmp eq ptr %call4, null, !dbg !2869
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2870

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !2871)
  %call.i22 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !2873
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2874
  br label %if.end8, !dbg !2875

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !2850, !DIExpression(), !2852)
  %cmp923 = icmp sgt i32 %dim0, 1, !dbg !2876
  br i1 %cmp923, label %for.body.lr.ph, label %for.end, !dbg !2879

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2876
  %load_initial = load ptr, ptr %call, align 8
  %0 = add nsw i64 %wide.trip.count, -1, !dbg !2879
  %1 = add nsw i64 %wide.trip.count, -2, !dbg !2879
  %xtraiter = and i64 %0, 7, !dbg !2879
  %2 = icmp ult i64 %1, 7, !dbg !2879
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2879

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %0, -8, !dbg !2879
  %invariant.gep = getelementptr i8, ptr %call, i64 8, !dbg !2879
  %invariant.gep26 = getelementptr i8, ptr %call, i64 16, !dbg !2879
  %invariant.gep28 = getelementptr i8, ptr %call, i64 24, !dbg !2879
  %invariant.gep30 = getelementptr i8, ptr %call, i64 32, !dbg !2879
  %invariant.gep32 = getelementptr i8, ptr %call, i64 40, !dbg !2879
  %invariant.gep34 = getelementptr i8, ptr %call, i64 48, !dbg !2879
  %invariant.gep36 = getelementptr i8, ptr %call, i64 56, !dbg !2879
  br label %for.body, !dbg !2879

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %store_forwarded = phi ptr [ %load_initial, %for.body.lr.ph.new ], [ %add.ptr.7, %for.body ], !dbg !2880
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.7, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.7, %for.body ]
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(), !2852)
  %3 = getelementptr ptr, ptr %call, i64 %indvars.iv, !dbg !2880
  %add.ptr = getelementptr inbounds i32, ptr %store_forwarded, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr, ptr %3, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2852)
  %gep = getelementptr ptr, ptr %invariant.gep, i64 %indvars.iv, !dbg !2880
  %add.ptr.1 = getelementptr inbounds i32, ptr %add.ptr, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.1, ptr %gep, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2852)
  %gep27 = getelementptr ptr, ptr %invariant.gep26, i64 %indvars.iv, !dbg !2880
  %add.ptr.2 = getelementptr inbounds i32, ptr %add.ptr.1, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.2, ptr %gep27, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2852)
  %gep29 = getelementptr ptr, ptr %invariant.gep28, i64 %indvars.iv, !dbg !2880
  %add.ptr.3 = getelementptr inbounds i32, ptr %add.ptr.2, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.3, ptr %gep29, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !2852)
  %gep31 = getelementptr ptr, ptr %invariant.gep30, i64 %indvars.iv, !dbg !2880
  %add.ptr.4 = getelementptr inbounds i32, ptr %add.ptr.3, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.4, ptr %gep31, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 5, DW_OP_stack_value), !2852)
  %gep33 = getelementptr ptr, ptr %invariant.gep32, i64 %indvars.iv, !dbg !2880
  %add.ptr.5 = getelementptr inbounds i32, ptr %add.ptr.4, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.5, ptr %gep33, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 6, DW_OP_stack_value), !2852)
  %gep35 = getelementptr ptr, ptr %invariant.gep34, i64 %indvars.iv, !dbg !2880
  %add.ptr.6 = getelementptr inbounds i32, ptr %add.ptr.5, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.6, ptr %gep35, align 8, !dbg !2882
    #dbg_value(i64 %indvars.iv, !2850, !DIExpression(DW_OP_plus_uconst, 7, DW_OP_stack_value), !2852)
  %gep37 = getelementptr ptr, ptr %invariant.gep36, i64 %indvars.iv, !dbg !2880
  %add.ptr.7 = getelementptr inbounds i32, ptr %add.ptr.6, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.7, ptr %gep37, align 8, !dbg !2882
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8, !dbg !2883
    #dbg_value(i64 %indvars.iv.next.7, !2850, !DIExpression(), !2852)
  %niter.next.7 = add i64 %niter, 8, !dbg !2879
  %niter.ncmp.7 = icmp eq i64 %niter.next.7, %unroll_iter, !dbg !2879
  br i1 %niter.ncmp.7, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2879, !llvm.loop !2884

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %store_forwarded.unr = phi ptr [ %load_initial, %for.body.lr.ph ], [ %add.ptr.7, %for.body ]
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2879
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2879

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %store_forwarded.epil = phi ptr [ %add.ptr.epil, %for.body.epil ], [ %store_forwarded.unr, %for.end.loopexit.unr-lcssa ], !dbg !2880
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2850, !DIExpression(), !2852)
  %4 = getelementptr ptr, ptr %call, i64 %indvars.iv.epil, !dbg !2880
  %add.ptr.epil = getelementptr inbounds i32, ptr %store_forwarded.epil, i64 %idx.ext, !dbg !2881
  store ptr %add.ptr.epil, ptr %4, align 8, !dbg !2882
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2883
    #dbg_value(i64 %indvars.iv.next.epil, !2850, !DIExpression(), !2852)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2879
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2879
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2879, !llvm.loop !2886

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  ret ptr %call, !dbg !2887
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dint(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !2888 {
entry:
    #dbg_value(ptr %array2D, !2892, !DIExpression(), !2896)
    #dbg_value(i32 %dim0, !2893, !DIExpression(), !2896)
    #dbg_value(i32 %dim1, !2894, !DIExpression(), !2896)
  %conv = sext i32 %dim0 to i64, !dbg !2897
  %mul = shl nsw i64 %conv, 3, !dbg !2899
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !2900
  store ptr %call, ptr %array2D, align 8, !dbg !2901
  %cmp = icmp eq ptr %call, null, !dbg !2902
  br i1 %cmp, label %if.then, label %if.end, !dbg !2903

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !2904)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !2906
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2907
  %.pre = load ptr, ptr %array2D, align 8, !dbg !2908
  br label %if.end, !dbg !2910

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2908
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !2911
  %conv3 = sext i32 %mul2 to i64, !dbg !2912
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 4) #10, !dbg !2913
  store ptr %call4, ptr %0, align 8, !dbg !2914
  %cmp5 = icmp eq ptr %call4, null, !dbg !2915
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !2916

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !2917)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !2919
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2920
  br label %if.end8, !dbg !2921

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !2895, !DIExpression(), !2896)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !2922
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !2925

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !2922
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !2925
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !2925
  %xtraiter = and i64 %1, 3, !dbg !2925
  %3 = icmp ult i64 %2, 3, !dbg !2925
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2925

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !2925
  br label %for.body, !dbg !2925

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2895, !DIExpression(), !2896)
  %4 = load ptr, ptr %array2D, align 8, !dbg !2926
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !2927
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !2927
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !2927
  %add.ptr = getelementptr inbounds i32, ptr %6, i64 %idx.ext, !dbg !2928
  store ptr %add.ptr, ptr %5, align 8, !dbg !2929
    #dbg_value(i64 %indvars.iv, !2895, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2896)
  %7 = load ptr, ptr %array2D, align 8, !dbg !2926
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !2927
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !2927
  %10 = load ptr, ptr %8, align 8, !dbg !2927
  %add.ptr.1 = getelementptr inbounds i32, ptr %10, i64 %idx.ext, !dbg !2928
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !2929
    #dbg_value(i64 %indvars.iv, !2895, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2896)
  %11 = load ptr, ptr %array2D, align 8, !dbg !2926
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !2927
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !2927
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !2927
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !2927
  %add.ptr.2 = getelementptr inbounds i32, ptr %14, i64 %idx.ext, !dbg !2928
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !2929
    #dbg_value(i64 %indvars.iv, !2895, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2896)
  %15 = load ptr, ptr %array2D, align 8, !dbg !2926
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !2927
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !2927
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !2927
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !2927
  %add.ptr.3 = getelementptr inbounds i32, ptr %18, i64 %idx.ext, !dbg !2928
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !2929
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2930
    #dbg_value(i64 %indvars.iv.next.3, !2895, !DIExpression(), !2896)
  %niter.next.3 = add i64 %niter, 4, !dbg !2925
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2925
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2925, !llvm.loop !2931

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2925
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2925

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2895, !DIExpression(), !2896)
  %19 = load ptr, ptr %array2D, align 8, !dbg !2926
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !2927
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !2927
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !2927
  %add.ptr.epil = getelementptr inbounds i32, ptr %21, i64 %idx.ext, !dbg !2928
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !2929
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2930
    #dbg_value(i64 %indvars.iv.next.epil, !2895, !DIExpression(), !2896)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2925
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2925
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2925, !llvm.loop !2933

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 2, !dbg !2934
  %add = add i32 %mul15, 8, !dbg !2935
  %mul16 = mul i32 %add, %dim0, !dbg !2936
  ret i32 %mul16, !dbg !2937
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2DintWithPad(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !2938 {
entry:
    #dbg_value(ptr %array2D, !2942, !DIExpression(), !2951)
    #dbg_value(i32 %dim0, !2943, !DIExpression(), !2951)
    #dbg_value(i32 %dim1, !2944, !DIExpression(), !2951)
    #dbg_value(i32 %iPadY, !2945, !DIExpression(), !2951)
    #dbg_value(i32 %iPadX, !2946, !DIExpression(), !2951)
    #dbg_value(ptr null, !2948, !DIExpression(), !2951)
  %mul = shl nsw i32 %iPadY, 1, !dbg !2952
  %add = add nsw i32 %mul, %dim0, !dbg !2953
    #dbg_value(i32 %add, !2949, !DIExpression(), !2951)
  %mul1 = shl nsw i32 %iPadX, 1, !dbg !2954
  %add2 = add nsw i32 %mul1, %dim1, !dbg !2955
    #dbg_value(i32 %add2, !2950, !DIExpression(), !2951)
  %conv = sext i32 %add to i64, !dbg !2956
  %mul3 = shl nsw i64 %conv, 3, !dbg !2958
  %call = tail call noalias ptr @malloc(i64 noundef %mul3) #8, !dbg !2959
  store ptr %call, ptr %array2D, align 8, !dbg !2960
  %cmp = icmp eq ptr %call, null, !dbg !2961
  br i1 %cmp, label %if.then, label %if.end, !dbg !2962

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.56, !574, !DIExpression(), !2963)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.56) #9, !dbg !2965
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2966
  %.pre = load ptr, ptr %array2D, align 8, !dbg !2967
  br label %if.end, !dbg !2969

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !2967
  %mul5 = mul nsw i32 %add2, %add, !dbg !2970
  %conv6 = sext i32 %mul5 to i64, !dbg !2971
  %call7 = tail call noalias ptr @calloc(i64 noundef %conv6, i64 noundef 4) #10, !dbg !2972
  store ptr %call7, ptr %0, align 8, !dbg !2973
  %cmp8 = icmp eq ptr %call7, null, !dbg !2974
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !2975

if.then10:                                        ; preds = %if.end
    #dbg_value(ptr @.str.56, !574, !DIExpression(), !2976)
  %call.i42 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.56) #9, !dbg !2978
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !2979
  br label %if.end11, !dbg !2980

if.end11:                                         ; preds = %if.then10, %if.end
  %1 = load ptr, ptr %array2D, align 8, !dbg !2981
  %2 = load ptr, ptr %1, align 8, !dbg !2982
  %idx.ext = sext i32 %iPadX to i64, !dbg !2982
  %add.ptr = getelementptr inbounds i32, ptr %2, i64 %idx.ext, !dbg !2982
  store ptr %add.ptr, ptr %1, align 8, !dbg !2982
    #dbg_value(ptr poison, !2948, !DIExpression(), !2951)
    #dbg_value(i32 1, !2947, !DIExpression(), !2951)
  %cmp1343 = icmp sgt i32 %add, 1, !dbg !2983
  br i1 %cmp1343, label %for.body.lr.ph, label %for.end, !dbg !2986

for.body.lr.ph:                                   ; preds = %if.end11
  %3 = load ptr, ptr %array2D, align 8, !dbg !2987
  %4 = load ptr, ptr %3, align 8, !dbg !2988
    #dbg_value(ptr %4, !2948, !DIExpression(), !2951)
  %idx.ext15 = sext i32 %add2 to i64
  %wide.trip.count = zext nneg i32 %add to i64, !dbg !2983
  %5 = add nsw i64 %wide.trip.count, -1, !dbg !2986
  %6 = add nsw i64 %wide.trip.count, -2, !dbg !2986
  %xtraiter = and i64 %5, 3, !dbg !2986
  %7 = icmp ult i64 %6, 3, !dbg !2986
  br i1 %7, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !2986

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %5, -4, !dbg !2986
  br label %for.body, !dbg !2986

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %curr.044 = phi ptr [ %4, %for.body.lr.ph.new ], [ %add.ptr16.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !2947, !DIExpression(), !2951)
    #dbg_value(ptr %curr.044, !2948, !DIExpression(), !2951)
  %add.ptr16 = getelementptr inbounds i32, ptr %curr.044, i64 %idx.ext15, !dbg !2989
    #dbg_value(ptr %add.ptr16, !2948, !DIExpression(), !2951)
  %8 = load ptr, ptr %array2D, align 8, !dbg !2991
  %arrayidx17 = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv, !dbg !2992
  store ptr %add.ptr16, ptr %arrayidx17, align 8, !dbg !2993
    #dbg_value(i64 %indvars.iv, !2947, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !2951)
  %add.ptr16.1 = getelementptr inbounds i32, ptr %add.ptr16, i64 %idx.ext15, !dbg !2989
    #dbg_value(ptr %add.ptr16.1, !2948, !DIExpression(), !2951)
  %9 = load ptr, ptr %array2D, align 8, !dbg !2991
  %10 = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv, !dbg !2992
  %arrayidx17.1 = getelementptr inbounds i8, ptr %10, i64 8, !dbg !2992
  store ptr %add.ptr16.1, ptr %arrayidx17.1, align 8, !dbg !2993
    #dbg_value(i64 %indvars.iv, !2947, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !2951)
  %add.ptr16.2 = getelementptr inbounds i32, ptr %add.ptr16.1, i64 %idx.ext15, !dbg !2989
    #dbg_value(ptr %add.ptr16.2, !2948, !DIExpression(), !2951)
  %11 = load ptr, ptr %array2D, align 8, !dbg !2991
  %12 = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv, !dbg !2992
  %arrayidx17.2 = getelementptr inbounds i8, ptr %12, i64 16, !dbg !2992
  store ptr %add.ptr16.2, ptr %arrayidx17.2, align 8, !dbg !2993
    #dbg_value(i64 %indvars.iv, !2947, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !2951)
  %add.ptr16.3 = getelementptr inbounds i32, ptr %add.ptr16.2, i64 %idx.ext15, !dbg !2989
    #dbg_value(ptr %add.ptr16.3, !2948, !DIExpression(), !2951)
  %13 = load ptr, ptr %array2D, align 8, !dbg !2991
  %14 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv, !dbg !2992
  %arrayidx17.3 = getelementptr inbounds i8, ptr %14, i64 24, !dbg !2992
  store ptr %add.ptr16.3, ptr %arrayidx17.3, align 8, !dbg !2993
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !2994
    #dbg_value(i64 %indvars.iv.next.3, !2947, !DIExpression(), !2951)
  %niter.next.3 = add i64 %niter, 4, !dbg !2986
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !2986
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !2986, !llvm.loop !2995

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %curr.044.unr = phi ptr [ %4, %for.body.lr.ph ], [ %add.ptr16.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !2986
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !2986

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %curr.044.epil = phi ptr [ %add.ptr16.epil, %for.body.epil ], [ %curr.044.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !2947, !DIExpression(), !2951)
    #dbg_value(ptr %curr.044.epil, !2948, !DIExpression(), !2951)
  %add.ptr16.epil = getelementptr inbounds i32, ptr %curr.044.epil, i64 %idx.ext15, !dbg !2989
    #dbg_value(ptr %add.ptr16.epil, !2948, !DIExpression(), !2951)
  %15 = load ptr, ptr %array2D, align 8, !dbg !2991
  %arrayidx17.epil = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv.epil, !dbg !2992
  store ptr %add.ptr16.epil, ptr %arrayidx17.epil, align 8, !dbg !2993
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !2994
    #dbg_value(i64 %indvars.iv.next.epil, !2947, !DIExpression(), !2951)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !2986
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !2986
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !2986, !llvm.loop !2997

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end11
  %16 = load ptr, ptr %array2D, align 8, !dbg !2998
  %idxprom18 = sext i32 %iPadY to i64, !dbg !2999
  %arrayidx19 = getelementptr inbounds ptr, ptr %16, i64 %idxprom18, !dbg !2999
  store ptr %arrayidx19, ptr %array2D, align 8, !dbg !3000
  %mul22 = shl i32 %add2, 2, !dbg !3001
  %add23 = add i32 %mul22, 8, !dbg !3002
  %mul24 = mul i32 %add23, %add, !dbg !3003
  ret i32 %mul24, !dbg !3004
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dint64(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !3005 {
entry:
    #dbg_value(ptr %array2D, !3009, !DIExpression(), !3013)
    #dbg_value(i32 %dim0, !3010, !DIExpression(), !3013)
    #dbg_value(i32 %dim1, !3011, !DIExpression(), !3013)
  %conv = sext i32 %dim0 to i64, !dbg !3014
  %mul = shl nsw i64 %conv, 3, !dbg !3016
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3017
  store ptr %call, ptr %array2D, align 8, !dbg !3018
  %cmp = icmp eq ptr %call, null, !dbg !3019
  br i1 %cmp, label %if.then, label %if.end, !dbg !3020

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.57, !574, !DIExpression(), !3021)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.57) #9, !dbg !3023
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3024
  %.pre = load ptr, ptr %array2D, align 8, !dbg !3025
  br label %if.end, !dbg !3027

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3025
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !3028
  %conv3 = sext i32 %mul2 to i64, !dbg !3029
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !3030
  store ptr %call4, ptr %0, align 8, !dbg !3031
  %cmp5 = icmp eq ptr %call4, null, !dbg !3032
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3033

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.57, !574, !DIExpression(), !3034)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.57) #9, !dbg !3036
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3037
  br label %if.end8, !dbg !3038

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !3012, !DIExpression(), !3013)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !3039
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !3042

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3039
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3042
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3042
  %xtraiter = and i64 %1, 3, !dbg !3042
  %3 = icmp ult i64 %2, 3, !dbg !3042
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3042

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3042
  br label %for.body, !dbg !3042

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3012, !DIExpression(), !3013)
  %4 = load ptr, ptr %array2D, align 8, !dbg !3043
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3044
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3044
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3044
  %add.ptr = getelementptr inbounds i64, ptr %6, i64 %idx.ext, !dbg !3045
  store ptr %add.ptr, ptr %5, align 8, !dbg !3046
    #dbg_value(i64 %indvars.iv, !3012, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3013)
  %7 = load ptr, ptr %array2D, align 8, !dbg !3043
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3044
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3044
  %10 = load ptr, ptr %8, align 8, !dbg !3044
  %add.ptr.1 = getelementptr inbounds i64, ptr %10, i64 %idx.ext, !dbg !3045
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3046
    #dbg_value(i64 %indvars.iv, !3012, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3013)
  %11 = load ptr, ptr %array2D, align 8, !dbg !3043
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3044
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3044
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3044
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3044
  %add.ptr.2 = getelementptr inbounds i64, ptr %14, i64 %idx.ext, !dbg !3045
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3046
    #dbg_value(i64 %indvars.iv, !3012, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3013)
  %15 = load ptr, ptr %array2D, align 8, !dbg !3043
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3044
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3044
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3044
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3044
  %add.ptr.3 = getelementptr inbounds i64, ptr %18, i64 %idx.ext, !dbg !3045
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3046
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3047
    #dbg_value(i64 %indvars.iv.next.3, !3012, !DIExpression(), !3013)
  %niter.next.3 = add i64 %niter, 4, !dbg !3042
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3042
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3042, !llvm.loop !3048

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3042
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3042

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3012, !DIExpression(), !3013)
  %19 = load ptr, ptr %array2D, align 8, !dbg !3043
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3044
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3044
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3044
  %add.ptr.epil = getelementptr inbounds i64, ptr %21, i64 %idx.ext, !dbg !3045
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3046
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3047
    #dbg_value(i64 %indvars.iv.next.epil, !3012, !DIExpression(), !3013)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3042
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3042
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3042, !llvm.loop !3050

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 3, !dbg !3051
  %add = add i32 %mul15, 8, !dbg !3052
  %mul16 = mul i32 %add, %dim0, !dbg !3053
  ret i32 %mul16, !dbg !3054
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Ddistblk(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !3055 {
entry:
    #dbg_value(ptr %array2D, !3059, !DIExpression(), !3063)
    #dbg_value(i32 %dim0, !3060, !DIExpression(), !3063)
    #dbg_value(i32 %dim1, !3061, !DIExpression(), !3063)
  %conv = sext i32 %dim0 to i64, !dbg !3064
  %mul = shl nsw i64 %conv, 3, !dbg !3066
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3067
  store ptr %call, ptr %array2D, align 8, !dbg !3068
  %cmp = icmp eq ptr %call, null, !dbg !3069
  br i1 %cmp, label %if.then, label %if.end, !dbg !3070

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.58, !574, !DIExpression(), !3071)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.58) #9, !dbg !3073
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3074
  %.pre = load ptr, ptr %array2D, align 8, !dbg !3075
  br label %if.end, !dbg !3077

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3075
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !3078
  %conv3 = sext i32 %mul2 to i64, !dbg !3079
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !3080
  store ptr %call4, ptr %0, align 8, !dbg !3081
  %cmp5 = icmp eq ptr %call4, null, !dbg !3082
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3083

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.58, !574, !DIExpression(), !3084)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.58) #9, !dbg !3086
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3087
  br label %if.end8, !dbg !3088

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !3062, !DIExpression(), !3063)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !3089
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !3092

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3089
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3092
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3092
  %xtraiter = and i64 %1, 3, !dbg !3092
  %3 = icmp ult i64 %2, 3, !dbg !3092
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3092

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3092
  br label %for.body, !dbg !3092

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3062, !DIExpression(), !3063)
  %4 = load ptr, ptr %array2D, align 8, !dbg !3093
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3094
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3094
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3094
  %add.ptr = getelementptr inbounds i64, ptr %6, i64 %idx.ext, !dbg !3095
  store ptr %add.ptr, ptr %5, align 8, !dbg !3096
    #dbg_value(i64 %indvars.iv, !3062, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3063)
  %7 = load ptr, ptr %array2D, align 8, !dbg !3093
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3094
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3094
  %10 = load ptr, ptr %8, align 8, !dbg !3094
  %add.ptr.1 = getelementptr inbounds i64, ptr %10, i64 %idx.ext, !dbg !3095
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3096
    #dbg_value(i64 %indvars.iv, !3062, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3063)
  %11 = load ptr, ptr %array2D, align 8, !dbg !3093
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3094
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3094
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3094
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3094
  %add.ptr.2 = getelementptr inbounds i64, ptr %14, i64 %idx.ext, !dbg !3095
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3096
    #dbg_value(i64 %indvars.iv, !3062, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3063)
  %15 = load ptr, ptr %array2D, align 8, !dbg !3093
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3094
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3094
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3094
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3094
  %add.ptr.3 = getelementptr inbounds i64, ptr %18, i64 %idx.ext, !dbg !3095
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3096
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3097
    #dbg_value(i64 %indvars.iv.next.3, !3062, !DIExpression(), !3063)
  %niter.next.3 = add i64 %niter, 4, !dbg !3092
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3092
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3092, !llvm.loop !3098

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3092
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3092

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3062, !DIExpression(), !3063)
  %19 = load ptr, ptr %array2D, align 8, !dbg !3093
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3094
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3094
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3094
  %add.ptr.epil = getelementptr inbounds i64, ptr %21, i64 %idx.ext, !dbg !3095
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3096
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3097
    #dbg_value(i64 %indvars.iv.next.epil, !3062, !DIExpression(), !3063)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3092
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3092
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3092, !llvm.loop !3100

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 3, !dbg !3101
  %add = add i32 %mul15, 8, !dbg !3102
  %mul16 = mul i32 %add, %dim0, !dbg !3103
  ret i32 %mul16, !dbg !3104
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3D(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !3105 {
entry:
    #dbg_value(ptr %array3D, !3109, !DIExpression(), !3115)
    #dbg_value(i32 %dim0, !3110, !DIExpression(), !3115)
    #dbg_value(i32 %dim1, !3111, !DIExpression(), !3115)
    #dbg_value(i32 %dim2, !3112, !DIExpression(), !3115)
  %conv = sext i32 %dim0 to i64, !dbg !3116
  %mul = shl nsw i64 %conv, 3, !dbg !3117
    #dbg_value(i64 %mul, !3114, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3115)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3118
  store ptr %call, ptr %array3D, align 8, !dbg !3120
  %cmp = icmp eq ptr %call, null, !dbg !3121
  br i1 %cmp, label %if.then, label %if.end, !dbg !3122

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.59, !574, !DIExpression(), !3123)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.59) #9, !dbg !3125
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3126
  %.pre = load ptr, ptr %array3D, align 8, !dbg !3127
  br label %if.end, !dbg !3128

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3127
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3129
  %call6 = tail call i32 @get_mem2D(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !3130
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !3114, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3115)
    #dbg_value(i32 1, !3113, !DIExpression(), !3115)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !3131
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !3134

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3131
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3134
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3134
  %xtraiter = and i64 %1, 3, !dbg !3134
  %3 = icmp ult i64 %2, 3, !dbg !3134
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3134

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3134
  br label %for.body, !dbg !3134

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3113, !DIExpression(), !3115)
  %4 = load ptr, ptr %array3D, align 8, !dbg !3135
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3136
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3136
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3136
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !3137
  store ptr %add.ptr, ptr %5, align 8, !dbg !3138
    #dbg_value(i64 %indvars.iv, !3113, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3115)
  %7 = load ptr, ptr %array3D, align 8, !dbg !3135
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3136
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3136
  %10 = load ptr, ptr %8, align 8, !dbg !3136
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !3137
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3138
    #dbg_value(i64 %indvars.iv, !3113, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3115)
  %11 = load ptr, ptr %array3D, align 8, !dbg !3135
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3136
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3136
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3136
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3136
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !3137
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3138
    #dbg_value(i64 %indvars.iv, !3113, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3115)
  %15 = load ptr, ptr %array3D, align 8, !dbg !3135
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3136
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3136
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3136
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3136
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !3137
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3138
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3139
    #dbg_value(i64 %indvars.iv.next.3, !3113, !DIExpression(), !3115)
  %niter.next.3 = add i64 %niter, 4, !dbg !3134
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3134
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3134, !llvm.loop !3140

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3134
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3134

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3113, !DIExpression(), !3115)
  %19 = load ptr, ptr %array3D, align 8, !dbg !3135
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3136
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3136
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3136
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !3137
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3138
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3139
    #dbg_value(i64 %indvars.iv.next.epil, !3113, !DIExpression(), !3115)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3134
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3134
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3134, !llvm.loop !3142

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !3116
    #dbg_value(i32 %conv1, !3114, !DIExpression(), !3115)
  %add = add nsw i32 %call6, %conv1, !dbg !3143
    #dbg_value(i32 %add, !3114, !DIExpression(), !3115)
  ret i32 %add, !dbg !3144
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4D(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !3145 {
entry:
    #dbg_value(ptr %array4D, !3150, !DIExpression(), !3157)
    #dbg_value(i32 %dim0, !3151, !DIExpression(), !3157)
    #dbg_value(i32 %dim1, !3152, !DIExpression(), !3157)
    #dbg_value(i32 %dim2, !3153, !DIExpression(), !3157)
    #dbg_value(i32 %dim3, !3154, !DIExpression(), !3157)
  %conv = sext i32 %dim0 to i64, !dbg !3158
  %mul = shl nsw i64 %conv, 3, !dbg !3159
    #dbg_value(i64 %mul, !3156, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3157)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3160
  store ptr %call, ptr %array4D, align 8, !dbg !3162
  %cmp = icmp eq ptr %call, null, !dbg !3163
  br i1 %cmp, label %if.then, label %if.end, !dbg !3164

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.60, !574, !DIExpression(), !3165)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.60) #9, !dbg !3167
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3168
  %.pre = load ptr, ptr %array4D, align 8, !dbg !3169
  br label %if.end, !dbg !3170

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3169
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3171
    #dbg_value(ptr %0, !3109, !DIExpression(), !3172)
    #dbg_value(i32 %mul5, !3110, !DIExpression(), !3172)
    #dbg_value(i32 %dim2, !3111, !DIExpression(), !3172)
    #dbg_value(i32 %dim3, !3112, !DIExpression(), !3172)
  %conv.i = sext i32 %mul5 to i64, !dbg !3174
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !3175
    #dbg_value(i64 %mul.i, !3114, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3172)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !3176
  store ptr %call.i22, ptr %0, align 8, !dbg !3177
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !3178
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3179

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.59, !574, !DIExpression(), !3180)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.59) #9, !dbg !3182
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3183
  %.pre.i = load ptr, ptr %0, align 8, !dbg !3184
  br label %if.end.i, !dbg !3185

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !3184
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !3186
  %call6.i = tail call i32 @get_mem2D(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !3187
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !3114, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3172)
    #dbg_value(i32 1, !3113, !DIExpression(), !3172)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !3188
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3D.exit, !dbg !3189

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !3188
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !3189
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !3189
  %xtraiter = and i64 %2, 3, !dbg !3189
  %4 = icmp ult i64 %3, 3, !dbg !3189
  br i1 %4, label %get_mem3D.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !3189

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !3189
  br label %for.body.i, !dbg !3189

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !3113, !DIExpression(), !3172)
  %5 = load ptr, ptr %0, align 8, !dbg !3190
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !3191
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !3191
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !3191
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !3192
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !3193
    #dbg_value(i64 %indvars.iv.i, !3113, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3172)
  %8 = load ptr, ptr %0, align 8, !dbg !3190
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !3191
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !3191
  %11 = load ptr, ptr %9, align 8, !dbg !3191
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !3192
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !3193
    #dbg_value(i64 %indvars.iv.i, !3113, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3172)
  %12 = load ptr, ptr %0, align 8, !dbg !3190
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !3191
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !3191
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !3191
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !3191
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !3192
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !3193
    #dbg_value(i64 %indvars.iv.i, !3113, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3172)
  %16 = load ptr, ptr %0, align 8, !dbg !3190
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !3191
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !3191
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !3191
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !3191
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !3192
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !3193
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !3194
    #dbg_value(i64 %indvars.iv.next.i.3, !3113, !DIExpression(), !3172)
  %niter.next.3 = add i64 %niter, 4, !dbg !3189
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3189
  br i1 %niter.ncmp.3, label %get_mem3D.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !3189, !llvm.loop !3195

get_mem3D.exit.loopexit.unr-lcssa:                ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3189
  br i1 %lcmp.mod.not, label %get_mem3D.exit, label %for.body.i.epil, !dbg !3189

for.body.i.epil:                                  ; preds = %get_mem3D.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3D.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3D.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !3113, !DIExpression(), !3172)
  %20 = load ptr, ptr %0, align 8, !dbg !3190
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !3191
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !3191
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !3191
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !3192
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !3193
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !3194
    #dbg_value(i64 %indvars.iv.next.i.epil, !3113, !DIExpression(), !3172)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3189
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3189
  br i1 %epil.iter.cmp.not, label %get_mem3D.exit, label %for.body.i.epil, !dbg !3189, !llvm.loop !3197

get_mem3D.exit:                                   ; preds = %get_mem3D.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !3114, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !3172)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !3156, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !3157)
    #dbg_value(i32 1, !3155, !DIExpression(), !3157)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !3198
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !3201

for.body.lr.ph:                                   ; preds = %get_mem3D.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3198
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !3201
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !3201
  %xtraiter26 = and i64 %23, 3, !dbg !3201
  %25 = icmp ult i64 %24, 3, !dbg !3201
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3201

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !3201
  br label %for.body, !dbg !3201

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3155, !DIExpression(), !3157)
  %26 = load ptr, ptr %array4D, align 8, !dbg !3202
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !3203
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !3203
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !3203
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !3204
  store ptr %add.ptr, ptr %27, align 8, !dbg !3205
    #dbg_value(i64 %indvars.iv, !3155, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3157)
  %29 = load ptr, ptr %array4D, align 8, !dbg !3202
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !3203
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !3203
  %32 = load ptr, ptr %30, align 8, !dbg !3203
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !3204
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !3205
    #dbg_value(i64 %indvars.iv, !3155, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3157)
  %33 = load ptr, ptr %array4D, align 8, !dbg !3202
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !3203
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !3203
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !3203
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !3203
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !3204
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !3205
    #dbg_value(i64 %indvars.iv, !3155, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3157)
  %37 = load ptr, ptr %array4D, align 8, !dbg !3202
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !3203
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !3203
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !3203
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !3203
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !3204
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !3205
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3206
    #dbg_value(i64 %indvars.iv.next.3, !3155, !DIExpression(), !3157)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !3201
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !3201
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3201, !llvm.loop !3207

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !3201
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !3201

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3155, !DIExpression(), !3157)
  %41 = load ptr, ptr %array4D, align 8, !dbg !3202
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !3203
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !3203
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3203
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !3204
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !3205
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3206
    #dbg_value(i64 %indvars.iv.next.epil, !3155, !DIExpression(), !3157)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !3201
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !3201
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !3201, !llvm.loop !3209

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3D.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !3174
    #dbg_value(!DIArgList(i64 poison, i32 poison), !3156, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3157)
    #dbg_value(i32 poison, !3114, !DIExpression(), !3172)
  %conv1 = trunc i64 %mul to i32, !dbg !3158
    #dbg_value(i32 %conv1, !3156, !DIExpression(), !3157)
  %add.i = add i32 %conv1.i, %conv1, !dbg !3210
  %add = add i32 %add.i, %call6.i, !dbg !3211
    #dbg_value(i32 %add, !3156, !DIExpression(), !3157)
  ret i32 %add, !dbg !3212
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dint(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !3213 {
entry:
    #dbg_value(ptr %array3D, !3217, !DIExpression(), !3223)
    #dbg_value(i32 %dim0, !3218, !DIExpression(), !3223)
    #dbg_value(i32 %dim1, !3219, !DIExpression(), !3223)
    #dbg_value(i32 %dim2, !3220, !DIExpression(), !3223)
  %conv = sext i32 %dim0 to i64, !dbg !3224
  %mul = shl nsw i64 %conv, 3, !dbg !3225
    #dbg_value(i64 %mul, !3222, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3223)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3226
  store ptr %call, ptr %array3D, align 8, !dbg !3228
  %cmp = icmp eq ptr %call, null, !dbg !3229
  br i1 %cmp, label %if.then, label %if.end, !dbg !3230

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.61, !574, !DIExpression(), !3231)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.61) #9, !dbg !3233
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3234
  %.pre = load ptr, ptr %array3D, align 8, !dbg !3235
  br label %if.end, !dbg !3236

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3235
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3237
  %call6 = tail call i32 @get_mem2Dint(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !3238
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !3222, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3223)
    #dbg_value(i32 1, !3221, !DIExpression(), !3223)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !3239
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !3242

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3239
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3242
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3242
  %xtraiter = and i64 %1, 3, !dbg !3242
  %3 = icmp ult i64 %2, 3, !dbg !3242
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3242

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3242
  br label %for.body, !dbg !3242

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3221, !DIExpression(), !3223)
  %4 = load ptr, ptr %array3D, align 8, !dbg !3243
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3244
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3244
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3244
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !3245
  store ptr %add.ptr, ptr %5, align 8, !dbg !3246
    #dbg_value(i64 %indvars.iv, !3221, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3223)
  %7 = load ptr, ptr %array3D, align 8, !dbg !3243
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3244
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3244
  %10 = load ptr, ptr %8, align 8, !dbg !3244
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !3245
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3246
    #dbg_value(i64 %indvars.iv, !3221, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3223)
  %11 = load ptr, ptr %array3D, align 8, !dbg !3243
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3244
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3244
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3244
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3244
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !3245
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3246
    #dbg_value(i64 %indvars.iv, !3221, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3223)
  %15 = load ptr, ptr %array3D, align 8, !dbg !3243
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3244
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3244
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3244
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3244
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !3245
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3246
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3247
    #dbg_value(i64 %indvars.iv.next.3, !3221, !DIExpression(), !3223)
  %niter.next.3 = add i64 %niter, 4, !dbg !3242
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3242
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3242, !llvm.loop !3248

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3242
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3242

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3221, !DIExpression(), !3223)
  %19 = load ptr, ptr %array3D, align 8, !dbg !3243
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3244
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3244
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3244
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !3245
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3246
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3247
    #dbg_value(i64 %indvars.iv.next.epil, !3221, !DIExpression(), !3223)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3242
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3242
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3242, !llvm.loop !3250

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !3224
    #dbg_value(i32 %conv1, !3222, !DIExpression(), !3223)
  %add = add nsw i32 %call6, %conv1, !dbg !3251
    #dbg_value(i32 %add, !3222, !DIExpression(), !3223)
  ret i32 %add, !dbg !3252
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dint64(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !3253 {
entry:
    #dbg_value(ptr %array3D, !3257, !DIExpression(), !3263)
    #dbg_value(i32 %dim0, !3258, !DIExpression(), !3263)
    #dbg_value(i32 %dim1, !3259, !DIExpression(), !3263)
    #dbg_value(i32 %dim2, !3260, !DIExpression(), !3263)
  %conv = sext i32 %dim0 to i64, !dbg !3264
  %mul = shl nsw i64 %conv, 3, !dbg !3265
    #dbg_value(i64 %mul, !3262, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3263)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3266
  store ptr %call, ptr %array3D, align 8, !dbg !3268
  %cmp = icmp eq ptr %call, null, !dbg !3269
  br i1 %cmp, label %if.then, label %if.end, !dbg !3270

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.62, !574, !DIExpression(), !3271)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.62) #9, !dbg !3273
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3274
  %.pre = load ptr, ptr %array3D, align 8, !dbg !3275
  br label %if.end, !dbg !3276

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3275
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3277
  %call6 = tail call i32 @get_mem2Dint64(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !3278
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !3262, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3263)
    #dbg_value(i32 1, !3261, !DIExpression(), !3263)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !3279
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !3282

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3279
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3282
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3282
  %xtraiter = and i64 %1, 3, !dbg !3282
  %3 = icmp ult i64 %2, 3, !dbg !3282
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3282

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3282
  br label %for.body, !dbg !3282

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3261, !DIExpression(), !3263)
  %4 = load ptr, ptr %array3D, align 8, !dbg !3283
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3284
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3284
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3284
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !3285
  store ptr %add.ptr, ptr %5, align 8, !dbg !3286
    #dbg_value(i64 %indvars.iv, !3261, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3263)
  %7 = load ptr, ptr %array3D, align 8, !dbg !3283
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3284
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3284
  %10 = load ptr, ptr %8, align 8, !dbg !3284
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !3285
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3286
    #dbg_value(i64 %indvars.iv, !3261, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3263)
  %11 = load ptr, ptr %array3D, align 8, !dbg !3283
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3284
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3284
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3284
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3284
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !3285
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3286
    #dbg_value(i64 %indvars.iv, !3261, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3263)
  %15 = load ptr, ptr %array3D, align 8, !dbg !3283
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3284
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3284
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3284
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3284
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !3285
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3286
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3287
    #dbg_value(i64 %indvars.iv.next.3, !3261, !DIExpression(), !3263)
  %niter.next.3 = add i64 %niter, 4, !dbg !3282
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3282
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3282, !llvm.loop !3288

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3282
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3282

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3261, !DIExpression(), !3263)
  %19 = load ptr, ptr %array3D, align 8, !dbg !3283
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3284
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3284
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3284
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !3285
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3286
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3287
    #dbg_value(i64 %indvars.iv.next.epil, !3261, !DIExpression(), !3263)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3282
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3282
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3282, !llvm.loop !3290

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !3264
    #dbg_value(i32 %conv1, !3262, !DIExpression(), !3263)
  %add = add nsw i32 %call6, %conv1, !dbg !3291
    #dbg_value(i32 %add, !3262, !DIExpression(), !3263)
  ret i32 %add, !dbg !3292
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Ddistblk(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !3293 {
entry:
    #dbg_value(ptr %array3D, !3297, !DIExpression(), !3303)
    #dbg_value(i32 %dim0, !3298, !DIExpression(), !3303)
    #dbg_value(i32 %dim1, !3299, !DIExpression(), !3303)
    #dbg_value(i32 %dim2, !3300, !DIExpression(), !3303)
  %conv = sext i32 %dim0 to i64, !dbg !3304
  %mul = shl nsw i64 %conv, 3, !dbg !3305
    #dbg_value(i64 %mul, !3302, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3303)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3306
  store ptr %call, ptr %array3D, align 8, !dbg !3308
  %cmp = icmp eq ptr %call, null, !dbg !3309
  br i1 %cmp, label %if.then, label %if.end, !dbg !3310

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.63, !574, !DIExpression(), !3311)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.63) #9, !dbg !3313
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3314
  %.pre = load ptr, ptr %array3D, align 8, !dbg !3315
  br label %if.end, !dbg !3316

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3315
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3317
  %call6 = tail call i32 @get_mem2Ddistblk(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !3318
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !3302, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3303)
    #dbg_value(i32 1, !3301, !DIExpression(), !3303)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !3319
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !3322

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3319
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3322
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3322
  %xtraiter = and i64 %1, 3, !dbg !3322
  %3 = icmp ult i64 %2, 3, !dbg !3322
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3322

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3322
  br label %for.body, !dbg !3322

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3301, !DIExpression(), !3303)
  %4 = load ptr, ptr %array3D, align 8, !dbg !3323
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3324
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3324
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3324
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !3325
  store ptr %add.ptr, ptr %5, align 8, !dbg !3326
    #dbg_value(i64 %indvars.iv, !3301, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3303)
  %7 = load ptr, ptr %array3D, align 8, !dbg !3323
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3324
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3324
  %10 = load ptr, ptr %8, align 8, !dbg !3324
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !3325
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3326
    #dbg_value(i64 %indvars.iv, !3301, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3303)
  %11 = load ptr, ptr %array3D, align 8, !dbg !3323
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3324
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3324
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3324
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3324
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !3325
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3326
    #dbg_value(i64 %indvars.iv, !3301, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3303)
  %15 = load ptr, ptr %array3D, align 8, !dbg !3323
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3324
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3324
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3324
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3324
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !3325
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3326
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3327
    #dbg_value(i64 %indvars.iv.next.3, !3301, !DIExpression(), !3303)
  %niter.next.3 = add i64 %niter, 4, !dbg !3322
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3322
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3322, !llvm.loop !3328

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3322
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3322

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3301, !DIExpression(), !3303)
  %19 = load ptr, ptr %array3D, align 8, !dbg !3323
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3324
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3324
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3324
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !3325
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3326
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3327
    #dbg_value(i64 %indvars.iv.next.epil, !3301, !DIExpression(), !3303)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3322
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3322
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3322, !llvm.loop !3330

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !3304
    #dbg_value(i32 %conv1, !3302, !DIExpression(), !3303)
  %add = add nsw i32 %call6, %conv1, !dbg !3331
    #dbg_value(i32 %add, !3302, !DIExpression(), !3303)
  ret i32 %add, !dbg !3332
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dint(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !3333 {
entry:
    #dbg_value(ptr %array4D, !3337, !DIExpression(), !3344)
    #dbg_value(i32 %dim0, !3338, !DIExpression(), !3344)
    #dbg_value(i32 %dim1, !3339, !DIExpression(), !3344)
    #dbg_value(i32 %dim2, !3340, !DIExpression(), !3344)
    #dbg_value(i32 %dim3, !3341, !DIExpression(), !3344)
  %conv = sext i32 %dim0 to i64, !dbg !3345
  %mul = shl nsw i64 %conv, 3, !dbg !3346
    #dbg_value(i64 %mul, !3343, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3344)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3347
  store ptr %call, ptr %array4D, align 8, !dbg !3349
  %cmp = icmp eq ptr %call, null, !dbg !3350
  br i1 %cmp, label %if.then, label %if.end, !dbg !3351

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.64, !574, !DIExpression(), !3352)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.64) #9, !dbg !3354
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3355
  %.pre = load ptr, ptr %array4D, align 8, !dbg !3356
  br label %if.end, !dbg !3357

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3356
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3358
    #dbg_value(ptr %0, !3217, !DIExpression(), !3359)
    #dbg_value(i32 %mul5, !3218, !DIExpression(), !3359)
    #dbg_value(i32 %dim2, !3219, !DIExpression(), !3359)
    #dbg_value(i32 %dim3, !3220, !DIExpression(), !3359)
  %conv.i = sext i32 %mul5 to i64, !dbg !3361
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !3362
    #dbg_value(i64 %mul.i, !3222, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3359)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !3363
  store ptr %call.i22, ptr %0, align 8, !dbg !3364
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !3365
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3366

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.61, !574, !DIExpression(), !3367)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.61) #9, !dbg !3369
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3370
  %.pre.i = load ptr, ptr %0, align 8, !dbg !3371
  br label %if.end.i, !dbg !3372

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !3371
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !3373
  %call6.i = tail call i32 @get_mem2Dint(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !3374
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !3222, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3359)
    #dbg_value(i32 1, !3221, !DIExpression(), !3359)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !3375
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dint.exit, !dbg !3376

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !3375
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !3376
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !3376
  %xtraiter = and i64 %2, 3, !dbg !3376
  %4 = icmp ult i64 %3, 3, !dbg !3376
  br i1 %4, label %get_mem3Dint.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !3376

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !3376
  br label %for.body.i, !dbg !3376

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !3221, !DIExpression(), !3359)
  %5 = load ptr, ptr %0, align 8, !dbg !3377
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !3378
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !3378
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !3378
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !3379
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !3380
    #dbg_value(i64 %indvars.iv.i, !3221, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3359)
  %8 = load ptr, ptr %0, align 8, !dbg !3377
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !3378
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !3378
  %11 = load ptr, ptr %9, align 8, !dbg !3378
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !3379
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !3380
    #dbg_value(i64 %indvars.iv.i, !3221, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3359)
  %12 = load ptr, ptr %0, align 8, !dbg !3377
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !3378
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !3378
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !3378
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !3378
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !3379
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !3380
    #dbg_value(i64 %indvars.iv.i, !3221, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3359)
  %16 = load ptr, ptr %0, align 8, !dbg !3377
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !3378
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !3378
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !3378
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !3378
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !3379
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !3380
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !3381
    #dbg_value(i64 %indvars.iv.next.i.3, !3221, !DIExpression(), !3359)
  %niter.next.3 = add i64 %niter, 4, !dbg !3376
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3376
  br i1 %niter.ncmp.3, label %get_mem3Dint.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !3376, !llvm.loop !3382

get_mem3Dint.exit.loopexit.unr-lcssa:             ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3376
  br i1 %lcmp.mod.not, label %get_mem3Dint.exit, label %for.body.i.epil, !dbg !3376

for.body.i.epil:                                  ; preds = %get_mem3Dint.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dint.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dint.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !3221, !DIExpression(), !3359)
  %20 = load ptr, ptr %0, align 8, !dbg !3377
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !3378
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !3378
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !3378
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !3379
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !3380
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !3381
    #dbg_value(i64 %indvars.iv.next.i.epil, !3221, !DIExpression(), !3359)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3376
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3376
  br i1 %epil.iter.cmp.not, label %get_mem3Dint.exit, label %for.body.i.epil, !dbg !3376, !llvm.loop !3384

get_mem3Dint.exit:                                ; preds = %get_mem3Dint.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !3222, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !3359)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !3343, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !3344)
    #dbg_value(i32 1, !3342, !DIExpression(), !3344)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !3385
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !3388

for.body.lr.ph:                                   ; preds = %get_mem3Dint.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3385
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !3388
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !3388
  %xtraiter26 = and i64 %23, 3, !dbg !3388
  %25 = icmp ult i64 %24, 3, !dbg !3388
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3388

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !3388
  br label %for.body, !dbg !3388

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3342, !DIExpression(), !3344)
  %26 = load ptr, ptr %array4D, align 8, !dbg !3389
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !3390
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !3390
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !3390
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !3391
  store ptr %add.ptr, ptr %27, align 8, !dbg !3392
    #dbg_value(i64 %indvars.iv, !3342, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3344)
  %29 = load ptr, ptr %array4D, align 8, !dbg !3389
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !3390
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !3390
  %32 = load ptr, ptr %30, align 8, !dbg !3390
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !3391
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !3392
    #dbg_value(i64 %indvars.iv, !3342, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3344)
  %33 = load ptr, ptr %array4D, align 8, !dbg !3389
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !3390
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !3390
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !3390
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !3390
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !3391
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !3392
    #dbg_value(i64 %indvars.iv, !3342, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3344)
  %37 = load ptr, ptr %array4D, align 8, !dbg !3389
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !3390
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !3390
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !3390
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !3390
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !3391
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !3392
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3393
    #dbg_value(i64 %indvars.iv.next.3, !3342, !DIExpression(), !3344)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !3388
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !3388
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3388, !llvm.loop !3394

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !3388
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !3388

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3342, !DIExpression(), !3344)
  %41 = load ptr, ptr %array4D, align 8, !dbg !3389
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !3390
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !3390
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3390
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !3391
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !3392
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3393
    #dbg_value(i64 %indvars.iv.next.epil, !3342, !DIExpression(), !3344)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !3388
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !3388
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !3388, !llvm.loop !3396

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dint.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !3361
    #dbg_value(!DIArgList(i64 poison, i32 poison), !3343, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3344)
    #dbg_value(i32 poison, !3222, !DIExpression(), !3359)
  %conv1 = trunc i64 %mul to i32, !dbg !3345
    #dbg_value(i32 %conv1, !3343, !DIExpression(), !3344)
  %add.i = add i32 %conv1.i, %conv1, !dbg !3397
  %add = add i32 %add.i, %call6.i, !dbg !3398
    #dbg_value(i32 %add, !3343, !DIExpression(), !3344)
  ret i32 %add, !dbg !3399
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dint64(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !3400 {
entry:
    #dbg_value(ptr %array4D, !3405, !DIExpression(), !3412)
    #dbg_value(i32 %dim0, !3406, !DIExpression(), !3412)
    #dbg_value(i32 %dim1, !3407, !DIExpression(), !3412)
    #dbg_value(i32 %dim2, !3408, !DIExpression(), !3412)
    #dbg_value(i32 %dim3, !3409, !DIExpression(), !3412)
  %conv = sext i32 %dim0 to i64, !dbg !3413
  %mul = shl nsw i64 %conv, 3, !dbg !3414
    #dbg_value(i64 %mul, !3411, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3412)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3415
  store ptr %call, ptr %array4D, align 8, !dbg !3417
  %cmp = icmp eq ptr %call, null, !dbg !3418
  br i1 %cmp, label %if.then, label %if.end, !dbg !3419

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.65, !574, !DIExpression(), !3420)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.65) #9, !dbg !3422
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3423
  %.pre = load ptr, ptr %array4D, align 8, !dbg !3424
  br label %if.end, !dbg !3425

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3424
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3426
    #dbg_value(ptr %0, !3257, !DIExpression(), !3427)
    #dbg_value(i32 %mul5, !3258, !DIExpression(), !3427)
    #dbg_value(i32 %dim2, !3259, !DIExpression(), !3427)
    #dbg_value(i32 %dim3, !3260, !DIExpression(), !3427)
  %conv.i = sext i32 %mul5 to i64, !dbg !3429
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !3430
    #dbg_value(i64 %mul.i, !3262, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3427)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !3431
  store ptr %call.i22, ptr %0, align 8, !dbg !3432
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !3433
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3434

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.62, !574, !DIExpression(), !3435)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.62) #9, !dbg !3437
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3438
  %.pre.i = load ptr, ptr %0, align 8, !dbg !3439
  br label %if.end.i, !dbg !3440

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !3439
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !3441
  %call6.i = tail call i32 @get_mem2Dint64(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !3442
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !3262, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3427)
    #dbg_value(i32 1, !3261, !DIExpression(), !3427)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !3443
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dint64.exit, !dbg !3444

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !3443
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !3444
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !3444
  %xtraiter = and i64 %2, 3, !dbg !3444
  %4 = icmp ult i64 %3, 3, !dbg !3444
  br i1 %4, label %get_mem3Dint64.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !3444

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !3444
  br label %for.body.i, !dbg !3444

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !3261, !DIExpression(), !3427)
  %5 = load ptr, ptr %0, align 8, !dbg !3445
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !3446
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !3446
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !3446
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !3447
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !3448
    #dbg_value(i64 %indvars.iv.i, !3261, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3427)
  %8 = load ptr, ptr %0, align 8, !dbg !3445
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !3446
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !3446
  %11 = load ptr, ptr %9, align 8, !dbg !3446
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !3447
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !3448
    #dbg_value(i64 %indvars.iv.i, !3261, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3427)
  %12 = load ptr, ptr %0, align 8, !dbg !3445
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !3446
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !3446
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !3446
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !3446
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !3447
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !3448
    #dbg_value(i64 %indvars.iv.i, !3261, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3427)
  %16 = load ptr, ptr %0, align 8, !dbg !3445
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !3446
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !3446
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !3446
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !3446
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !3447
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !3448
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !3449
    #dbg_value(i64 %indvars.iv.next.i.3, !3261, !DIExpression(), !3427)
  %niter.next.3 = add i64 %niter, 4, !dbg !3444
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3444
  br i1 %niter.ncmp.3, label %get_mem3Dint64.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !3444, !llvm.loop !3450

get_mem3Dint64.exit.loopexit.unr-lcssa:           ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3444
  br i1 %lcmp.mod.not, label %get_mem3Dint64.exit, label %for.body.i.epil, !dbg !3444

for.body.i.epil:                                  ; preds = %get_mem3Dint64.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dint64.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dint64.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !3261, !DIExpression(), !3427)
  %20 = load ptr, ptr %0, align 8, !dbg !3445
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !3446
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !3446
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !3446
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !3447
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !3448
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !3449
    #dbg_value(i64 %indvars.iv.next.i.epil, !3261, !DIExpression(), !3427)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3444
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3444
  br i1 %epil.iter.cmp.not, label %get_mem3Dint64.exit, label %for.body.i.epil, !dbg !3444, !llvm.loop !3452

get_mem3Dint64.exit:                              ; preds = %get_mem3Dint64.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !3262, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !3427)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !3411, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !3412)
    #dbg_value(i32 1, !3410, !DIExpression(), !3412)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !3453
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !3456

for.body.lr.ph:                                   ; preds = %get_mem3Dint64.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3453
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !3456
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !3456
  %xtraiter26 = and i64 %23, 3, !dbg !3456
  %25 = icmp ult i64 %24, 3, !dbg !3456
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3456

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !3456
  br label %for.body, !dbg !3456

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3410, !DIExpression(), !3412)
  %26 = load ptr, ptr %array4D, align 8, !dbg !3457
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !3458
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !3458
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !3458
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !3459
  store ptr %add.ptr, ptr %27, align 8, !dbg !3460
    #dbg_value(i64 %indvars.iv, !3410, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3412)
  %29 = load ptr, ptr %array4D, align 8, !dbg !3457
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !3458
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !3458
  %32 = load ptr, ptr %30, align 8, !dbg !3458
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !3459
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !3460
    #dbg_value(i64 %indvars.iv, !3410, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3412)
  %33 = load ptr, ptr %array4D, align 8, !dbg !3457
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !3458
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !3458
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !3458
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !3458
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !3459
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !3460
    #dbg_value(i64 %indvars.iv, !3410, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3412)
  %37 = load ptr, ptr %array4D, align 8, !dbg !3457
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !3458
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !3458
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !3458
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !3458
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !3459
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !3460
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3461
    #dbg_value(i64 %indvars.iv.next.3, !3410, !DIExpression(), !3412)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !3456
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !3456
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3456, !llvm.loop !3462

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !3456
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !3456

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3410, !DIExpression(), !3412)
  %41 = load ptr, ptr %array4D, align 8, !dbg !3457
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !3458
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !3458
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3458
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !3459
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !3460
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3461
    #dbg_value(i64 %indvars.iv.next.epil, !3410, !DIExpression(), !3412)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !3456
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !3456
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !3456, !llvm.loop !3464

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dint64.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !3429
    #dbg_value(!DIArgList(i64 poison, i32 poison), !3411, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3412)
    #dbg_value(i32 poison, !3262, !DIExpression(), !3427)
  %conv1 = trunc i64 %mul to i32, !dbg !3413
    #dbg_value(i32 %conv1, !3411, !DIExpression(), !3412)
  %add.i = add i32 %conv1.i, %conv1, !dbg !3465
  %add = add i32 %add.i, %call6.i, !dbg !3466
    #dbg_value(i32 %add, !3411, !DIExpression(), !3412)
  ret i32 %add, !dbg !3467
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Ddistblk(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !3468 {
entry:
    #dbg_value(ptr %array4D, !3473, !DIExpression(), !3480)
    #dbg_value(i32 %dim0, !3474, !DIExpression(), !3480)
    #dbg_value(i32 %dim1, !3475, !DIExpression(), !3480)
    #dbg_value(i32 %dim2, !3476, !DIExpression(), !3480)
    #dbg_value(i32 %dim3, !3477, !DIExpression(), !3480)
  %conv = sext i32 %dim0 to i64, !dbg !3481
  %mul = shl nsw i64 %conv, 3, !dbg !3482
    #dbg_value(i64 %mul, !3479, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3480)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3483
  store ptr %call, ptr %array4D, align 8, !dbg !3485
  %cmp = icmp eq ptr %call, null, !dbg !3486
  br i1 %cmp, label %if.then, label %if.end, !dbg !3487

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.66, !574, !DIExpression(), !3488)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.66) #9, !dbg !3490
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3491
  %.pre = load ptr, ptr %array4D, align 8, !dbg !3492
  br label %if.end, !dbg !3493

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3492
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3494
    #dbg_value(ptr %0, !3297, !DIExpression(), !3495)
    #dbg_value(i32 %mul5, !3298, !DIExpression(), !3495)
    #dbg_value(i32 %dim2, !3299, !DIExpression(), !3495)
    #dbg_value(i32 %dim3, !3300, !DIExpression(), !3495)
  %conv.i = sext i32 %mul5 to i64, !dbg !3497
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !3498
    #dbg_value(i64 %mul.i, !3302, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3495)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !3499
  store ptr %call.i22, ptr %0, align 8, !dbg !3500
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !3501
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !3502

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.63, !574, !DIExpression(), !3503)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.63) #9, !dbg !3505
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3506
  %.pre.i = load ptr, ptr %0, align 8, !dbg !3507
  br label %if.end.i, !dbg !3508

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !3507
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !3509
  %call6.i = tail call i32 @get_mem2Ddistblk(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !3510
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !3302, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3495)
    #dbg_value(i32 1, !3301, !DIExpression(), !3495)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !3511
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Ddistblk.exit, !dbg !3512

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !3511
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !3512
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !3512
  %xtraiter = and i64 %2, 3, !dbg !3512
  %4 = icmp ult i64 %3, 3, !dbg !3512
  br i1 %4, label %get_mem3Ddistblk.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !3512

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !3512
  br label %for.body.i, !dbg !3512

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !3301, !DIExpression(), !3495)
  %5 = load ptr, ptr %0, align 8, !dbg !3513
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !3514
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !3514
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !3514
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !3515
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !3516
    #dbg_value(i64 %indvars.iv.i, !3301, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3495)
  %8 = load ptr, ptr %0, align 8, !dbg !3513
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !3514
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !3514
  %11 = load ptr, ptr %9, align 8, !dbg !3514
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !3515
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !3516
    #dbg_value(i64 %indvars.iv.i, !3301, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3495)
  %12 = load ptr, ptr %0, align 8, !dbg !3513
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !3514
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !3514
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !3514
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !3514
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !3515
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !3516
    #dbg_value(i64 %indvars.iv.i, !3301, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3495)
  %16 = load ptr, ptr %0, align 8, !dbg !3513
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !3514
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !3514
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !3514
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !3514
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !3515
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !3516
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !3517
    #dbg_value(i64 %indvars.iv.next.i.3, !3301, !DIExpression(), !3495)
  %niter.next.3 = add i64 %niter, 4, !dbg !3512
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3512
  br i1 %niter.ncmp.3, label %get_mem3Ddistblk.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !3512, !llvm.loop !3518

get_mem3Ddistblk.exit.loopexit.unr-lcssa:         ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3512
  br i1 %lcmp.mod.not, label %get_mem3Ddistblk.exit, label %for.body.i.epil, !dbg !3512

for.body.i.epil:                                  ; preds = %get_mem3Ddistblk.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Ddistblk.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Ddistblk.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !3301, !DIExpression(), !3495)
  %20 = load ptr, ptr %0, align 8, !dbg !3513
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !3514
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !3514
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !3514
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !3515
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !3516
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !3517
    #dbg_value(i64 %indvars.iv.next.i.epil, !3301, !DIExpression(), !3495)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3512
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3512
  br i1 %epil.iter.cmp.not, label %get_mem3Ddistblk.exit, label %for.body.i.epil, !dbg !3512, !llvm.loop !3520

get_mem3Ddistblk.exit:                            ; preds = %get_mem3Ddistblk.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !3302, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !3495)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !3479, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !3480)
    #dbg_value(i32 1, !3478, !DIExpression(), !3480)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !3521
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !3524

for.body.lr.ph:                                   ; preds = %get_mem3Ddistblk.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3521
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !3524
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !3524
  %xtraiter26 = and i64 %23, 3, !dbg !3524
  %25 = icmp ult i64 %24, 3, !dbg !3524
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3524

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !3524
  br label %for.body, !dbg !3524

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3478, !DIExpression(), !3480)
  %26 = load ptr, ptr %array4D, align 8, !dbg !3525
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !3526
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !3526
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !3526
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !3527
  store ptr %add.ptr, ptr %27, align 8, !dbg !3528
    #dbg_value(i64 %indvars.iv, !3478, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3480)
  %29 = load ptr, ptr %array4D, align 8, !dbg !3525
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !3526
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !3526
  %32 = load ptr, ptr %30, align 8, !dbg !3526
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !3527
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !3528
    #dbg_value(i64 %indvars.iv, !3478, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3480)
  %33 = load ptr, ptr %array4D, align 8, !dbg !3525
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !3526
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !3526
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !3526
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !3526
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !3527
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !3528
    #dbg_value(i64 %indvars.iv, !3478, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3480)
  %37 = load ptr, ptr %array4D, align 8, !dbg !3525
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !3526
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !3526
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !3526
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !3526
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !3527
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !3528
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3529
    #dbg_value(i64 %indvars.iv.next.3, !3478, !DIExpression(), !3480)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !3524
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !3524
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3524, !llvm.loop !3530

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !3524
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !3524

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3478, !DIExpression(), !3480)
  %41 = load ptr, ptr %array4D, align 8, !dbg !3525
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !3526
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !3526
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3526
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !3527
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !3528
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3529
    #dbg_value(i64 %indvars.iv.next.epil, !3478, !DIExpression(), !3480)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !3524
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !3524
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !3524, !llvm.loop !3532

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Ddistblk.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !3497
    #dbg_value(!DIArgList(i64 poison, i32 poison), !3479, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3480)
    #dbg_value(i32 poison, !3302, !DIExpression(), !3495)
  %conv1 = trunc i64 %mul to i32, !dbg !3481
    #dbg_value(i32 %conv1, !3479, !DIExpression(), !3480)
  %add.i = add i32 %conv1.i, %conv1, !dbg !3533
  %add = add i32 %add.i, %call6.i, !dbg !3534
    #dbg_value(i32 %add, !3479, !DIExpression(), !3480)
  ret i32 %add, !dbg !3535
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5Dint(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4) local_unnamed_addr #0 !dbg !3536 {
entry:
    #dbg_value(ptr %array5D, !3541, !DIExpression(), !3549)
    #dbg_value(i32 %dim0, !3542, !DIExpression(), !3549)
    #dbg_value(i32 %dim1, !3543, !DIExpression(), !3549)
    #dbg_value(i32 %dim2, !3544, !DIExpression(), !3549)
    #dbg_value(i32 %dim3, !3545, !DIExpression(), !3549)
    #dbg_value(i32 %dim4, !3546, !DIExpression(), !3549)
  %conv = sext i32 %dim0 to i64, !dbg !3550
  %mul = shl nsw i64 %conv, 3, !dbg !3551
    #dbg_value(i64 %mul, !3548, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !3549)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3552
  store ptr %call, ptr %array5D, align 8, !dbg !3554
  %cmp = icmp eq ptr %call, null, !dbg !3555
  br i1 %cmp, label %if.then, label %if.end, !dbg !3556

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.67, !574, !DIExpression(), !3557)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.67) #9, !dbg !3559
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3560
  %.pre = load ptr, ptr %array5D, align 8, !dbg !3561
  br label %if.end, !dbg !3562

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !3561
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !3563
  %call6 = tail call i32 @get_mem4Dint(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4), !dbg !3564
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !3548, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !3549)
    #dbg_value(i32 1, !3547, !DIExpression(), !3549)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !3565
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !3568

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3565
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !3568
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !3568
  %xtraiter = and i64 %1, 3, !dbg !3568
  %3 = icmp ult i64 %2, 3, !dbg !3568
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3568

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !3568
  br label %for.body, !dbg !3568

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !3547, !DIExpression(), !3549)
  %4 = load ptr, ptr %array5D, align 8, !dbg !3569
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !3570
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !3570
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !3570
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !3571
  store ptr %add.ptr, ptr %5, align 8, !dbg !3572
    #dbg_value(i64 %indvars.iv, !3547, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3549)
  %7 = load ptr, ptr %array5D, align 8, !dbg !3569
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !3570
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !3570
  %10 = load ptr, ptr %8, align 8, !dbg !3570
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !3571
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !3572
    #dbg_value(i64 %indvars.iv, !3547, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3549)
  %11 = load ptr, ptr %array5D, align 8, !dbg !3569
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !3570
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !3570
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !3570
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !3570
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !3571
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !3572
    #dbg_value(i64 %indvars.iv, !3547, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3549)
  %15 = load ptr, ptr %array5D, align 8, !dbg !3569
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !3570
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !3570
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !3570
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !3570
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !3571
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !3572
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !3573
    #dbg_value(i64 %indvars.iv.next.3, !3547, !DIExpression(), !3549)
  %niter.next.3 = add i64 %niter, 4, !dbg !3568
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !3568
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3568, !llvm.loop !3574

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3568
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3568

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3547, !DIExpression(), !3549)
  %19 = load ptr, ptr %array5D, align 8, !dbg !3569
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !3570
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !3570
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !3570
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !3571
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !3572
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3573
    #dbg_value(i64 %indvars.iv.next.epil, !3547, !DIExpression(), !3549)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3568
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3568
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3568, !llvm.loop !3576

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !3550
    #dbg_value(i32 %conv1, !3548, !DIExpression(), !3549)
  %add = add nsw i32 %call6, %conv1, !dbg !3577
    #dbg_value(i32 %add, !3548, !DIExpression(), !3549)
  ret i32 %add, !dbg !3578
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2D(ptr noundef %array2D) local_unnamed_addr #0 !dbg !3579 {
entry:
    #dbg_value(ptr %array2D, !3583, !DIExpression(), !3584)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !3585
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !3587

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !3588
  %tobool1.not = icmp eq ptr %0, null, !dbg !3588
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !3591

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3592
  br label %if.end, !dbg !3592

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3593
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !3594
  br label %if.end4, !dbg !3595

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3596
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !3598
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dint(ptr noundef %array2D) local_unnamed_addr #0 !dbg !3599 {
entry:
    #dbg_value(ptr %array2D, !3603, !DIExpression(), !3604)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !3605
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !3607

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !3608
  %tobool1.not = icmp eq ptr %0, null, !dbg !3608
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !3611

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3612
  br label %if.end, !dbg !3612

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3613
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !3614
  br label %if.end4, !dbg !3615

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3616
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !3618
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2DintWithPad(ptr noundef %array2D, i32 noundef %iPadY, i32 noundef %iPadX) local_unnamed_addr #0 !dbg !3619 {
entry:
    #dbg_value(ptr %array2D, !3623, !DIExpression(), !3626)
    #dbg_value(i32 %iPadY, !3624, !DIExpression(), !3626)
    #dbg_value(i32 %iPadX, !3625, !DIExpression(), !3626)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !3627
  br i1 %tobool.not, label %if.else6, label %if.then, !dbg !3629

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !3630
  %tobool1.not = icmp eq ptr %0, null, !dbg !3630
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !3633

if.then2:                                         ; preds = %if.then
  %sub = sub nsw i32 0, %iPadY, !dbg !3634
  %idxprom = sext i32 %sub to i64, !dbg !3635
  %arrayidx = getelementptr inbounds ptr, ptr %array2D, i64 %idxprom, !dbg !3635
  %1 = load ptr, ptr %arrayidx, align 8, !dbg !3635
  %idx.ext = sext i32 %iPadX to i64, !dbg !3636
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !3636
  %add.ptr = getelementptr inbounds i32, ptr %1, i64 %idx.neg, !dbg !3636
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !3637
  br label %if.end, !dbg !3637

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.70, i32 noundef 100) #9, !dbg !3638
  %.pre = sub nsw i32 0, %iPadY, !dbg !3639
  %.pre12 = sext i32 %.pre to i64, !dbg !3640
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %idxprom4.pre-phi = phi i64 [ %.pre12, %if.else ], [ %idxprom, %if.then2 ], !dbg !3640
  %arrayidx5 = getelementptr inbounds ptr, ptr %array2D, i64 %idxprom4.pre-phi, !dbg !3640
  tail call void @free(ptr noundef %arrayidx5) #9, !dbg !3641
  br label %if.end7, !dbg !3642

if.else6:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.70, i32 noundef 100) #9, !dbg !3643
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.end
  ret void, !dbg !3645
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dint64(ptr noundef %array2D) local_unnamed_addr #0 !dbg !3646 {
entry:
    #dbg_value(ptr %array2D, !3650, !DIExpression(), !3651)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !3652
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !3654

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !3655
  %tobool1.not = icmp eq ptr %0, null, !dbg !3655
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !3658

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3659
  br label %if.end, !dbg !3659

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3660
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !3661
  br label %if.end4, !dbg !3662

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3663
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !3665
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3D(ptr noundef %array3D) local_unnamed_addr #0 !dbg !3666 {
entry:
    #dbg_value(ptr %array3D, !3670, !DIExpression(), !3671)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !3672
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3674

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !3675
    #dbg_value(ptr %0, !3583, !DIExpression(), !3677)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3679
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !3680

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3681
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !3681
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !3682

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3683
  br label %if.end.i, !dbg !3683

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3684
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3685
  br label %free_mem2D.exit, !dbg !3686

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3687
  br label %free_mem2D.exit

free_mem2D.exit:                                  ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !3688
  br label %if.end, !dbg !3689

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.72, i32 noundef 100) #9, !dbg !3690
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2D.exit
  ret void, !dbg !3692
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4D(ptr noundef %array4D) local_unnamed_addr #0 !dbg !3693 {
entry:
    #dbg_value(ptr %array4D, !3697, !DIExpression(), !3698)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !3699
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3701

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !3702
    #dbg_value(ptr %0, !3670, !DIExpression(), !3704)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3706
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !3707

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3708
    #dbg_value(ptr %1, !3583, !DIExpression(), !3709)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !3711
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !3712

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !3713
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !3713
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !3714

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !3715
  br label %if.end.i.i, !dbg !3715

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3716
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3717
  br label %free_mem2D.exit.i, !dbg !3718

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.68, i32 noundef 100) #9, !dbg !3719
  br label %free_mem2D.exit.i

free_mem2D.exit.i:                                ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3720
  br label %free_mem3D.exit, !dbg !3721

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.72, i32 noundef 100) #9, !dbg !3722
  br label %free_mem3D.exit

free_mem3D.exit:                                  ; preds = %free_mem2D.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !3723
  br label %if.end, !dbg !3724

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.73, i32 noundef 100) #9, !dbg !3725
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3D.exit
  ret void, !dbg !3727
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dint(ptr noundef %array3D) local_unnamed_addr #0 !dbg !3728 {
entry:
    #dbg_value(ptr %array3D, !3732, !DIExpression(), !3733)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !3734
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3736

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !3737
    #dbg_value(ptr %0, !3603, !DIExpression(), !3739)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3741
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !3742

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3743
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !3743
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !3744

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3745
  br label %if.end.i, !dbg !3745

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3746
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3747
  br label %free_mem2Dint.exit, !dbg !3748

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3749
  br label %free_mem2Dint.exit

free_mem2Dint.exit:                               ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !3750
  br label %if.end, !dbg !3751

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.74, i32 noundef 100) #9, !dbg !3752
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dint.exit
  ret void, !dbg !3754
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dint64(ptr noundef %array3D) local_unnamed_addr #0 !dbg !3755 {
entry:
    #dbg_value(ptr %array3D, !3759, !DIExpression(), !3760)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !3761
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3763

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !3764
    #dbg_value(ptr %0, !3650, !DIExpression(), !3766)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3768
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !3769

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3770
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !3770
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !3771

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3772
  br label %if.end.i, !dbg !3772

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3773
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3774
  br label %free_mem2Dint64.exit, !dbg !3775

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3776
  br label %free_mem2Dint64.exit

free_mem2Dint64.exit:                             ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !3777
  br label %if.end, !dbg !3778

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.75, i32 noundef 100) #9, !dbg !3779
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dint64.exit
  ret void, !dbg !3781
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Ddistblk(ptr noundef %array3D) local_unnamed_addr #0 !dbg !3782 {
entry:
    #dbg_value(ptr %array3D, !3786, !DIExpression(), !3787)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !3788
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3790

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !3791
    #dbg_value(ptr %0, !3793, !DIExpression(), !3798)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3800
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !3802

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3803
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !3803
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !3806

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3807
  br label %if.end.i, !dbg !3807

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3808
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3809
  br label %free_mem2Ddistblk.exit, !dbg !3810

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3811
  br label %free_mem2Ddistblk.exit

free_mem2Ddistblk.exit:                           ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !3813
  br label %if.end, !dbg !3814

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.76, i32 noundef 100) #9, !dbg !3815
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Ddistblk.exit
  ret void, !dbg !3817
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Ddistblk(ptr noundef %array2D) local_unnamed_addr #0 !dbg !3794 {
entry:
    #dbg_value(ptr %array2D, !3793, !DIExpression(), !3818)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !3819
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !3820

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !3821
  %tobool1.not = icmp eq ptr %0, null, !dbg !3821
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !3822

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3823
  br label %if.end, !dbg !3823

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3824
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !3825
  br label %if.end4, !dbg !3826

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3827
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !3828
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dint(ptr noundef %array4D) local_unnamed_addr #0 !dbg !3829 {
entry:
    #dbg_value(ptr %array4D, !3833, !DIExpression(), !3834)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !3835
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3837

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !3838
    #dbg_value(ptr %0, !3732, !DIExpression(), !3840)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3842
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !3843

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3844
    #dbg_value(ptr %1, !3603, !DIExpression(), !3845)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !3847
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !3848

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !3849
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !3849
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !3850

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !3851
  br label %if.end.i.i, !dbg !3851

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3852
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3853
  br label %free_mem2Dint.exit.i, !dbg !3854

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.69, i32 noundef 100) #9, !dbg !3855
  br label %free_mem2Dint.exit.i

free_mem2Dint.exit.i:                             ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3856
  br label %free_mem3Dint.exit, !dbg !3857

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.74, i32 noundef 100) #9, !dbg !3858
  br label %free_mem3Dint.exit

free_mem3Dint.exit:                               ; preds = %free_mem2Dint.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !3859
  br label %if.end, !dbg !3860

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.77, i32 noundef 100) #9, !dbg !3861
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dint.exit
  ret void, !dbg !3863
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dint64(ptr noundef %array4D) local_unnamed_addr #0 !dbg !3864 {
entry:
    #dbg_value(ptr %array4D, !3868, !DIExpression(), !3869)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !3870
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3872

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !3873
    #dbg_value(ptr %0, !3759, !DIExpression(), !3875)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3877
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !3878

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3879
    #dbg_value(ptr %1, !3650, !DIExpression(), !3880)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !3882
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !3883

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !3884
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !3884
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !3885

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !3886
  br label %if.end.i.i, !dbg !3886

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3887
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3888
  br label %free_mem2Dint64.exit.i, !dbg !3889

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.71, i32 noundef 100) #9, !dbg !3890
  br label %free_mem2Dint64.exit.i

free_mem2Dint64.exit.i:                           ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3891
  br label %free_mem3Dint64.exit, !dbg !3892

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.75, i32 noundef 100) #9, !dbg !3893
  br label %free_mem3Dint64.exit

free_mem3Dint64.exit:                             ; preds = %free_mem2Dint64.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !3894
  br label %if.end, !dbg !3895

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.78, i32 noundef 100) #9, !dbg !3896
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dint64.exit
  ret void, !dbg !3898
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Ddistblk(ptr noundef %array4D) local_unnamed_addr #0 !dbg !3899 {
entry:
    #dbg_value(ptr %array4D, !3903, !DIExpression(), !3904)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !3905
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3907

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !3908
    #dbg_value(ptr %0, !3786, !DIExpression(), !3910)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !3912
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !3913

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !3914
    #dbg_value(ptr %1, !3793, !DIExpression(), !3915)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !3917
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !3918

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !3919
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !3919
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !3920

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !3921
  br label %if.end.i.i, !dbg !3921

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3922
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !3923
  br label %free_mem2Ddistblk.exit.i, !dbg !3924

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.116, i32 noundef 100) #9, !dbg !3925
  br label %free_mem2Ddistblk.exit.i

free_mem2Ddistblk.exit.i:                         ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !3926
  br label %free_mem3Ddistblk.exit, !dbg !3927

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.76, i32 noundef 100) #9, !dbg !3928
  br label %free_mem3Ddistblk.exit

free_mem3Ddistblk.exit:                           ; preds = %free_mem2Ddistblk.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !3929
  br label %if.end, !dbg !3930

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.79, i32 noundef 100) #9, !dbg !3931
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Ddistblk.exit
  ret void, !dbg !3933
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5Dint(ptr noundef %array5D) local_unnamed_addr #0 !dbg !3934 {
entry:
    #dbg_value(ptr %array5D, !3938, !DIExpression(), !3939)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !3940
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !3942

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !3943
  tail call void @free_mem4Dint(ptr noundef %0), !dbg !3945
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !3946
  br label %if.end, !dbg !3947

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.80, i32 noundef 100) #9, !dbg !3948
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3950
}

; Function Attrs: nofree nounwind
declare !dbg !3951 noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i64 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #7

; Function Attrs: nounwind uwtable
define dso_local noalias noundef ptr @new_mem2Duint16(i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !3959 {
entry:
    #dbg_value(i32 %dim0, !3963, !DIExpression(), !3967)
    #dbg_value(i32 %dim1, !3964, !DIExpression(), !3967)
  %conv = sext i32 %dim0 to i64, !dbg !3968
  %mul = shl nsw i64 %conv, 3, !dbg !3970
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !3971
    #dbg_value(ptr %call, !3966, !DIExpression(), !3967)
  %cmp = icmp eq ptr %call, null, !dbg !3972
  br i1 %cmp, label %if.then, label %if.end, !dbg !3973

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.82, !574, !DIExpression(), !3974)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82) #9, !dbg !3976
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3977
  br label %if.end, !dbg !3978

if.end:                                           ; preds = %if.then, %entry
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !3979
  %conv3 = sext i32 %mul2 to i64, !dbg !3981
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 2) #10, !dbg !3982
  store ptr %call4, ptr %call, align 8, !dbg !3983
  %cmp5 = icmp eq ptr %call4, null, !dbg !3984
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3985

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.82, !574, !DIExpression(), !3986)
  %call.i22 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82) #9, !dbg !3988
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !3989
  br label %if.end8, !dbg !3990

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !3965, !DIExpression(), !3967)
  %cmp923 = icmp sgt i32 %dim0, 1, !dbg !3991
  br i1 %cmp923, label %for.body.lr.ph, label %for.end, !dbg !3994

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !3991
  %load_initial = load ptr, ptr %call, align 8
  %0 = add nsw i64 %wide.trip.count, -1, !dbg !3994
  %1 = add nsw i64 %wide.trip.count, -2, !dbg !3994
  %xtraiter = and i64 %0, 7, !dbg !3994
  %2 = icmp ult i64 %1, 7, !dbg !3994
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !3994

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %0, -8, !dbg !3994
  %invariant.gep = getelementptr i8, ptr %call, i64 8, !dbg !3994
  %invariant.gep26 = getelementptr i8, ptr %call, i64 16, !dbg !3994
  %invariant.gep28 = getelementptr i8, ptr %call, i64 24, !dbg !3994
  %invariant.gep30 = getelementptr i8, ptr %call, i64 32, !dbg !3994
  %invariant.gep32 = getelementptr i8, ptr %call, i64 40, !dbg !3994
  %invariant.gep34 = getelementptr i8, ptr %call, i64 48, !dbg !3994
  %invariant.gep36 = getelementptr i8, ptr %call, i64 56, !dbg !3994
  br label %for.body, !dbg !3994

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %store_forwarded = phi ptr [ %load_initial, %for.body.lr.ph.new ], [ %add.ptr.7, %for.body ], !dbg !3995
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.7, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.7, %for.body ]
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(), !3967)
  %3 = getelementptr ptr, ptr %call, i64 %indvars.iv, !dbg !3995
  %add.ptr = getelementptr inbounds i16, ptr %store_forwarded, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr, ptr %3, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !3967)
  %gep = getelementptr ptr, ptr %invariant.gep, i64 %indvars.iv, !dbg !3995
  %add.ptr.1 = getelementptr inbounds i16, ptr %add.ptr, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.1, ptr %gep, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !3967)
  %gep27 = getelementptr ptr, ptr %invariant.gep26, i64 %indvars.iv, !dbg !3995
  %add.ptr.2 = getelementptr inbounds i16, ptr %add.ptr.1, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.2, ptr %gep27, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !3967)
  %gep29 = getelementptr ptr, ptr %invariant.gep28, i64 %indvars.iv, !dbg !3995
  %add.ptr.3 = getelementptr inbounds i16, ptr %add.ptr.2, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.3, ptr %gep29, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 4, DW_OP_stack_value), !3967)
  %gep31 = getelementptr ptr, ptr %invariant.gep30, i64 %indvars.iv, !dbg !3995
  %add.ptr.4 = getelementptr inbounds i16, ptr %add.ptr.3, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.4, ptr %gep31, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 5, DW_OP_stack_value), !3967)
  %gep33 = getelementptr ptr, ptr %invariant.gep32, i64 %indvars.iv, !dbg !3995
  %add.ptr.5 = getelementptr inbounds i16, ptr %add.ptr.4, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.5, ptr %gep33, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 6, DW_OP_stack_value), !3967)
  %gep35 = getelementptr ptr, ptr %invariant.gep34, i64 %indvars.iv, !dbg !3995
  %add.ptr.6 = getelementptr inbounds i16, ptr %add.ptr.5, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.6, ptr %gep35, align 8, !dbg !3997
    #dbg_value(i64 %indvars.iv, !3965, !DIExpression(DW_OP_plus_uconst, 7, DW_OP_stack_value), !3967)
  %gep37 = getelementptr ptr, ptr %invariant.gep36, i64 %indvars.iv, !dbg !3995
  %add.ptr.7 = getelementptr inbounds i16, ptr %add.ptr.6, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.7, ptr %gep37, align 8, !dbg !3997
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8, !dbg !3998
    #dbg_value(i64 %indvars.iv.next.7, !3965, !DIExpression(), !3967)
  %niter.next.7 = add i64 %niter, 8, !dbg !3994
  %niter.ncmp.7 = icmp eq i64 %niter.next.7, %unroll_iter, !dbg !3994
  br i1 %niter.ncmp.7, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !3994, !llvm.loop !3999

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %store_forwarded.unr = phi ptr [ %load_initial, %for.body.lr.ph ], [ %add.ptr.7, %for.body ]
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !3994
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !3994

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %store_forwarded.epil = phi ptr [ %add.ptr.epil, %for.body.epil ], [ %store_forwarded.unr, %for.end.loopexit.unr-lcssa ], !dbg !3995
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !3965, !DIExpression(), !3967)
  %4 = getelementptr ptr, ptr %call, i64 %indvars.iv.epil, !dbg !3995
  %add.ptr.epil = getelementptr inbounds i16, ptr %store_forwarded.epil, i64 %idx.ext, !dbg !3996
  store ptr %add.ptr.epil, ptr %4, align 8, !dbg !3997
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !3998
    #dbg_value(i64 %indvars.iv.next.epil, !3965, !DIExpression(), !3967)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !3994
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !3994
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !3994, !llvm.loop !4001

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  ret ptr %call, !dbg !4002
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Duint16(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !4003 {
entry:
    #dbg_value(ptr %array2D, !4007, !DIExpression(), !4011)
    #dbg_value(i32 %dim0, !4008, !DIExpression(), !4011)
    #dbg_value(i32 %dim1, !4009, !DIExpression(), !4011)
  %conv = sext i32 %dim0 to i64, !dbg !4012
  %mul = shl nsw i64 %conv, 3, !dbg !4014
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4015
  store ptr %call, ptr %array2D, align 8, !dbg !4016
  %cmp = icmp eq ptr %call, null, !dbg !4017
  br i1 %cmp, label %if.then, label %if.end, !dbg !4018

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.82, !574, !DIExpression(), !4019)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82) #9, !dbg !4021
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4022
  %.pre = load ptr, ptr %array2D, align 8, !dbg !4023
  br label %if.end, !dbg !4025

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4023
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4026
  %conv3 = sext i32 %mul2 to i64, !dbg !4027
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 2) #10, !dbg !4028
  store ptr %call4, ptr %0, align 8, !dbg !4029
  %cmp5 = icmp eq ptr %call4, null, !dbg !4030
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4031

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.82, !574, !DIExpression(), !4032)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82) #9, !dbg !4034
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4035
  br label %if.end8, !dbg !4036

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !4010, !DIExpression(), !4011)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !4037
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !4040

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4037
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4040
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4040
  %xtraiter = and i64 %1, 3, !dbg !4040
  %3 = icmp ult i64 %2, 3, !dbg !4040
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4040

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4040
  br label %for.body, !dbg !4040

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4010, !DIExpression(), !4011)
  %4 = load ptr, ptr %array2D, align 8, !dbg !4041
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4042
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4042
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4042
  %add.ptr = getelementptr inbounds i16, ptr %6, i64 %idx.ext, !dbg !4043
  store ptr %add.ptr, ptr %5, align 8, !dbg !4044
    #dbg_value(i64 %indvars.iv, !4010, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4011)
  %7 = load ptr, ptr %array2D, align 8, !dbg !4041
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4042
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4042
  %10 = load ptr, ptr %8, align 8, !dbg !4042
  %add.ptr.1 = getelementptr inbounds i16, ptr %10, i64 %idx.ext, !dbg !4043
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4044
    #dbg_value(i64 %indvars.iv, !4010, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4011)
  %11 = load ptr, ptr %array2D, align 8, !dbg !4041
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4042
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4042
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4042
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4042
  %add.ptr.2 = getelementptr inbounds i16, ptr %14, i64 %idx.ext, !dbg !4043
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4044
    #dbg_value(i64 %indvars.iv, !4010, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4011)
  %15 = load ptr, ptr %array2D, align 8, !dbg !4041
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4042
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4042
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4042
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4042
  %add.ptr.3 = getelementptr inbounds i16, ptr %18, i64 %idx.ext, !dbg !4043
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4044
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4045
    #dbg_value(i64 %indvars.iv.next.3, !4010, !DIExpression(), !4011)
  %niter.next.3 = add i64 %niter, 4, !dbg !4040
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4040
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4040, !llvm.loop !4046

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4040
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4040

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4010, !DIExpression(), !4011)
  %19 = load ptr, ptr %array2D, align 8, !dbg !4041
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4042
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4042
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4042
  %add.ptr.epil = getelementptr inbounds i16, ptr %21, i64 %idx.ext, !dbg !4043
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4044
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4045
    #dbg_value(i64 %indvars.iv.next.epil, !4010, !DIExpression(), !4011)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4040
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4040
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4040, !llvm.loop !4048

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 1, !dbg !4049
  %add = add i32 %mul15, 8, !dbg !4050
  %mul16 = mul i32 %add, %dim0, !dbg !4051
  ret i32 %mul16, !dbg !4052
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Duint16(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !4053 {
entry:
    #dbg_value(ptr %array3D, !4057, !DIExpression(), !4063)
    #dbg_value(i32 %dim0, !4058, !DIExpression(), !4063)
    #dbg_value(i32 %dim1, !4059, !DIExpression(), !4063)
    #dbg_value(i32 %dim2, !4060, !DIExpression(), !4063)
  %conv = sext i32 %dim0 to i64, !dbg !4064
  %mul = shl nsw i64 %conv, 3, !dbg !4065
    #dbg_value(i64 %mul, !4062, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4063)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4066
  store ptr %call, ptr %array3D, align 8, !dbg !4068
  %cmp = icmp eq ptr %call, null, !dbg !4069
  br i1 %cmp, label %if.then, label %if.end, !dbg !4070

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.83, !574, !DIExpression(), !4071)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.83) #9, !dbg !4073
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4074
  %.pre = load ptr, ptr %array3D, align 8, !dbg !4075
  br label %if.end, !dbg !4076

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4075
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4077
  %call6 = tail call i32 @get_mem2Duint16(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !4078
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !4062, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4063)
    #dbg_value(i32 1, !4061, !DIExpression(), !4063)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !4079
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !4082

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4079
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4082
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4082
  %xtraiter = and i64 %1, 3, !dbg !4082
  %3 = icmp ult i64 %2, 3, !dbg !4082
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4082

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4082
  br label %for.body, !dbg !4082

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4061, !DIExpression(), !4063)
  %4 = load ptr, ptr %array3D, align 8, !dbg !4083
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4084
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4084
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4084
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !4085
  store ptr %add.ptr, ptr %5, align 8, !dbg !4086
    #dbg_value(i64 %indvars.iv, !4061, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4063)
  %7 = load ptr, ptr %array3D, align 8, !dbg !4083
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4084
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4084
  %10 = load ptr, ptr %8, align 8, !dbg !4084
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !4085
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4086
    #dbg_value(i64 %indvars.iv, !4061, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4063)
  %11 = load ptr, ptr %array3D, align 8, !dbg !4083
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4084
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4084
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4084
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4084
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !4085
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4086
    #dbg_value(i64 %indvars.iv, !4061, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4063)
  %15 = load ptr, ptr %array3D, align 8, !dbg !4083
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4084
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4084
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4084
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4084
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !4085
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4086
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4087
    #dbg_value(i64 %indvars.iv.next.3, !4061, !DIExpression(), !4063)
  %niter.next.3 = add i64 %niter, 4, !dbg !4082
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4082
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4082, !llvm.loop !4088

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4082
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4082

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4061, !DIExpression(), !4063)
  %19 = load ptr, ptr %array3D, align 8, !dbg !4083
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4084
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4084
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4084
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !4085
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4086
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4087
    #dbg_value(i64 %indvars.iv.next.epil, !4061, !DIExpression(), !4063)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4082
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4082
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4082, !llvm.loop !4090

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !4064
    #dbg_value(i32 %conv1, !4062, !DIExpression(), !4063)
  %add = add nsw i32 %call6, %conv1, !dbg !4091
    #dbg_value(i32 %add, !4062, !DIExpression(), !4063)
  ret i32 %add, !dbg !4092
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Duint16(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !4093 {
entry:
    #dbg_value(ptr %array4D, !4098, !DIExpression(), !4105)
    #dbg_value(i32 %dim0, !4099, !DIExpression(), !4105)
    #dbg_value(i32 %dim1, !4100, !DIExpression(), !4105)
    #dbg_value(i32 %dim2, !4101, !DIExpression(), !4105)
    #dbg_value(i32 %dim3, !4102, !DIExpression(), !4105)
  %conv = sext i32 %dim0 to i64, !dbg !4106
  %mul = shl nsw i64 %conv, 3, !dbg !4107
    #dbg_value(i64 %mul, !4104, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4105)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4108
  store ptr %call, ptr %array4D, align 8, !dbg !4110
  %cmp = icmp eq ptr %call, null, !dbg !4111
  br i1 %cmp, label %if.then, label %if.end, !dbg !4112

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.84, !574, !DIExpression(), !4113)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.84) #9, !dbg !4115
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4116
  %.pre = load ptr, ptr %array4D, align 8, !dbg !4117
  br label %if.end, !dbg !4118

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4117
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4119
    #dbg_value(ptr %0, !4057, !DIExpression(), !4120)
    #dbg_value(i32 %mul5, !4058, !DIExpression(), !4120)
    #dbg_value(i32 %dim2, !4059, !DIExpression(), !4120)
    #dbg_value(i32 %dim3, !4060, !DIExpression(), !4120)
  %conv.i = sext i32 %mul5 to i64, !dbg !4122
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !4123
    #dbg_value(i64 %mul.i, !4062, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4120)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !4124
  store ptr %call.i22, ptr %0, align 8, !dbg !4125
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !4126
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !4127

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.83, !574, !DIExpression(), !4128)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.83) #9, !dbg !4130
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4131
  %.pre.i = load ptr, ptr %0, align 8, !dbg !4132
  br label %if.end.i, !dbg !4133

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !4132
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !4134
  %call6.i = tail call i32 @get_mem2Duint16(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !4135
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !4062, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4120)
    #dbg_value(i32 1, !4061, !DIExpression(), !4120)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !4136
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Duint16.exit, !dbg !4137

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !4136
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !4137
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !4137
  %xtraiter = and i64 %2, 3, !dbg !4137
  %4 = icmp ult i64 %3, 3, !dbg !4137
  br i1 %4, label %get_mem3Duint16.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !4137

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !4137
  br label %for.body.i, !dbg !4137

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !4061, !DIExpression(), !4120)
  %5 = load ptr, ptr %0, align 8, !dbg !4138
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !4139
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !4139
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !4139
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !4140
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !4141
    #dbg_value(i64 %indvars.iv.i, !4061, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4120)
  %8 = load ptr, ptr %0, align 8, !dbg !4138
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !4139
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !4139
  %11 = load ptr, ptr %9, align 8, !dbg !4139
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !4140
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !4141
    #dbg_value(i64 %indvars.iv.i, !4061, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4120)
  %12 = load ptr, ptr %0, align 8, !dbg !4138
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !4139
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !4139
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !4139
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !4139
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !4140
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !4141
    #dbg_value(i64 %indvars.iv.i, !4061, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4120)
  %16 = load ptr, ptr %0, align 8, !dbg !4138
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !4139
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !4139
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !4139
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !4139
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !4140
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !4141
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !4142
    #dbg_value(i64 %indvars.iv.next.i.3, !4061, !DIExpression(), !4120)
  %niter.next.3 = add i64 %niter, 4, !dbg !4137
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4137
  br i1 %niter.ncmp.3, label %get_mem3Duint16.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !4137, !llvm.loop !4143

get_mem3Duint16.exit.loopexit.unr-lcssa:          ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4137
  br i1 %lcmp.mod.not, label %get_mem3Duint16.exit, label %for.body.i.epil, !dbg !4137

for.body.i.epil:                                  ; preds = %get_mem3Duint16.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Duint16.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Duint16.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !4061, !DIExpression(), !4120)
  %20 = load ptr, ptr %0, align 8, !dbg !4138
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !4139
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !4139
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !4139
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !4140
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !4141
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !4142
    #dbg_value(i64 %indvars.iv.next.i.epil, !4061, !DIExpression(), !4120)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4137
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4137
  br i1 %epil.iter.cmp.not, label %get_mem3Duint16.exit, label %for.body.i.epil, !dbg !4137, !llvm.loop !4145

get_mem3Duint16.exit:                             ; preds = %get_mem3Duint16.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !4062, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !4120)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !4104, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !4105)
    #dbg_value(i32 1, !4103, !DIExpression(), !4105)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !4146
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !4149

for.body.lr.ph:                                   ; preds = %get_mem3Duint16.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4146
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !4149
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !4149
  %xtraiter26 = and i64 %23, 3, !dbg !4149
  %25 = icmp ult i64 %24, 3, !dbg !4149
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4149

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !4149
  br label %for.body, !dbg !4149

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4103, !DIExpression(), !4105)
  %26 = load ptr, ptr %array4D, align 8, !dbg !4150
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !4151
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !4151
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !4151
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !4152
  store ptr %add.ptr, ptr %27, align 8, !dbg !4153
    #dbg_value(i64 %indvars.iv, !4103, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4105)
  %29 = load ptr, ptr %array4D, align 8, !dbg !4150
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !4151
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !4151
  %32 = load ptr, ptr %30, align 8, !dbg !4151
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !4152
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !4153
    #dbg_value(i64 %indvars.iv, !4103, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4105)
  %33 = load ptr, ptr %array4D, align 8, !dbg !4150
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !4151
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !4151
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !4151
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !4151
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !4152
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !4153
    #dbg_value(i64 %indvars.iv, !4103, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4105)
  %37 = load ptr, ptr %array4D, align 8, !dbg !4150
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !4151
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !4151
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !4151
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !4151
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !4152
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !4153
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4154
    #dbg_value(i64 %indvars.iv.next.3, !4103, !DIExpression(), !4105)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !4149
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !4149
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4149, !llvm.loop !4155

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !4149
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !4149

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4103, !DIExpression(), !4105)
  %41 = load ptr, ptr %array4D, align 8, !dbg !4150
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !4151
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !4151
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4151
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !4152
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !4153
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4154
    #dbg_value(i64 %indvars.iv.next.epil, !4103, !DIExpression(), !4105)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !4149
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !4149
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !4149, !llvm.loop !4157

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Duint16.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !4122
    #dbg_value(!DIArgList(i64 poison, i32 poison), !4104, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4105)
    #dbg_value(i32 poison, !4062, !DIExpression(), !4120)
  %conv1 = trunc i64 %mul to i32, !dbg !4106
    #dbg_value(i32 %conv1, !4104, !DIExpression(), !4105)
  %add.i = add i32 %conv1.i, %conv1, !dbg !4158
  %add = add i32 %add.i, %call6.i, !dbg !4159
    #dbg_value(i32 %add, !4104, !DIExpression(), !4105)
  ret i32 %add, !dbg !4160
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dshort(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !4161 {
entry:
    #dbg_value(ptr %array2D, !4165, !DIExpression(), !4169)
    #dbg_value(i32 %dim0, !4166, !DIExpression(), !4169)
    #dbg_value(i32 %dim1, !4167, !DIExpression(), !4169)
  %conv = sext i32 %dim0 to i64, !dbg !4170
  %mul = shl nsw i64 %conv, 3, !dbg !4172
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4173
  store ptr %call, ptr %array2D, align 8, !dbg !4174
  %cmp = icmp eq ptr %call, null, !dbg !4175
  br i1 %cmp, label %if.then, label %if.end, !dbg !4176

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.85, !574, !DIExpression(), !4177)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.85) #9, !dbg !4179
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4180
  %.pre = load ptr, ptr %array2D, align 8, !dbg !4181
  br label %if.end, !dbg !4183

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4181
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4184
  %conv3 = sext i32 %mul2 to i64, !dbg !4185
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 2) #10, !dbg !4186
  store ptr %call4, ptr %0, align 8, !dbg !4187
  %cmp5 = icmp eq ptr %call4, null, !dbg !4188
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4189

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.85, !574, !DIExpression(), !4190)
  %call.i29 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.85) #9, !dbg !4192
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4193
  br label %if.end8, !dbg !4194

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !4168, !DIExpression(), !4169)
  %cmp930 = icmp sgt i32 %dim0, 1, !dbg !4195
  br i1 %cmp930, label %for.body.lr.ph, label %for.end, !dbg !4198

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4195
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4198
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4198
  %xtraiter = and i64 %1, 3, !dbg !4198
  %3 = icmp ult i64 %2, 3, !dbg !4198
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4198

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4198
  br label %for.body, !dbg !4198

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4168, !DIExpression(), !4169)
  %4 = load ptr, ptr %array2D, align 8, !dbg !4199
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4200
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4200
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4200
  %add.ptr = getelementptr inbounds i16, ptr %6, i64 %idx.ext, !dbg !4201
  store ptr %add.ptr, ptr %5, align 8, !dbg !4202
    #dbg_value(i64 %indvars.iv, !4168, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4169)
  %7 = load ptr, ptr %array2D, align 8, !dbg !4199
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4200
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4200
  %10 = load ptr, ptr %8, align 8, !dbg !4200
  %add.ptr.1 = getelementptr inbounds i16, ptr %10, i64 %idx.ext, !dbg !4201
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4202
    #dbg_value(i64 %indvars.iv, !4168, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4169)
  %11 = load ptr, ptr %array2D, align 8, !dbg !4199
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4200
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4200
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4200
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4200
  %add.ptr.2 = getelementptr inbounds i16, ptr %14, i64 %idx.ext, !dbg !4201
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4202
    #dbg_value(i64 %indvars.iv, !4168, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4169)
  %15 = load ptr, ptr %array2D, align 8, !dbg !4199
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4200
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4200
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4200
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4200
  %add.ptr.3 = getelementptr inbounds i16, ptr %18, i64 %idx.ext, !dbg !4201
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4202
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4203
    #dbg_value(i64 %indvars.iv.next.3, !4168, !DIExpression(), !4169)
  %niter.next.3 = add i64 %niter, 4, !dbg !4198
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4198
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4198, !llvm.loop !4204

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4198
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4198

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4168, !DIExpression(), !4169)
  %19 = load ptr, ptr %array2D, align 8, !dbg !4199
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4200
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4200
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4200
  %add.ptr.epil = getelementptr inbounds i16, ptr %21, i64 %idx.ext, !dbg !4201
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4202
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4203
    #dbg_value(i64 %indvars.iv.next.epil, !4168, !DIExpression(), !4169)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4198
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4198
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4198, !llvm.loop !4206

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul15 = shl i32 %dim1, 1, !dbg !4207
  %add = add i32 %mul15, 8, !dbg !4208
  %mul16 = mul i32 %add, %dim0, !dbg !4209
  ret i32 %mul16, !dbg !4210
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Dshort(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !4211 {
entry:
    #dbg_value(ptr %array3D, !4215, !DIExpression(), !4221)
    #dbg_value(i32 %dim0, !4216, !DIExpression(), !4221)
    #dbg_value(i32 %dim1, !4217, !DIExpression(), !4221)
    #dbg_value(i32 %dim2, !4218, !DIExpression(), !4221)
  %conv = sext i32 %dim0 to i64, !dbg !4222
  %mul = shl nsw i64 %conv, 3, !dbg !4223
    #dbg_value(i64 %mul, !4220, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4221)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4224
  store ptr %call, ptr %array3D, align 8, !dbg !4226
  %cmp = icmp eq ptr %call, null, !dbg !4227
  br i1 %cmp, label %if.then, label %if.end, !dbg !4228

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.86, !574, !DIExpression(), !4229)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.86) #9, !dbg !4231
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4232
  %.pre = load ptr, ptr %array3D, align 8, !dbg !4233
  br label %if.end, !dbg !4234

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4233
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4235
  %call6 = tail call i32 @get_mem2Dshort(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2), !dbg !4236
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !4220, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4221)
    #dbg_value(i32 1, !4219, !DIExpression(), !4221)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !4237
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !4240

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4237
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4240
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4240
  %xtraiter = and i64 %1, 3, !dbg !4240
  %3 = icmp ult i64 %2, 3, !dbg !4240
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4240

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4240
  br label %for.body, !dbg !4240

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4219, !DIExpression(), !4221)
  %4 = load ptr, ptr %array3D, align 8, !dbg !4241
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4242
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4242
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4242
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !4243
  store ptr %add.ptr, ptr %5, align 8, !dbg !4244
    #dbg_value(i64 %indvars.iv, !4219, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4221)
  %7 = load ptr, ptr %array3D, align 8, !dbg !4241
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4242
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4242
  %10 = load ptr, ptr %8, align 8, !dbg !4242
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !4243
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4244
    #dbg_value(i64 %indvars.iv, !4219, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4221)
  %11 = load ptr, ptr %array3D, align 8, !dbg !4241
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4242
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4242
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4242
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4242
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !4243
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4244
    #dbg_value(i64 %indvars.iv, !4219, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4221)
  %15 = load ptr, ptr %array3D, align 8, !dbg !4241
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4242
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4242
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4242
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4242
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !4243
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4244
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4245
    #dbg_value(i64 %indvars.iv.next.3, !4219, !DIExpression(), !4221)
  %niter.next.3 = add i64 %niter, 4, !dbg !4240
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4240
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4240, !llvm.loop !4246

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4240
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4240

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4219, !DIExpression(), !4221)
  %19 = load ptr, ptr %array3D, align 8, !dbg !4241
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4242
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4242
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4242
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !4243
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4244
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4245
    #dbg_value(i64 %indvars.iv.next.epil, !4219, !DIExpression(), !4221)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4240
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4240
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4240, !llvm.loop !4248

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !4222
    #dbg_value(i32 %conv1, !4220, !DIExpression(), !4221)
  %add = add nsw i32 %call6, %conv1, !dbg !4249
    #dbg_value(i32 %add, !4220, !DIExpression(), !4221)
  ret i32 %add, !dbg !4250
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem4Dshort(ptr nocapture noundef %array4D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3) local_unnamed_addr #0 !dbg !4251 {
entry:
    #dbg_value(ptr %array4D, !4255, !DIExpression(), !4262)
    #dbg_value(i32 %dim0, !4256, !DIExpression(), !4262)
    #dbg_value(i32 %dim1, !4257, !DIExpression(), !4262)
    #dbg_value(i32 %dim2, !4258, !DIExpression(), !4262)
    #dbg_value(i32 %dim3, !4259, !DIExpression(), !4262)
  %conv = sext i32 %dim0 to i64, !dbg !4263
  %mul = shl nsw i64 %conv, 3, !dbg !4264
    #dbg_value(i64 %mul, !4261, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4262)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4265
  store ptr %call, ptr %array4D, align 8, !dbg !4267
  %cmp = icmp eq ptr %call, null, !dbg !4268
  br i1 %cmp, label %if.then, label %if.end, !dbg !4269

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.87, !574, !DIExpression(), !4270)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.87) #9, !dbg !4272
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4273
  %.pre = load ptr, ptr %array4D, align 8, !dbg !4274
  br label %if.end, !dbg !4275

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4274
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4276
    #dbg_value(ptr %0, !4215, !DIExpression(), !4277)
    #dbg_value(i32 %mul5, !4216, !DIExpression(), !4277)
    #dbg_value(i32 %dim2, !4217, !DIExpression(), !4277)
    #dbg_value(i32 %dim3, !4218, !DIExpression(), !4277)
  %conv.i = sext i32 %mul5 to i64, !dbg !4279
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !4280
    #dbg_value(i64 %mul.i, !4220, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4277)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !4281
  store ptr %call.i22, ptr %0, align 8, !dbg !4282
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !4283
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !4284

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.86, !574, !DIExpression(), !4285)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.86) #9, !dbg !4287
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4288
  %.pre.i = load ptr, ptr %0, align 8, !dbg !4289
  br label %if.end.i, !dbg !4290

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !4289
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !4291
  %call6.i = tail call i32 @get_mem2Dshort(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3), !dbg !4292
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !4220, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4277)
    #dbg_value(i32 1, !4219, !DIExpression(), !4277)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !4293
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem3Dshort.exit, !dbg !4294

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !4293
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !4294
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !4294
  %xtraiter = and i64 %2, 3, !dbg !4294
  %4 = icmp ult i64 %3, 3, !dbg !4294
  br i1 %4, label %get_mem3Dshort.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !4294

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !4294
  br label %for.body.i, !dbg !4294

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !4219, !DIExpression(), !4277)
  %5 = load ptr, ptr %0, align 8, !dbg !4295
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !4296
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !4296
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !4296
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !4297
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !4298
    #dbg_value(i64 %indvars.iv.i, !4219, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4277)
  %8 = load ptr, ptr %0, align 8, !dbg !4295
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !4296
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !4296
  %11 = load ptr, ptr %9, align 8, !dbg !4296
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !4297
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !4298
    #dbg_value(i64 %indvars.iv.i, !4219, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4277)
  %12 = load ptr, ptr %0, align 8, !dbg !4295
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !4296
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !4296
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !4296
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !4296
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !4297
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !4298
    #dbg_value(i64 %indvars.iv.i, !4219, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4277)
  %16 = load ptr, ptr %0, align 8, !dbg !4295
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !4296
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !4296
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !4296
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !4296
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !4297
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !4298
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !4299
    #dbg_value(i64 %indvars.iv.next.i.3, !4219, !DIExpression(), !4277)
  %niter.next.3 = add i64 %niter, 4, !dbg !4294
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4294
  br i1 %niter.ncmp.3, label %get_mem3Dshort.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !4294, !llvm.loop !4300

get_mem3Dshort.exit.loopexit.unr-lcssa:           ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4294
  br i1 %lcmp.mod.not, label %get_mem3Dshort.exit, label %for.body.i.epil, !dbg !4294

for.body.i.epil:                                  ; preds = %get_mem3Dshort.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem3Dshort.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem3Dshort.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !4219, !DIExpression(), !4277)
  %20 = load ptr, ptr %0, align 8, !dbg !4295
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !4296
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !4296
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !4296
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !4297
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !4298
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !4299
    #dbg_value(i64 %indvars.iv.next.i.epil, !4219, !DIExpression(), !4277)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4294
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4294
  br i1 %epil.iter.cmp.not, label %get_mem3Dshort.exit, label %for.body.i.epil, !dbg !4294, !llvm.loop !4302

get_mem3Dshort.exit:                              ; preds = %get_mem3Dshort.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !4220, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !4277)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !4261, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !4262)
    #dbg_value(i32 1, !4260, !DIExpression(), !4262)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !4303
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !4306

for.body.lr.ph:                                   ; preds = %get_mem3Dshort.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4303
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !4306
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !4306
  %xtraiter26 = and i64 %23, 3, !dbg !4306
  %25 = icmp ult i64 %24, 3, !dbg !4306
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4306

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !4306
  br label %for.body, !dbg !4306

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4260, !DIExpression(), !4262)
  %26 = load ptr, ptr %array4D, align 8, !dbg !4307
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !4308
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !4308
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !4308
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !4309
  store ptr %add.ptr, ptr %27, align 8, !dbg !4310
    #dbg_value(i64 %indvars.iv, !4260, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4262)
  %29 = load ptr, ptr %array4D, align 8, !dbg !4307
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !4308
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !4308
  %32 = load ptr, ptr %30, align 8, !dbg !4308
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !4309
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !4310
    #dbg_value(i64 %indvars.iv, !4260, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4262)
  %33 = load ptr, ptr %array4D, align 8, !dbg !4307
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !4308
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !4308
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !4308
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !4308
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !4309
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !4310
    #dbg_value(i64 %indvars.iv, !4260, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4262)
  %37 = load ptr, ptr %array4D, align 8, !dbg !4307
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !4308
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !4308
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !4308
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !4308
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !4309
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !4310
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4311
    #dbg_value(i64 %indvars.iv.next.3, !4260, !DIExpression(), !4262)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !4306
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !4306
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4306, !llvm.loop !4312

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !4306
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !4306

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4260, !DIExpression(), !4262)
  %41 = load ptr, ptr %array4D, align 8, !dbg !4307
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !4308
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !4308
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4308
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !4309
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !4310
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4311
    #dbg_value(i64 %indvars.iv.next.epil, !4260, !DIExpression(), !4262)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !4306
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !4306
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !4306, !llvm.loop !4314

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem3Dshort.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !4279
    #dbg_value(!DIArgList(i64 poison, i32 poison), !4261, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4262)
    #dbg_value(i32 poison, !4220, !DIExpression(), !4277)
  %conv1 = trunc i64 %mul to i32, !dbg !4263
    #dbg_value(i32 %conv1, !4261, !DIExpression(), !4262)
  %add.i = add i32 %conv1.i, %conv1, !dbg !4315
  %add = add i32 %add.i, %call6.i, !dbg !4316
    #dbg_value(i32 %add, !4261, !DIExpression(), !4262)
  ret i32 %add, !dbg !4317
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem5Dshort(ptr nocapture noundef %array5D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4) local_unnamed_addr #0 !dbg !4318 {
entry:
    #dbg_value(ptr %array5D, !4322, !DIExpression(), !4330)
    #dbg_value(i32 %dim0, !4323, !DIExpression(), !4330)
    #dbg_value(i32 %dim1, !4324, !DIExpression(), !4330)
    #dbg_value(i32 %dim2, !4325, !DIExpression(), !4330)
    #dbg_value(i32 %dim3, !4326, !DIExpression(), !4330)
    #dbg_value(i32 %dim4, !4327, !DIExpression(), !4330)
  %conv = sext i32 %dim0 to i64, !dbg !4331
  %mul = shl nsw i64 %conv, 3, !dbg !4332
    #dbg_value(i64 %mul, !4329, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4330)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4333
  store ptr %call, ptr %array5D, align 8, !dbg !4335
  %cmp = icmp eq ptr %call, null, !dbg !4336
  br i1 %cmp, label %if.then, label %if.end, !dbg !4337

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.88, !574, !DIExpression(), !4338)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.88) #9, !dbg !4340
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4341
  %.pre = load ptr, ptr %array5D, align 8, !dbg !4342
  br label %if.end, !dbg !4343

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4342
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4344
  %call6 = tail call i32 @get_mem4Dshort(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4), !dbg !4345
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !4329, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4330)
    #dbg_value(i32 1, !4328, !DIExpression(), !4330)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !4346
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !4349

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4346
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4349
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4349
  %xtraiter = and i64 %1, 3, !dbg !4349
  %3 = icmp ult i64 %2, 3, !dbg !4349
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4349

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4349
  br label %for.body, !dbg !4349

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4328, !DIExpression(), !4330)
  %4 = load ptr, ptr %array5D, align 8, !dbg !4350
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4351
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4351
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4351
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !4352
  store ptr %add.ptr, ptr %5, align 8, !dbg !4353
    #dbg_value(i64 %indvars.iv, !4328, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4330)
  %7 = load ptr, ptr %array5D, align 8, !dbg !4350
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4351
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4351
  %10 = load ptr, ptr %8, align 8, !dbg !4351
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !4352
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4353
    #dbg_value(i64 %indvars.iv, !4328, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4330)
  %11 = load ptr, ptr %array5D, align 8, !dbg !4350
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4351
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4351
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4351
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4351
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !4352
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4353
    #dbg_value(i64 %indvars.iv, !4328, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4330)
  %15 = load ptr, ptr %array5D, align 8, !dbg !4350
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4351
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4351
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4351
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4351
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !4352
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4353
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4354
    #dbg_value(i64 %indvars.iv.next.3, !4328, !DIExpression(), !4330)
  %niter.next.3 = add i64 %niter, 4, !dbg !4349
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4349
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4349, !llvm.loop !4355

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4349
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4349

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4328, !DIExpression(), !4330)
  %19 = load ptr, ptr %array5D, align 8, !dbg !4350
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4351
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4351
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4351
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !4352
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4353
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4354
    #dbg_value(i64 %indvars.iv.next.epil, !4328, !DIExpression(), !4330)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4349
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4349
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4349, !llvm.loop !4357

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !4331
    #dbg_value(i32 %conv1, !4329, !DIExpression(), !4330)
  %add = add nsw i32 %call6, %conv1, !dbg !4358
    #dbg_value(i32 %add, !4329, !DIExpression(), !4330)
  ret i32 %add, !dbg !4359
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem6Dshort(ptr nocapture noundef %array6D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5) local_unnamed_addr #0 !dbg !4360 {
entry:
    #dbg_value(ptr %array6D, !4364, !DIExpression(), !4373)
    #dbg_value(i32 %dim0, !4365, !DIExpression(), !4373)
    #dbg_value(i32 %dim1, !4366, !DIExpression(), !4373)
    #dbg_value(i32 %dim2, !4367, !DIExpression(), !4373)
    #dbg_value(i32 %dim3, !4368, !DIExpression(), !4373)
    #dbg_value(i32 %dim4, !4369, !DIExpression(), !4373)
    #dbg_value(i32 %dim5, !4370, !DIExpression(), !4373)
  %conv = sext i32 %dim0 to i64, !dbg !4374
  %mul = shl nsw i64 %conv, 3, !dbg !4375
    #dbg_value(i64 %mul, !4372, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4373)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4376
  store ptr %call, ptr %array6D, align 8, !dbg !4378
  %cmp = icmp eq ptr %call, null, !dbg !4379
  br i1 %cmp, label %if.then, label %if.end, !dbg !4380

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.89, !574, !DIExpression(), !4381)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.89) #9, !dbg !4383
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4384
  %.pre = load ptr, ptr %array6D, align 8, !dbg !4385
  br label %if.end, !dbg !4386

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4385
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4387
    #dbg_value(ptr %0, !4322, !DIExpression(), !4388)
    #dbg_value(i32 %mul5, !4323, !DIExpression(), !4388)
    #dbg_value(i32 %dim2, !4324, !DIExpression(), !4388)
    #dbg_value(i32 %dim3, !4325, !DIExpression(), !4388)
    #dbg_value(i32 %dim4, !4326, !DIExpression(), !4388)
    #dbg_value(i32 %dim5, !4327, !DIExpression(), !4388)
  %conv.i = sext i32 %mul5 to i64, !dbg !4390
  %mul.i = shl nsw i64 %conv.i, 3, !dbg !4391
    #dbg_value(i64 %mul.i, !4329, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4388)
  %call.i22 = tail call noalias ptr @malloc(i64 noundef %mul.i) #8, !dbg !4392
  store ptr %call.i22, ptr %0, align 8, !dbg !4393
  %cmp.i = icmp eq ptr %call.i22, null, !dbg !4394
  br i1 %cmp.i, label %if.then.i, label %if.end.i, !dbg !4395

if.then.i:                                        ; preds = %if.end
    #dbg_value(ptr @.str.88, !574, !DIExpression(), !4396)
  %call.i.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.88) #9, !dbg !4398
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4399
  %.pre.i = load ptr, ptr %0, align 8, !dbg !4400
  br label %if.end.i, !dbg !4401

if.end.i:                                         ; preds = %if.then.i, %if.end
  %1 = phi ptr [ %.pre.i, %if.then.i ], [ %call.i22, %if.end ], !dbg !4400
  %mul5.i = mul nsw i32 %mul5, %dim2, !dbg !4402
  %call6.i = tail call i32 @get_mem4Dshort(ptr noundef %1, i32 noundef %mul5.i, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5), !dbg !4403
    #dbg_value(!DIArgList(i64 %mul.i, i32 %call6.i), !4329, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4388)
    #dbg_value(i32 1, !4328, !DIExpression(), !4388)
  %cmp722.i = icmp sgt i32 %mul5, 1, !dbg !4404
  br i1 %cmp722.i, label %for.body.lr.ph.i, label %get_mem5Dshort.exit, !dbg !4405

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %idx.ext.i = sext i32 %dim2 to i64
  %wide.trip.count.i = zext nneg i32 %mul5 to i64, !dbg !4404
  %2 = add nsw i64 %wide.trip.count.i, -1, !dbg !4405
  %3 = add nsw i64 %wide.trip.count.i, -2, !dbg !4405
  %xtraiter = and i64 %2, 3, !dbg !4405
  %4 = icmp ult i64 %3, 3, !dbg !4405
  br i1 %4, label %get_mem5Dshort.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new, !dbg !4405

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %2, -4, !dbg !4405
  br label %for.body.i, !dbg !4405

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 1, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.3, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.3, %for.body.i ]
    #dbg_value(i64 %indvars.iv.i, !4328, !DIExpression(), !4388)
  %5 = load ptr, ptr %0, align 8, !dbg !4406
  %6 = getelementptr ptr, ptr %5, i64 %indvars.iv.i, !dbg !4407
  %arrayidx.i = getelementptr i8, ptr %6, i64 -8, !dbg !4407
  %7 = load ptr, ptr %arrayidx.i, align 8, !dbg !4407
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %idx.ext.i, !dbg !4408
  store ptr %add.ptr.i, ptr %6, align 8, !dbg !4409
    #dbg_value(i64 %indvars.iv.i, !4328, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4388)
  %8 = load ptr, ptr %0, align 8, !dbg !4406
  %9 = getelementptr ptr, ptr %8, i64 %indvars.iv.i, !dbg !4407
  %10 = getelementptr i8, ptr %9, i64 8, !dbg !4407
  %11 = load ptr, ptr %9, align 8, !dbg !4407
  %add.ptr.i.1 = getelementptr inbounds ptr, ptr %11, i64 %idx.ext.i, !dbg !4408
  store ptr %add.ptr.i.1, ptr %10, align 8, !dbg !4409
    #dbg_value(i64 %indvars.iv.i, !4328, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4388)
  %12 = load ptr, ptr %0, align 8, !dbg !4406
  %13 = getelementptr ptr, ptr %12, i64 %indvars.iv.i, !dbg !4407
  %14 = getelementptr i8, ptr %13, i64 16, !dbg !4407
  %arrayidx.i.2 = getelementptr i8, ptr %13, i64 8, !dbg !4407
  %15 = load ptr, ptr %arrayidx.i.2, align 8, !dbg !4407
  %add.ptr.i.2 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext.i, !dbg !4408
  store ptr %add.ptr.i.2, ptr %14, align 8, !dbg !4409
    #dbg_value(i64 %indvars.iv.i, !4328, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4388)
  %16 = load ptr, ptr %0, align 8, !dbg !4406
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv.i, !dbg !4407
  %18 = getelementptr i8, ptr %17, i64 24, !dbg !4407
  %arrayidx.i.3 = getelementptr i8, ptr %17, i64 16, !dbg !4407
  %19 = load ptr, ptr %arrayidx.i.3, align 8, !dbg !4407
  %add.ptr.i.3 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext.i, !dbg !4408
  store ptr %add.ptr.i.3, ptr %18, align 8, !dbg !4409
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4, !dbg !4410
    #dbg_value(i64 %indvars.iv.next.i.3, !4328, !DIExpression(), !4388)
  %niter.next.3 = add i64 %niter, 4, !dbg !4405
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4405
  br i1 %niter.ncmp.3, label %get_mem5Dshort.exit.loopexit.unr-lcssa, label %for.body.i, !dbg !4405, !llvm.loop !4411

get_mem5Dshort.exit.loopexit.unr-lcssa:           ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next.i.3, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4405
  br i1 %lcmp.mod.not, label %get_mem5Dshort.exit, label %for.body.i.epil, !dbg !4405

for.body.i.epil:                                  ; preds = %get_mem5Dshort.exit.loopexit.unr-lcssa, %for.body.i.epil
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body.i.epil ], [ %indvars.iv.i.unr, %get_mem5Dshort.exit.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.epil ], [ 0, %get_mem5Dshort.exit.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.i.epil, !4328, !DIExpression(), !4388)
  %20 = load ptr, ptr %0, align 8, !dbg !4406
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv.i.epil, !dbg !4407
  %arrayidx.i.epil = getelementptr i8, ptr %21, i64 -8, !dbg !4407
  %22 = load ptr, ptr %arrayidx.i.epil, align 8, !dbg !4407
  %add.ptr.i.epil = getelementptr inbounds ptr, ptr %22, i64 %idx.ext.i, !dbg !4408
  store ptr %add.ptr.i.epil, ptr %21, align 8, !dbg !4409
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1, !dbg !4410
    #dbg_value(i64 %indvars.iv.next.i.epil, !4328, !DIExpression(), !4388)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4405
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4405
  br i1 %epil.iter.cmp.not, label %get_mem5Dshort.exit, label %for.body.i.epil, !dbg !4405, !llvm.loop !4413

get_mem5Dshort.exit:                              ; preds = %get_mem5Dshort.exit.loopexit.unr-lcssa, %for.body.i.epil, %if.end.i
    #dbg_value(!DIArgList(i32 %call6.i, i64 %mul.i), !4329, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value), !4388)
    #dbg_value(!DIArgList(i64 %mul, i32 %call6.i, i64 %mul.i), !4372, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_plus, DW_OP_stack_value), !4373)
    #dbg_value(i32 1, !4371, !DIExpression(), !4373)
  %cmp723 = icmp sgt i32 %dim0, 1, !dbg !4414
  br i1 %cmp723, label %for.body.lr.ph, label %for.end, !dbg !4417

for.body.lr.ph:                                   ; preds = %get_mem5Dshort.exit
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4414
  %23 = add nsw i64 %wide.trip.count, -1, !dbg !4417
  %24 = add nsw i64 %wide.trip.count, -2, !dbg !4417
  %xtraiter26 = and i64 %23, 3, !dbg !4417
  %25 = icmp ult i64 %24, 3, !dbg !4417
  br i1 %25, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4417

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter29 = and i64 %23, -4, !dbg !4417
  br label %for.body, !dbg !4417

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter30 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter30.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4371, !DIExpression(), !4373)
  %26 = load ptr, ptr %array6D, align 8, !dbg !4418
  %27 = getelementptr ptr, ptr %26, i64 %indvars.iv, !dbg !4419
  %arrayidx = getelementptr i8, ptr %27, i64 -8, !dbg !4419
  %28 = load ptr, ptr %arrayidx, align 8, !dbg !4419
  %add.ptr = getelementptr inbounds ptr, ptr %28, i64 %idx.ext, !dbg !4420
  store ptr %add.ptr, ptr %27, align 8, !dbg !4421
    #dbg_value(i64 %indvars.iv, !4371, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4373)
  %29 = load ptr, ptr %array6D, align 8, !dbg !4418
  %30 = getelementptr ptr, ptr %29, i64 %indvars.iv, !dbg !4419
  %31 = getelementptr i8, ptr %30, i64 8, !dbg !4419
  %32 = load ptr, ptr %30, align 8, !dbg !4419
  %add.ptr.1 = getelementptr inbounds ptr, ptr %32, i64 %idx.ext, !dbg !4420
  store ptr %add.ptr.1, ptr %31, align 8, !dbg !4421
    #dbg_value(i64 %indvars.iv, !4371, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4373)
  %33 = load ptr, ptr %array6D, align 8, !dbg !4418
  %34 = getelementptr ptr, ptr %33, i64 %indvars.iv, !dbg !4419
  %35 = getelementptr i8, ptr %34, i64 16, !dbg !4419
  %arrayidx.2 = getelementptr i8, ptr %34, i64 8, !dbg !4419
  %36 = load ptr, ptr %arrayidx.2, align 8, !dbg !4419
  %add.ptr.2 = getelementptr inbounds ptr, ptr %36, i64 %idx.ext, !dbg !4420
  store ptr %add.ptr.2, ptr %35, align 8, !dbg !4421
    #dbg_value(i64 %indvars.iv, !4371, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4373)
  %37 = load ptr, ptr %array6D, align 8, !dbg !4418
  %38 = getelementptr ptr, ptr %37, i64 %indvars.iv, !dbg !4419
  %39 = getelementptr i8, ptr %38, i64 24, !dbg !4419
  %arrayidx.3 = getelementptr i8, ptr %38, i64 16, !dbg !4419
  %40 = load ptr, ptr %arrayidx.3, align 8, !dbg !4419
  %add.ptr.3 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !4420
  store ptr %add.ptr.3, ptr %39, align 8, !dbg !4421
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4422
    #dbg_value(i64 %indvars.iv.next.3, !4371, !DIExpression(), !4373)
  %niter30.next.3 = add i64 %niter30, 4, !dbg !4417
  %niter30.ncmp.3 = icmp eq i64 %niter30.next.3, %unroll_iter29, !dbg !4417
  br i1 %niter30.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4417, !llvm.loop !4423

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod28.not = icmp eq i64 %xtraiter26, 0, !dbg !4417
  br i1 %lcmp.mod28.not, label %for.end, label %for.body.epil, !dbg !4417

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter27 = phi i64 [ %epil.iter27.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4371, !DIExpression(), !4373)
  %41 = load ptr, ptr %array6D, align 8, !dbg !4418
  %42 = getelementptr ptr, ptr %41, i64 %indvars.iv.epil, !dbg !4419
  %arrayidx.epil = getelementptr i8, ptr %42, i64 -8, !dbg !4419
  %43 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4419
  %add.ptr.epil = getelementptr inbounds ptr, ptr %43, i64 %idx.ext, !dbg !4420
  store ptr %add.ptr.epil, ptr %42, align 8, !dbg !4421
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4422
    #dbg_value(i64 %indvars.iv.next.epil, !4371, !DIExpression(), !4373)
  %epil.iter27.next = add i64 %epil.iter27, 1, !dbg !4417
  %epil.iter27.cmp.not = icmp eq i64 %epil.iter27.next, %xtraiter26, !dbg !4417
  br i1 %epil.iter27.cmp.not, label %for.end, label %for.body.epil, !dbg !4417, !llvm.loop !4425

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %get_mem5Dshort.exit
  %conv1.i = trunc i64 %mul.i to i32, !dbg !4390
    #dbg_value(!DIArgList(i64 poison, i32 poison), !4372, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4373)
    #dbg_value(i32 poison, !4329, !DIExpression(), !4388)
  %conv1 = trunc i64 %mul to i32, !dbg !4374
    #dbg_value(i32 %conv1, !4372, !DIExpression(), !4373)
  %add.i = add i32 %conv1.i, %conv1, !dbg !4426
  %add = add i32 %add.i, %call6.i, !dbg !4427
    #dbg_value(i32 %add, !4372, !DIExpression(), !4373)
  ret i32 %add, !dbg !4428
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem7Dshort(ptr nocapture noundef %array7D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5, i32 noundef %dim6) local_unnamed_addr #0 !dbg !4429 {
entry:
    #dbg_value(ptr %array7D, !4434, !DIExpression(), !4444)
    #dbg_value(i32 %dim0, !4435, !DIExpression(), !4444)
    #dbg_value(i32 %dim1, !4436, !DIExpression(), !4444)
    #dbg_value(i32 %dim2, !4437, !DIExpression(), !4444)
    #dbg_value(i32 %dim3, !4438, !DIExpression(), !4444)
    #dbg_value(i32 %dim4, !4439, !DIExpression(), !4444)
    #dbg_value(i32 %dim5, !4440, !DIExpression(), !4444)
    #dbg_value(i32 %dim6, !4441, !DIExpression(), !4444)
  %conv = sext i32 %dim0 to i64, !dbg !4445
  %mul = shl nsw i64 %conv, 3, !dbg !4446
    #dbg_value(i64 %mul, !4443, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !4444)
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4447
  store ptr %call, ptr %array7D, align 8, !dbg !4449
  %cmp = icmp eq ptr %call, null, !dbg !4450
  br i1 %cmp, label %if.then, label %if.end, !dbg !4451

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.90, !574, !DIExpression(), !4452)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.90) #9, !dbg !4454
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4455
  %.pre = load ptr, ptr %array7D, align 8, !dbg !4456
  br label %if.end, !dbg !4457

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4456
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !4458
  %call6 = tail call i32 @get_mem6Dshort(ptr noundef %0, i32 noundef %mul5, i32 noundef %dim2, i32 noundef %dim3, i32 noundef %dim4, i32 noundef %dim5, i32 noundef %dim6), !dbg !4459
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !4443, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !4444)
    #dbg_value(i32 1, !4442, !DIExpression(), !4444)
  %cmp722 = icmp sgt i32 %dim0, 1, !dbg !4460
  br i1 %cmp722, label %for.body.lr.ph, label %for.end, !dbg !4463

for.body.lr.ph:                                   ; preds = %if.end
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4460
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4463
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4463
  %xtraiter = and i64 %1, 3, !dbg !4463
  %3 = icmp ult i64 %2, 3, !dbg !4463
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4463

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4463
  br label %for.body, !dbg !4463

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4442, !DIExpression(), !4444)
  %4 = load ptr, ptr %array7D, align 8, !dbg !4464
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4465
  %arrayidx = getelementptr i8, ptr %5, i64 -8, !dbg !4465
  %6 = load ptr, ptr %arrayidx, align 8, !dbg !4465
  %add.ptr = getelementptr inbounds ptr, ptr %6, i64 %idx.ext, !dbg !4466
  store ptr %add.ptr, ptr %5, align 8, !dbg !4467
    #dbg_value(i64 %indvars.iv, !4442, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4444)
  %7 = load ptr, ptr %array7D, align 8, !dbg !4464
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4465
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4465
  %10 = load ptr, ptr %8, align 8, !dbg !4465
  %add.ptr.1 = getelementptr inbounds ptr, ptr %10, i64 %idx.ext, !dbg !4466
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4467
    #dbg_value(i64 %indvars.iv, !4442, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4444)
  %11 = load ptr, ptr %array7D, align 8, !dbg !4464
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4465
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4465
  %arrayidx.2 = getelementptr i8, ptr %12, i64 8, !dbg !4465
  %14 = load ptr, ptr %arrayidx.2, align 8, !dbg !4465
  %add.ptr.2 = getelementptr inbounds ptr, ptr %14, i64 %idx.ext, !dbg !4466
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4467
    #dbg_value(i64 %indvars.iv, !4442, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4444)
  %15 = load ptr, ptr %array7D, align 8, !dbg !4464
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4465
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4465
  %arrayidx.3 = getelementptr i8, ptr %16, i64 16, !dbg !4465
  %18 = load ptr, ptr %arrayidx.3, align 8, !dbg !4465
  %add.ptr.3 = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !4466
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4467
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4468
    #dbg_value(i64 %indvars.iv.next.3, !4442, !DIExpression(), !4444)
  %niter.next.3 = add i64 %niter, 4, !dbg !4463
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4463
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4463, !llvm.loop !4469

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4463
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4463

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4442, !DIExpression(), !4444)
  %19 = load ptr, ptr %array7D, align 8, !dbg !4464
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4465
  %arrayidx.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4465
  %21 = load ptr, ptr %arrayidx.epil, align 8, !dbg !4465
  %add.ptr.epil = getelementptr inbounds ptr, ptr %21, i64 %idx.ext, !dbg !4466
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4467
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4468
    #dbg_value(i64 %indvars.iv.next.epil, !4442, !DIExpression(), !4444)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4463
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4463
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4463, !llvm.loop !4471

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !4445
    #dbg_value(i32 %conv1, !4443, !DIExpression(), !4444)
  %add = add nsw i32 %call6, %conv1, !dbg !4472
    #dbg_value(i32 %add, !4443, !DIExpression(), !4444)
  ret i32 %add, !dbg !4473
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Duint16(ptr noundef %array2D) local_unnamed_addr #0 !dbg !4474 {
entry:
    #dbg_value(ptr %array2D, !4478, !DIExpression(), !4479)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !4480
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !4482

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !4483
  %tobool1.not = icmp eq ptr %0, null, !dbg !4483
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !4486

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4487
  br label %if.end, !dbg !4487

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4488
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !4489
  br label %if.end4, !dbg !4490

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4491
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !4493
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Duint16(ptr noundef %array3D) local_unnamed_addr #0 !dbg !4494 {
entry:
    #dbg_value(ptr %array3D, !4498, !DIExpression(), !4499)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !4500
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4502

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !4503
    #dbg_value(ptr %0, !4478, !DIExpression(), !4505)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4507
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !4508

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4509
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !4509
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !4510

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !4511
  br label %if.end.i, !dbg !4511

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4512
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4513
  br label %free_mem2Duint16.exit, !dbg !4514

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4515
  br label %free_mem2Duint16.exit

free_mem2Duint16.exit:                            ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !4516
  br label %if.end, !dbg !4517

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.92, i32 noundef 100) #9, !dbg !4518
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Duint16.exit
  ret void, !dbg !4520
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Duint16(ptr noundef %array4D) local_unnamed_addr #0 !dbg !4521 {
entry:
    #dbg_value(ptr %array4D, !4525, !DIExpression(), !4526)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !4527
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4529

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !4530
    #dbg_value(ptr %0, !4498, !DIExpression(), !4532)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4534
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !4535

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4536
    #dbg_value(ptr %1, !4478, !DIExpression(), !4537)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !4539
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !4540

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !4541
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !4541
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !4542

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !4543
  br label %if.end.i.i, !dbg !4543

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4544
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !4545
  br label %free_mem2Duint16.exit.i, !dbg !4546

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.91, i32 noundef 100) #9, !dbg !4547
  br label %free_mem2Duint16.exit.i

free_mem2Duint16.exit.i:                          ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4548
  br label %free_mem3Duint16.exit, !dbg !4549

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.92, i32 noundef 100) #9, !dbg !4550
  br label %free_mem3Duint16.exit

free_mem3Duint16.exit:                            ; preds = %free_mem2Duint16.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !4551
  br label %if.end, !dbg !4552

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.93, i32 noundef 100) #9, !dbg !4553
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Duint16.exit
  ret void, !dbg !4555
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dshort(ptr noundef %array2D) local_unnamed_addr #0 !dbg !4556 {
entry:
    #dbg_value(ptr %array2D, !4560, !DIExpression(), !4561)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !4562
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !4564

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !4565
  %tobool1.not = icmp eq ptr %0, null, !dbg !4565
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !4568

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4569
  br label %if.end, !dbg !4569

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4570
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !4571
  br label %if.end4, !dbg !4572

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4573
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !4575
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dshort(ptr noundef %array3D) local_unnamed_addr #0 !dbg !4576 {
entry:
    #dbg_value(ptr %array3D, !4580, !DIExpression(), !4581)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !4582
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4584

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !4585
    #dbg_value(ptr %0, !4560, !DIExpression(), !4587)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4589
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !4590

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4591
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !4591
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !4592

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !4593
  br label %if.end.i, !dbg !4593

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4594
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4595
  br label %free_mem2Dshort.exit, !dbg !4596

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4597
  br label %free_mem2Dshort.exit

free_mem2Dshort.exit:                             ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !4598
  br label %if.end, !dbg !4599

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.95, i32 noundef 100) #9, !dbg !4600
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Dshort.exit
  ret void, !dbg !4602
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem4Dshort(ptr noundef %array4D) local_unnamed_addr #0 !dbg !4603 {
entry:
    #dbg_value(ptr %array4D, !4607, !DIExpression(), !4608)
  %tobool.not = icmp eq ptr %array4D, null, !dbg !4609
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4611

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array4D, align 8, !dbg !4612
    #dbg_value(ptr %0, !4580, !DIExpression(), !4614)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4616
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !4617

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4618
    #dbg_value(ptr %1, !4560, !DIExpression(), !4619)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !4621
  br i1 %tobool.not.i.i, label %if.else3.i.i, label %if.then.i.i, !dbg !4622

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !4623
  %tobool1.not.i.i = icmp eq ptr %2, null, !dbg !4623
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i, !dbg !4624

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void @free(ptr noundef nonnull %2) #9, !dbg !4625
  br label %if.end.i.i, !dbg !4625

if.else.i.i:                                      ; preds = %if.then.i.i
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4626
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then2.i.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !4627
  br label %free_mem2Dshort.exit.i, !dbg !4628

if.else3.i.i:                                     ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.94, i32 noundef 100) #9, !dbg !4629
  br label %free_mem2Dshort.exit.i

free_mem2Dshort.exit.i:                           ; preds = %if.else3.i.i, %if.end.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4630
  br label %free_mem3Dshort.exit, !dbg !4631

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.95, i32 noundef 100) #9, !dbg !4632
  br label %free_mem3Dshort.exit

free_mem3Dshort.exit:                             ; preds = %free_mem2Dshort.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array4D) #9, !dbg !4633
  br label %if.end, !dbg !4634

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.96, i32 noundef 100) #9, !dbg !4635
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem3Dshort.exit
  ret void, !dbg !4637
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem5Dshort(ptr noundef %array5D) local_unnamed_addr #0 !dbg !4638 {
entry:
    #dbg_value(ptr %array5D, !4642, !DIExpression(), !4643)
  %tobool.not = icmp eq ptr %array5D, null, !dbg !4644
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4646

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array5D, align 8, !dbg !4647
  tail call void @free_mem4Dshort(ptr noundef %0), !dbg !4649
  tail call void @free(ptr noundef nonnull %array5D) #9, !dbg !4650
  br label %if.end, !dbg !4651

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.97, i32 noundef 100) #9, !dbg !4652
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4654
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem6Dshort(ptr noundef %array6D) local_unnamed_addr #0 !dbg !4655 {
entry:
    #dbg_value(ptr %array6D, !4659, !DIExpression(), !4660)
  %tobool.not = icmp eq ptr %array6D, null, !dbg !4661
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4663

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array6D, align 8, !dbg !4664
    #dbg_value(ptr %0, !4642, !DIExpression(), !4666)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4668
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !4669

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4670
  tail call void @free_mem4Dshort(ptr noundef %1), !dbg !4671
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4672
  br label %free_mem5Dshort.exit, !dbg !4673

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.97, i32 noundef 100) #9, !dbg !4674
  br label %free_mem5Dshort.exit

free_mem5Dshort.exit:                             ; preds = %if.then.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array6D) #9, !dbg !4675
  br label %if.end, !dbg !4676

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.98, i32 noundef 100) #9, !dbg !4677
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem5Dshort.exit
  ret void, !dbg !4679
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem7Dshort(ptr noundef %array7D) local_unnamed_addr #0 !dbg !4680 {
entry:
    #dbg_value(ptr %array7D, !4684, !DIExpression(), !4685)
  %tobool.not = icmp eq ptr %array7D, null, !dbg !4686
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !4688

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array7D, align 8, !dbg !4689
    #dbg_value(ptr %0, !4659, !DIExpression(), !4691)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !4693
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i, !dbg !4694

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !4695
    #dbg_value(ptr %1, !4642, !DIExpression(), !4696)
  %tobool.not.i.i = icmp eq ptr %1, null, !dbg !4698
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i, !dbg !4699

if.then.i.i:                                      ; preds = %if.then.i
  %2 = load ptr, ptr %1, align 8, !dbg !4700
  tail call void @free_mem4Dshort(ptr noundef %2), !dbg !4701
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !4702
  br label %free_mem5Dshort.exit.i, !dbg !4703

if.else.i.i:                                      ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.97, i32 noundef 100) #9, !dbg !4704
  br label %free_mem5Dshort.exit.i

free_mem5Dshort.exit.i:                           ; preds = %if.else.i.i, %if.then.i.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !4705
  br label %free_mem6Dshort.exit, !dbg !4706

if.else.i:                                        ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.98, i32 noundef 100) #9, !dbg !4707
  br label %free_mem6Dshort.exit

free_mem6Dshort.exit:                             ; preds = %free_mem5Dshort.exit.i, %if.else.i
  tail call void @free(ptr noundef nonnull %array7D) #9, !dbg !4708
  br label %if.end, !dbg !4709

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.99, i32 noundef 100) #9, !dbg !4710
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem6Dshort.exit
  ret void, !dbg !4712
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Ddouble(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1) local_unnamed_addr #0 !dbg !4713 {
entry:
    #dbg_value(ptr %array2D, !4717, !DIExpression(), !4721)
    #dbg_value(i32 %dim0, !4718, !DIExpression(), !4721)
    #dbg_value(i32 %dim1, !4719, !DIExpression(), !4721)
  %conv = sext i32 %dim0 to i64, !dbg !4722
  %mul = shl nsw i64 %conv, 3, !dbg !4724
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4725
  store ptr %call, ptr %array2D, align 8, !dbg !4726
  %cmp = icmp eq ptr %call, null, !dbg !4727
  br i1 %cmp, label %if.then, label %if.end, !dbg !4728

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.100, !574, !DIExpression(), !4729)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.100) #9, !dbg !4731
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4732
  %.pre = load ptr, ptr %array2D, align 8, !dbg !4733
  br label %if.end, !dbg !4735

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4733
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4736
  %conv3 = sext i32 %mul2 to i64, !dbg !4737
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !4738
  store ptr %call4, ptr %0, align 8, !dbg !4739
  %cmp5 = icmp eq ptr %call4, null, !dbg !4740
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4741

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.100, !574, !DIExpression(), !4742)
  %call.i30 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.100) #9, !dbg !4744
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4745
  br label %if.end8, !dbg !4746

if.end8:                                          ; preds = %if.then7, %if.end
    #dbg_value(i32 1, !4720, !DIExpression(), !4721)
  %cmp931 = icmp sgt i32 %dim0, 1, !dbg !4747
  br i1 %cmp931, label %for.body.lr.ph, label %for.end, !dbg !4750

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4747
  %1 = add nsw i64 %wide.trip.count, -1, !dbg !4750
  %2 = add nsw i64 %wide.trip.count, -2, !dbg !4750
  %xtraiter = and i64 %1, 3, !dbg !4750
  %3 = icmp ult i64 %2, 3, !dbg !4750
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4750

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %1, -4, !dbg !4750
  br label %for.body, !dbg !4750

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4720, !DIExpression(), !4721)
  %4 = load ptr, ptr %array2D, align 8, !dbg !4751
  %5 = getelementptr ptr, ptr %4, i64 %indvars.iv, !dbg !4752
  %arrayidx11 = getelementptr i8, ptr %5, i64 -8, !dbg !4752
  %6 = load ptr, ptr %arrayidx11, align 8, !dbg !4752
  %add.ptr = getelementptr inbounds double, ptr %6, i64 %idx.ext, !dbg !4753
  store ptr %add.ptr, ptr %5, align 8, !dbg !4754
    #dbg_value(i64 %indvars.iv, !4720, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4721)
  %7 = load ptr, ptr %array2D, align 8, !dbg !4751
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4752
  %9 = getelementptr i8, ptr %8, i64 8, !dbg !4752
  %10 = load ptr, ptr %8, align 8, !dbg !4752
  %add.ptr.1 = getelementptr inbounds double, ptr %10, i64 %idx.ext, !dbg !4753
  store ptr %add.ptr.1, ptr %9, align 8, !dbg !4754
    #dbg_value(i64 %indvars.iv, !4720, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4721)
  %11 = load ptr, ptr %array2D, align 8, !dbg !4751
  %12 = getelementptr ptr, ptr %11, i64 %indvars.iv, !dbg !4752
  %13 = getelementptr i8, ptr %12, i64 16, !dbg !4752
  %arrayidx11.2 = getelementptr i8, ptr %12, i64 8, !dbg !4752
  %14 = load ptr, ptr %arrayidx11.2, align 8, !dbg !4752
  %add.ptr.2 = getelementptr inbounds double, ptr %14, i64 %idx.ext, !dbg !4753
  store ptr %add.ptr.2, ptr %13, align 8, !dbg !4754
    #dbg_value(i64 %indvars.iv, !4720, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4721)
  %15 = load ptr, ptr %array2D, align 8, !dbg !4751
  %16 = getelementptr ptr, ptr %15, i64 %indvars.iv, !dbg !4752
  %17 = getelementptr i8, ptr %16, i64 24, !dbg !4752
  %arrayidx11.3 = getelementptr i8, ptr %16, i64 16, !dbg !4752
  %18 = load ptr, ptr %arrayidx11.3, align 8, !dbg !4752
  %add.ptr.3 = getelementptr inbounds double, ptr %18, i64 %idx.ext, !dbg !4753
  store ptr %add.ptr.3, ptr %17, align 8, !dbg !4754
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4755
    #dbg_value(i64 %indvars.iv.next.3, !4720, !DIExpression(), !4721)
  %niter.next.3 = add i64 %niter, 4, !dbg !4750
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4750
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4750, !llvm.loop !4756

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4750
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4750

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4720, !DIExpression(), !4721)
  %19 = load ptr, ptr %array2D, align 8, !dbg !4751
  %20 = getelementptr ptr, ptr %19, i64 %indvars.iv.epil, !dbg !4752
  %arrayidx11.epil = getelementptr i8, ptr %20, i64 -8, !dbg !4752
  %21 = load ptr, ptr %arrayidx11.epil, align 8, !dbg !4752
  %add.ptr.epil = getelementptr inbounds double, ptr %21, i64 %idx.ext, !dbg !4753
  store ptr %add.ptr.epil, ptr %20, align 8, !dbg !4754
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4755
    #dbg_value(i64 %indvars.iv.next.epil, !4720, !DIExpression(), !4721)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4750
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4750
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4750, !llvm.loop !4758

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul16 = shl i32 %dim1, 3, !dbg !4759
  %add = add i32 %mul16, 8, !dbg !4760
  %mul17 = mul i32 %add, %dim0, !dbg !4761
  ret i32 %mul17, !dbg !4762
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem1Dodouble(ptr nocapture noundef %array1D, i32 noundef %dim0, i32 noundef %offset) local_unnamed_addr #0 !dbg !4763 {
entry:
    #dbg_value(ptr %array1D, !4767, !DIExpression(), !4770)
    #dbg_value(i32 %dim0, !4768, !DIExpression(), !4770)
    #dbg_value(i32 %offset, !4769, !DIExpression(), !4770)
  %conv = sext i32 %dim0 to i64, !dbg !4771
  %mul = shl nsw i64 %conv, 3, !dbg !4773
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4774
  store ptr %call, ptr %array1D, align 8, !dbg !4775
  %cmp = icmp eq ptr %call, null, !dbg !4776
  br i1 %cmp, label %if.then, label %if.end, !dbg !4777

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.101, !574, !DIExpression(), !4778)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.101) #9, !dbg !4780
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4781
  %.pre = load ptr, ptr %array1D, align 8, !dbg !4782
  br label %if.end, !dbg !4783

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4782
  %idx.ext = sext i32 %offset to i64, !dbg !4782
  %add.ptr = getelementptr inbounds double, ptr %0, i64 %idx.ext, !dbg !4782
  store ptr %add.ptr, ptr %array1D, align 8, !dbg !4782
  %conv4 = trunc i64 %mul to i32, !dbg !4784
  ret i32 %conv4, !dbg !4785
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Dodouble(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset) local_unnamed_addr #0 !dbg !4786 {
entry:
    #dbg_value(ptr %array2D, !4790, !DIExpression(), !4795)
    #dbg_value(i32 %dim0, !4791, !DIExpression(), !4795)
    #dbg_value(i32 %dim1, !4792, !DIExpression(), !4795)
    #dbg_value(i32 %offset, !4793, !DIExpression(), !4795)
  %conv = sext i32 %dim0 to i64, !dbg !4796
  %mul = shl nsw i64 %conv, 3, !dbg !4798
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4799
  store ptr %call, ptr %array2D, align 8, !dbg !4800
  %cmp = icmp eq ptr %call, null, !dbg !4801
  br i1 %cmp, label %if.then, label %if.end, !dbg !4802

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.102, !574, !DIExpression(), !4803)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.102) #9, !dbg !4805
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4806
  %.pre = load ptr, ptr %array2D, align 8, !dbg !4807
  br label %if.end, !dbg !4809

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4807
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4810
  %conv3 = sext i32 %mul2 to i64, !dbg !4811
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !4812
  store ptr %call4, ptr %0, align 8, !dbg !4813
  %cmp5 = icmp eq ptr %call4, null, !dbg !4814
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4815

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.102, !574, !DIExpression(), !4816)
  %call.i34 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.102) #9, !dbg !4818
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4819
  br label %if.end8, !dbg !4820

if.end8:                                          ; preds = %if.then7, %if.end
  %1 = load ptr, ptr %array2D, align 8, !dbg !4821
  %2 = load ptr, ptr %1, align 8, !dbg !4822
  %idx.ext = sext i32 %offset to i64, !dbg !4822
  %add.ptr = getelementptr inbounds double, ptr %2, i64 %idx.ext, !dbg !4822
  store ptr %add.ptr, ptr %1, align 8, !dbg !4822
    #dbg_value(i32 1, !4794, !DIExpression(), !4795)
  %cmp1035 = icmp sgt i32 %dim0, 1, !dbg !4823
  br i1 %cmp1035, label %for.body.lr.ph, label %for.end, !dbg !4826

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext13 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4823
  %3 = add nsw i64 %wide.trip.count, -1, !dbg !4826
  %4 = add nsw i64 %wide.trip.count, -2, !dbg !4826
  %xtraiter = and i64 %3, 3, !dbg !4826
  %5 = icmp ult i64 %4, 3, !dbg !4826
  br i1 %5, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4826

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %3, -4, !dbg !4826
  br label %for.body, !dbg !4826

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4794, !DIExpression(), !4795)
  %6 = load ptr, ptr %array2D, align 8, !dbg !4827
  %7 = getelementptr ptr, ptr %6, i64 %indvars.iv, !dbg !4828
  %arrayidx12 = getelementptr i8, ptr %7, i64 -8, !dbg !4828
  %8 = load ptr, ptr %arrayidx12, align 8, !dbg !4828
  %add.ptr14 = getelementptr inbounds double, ptr %8, i64 %idx.ext13, !dbg !4829
  store ptr %add.ptr14, ptr %7, align 8, !dbg !4830
    #dbg_value(i64 %indvars.iv, !4794, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4795)
  %9 = load ptr, ptr %array2D, align 8, !dbg !4827
  %10 = getelementptr ptr, ptr %9, i64 %indvars.iv, !dbg !4828
  %11 = getelementptr i8, ptr %10, i64 8, !dbg !4828
  %12 = load ptr, ptr %10, align 8, !dbg !4828
  %add.ptr14.1 = getelementptr inbounds double, ptr %12, i64 %idx.ext13, !dbg !4829
  store ptr %add.ptr14.1, ptr %11, align 8, !dbg !4830
    #dbg_value(i64 %indvars.iv, !4794, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4795)
  %13 = load ptr, ptr %array2D, align 8, !dbg !4827
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv, !dbg !4828
  %15 = getelementptr i8, ptr %14, i64 16, !dbg !4828
  %arrayidx12.2 = getelementptr i8, ptr %14, i64 8, !dbg !4828
  %16 = load ptr, ptr %arrayidx12.2, align 8, !dbg !4828
  %add.ptr14.2 = getelementptr inbounds double, ptr %16, i64 %idx.ext13, !dbg !4829
  store ptr %add.ptr14.2, ptr %15, align 8, !dbg !4830
    #dbg_value(i64 %indvars.iv, !4794, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4795)
  %17 = load ptr, ptr %array2D, align 8, !dbg !4827
  %18 = getelementptr ptr, ptr %17, i64 %indvars.iv, !dbg !4828
  %19 = getelementptr i8, ptr %18, i64 24, !dbg !4828
  %arrayidx12.3 = getelementptr i8, ptr %18, i64 16, !dbg !4828
  %20 = load ptr, ptr %arrayidx12.3, align 8, !dbg !4828
  %add.ptr14.3 = getelementptr inbounds double, ptr %20, i64 %idx.ext13, !dbg !4829
  store ptr %add.ptr14.3, ptr %19, align 8, !dbg !4830
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4831
    #dbg_value(i64 %indvars.iv.next.3, !4794, !DIExpression(), !4795)
  %niter.next.3 = add i64 %niter, 4, !dbg !4826
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4826
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !4826, !llvm.loop !4832

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4826
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !4826

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4794, !DIExpression(), !4795)
  %21 = load ptr, ptr %array2D, align 8, !dbg !4827
  %22 = getelementptr ptr, ptr %21, i64 %indvars.iv.epil, !dbg !4828
  %arrayidx12.epil = getelementptr i8, ptr %22, i64 -8, !dbg !4828
  %23 = load ptr, ptr %arrayidx12.epil, align 8, !dbg !4828
  %add.ptr14.epil = getelementptr inbounds double, ptr %23, i64 %idx.ext13, !dbg !4829
  store ptr %add.ptr14.epil, ptr %22, align 8, !dbg !4830
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4831
    #dbg_value(i64 %indvars.iv.next.epil, !4794, !DIExpression(), !4795)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4826
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4826
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !4826, !llvm.loop !4834

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul19 = shl i32 %dim1, 3, !dbg !4835
  %add = add i32 %mul19, 8, !dbg !4836
  %mul20 = mul i32 %add, %dim0, !dbg !4837
  ret i32 %mul20, !dbg !4838
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem3Dodouble(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %offset) local_unnamed_addr #0 !dbg !4839 {
entry:
    #dbg_value(ptr %array3D, !4844, !DIExpression(), !4851)
    #dbg_value(i32 %dim0, !4845, !DIExpression(), !4851)
    #dbg_value(i32 %dim1, !4846, !DIExpression(), !4851)
    #dbg_value(i32 %dim2, !4847, !DIExpression(), !4851)
    #dbg_value(i32 %offset, !4848, !DIExpression(), !4851)
  %conv = sext i32 %dim0 to i64, !dbg !4852
  %mul = shl nsw i64 %conv, 3, !dbg !4854
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4855
  store ptr %call, ptr %array3D, align 8, !dbg !4856
  %cmp = icmp eq ptr %call, null, !dbg !4857
  br i1 %cmp, label %if.then, label %if.end, !dbg !4858

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.103, !574, !DIExpression(), !4859)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.103) #9, !dbg !4861
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4862
  %.pre = load ptr, ptr %array3D, align 8, !dbg !4863
  br label %if.end, !dbg !4865

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4863
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4866
  %conv3 = sext i32 %mul2 to i64, !dbg !4867
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !4868
  store ptr %call4, ptr %0, align 8, !dbg !4869
  %cmp5 = icmp eq ptr %call4, null, !dbg !4870
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4871

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.103, !574, !DIExpression(), !4872)
  %call.i74 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.103) #9, !dbg !4874
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4875
  br label %if.end8, !dbg !4876

if.end8:                                          ; preds = %if.then7, %if.end
  %1 = load ptr, ptr %array3D, align 8, !dbg !4877
  %2 = load ptr, ptr %1, align 8, !dbg !4878
  %idx.ext = sext i32 %offset to i64, !dbg !4878
  %add.ptr = getelementptr inbounds ptr, ptr %2, i64 %idx.ext, !dbg !4878
  store ptr %add.ptr, ptr %1, align 8, !dbg !4878
    #dbg_value(i32 1, !4849, !DIExpression(), !4851)
  %cmp1076 = icmp sgt i32 %dim0, 1, !dbg !4879
  br i1 %cmp1076, label %for.body.lr.ph, label %for.cond17.preheader, !dbg !4882

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext13 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !4879
  %3 = add nsw i64 %wide.trip.count, -1, !dbg !4882
  %4 = add nsw i64 %wide.trip.count, -2, !dbg !4882
  %xtraiter = and i64 %3, 3, !dbg !4882
  %5 = icmp ult i64 %4, 3, !dbg !4882
  br i1 %5, label %for.cond17.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !4882

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %3, -4, !dbg !4882
  br label %for.body, !dbg !4882

for.cond17.preheader.loopexit.unr-lcssa:          ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4882
  br i1 %lcmp.mod.not, label %for.cond17.preheader, label %for.body.epil, !dbg !4882

for.body.epil:                                    ; preds = %for.cond17.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond17.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond17.preheader.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !4849, !DIExpression(), !4851)
  %6 = load ptr, ptr %array3D, align 8, !dbg !4883
  %7 = getelementptr ptr, ptr %6, i64 %indvars.iv.epil, !dbg !4884
  %arrayidx12.epil = getelementptr i8, ptr %7, i64 -8, !dbg !4884
  %8 = load ptr, ptr %arrayidx12.epil, align 8, !dbg !4884
  %add.ptr14.epil = getelementptr inbounds ptr, ptr %8, i64 %idx.ext13, !dbg !4885
  store ptr %add.ptr14.epil, ptr %7, align 8, !dbg !4886
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !4887
    #dbg_value(i64 %indvars.iv.next.epil, !4849, !DIExpression(), !4851)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4882
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4882
  br i1 %epil.iter.cmp.not, label %for.cond17.preheader, label %for.body.epil, !dbg !4882, !llvm.loop !4888

for.cond17.preheader:                             ; preds = %for.cond17.preheader.loopexit.unr-lcssa, %for.body.epil, %if.end8
    #dbg_value(i32 0, !4849, !DIExpression(), !4851)
  %cmp1880 = icmp sgt i32 %dim0, 0, !dbg !4889
  br i1 %cmp1880, label %for.body20.lr.ph, label %for.end42, !dbg !4892

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %cmp2478 = icmp sgt i32 %dim1, 0
  %conv27 = sext i32 %dim2 to i64
  br i1 %cmp2478, label %for.body20.us.preheader, label %for.end42

for.body20.us.preheader:                          ; preds = %for.body20.lr.ph
  %sub23 = sub nsw i32 %dim1, %offset
  %sub21 = sub i32 0, %offset
  %9 = sext i32 %sub21 to i64, !dbg !4892
  %10 = sext i32 %sub23 to i64, !dbg !4892
  %wide.trip.count90 = zext nneg i32 %dim0 to i64, !dbg !4889
  br label %for.body20.us, !dbg !4892

for.body20.us:                                    ; preds = %for.body20.us.preheader, %for.cond22.for.inc40_crit_edge.us
  %indvars.iv87 = phi i64 [ 0, %for.body20.us.preheader ], [ %indvars.iv.next88, %for.cond22.for.inc40_crit_edge.us ]
    #dbg_value(i64 %indvars.iv87, !4849, !DIExpression(), !4851)
    #dbg_value(i32 %sub21, !4850, !DIExpression(), !4851)
  br label %for.body26.us, !dbg !4893

for.body26.us:                                    ; preds = %for.body20.us, %for.inc37.us
  %indvars.iv84 = phi i64 [ %9, %for.body20.us ], [ %indvars.iv.next85, %for.inc37.us ]
    #dbg_value(i64 %indvars.iv84, !4850, !DIExpression(), !4851)
  %call28.us = tail call noalias ptr @calloc(i64 noundef %conv27, i64 noundef 8) #10, !dbg !4895
  %11 = load ptr, ptr %array3D, align 8, !dbg !4898
  %arrayidx30.us = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv87, !dbg !4899
  %12 = load ptr, ptr %arrayidx30.us, align 8, !dbg !4899
  %arrayidx32.us = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv84, !dbg !4899
  store ptr %call28.us, ptr %arrayidx32.us, align 8, !dbg !4900
  %cmp33.us = icmp eq ptr %call28.us, null, !dbg !4901
  br i1 %cmp33.us, label %if.then35.us, label %for.inc37.us, !dbg !4902

if.then35.us:                                     ; preds = %for.body26.us
    #dbg_value(ptr @.str.103, !574, !DIExpression(), !4903)
  %call.i75.us = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.103) #9, !dbg !4905
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4906
  br label %for.inc37.us, !dbg !4907

for.inc37.us:                                     ; preds = %if.then35.us, %for.body26.us
  %indvars.iv.next85 = add nsw i64 %indvars.iv84, 1, !dbg !4908
    #dbg_value(i64 %indvars.iv.next85, !4850, !DIExpression(), !4851)
  %cmp24.us = icmp slt i64 %indvars.iv.next85, %10, !dbg !4909
  br i1 %cmp24.us, label %for.body26.us, label %for.cond22.for.inc40_crit_edge.us, !dbg !4893, !llvm.loop !4910

for.cond22.for.inc40_crit_edge.us:                ; preds = %for.inc37.us
  %indvars.iv.next88 = add nuw nsw i64 %indvars.iv87, 1, !dbg !4912
    #dbg_value(i64 %indvars.iv.next88, !4849, !DIExpression(), !4851)
  %exitcond91.not = icmp eq i64 %indvars.iv.next88, %wide.trip.count90, !dbg !4889
  br i1 %exitcond91.not, label %for.end42, label %for.body20.us, !dbg !4892, !llvm.loop !4913

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !4849, !DIExpression(), !4851)
  %13 = load ptr, ptr %array3D, align 8, !dbg !4883
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv, !dbg !4884
  %arrayidx12 = getelementptr i8, ptr %14, i64 -8, !dbg !4884
  %15 = load ptr, ptr %arrayidx12, align 8, !dbg !4884
  %add.ptr14 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext13, !dbg !4885
  store ptr %add.ptr14, ptr %14, align 8, !dbg !4886
    #dbg_value(i64 %indvars.iv, !4849, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4851)
  %16 = load ptr, ptr %array3D, align 8, !dbg !4883
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv, !dbg !4884
  %18 = getelementptr i8, ptr %17, i64 8, !dbg !4884
  %19 = load ptr, ptr %17, align 8, !dbg !4884
  %add.ptr14.1 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext13, !dbg !4885
  store ptr %add.ptr14.1, ptr %18, align 8, !dbg !4886
    #dbg_value(i64 %indvars.iv, !4849, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4851)
  %20 = load ptr, ptr %array3D, align 8, !dbg !4883
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv, !dbg !4884
  %22 = getelementptr i8, ptr %21, i64 16, !dbg !4884
  %arrayidx12.2 = getelementptr i8, ptr %21, i64 8, !dbg !4884
  %23 = load ptr, ptr %arrayidx12.2, align 8, !dbg !4884
  %add.ptr14.2 = getelementptr inbounds ptr, ptr %23, i64 %idx.ext13, !dbg !4885
  store ptr %add.ptr14.2, ptr %22, align 8, !dbg !4886
    #dbg_value(i64 %indvars.iv, !4849, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4851)
  %24 = load ptr, ptr %array3D, align 8, !dbg !4883
  %25 = getelementptr ptr, ptr %24, i64 %indvars.iv, !dbg !4884
  %26 = getelementptr i8, ptr %25, i64 24, !dbg !4884
  %arrayidx12.3 = getelementptr i8, ptr %25, i64 16, !dbg !4884
  %27 = load ptr, ptr %arrayidx12.3, align 8, !dbg !4884
  %add.ptr14.3 = getelementptr inbounds ptr, ptr %27, i64 %idx.ext13, !dbg !4885
  store ptr %add.ptr14.3, ptr %26, align 8, !dbg !4886
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !4887
    #dbg_value(i64 %indvars.iv.next.3, !4849, !DIExpression(), !4851)
  %niter.next.3 = add i64 %niter, 4, !dbg !4882
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4882
  br i1 %niter.ncmp.3, label %for.cond17.preheader.loopexit.unr-lcssa, label %for.body, !dbg !4882, !llvm.loop !4915

for.end42:                                        ; preds = %for.cond22.for.inc40_crit_edge.us, %for.body20.lr.ph, %for.cond17.preheader
  %mul46 = shl i32 %dim2, 3, !dbg !4917
  %add = add i32 %mul46, 8, !dbg !4918
  %mul47 = mul i32 %add, %dim1, !dbg !4919
  %add48 = add i32 %mul47, 8, !dbg !4920
  %mul49 = mul i32 %add48, %dim0, !dbg !4921
  ret i32 %mul49, !dbg !4922
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_offset_mem2Dshort(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset_y, i32 noundef %offset_x) local_unnamed_addr #0 !dbg !4923 {
entry:
    #dbg_value(ptr %array2D, !4927, !DIExpression(), !4933)
    #dbg_value(i32 %dim0, !4928, !DIExpression(), !4933)
    #dbg_value(i32 %dim1, !4929, !DIExpression(), !4933)
    #dbg_value(i32 %offset_y, !4930, !DIExpression(), !4933)
    #dbg_value(i32 %offset_x, !4931, !DIExpression(), !4933)
  %conv = sext i32 %dim0 to i64, !dbg !4934
  %mul = shl nsw i64 %conv, 3, !dbg !4936
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !4937
  store ptr %call, ptr %array2D, align 8, !dbg !4938
  %cmp = icmp eq ptr %call, null, !dbg !4939
  br i1 %cmp, label %if.then, label %if.end, !dbg !4940

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.104, !574, !DIExpression(), !4941)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.104) #9, !dbg !4943
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4944
  %.pre = load ptr, ptr %array2D, align 8, !dbg !4945
  br label %if.end, !dbg !4947

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !4945
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !4948
  %conv3 = sext i32 %mul2 to i64, !dbg !4949
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 2) #10, !dbg !4950
  store ptr %call4, ptr %0, align 8, !dbg !4951
  %cmp5 = icmp eq ptr %call4, null, !dbg !4952
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4953

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.104, !574, !DIExpression(), !4954)
  %call.i62 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.104) #9, !dbg !4956
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !4957
  br label %if.end8, !dbg !4958

if.end8:                                          ; preds = %if.then7, %if.end
  %mul9 = mul nsw i32 %offset_y, %dim1, !dbg !4959
  %add = add nsw i32 %mul9, %offset_x, !dbg !4960
  %1 = load ptr, ptr %array2D, align 8, !dbg !4961
  %2 = load ptr, ptr %1, align 8, !dbg !4962
  %idx.ext = sext i32 %add to i64, !dbg !4962
  %add.ptr = getelementptr inbounds i16, ptr %2, i64 %idx.ext, !dbg !4962
  store ptr %add.ptr, ptr %1, align 8, !dbg !4962
    #dbg_value(i32 -1, !4932, !DIExpression(), !4933)
    #dbg_value(i32 -1, !4932, !DIExpression(), !4933)
  %cmp1263 = icmp sgt i32 %offset_y, 0, !dbg !4963
  br i1 %cmp1263, label %for.body.lr.ph, label %for.cond20.preheader, !dbg !4966

for.body.lr.ph:                                   ; preds = %if.end8
  %sub11 = xor i32 %offset_y, -1
  %idx.ext16 = sext i32 %dim1 to i64
  %idx.neg = sub nsw i64 0, %idx.ext16
  %3 = sext i32 %sub11 to i64, !dbg !4966
  br label %for.body, !dbg !4966

for.cond20.preheader:                             ; preds = %for.body, %if.end8
  %sub21 = sub nsw i32 %dim1, %offset_y
    #dbg_value(i32 1, !4932, !DIExpression(), !4933)
  %cmp2265 = icmp sgt i32 %sub21, 1, !dbg !4967
  br i1 %cmp2265, label %for.body24.lr.ph, label %for.end33, !dbg !4970

for.body24.lr.ph:                                 ; preds = %for.cond20.preheader
  %idx.ext28 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %sub21 to i64, !dbg !4967
  %4 = add nsw i64 %wide.trip.count, -1, !dbg !4970
  %5 = add nsw i64 %wide.trip.count, -2, !dbg !4970
  %xtraiter = and i64 %4, 3, !dbg !4970
  %6 = icmp ult i64 %5, 3, !dbg !4970
  br i1 %6, label %for.end33.loopexit.unr-lcssa, label %for.body24.lr.ph.new, !dbg !4970

for.body24.lr.ph.new:                             ; preds = %for.body24.lr.ph
  %unroll_iter = and i64 %4, -4, !dbg !4970
  br label %for.body24, !dbg !4970

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ -1, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
    #dbg_value(i64 %indvars.iv, !4932, !DIExpression(), !4933)
  %7 = load ptr, ptr %array2D, align 8, !dbg !4971
  %8 = getelementptr ptr, ptr %7, i64 %indvars.iv, !dbg !4973
  %arrayidx15 = getelementptr i8, ptr %8, i64 8, !dbg !4973
  %9 = load ptr, ptr %arrayidx15, align 8, !dbg !4973
  %add.ptr17 = getelementptr inbounds i16, ptr %9, i64 %idx.neg, !dbg !4974
  store ptr %add.ptr17, ptr %8, align 8, !dbg !4975
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !4976
    #dbg_value(i64 %indvars.iv.next, !4932, !DIExpression(), !4933)
  %cmp12 = icmp sgt i64 %indvars.iv.next, %3, !dbg !4963
  br i1 %cmp12, label %for.body, label %for.cond20.preheader, !dbg !4966, !llvm.loop !4977

for.body24:                                       ; preds = %for.body24, %for.body24.lr.ph.new
  %indvars.iv68 = phi i64 [ 1, %for.body24.lr.ph.new ], [ %indvars.iv.next69.3, %for.body24 ]
  %niter = phi i64 [ 0, %for.body24.lr.ph.new ], [ %niter.next.3, %for.body24 ]
    #dbg_value(i64 %indvars.iv68, !4932, !DIExpression(), !4933)
  %10 = load ptr, ptr %array2D, align 8, !dbg !4979
  %11 = getelementptr ptr, ptr %10, i64 %indvars.iv68, !dbg !4980
  %arrayidx27 = getelementptr i8, ptr %11, i64 -8, !dbg !4980
  %12 = load ptr, ptr %arrayidx27, align 8, !dbg !4980
  %add.ptr29 = getelementptr inbounds i16, ptr %12, i64 %idx.ext28, !dbg !4981
  store ptr %add.ptr29, ptr %11, align 8, !dbg !4982
    #dbg_value(i64 %indvars.iv68, !4932, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !4933)
  %13 = load ptr, ptr %array2D, align 8, !dbg !4979
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv68, !dbg !4980
  %15 = getelementptr i8, ptr %14, i64 8, !dbg !4980
  %16 = load ptr, ptr %14, align 8, !dbg !4980
  %add.ptr29.1 = getelementptr inbounds i16, ptr %16, i64 %idx.ext28, !dbg !4981
  store ptr %add.ptr29.1, ptr %15, align 8, !dbg !4982
    #dbg_value(i64 %indvars.iv68, !4932, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !4933)
  %17 = load ptr, ptr %array2D, align 8, !dbg !4979
  %18 = getelementptr ptr, ptr %17, i64 %indvars.iv68, !dbg !4980
  %19 = getelementptr i8, ptr %18, i64 16, !dbg !4980
  %arrayidx27.2 = getelementptr i8, ptr %18, i64 8, !dbg !4980
  %20 = load ptr, ptr %arrayidx27.2, align 8, !dbg !4980
  %add.ptr29.2 = getelementptr inbounds i16, ptr %20, i64 %idx.ext28, !dbg !4981
  store ptr %add.ptr29.2, ptr %19, align 8, !dbg !4982
    #dbg_value(i64 %indvars.iv68, !4932, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !4933)
  %21 = load ptr, ptr %array2D, align 8, !dbg !4979
  %22 = getelementptr ptr, ptr %21, i64 %indvars.iv68, !dbg !4980
  %23 = getelementptr i8, ptr %22, i64 24, !dbg !4980
  %arrayidx27.3 = getelementptr i8, ptr %22, i64 16, !dbg !4980
  %24 = load ptr, ptr %arrayidx27.3, align 8, !dbg !4980
  %add.ptr29.3 = getelementptr inbounds i16, ptr %24, i64 %idx.ext28, !dbg !4981
  store ptr %add.ptr29.3, ptr %23, align 8, !dbg !4982
  %indvars.iv.next69.3 = add nuw nsw i64 %indvars.iv68, 4, !dbg !4983
    #dbg_value(i64 %indvars.iv.next69.3, !4932, !DIExpression(), !4933)
  %niter.next.3 = add i64 %niter, 4, !dbg !4970
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !4970
  br i1 %niter.ncmp.3, label %for.end33.loopexit.unr-lcssa, label %for.body24, !dbg !4970, !llvm.loop !4984

for.end33.loopexit.unr-lcssa:                     ; preds = %for.body24, %for.body24.lr.ph
  %indvars.iv68.unr = phi i64 [ 1, %for.body24.lr.ph ], [ %indvars.iv.next69.3, %for.body24 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !4970
  br i1 %lcmp.mod.not, label %for.end33, label %for.body24.epil, !dbg !4970

for.body24.epil:                                  ; preds = %for.end33.loopexit.unr-lcssa, %for.body24.epil
  %indvars.iv68.epil = phi i64 [ %indvars.iv.next69.epil, %for.body24.epil ], [ %indvars.iv68.unr, %for.end33.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body24.epil ], [ 0, %for.end33.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv68.epil, !4932, !DIExpression(), !4933)
  %25 = load ptr, ptr %array2D, align 8, !dbg !4979
  %26 = getelementptr ptr, ptr %25, i64 %indvars.iv68.epil, !dbg !4980
  %arrayidx27.epil = getelementptr i8, ptr %26, i64 -8, !dbg !4980
  %27 = load ptr, ptr %arrayidx27.epil, align 8, !dbg !4980
  %add.ptr29.epil = getelementptr inbounds i16, ptr %27, i64 %idx.ext28, !dbg !4981
  store ptr %add.ptr29.epil, ptr %26, align 8, !dbg !4982
  %indvars.iv.next69.epil = add nuw nsw i64 %indvars.iv68.epil, 1, !dbg !4983
    #dbg_value(i64 %indvars.iv.next69.epil, !4932, !DIExpression(), !4933)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !4970
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !4970
  br i1 %epil.iter.cmp.not, label %for.end33, label %for.body24.epil, !dbg !4970, !llvm.loop !4986

for.end33:                                        ; preds = %for.end33.loopexit.unr-lcssa, %for.body24.epil, %for.cond20.preheader
  %mul36 = shl i32 %dim1, 1, !dbg !4987
  %add37 = add i32 %mul36, 8, !dbg !4988
  %mul38 = mul i32 %add37, %dim0, !dbg !4989
  ret i32 %mul38, !dbg !4990
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem3Doint(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2, i32 noundef %offset) local_unnamed_addr #0 !dbg !4991 {
entry:
    #dbg_value(ptr %array3D, !4995, !DIExpression(), !5002)
    #dbg_value(i32 %dim0, !4996, !DIExpression(), !5002)
    #dbg_value(i32 %dim1, !4997, !DIExpression(), !5002)
    #dbg_value(i32 %dim2, !4998, !DIExpression(), !5002)
    #dbg_value(i32 %offset, !4999, !DIExpression(), !5002)
  %conv = sext i32 %dim0 to i64, !dbg !5003
  %mul = shl nsw i64 %conv, 3, !dbg !5005
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !5006
  store ptr %call, ptr %array3D, align 8, !dbg !5007
  %cmp = icmp eq ptr %call, null, !dbg !5008
  br i1 %cmp, label %if.then, label %if.end, !dbg !5009

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.105, !574, !DIExpression(), !5010)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.105) #9, !dbg !5012
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5013
  %.pre = load ptr, ptr %array3D, align 8, !dbg !5014
  br label %if.end, !dbg !5016

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !5014
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !5017
  %conv3 = sext i32 %mul2 to i64, !dbg !5018
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 8) #10, !dbg !5019
  store ptr %call4, ptr %0, align 8, !dbg !5020
  %cmp5 = icmp eq ptr %call4, null, !dbg !5021
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5022

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.105, !574, !DIExpression(), !5023)
  %call.i74 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.105) #9, !dbg !5025
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5026
  br label %if.end8, !dbg !5027

if.end8:                                          ; preds = %if.then7, %if.end
  %1 = load ptr, ptr %array3D, align 8, !dbg !5028
  %2 = load ptr, ptr %1, align 8, !dbg !5029
  %idx.ext = sext i32 %offset to i64, !dbg !5029
  %add.ptr = getelementptr inbounds ptr, ptr %2, i64 %idx.ext, !dbg !5029
  store ptr %add.ptr, ptr %1, align 8, !dbg !5029
    #dbg_value(i32 1, !5000, !DIExpression(), !5002)
  %cmp1076 = icmp sgt i32 %dim0, 1, !dbg !5030
  br i1 %cmp1076, label %for.body.lr.ph, label %for.cond17.preheader, !dbg !5033

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext13 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5030
  %3 = add nsw i64 %wide.trip.count, -1, !dbg !5033
  %4 = add nsw i64 %wide.trip.count, -2, !dbg !5033
  %xtraiter = and i64 %3, 3, !dbg !5033
  %5 = icmp ult i64 %4, 3, !dbg !5033
  br i1 %5, label %for.cond17.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !5033

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %3, -4, !dbg !5033
  br label %for.body, !dbg !5033

for.cond17.preheader.loopexit.unr-lcssa:          ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !5033
  br i1 %lcmp.mod.not, label %for.cond17.preheader, label %for.body.epil, !dbg !5033

for.body.epil:                                    ; preds = %for.cond17.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond17.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond17.preheader.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !5000, !DIExpression(), !5002)
  %6 = load ptr, ptr %array3D, align 8, !dbg !5034
  %7 = getelementptr ptr, ptr %6, i64 %indvars.iv.epil, !dbg !5035
  %arrayidx12.epil = getelementptr i8, ptr %7, i64 -8, !dbg !5035
  %8 = load ptr, ptr %arrayidx12.epil, align 8, !dbg !5035
  %add.ptr14.epil = getelementptr inbounds ptr, ptr %8, i64 %idx.ext13, !dbg !5036
  store ptr %add.ptr14.epil, ptr %7, align 8, !dbg !5037
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !5038
    #dbg_value(i64 %indvars.iv.next.epil, !5000, !DIExpression(), !5002)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !5033
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !5033
  br i1 %epil.iter.cmp.not, label %for.cond17.preheader, label %for.body.epil, !dbg !5033, !llvm.loop !5039

for.cond17.preheader:                             ; preds = %for.cond17.preheader.loopexit.unr-lcssa, %for.body.epil, %if.end8
    #dbg_value(i32 0, !5000, !DIExpression(), !5002)
  %cmp1880 = icmp sgt i32 %dim0, 0, !dbg !5040
  br i1 %cmp1880, label %for.body20.lr.ph, label %for.end42, !dbg !5043

for.body20.lr.ph:                                 ; preds = %for.cond17.preheader
  %cmp2478 = icmp sgt i32 %dim1, 0
  %conv27 = sext i32 %dim2 to i64
  br i1 %cmp2478, label %for.body20.us.preheader, label %for.end42

for.body20.us.preheader:                          ; preds = %for.body20.lr.ph
  %sub23 = sub nsw i32 %dim1, %offset
  %sub21 = sub i32 0, %offset
  %9 = sext i32 %sub21 to i64, !dbg !5043
  %10 = sext i32 %sub23 to i64, !dbg !5043
  %wide.trip.count90 = zext nneg i32 %dim0 to i64, !dbg !5040
  br label %for.body20.us, !dbg !5043

for.body20.us:                                    ; preds = %for.body20.us.preheader, %for.cond22.for.inc40_crit_edge.us
  %indvars.iv87 = phi i64 [ 0, %for.body20.us.preheader ], [ %indvars.iv.next88, %for.cond22.for.inc40_crit_edge.us ]
    #dbg_value(i64 %indvars.iv87, !5000, !DIExpression(), !5002)
    #dbg_value(i32 %sub21, !5001, !DIExpression(), !5002)
  br label %for.body26.us, !dbg !5044

for.body26.us:                                    ; preds = %for.body20.us, %for.inc37.us
  %indvars.iv84 = phi i64 [ %9, %for.body20.us ], [ %indvars.iv.next85, %for.inc37.us ]
    #dbg_value(i64 %indvars.iv84, !5001, !DIExpression(), !5002)
  %call28.us = tail call noalias ptr @calloc(i64 noundef %conv27, i64 noundef 4) #10, !dbg !5046
  %11 = load ptr, ptr %array3D, align 8, !dbg !5049
  %arrayidx30.us = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv87, !dbg !5050
  %12 = load ptr, ptr %arrayidx30.us, align 8, !dbg !5050
  %arrayidx32.us = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv84, !dbg !5050
  store ptr %call28.us, ptr %arrayidx32.us, align 8, !dbg !5051
  %cmp33.us = icmp eq ptr %call28.us, null, !dbg !5052
  br i1 %cmp33.us, label %if.then35.us, label %for.inc37.us, !dbg !5053

if.then35.us:                                     ; preds = %for.body26.us
    #dbg_value(ptr @.str.105, !574, !DIExpression(), !5054)
  %call.i75.us = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.105) #9, !dbg !5056
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5057
  br label %for.inc37.us, !dbg !5058

for.inc37.us:                                     ; preds = %if.then35.us, %for.body26.us
  %indvars.iv.next85 = add nsw i64 %indvars.iv84, 1, !dbg !5059
    #dbg_value(i64 %indvars.iv.next85, !5001, !DIExpression(), !5002)
  %cmp24.us = icmp slt i64 %indvars.iv.next85, %10, !dbg !5060
  br i1 %cmp24.us, label %for.body26.us, label %for.cond22.for.inc40_crit_edge.us, !dbg !5044, !llvm.loop !5061

for.cond22.for.inc40_crit_edge.us:                ; preds = %for.inc37.us
  %indvars.iv.next88 = add nuw nsw i64 %indvars.iv87, 1, !dbg !5063
    #dbg_value(i64 %indvars.iv.next88, !5000, !DIExpression(), !5002)
  %exitcond91.not = icmp eq i64 %indvars.iv.next88, %wide.trip.count90, !dbg !5040
  br i1 %exitcond91.not, label %for.end42, label %for.body20.us, !dbg !5043, !llvm.loop !5064

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !5000, !DIExpression(), !5002)
  %13 = load ptr, ptr %array3D, align 8, !dbg !5034
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv, !dbg !5035
  %arrayidx12 = getelementptr i8, ptr %14, i64 -8, !dbg !5035
  %15 = load ptr, ptr %arrayidx12, align 8, !dbg !5035
  %add.ptr14 = getelementptr inbounds ptr, ptr %15, i64 %idx.ext13, !dbg !5036
  store ptr %add.ptr14, ptr %14, align 8, !dbg !5037
    #dbg_value(i64 %indvars.iv, !5000, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !5002)
  %16 = load ptr, ptr %array3D, align 8, !dbg !5034
  %17 = getelementptr ptr, ptr %16, i64 %indvars.iv, !dbg !5035
  %18 = getelementptr i8, ptr %17, i64 8, !dbg !5035
  %19 = load ptr, ptr %17, align 8, !dbg !5035
  %add.ptr14.1 = getelementptr inbounds ptr, ptr %19, i64 %idx.ext13, !dbg !5036
  store ptr %add.ptr14.1, ptr %18, align 8, !dbg !5037
    #dbg_value(i64 %indvars.iv, !5000, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !5002)
  %20 = load ptr, ptr %array3D, align 8, !dbg !5034
  %21 = getelementptr ptr, ptr %20, i64 %indvars.iv, !dbg !5035
  %22 = getelementptr i8, ptr %21, i64 16, !dbg !5035
  %arrayidx12.2 = getelementptr i8, ptr %21, i64 8, !dbg !5035
  %23 = load ptr, ptr %arrayidx12.2, align 8, !dbg !5035
  %add.ptr14.2 = getelementptr inbounds ptr, ptr %23, i64 %idx.ext13, !dbg !5036
  store ptr %add.ptr14.2, ptr %22, align 8, !dbg !5037
    #dbg_value(i64 %indvars.iv, !5000, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !5002)
  %24 = load ptr, ptr %array3D, align 8, !dbg !5034
  %25 = getelementptr ptr, ptr %24, i64 %indvars.iv, !dbg !5035
  %26 = getelementptr i8, ptr %25, i64 24, !dbg !5035
  %arrayidx12.3 = getelementptr i8, ptr %25, i64 16, !dbg !5035
  %27 = load ptr, ptr %arrayidx12.3, align 8, !dbg !5035
  %add.ptr14.3 = getelementptr inbounds ptr, ptr %27, i64 %idx.ext13, !dbg !5036
  store ptr %add.ptr14.3, ptr %26, align 8, !dbg !5037
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !5038
    #dbg_value(i64 %indvars.iv.next.3, !5000, !DIExpression(), !5002)
  %niter.next.3 = add i64 %niter, 4, !dbg !5033
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !5033
  br i1 %niter.ncmp.3, label %for.cond17.preheader.loopexit.unr-lcssa, label %for.body, !dbg !5033, !llvm.loop !5066

for.end42:                                        ; preds = %for.cond22.for.inc40_crit_edge.us, %for.body20.lr.ph, %for.cond17.preheader
  %mul46 = shl i32 %dim2, 2, !dbg !5068
  %add = add i32 %mul46, 8, !dbg !5069
  %mul47 = mul i32 %add, %dim1, !dbg !5070
  %add48 = add i32 %mul47, 8, !dbg !5071
  %mul49 = mul i32 %add48, %dim0, !dbg !5072
  ret i32 %mul49, !dbg !5073
}

; Function Attrs: nounwind uwtable
define dso_local noundef i32 @get_mem2Doint(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset) local_unnamed_addr #0 !dbg !5074 {
entry:
    #dbg_value(ptr %array2D, !5078, !DIExpression(), !5083)
    #dbg_value(i32 %dim0, !5079, !DIExpression(), !5083)
    #dbg_value(i32 %dim1, !5080, !DIExpression(), !5083)
    #dbg_value(i32 %offset, !5081, !DIExpression(), !5083)
  %conv = sext i32 %dim0 to i64, !dbg !5084
  %mul = shl nsw i64 %conv, 3, !dbg !5086
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !5087
  store ptr %call, ptr %array2D, align 8, !dbg !5088
  %cmp = icmp eq ptr %call, null, !dbg !5089
  br i1 %cmp, label %if.then, label %if.end, !dbg !5090

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !5091)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !5093
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5094
  %.pre = load ptr, ptr %array2D, align 8, !dbg !5095
  br label %if.end, !dbg !5097

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !5095
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !5098
  %conv3 = sext i32 %mul2 to i64, !dbg !5099
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 4) #10, !dbg !5100
  store ptr %call4, ptr %0, align 8, !dbg !5101
  %cmp5 = icmp eq ptr %call4, null, !dbg !5102
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5103

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.55, !574, !DIExpression(), !5104)
  %call.i34 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.55) #9, !dbg !5106
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5107
  br label %if.end8, !dbg !5108

if.end8:                                          ; preds = %if.then7, %if.end
  %1 = load ptr, ptr %array2D, align 8, !dbg !5109
  %2 = load ptr, ptr %1, align 8, !dbg !5110
  %idx.ext = sext i32 %offset to i64, !dbg !5110
  %add.ptr = getelementptr inbounds i32, ptr %2, i64 %idx.ext, !dbg !5110
  store ptr %add.ptr, ptr %1, align 8, !dbg !5110
    #dbg_value(i32 1, !5082, !DIExpression(), !5083)
  %cmp1035 = icmp sgt i32 %dim0, 1, !dbg !5111
  br i1 %cmp1035, label %for.body.lr.ph, label %for.end, !dbg !5114

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext13 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5111
  %3 = add nsw i64 %wide.trip.count, -1, !dbg !5114
  %4 = add nsw i64 %wide.trip.count, -2, !dbg !5114
  %xtraiter = and i64 %3, 3, !dbg !5114
  %5 = icmp ult i64 %4, 3, !dbg !5114
  br i1 %5, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !5114

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %3, -4, !dbg !5114
  br label %for.body, !dbg !5114

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !5082, !DIExpression(), !5083)
  %6 = load ptr, ptr %array2D, align 8, !dbg !5115
  %7 = getelementptr ptr, ptr %6, i64 %indvars.iv, !dbg !5116
  %arrayidx12 = getelementptr i8, ptr %7, i64 -8, !dbg !5116
  %8 = load ptr, ptr %arrayidx12, align 8, !dbg !5116
  %add.ptr14 = getelementptr inbounds i32, ptr %8, i64 %idx.ext13, !dbg !5117
  store ptr %add.ptr14, ptr %7, align 8, !dbg !5118
    #dbg_value(i64 %indvars.iv, !5082, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !5083)
  %9 = load ptr, ptr %array2D, align 8, !dbg !5115
  %10 = getelementptr ptr, ptr %9, i64 %indvars.iv, !dbg !5116
  %11 = getelementptr i8, ptr %10, i64 8, !dbg !5116
  %12 = load ptr, ptr %10, align 8, !dbg !5116
  %add.ptr14.1 = getelementptr inbounds i32, ptr %12, i64 %idx.ext13, !dbg !5117
  store ptr %add.ptr14.1, ptr %11, align 8, !dbg !5118
    #dbg_value(i64 %indvars.iv, !5082, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !5083)
  %13 = load ptr, ptr %array2D, align 8, !dbg !5115
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv, !dbg !5116
  %15 = getelementptr i8, ptr %14, i64 16, !dbg !5116
  %arrayidx12.2 = getelementptr i8, ptr %14, i64 8, !dbg !5116
  %16 = load ptr, ptr %arrayidx12.2, align 8, !dbg !5116
  %add.ptr14.2 = getelementptr inbounds i32, ptr %16, i64 %idx.ext13, !dbg !5117
  store ptr %add.ptr14.2, ptr %15, align 8, !dbg !5118
    #dbg_value(i64 %indvars.iv, !5082, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !5083)
  %17 = load ptr, ptr %array2D, align 8, !dbg !5115
  %18 = getelementptr ptr, ptr %17, i64 %indvars.iv, !dbg !5116
  %19 = getelementptr i8, ptr %18, i64 24, !dbg !5116
  %arrayidx12.3 = getelementptr i8, ptr %18, i64 16, !dbg !5116
  %20 = load ptr, ptr %arrayidx12.3, align 8, !dbg !5116
  %add.ptr14.3 = getelementptr inbounds i32, ptr %20, i64 %idx.ext13, !dbg !5117
  store ptr %add.ptr14.3, ptr %19, align 8, !dbg !5118
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !5119
    #dbg_value(i64 %indvars.iv.next.3, !5082, !DIExpression(), !5083)
  %niter.next.3 = add i64 %niter, 4, !dbg !5114
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !5114
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !5114, !llvm.loop !5120

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !5114
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !5114

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !5082, !DIExpression(), !5083)
  %21 = load ptr, ptr %array2D, align 8, !dbg !5115
  %22 = getelementptr ptr, ptr %21, i64 %indvars.iv.epil, !dbg !5116
  %arrayidx12.epil = getelementptr i8, ptr %22, i64 -8, !dbg !5116
  %23 = load ptr, ptr %arrayidx12.epil, align 8, !dbg !5116
  %add.ptr14.epil = getelementptr inbounds i32, ptr %23, i64 %idx.ext13, !dbg !5117
  store ptr %add.ptr14.epil, ptr %22, align 8, !dbg !5118
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !5119
    #dbg_value(i64 %indvars.iv.next.epil, !5082, !DIExpression(), !5083)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !5114
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !5114
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !5114, !llvm.loop !5122

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul19 = shl i32 %dim1, 2, !dbg !5123
  %add = add i32 %mul19, 8, !dbg !5124
  %mul20 = mul i32 %add, %dim0, !dbg !5125
  ret i32 %mul20, !dbg !5126
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem3Ddouble(ptr nocapture noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %dim2) local_unnamed_addr #0 !dbg !5127 {
entry:
  %array2D = alloca ptr, align 8, !DIAssignID !5138
    #dbg_assign(i1 undef, !5137, !DIExpression(), !5138, ptr %array2D, !DIExpression(), !5139)
    #dbg_value(ptr %array3D, !5131, !DIExpression(), !5139)
    #dbg_value(i32 %dim0, !5132, !DIExpression(), !5139)
    #dbg_value(i32 %dim1, !5133, !DIExpression(), !5139)
    #dbg_value(i32 %dim2, !5134, !DIExpression(), !5139)
  %conv = sext i32 %dim0 to i64, !dbg !5140
  %mul = shl nsw i64 %conv, 3, !dbg !5141
    #dbg_value(i64 %mul, !5136, !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value), !5139)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %array2D) #9, !dbg !5142
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !5143
  store ptr %call, ptr %array3D, align 8, !dbg !5145
  %cmp = icmp eq ptr %call, null, !dbg !5146
  br i1 %cmp, label %if.then, label %if.end, !dbg !5147

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.106, !574, !DIExpression(), !5148)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.106) #9, !dbg !5150
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5151
  br label %if.end, !dbg !5152

if.end:                                           ; preds = %if.then, %entry
  %mul5 = mul nsw i32 %dim1, %dim0, !dbg !5153
  %call6 = call i32 @get_mem2Ddouble(ptr noundef nonnull %array2D, i32 noundef %mul5, i32 noundef %dim2), !dbg !5154
    #dbg_value(!DIArgList(i64 %mul, i32 %call6), !5136, !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value), !5139)
    #dbg_value(i32 0, !5135, !DIExpression(), !5139)
  %cmp721 = icmp sgt i32 %dim0, 0, !dbg !5155
  br i1 %cmp721, label %for.body.lr.ph, label %for.end, !dbg !5158

for.body.lr.ph:                                   ; preds = %if.end
  %0 = load ptr, ptr %array2D, align 8
  %1 = sext i32 %dim1 to i64, !dbg !5158
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5155
  %xtraiter = and i64 %wide.trip.count, 3, !dbg !5158
  %2 = icmp ult i32 %dim0, 4, !dbg !5158
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !5158

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 2147483644, !dbg !5158
  br label %for.body, !dbg !5158

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !5135, !DIExpression(), !5139)
  %3 = mul nsw i64 %indvars.iv, %1, !dbg !5159
  %arrayidx = getelementptr inbounds ptr, ptr %0, i64 %3, !dbg !5161
  %4 = load ptr, ptr %array3D, align 8, !dbg !5162
  %arrayidx11 = getelementptr inbounds ptr, ptr %4, i64 %indvars.iv, !dbg !5163
  store ptr %arrayidx, ptr %arrayidx11, align 8, !dbg !5164
  %indvars.iv.next = or disjoint i64 %indvars.iv, 1, !dbg !5165
    #dbg_value(i64 %indvars.iv.next, !5135, !DIExpression(), !5139)
  %5 = mul nsw i64 %indvars.iv.next, %1, !dbg !5159
  %arrayidx.1 = getelementptr inbounds ptr, ptr %0, i64 %5, !dbg !5161
  %6 = load ptr, ptr %array3D, align 8, !dbg !5162
  %arrayidx11.1 = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.next, !dbg !5163
  store ptr %arrayidx.1, ptr %arrayidx11.1, align 8, !dbg !5164
  %indvars.iv.next.1 = or disjoint i64 %indvars.iv, 2, !dbg !5165
    #dbg_value(i64 %indvars.iv.next.1, !5135, !DIExpression(), !5139)
  %7 = mul nsw i64 %indvars.iv.next.1, %1, !dbg !5159
  %arrayidx.2 = getelementptr inbounds ptr, ptr %0, i64 %7, !dbg !5161
  %8 = load ptr, ptr %array3D, align 8, !dbg !5162
  %arrayidx11.2 = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv.next.1, !dbg !5163
  store ptr %arrayidx.2, ptr %arrayidx11.2, align 8, !dbg !5164
  %indvars.iv.next.2 = or disjoint i64 %indvars.iv, 3, !dbg !5165
    #dbg_value(i64 %indvars.iv.next.2, !5135, !DIExpression(), !5139)
  %9 = mul nsw i64 %indvars.iv.next.2, %1, !dbg !5159
  %arrayidx.3 = getelementptr inbounds ptr, ptr %0, i64 %9, !dbg !5161
  %10 = load ptr, ptr %array3D, align 8, !dbg !5162
  %arrayidx11.3 = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv.next.2, !dbg !5163
  store ptr %arrayidx.3, ptr %arrayidx11.3, align 8, !dbg !5164
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !5165
    #dbg_value(i64 %indvars.iv.next.3, !5135, !DIExpression(), !5139)
  %niter.next.3 = add i64 %niter, 4, !dbg !5158
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !5158
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !5158, !llvm.loop !5166

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !5158
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !5158

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !5135, !DIExpression(), !5139)
  %11 = mul nsw i64 %indvars.iv.epil, %1, !dbg !5159
  %arrayidx.epil = getelementptr inbounds ptr, ptr %0, i64 %11, !dbg !5161
  %12 = load ptr, ptr %array3D, align 8, !dbg !5162
  %arrayidx11.epil = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv.epil, !dbg !5163
  store ptr %arrayidx.epil, ptr %arrayidx11.epil, align 8, !dbg !5164
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !5165
    #dbg_value(i64 %indvars.iv.next.epil, !5135, !DIExpression(), !5139)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !5158
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !5158
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !5158, !llvm.loop !5168

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end
  %conv1 = trunc i64 %mul to i32, !dbg !5140
    #dbg_value(i32 %conv1, !5136, !DIExpression(), !5139)
  %add = add nsw i32 %call6, %conv1, !dbg !5169
    #dbg_value(i32 %add, !5136, !DIExpression(), !5139)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %array2D) #9, !dbg !5170
  ret i32 %add, !dbg !5171
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Ddouble(ptr noundef %array2D) local_unnamed_addr #0 !dbg !5172 {
entry:
    #dbg_value(ptr %array2D, !5176, !DIExpression(), !5177)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !5178
  br i1 %tobool.not, label %if.else3, label %if.then, !dbg !5180

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !5181
  %tobool1.not = icmp eq ptr %0, null, !dbg !5181
  br i1 %tobool1.not, label %if.else, label %if.then2, !dbg !5184

if.then2:                                         ; preds = %if.then
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !5185
  br label %if.end, !dbg !5185

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.107, i32 noundef 100) #9, !dbg !5186
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !5187
  br label %if.end4, !dbg !5188

if.else3:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.107, i32 noundef 100) #9, !dbg !5189
  br label %if.end4

if.end4:                                          ; preds = %if.else3, %if.end
  ret void, !dbg !5191
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem1Dodouble(ptr noundef %array1D, i32 noundef %offset) local_unnamed_addr #0 !dbg !5192 {
entry:
    #dbg_value(ptr %array1D, !5196, !DIExpression(), !5198)
    #dbg_value(i32 %offset, !5197, !DIExpression(), !5198)
  %tobool.not = icmp eq ptr %array1D, null, !dbg !5199
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !5201

if.then:                                          ; preds = %entry
  %idx.ext = sext i32 %offset to i64, !dbg !5202
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5202
  %add.ptr = getelementptr inbounds double, ptr %array1D, i64 %idx.neg, !dbg !5202
    #dbg_value(ptr %add.ptr, !5196, !DIExpression(), !5198)
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5204
  br label %if.end, !dbg !5205

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.108, i32 noundef 100) #9, !dbg !5206
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5208
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dodouble(ptr noundef %array2D, i32 noundef %offset) local_unnamed_addr #0 !dbg !5209 {
entry:
    #dbg_value(ptr %array2D, !5213, !DIExpression(), !5215)
    #dbg_value(i32 %offset, !5214, !DIExpression(), !5215)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !5216
  br i1 %tobool.not, label %if.else5, label %if.then, !dbg !5218

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !5219
  %idx.ext = sext i32 %offset to i64, !dbg !5219
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5219
  %add.ptr = getelementptr inbounds double, ptr %0, i64 %idx.neg, !dbg !5219
  store ptr %add.ptr, ptr %array2D, align 8, !dbg !5219
  %tobool2.not = icmp eq ptr %0, null, !dbg !5221
  br i1 %tobool2.not, label %if.else, label %if.then3, !dbg !5223

if.then3:                                         ; preds = %if.then
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5224
  br label %if.end, !dbg !5224

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.109, i32 noundef 100) #9, !dbg !5225
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !5226
  br label %if.end6, !dbg !5227

if.else5:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.109, i32 noundef 100) #9, !dbg !5228
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end
  ret void, !dbg !5230
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Dodouble(ptr noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset) local_unnamed_addr #0 !dbg !5231 {
entry:
    #dbg_value(ptr %array3D, !5235, !DIExpression(), !5241)
    #dbg_value(i32 %dim0, !5236, !DIExpression(), !5241)
    #dbg_value(i32 %dim1, !5237, !DIExpression(), !5241)
    #dbg_value(i32 %offset, !5238, !DIExpression(), !5241)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !5242
  br i1 %tobool.not, label %if.else23, label %for.cond.preheader, !dbg !5244

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !5239, !DIExpression(), !5241)
  %cmp41 = icmp sgt i32 %dim0, 0, !dbg !5245
  %cmp339 = icmp sgt i32 %dim1, 0
  %or.cond = and i1 %cmp41, %cmp339, !dbg !5249
  br i1 %or.cond, label %for.body.us.preheader, label %for.end15, !dbg !5249

for.body.us.preheader:                            ; preds = %for.cond.preheader
  %sub2 = sub nsw i32 %dim1, %offset
  %sub = sub i32 0, %offset
  %0 = sext i32 %sub to i64, !dbg !5249
  %1 = sext i32 %sub2 to i64, !dbg !5249
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5245
  br label %for.body.us, !dbg !5249

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond1.for.inc13_crit_edge.us
  %indvars.iv45 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next46, %for.cond1.for.inc13_crit_edge.us ]
    #dbg_value(i64 %indvars.iv45, !5239, !DIExpression(), !5241)
    #dbg_value(i32 %sub, !5240, !DIExpression(), !5241)
  %arrayidx.us = getelementptr inbounds ptr, ptr %array3D, i64 %indvars.iv45
  br label %for.body4.us, !dbg !5250

for.body4.us:                                     ; preds = %for.body.us, %for.inc.us
  %indvars.iv = phi i64 [ %0, %for.body.us ], [ %indvars.iv.next, %for.inc.us ]
    #dbg_value(i64 %indvars.iv, !5240, !DIExpression(), !5241)
  %2 = load ptr, ptr %arrayidx.us, align 8, !dbg !5253
  %arrayidx6.us = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv, !dbg !5253
  %3 = load ptr, ptr %arrayidx6.us, align 8, !dbg !5253
  %tobool7.not.us = icmp eq ptr %3, null, !dbg !5253
  br i1 %tobool7.not.us, label %if.else.us, label %if.then8.us, !dbg !5257

if.then8.us:                                      ; preds = %for.body4.us
  tail call void @free(ptr noundef nonnull %3) #9, !dbg !5258
  br label %for.inc.us, !dbg !5258

if.else.us:                                       ; preds = %for.body4.us
  tail call void @error(ptr noundef nonnull @.str.110, i32 noundef 100) #9, !dbg !5259
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else.us, %if.then8.us
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5260
    #dbg_value(i64 %indvars.iv.next, !5240, !DIExpression(), !5241)
  %cmp3.us = icmp slt i64 %indvars.iv.next, %1, !dbg !5261
  br i1 %cmp3.us, label %for.body4.us, label %for.cond1.for.inc13_crit_edge.us, !dbg !5250, !llvm.loop !5262

for.cond1.for.inc13_crit_edge.us:                 ; preds = %for.inc.us
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !5264
    #dbg_value(i64 %indvars.iv.next46, !5239, !DIExpression(), !5241)
  %exitcond.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count, !dbg !5245
  br i1 %exitcond.not, label %for.end15, label %for.body.us, !dbg !5249, !llvm.loop !5265

for.end15:                                        ; preds = %for.cond1.for.inc13_crit_edge.us, %for.cond.preheader
  %4 = load ptr, ptr %array3D, align 8, !dbg !5267
  %idx.ext = sext i32 %offset to i64, !dbg !5267
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5267
  %add.ptr = getelementptr inbounds ptr, ptr %4, i64 %idx.neg, !dbg !5267
  store ptr %add.ptr, ptr %array3D, align 8, !dbg !5267
  %tobool18.not = icmp eq ptr %4, null, !dbg !5268
  br i1 %tobool18.not, label %if.else21, label %if.then19, !dbg !5270

if.then19:                                        ; preds = %for.end15
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5271
  br label %if.end22, !dbg !5271

if.else21:                                        ; preds = %for.end15
  tail call void @error(ptr noundef nonnull @.str.110, i32 noundef 100) #9, !dbg !5272
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then19
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !5273
  br label %if.end24, !dbg !5274

if.else23:                                        ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.110, i32 noundef 100) #9, !dbg !5275
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end22
  ret void, !dbg !5277
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Doint(ptr noundef %array3D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset) local_unnamed_addr #0 !dbg !5278 {
entry:
    #dbg_value(ptr %array3D, !5282, !DIExpression(), !5288)
    #dbg_value(i32 %dim0, !5283, !DIExpression(), !5288)
    #dbg_value(i32 %dim1, !5284, !DIExpression(), !5288)
    #dbg_value(i32 %offset, !5285, !DIExpression(), !5288)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !5289
  br i1 %tobool.not, label %if.else23, label %for.cond.preheader, !dbg !5291

for.cond.preheader:                               ; preds = %entry
    #dbg_value(i32 0, !5286, !DIExpression(), !5288)
  %cmp41 = icmp sgt i32 %dim0, 0, !dbg !5292
  %cmp339 = icmp sgt i32 %dim1, 0
  %or.cond = and i1 %cmp41, %cmp339, !dbg !5296
  br i1 %or.cond, label %for.body.us.preheader, label %for.end15, !dbg !5296

for.body.us.preheader:                            ; preds = %for.cond.preheader
  %sub2 = sub nsw i32 %dim1, %offset
  %sub = sub i32 0, %offset
  %0 = sext i32 %sub to i64, !dbg !5296
  %1 = sext i32 %sub2 to i64, !dbg !5296
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5292
  br label %for.body.us, !dbg !5296

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond1.for.inc13_crit_edge.us
  %indvars.iv45 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next46, %for.cond1.for.inc13_crit_edge.us ]
    #dbg_value(i64 %indvars.iv45, !5286, !DIExpression(), !5288)
    #dbg_value(i32 %sub, !5287, !DIExpression(), !5288)
  %arrayidx.us = getelementptr inbounds ptr, ptr %array3D, i64 %indvars.iv45
  br label %for.body4.us, !dbg !5297

for.body4.us:                                     ; preds = %for.body.us, %for.inc.us
  %indvars.iv = phi i64 [ %0, %for.body.us ], [ %indvars.iv.next, %for.inc.us ]
    #dbg_value(i64 %indvars.iv, !5287, !DIExpression(), !5288)
  %2 = load ptr, ptr %arrayidx.us, align 8, !dbg !5300
  %arrayidx6.us = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv, !dbg !5300
  %3 = load ptr, ptr %arrayidx6.us, align 8, !dbg !5300
  %tobool7.not.us = icmp eq ptr %3, null, !dbg !5300
  br i1 %tobool7.not.us, label %if.else.us, label %if.then8.us, !dbg !5304

if.then8.us:                                      ; preds = %for.body4.us
  tail call void @free(ptr noundef nonnull %3) #9, !dbg !5305
  br label %for.inc.us, !dbg !5305

if.else.us:                                       ; preds = %for.body4.us
  tail call void @error(ptr noundef nonnull @.str.111, i32 noundef 100) #9, !dbg !5306
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else.us, %if.then8.us
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5307
    #dbg_value(i64 %indvars.iv.next, !5287, !DIExpression(), !5288)
  %cmp3.us = icmp slt i64 %indvars.iv.next, %1, !dbg !5308
  br i1 %cmp3.us, label %for.body4.us, label %for.cond1.for.inc13_crit_edge.us, !dbg !5297, !llvm.loop !5309

for.cond1.for.inc13_crit_edge.us:                 ; preds = %for.inc.us
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1, !dbg !5311
    #dbg_value(i64 %indvars.iv.next46, !5286, !DIExpression(), !5288)
  %exitcond.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count, !dbg !5292
  br i1 %exitcond.not, label %for.end15, label %for.body.us, !dbg !5296, !llvm.loop !5312

for.end15:                                        ; preds = %for.cond1.for.inc13_crit_edge.us, %for.cond.preheader
  %4 = load ptr, ptr %array3D, align 8, !dbg !5314
  %idx.ext = sext i32 %offset to i64, !dbg !5314
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5314
  %add.ptr = getelementptr inbounds ptr, ptr %4, i64 %idx.neg, !dbg !5314
  store ptr %add.ptr, ptr %array3D, align 8, !dbg !5314
  %tobool18.not = icmp eq ptr %4, null, !dbg !5315
  br i1 %tobool18.not, label %if.else21, label %if.then19, !dbg !5317

if.then19:                                        ; preds = %for.end15
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5318
  br label %if.end22, !dbg !5318

if.else21:                                        ; preds = %for.end15
  tail call void @error(ptr noundef nonnull @.str.111, i32 noundef 100) #9, !dbg !5319
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then19
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !5320
  br label %if.end24, !dbg !5321

if.else23:                                        ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.111, i32 noundef 100) #9, !dbg !5322
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.end22
  ret void, !dbg !5324
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Doint(ptr noundef %array2D, i32 noundef %offset) local_unnamed_addr #0 !dbg !5325 {
entry:
    #dbg_value(ptr %array2D, !5329, !DIExpression(), !5331)
    #dbg_value(i32 %offset, !5330, !DIExpression(), !5331)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !5332
  br i1 %tobool.not, label %if.else5, label %if.then, !dbg !5334

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !5335
  %idx.ext = sext i32 %offset to i64, !dbg !5335
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5335
  %add.ptr = getelementptr inbounds i32, ptr %0, i64 %idx.neg, !dbg !5335
  store ptr %add.ptr, ptr %array2D, align 8, !dbg !5335
  %tobool2.not = icmp eq ptr %0, null, !dbg !5337
  br i1 %tobool2.not, label %if.else, label %if.then3, !dbg !5339

if.then3:                                         ; preds = %if.then
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5340
  br label %if.end, !dbg !5340

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.112, i32 noundef 100) #9, !dbg !5341
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !5342
  br label %if.end6, !dbg !5343

if.else5:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.112, i32 noundef 100) #9, !dbg !5344
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end
  ret void, !dbg !5346
}

; Function Attrs: nounwind uwtable
define dso_local void @free_offset_mem2Dshort(ptr noundef %array2D, i32 noundef %dim1, i32 noundef %offset_y, i32 noundef %offset_x) local_unnamed_addr #0 !dbg !5347 {
entry:
    #dbg_value(ptr %array2D, !5351, !DIExpression(), !5355)
    #dbg_value(i32 %dim1, !5352, !DIExpression(), !5355)
    #dbg_value(i32 %offset_y, !5353, !DIExpression(), !5355)
    #dbg_value(i32 %offset_x, !5354, !DIExpression(), !5355)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !5356
  br i1 %tobool.not, label %if.else5, label %if.then, !dbg !5358

if.then:                                          ; preds = %entry
  %mul = mul nsw i32 %offset_y, %dim1, !dbg !5359
  %add = add nsw i32 %mul, %offset_x, !dbg !5361
  %0 = load ptr, ptr %array2D, align 8, !dbg !5362
  %idx.ext = sext i32 %add to i64, !dbg !5362
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5362
  %add.ptr = getelementptr inbounds i16, ptr %0, i64 %idx.neg, !dbg !5362
  store ptr %add.ptr, ptr %array2D, align 8, !dbg !5362
  %tobool2.not = icmp eq ptr %0, null, !dbg !5363
  br i1 %tobool2.not, label %if.else, label %if.then3, !dbg !5365

if.then3:                                         ; preds = %if.then
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5366
  br label %if.end, !dbg !5366

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.113, i32 noundef 100) #9, !dbg !5367
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !5368
  br label %if.end6, !dbg !5369

if.else5:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.113, i32 noundef 100) #9, !dbg !5370
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end
  ret void, !dbg !5372
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem3Ddouble(ptr noundef %array3D) local_unnamed_addr #0 !dbg !5373 {
entry:
    #dbg_value(ptr %array3D, !5377, !DIExpression(), !5378)
  %tobool.not = icmp eq ptr %array3D, null, !dbg !5379
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !5381

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array3D, align 8, !dbg !5382
    #dbg_value(ptr %0, !5176, !DIExpression(), !5384)
  %tobool.not.i = icmp eq ptr %0, null, !dbg !5386
  br i1 %tobool.not.i, label %if.else3.i, label %if.then.i, !dbg !5387

if.then.i:                                        ; preds = %if.then
  %1 = load ptr, ptr %0, align 8, !dbg !5388
  %tobool1.not.i = icmp eq ptr %1, null, !dbg !5388
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i, !dbg !5389

if.then2.i:                                       ; preds = %if.then.i
  tail call void @free(ptr noundef nonnull %1) #9, !dbg !5390
  br label %if.end.i, !dbg !5390

if.else.i:                                        ; preds = %if.then.i
  tail call void @error(ptr noundef nonnull @.str.107, i32 noundef 100) #9, !dbg !5391
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then2.i
  tail call void @free(ptr noundef nonnull %0) #9, !dbg !5392
  br label %free_mem2Ddouble.exit, !dbg !5393

if.else3.i:                                       ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.107, i32 noundef 100) #9, !dbg !5394
  br label %free_mem2Ddouble.exit

free_mem2Ddouble.exit:                            ; preds = %if.end.i, %if.else3.i
  tail call void @free(ptr noundef nonnull %array3D) #9, !dbg !5395
  br label %if.end, !dbg !5396

if.else:                                          ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.72, i32 noundef 100) #9, !dbg !5397
  br label %if.end

if.end:                                           ; preds = %if.else, %free_mem2Ddouble.exit
  ret void, !dbg !5399
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_mem2Dolm(ptr nocapture noundef %array2D, i32 noundef %dim0, i32 noundef %dim1, i32 noundef %offset) local_unnamed_addr #0 !dbg !5400 {
entry:
    #dbg_value(ptr %array2D, !5404, !DIExpression(), !5409)
    #dbg_value(i32 %dim0, !5405, !DIExpression(), !5409)
    #dbg_value(i32 %dim1, !5406, !DIExpression(), !5409)
    #dbg_value(i32 %offset, !5407, !DIExpression(), !5409)
  %conv = sext i32 %dim0 to i64, !dbg !5410
  %mul = shl nsw i64 %conv, 3, !dbg !5412
  %call = tail call noalias ptr @malloc(i64 noundef %mul) #8, !dbg !5413
  store ptr %call, ptr %array2D, align 8, !dbg !5414
  %cmp = icmp eq ptr %call, null, !dbg !5415
  br i1 %cmp, label %if.then, label %if.end, !dbg !5416

if.then:                                          ; preds = %entry
    #dbg_value(ptr @.str.114, !574, !DIExpression(), !5417)
  %call.i = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.114) #9, !dbg !5419
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5420
  %.pre = load ptr, ptr %array2D, align 8, !dbg !5421
  br label %if.end, !dbg !5423

if.end:                                           ; preds = %if.then, %entry
  %0 = phi ptr [ %.pre, %if.then ], [ %call, %entry ], !dbg !5421
  %mul2 = mul nsw i32 %dim1, %dim0, !dbg !5424
  %conv3 = sext i32 %mul2 to i64, !dbg !5425
  %call4 = tail call noalias ptr @calloc(i64 noundef %conv3, i64 noundef 48) #10, !dbg !5426
  store ptr %call4, ptr %0, align 8, !dbg !5427
  %cmp5 = icmp eq ptr %call4, null, !dbg !5428
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !5429

if.then7:                                         ; preds = %if.end
    #dbg_value(ptr @.str.114, !574, !DIExpression(), !5430)
  %call.i34 = tail call i32 (ptr, i64, ptr, ...) @snprintf(ptr noundef nonnull dereferenceable(1) @errortext, i64 noundef 300, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.114) #9, !dbg !5432
  tail call void @error(ptr noundef nonnull @errortext, i32 noundef 100) #9, !dbg !5433
  br label %if.end8, !dbg !5434

if.end8:                                          ; preds = %if.then7, %if.end
  %1 = load ptr, ptr %array2D, align 8, !dbg !5435
  %2 = load ptr, ptr %1, align 8, !dbg !5436
  %idx.ext = sext i32 %offset to i64, !dbg !5436
  %add.ptr = getelementptr inbounds %struct.lambda_params, ptr %2, i64 %idx.ext, !dbg !5436
  store ptr %add.ptr, ptr %1, align 8, !dbg !5436
    #dbg_value(i32 1, !5408, !DIExpression(), !5409)
  %cmp1035 = icmp sgt i32 %dim0, 1, !dbg !5437
  br i1 %cmp1035, label %for.body.lr.ph, label %for.end, !dbg !5440

for.body.lr.ph:                                   ; preds = %if.end8
  %idx.ext13 = sext i32 %dim1 to i64
  %wide.trip.count = zext nneg i32 %dim0 to i64, !dbg !5437
  %3 = add nsw i64 %wide.trip.count, -1, !dbg !5440
  %4 = add nsw i64 %wide.trip.count, -2, !dbg !5440
  %xtraiter = and i64 %3, 3, !dbg !5440
  %5 = icmp ult i64 %4, 3, !dbg !5440
  br i1 %5, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new, !dbg !5440

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %3, -4, !dbg !5440
  br label %for.body, !dbg !5440

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
    #dbg_value(i64 %indvars.iv, !5408, !DIExpression(), !5409)
  %6 = load ptr, ptr %array2D, align 8, !dbg !5441
  %7 = getelementptr ptr, ptr %6, i64 %indvars.iv, !dbg !5442
  %arrayidx12 = getelementptr i8, ptr %7, i64 -8, !dbg !5442
  %8 = load ptr, ptr %arrayidx12, align 8, !dbg !5442
  %add.ptr14 = getelementptr inbounds %struct.lambda_params, ptr %8, i64 %idx.ext13, !dbg !5443
  store ptr %add.ptr14, ptr %7, align 8, !dbg !5444
    #dbg_value(i64 %indvars.iv, !5408, !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value), !5409)
  %9 = load ptr, ptr %array2D, align 8, !dbg !5441
  %10 = getelementptr ptr, ptr %9, i64 %indvars.iv, !dbg !5442
  %11 = getelementptr i8, ptr %10, i64 8, !dbg !5442
  %12 = load ptr, ptr %10, align 8, !dbg !5442
  %add.ptr14.1 = getelementptr inbounds %struct.lambda_params, ptr %12, i64 %idx.ext13, !dbg !5443
  store ptr %add.ptr14.1, ptr %11, align 8, !dbg !5444
    #dbg_value(i64 %indvars.iv, !5408, !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value), !5409)
  %13 = load ptr, ptr %array2D, align 8, !dbg !5441
  %14 = getelementptr ptr, ptr %13, i64 %indvars.iv, !dbg !5442
  %15 = getelementptr i8, ptr %14, i64 16, !dbg !5442
  %arrayidx12.2 = getelementptr i8, ptr %14, i64 8, !dbg !5442
  %16 = load ptr, ptr %arrayidx12.2, align 8, !dbg !5442
  %add.ptr14.2 = getelementptr inbounds %struct.lambda_params, ptr %16, i64 %idx.ext13, !dbg !5443
  store ptr %add.ptr14.2, ptr %15, align 8, !dbg !5444
    #dbg_value(i64 %indvars.iv, !5408, !DIExpression(DW_OP_plus_uconst, 3, DW_OP_stack_value), !5409)
  %17 = load ptr, ptr %array2D, align 8, !dbg !5441
  %18 = getelementptr ptr, ptr %17, i64 %indvars.iv, !dbg !5442
  %19 = getelementptr i8, ptr %18, i64 24, !dbg !5442
  %arrayidx12.3 = getelementptr i8, ptr %18, i64 16, !dbg !5442
  %20 = load ptr, ptr %arrayidx12.3, align 8, !dbg !5442
  %add.ptr14.3 = getelementptr inbounds %struct.lambda_params, ptr %20, i64 %idx.ext13, !dbg !5443
  store ptr %add.ptr14.3, ptr %19, align 8, !dbg !5444
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4, !dbg !5445
    #dbg_value(i64 %indvars.iv.next.3, !5408, !DIExpression(), !5409)
  %niter.next.3 = add i64 %niter, 4, !dbg !5440
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter, !dbg !5440
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body, !dbg !5440, !llvm.loop !5446

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0, !dbg !5440
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil, !dbg !5440

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
    #dbg_value(i64 %indvars.iv.epil, !5408, !DIExpression(), !5409)
  %21 = load ptr, ptr %array2D, align 8, !dbg !5441
  %22 = getelementptr ptr, ptr %21, i64 %indvars.iv.epil, !dbg !5442
  %arrayidx12.epil = getelementptr i8, ptr %22, i64 -8, !dbg !5442
  %23 = load ptr, ptr %arrayidx12.epil, align 8, !dbg !5442
  %add.ptr14.epil = getelementptr inbounds %struct.lambda_params, ptr %23, i64 %idx.ext13, !dbg !5443
  store ptr %add.ptr14.epil, ptr %22, align 8, !dbg !5444
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1, !dbg !5445
    #dbg_value(i64 %indvars.iv.next.epil, !5408, !DIExpression(), !5409)
  %epil.iter.next = add i64 %epil.iter, 1, !dbg !5440
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter, !dbg !5440
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !dbg !5440, !llvm.loop !5448

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %if.end8
  %mul19 = mul i32 %dim1, 48, !dbg !5449
  %add = or disjoint i32 %mul19, 8, !dbg !5450
  %mul20 = mul i32 %add, %dim0, !dbg !5451
  ret i32 %mul20, !dbg !5452
}

; Function Attrs: nounwind uwtable
define dso_local void @free_mem2Dolm(ptr noundef %array2D, i32 noundef %offset) local_unnamed_addr #0 !dbg !5453 {
entry:
    #dbg_value(ptr %array2D, !5457, !DIExpression(), !5459)
    #dbg_value(i32 %offset, !5458, !DIExpression(), !5459)
  %tobool.not = icmp eq ptr %array2D, null, !dbg !5460
  br i1 %tobool.not, label %if.else5, label %if.then, !dbg !5462

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr %array2D, align 8, !dbg !5463
  %idx.ext = sext i32 %offset to i64, !dbg !5463
  %idx.neg = sub nsw i64 0, %idx.ext, !dbg !5463
  %add.ptr = getelementptr inbounds %struct.lambda_params, ptr %0, i64 %idx.neg, !dbg !5463
  store ptr %add.ptr, ptr %array2D, align 8, !dbg !5463
  %tobool2.not = icmp eq ptr %0, null, !dbg !5465
  br i1 %tobool2.not, label %if.else, label %if.then3, !dbg !5467

if.then3:                                         ; preds = %if.then
  tail call void @free(ptr noundef %add.ptr) #9, !dbg !5468
  br label %if.end, !dbg !5468

if.else:                                          ; preds = %if.then
  tail call void @error(ptr noundef nonnull @.str.115, i32 noundef 100) #9, !dbg !5469
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  tail call void @free(ptr noundef nonnull %array2D) #9, !dbg !5470
  br label %if.end6, !dbg !5471

if.else5:                                         ; preds = %entry
  tail call void @error(ptr noundef nonnull @.str.115, i32 noundef 100) #9, !dbg !5472
  br label %if.end6

if.end6:                                          ; preds = %if.else5, %if.end
  ret void, !dbg !5474
}

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind }
attributes #10 = { nounwind allocsize(0,1) }

!llvm.dbg.cu = !{!302}
!llvm.module.flags = !{!548, !549, !550, !551, !552, !553, !554}
!llvm.ident = !{!555}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 34, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "ldecod_src/memalloc.c", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "df14b31cd5090eadf61836081abf4127")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 264, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 33)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 37, type: !3, isLocal: true, isDefinition: true)
!9 = !DIGlobalVariableExpression(var: !10, expr: !DIExpression())
!10 = distinct !DIGlobalVariable(scope: null, file: !2, line: 75, type: !11, isLocal: true, isDefinition: true)
!11 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 184, elements: !12)
!12 = !{!13}
!13 = !DISubrange(count: 23)
!14 = !DIGlobalVariableExpression(var: !15, expr: !DIExpression())
!15 = distinct !DIGlobalVariable(scope: null, file: !2, line: 98, type: !16, isLocal: true, isDefinition: true)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 168, elements: !17)
!17 = !{!18}
!18 = !DISubrange(count: 21)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(scope: null, file: !2, line: 122, type: !21, isLocal: true, isDefinition: true)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 360, elements: !22)
!22 = !{!23}
!23 = !DISubrange(count: 45)
!24 = !DIGlobalVariableExpression(var: !25, expr: !DIExpression())
!25 = distinct !DIGlobalVariable(scope: null, file: !2, line: 146, type: !26, isLocal: true, isDefinition: true)
!26 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 344, elements: !27)
!27 = !{!28}
!28 = !DISubrange(count: 43)
!29 = !DIGlobalVariableExpression(var: !30, expr: !DIExpression())
!30 = distinct !DIGlobalVariable(scope: null, file: !2, line: 169, type: !16, isLocal: true, isDefinition: true)
!31 = !DIGlobalVariableExpression(var: !32, expr: !DIExpression())
!32 = distinct !DIGlobalVariable(scope: null, file: !2, line: 171, type: !16, isLocal: true, isDefinition: true)
!33 = !DIGlobalVariableExpression(var: !34, expr: !DIExpression())
!34 = distinct !DIGlobalVariable(scope: null, file: !2, line: 193, type: !16, isLocal: true, isDefinition: true)
!35 = !DIGlobalVariableExpression(var: !36, expr: !DIExpression())
!36 = distinct !DIGlobalVariable(scope: null, file: !2, line: 217, type: !26, isLocal: true, isDefinition: true)
!37 = !DIGlobalVariableExpression(var: !38, expr: !DIExpression())
!38 = distinct !DIGlobalVariable(scope: null, file: !2, line: 244, type: !26, isLocal: true, isDefinition: true)
!39 = !DIGlobalVariableExpression(var: !40, expr: !DIExpression())
!40 = distinct !DIGlobalVariable(scope: null, file: !2, line: 263, type: !41, isLocal: true, isDefinition: true)
!41 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !42)
!42 = !{!43}
!43 = !DISubrange(count: 24)
!44 = !DIGlobalVariableExpression(var: !45, expr: !DIExpression())
!45 = distinct !DIGlobalVariable(scope: null, file: !2, line: 287, type: !41, isLocal: true, isDefinition: true)
!46 = !DIGlobalVariableExpression(var: !47, expr: !DIExpression())
!47 = distinct !DIGlobalVariable(scope: null, file: !2, line: 311, type: !41, isLocal: true, isDefinition: true)
!48 = !DIGlobalVariableExpression(var: !49, expr: !DIExpression())
!49 = distinct !DIGlobalVariable(scope: null, file: !2, line: 335, type: !41, isLocal: true, isDefinition: true)
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(scope: null, file: !2, line: 359, type: !52, isLocal: true, isDefinition: true)
!52 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 368, elements: !53)
!53 = !{!54}
!54 = !DISubrange(count: 46)
!55 = !DIGlobalVariableExpression(var: !56, expr: !DIExpression())
!56 = distinct !DIGlobalVariable(scope: null, file: !2, line: 386, type: !52, isLocal: true, isDefinition: true)
!57 = !DIGlobalVariableExpression(var: !58, expr: !DIExpression())
!58 = distinct !DIGlobalVariable(scope: null, file: !2, line: 406, type: !52, isLocal: true, isDefinition: true)
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(scope: null, file: !2, line: 426, type: !52, isLocal: true, isDefinition: true)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(scope: null, file: !2, line: 444, type: !11, isLocal: true, isDefinition: true)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(scope: null, file: !2, line: 468, type: !11, isLocal: true, isDefinition: true)
!65 = !DIGlobalVariableExpression(var: !66, expr: !DIExpression())
!66 = distinct !DIGlobalVariable(scope: null, file: !2, line: 515, type: !16, isLocal: true, isDefinition: true)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(scope: null, file: !2, line: 539, type: !69, isLocal: true, isDefinition: true)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 176, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 22)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(scope: null, file: !2, line: 563, type: !69, isLocal: true, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(scope: null, file: !2, line: 587, type: !69, isLocal: true, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(scope: null, file: !2, line: 611, type: !16, isLocal: true, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(scope: null, file: !2, line: 635, type: !21, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !81, expr: !DIExpression())
!81 = distinct !DIGlobalVariable(scope: null, file: !2, line: 662, type: !21, isLocal: true, isDefinition: true)
!82 = !DIGlobalVariableExpression(var: !83, expr: !DIExpression())
!83 = distinct !DIGlobalVariable(scope: null, file: !2, line: 681, type: !26, isLocal: true, isDefinition: true)
!84 = !DIGlobalVariableExpression(var: !85, expr: !DIExpression())
!85 = distinct !DIGlobalVariable(scope: null, file: !2, line: 708, type: !26, isLocal: true, isDefinition: true)
!86 = !DIGlobalVariableExpression(var: !87, expr: !DIExpression())
!87 = distinct !DIGlobalVariable(scope: null, file: !2, line: 728, type: !26, isLocal: true, isDefinition: true)
!88 = !DIGlobalVariableExpression(var: !89, expr: !DIExpression())
!89 = distinct !DIGlobalVariable(scope: null, file: !2, line: 748, type: !26, isLocal: true, isDefinition: true)
!90 = !DIGlobalVariableExpression(var: !91, expr: !DIExpression())
!91 = distinct !DIGlobalVariable(scope: null, file: !2, line: 767, type: !26, isLocal: true, isDefinition: true)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(scope: null, file: !2, line: 787, type: !26, isLocal: true, isDefinition: true)
!94 = !DIGlobalVariableExpression(var: !95, expr: !DIExpression())
!95 = distinct !DIGlobalVariable(scope: null, file: !2, line: 804, type: !69, isLocal: true, isDefinition: true)
!96 = !DIGlobalVariableExpression(var: !97, expr: !DIExpression())
!97 = distinct !DIGlobalVariable(scope: null, file: !2, line: 822, type: !69, isLocal: true, isDefinition: true)
!98 = !DIGlobalVariableExpression(var: !99, expr: !DIExpression())
!99 = distinct !DIGlobalVariable(scope: null, file: !2, line: 841, type: !100, isLocal: true, isDefinition: true)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 232, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 29)
!103 = !DIGlobalVariableExpression(var: !104, expr: !DIExpression())
!104 = distinct !DIGlobalVariable(scope: null, file: !2, line: 872, type: !69, isLocal: true, isDefinition: true)
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(scope: null, file: !2, line: 887, type: !100, isLocal: true, isDefinition: true)
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(scope: null, file: !2, line: 902, type: !109, isLocal: true, isDefinition: true)
!109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 312, elements: !110)
!110 = !{!111}
!111 = !DISubrange(count: 39)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(scope: null, file: !2, line: 940, type: !100, isLocal: true, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(scope: null, file: !2, line: 955, type: !109, isLocal: true, isDefinition: true)
!116 = !DIGlobalVariableExpression(var: !117, expr: !DIExpression())
!117 = distinct !DIGlobalVariable(scope: null, file: !2, line: 994, type: !100, isLocal: true, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1009, type: !109, isLocal: true, isDefinition: true)
!120 = !DIGlobalVariableExpression(var: !121, expr: !DIExpression())
!121 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1034, type: !122, isLocal: true, isDefinition: true)
!122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, elements: !123)
!123 = !{!124}
!124 = !DISubrange(count: 44)
!125 = !DIGlobalVariableExpression(var: !126, expr: !DIExpression())
!126 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1052, type: !122, isLocal: true, isDefinition: true)
!127 = !DIGlobalVariableExpression(var: !128, expr: !DIExpression())
!128 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1069, type: !129, isLocal: true, isDefinition: true)
!129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 408, elements: !130)
!130 = !{!131}
!131 = !DISubrange(count: 51)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1096, type: !122, isLocal: true, isDefinition: true)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1129, type: !136, isLocal: true, isDefinition: true)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 488, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 61)
!139 = !DIGlobalVariableExpression(var: !140, expr: !DIExpression())
!140 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1150, type: !122, isLocal: true, isDefinition: true)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1163, type: !129, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1176, type: !136, isLocal: true, isDefinition: true)
!145 = !DIGlobalVariableExpression(var: !146, expr: !DIExpression())
!146 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1196, type: !122, isLocal: true, isDefinition: true)
!147 = !DIGlobalVariableExpression(var: !148, expr: !DIExpression())
!148 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1209, type: !129, isLocal: true, isDefinition: true)
!149 = !DIGlobalVariableExpression(var: !150, expr: !DIExpression())
!150 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1241, type: !151, isLocal: true, isDefinition: true)
!151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 152, elements: !152)
!152 = !{!153}
!153 = !DISubrange(count: 19)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1290, type: !69, isLocal: true, isDefinition: true)
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1333, type: !100, isLocal: true, isDefinition: true)
!158 = !DIGlobalVariableExpression(var: !159, expr: !DIExpression())
!159 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1363, type: !41, isLocal: true, isDefinition: true)
!160 = !DIGlobalVariableExpression(var: !161, expr: !DIExpression())
!161 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1378, type: !162, isLocal: true, isDefinition: true)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 208, elements: !163)
!163 = !{!164}
!164 = !DISubrange(count: 26)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1402, type: !151, isLocal: true, isDefinition: true)
!167 = !DIGlobalVariableExpression(var: !168, expr: !DIExpression())
!168 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1426, type: !151, isLocal: true, isDefinition: true)
!169 = !DIGlobalVariableExpression(var: !170, expr: !DIExpression())
!170 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1450, type: !69, isLocal: true, isDefinition: true)
!171 = !DIGlobalVariableExpression(var: !172, expr: !DIExpression())
!172 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1474, type: !41, isLocal: true, isDefinition: true)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1489, type: !162, isLocal: true, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1513, type: !69, isLocal: true, isDefinition: true)
!177 = !DIGlobalVariableExpression(var: !178, expr: !DIExpression())
!178 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1528, type: !41, isLocal: true, isDefinition: true)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1543, type: !162, isLocal: true, isDefinition: true)
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1567, type: !69, isLocal: true, isDefinition: true)
!183 = !DIGlobalVariableExpression(var: !184, expr: !DIExpression())
!184 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1592, type: !185, isLocal: true, isDefinition: true)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 328, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 41)
!188 = !DIGlobalVariableExpression(var: !189, expr: !DIExpression())
!189 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1616, type: !122, isLocal: true, isDefinition: true)
!190 = !DIGlobalVariableExpression(var: !191, expr: !DIExpression())
!191 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1633, type: !129, isLocal: true, isDefinition: true)
!192 = !DIGlobalVariableExpression(var: !193, expr: !DIExpression())
!193 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1657, type: !52, isLocal: true, isDefinition: true)
!194 = !DIGlobalVariableExpression(var: !195, expr: !DIExpression())
!195 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1683, type: !185, isLocal: true, isDefinition: true)
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1703, type: !185, isLocal: true, isDefinition: true)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1723, type: !122, isLocal: true, isDefinition: true)
!200 = !DIGlobalVariableExpression(var: !201, expr: !DIExpression())
!201 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1744, type: !52, isLocal: true, isDefinition: true)
!202 = !DIGlobalVariableExpression(var: !203, expr: !DIExpression())
!203 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1757, type: !204, isLocal: true, isDefinition: true)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 384, elements: !205)
!205 = !{!206}
!206 = !DISubrange(count: 48)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1776, type: !122, isLocal: true, isDefinition: true)
!209 = !DIGlobalVariableExpression(var: !210, expr: !DIExpression())
!210 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1788, type: !52, isLocal: true, isDefinition: true)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1800, type: !204, isLocal: true, isDefinition: true)
!213 = !DIGlobalVariableExpression(var: !214, expr: !DIExpression())
!214 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1819, type: !122, isLocal: true, isDefinition: true)
!215 = !DIGlobalVariableExpression(var: !216, expr: !DIExpression())
!216 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1833, type: !217, isLocal: true, isDefinition: true)
!217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, elements: !218)
!218 = !{!219}
!219 = !DISubrange(count: 30)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1853, type: !222, isLocal: true, isDefinition: true)
!222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 200, elements: !223)
!223 = !{!224}
!224 = !DISubrange(count: 25)
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1902, type: !222, isLocal: true, isDefinition: true)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1927, type: !222, isLocal: true, isDefinition: true)
!229 = !DIGlobalVariableExpression(var: !230, expr: !DIExpression())
!230 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1951, type: !41, isLocal: true, isDefinition: true)
!231 = !DIGlobalVariableExpression(var: !232, expr: !DIExpression())
!232 = distinct !DIGlobalVariable(scope: null, file: !2, line: 1975, type: !41, isLocal: true, isDefinition: true)
!233 = !DIGlobalVariableExpression(var: !234, expr: !DIExpression())
!234 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2000, type: !41, isLocal: true, isDefinition: true)
!235 = !DIGlobalVariableExpression(var: !236, expr: !DIExpression())
!236 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2024, type: !41, isLocal: true, isDefinition: true)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2048, type: !41, isLocal: true, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2072, type: !41, isLocal: true, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2095, type: !243, isLocal: true, isDefinition: true)
!243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 376, elements: !244)
!244 = !{!245}
!245 = !DISubrange(count: 47)
!246 = !DIGlobalVariableExpression(var: !247, expr: !DIExpression())
!247 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2121, type: !243, isLocal: true, isDefinition: true)
!248 = !DIGlobalVariableExpression(var: !249, expr: !DIExpression())
!249 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2141, type: !243, isLocal: true, isDefinition: true)
!250 = !DIGlobalVariableExpression(var: !251, expr: !DIExpression())
!251 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2158, type: !52, isLocal: true, isDefinition: true)
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2184, type: !52, isLocal: true, isDefinition: true)
!254 = !DIGlobalVariableExpression(var: !255, expr: !DIExpression())
!255 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2204, type: !52, isLocal: true, isDefinition: true)
!256 = !DIGlobalVariableExpression(var: !257, expr: !DIExpression())
!257 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2224, type: !52, isLocal: true, isDefinition: true)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2244, type: !52, isLocal: true, isDefinition: true)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2264, type: !52, isLocal: true, isDefinition: true)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2282, type: !222, isLocal: true, isDefinition: true)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2306, type: !162, isLocal: true, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2328, type: !162, isLocal: true, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2354, type: !162, isLocal: true, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2388, type: !272, isLocal: true, isDefinition: true)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 248, elements: !273)
!273 = !{!274}
!274 = !DISubrange(count: 31)
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2419, type: !11, isLocal: true, isDefinition: true)
!277 = !DIGlobalVariableExpression(var: !278, expr: !DIExpression())
!278 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2482, type: !222, isLocal: true, isDefinition: true)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2508, type: !243, isLocal: true, isDefinition: true)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2535, type: !204, isLocal: true, isDefinition: true)
!283 = !DIGlobalVariableExpression(var: !284, expr: !DIExpression())
!284 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2553, type: !204, isLocal: true, isDefinition: true)
!285 = !DIGlobalVariableExpression(var: !286, expr: !DIExpression())
!286 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2582, type: !204, isLocal: true, isDefinition: true)
!287 = !DIGlobalVariableExpression(var: !288, expr: !DIExpression())
!288 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2617, type: !21, isLocal: true, isDefinition: true)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2649, type: !21, isLocal: true, isDefinition: true)
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2675, type: !293, isLocal: true, isDefinition: true)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 424, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 53)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2722, type: !69, isLocal: true, isDefinition: true)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2750, type: !122, isLocal: true, isDefinition: true)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(scope: null, file: !2, line: 2768, type: !204, isLocal: true, isDefinition: true)
!302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2, producer: "clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !303, retainedTypes: !311, globals: !547, splitDebugInlining: false, nameTableKind: None)
!303 = !{!304}
!304 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !305, line: 135, baseType: !306, size: 32, elements: !307)
!305 = !DIFile(filename: "ldecod_src/inc/types.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "64f87bd13f2911471c7313b4ac17e90c")
!306 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!307 = !{!308, !309, !310}
!308 = !DIEnumerator(name: "FRAME", value: 0)
!309 = !DIEnumerator(name: "TOP_FIELD", value: 1)
!310 = !DIEnumerator(name: "BOTTOM_FIELD", value: 2)
!311 = !{!312, !318, !319, !320, !350, !351, !363, !364, !491, !492, !493, !501, !502, !503, !504, !505, !509, !510, !511, !512, !513, !514, !515, !516, !313, !412, !517, !518, !519, !423, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !427, !428, !539, !540, !541, !542, !543, !544, !545, !546}
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "imgpel", file: !315, line: 41, baseType: !316)
!315 = !DIFile(filename: "ldecod_src/inc/typedefs.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "e1393d024b72e653f4e6dbeffdb0b154")
!316 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16", file: !315, line: 23, baseType: !317)
!317 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "DistortionData", file: !322, line: 28, baseType: !323)
!322 = !DIFile(filename: "ldecod_src/inc/distortion.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "4a0bacf595bd1a578672eab86a0cc72b")
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "distortion_data", file: !322, line: 19, size: 2048, elements: !324)
!324 = !{!325, !330, !340, !344, !346, !347, !348}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4rd", scope: !323, file: !322, line: 21, baseType: !326, size: 512)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 512, elements: !328)
!327 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!328 = !{!329, !329}
!329 = !DISubrange(count: 4)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "i4x4", scope: !323, file: !322, line: 22, baseType: !331, size: 1024, offset: 512)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 1024, elements: !328)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "distblk", file: !315, line: 43, baseType: !333)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64", file: !334, line: 103, baseType: !335)
!334 = !DIFile(filename: "ldecod_src/inc/win32.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "100def0ffeee72ecdc377183538a04bb")
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !336, line: 27, baseType: !337)
!336 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "", checksumkind: CSK_MD5, checksum: "55bcbdc3159515ebd91d351a70d505f4")
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !338, line: 44, baseType: !339)
!338 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "d108b5f93a74c50510d7d9bc0ab36df9")
!339 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8", scope: !323, file: !322, line: 23, baseType: !341, size: 256, offset: 1536)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 256, elements: !342)
!342 = !{!343, !343}
!343 = !DISubrange(count: 2)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "i8x8rd", scope: !323, file: !322, line: 24, baseType: !345, size: 128, offset: 1792)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 128, elements: !342)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "i16x16", scope: !323, file: !322, line: 25, baseType: !327, size: 32, offset: 1920)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "i16x16rd", scope: !323, file: !322, line: 26, baseType: !327, size: 32, offset: 1952)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "rd_cost", scope: !323, file: !322, line: 27, baseType: !349, size: 64, offset: 1984)
!349 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "LambdaParams", file: !353, line: 22, baseType: !354)
!353 = !DIFile(filename: "ldecod_src/inc/lagrangian.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "8b7bf04cfb074afff52461c462d803e1")
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_params", file: !353, line: 17, size: 384, elements: !355)
!355 = !{!356, !357, !361}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "md", scope: !354, file: !353, line: 19, baseType: !349, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !354, file: !353, line: 20, baseType: !358, size: 192, offset: 64)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 192, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 3)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "mf", scope: !354, file: !353, line: 21, baseType: !362, size: 96, offset: 256)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 96, elements: !359)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "PicMotionParams", file: !366, line: 43, baseType: !367)
!366 = !DIFile(filename: "ldecod_src/inc/mbuffer.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "1ba7faf5f978b0f36a8f480bbf7b3401")
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pic_motion_params", file: !366, line: 36, size: 256, elements: !368)
!368 = !{!369, !483, !490}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "ref_pic", scope: !367, file: !366, line: 38, baseType: !370, size: 128)
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 128, elements: !447)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "storable_picture", file: !366, line: 46, size: 3328, elements: !373)
!373 = !{!374, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !388, !389, !390, !391, !392, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !413, !414, !417, !419, !424, !426, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !448, !449, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !480}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !372, file: !366, line: 48, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "PictureStructure", file: !305, line: 140, baseType: !304)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "poc", scope: !372, file: !366, line: 50, baseType: !327, size: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "top_poc", scope: !372, file: !366, line: 51, baseType: !327, size: 32, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_poc", scope: !372, file: !366, line: 52, baseType: !327, size: 32, offset: 96)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "frame_poc", scope: !372, file: !366, line: 53, baseType: !327, size: 32, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "frame_num", scope: !372, file: !366, line: 54, baseType: !306, size: 32, offset: 160)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_frame", scope: !372, file: !366, line: 55, baseType: !306, size: 32, offset: 192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "pic_num", scope: !372, file: !366, line: 57, baseType: !327, size: 32, offset: 224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_pic_num", scope: !372, file: !366, line: 58, baseType: !327, size: 32, offset: 256)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_frame_idx", scope: !372, file: !366, line: 59, baseType: !327, size: 32, offset: 288)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "is_long_term", scope: !372, file: !366, line: 61, baseType: !386, size: 8, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "byte", file: !315, line: 21, baseType: !387)
!387 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "used_for_reference", scope: !372, file: !366, line: 62, baseType: !327, size: 32, offset: 352)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "is_output", scope: !372, file: !366, line: 63, baseType: !327, size: 32, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "non_existing", scope: !372, file: !366, line: 64, baseType: !327, size: 32, offset: 416)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "separate_colour_plane_flag", scope: !372, file: !366, line: 65, baseType: !327, size: 32, offset: 448)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "max_slice_id", scope: !372, file: !366, line: 67, baseType: !393, size: 16, offset: 480)
!393 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "size_x", scope: !372, file: !366, line: 69, baseType: !327, size: 32, offset: 512)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "size_y", scope: !372, file: !366, line: 69, baseType: !327, size: 32, offset: 544)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "size_x_cr", scope: !372, file: !366, line: 69, baseType: !327, size: 32, offset: 576)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "size_y_cr", scope: !372, file: !366, line: 69, baseType: !327, size: 32, offset: 608)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "size_x_m1", scope: !372, file: !366, line: 70, baseType: !327, size: 32, offset: 640)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "size_y_m1", scope: !372, file: !366, line: 70, baseType: !327, size: 32, offset: 672)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "size_x_cr_m1", scope: !372, file: !366, line: 70, baseType: !327, size: 32, offset: 704)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "size_y_cr_m1", scope: !372, file: !366, line: 70, baseType: !327, size: 32, offset: 736)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "coded_frame", scope: !372, file: !366, line: 71, baseType: !327, size: 32, offset: 768)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mb_aff_frame_flag", scope: !372, file: !366, line: 72, baseType: !327, size: 32, offset: 800)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "PicWidthInMbs", scope: !372, file: !366, line: 73, baseType: !306, size: 32, offset: 832)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "PicSizeInMbs", scope: !372, file: !366, line: 74, baseType: !306, size: 32, offset: 864)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "iLumaPadY", scope: !372, file: !366, line: 75, baseType: !327, size: 32, offset: 896)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "iLumaPadX", scope: !372, file: !366, line: 75, baseType: !327, size: 32, offset: 928)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "iChromaPadY", scope: !372, file: !366, line: 76, baseType: !327, size: 32, offset: 960)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "iChromaPadX", scope: !372, file: !366, line: 76, baseType: !327, size: 32, offset: 992)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "imgY", scope: !372, file: !366, line: 79, baseType: !312, size: 64, offset: 1024)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "imgUV", scope: !372, file: !366, line: 80, baseType: !412, size: 64, offset: 1088)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "img_comp", scope: !372, file: !366, line: 81, baseType: !412, size: 64, offset: 1152)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "mv_info", scope: !372, file: !366, line: 84, baseType: !415, size: 64, offset: 1216)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "JVmv_info", scope: !372, file: !366, line: 85, baseType: !418, size: 192, offset: 1280)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 192, elements: !359)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "motion", scope: !372, file: !366, line: 87, baseType: !420, size: 64, offset: 1472)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pic_motion_params_old", file: !366, line: 29, size: 64, elements: !421)
!421 = !{!422}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "mb_field", scope: !420, file: !366, line: 31, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "JVmotion", scope: !372, file: !366, line: 88, baseType: !425, size: 192, offset: 1536)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 192, elements: !359)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "slice_id", scope: !372, file: !366, line: 90, baseType: !427, size: 64, offset: 1728)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "top_field", scope: !372, file: !366, line: 92, baseType: !371, size: 64, offset: 1792)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_field", scope: !372, file: !366, line: 93, baseType: !371, size: 64, offset: 1856)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !372, file: !366, line: 94, baseType: !371, size: 64, offset: 1920)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "slice_type", scope: !372, file: !366, line: 96, baseType: !327, size: 32, offset: 1984)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "idr_flag", scope: !372, file: !366, line: 97, baseType: !327, size: 32, offset: 2016)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "no_output_of_prior_pics_flag", scope: !372, file: !366, line: 98, baseType: !327, size: 32, offset: 2048)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_reference_flag", scope: !372, file: !366, line: 99, baseType: !327, size: 32, offset: 2080)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "adaptive_ref_pic_buffering_flag", scope: !372, file: !366, line: 100, baseType: !327, size: 32, offset: 2112)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_format_idc", scope: !372, file: !366, line: 102, baseType: !327, size: 32, offset: 2144)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "frame_mbs_only_flag", scope: !372, file: !366, line: 103, baseType: !327, size: 32, offset: 2176)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "frame_cropping_flag", scope: !372, file: !366, line: 104, baseType: !327, size: 32, offset: 2208)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "frame_cropping_rect_left_offset", scope: !372, file: !366, line: 105, baseType: !327, size: 32, offset: 2240)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "frame_cropping_rect_right_offset", scope: !372, file: !366, line: 106, baseType: !327, size: 32, offset: 2272)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "frame_cropping_rect_top_offset", scope: !372, file: !366, line: 107, baseType: !327, size: 32, offset: 2304)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "frame_cropping_rect_bottom_offset", scope: !372, file: !366, line: 108, baseType: !327, size: 32, offset: 2336)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !372, file: !366, line: 109, baseType: !327, size: 32, offset: 2368)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "chroma_qp_offset", scope: !372, file: !366, line: 110, baseType: !446, size: 64, offset: 2400)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 64, elements: !447)
!447 = !{!343}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "slice_qp_delta", scope: !372, file: !366, line: 111, baseType: !327, size: 32, offset: 2464)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "dec_ref_pic_marking_buffer", scope: !372, file: !366, line: 112, baseType: !450, size: 64, offset: 2496)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecRefPicMarking_t", file: !452, line: 194, baseType: !453)
!452 = !DIFile(filename: "ldecod_src/inc/global.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "c4ca3c417c5616a2ff6b6266e7376fc1")
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DecRefPicMarking_s", file: !452, line: 186, size: 256, elements: !454)
!454 = !{!455, !456, !457, !458, !459, !460}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "memory_management_control_operation", scope: !453, file: !452, line: 188, baseType: !327, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "difference_of_pic_nums_minus1", scope: !453, file: !452, line: 189, baseType: !327, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_pic_num", scope: !453, file: !452, line: 190, baseType: !327, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "long_term_frame_idx", scope: !453, file: !452, line: 191, baseType: !327, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "max_long_term_frame_idx_plus1", scope: !453, file: !452, line: 192, baseType: !327, size: 32, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "Next", scope: !453, file: !452, line: 193, baseType: !461, size: 64, offset: 192)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "concealed_pic", scope: !372, file: !366, line: 115, baseType: !327, size: 32, offset: 2560)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "seiHasTone_mapping", scope: !372, file: !366, line: 118, baseType: !327, size: 32, offset: 2592)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "tone_mapping_model_id", scope: !372, file: !366, line: 119, baseType: !327, size: 32, offset: 2624)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "tonemapped_bit_depth", scope: !372, file: !366, line: 120, baseType: !327, size: 32, offset: 2656)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "tone_mapping_lut", scope: !372, file: !366, line: 121, baseType: !313, size: 64, offset: 2688)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "view_id", scope: !372, file: !366, line: 124, baseType: !327, size: 32, offset: 2752)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "inter_view_flag", scope: !372, file: !366, line: 125, baseType: !327, size: 32, offset: 2784)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_pic_flag", scope: !372, file: !366, line: 126, baseType: !327, size: 32, offset: 2816)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "iLumaStride", scope: !372, file: !366, line: 128, baseType: !327, size: 32, offset: 2848)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "iChromaStride", scope: !372, file: !366, line: 129, baseType: !327, size: 32, offset: 2880)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "iLumaExpandedHeight", scope: !372, file: !366, line: 130, baseType: !327, size: 32, offset: 2912)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "iChromaExpandedHeight", scope: !372, file: !366, line: 131, baseType: !327, size: 32, offset: 2944)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cur_imgY", scope: !372, file: !366, line: 132, baseType: !312, size: 64, offset: 3008)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "no_ref", scope: !372, file: !366, line: 133, baseType: !327, size: 32, offset: 3072)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "iCodingType", scope: !372, file: !366, line: 134, baseType: !327, size: 32, offset: 3104)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "listXsize", scope: !372, file: !366, line: 136, baseType: !478, size: 16, offset: 3136)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 16, elements: !447)
!479 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "listX", scope: !372, file: !366, line: 137, baseType: !481, size: 128, offset: 3200)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 128, elements: !447)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "mv", scope: !367, file: !366, line: 39, baseType: !484, size: 64, offset: 128)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 64, elements: !447)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "MotionVector", file: !452, line: 104, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 100, size: 32, elements: !487)
!487 = !{!488, !489}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "mv_x", scope: !486, file: !452, line: 102, baseType: !393, size: 16)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "mv_y", scope: !486, file: !452, line: 103, baseType: !393, size: 16, offset: 16)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ref_idx", scope: !367, file: !366, line: 40, baseType: !478, size: 16, offset: 192)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "LevelQuantParams", file: !495, line: 21, baseType: !496)
!495 = !DIFile(filename: "ldecod_src/inc/quant_params.h", directory: "/home/yjs/workspace/x264-test/src", checksumkind: CSK_MD5, checksum: "e63d1c6a2fb27627d8643dee4eda38e3")
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "level_quant_params", file: !495, line: 17, size: 96, elements: !497)
!497 = !{!498, !499, !500}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "OffsetComp", scope: !496, file: !495, line: 18, baseType: !327, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ScaleComp", scope: !496, file: !495, line: 19, baseType: !327, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "InvScaleComp", scope: !496, file: !495, line: 20, baseType: !327, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "StorablePicturePtr", file: !366, line: 140, baseType: !507)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "StorablePicture", file: !366, line: 138, baseType: !372)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!547 = !{!0, !7, !9, !14, !19, !24, !29, !31, !33, !35, !37, !39, !44, !46, !48, !50, !55, !57, !59, !61, !63, !65, !67, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !103, !105, !107, !112, !114, !116, !118, !120, !125, !127, !132, !134, !139, !141, !143, !145, !147, !149, !154, !156, !158, !160, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !188, !190, !192, !194, !196, !198, !200, !202, !207, !209, !211, !213, !215, !220, !225, !227, !229, !231, !233, !235, !237, !239, !241, !246, !248, !250, !252, !254, !256, !258, !260, !262, !264, !266, !268, !270, !275, !277, !279, !281, !283, !285, !287, !289, !291, !296, !298, !300}
!548 = !{i32 7, !"Dwarf Version", i32 5}
!549 = !{i32 2, !"Debug Info Version", i32 3}
!550 = !{i32 1, !"wchar_size", i32 4}
!551 = !{i32 8, !"PIC Level", i32 2}
!552 = !{i32 7, !"PIE Level", i32 2}
!553 = !{i32 7, !"uwtable", i32 2}
!554 = !{i32 7, !"debug-info-assignment-tracking", i1 true}
!555 = !{!"clang version 19.0.0git (git@github.com:QuqqU/GPUISel-llvm.git ed922481952e7fbe7b5da8613bc5ccf78f796536)"}
!556 = distinct !DISubprogram(name: "init_top_bot_planes", scope: !2, file: !2, line: 29, type: !557, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !559)
!557 = !DISubroutineType(types: !558)
!558 = !{!327, !312, !327, !412, !412}
!559 = !{!560, !561, !562, !563, !564}
!560 = !DILocalVariable(name: "imgFrame", arg: 1, scope: !556, file: !2, line: 29, type: !312)
!561 = !DILocalVariable(name: "dim0", arg: 2, scope: !556, file: !2, line: 29, type: !327)
!562 = !DILocalVariable(name: "imgTopField", arg: 3, scope: !556, file: !2, line: 29, type: !412)
!563 = !DILocalVariable(name: "imgBotField", arg: 4, scope: !556, file: !2, line: 29, type: !412)
!564 = !DILocalVariable(name: "i", scope: !556, file: !2, line: 31, type: !327)
!565 = !DILocation(line: 0, scope: !556)
!566 = !DILocation(line: 33, column: 47, scope: !567)
!567 = distinct !DILexicalBlock(scope: !556, file: !2, line: 33, column: 6)
!568 = !DILocation(line: 33, column: 42, scope: !567)
!569 = !DILocation(line: 33, column: 52, scope: !567)
!570 = !DILocation(line: 33, column: 35, scope: !567)
!571 = !DILocation(line: 33, column: 22, scope: !567)
!572 = !DILocation(line: 33, column: 72, scope: !567)
!573 = !DILocation(line: 33, column: 6, scope: !556)
!574 = !DILocalVariable(name: "where", arg: 1, scope: !575, file: !2, line: 1831, type: !578)
!575 = distinct !DISubprogram(name: "no_mem_exit", scope: !2, file: !2, line: 1831, type: !576, scopeLine: 1832, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !579)
!576 = !DISubroutineType(types: !577)
!577 = !{null, !578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64)
!579 = !{!574}
!580 = !DILocation(line: 0, scope: !575, inlinedAt: !581)
!581 = distinct !DILocation(line: 34, column: 5, scope: !567)
!582 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !581)
!583 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !581)
!584 = !DILocation(line: 34, column: 5, scope: !567)
!585 = !DILocation(line: 36, column: 35, scope: !586)
!586 = distinct !DILexicalBlock(scope: !556, file: !2, line: 36, column: 6)
!587 = !DILocation(line: 36, column: 22, scope: !586)
!588 = !DILocation(line: 36, column: 72, scope: !586)
!589 = !DILocation(line: 36, column: 6, scope: !556)
!590 = !DILocation(line: 0, scope: !575, inlinedAt: !591)
!591 = distinct !DILocation(line: 37, column: 5, scope: !586)
!592 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !591)
!593 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !591)
!594 = !DILocation(line: 37, column: 5, scope: !586)
!595 = !DILocation(line: 39, column: 16, scope: !596)
!596 = distinct !DILexicalBlock(scope: !597, file: !2, line: 39, column: 3)
!597 = distinct !DILexicalBlock(scope: !556, file: !2, line: 39, column: 3)
!598 = !DILocation(line: 39, column: 3, scope: !597)
!599 = !DILocation(line: 41, column: 37, scope: !600)
!600 = distinct !DILexicalBlock(scope: !596, file: !2, line: 40, column: 3)
!601 = !DILocation(line: 41, column: 26, scope: !600)
!602 = !DILocation(line: 41, column: 6, scope: !600)
!603 = !DILocation(line: 41, column: 5, scope: !600)
!604 = !DILocation(line: 41, column: 23, scope: !600)
!605 = !DILocation(line: 42, column: 41, scope: !600)
!606 = !DILocation(line: 42, column: 26, scope: !600)
!607 = !DILocation(line: 42, column: 6, scope: !600)
!608 = !DILocation(line: 42, column: 5, scope: !600)
!609 = !DILocation(line: 42, column: 23, scope: !600)
!610 = !DILocation(line: 39, column: 30, scope: !596)
!611 = distinct !{!611, !598, !612}
!612 = !DILocation(line: 43, column: 3, scope: !597)
!613 = !DILocation(line: 45, column: 15, scope: !556)
!614 = !DILocation(line: 45, column: 3, scope: !556)
!615 = !DISubprogram(name: "malloc", scope: !616, file: !616, line: 540, type: !617, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!616 = !DIFile(filename: "/usr/include/stdlib.h", directory: "", checksumkind: CSK_MD5, checksum: "02258fad21adf111bb9df9825e61954a")
!617 = !DISubroutineType(types: !618)
!618 = !{!318, !619}
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !620, line: 18, baseType: !621)
!620 = !DIFile(filename: "GPUISel-llvm/build/lib/clang/19/include/__stddef_size_t.h", directory: "/home/yjs/workspace", checksumkind: CSK_MD5, checksum: "2c44e821a2b1951cde2eb0fb2e656867")
!621 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!622 = !DILocation(line: 0, scope: !575)
!623 = !DILocation(line: 1833, column: 4, scope: !575)
!624 = !DILocation(line: 1834, column: 4, scope: !575)
!625 = !DILocation(line: 1835, column: 1, scope: !575)
!626 = distinct !DISubprogram(name: "free_top_bot_planes", scope: !2, file: !2, line: 56, type: !627, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !629)
!627 = !DISubroutineType(types: !628)
!628 = !{null, !312, !312}
!629 = !{!630, !631}
!630 = !DILocalVariable(name: "imgTopField", arg: 1, scope: !626, file: !2, line: 56, type: !312)
!631 = !DILocalVariable(name: "imgBotField", arg: 2, scope: !626, file: !2, line: 56, type: !312)
!632 = !DILocation(line: 0, scope: !626)
!633 = !DILocation(line: 58, column: 3, scope: !626)
!634 = !DILocation(line: 59, column: 3, scope: !626)
!635 = !DILocation(line: 60, column: 1, scope: !626)
!636 = !DISubprogram(name: "free", scope: !616, file: !616, line: 555, type: !637, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!637 = !DISubroutineType(types: !638)
!638 = !{null, !318}
!639 = distinct !DISubprogram(name: "get_mem2Ddist", scope: !2, file: !2, line: 70, type: !640, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !643)
!640 = !DISubroutineType(types: !641)
!641 = !{!327, !642, !327, !327}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!643 = !{!644, !645, !646, !647}
!644 = !DILocalVariable(name: "array2D", arg: 1, scope: !639, file: !2, line: 70, type: !642)
!645 = !DILocalVariable(name: "dim0", arg: 2, scope: !639, file: !2, line: 70, type: !327)
!646 = !DILocalVariable(name: "dim1", arg: 3, scope: !639, file: !2, line: 70, type: !327)
!647 = !DILocalVariable(name: "i", scope: !639, file: !2, line: 72, type: !327)
!648 = !DILocation(line: 0, scope: !639)
!649 = !DILocation(line: 74, column: 46, scope: !650)
!650 = distinct !DILexicalBlock(scope: !639, file: !2, line: 74, column: 6)
!651 = !DILocation(line: 74, column: 51, scope: !650)
!652 = !DILocation(line: 74, column: 39, scope: !650)
!653 = !DILocation(line: 74, column: 19, scope: !650)
!654 = !DILocation(line: 74, column: 85, scope: !650)
!655 = !DILocation(line: 74, column: 6, scope: !639)
!656 = !DILocation(line: 0, scope: !575, inlinedAt: !657)
!657 = distinct !DILocation(line: 75, column: 5, scope: !650)
!658 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !657)
!659 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !657)
!660 = !DILocation(line: 76, column: 9, scope: !661)
!661 = distinct !DILexicalBlock(scope: !639, file: !2, line: 76, column: 6)
!662 = !DILocation(line: 75, column: 5, scope: !650)
!663 = !DILocation(line: 76, column: 51, scope: !661)
!664 = !DILocation(line: 76, column: 46, scope: !661)
!665 = !DILocation(line: 76, column: 39, scope: !661)
!666 = !DILocation(line: 76, column: 19, scope: !661)
!667 = !DILocation(line: 76, column: 85, scope: !661)
!668 = !DILocation(line: 76, column: 6, scope: !639)
!669 = !DILocation(line: 0, scope: !575, inlinedAt: !670)
!670 = distinct !DILocation(line: 77, column: 5, scope: !661)
!671 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !670)
!672 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !670)
!673 = !DILocation(line: 77, column: 5, scope: !661)
!674 = !DILocation(line: 79, column: 17, scope: !675)
!675 = distinct !DILexicalBlock(scope: !676, file: !2, line: 79, column: 3)
!676 = distinct !DILexicalBlock(scope: !639, file: !2, line: 79, column: 3)
!677 = !DILocation(line: 79, column: 3, scope: !676)
!678 = !DILocation(line: 80, column: 23, scope: !675)
!679 = !DILocation(line: 80, column: 22, scope: !675)
!680 = !DILocation(line: 80, column: 38, scope: !675)
!681 = !DILocation(line: 80, column: 19, scope: !675)
!682 = !DILocation(line: 79, column: 26, scope: !675)
!683 = distinct !{!683, !677, !684}
!684 = !DILocation(line: 80, column: 40, scope: !676)
!685 = distinct !{!685, !686}
!686 = !{!"llvm.loop.unroll.disable"}
!687 = !DILocation(line: 82, column: 49, scope: !639)
!688 = !DILocation(line: 82, column: 42, scope: !639)
!689 = !DILocation(line: 82, column: 15, scope: !639)
!690 = !DILocation(line: 82, column: 3, scope: !639)
!691 = !DISubprogram(name: "calloc", scope: !616, file: !616, line: 543, type: !692, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!692 = !DISubroutineType(types: !693)
!693 = !{!318, !619, !619}
!694 = distinct !DISubprogram(name: "get_mem2Dlm", scope: !2, file: !2, line: 93, type: !695, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !698)
!695 = !DISubroutineType(types: !696)
!696 = !{!327, !697, !327, !327}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!698 = !{!699, !700, !701, !702}
!699 = !DILocalVariable(name: "array2D", arg: 1, scope: !694, file: !2, line: 93, type: !697)
!700 = !DILocalVariable(name: "dim0", arg: 2, scope: !694, file: !2, line: 93, type: !327)
!701 = !DILocalVariable(name: "dim1", arg: 3, scope: !694, file: !2, line: 93, type: !327)
!702 = !DILocalVariable(name: "i", scope: !694, file: !2, line: 95, type: !327)
!703 = !DILocation(line: 0, scope: !694)
!704 = !DILocation(line: 97, column: 44, scope: !705)
!705 = distinct !DILexicalBlock(scope: !694, file: !2, line: 97, column: 6)
!706 = !DILocation(line: 97, column: 49, scope: !705)
!707 = !DILocation(line: 97, column: 37, scope: !705)
!708 = !DILocation(line: 97, column: 19, scope: !705)
!709 = !DILocation(line: 97, column: 80, scope: !705)
!710 = !DILocation(line: 97, column: 6, scope: !694)
!711 = !DILocation(line: 0, scope: !575, inlinedAt: !712)
!712 = distinct !DILocation(line: 98, column: 5, scope: !705)
!713 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !712)
!714 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !712)
!715 = !DILocation(line: 99, column: 9, scope: !716)
!716 = distinct !DILexicalBlock(scope: !694, file: !2, line: 99, column: 6)
!717 = !DILocation(line: 98, column: 5, scope: !705)
!718 = !DILocation(line: 99, column: 49, scope: !716)
!719 = !DILocation(line: 99, column: 44, scope: !716)
!720 = !DILocation(line: 99, column: 37, scope: !716)
!721 = !DILocation(line: 99, column: 19, scope: !716)
!722 = !DILocation(line: 99, column: 80, scope: !716)
!723 = !DILocation(line: 99, column: 6, scope: !694)
!724 = !DILocation(line: 0, scope: !575, inlinedAt: !725)
!725 = distinct !DILocation(line: 100, column: 5, scope: !716)
!726 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !725)
!727 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !725)
!728 = !DILocation(line: 100, column: 5, scope: !716)
!729 = !DILocation(line: 102, column: 17, scope: !730)
!730 = distinct !DILexicalBlock(scope: !731, file: !2, line: 102, column: 3)
!731 = distinct !DILexicalBlock(scope: !694, file: !2, line: 102, column: 3)
!732 = !DILocation(line: 102, column: 3, scope: !731)
!733 = !DILocation(line: 103, column: 23, scope: !730)
!734 = !DILocation(line: 103, column: 22, scope: !730)
!735 = !DILocation(line: 103, column: 38, scope: !730)
!736 = !DILocation(line: 103, column: 19, scope: !730)
!737 = !DILocation(line: 102, column: 26, scope: !730)
!738 = distinct !{!738, !732, !739}
!739 = !DILocation(line: 103, column: 40, scope: !731)
!740 = distinct !{!740, !686}
!741 = !DILocation(line: 105, column: 47, scope: !694)
!742 = !DILocation(line: 105, column: 40, scope: !694)
!743 = !DILocation(line: 105, column: 15, scope: !694)
!744 = !DILocation(line: 105, column: 3, scope: !694)
!745 = distinct !DISubprogram(name: "free_mem2Ddist", scope: !2, file: !2, line: 115, type: !746, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !748)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !319}
!748 = !{!749}
!749 = !DILocalVariable(name: "array2D", arg: 1, scope: !745, file: !2, line: 115, type: !319)
!750 = !DILocation(line: 0, scope: !745)
!751 = !DILocation(line: 117, column: 7, scope: !752)
!752 = distinct !DILexicalBlock(scope: !745, file: !2, line: 117, column: 7)
!753 = !DILocation(line: 117, column: 7, scope: !745)
!754 = !DILocation(line: 119, column: 9, scope: !755)
!755 = distinct !DILexicalBlock(scope: !756, file: !2, line: 119, column: 9)
!756 = distinct !DILexicalBlock(scope: !752, file: !2, line: 118, column: 3)
!757 = !DILocation(line: 119, column: 9, scope: !756)
!758 = !DILocation(line: 120, column: 7, scope: !755)
!759 = !DILocation(line: 122, column: 7, scope: !755)
!760 = !DILocation(line: 124, column: 5, scope: !756)
!761 = !DILocation(line: 125, column: 3, scope: !756)
!762 = !DILocation(line: 128, column: 5, scope: !763)
!763 = distinct !DILexicalBlock(scope: !752, file: !2, line: 127, column: 3)
!764 = !DILocation(line: 130, column: 1, scope: !745)
!765 = !DISubprogram(name: "error", scope: !452, file: !452, line: 940, type: !766, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!766 = !DISubroutineType(types: !767)
!767 = !{null, !578, !327}
!768 = distinct !DISubprogram(name: "free_mem2Dlm", scope: !2, file: !2, line: 139, type: !769, scopeLine: 140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !771)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !350}
!771 = !{!772}
!772 = !DILocalVariable(name: "array2D", arg: 1, scope: !768, file: !2, line: 139, type: !350)
!773 = !DILocation(line: 0, scope: !768)
!774 = !DILocation(line: 141, column: 7, scope: !775)
!775 = distinct !DILexicalBlock(scope: !768, file: !2, line: 141, column: 7)
!776 = !DILocation(line: 141, column: 7, scope: !768)
!777 = !DILocation(line: 143, column: 9, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !2, line: 143, column: 9)
!779 = distinct !DILexicalBlock(scope: !775, file: !2, line: 142, column: 3)
!780 = !DILocation(line: 143, column: 9, scope: !779)
!781 = !DILocation(line: 144, column: 7, scope: !778)
!782 = !DILocation(line: 146, column: 7, scope: !778)
!783 = !DILocation(line: 148, column: 5, scope: !779)
!784 = !DILocation(line: 149, column: 3, scope: !779)
!785 = !DILocation(line: 152, column: 5, scope: !786)
!786 = distinct !DILexicalBlock(scope: !775, file: !2, line: 151, column: 3)
!787 = !DILocation(line: 154, column: 1, scope: !768)
!788 = distinct !DISubprogram(name: "get_mem2Dmp", scope: !2, file: !2, line: 164, type: !789, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !791)
!789 = !DISubroutineType(types: !790)
!790 = !{!327, !491, !327, !327}
!791 = !{!792, !793, !794, !795}
!792 = !DILocalVariable(name: "array2D", arg: 1, scope: !788, file: !2, line: 164, type: !491)
!793 = !DILocalVariable(name: "dim0", arg: 2, scope: !788, file: !2, line: 164, type: !327)
!794 = !DILocalVariable(name: "dim1", arg: 3, scope: !788, file: !2, line: 164, type: !327)
!795 = !DILocalVariable(name: "i", scope: !788, file: !2, line: 166, type: !327)
!796 = !DILocation(line: 0, scope: !788)
!797 = !DILocation(line: 168, column: 47, scope: !798)
!798 = distinct !DILexicalBlock(scope: !788, file: !2, line: 168, column: 6)
!799 = !DILocation(line: 168, column: 52, scope: !798)
!800 = !DILocation(line: 168, column: 40, scope: !798)
!801 = !DILocation(line: 168, column: 19, scope: !798)
!802 = !DILocation(line: 168, column: 86, scope: !798)
!803 = !DILocation(line: 168, column: 6, scope: !788)
!804 = !DILocation(line: 0, scope: !575, inlinedAt: !805)
!805 = distinct !DILocation(line: 169, column: 5, scope: !798)
!806 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !805)
!807 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !805)
!808 = !DILocation(line: 170, column: 9, scope: !809)
!809 = distinct !DILexicalBlock(scope: !788, file: !2, line: 170, column: 6)
!810 = !DILocation(line: 169, column: 5, scope: !798)
!811 = !DILocation(line: 170, column: 52, scope: !809)
!812 = !DILocation(line: 170, column: 47, scope: !809)
!813 = !DILocation(line: 170, column: 40, scope: !809)
!814 = !DILocation(line: 170, column: 19, scope: !809)
!815 = !DILocation(line: 170, column: 86, scope: !809)
!816 = !DILocation(line: 170, column: 6, scope: !788)
!817 = !DILocation(line: 0, scope: !575, inlinedAt: !818)
!818 = distinct !DILocation(line: 171, column: 5, scope: !809)
!819 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !818)
!820 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !818)
!821 = !DILocation(line: 171, column: 5, scope: !809)
!822 = !DILocation(line: 173, column: 17, scope: !823)
!823 = distinct !DILexicalBlock(scope: !824, file: !2, line: 173, column: 3)
!824 = distinct !DILexicalBlock(scope: !788, file: !2, line: 173, column: 3)
!825 = !DILocation(line: 173, column: 3, scope: !824)
!826 = !DILocation(line: 174, column: 23, scope: !823)
!827 = !DILocation(line: 174, column: 22, scope: !823)
!828 = !DILocation(line: 174, column: 38, scope: !823)
!829 = !DILocation(line: 174, column: 19, scope: !823)
!830 = !DILocation(line: 173, column: 26, scope: !823)
!831 = distinct !{!831, !825, !832}
!832 = !DILocation(line: 174, column: 40, scope: !824)
!833 = distinct !{!833, !686}
!834 = !DILocation(line: 176, column: 50, scope: !788)
!835 = !DILocation(line: 176, column: 43, scope: !788)
!836 = !DILocation(line: 176, column: 15, scope: !788)
!837 = !DILocation(line: 176, column: 3, scope: !788)
!838 = distinct !DISubprogram(name: "get_mem3Dmp", scope: !2, file: !2, line: 188, type: !839, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !842)
!839 = !DISubroutineType(types: !840)
!840 = !{!327, !841, !327, !327, !327}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!842 = !{!843, !844, !845, !846, !847, !848}
!843 = !DILocalVariable(name: "array3D", arg: 1, scope: !838, file: !2, line: 188, type: !841)
!844 = !DILocalVariable(name: "dim0", arg: 2, scope: !838, file: !2, line: 188, type: !327)
!845 = !DILocalVariable(name: "dim1", arg: 3, scope: !838, file: !2, line: 188, type: !327)
!846 = !DILocalVariable(name: "dim2", arg: 4, scope: !838, file: !2, line: 188, type: !327)
!847 = !DILocalVariable(name: "i", scope: !838, file: !2, line: 190, type: !327)
!848 = !DILocalVariable(name: "mem_size", scope: !838, file: !2, line: 190, type: !327)
!849 = !DILocation(line: 0, scope: !838)
!850 = !DILocation(line: 190, column: 21, scope: !838)
!851 = !DILocation(line: 190, column: 26, scope: !838)
!852 = !DILocation(line: 192, column: 40, scope: !853)
!853 = distinct !DILexicalBlock(scope: !838, file: !2, line: 192, column: 6)
!854 = !DILocation(line: 192, column: 18, scope: !853)
!855 = !DILocation(line: 192, column: 82, scope: !853)
!856 = !DILocation(line: 192, column: 6, scope: !838)
!857 = !DILocation(line: 0, scope: !575, inlinedAt: !858)
!858 = distinct !DILocation(line: 193, column: 5, scope: !853)
!859 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !858)
!860 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !858)
!861 = !DILocation(line: 195, column: 27, scope: !838)
!862 = !DILocation(line: 193, column: 5, scope: !853)
!863 = !DILocation(line: 195, column: 42, scope: !838)
!864 = !DILocation(line: 195, column: 15, scope: !838)
!865 = !DILocation(line: 197, column: 16, scope: !866)
!866 = distinct !DILexicalBlock(scope: !867, file: !2, line: 197, column: 3)
!867 = distinct !DILexicalBlock(scope: !838, file: !2, line: 197, column: 3)
!868 = !DILocation(line: 197, column: 3, scope: !867)
!869 = !DILocation(line: 198, column: 22, scope: !866)
!870 = !DILocation(line: 198, column: 21, scope: !866)
!871 = !DILocation(line: 198, column: 39, scope: !866)
!872 = !DILocation(line: 198, column: 19, scope: !866)
!873 = !DILocation(line: 197, column: 25, scope: !866)
!874 = distinct !{!874, !868, !875}
!875 = !DILocation(line: 198, column: 41, scope: !867)
!876 = distinct !{!876, !686}
!877 = !DILocation(line: 195, column: 12, scope: !838)
!878 = !DILocation(line: 200, column: 3, scope: !838)
!879 = distinct !DISubprogram(name: "free_mem2Dmp", scope: !2, file: !2, line: 210, type: !880, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !882)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !363}
!882 = !{!883}
!883 = !DILocalVariable(name: "array2D", arg: 1, scope: !879, file: !2, line: 210, type: !363)
!884 = !DILocation(line: 0, scope: !879)
!885 = !DILocation(line: 212, column: 7, scope: !886)
!886 = distinct !DILexicalBlock(scope: !879, file: !2, line: 212, column: 7)
!887 = !DILocation(line: 212, column: 7, scope: !879)
!888 = !DILocation(line: 214, column: 9, scope: !889)
!889 = distinct !DILexicalBlock(scope: !890, file: !2, line: 214, column: 9)
!890 = distinct !DILexicalBlock(scope: !886, file: !2, line: 213, column: 3)
!891 = !DILocation(line: 214, column: 9, scope: !890)
!892 = !DILocation(line: 215, column: 7, scope: !889)
!893 = !DILocation(line: 217, column: 7, scope: !889)
!894 = !DILocation(line: 219, column: 5, scope: !890)
!895 = !DILocation(line: 220, column: 3, scope: !890)
!896 = !DILocation(line: 223, column: 5, scope: !897)
!897 = distinct !DILexicalBlock(scope: !886, file: !2, line: 222, column: 3)
!898 = !DILocation(line: 225, column: 1, scope: !879)
!899 = distinct !DISubprogram(name: "free_mem3Dmp", scope: !2, file: !2, line: 235, type: !900, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !902)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !491}
!902 = !{!903}
!903 = !DILocalVariable(name: "array3D", arg: 1, scope: !899, file: !2, line: 235, type: !491)
!904 = !DILocation(line: 0, scope: !899)
!905 = !DILocation(line: 237, column: 7, scope: !906)
!906 = distinct !DILexicalBlock(scope: !899, file: !2, line: 237, column: 7)
!907 = !DILocation(line: 237, column: 7, scope: !899)
!908 = !DILocation(line: 239, column: 18, scope: !909)
!909 = distinct !DILexicalBlock(scope: !906, file: !2, line: 238, column: 3)
!910 = !DILocation(line: 0, scope: !879, inlinedAt: !911)
!911 = distinct !DILocation(line: 239, column: 5, scope: !909)
!912 = !DILocation(line: 212, column: 7, scope: !886, inlinedAt: !911)
!913 = !DILocation(line: 212, column: 7, scope: !879, inlinedAt: !911)
!914 = !DILocation(line: 214, column: 9, scope: !889, inlinedAt: !911)
!915 = !DILocation(line: 214, column: 9, scope: !890, inlinedAt: !911)
!916 = !DILocation(line: 215, column: 7, scope: !889, inlinedAt: !911)
!917 = !DILocation(line: 217, column: 7, scope: !889, inlinedAt: !911)
!918 = !DILocation(line: 219, column: 5, scope: !890, inlinedAt: !911)
!919 = !DILocation(line: 220, column: 3, scope: !890, inlinedAt: !911)
!920 = !DILocation(line: 223, column: 5, scope: !897, inlinedAt: !911)
!921 = !DILocation(line: 240, column: 5, scope: !909)
!922 = !DILocation(line: 241, column: 3, scope: !909)
!923 = !DILocation(line: 244, column: 5, scope: !924)
!924 = distinct !DILexicalBlock(scope: !906, file: !2, line: 243, column: 3)
!925 = !DILocation(line: 246, column: 1, scope: !899)
!926 = distinct !DISubprogram(name: "get_mem2Dquant", scope: !2, file: !2, line: 258, type: !927, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !929)
!927 = !DISubroutineType(types: !928)
!928 = !{!327, !501, !327, !327}
!929 = !{!930, !931, !932, !933}
!930 = !DILocalVariable(name: "array2D", arg: 1, scope: !926, file: !2, line: 258, type: !501)
!931 = !DILocalVariable(name: "dim0", arg: 2, scope: !926, file: !2, line: 258, type: !327)
!932 = !DILocalVariable(name: "dim1", arg: 3, scope: !926, file: !2, line: 258, type: !327)
!933 = !DILocalVariable(name: "i", scope: !926, file: !2, line: 260, type: !327)
!934 = !DILocation(line: 0, scope: !926)
!935 = !DILocation(line: 262, column: 49, scope: !936)
!936 = distinct !DILexicalBlock(scope: !926, file: !2, line: 262, column: 6)
!937 = !DILocation(line: 262, column: 54, scope: !936)
!938 = !DILocation(line: 262, column: 42, scope: !936)
!939 = !DILocation(line: 262, column: 19, scope: !936)
!940 = !DILocation(line: 262, column: 84, scope: !936)
!941 = !DILocation(line: 262, column: 6, scope: !926)
!942 = !DILocation(line: 0, scope: !575, inlinedAt: !943)
!943 = distinct !DILocation(line: 263, column: 5, scope: !936)
!944 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !943)
!945 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !943)
!946 = !DILocation(line: 264, column: 9, scope: !947)
!947 = distinct !DILexicalBlock(scope: !926, file: !2, line: 264, column: 6)
!948 = !DILocation(line: 263, column: 5, scope: !936)
!949 = !DILocation(line: 264, column: 54, scope: !947)
!950 = !DILocation(line: 264, column: 49, scope: !947)
!951 = !DILocation(line: 264, column: 42, scope: !947)
!952 = !DILocation(line: 264, column: 19, scope: !947)
!953 = !DILocation(line: 264, column: 89, scope: !947)
!954 = !DILocation(line: 264, column: 6, scope: !926)
!955 = !DILocation(line: 0, scope: !575, inlinedAt: !956)
!956 = distinct !DILocation(line: 265, column: 5, scope: !947)
!957 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !956)
!958 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !956)
!959 = !DILocation(line: 265, column: 5, scope: !947)
!960 = !DILocation(line: 267, column: 17, scope: !961)
!961 = distinct !DILexicalBlock(scope: !962, file: !2, line: 267, column: 3)
!962 = distinct !DILexicalBlock(scope: !926, file: !2, line: 267, column: 3)
!963 = !DILocation(line: 267, column: 3, scope: !962)
!964 = !DILocation(line: 268, column: 23, scope: !961)
!965 = !DILocation(line: 268, column: 22, scope: !961)
!966 = !DILocation(line: 268, column: 38, scope: !961)
!967 = !DILocation(line: 268, column: 19, scope: !961)
!968 = !DILocation(line: 267, column: 26, scope: !961)
!969 = distinct !{!969, !963, !970}
!970 = !DILocation(line: 268, column: 40, scope: !962)
!971 = distinct !{!971, !686}
!972 = !DILocation(line: 270, column: 51, scope: !926)
!973 = !DILocation(line: 270, column: 44, scope: !926)
!974 = !DILocation(line: 270, column: 15, scope: !926)
!975 = !DILocation(line: 270, column: 3, scope: !926)
!976 = distinct !DISubprogram(name: "get_mem3Dquant", scope: !2, file: !2, line: 282, type: !977, scopeLine: 283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !979)
!977 = !DISubroutineType(types: !978)
!978 = !{!327, !502, !327, !327, !327}
!979 = !{!980, !981, !982, !983, !984, !985}
!980 = !DILocalVariable(name: "array3D", arg: 1, scope: !976, file: !2, line: 282, type: !502)
!981 = !DILocalVariable(name: "dim0", arg: 2, scope: !976, file: !2, line: 282, type: !327)
!982 = !DILocalVariable(name: "dim1", arg: 3, scope: !976, file: !2, line: 282, type: !327)
!983 = !DILocalVariable(name: "dim2", arg: 4, scope: !976, file: !2, line: 282, type: !327)
!984 = !DILocalVariable(name: "i", scope: !976, file: !2, line: 284, type: !327)
!985 = !DILocalVariable(name: "mem_size", scope: !976, file: !2, line: 284, type: !327)
!986 = !DILocation(line: 0, scope: !976)
!987 = !DILocation(line: 284, column: 21, scope: !976)
!988 = !DILocation(line: 284, column: 26, scope: !976)
!989 = !DILocation(line: 286, column: 41, scope: !990)
!990 = distinct !DILexicalBlock(scope: !976, file: !2, line: 286, column: 6)
!991 = !DILocation(line: 286, column: 18, scope: !990)
!992 = !DILocation(line: 286, column: 84, scope: !990)
!993 = !DILocation(line: 286, column: 6, scope: !976)
!994 = !DILocation(line: 0, scope: !575, inlinedAt: !995)
!995 = distinct !DILocation(line: 287, column: 5, scope: !990)
!996 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !995)
!997 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !995)
!998 = !DILocation(line: 289, column: 30, scope: !976)
!999 = !DILocation(line: 287, column: 5, scope: !990)
!1000 = !DILocation(line: 289, column: 45, scope: !976)
!1001 = !DILocation(line: 289, column: 15, scope: !976)
!1002 = !DILocation(line: 291, column: 16, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !2, line: 291, column: 3)
!1004 = distinct !DILexicalBlock(scope: !976, file: !2, line: 291, column: 3)
!1005 = !DILocation(line: 291, column: 3, scope: !1004)
!1006 = !DILocation(line: 292, column: 22, scope: !1003)
!1007 = !DILocation(line: 292, column: 21, scope: !1003)
!1008 = !DILocation(line: 292, column: 39, scope: !1003)
!1009 = !DILocation(line: 292, column: 19, scope: !1003)
!1010 = !DILocation(line: 291, column: 25, scope: !1003)
!1011 = distinct !{!1011, !1005, !1012}
!1012 = !DILocation(line: 292, column: 41, scope: !1004)
!1013 = distinct !{!1013, !686}
!1014 = !DILocation(line: 289, column: 12, scope: !976)
!1015 = !DILocation(line: 294, column: 3, scope: !976)
!1016 = distinct !DISubprogram(name: "get_mem4Dquant", scope: !2, file: !2, line: 306, type: !1017, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1019)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!327, !503, !327, !327, !327, !327}
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026}
!1020 = !DILocalVariable(name: "array4D", arg: 1, scope: !1016, file: !2, line: 306, type: !503)
!1021 = !DILocalVariable(name: "dim0", arg: 2, scope: !1016, file: !2, line: 306, type: !327)
!1022 = !DILocalVariable(name: "dim1", arg: 3, scope: !1016, file: !2, line: 306, type: !327)
!1023 = !DILocalVariable(name: "dim2", arg: 4, scope: !1016, file: !2, line: 306, type: !327)
!1024 = !DILocalVariable(name: "dim3", arg: 5, scope: !1016, file: !2, line: 306, type: !327)
!1025 = !DILocalVariable(name: "i", scope: !1016, file: !2, line: 308, type: !327)
!1026 = !DILocalVariable(name: "mem_size", scope: !1016, file: !2, line: 308, type: !327)
!1027 = !DILocation(line: 0, scope: !1016)
!1028 = !DILocation(line: 308, column: 21, scope: !1016)
!1029 = !DILocation(line: 308, column: 26, scope: !1016)
!1030 = !DILocation(line: 310, column: 42, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1016, file: !2, line: 310, column: 6)
!1032 = !DILocation(line: 310, column: 18, scope: !1031)
!1033 = !DILocation(line: 310, column: 86, scope: !1031)
!1034 = !DILocation(line: 310, column: 6, scope: !1016)
!1035 = !DILocation(line: 0, scope: !575, inlinedAt: !1036)
!1036 = distinct !DILocation(line: 311, column: 5, scope: !1031)
!1037 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1036)
!1038 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1036)
!1039 = !DILocation(line: 313, column: 30, scope: !1016)
!1040 = !DILocation(line: 311, column: 5, scope: !1031)
!1041 = !DILocation(line: 313, column: 45, scope: !1016)
!1042 = !DILocation(line: 0, scope: !976, inlinedAt: !1043)
!1043 = distinct !DILocation(line: 313, column: 15, scope: !1016)
!1044 = !DILocation(line: 284, column: 21, scope: !976, inlinedAt: !1043)
!1045 = !DILocation(line: 284, column: 26, scope: !976, inlinedAt: !1043)
!1046 = !DILocation(line: 286, column: 41, scope: !990, inlinedAt: !1043)
!1047 = !DILocation(line: 286, column: 18, scope: !990, inlinedAt: !1043)
!1048 = !DILocation(line: 286, column: 84, scope: !990, inlinedAt: !1043)
!1049 = !DILocation(line: 286, column: 6, scope: !976, inlinedAt: !1043)
!1050 = !DILocation(line: 0, scope: !575, inlinedAt: !1051)
!1051 = distinct !DILocation(line: 287, column: 5, scope: !990, inlinedAt: !1043)
!1052 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1051)
!1053 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1051)
!1054 = !DILocation(line: 289, column: 30, scope: !976, inlinedAt: !1043)
!1055 = !DILocation(line: 287, column: 5, scope: !990, inlinedAt: !1043)
!1056 = !DILocation(line: 289, column: 45, scope: !976, inlinedAt: !1043)
!1057 = !DILocation(line: 289, column: 15, scope: !976, inlinedAt: !1043)
!1058 = !DILocation(line: 291, column: 16, scope: !1003, inlinedAt: !1043)
!1059 = !DILocation(line: 291, column: 3, scope: !1004, inlinedAt: !1043)
!1060 = !DILocation(line: 292, column: 22, scope: !1003, inlinedAt: !1043)
!1061 = !DILocation(line: 292, column: 21, scope: !1003, inlinedAt: !1043)
!1062 = !DILocation(line: 292, column: 39, scope: !1003, inlinedAt: !1043)
!1063 = !DILocation(line: 292, column: 19, scope: !1003, inlinedAt: !1043)
!1064 = !DILocation(line: 291, column: 25, scope: !1003, inlinedAt: !1043)
!1065 = distinct !{!1065, !1059, !1066}
!1066 = !DILocation(line: 292, column: 41, scope: !1004, inlinedAt: !1043)
!1067 = distinct !{!1067, !686}
!1068 = !DILocation(line: 315, column: 16, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1070, file: !2, line: 315, column: 3)
!1070 = distinct !DILexicalBlock(scope: !1016, file: !2, line: 315, column: 3)
!1071 = !DILocation(line: 315, column: 3, scope: !1070)
!1072 = !DILocation(line: 316, column: 22, scope: !1069)
!1073 = !DILocation(line: 316, column: 21, scope: !1069)
!1074 = !DILocation(line: 316, column: 39, scope: !1069)
!1075 = !DILocation(line: 316, column: 19, scope: !1069)
!1076 = !DILocation(line: 315, column: 25, scope: !1069)
!1077 = distinct !{!1077, !1071, !1078}
!1078 = !DILocation(line: 316, column: 41, scope: !1070)
!1079 = distinct !{!1079, !686}
!1080 = !DILocation(line: 289, column: 12, scope: !976, inlinedAt: !1043)
!1081 = !DILocation(line: 313, column: 12, scope: !1016)
!1082 = !DILocation(line: 318, column: 3, scope: !1016)
!1083 = distinct !DISubprogram(name: "get_mem5Dquant", scope: !2, file: !2, line: 330, type: !1084, scopeLine: 331, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1087)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!327, !1086, !327, !327, !327, !327, !327}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!1087 = !{!1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095}
!1088 = !DILocalVariable(name: "array5D", arg: 1, scope: !1083, file: !2, line: 330, type: !1086)
!1089 = !DILocalVariable(name: "dim0", arg: 2, scope: !1083, file: !2, line: 330, type: !327)
!1090 = !DILocalVariable(name: "dim1", arg: 3, scope: !1083, file: !2, line: 330, type: !327)
!1091 = !DILocalVariable(name: "dim2", arg: 4, scope: !1083, file: !2, line: 330, type: !327)
!1092 = !DILocalVariable(name: "dim3", arg: 5, scope: !1083, file: !2, line: 330, type: !327)
!1093 = !DILocalVariable(name: "dim4", arg: 6, scope: !1083, file: !2, line: 330, type: !327)
!1094 = !DILocalVariable(name: "i", scope: !1083, file: !2, line: 332, type: !327)
!1095 = !DILocalVariable(name: "mem_size", scope: !1083, file: !2, line: 332, type: !327)
!1096 = !DILocation(line: 0, scope: !1083)
!1097 = !DILocation(line: 332, column: 21, scope: !1083)
!1098 = !DILocation(line: 332, column: 26, scope: !1083)
!1099 = !DILocation(line: 334, column: 43, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1083, file: !2, line: 334, column: 6)
!1101 = !DILocation(line: 334, column: 18, scope: !1100)
!1102 = !DILocation(line: 334, column: 88, scope: !1100)
!1103 = !DILocation(line: 334, column: 6, scope: !1083)
!1104 = !DILocation(line: 0, scope: !575, inlinedAt: !1105)
!1105 = distinct !DILocation(line: 335, column: 5, scope: !1100)
!1106 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1105)
!1107 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1105)
!1108 = !DILocation(line: 337, column: 30, scope: !1083)
!1109 = !DILocation(line: 335, column: 5, scope: !1100)
!1110 = !DILocation(line: 337, column: 45, scope: !1083)
!1111 = !DILocation(line: 337, column: 15, scope: !1083)
!1112 = !DILocation(line: 339, column: 16, scope: !1113)
!1113 = distinct !DILexicalBlock(scope: !1114, file: !2, line: 339, column: 3)
!1114 = distinct !DILexicalBlock(scope: !1083, file: !2, line: 339, column: 3)
!1115 = !DILocation(line: 339, column: 3, scope: !1114)
!1116 = !DILocation(line: 340, column: 22, scope: !1113)
!1117 = !DILocation(line: 340, column: 21, scope: !1113)
!1118 = !DILocation(line: 340, column: 39, scope: !1113)
!1119 = !DILocation(line: 340, column: 19, scope: !1113)
!1120 = !DILocation(line: 339, column: 25, scope: !1113)
!1121 = distinct !{!1121, !1115, !1122}
!1122 = !DILocation(line: 340, column: 41, scope: !1114)
!1123 = distinct !{!1123, !686}
!1124 = !DILocation(line: 337, column: 12, scope: !1083)
!1125 = !DILocation(line: 342, column: 3, scope: !1083)
!1126 = distinct !DISubprogram(name: "free_mem2Dquant", scope: !2, file: !2, line: 352, type: !1127, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1129)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{null, !492}
!1129 = !{!1130}
!1130 = !DILocalVariable(name: "array2D", arg: 1, scope: !1126, file: !2, line: 352, type: !492)
!1131 = !DILocation(line: 0, scope: !1126)
!1132 = !DILocation(line: 354, column: 7, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1126, file: !2, line: 354, column: 7)
!1134 = !DILocation(line: 354, column: 7, scope: !1126)
!1135 = !DILocation(line: 356, column: 9, scope: !1136)
!1136 = distinct !DILexicalBlock(scope: !1137, file: !2, line: 356, column: 9)
!1137 = distinct !DILexicalBlock(scope: !1133, file: !2, line: 355, column: 3)
!1138 = !DILocation(line: 356, column: 9, scope: !1137)
!1139 = !DILocation(line: 357, column: 7, scope: !1136)
!1140 = !DILocation(line: 359, column: 7, scope: !1136)
!1141 = !DILocation(line: 361, column: 5, scope: !1137)
!1142 = !DILocation(line: 362, column: 3, scope: !1137)
!1143 = !DILocation(line: 365, column: 5, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1133, file: !2, line: 364, column: 3)
!1145 = !DILocation(line: 367, column: 1, scope: !1126)
!1146 = distinct !DISubprogram(name: "free_mem3Dquant", scope: !2, file: !2, line: 377, type: !1147, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1149)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{null, !501}
!1149 = !{!1150}
!1150 = !DILocalVariable(name: "array3D", arg: 1, scope: !1146, file: !2, line: 377, type: !501)
!1151 = !DILocation(line: 0, scope: !1146)
!1152 = !DILocation(line: 379, column: 7, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1146, file: !2, line: 379, column: 7)
!1154 = !DILocation(line: 379, column: 7, scope: !1146)
!1155 = !DILocation(line: 381, column: 21, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1153, file: !2, line: 380, column: 3)
!1157 = !DILocation(line: 0, scope: !1126, inlinedAt: !1158)
!1158 = distinct !DILocation(line: 381, column: 5, scope: !1156)
!1159 = !DILocation(line: 354, column: 7, scope: !1133, inlinedAt: !1158)
!1160 = !DILocation(line: 354, column: 7, scope: !1126, inlinedAt: !1158)
!1161 = !DILocation(line: 356, column: 9, scope: !1136, inlinedAt: !1158)
!1162 = !DILocation(line: 356, column: 9, scope: !1137, inlinedAt: !1158)
!1163 = !DILocation(line: 357, column: 7, scope: !1136, inlinedAt: !1158)
!1164 = !DILocation(line: 359, column: 7, scope: !1136, inlinedAt: !1158)
!1165 = !DILocation(line: 361, column: 5, scope: !1137, inlinedAt: !1158)
!1166 = !DILocation(line: 362, column: 3, scope: !1137, inlinedAt: !1158)
!1167 = !DILocation(line: 365, column: 5, scope: !1144, inlinedAt: !1158)
!1168 = !DILocation(line: 382, column: 5, scope: !1156)
!1169 = !DILocation(line: 383, column: 3, scope: !1156)
!1170 = !DILocation(line: 386, column: 5, scope: !1171)
!1171 = distinct !DILexicalBlock(scope: !1153, file: !2, line: 385, column: 3)
!1172 = !DILocation(line: 388, column: 1, scope: !1146)
!1173 = distinct !DISubprogram(name: "free_mem4Dquant", scope: !2, file: !2, line: 397, type: !1174, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1176)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{null, !502}
!1176 = !{!1177}
!1177 = !DILocalVariable(name: "array4D", arg: 1, scope: !1173, file: !2, line: 397, type: !502)
!1178 = !DILocation(line: 0, scope: !1173)
!1179 = !DILocation(line: 399, column: 7, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1173, file: !2, line: 399, column: 7)
!1181 = !DILocation(line: 399, column: 7, scope: !1173)
!1182 = !DILocation(line: 401, column: 21, scope: !1183)
!1183 = distinct !DILexicalBlock(scope: !1180, file: !2, line: 400, column: 3)
!1184 = !DILocation(line: 0, scope: !1146, inlinedAt: !1185)
!1185 = distinct !DILocation(line: 401, column: 5, scope: !1183)
!1186 = !DILocation(line: 379, column: 7, scope: !1153, inlinedAt: !1185)
!1187 = !DILocation(line: 379, column: 7, scope: !1146, inlinedAt: !1185)
!1188 = !DILocation(line: 381, column: 21, scope: !1156, inlinedAt: !1185)
!1189 = !DILocation(line: 0, scope: !1126, inlinedAt: !1190)
!1190 = distinct !DILocation(line: 381, column: 5, scope: !1156, inlinedAt: !1185)
!1191 = !DILocation(line: 354, column: 7, scope: !1133, inlinedAt: !1190)
!1192 = !DILocation(line: 354, column: 7, scope: !1126, inlinedAt: !1190)
!1193 = !DILocation(line: 356, column: 9, scope: !1136, inlinedAt: !1190)
!1194 = !DILocation(line: 356, column: 9, scope: !1137, inlinedAt: !1190)
!1195 = !DILocation(line: 357, column: 7, scope: !1136, inlinedAt: !1190)
!1196 = !DILocation(line: 359, column: 7, scope: !1136, inlinedAt: !1190)
!1197 = !DILocation(line: 361, column: 5, scope: !1137, inlinedAt: !1190)
!1198 = !DILocation(line: 362, column: 3, scope: !1137, inlinedAt: !1190)
!1199 = !DILocation(line: 365, column: 5, scope: !1144, inlinedAt: !1190)
!1200 = !DILocation(line: 382, column: 5, scope: !1156, inlinedAt: !1185)
!1201 = !DILocation(line: 383, column: 3, scope: !1156, inlinedAt: !1185)
!1202 = !DILocation(line: 386, column: 5, scope: !1171, inlinedAt: !1185)
!1203 = !DILocation(line: 402, column: 5, scope: !1183)
!1204 = !DILocation(line: 403, column: 3, scope: !1183)
!1205 = !DILocation(line: 406, column: 5, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1180, file: !2, line: 405, column: 3)
!1207 = !DILocation(line: 408, column: 1, scope: !1173)
!1208 = distinct !DISubprogram(name: "free_mem5Dquant", scope: !2, file: !2, line: 417, type: !1209, scopeLine: 418, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1211)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !503}
!1211 = !{!1212}
!1212 = !DILocalVariable(name: "array5D", arg: 1, scope: !1208, file: !2, line: 417, type: !503)
!1213 = !DILocation(line: 0, scope: !1208)
!1214 = !DILocation(line: 419, column: 7, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1208, file: !2, line: 419, column: 7)
!1216 = !DILocation(line: 419, column: 7, scope: !1208)
!1217 = !DILocation(line: 421, column: 21, scope: !1218)
!1218 = distinct !DILexicalBlock(scope: !1215, file: !2, line: 420, column: 3)
!1219 = !DILocation(line: 421, column: 5, scope: !1218)
!1220 = !DILocation(line: 422, column: 5, scope: !1218)
!1221 = !DILocation(line: 423, column: 3, scope: !1218)
!1222 = !DILocation(line: 426, column: 5, scope: !1223)
!1223 = distinct !DILexicalBlock(scope: !1215, file: !2, line: 425, column: 3)
!1224 = !DILocation(line: 428, column: 1, scope: !1208)
!1225 = distinct !DISubprogram(name: "get_mem2D_spp", scope: !2, file: !2, line: 439, type: !1226, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1228)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!327, !509, !327, !327}
!1228 = !{!1229, !1230, !1231, !1232}
!1229 = !DILocalVariable(name: "array2D", arg: 1, scope: !1225, file: !2, line: 439, type: !509)
!1230 = !DILocalVariable(name: "dim0", arg: 2, scope: !1225, file: !2, line: 439, type: !327)
!1231 = !DILocalVariable(name: "dim1", arg: 3, scope: !1225, file: !2, line: 439, type: !327)
!1232 = !DILocalVariable(name: "i", scope: !1225, file: !2, line: 441, type: !327)
!1233 = !DILocation(line: 0, scope: !1225)
!1234 = !DILocation(line: 443, column: 50, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1225, file: !2, line: 443, column: 6)
!1236 = !DILocation(line: 443, column: 55, scope: !1235)
!1237 = !DILocation(line: 443, column: 43, scope: !1235)
!1238 = !DILocation(line: 443, column: 19, scope: !1235)
!1239 = !DILocation(line: 443, column: 92, scope: !1235)
!1240 = !DILocation(line: 443, column: 6, scope: !1225)
!1241 = !DILocation(line: 0, scope: !575, inlinedAt: !1242)
!1242 = distinct !DILocation(line: 444, column: 5, scope: !1235)
!1243 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1242)
!1244 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1242)
!1245 = !DILocation(line: 445, column: 9, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1225, file: !2, line: 445, column: 6)
!1247 = !DILocation(line: 444, column: 5, scope: !1235)
!1248 = !DILocation(line: 445, column: 55, scope: !1246)
!1249 = !DILocation(line: 445, column: 50, scope: !1246)
!1250 = !DILocation(line: 445, column: 43, scope: !1246)
!1251 = !DILocation(line: 445, column: 19, scope: !1246)
!1252 = !DILocation(line: 445, column: 92, scope: !1246)
!1253 = !DILocation(line: 445, column: 6, scope: !1225)
!1254 = !DILocation(line: 0, scope: !575, inlinedAt: !1255)
!1255 = distinct !DILocation(line: 446, column: 5, scope: !1246)
!1256 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1255)
!1257 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1255)
!1258 = !DILocation(line: 446, column: 5, scope: !1246)
!1259 = !DILocation(line: 448, column: 17, scope: !1260)
!1260 = distinct !DILexicalBlock(scope: !1261, file: !2, line: 448, column: 3)
!1261 = distinct !DILexicalBlock(scope: !1225, file: !2, line: 448, column: 3)
!1262 = !DILocation(line: 448, column: 3, scope: !1261)
!1263 = !DILocation(line: 449, column: 23, scope: !1260)
!1264 = !DILocation(line: 449, column: 22, scope: !1260)
!1265 = !DILocation(line: 449, column: 38, scope: !1260)
!1266 = !DILocation(line: 449, column: 19, scope: !1260)
!1267 = !DILocation(line: 448, column: 26, scope: !1260)
!1268 = distinct !{!1268, !1262, !1269}
!1269 = !DILocation(line: 449, column: 40, scope: !1261)
!1270 = distinct !{!1270, !686}
!1271 = !DILocation(line: 451, column: 53, scope: !1225)
!1272 = !DILocation(line: 451, column: 46, scope: !1225)
!1273 = !DILocation(line: 451, column: 15, scope: !1225)
!1274 = !DILocation(line: 451, column: 3, scope: !1225)
!1275 = distinct !DISubprogram(name: "get_mem3D_spp", scope: !2, file: !2, line: 463, type: !1276, scopeLine: 464, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1279)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{!327, !1278, !327, !327, !327}
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!1279 = !{!1280, !1281, !1282, !1283, !1284, !1285}
!1280 = !DILocalVariable(name: "array3D", arg: 1, scope: !1275, file: !2, line: 463, type: !1278)
!1281 = !DILocalVariable(name: "dim0", arg: 2, scope: !1275, file: !2, line: 463, type: !327)
!1282 = !DILocalVariable(name: "dim1", arg: 3, scope: !1275, file: !2, line: 463, type: !327)
!1283 = !DILocalVariable(name: "dim2", arg: 4, scope: !1275, file: !2, line: 463, type: !327)
!1284 = !DILocalVariable(name: "i", scope: !1275, file: !2, line: 465, type: !327)
!1285 = !DILocalVariable(name: "mem_size", scope: !1275, file: !2, line: 465, type: !327)
!1286 = !DILocation(line: 0, scope: !1275)
!1287 = !DILocation(line: 465, column: 21, scope: !1275)
!1288 = !DILocation(line: 465, column: 26, scope: !1275)
!1289 = !DILocation(line: 467, column: 43, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1275, file: !2, line: 467, column: 6)
!1291 = !DILocation(line: 467, column: 18, scope: !1290)
!1292 = !DILocation(line: 467, column: 88, scope: !1290)
!1293 = !DILocation(line: 467, column: 6, scope: !1275)
!1294 = !DILocation(line: 0, scope: !575, inlinedAt: !1295)
!1295 = distinct !DILocation(line: 468, column: 5, scope: !1290)
!1296 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1295)
!1297 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1295)
!1298 = !DILocation(line: 470, column: 29, scope: !1275)
!1299 = !DILocation(line: 468, column: 5, scope: !1290)
!1300 = !DILocation(line: 470, column: 44, scope: !1275)
!1301 = !DILocation(line: 470, column: 15, scope: !1275)
!1302 = !DILocation(line: 472, column: 16, scope: !1303)
!1303 = distinct !DILexicalBlock(scope: !1304, file: !2, line: 472, column: 3)
!1304 = distinct !DILexicalBlock(scope: !1275, file: !2, line: 472, column: 3)
!1305 = !DILocation(line: 472, column: 3, scope: !1304)
!1306 = !DILocation(line: 473, column: 22, scope: !1303)
!1307 = !DILocation(line: 473, column: 21, scope: !1303)
!1308 = !DILocation(line: 473, column: 39, scope: !1303)
!1309 = !DILocation(line: 473, column: 19, scope: !1303)
!1310 = !DILocation(line: 472, column: 25, scope: !1303)
!1311 = distinct !{!1311, !1305, !1312}
!1312 = !DILocation(line: 473, column: 41, scope: !1304)
!1313 = distinct !{!1313, !686}
!1314 = !DILocation(line: 470, column: 12, scope: !1275)
!1315 = !DILocation(line: 475, column: 3, scope: !1275)
!1316 = distinct !DISubprogram(name: "get_mem2Dmv", scope: !2, file: !2, line: 486, type: !1317, scopeLine: 487, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1319)
!1317 = !DISubroutineType(types: !1318)
!1318 = !{!327, !512, !327, !327}
!1319 = !{!1320, !1321, !1322, !1323}
!1320 = !DILocalVariable(name: "array2D", arg: 1, scope: !1316, file: !2, line: 486, type: !512)
!1321 = !DILocalVariable(name: "dim0", arg: 2, scope: !1316, file: !2, line: 486, type: !327)
!1322 = !DILocalVariable(name: "dim1", arg: 3, scope: !1316, file: !2, line: 486, type: !327)
!1323 = !DILocalVariable(name: "i", scope: !1316, file: !2, line: 488, type: !327)
!1324 = !DILocation(line: 0, scope: !1316)
!1325 = !DILocation(line: 490, column: 44, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1316, file: !2, line: 490, column: 6)
!1327 = !DILocation(line: 490, column: 49, scope: !1326)
!1328 = !DILocation(line: 490, column: 37, scope: !1326)
!1329 = !DILocation(line: 490, column: 19, scope: !1326)
!1330 = !DILocation(line: 490, column: 80, scope: !1326)
!1331 = !DILocation(line: 490, column: 6, scope: !1316)
!1332 = !DILocation(line: 0, scope: !575, inlinedAt: !1333)
!1333 = distinct !DILocation(line: 491, column: 5, scope: !1326)
!1334 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1333)
!1335 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1333)
!1336 = !DILocation(line: 492, column: 9, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1316, file: !2, line: 492, column: 6)
!1338 = !DILocation(line: 491, column: 5, scope: !1326)
!1339 = !DILocation(line: 492, column: 49, scope: !1337)
!1340 = !DILocation(line: 492, column: 44, scope: !1337)
!1341 = !DILocation(line: 492, column: 37, scope: !1337)
!1342 = !DILocation(line: 492, column: 19, scope: !1337)
!1343 = !DILocation(line: 492, column: 80, scope: !1337)
!1344 = !DILocation(line: 492, column: 6, scope: !1316)
!1345 = !DILocation(line: 0, scope: !575, inlinedAt: !1346)
!1346 = distinct !DILocation(line: 493, column: 5, scope: !1337)
!1347 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1346)
!1348 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1346)
!1349 = !DILocation(line: 493, column: 5, scope: !1337)
!1350 = !DILocation(line: 495, column: 17, scope: !1351)
!1351 = distinct !DILexicalBlock(scope: !1352, file: !2, line: 495, column: 3)
!1352 = distinct !DILexicalBlock(scope: !1316, file: !2, line: 495, column: 3)
!1353 = !DILocation(line: 495, column: 3, scope: !1352)
!1354 = !DILocation(line: 496, column: 23, scope: !1351)
!1355 = !DILocation(line: 496, column: 22, scope: !1351)
!1356 = !DILocation(line: 496, column: 38, scope: !1351)
!1357 = !DILocation(line: 496, column: 19, scope: !1351)
!1358 = !DILocation(line: 495, column: 26, scope: !1351)
!1359 = distinct !{!1359, !1353, !1360}
!1360 = !DILocation(line: 496, column: 40, scope: !1352)
!1361 = distinct !{!1361, !686}
!1362 = !DILocation(line: 498, column: 47, scope: !1316)
!1363 = !DILocation(line: 498, column: 40, scope: !1316)
!1364 = !DILocation(line: 498, column: 15, scope: !1316)
!1365 = !DILocation(line: 498, column: 3, scope: !1316)
!1366 = distinct !DISubprogram(name: "get_mem3Dmv", scope: !2, file: !2, line: 510, type: !1367, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1369)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!327, !513, !327, !327, !327}
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375}
!1370 = !DILocalVariable(name: "array3D", arg: 1, scope: !1366, file: !2, line: 510, type: !513)
!1371 = !DILocalVariable(name: "dim0", arg: 2, scope: !1366, file: !2, line: 510, type: !327)
!1372 = !DILocalVariable(name: "dim1", arg: 3, scope: !1366, file: !2, line: 510, type: !327)
!1373 = !DILocalVariable(name: "dim2", arg: 4, scope: !1366, file: !2, line: 510, type: !327)
!1374 = !DILocalVariable(name: "i", scope: !1366, file: !2, line: 512, type: !327)
!1375 = !DILocalVariable(name: "mem_size", scope: !1366, file: !2, line: 512, type: !327)
!1376 = !DILocation(line: 0, scope: !1366)
!1377 = !DILocation(line: 512, column: 21, scope: !1366)
!1378 = !DILocation(line: 512, column: 26, scope: !1366)
!1379 = !DILocation(line: 514, column: 37, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1366, file: !2, line: 514, column: 6)
!1381 = !DILocation(line: 514, column: 18, scope: !1380)
!1382 = !DILocation(line: 514, column: 76, scope: !1380)
!1383 = !DILocation(line: 514, column: 6, scope: !1366)
!1384 = !DILocation(line: 0, scope: !575, inlinedAt: !1385)
!1385 = distinct !DILocation(line: 515, column: 5, scope: !1380)
!1386 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1385)
!1387 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1385)
!1388 = !DILocation(line: 517, column: 27, scope: !1366)
!1389 = !DILocation(line: 515, column: 5, scope: !1380)
!1390 = !DILocation(line: 517, column: 42, scope: !1366)
!1391 = !DILocation(line: 517, column: 15, scope: !1366)
!1392 = !DILocation(line: 519, column: 16, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1394, file: !2, line: 519, column: 3)
!1394 = distinct !DILexicalBlock(scope: !1366, file: !2, line: 519, column: 3)
!1395 = !DILocation(line: 519, column: 3, scope: !1394)
!1396 = !DILocation(line: 520, column: 22, scope: !1393)
!1397 = !DILocation(line: 520, column: 21, scope: !1393)
!1398 = !DILocation(line: 520, column: 39, scope: !1393)
!1399 = !DILocation(line: 520, column: 19, scope: !1393)
!1400 = !DILocation(line: 519, column: 25, scope: !1393)
!1401 = distinct !{!1401, !1395, !1402}
!1402 = !DILocation(line: 520, column: 41, scope: !1394)
!1403 = distinct !{!1403, !686}
!1404 = !DILocation(line: 517, column: 12, scope: !1366)
!1405 = !DILocation(line: 522, column: 3, scope: !1366)
!1406 = distinct !DISubprogram(name: "get_mem4Dmv", scope: !2, file: !2, line: 534, type: !1407, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1409)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!327, !514, !327, !327, !327, !327}
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1415, !1416}
!1410 = !DILocalVariable(name: "array4D", arg: 1, scope: !1406, file: !2, line: 534, type: !514)
!1411 = !DILocalVariable(name: "dim0", arg: 2, scope: !1406, file: !2, line: 534, type: !327)
!1412 = !DILocalVariable(name: "dim1", arg: 3, scope: !1406, file: !2, line: 534, type: !327)
!1413 = !DILocalVariable(name: "dim2", arg: 4, scope: !1406, file: !2, line: 534, type: !327)
!1414 = !DILocalVariable(name: "dim3", arg: 5, scope: !1406, file: !2, line: 534, type: !327)
!1415 = !DILocalVariable(name: "i", scope: !1406, file: !2, line: 536, type: !327)
!1416 = !DILocalVariable(name: "mem_size", scope: !1406, file: !2, line: 536, type: !327)
!1417 = !DILocation(line: 0, scope: !1406)
!1418 = !DILocation(line: 536, column: 21, scope: !1406)
!1419 = !DILocation(line: 536, column: 26, scope: !1406)
!1420 = !DILocation(line: 538, column: 38, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1406, file: !2, line: 538, column: 6)
!1422 = !DILocation(line: 538, column: 18, scope: !1421)
!1423 = !DILocation(line: 538, column: 78, scope: !1421)
!1424 = !DILocation(line: 538, column: 6, scope: !1406)
!1425 = !DILocation(line: 0, scope: !575, inlinedAt: !1426)
!1426 = distinct !DILocation(line: 539, column: 5, scope: !1421)
!1427 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1426)
!1428 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1426)
!1429 = !DILocation(line: 541, column: 27, scope: !1406)
!1430 = !DILocation(line: 539, column: 5, scope: !1421)
!1431 = !DILocation(line: 541, column: 42, scope: !1406)
!1432 = !DILocation(line: 0, scope: !1366, inlinedAt: !1433)
!1433 = distinct !DILocation(line: 541, column: 15, scope: !1406)
!1434 = !DILocation(line: 512, column: 21, scope: !1366, inlinedAt: !1433)
!1435 = !DILocation(line: 512, column: 26, scope: !1366, inlinedAt: !1433)
!1436 = !DILocation(line: 514, column: 37, scope: !1380, inlinedAt: !1433)
!1437 = !DILocation(line: 514, column: 18, scope: !1380, inlinedAt: !1433)
!1438 = !DILocation(line: 514, column: 76, scope: !1380, inlinedAt: !1433)
!1439 = !DILocation(line: 514, column: 6, scope: !1366, inlinedAt: !1433)
!1440 = !DILocation(line: 0, scope: !575, inlinedAt: !1441)
!1441 = distinct !DILocation(line: 515, column: 5, scope: !1380, inlinedAt: !1433)
!1442 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1441)
!1443 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1441)
!1444 = !DILocation(line: 517, column: 27, scope: !1366, inlinedAt: !1433)
!1445 = !DILocation(line: 515, column: 5, scope: !1380, inlinedAt: !1433)
!1446 = !DILocation(line: 517, column: 42, scope: !1366, inlinedAt: !1433)
!1447 = !DILocation(line: 517, column: 15, scope: !1366, inlinedAt: !1433)
!1448 = !DILocation(line: 519, column: 16, scope: !1393, inlinedAt: !1433)
!1449 = !DILocation(line: 519, column: 3, scope: !1394, inlinedAt: !1433)
!1450 = !DILocation(line: 520, column: 22, scope: !1393, inlinedAt: !1433)
!1451 = !DILocation(line: 520, column: 21, scope: !1393, inlinedAt: !1433)
!1452 = !DILocation(line: 520, column: 39, scope: !1393, inlinedAt: !1433)
!1453 = !DILocation(line: 520, column: 19, scope: !1393, inlinedAt: !1433)
!1454 = !DILocation(line: 519, column: 25, scope: !1393, inlinedAt: !1433)
!1455 = distinct !{!1455, !1449, !1456}
!1456 = !DILocation(line: 520, column: 41, scope: !1394, inlinedAt: !1433)
!1457 = distinct !{!1457, !686}
!1458 = !DILocation(line: 543, column: 16, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1460, file: !2, line: 543, column: 3)
!1460 = distinct !DILexicalBlock(scope: !1406, file: !2, line: 543, column: 3)
!1461 = !DILocation(line: 543, column: 3, scope: !1460)
!1462 = !DILocation(line: 544, column: 22, scope: !1459)
!1463 = !DILocation(line: 544, column: 21, scope: !1459)
!1464 = !DILocation(line: 544, column: 39, scope: !1459)
!1465 = !DILocation(line: 544, column: 19, scope: !1459)
!1466 = !DILocation(line: 543, column: 25, scope: !1459)
!1467 = distinct !{!1467, !1461, !1468}
!1468 = !DILocation(line: 544, column: 41, scope: !1460)
!1469 = distinct !{!1469, !686}
!1470 = !DILocation(line: 517, column: 12, scope: !1366, inlinedAt: !1433)
!1471 = !DILocation(line: 541, column: 12, scope: !1406)
!1472 = !DILocation(line: 546, column: 3, scope: !1406)
!1473 = distinct !DISubprogram(name: "get_mem5Dmv", scope: !2, file: !2, line: 558, type: !1474, scopeLine: 559, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1476)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!327, !515, !327, !327, !327, !327, !327}
!1476 = !{!1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484}
!1477 = !DILocalVariable(name: "array5D", arg: 1, scope: !1473, file: !2, line: 558, type: !515)
!1478 = !DILocalVariable(name: "dim0", arg: 2, scope: !1473, file: !2, line: 558, type: !327)
!1479 = !DILocalVariable(name: "dim1", arg: 3, scope: !1473, file: !2, line: 558, type: !327)
!1480 = !DILocalVariable(name: "dim2", arg: 4, scope: !1473, file: !2, line: 558, type: !327)
!1481 = !DILocalVariable(name: "dim3", arg: 5, scope: !1473, file: !2, line: 558, type: !327)
!1482 = !DILocalVariable(name: "dim4", arg: 6, scope: !1473, file: !2, line: 558, type: !327)
!1483 = !DILocalVariable(name: "i", scope: !1473, file: !2, line: 560, type: !327)
!1484 = !DILocalVariable(name: "mem_size", scope: !1473, file: !2, line: 560, type: !327)
!1485 = !DILocation(line: 0, scope: !1473)
!1486 = !DILocation(line: 560, column: 21, scope: !1473)
!1487 = !DILocation(line: 560, column: 26, scope: !1473)
!1488 = !DILocation(line: 562, column: 39, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1473, file: !2, line: 562, column: 6)
!1490 = !DILocation(line: 562, column: 18, scope: !1489)
!1491 = !DILocation(line: 562, column: 80, scope: !1489)
!1492 = !DILocation(line: 562, column: 6, scope: !1473)
!1493 = !DILocation(line: 0, scope: !575, inlinedAt: !1494)
!1494 = distinct !DILocation(line: 563, column: 5, scope: !1489)
!1495 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1494)
!1496 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1494)
!1497 = !DILocation(line: 565, column: 27, scope: !1473)
!1498 = !DILocation(line: 563, column: 5, scope: !1489)
!1499 = !DILocation(line: 565, column: 42, scope: !1473)
!1500 = !DILocation(line: 565, column: 15, scope: !1473)
!1501 = !DILocation(line: 567, column: 16, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1503, file: !2, line: 567, column: 3)
!1503 = distinct !DILexicalBlock(scope: !1473, file: !2, line: 567, column: 3)
!1504 = !DILocation(line: 567, column: 3, scope: !1503)
!1505 = !DILocation(line: 568, column: 22, scope: !1502)
!1506 = !DILocation(line: 568, column: 21, scope: !1502)
!1507 = !DILocation(line: 568, column: 39, scope: !1502)
!1508 = !DILocation(line: 568, column: 19, scope: !1502)
!1509 = !DILocation(line: 567, column: 25, scope: !1502)
!1510 = distinct !{!1510, !1504, !1511}
!1511 = !DILocation(line: 568, column: 41, scope: !1503)
!1512 = distinct !{!1512, !686}
!1513 = !DILocation(line: 565, column: 12, scope: !1473)
!1514 = !DILocation(line: 570, column: 3, scope: !1473)
!1515 = distinct !DISubprogram(name: "get_mem6Dmv", scope: !2, file: !2, line: 582, type: !1516, scopeLine: 583, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1518)
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!327, !516, !327, !327, !327, !327, !327, !327}
!1518 = !{!1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1519 = !DILocalVariable(name: "array6D", arg: 1, scope: !1515, file: !2, line: 582, type: !516)
!1520 = !DILocalVariable(name: "dim0", arg: 2, scope: !1515, file: !2, line: 582, type: !327)
!1521 = !DILocalVariable(name: "dim1", arg: 3, scope: !1515, file: !2, line: 582, type: !327)
!1522 = !DILocalVariable(name: "dim2", arg: 4, scope: !1515, file: !2, line: 582, type: !327)
!1523 = !DILocalVariable(name: "dim3", arg: 5, scope: !1515, file: !2, line: 582, type: !327)
!1524 = !DILocalVariable(name: "dim4", arg: 6, scope: !1515, file: !2, line: 582, type: !327)
!1525 = !DILocalVariable(name: "dim5", arg: 7, scope: !1515, file: !2, line: 582, type: !327)
!1526 = !DILocalVariable(name: "i", scope: !1515, file: !2, line: 584, type: !327)
!1527 = !DILocalVariable(name: "mem_size", scope: !1515, file: !2, line: 584, type: !327)
!1528 = !DILocation(line: 0, scope: !1515)
!1529 = !DILocation(line: 584, column: 21, scope: !1515)
!1530 = !DILocation(line: 584, column: 26, scope: !1515)
!1531 = !DILocation(line: 586, column: 40, scope: !1532)
!1532 = distinct !DILexicalBlock(scope: !1515, file: !2, line: 586, column: 6)
!1533 = !DILocation(line: 586, column: 18, scope: !1532)
!1534 = !DILocation(line: 586, column: 82, scope: !1532)
!1535 = !DILocation(line: 586, column: 6, scope: !1515)
!1536 = !DILocation(line: 0, scope: !575, inlinedAt: !1537)
!1537 = distinct !DILocation(line: 587, column: 5, scope: !1532)
!1538 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1537)
!1539 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1537)
!1540 = !DILocation(line: 589, column: 27, scope: !1515)
!1541 = !DILocation(line: 587, column: 5, scope: !1532)
!1542 = !DILocation(line: 589, column: 42, scope: !1515)
!1543 = !DILocation(line: 0, scope: !1473, inlinedAt: !1544)
!1544 = distinct !DILocation(line: 589, column: 15, scope: !1515)
!1545 = !DILocation(line: 560, column: 21, scope: !1473, inlinedAt: !1544)
!1546 = !DILocation(line: 560, column: 26, scope: !1473, inlinedAt: !1544)
!1547 = !DILocation(line: 562, column: 39, scope: !1489, inlinedAt: !1544)
!1548 = !DILocation(line: 562, column: 18, scope: !1489, inlinedAt: !1544)
!1549 = !DILocation(line: 562, column: 80, scope: !1489, inlinedAt: !1544)
!1550 = !DILocation(line: 562, column: 6, scope: !1473, inlinedAt: !1544)
!1551 = !DILocation(line: 0, scope: !575, inlinedAt: !1552)
!1552 = distinct !DILocation(line: 563, column: 5, scope: !1489, inlinedAt: !1544)
!1553 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1552)
!1554 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1552)
!1555 = !DILocation(line: 565, column: 27, scope: !1473, inlinedAt: !1544)
!1556 = !DILocation(line: 563, column: 5, scope: !1489, inlinedAt: !1544)
!1557 = !DILocation(line: 565, column: 42, scope: !1473, inlinedAt: !1544)
!1558 = !DILocation(line: 565, column: 15, scope: !1473, inlinedAt: !1544)
!1559 = !DILocation(line: 567, column: 16, scope: !1502, inlinedAt: !1544)
!1560 = !DILocation(line: 567, column: 3, scope: !1503, inlinedAt: !1544)
!1561 = !DILocation(line: 568, column: 22, scope: !1502, inlinedAt: !1544)
!1562 = !DILocation(line: 568, column: 21, scope: !1502, inlinedAt: !1544)
!1563 = !DILocation(line: 568, column: 39, scope: !1502, inlinedAt: !1544)
!1564 = !DILocation(line: 568, column: 19, scope: !1502, inlinedAt: !1544)
!1565 = !DILocation(line: 567, column: 25, scope: !1502, inlinedAt: !1544)
!1566 = distinct !{!1566, !1560, !1567}
!1567 = !DILocation(line: 568, column: 41, scope: !1503, inlinedAt: !1544)
!1568 = distinct !{!1568, !686}
!1569 = !DILocation(line: 591, column: 16, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1571, file: !2, line: 591, column: 3)
!1571 = distinct !DILexicalBlock(scope: !1515, file: !2, line: 591, column: 3)
!1572 = !DILocation(line: 591, column: 3, scope: !1571)
!1573 = !DILocation(line: 592, column: 22, scope: !1570)
!1574 = !DILocation(line: 592, column: 21, scope: !1570)
!1575 = !DILocation(line: 592, column: 39, scope: !1570)
!1576 = !DILocation(line: 592, column: 19, scope: !1570)
!1577 = !DILocation(line: 591, column: 25, scope: !1570)
!1578 = distinct !{!1578, !1572, !1579}
!1579 = !DILocation(line: 592, column: 41, scope: !1571)
!1580 = distinct !{!1580, !686}
!1581 = !DILocation(line: 565, column: 12, scope: !1473, inlinedAt: !1544)
!1582 = !DILocation(line: 589, column: 12, scope: !1515)
!1583 = !DILocation(line: 594, column: 3, scope: !1515)
!1584 = distinct !DISubprogram(name: "get_mem7Dmv", scope: !2, file: !2, line: 606, type: !1585, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1588)
!1585 = !DISubroutineType(types: !1586)
!1586 = !{!327, !1587, !327, !327, !327, !327, !327, !327, !327}
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!1588 = !{!1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598}
!1589 = !DILocalVariable(name: "array7D", arg: 1, scope: !1584, file: !2, line: 606, type: !1587)
!1590 = !DILocalVariable(name: "dim0", arg: 2, scope: !1584, file: !2, line: 606, type: !327)
!1591 = !DILocalVariable(name: "dim1", arg: 3, scope: !1584, file: !2, line: 606, type: !327)
!1592 = !DILocalVariable(name: "dim2", arg: 4, scope: !1584, file: !2, line: 606, type: !327)
!1593 = !DILocalVariable(name: "dim3", arg: 5, scope: !1584, file: !2, line: 606, type: !327)
!1594 = !DILocalVariable(name: "dim4", arg: 6, scope: !1584, file: !2, line: 606, type: !327)
!1595 = !DILocalVariable(name: "dim5", arg: 7, scope: !1584, file: !2, line: 606, type: !327)
!1596 = !DILocalVariable(name: "dim6", arg: 8, scope: !1584, file: !2, line: 606, type: !327)
!1597 = !DILocalVariable(name: "i", scope: !1584, file: !2, line: 608, type: !327)
!1598 = !DILocalVariable(name: "mem_size", scope: !1584, file: !2, line: 608, type: !327)
!1599 = !DILocation(line: 0, scope: !1584)
!1600 = !DILocation(line: 608, column: 21, scope: !1584)
!1601 = !DILocation(line: 608, column: 26, scope: !1584)
!1602 = !DILocation(line: 610, column: 41, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1584, file: !2, line: 610, column: 6)
!1604 = !DILocation(line: 610, column: 18, scope: !1603)
!1605 = !DILocation(line: 610, column: 84, scope: !1603)
!1606 = !DILocation(line: 610, column: 6, scope: !1584)
!1607 = !DILocation(line: 0, scope: !575, inlinedAt: !1608)
!1608 = distinct !DILocation(line: 611, column: 5, scope: !1603)
!1609 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1608)
!1610 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1608)
!1611 = !DILocation(line: 613, column: 27, scope: !1584)
!1612 = !DILocation(line: 611, column: 5, scope: !1603)
!1613 = !DILocation(line: 613, column: 42, scope: !1584)
!1614 = !DILocation(line: 613, column: 15, scope: !1584)
!1615 = !DILocation(line: 615, column: 16, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1617, file: !2, line: 615, column: 3)
!1617 = distinct !DILexicalBlock(scope: !1584, file: !2, line: 615, column: 3)
!1618 = !DILocation(line: 615, column: 3, scope: !1617)
!1619 = !DILocation(line: 616, column: 22, scope: !1616)
!1620 = !DILocation(line: 616, column: 21, scope: !1616)
!1621 = !DILocation(line: 616, column: 39, scope: !1616)
!1622 = !DILocation(line: 616, column: 19, scope: !1616)
!1623 = !DILocation(line: 615, column: 25, scope: !1616)
!1624 = distinct !{!1624, !1618, !1625}
!1625 = !DILocation(line: 616, column: 41, scope: !1617)
!1626 = distinct !{!1626, !686}
!1627 = !DILocation(line: 613, column: 12, scope: !1584)
!1628 = !DILocation(line: 618, column: 3, scope: !1584)
!1629 = distinct !DISubprogram(name: "free_mem2D_spp", scope: !2, file: !2, line: 628, type: !1630, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1632)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !504}
!1632 = !{!1633}
!1633 = !DILocalVariable(name: "array2D", arg: 1, scope: !1629, file: !2, line: 628, type: !504)
!1634 = !DILocation(line: 0, scope: !1629)
!1635 = !DILocation(line: 630, column: 7, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1629, file: !2, line: 630, column: 7)
!1637 = !DILocation(line: 630, column: 7, scope: !1629)
!1638 = !DILocation(line: 632, column: 9, scope: !1639)
!1639 = distinct !DILexicalBlock(scope: !1640, file: !2, line: 632, column: 9)
!1640 = distinct !DILexicalBlock(scope: !1636, file: !2, line: 631, column: 3)
!1641 = !DILocation(line: 632, column: 9, scope: !1640)
!1642 = !DILocation(line: 633, column: 7, scope: !1639)
!1643 = !DILocation(line: 635, column: 7, scope: !1639)
!1644 = !DILocation(line: 637, column: 5, scope: !1640)
!1645 = !DILocation(line: 638, column: 3, scope: !1640)
!1646 = !DILocation(line: 641, column: 5, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1636, file: !2, line: 640, column: 3)
!1648 = !DILocation(line: 643, column: 1, scope: !1629)
!1649 = distinct !DISubprogram(name: "free_mem3D_spp", scope: !2, file: !2, line: 653, type: !1650, scopeLine: 654, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1652)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !509}
!1652 = !{!1653}
!1653 = !DILocalVariable(name: "array3D", arg: 1, scope: !1649, file: !2, line: 653, type: !509)
!1654 = !DILocation(line: 0, scope: !1649)
!1655 = !DILocation(line: 655, column: 7, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1649, file: !2, line: 655, column: 7)
!1657 = !DILocation(line: 655, column: 7, scope: !1649)
!1658 = !DILocation(line: 657, column: 20, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1656, file: !2, line: 656, column: 3)
!1660 = !DILocation(line: 0, scope: !1629, inlinedAt: !1661)
!1661 = distinct !DILocation(line: 657, column: 5, scope: !1659)
!1662 = !DILocation(line: 630, column: 7, scope: !1636, inlinedAt: !1661)
!1663 = !DILocation(line: 630, column: 7, scope: !1629, inlinedAt: !1661)
!1664 = !DILocation(line: 632, column: 9, scope: !1639, inlinedAt: !1661)
!1665 = !DILocation(line: 632, column: 9, scope: !1640, inlinedAt: !1661)
!1666 = !DILocation(line: 633, column: 7, scope: !1639, inlinedAt: !1661)
!1667 = !DILocation(line: 635, column: 7, scope: !1639, inlinedAt: !1661)
!1668 = !DILocation(line: 637, column: 5, scope: !1640, inlinedAt: !1661)
!1669 = !DILocation(line: 638, column: 3, scope: !1640, inlinedAt: !1661)
!1670 = !DILocation(line: 641, column: 5, scope: !1647, inlinedAt: !1661)
!1671 = !DILocation(line: 658, column: 5, scope: !1659)
!1672 = !DILocation(line: 659, column: 3, scope: !1659)
!1673 = !DILocation(line: 662, column: 5, scope: !1674)
!1674 = distinct !DILexicalBlock(scope: !1656, file: !2, line: 661, column: 3)
!1675 = !DILocation(line: 664, column: 1, scope: !1649)
!1676 = distinct !DISubprogram(name: "free_mem2Dmv", scope: !2, file: !2, line: 674, type: !1677, scopeLine: 675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1679)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !510}
!1679 = !{!1680}
!1680 = !DILocalVariable(name: "array2D", arg: 1, scope: !1676, file: !2, line: 674, type: !510)
!1681 = !DILocation(line: 0, scope: !1676)
!1682 = !DILocation(line: 676, column: 7, scope: !1683)
!1683 = distinct !DILexicalBlock(scope: !1676, file: !2, line: 676, column: 7)
!1684 = !DILocation(line: 676, column: 7, scope: !1676)
!1685 = !DILocation(line: 678, column: 9, scope: !1686)
!1686 = distinct !DILexicalBlock(scope: !1687, file: !2, line: 678, column: 9)
!1687 = distinct !DILexicalBlock(scope: !1683, file: !2, line: 677, column: 3)
!1688 = !DILocation(line: 678, column: 9, scope: !1687)
!1689 = !DILocation(line: 679, column: 7, scope: !1686)
!1690 = !DILocation(line: 681, column: 7, scope: !1686)
!1691 = !DILocation(line: 683, column: 5, scope: !1687)
!1692 = !DILocation(line: 684, column: 3, scope: !1687)
!1693 = !DILocation(line: 687, column: 5, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1683, file: !2, line: 686, column: 3)
!1695 = !DILocation(line: 689, column: 1, scope: !1676)
!1696 = distinct !DISubprogram(name: "free_mem3Dmv", scope: !2, file: !2, line: 699, type: !1697, scopeLine: 700, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1699)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !512}
!1699 = !{!1700}
!1700 = !DILocalVariable(name: "array3D", arg: 1, scope: !1696, file: !2, line: 699, type: !512)
!1701 = !DILocation(line: 0, scope: !1696)
!1702 = !DILocation(line: 701, column: 7, scope: !1703)
!1703 = distinct !DILexicalBlock(scope: !1696, file: !2, line: 701, column: 7)
!1704 = !DILocation(line: 701, column: 7, scope: !1696)
!1705 = !DILocation(line: 703, column: 18, scope: !1706)
!1706 = distinct !DILexicalBlock(scope: !1703, file: !2, line: 702, column: 3)
!1707 = !DILocation(line: 0, scope: !1676, inlinedAt: !1708)
!1708 = distinct !DILocation(line: 703, column: 5, scope: !1706)
!1709 = !DILocation(line: 676, column: 7, scope: !1683, inlinedAt: !1708)
!1710 = !DILocation(line: 676, column: 7, scope: !1676, inlinedAt: !1708)
!1711 = !DILocation(line: 678, column: 9, scope: !1686, inlinedAt: !1708)
!1712 = !DILocation(line: 678, column: 9, scope: !1687, inlinedAt: !1708)
!1713 = !DILocation(line: 679, column: 7, scope: !1686, inlinedAt: !1708)
!1714 = !DILocation(line: 681, column: 7, scope: !1686, inlinedAt: !1708)
!1715 = !DILocation(line: 683, column: 5, scope: !1687, inlinedAt: !1708)
!1716 = !DILocation(line: 684, column: 3, scope: !1687, inlinedAt: !1708)
!1717 = !DILocation(line: 687, column: 5, scope: !1694, inlinedAt: !1708)
!1718 = !DILocation(line: 704, column: 5, scope: !1706)
!1719 = !DILocation(line: 705, column: 3, scope: !1706)
!1720 = !DILocation(line: 708, column: 5, scope: !1721)
!1721 = distinct !DILexicalBlock(scope: !1703, file: !2, line: 707, column: 3)
!1722 = !DILocation(line: 710, column: 1, scope: !1696)
!1723 = distinct !DISubprogram(name: "free_mem4Dmv", scope: !2, file: !2, line: 719, type: !1724, scopeLine: 720, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1726)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{null, !513}
!1726 = !{!1727}
!1727 = !DILocalVariable(name: "array4D", arg: 1, scope: !1723, file: !2, line: 719, type: !513)
!1728 = !DILocation(line: 0, scope: !1723)
!1729 = !DILocation(line: 721, column: 7, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1723, file: !2, line: 721, column: 7)
!1731 = !DILocation(line: 721, column: 7, scope: !1723)
!1732 = !DILocation(line: 723, column: 18, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1730, file: !2, line: 722, column: 3)
!1734 = !DILocation(line: 0, scope: !1696, inlinedAt: !1735)
!1735 = distinct !DILocation(line: 723, column: 5, scope: !1733)
!1736 = !DILocation(line: 701, column: 7, scope: !1703, inlinedAt: !1735)
!1737 = !DILocation(line: 701, column: 7, scope: !1696, inlinedAt: !1735)
!1738 = !DILocation(line: 703, column: 18, scope: !1706, inlinedAt: !1735)
!1739 = !DILocation(line: 0, scope: !1676, inlinedAt: !1740)
!1740 = distinct !DILocation(line: 703, column: 5, scope: !1706, inlinedAt: !1735)
!1741 = !DILocation(line: 676, column: 7, scope: !1683, inlinedAt: !1740)
!1742 = !DILocation(line: 676, column: 7, scope: !1676, inlinedAt: !1740)
!1743 = !DILocation(line: 678, column: 9, scope: !1686, inlinedAt: !1740)
!1744 = !DILocation(line: 678, column: 9, scope: !1687, inlinedAt: !1740)
!1745 = !DILocation(line: 679, column: 7, scope: !1686, inlinedAt: !1740)
!1746 = !DILocation(line: 681, column: 7, scope: !1686, inlinedAt: !1740)
!1747 = !DILocation(line: 683, column: 5, scope: !1687, inlinedAt: !1740)
!1748 = !DILocation(line: 684, column: 3, scope: !1687, inlinedAt: !1740)
!1749 = !DILocation(line: 687, column: 5, scope: !1694, inlinedAt: !1740)
!1750 = !DILocation(line: 704, column: 5, scope: !1706, inlinedAt: !1735)
!1751 = !DILocation(line: 705, column: 3, scope: !1706, inlinedAt: !1735)
!1752 = !DILocation(line: 708, column: 5, scope: !1721, inlinedAt: !1735)
!1753 = !DILocation(line: 724, column: 5, scope: !1733)
!1754 = !DILocation(line: 725, column: 3, scope: !1733)
!1755 = !DILocation(line: 728, column: 5, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1730, file: !2, line: 727, column: 3)
!1757 = !DILocation(line: 730, column: 1, scope: !1723)
!1758 = distinct !DISubprogram(name: "free_mem5Dmv", scope: !2, file: !2, line: 739, type: !1759, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1761)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !514}
!1761 = !{!1762}
!1762 = !DILocalVariable(name: "array5D", arg: 1, scope: !1758, file: !2, line: 739, type: !514)
!1763 = !DILocation(line: 0, scope: !1758)
!1764 = !DILocation(line: 741, column: 7, scope: !1765)
!1765 = distinct !DILexicalBlock(scope: !1758, file: !2, line: 741, column: 7)
!1766 = !DILocation(line: 741, column: 7, scope: !1758)
!1767 = !DILocation(line: 743, column: 18, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1765, file: !2, line: 742, column: 3)
!1769 = !DILocation(line: 743, column: 5, scope: !1768)
!1770 = !DILocation(line: 744, column: 5, scope: !1768)
!1771 = !DILocation(line: 745, column: 3, scope: !1768)
!1772 = !DILocation(line: 748, column: 5, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1765, file: !2, line: 747, column: 3)
!1774 = !DILocation(line: 750, column: 1, scope: !1758)
!1775 = distinct !DISubprogram(name: "free_mem6Dmv", scope: !2, file: !2, line: 758, type: !1776, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1778)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{null, !515}
!1778 = !{!1779}
!1779 = !DILocalVariable(name: "array6D", arg: 1, scope: !1775, file: !2, line: 758, type: !515)
!1780 = !DILocation(line: 0, scope: !1775)
!1781 = !DILocation(line: 760, column: 7, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1775, file: !2, line: 760, column: 7)
!1783 = !DILocation(line: 760, column: 7, scope: !1775)
!1784 = !DILocation(line: 762, column: 18, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1782, file: !2, line: 761, column: 3)
!1786 = !DILocation(line: 0, scope: !1758, inlinedAt: !1787)
!1787 = distinct !DILocation(line: 762, column: 5, scope: !1785)
!1788 = !DILocation(line: 741, column: 7, scope: !1765, inlinedAt: !1787)
!1789 = !DILocation(line: 741, column: 7, scope: !1758, inlinedAt: !1787)
!1790 = !DILocation(line: 743, column: 18, scope: !1768, inlinedAt: !1787)
!1791 = !DILocation(line: 743, column: 5, scope: !1768, inlinedAt: !1787)
!1792 = !DILocation(line: 744, column: 5, scope: !1768, inlinedAt: !1787)
!1793 = !DILocation(line: 745, column: 3, scope: !1768, inlinedAt: !1787)
!1794 = !DILocation(line: 748, column: 5, scope: !1773, inlinedAt: !1787)
!1795 = !DILocation(line: 763, column: 5, scope: !1785)
!1796 = !DILocation(line: 764, column: 3, scope: !1785)
!1797 = !DILocation(line: 767, column: 5, scope: !1798)
!1798 = distinct !DILexicalBlock(scope: !1782, file: !2, line: 766, column: 3)
!1799 = !DILocation(line: 769, column: 1, scope: !1775)
!1800 = distinct !DISubprogram(name: "free_mem7Dmv", scope: !2, file: !2, line: 778, type: !1801, scopeLine: 779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1803)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{null, !516}
!1803 = !{!1804}
!1804 = !DILocalVariable(name: "array7D", arg: 1, scope: !1800, file: !2, line: 778, type: !516)
!1805 = !DILocation(line: 0, scope: !1800)
!1806 = !DILocation(line: 780, column: 7, scope: !1807)
!1807 = distinct !DILexicalBlock(scope: !1800, file: !2, line: 780, column: 7)
!1808 = !DILocation(line: 780, column: 7, scope: !1800)
!1809 = !DILocation(line: 782, column: 18, scope: !1810)
!1810 = distinct !DILexicalBlock(scope: !1807, file: !2, line: 781, column: 3)
!1811 = !DILocation(line: 0, scope: !1775, inlinedAt: !1812)
!1812 = distinct !DILocation(line: 782, column: 5, scope: !1810)
!1813 = !DILocation(line: 760, column: 7, scope: !1782, inlinedAt: !1812)
!1814 = !DILocation(line: 760, column: 7, scope: !1775, inlinedAt: !1812)
!1815 = !DILocation(line: 762, column: 18, scope: !1785, inlinedAt: !1812)
!1816 = !DILocation(line: 0, scope: !1758, inlinedAt: !1817)
!1817 = distinct !DILocation(line: 762, column: 5, scope: !1785, inlinedAt: !1812)
!1818 = !DILocation(line: 741, column: 7, scope: !1765, inlinedAt: !1817)
!1819 = !DILocation(line: 741, column: 7, scope: !1758, inlinedAt: !1817)
!1820 = !DILocation(line: 743, column: 18, scope: !1768, inlinedAt: !1817)
!1821 = !DILocation(line: 743, column: 5, scope: !1768, inlinedAt: !1817)
!1822 = !DILocation(line: 744, column: 5, scope: !1768, inlinedAt: !1817)
!1823 = !DILocation(line: 745, column: 3, scope: !1768, inlinedAt: !1817)
!1824 = !DILocation(line: 748, column: 5, scope: !1773, inlinedAt: !1817)
!1825 = !DILocation(line: 763, column: 5, scope: !1785, inlinedAt: !1812)
!1826 = !DILocation(line: 764, column: 3, scope: !1785, inlinedAt: !1812)
!1827 = !DILocation(line: 767, column: 5, scope: !1798, inlinedAt: !1812)
!1828 = !DILocation(line: 783, column: 5, scope: !1810)
!1829 = !DILocation(line: 784, column: 3, scope: !1810)
!1830 = !DILocation(line: 787, column: 5, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1807, file: !2, line: 786, column: 3)
!1832 = !DILocation(line: 789, column: 1, scope: !1800)
!1833 = distinct !DISubprogram(name: "get_mem1Dpel", scope: !2, file: !2, line: 801, type: !1834, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1836)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!327, !312, !327}
!1836 = !{!1837, !1838}
!1837 = !DILocalVariable(name: "array1D", arg: 1, scope: !1833, file: !2, line: 801, type: !312)
!1838 = !DILocalVariable(name: "dim0", arg: 2, scope: !1833, file: !2, line: 801, type: !327)
!1839 = !DILocation(line: 0, scope: !1833)
!1840 = !DILocation(line: 803, column: 37, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1833, file: !2, line: 803, column: 6)
!1842 = !DILocation(line: 803, column: 30, scope: !1841)
!1843 = !DILocation(line: 803, column: 19, scope: !1841)
!1844 = !DILocation(line: 803, column: 66, scope: !1841)
!1845 = !DILocation(line: 803, column: 6, scope: !1833)
!1846 = !DILocation(line: 0, scope: !575, inlinedAt: !1847)
!1847 = distinct !DILocation(line: 804, column: 5, scope: !1841)
!1848 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1847)
!1849 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1847)
!1850 = !DILocation(line: 804, column: 5, scope: !1841)
!1851 = !DILocation(line: 806, column: 34, scope: !1833)
!1852 = !DILocation(line: 806, column: 27, scope: !1833)
!1853 = !DILocation(line: 806, column: 3, scope: !1833)
!1854 = distinct !DISubprogram(name: "get_mem2Dpel", scope: !2, file: !2, line: 817, type: !1855, scopeLine: 818, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1857)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!327, !412, !327, !327}
!1857 = !{!1858, !1859, !1860, !1861}
!1858 = !DILocalVariable(name: "array2D", arg: 1, scope: !1854, file: !2, line: 817, type: !412)
!1859 = !DILocalVariable(name: "dim0", arg: 2, scope: !1854, file: !2, line: 817, type: !327)
!1860 = !DILocalVariable(name: "dim1", arg: 3, scope: !1854, file: !2, line: 817, type: !327)
!1861 = !DILocalVariable(name: "i", scope: !1854, file: !2, line: 819, type: !327)
!1862 = !DILocation(line: 0, scope: !1854)
!1863 = !DILocation(line: 821, column: 38, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1854, file: !2, line: 821, column: 6)
!1865 = !DILocation(line: 821, column: 43, scope: !1864)
!1866 = !DILocation(line: 821, column: 31, scope: !1864)
!1867 = !DILocation(line: 821, column: 19, scope: !1864)
!1868 = !DILocation(line: 821, column: 63, scope: !1864)
!1869 = !DILocation(line: 821, column: 6, scope: !1854)
!1870 = !DILocation(line: 0, scope: !575, inlinedAt: !1871)
!1871 = distinct !DILocation(line: 822, column: 5, scope: !1864)
!1872 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1871)
!1873 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1871)
!1874 = !DILocation(line: 823, column: 9, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1854, file: !2, line: 823, column: 6)
!1876 = !DILocation(line: 822, column: 5, scope: !1864)
!1877 = !DILocation(line: 823, column: 43, scope: !1875)
!1878 = !DILocation(line: 823, column: 38, scope: !1875)
!1879 = !DILocation(line: 823, column: 31, scope: !1875)
!1880 = !DILocation(line: 823, column: 19, scope: !1875)
!1881 = !DILocation(line: 823, column: 68, scope: !1875)
!1882 = !DILocation(line: 823, column: 6, scope: !1854)
!1883 = !DILocation(line: 0, scope: !575, inlinedAt: !1884)
!1884 = distinct !DILocation(line: 824, column: 5, scope: !1875)
!1885 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1884)
!1886 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1884)
!1887 = !DILocation(line: 824, column: 5, scope: !1875)
!1888 = !DILocation(line: 826, column: 17, scope: !1889)
!1889 = distinct !DILexicalBlock(scope: !1890, file: !2, line: 826, column: 3)
!1890 = distinct !DILexicalBlock(scope: !1854, file: !2, line: 826, column: 3)
!1891 = !DILocation(line: 826, column: 3, scope: !1890)
!1892 = !DILocation(line: 827, column: 22, scope: !1889)
!1893 = !DILocation(line: 827, column: 21, scope: !1889)
!1894 = !DILocation(line: 827, column: 37, scope: !1889)
!1895 = !DILocation(line: 827, column: 19, scope: !1889)
!1896 = !DILocation(line: 826, column: 26, scope: !1889)
!1897 = distinct !{!1897, !1891, !1898}
!1898 = !DILocation(line: 827, column: 39, scope: !1890)
!1899 = distinct !{!1899, !686}
!1900 = !DILocation(line: 829, column: 41, scope: !1854)
!1901 = !DILocation(line: 829, column: 34, scope: !1854)
!1902 = !DILocation(line: 829, column: 15, scope: !1854)
!1903 = !DILocation(line: 829, column: 3, scope: !1854)
!1904 = distinct !DISubprogram(name: "get_mem2DpelWithPad", scope: !2, file: !2, line: 832, type: !1905, scopeLine: 833, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1907)
!1905 = !DISubroutineType(types: !1906)
!1906 = !{!327, !412, !327, !327, !327, !327}
!1907 = !{!1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916}
!1908 = !DILocalVariable(name: "array2D", arg: 1, scope: !1904, file: !2, line: 832, type: !412)
!1909 = !DILocalVariable(name: "dim0", arg: 2, scope: !1904, file: !2, line: 832, type: !327)
!1910 = !DILocalVariable(name: "dim1", arg: 3, scope: !1904, file: !2, line: 832, type: !327)
!1911 = !DILocalVariable(name: "iPadY", arg: 4, scope: !1904, file: !2, line: 832, type: !327)
!1912 = !DILocalVariable(name: "iPadX", arg: 5, scope: !1904, file: !2, line: 832, type: !327)
!1913 = !DILocalVariable(name: "i", scope: !1904, file: !2, line: 834, type: !327)
!1914 = !DILocalVariable(name: "curr", scope: !1904, file: !2, line: 835, type: !313)
!1915 = !DILocalVariable(name: "iHeight", scope: !1904, file: !2, line: 836, type: !327)
!1916 = !DILocalVariable(name: "iWidth", scope: !1904, file: !2, line: 836, type: !327)
!1917 = !DILocation(line: 0, scope: !1904)
!1918 = !DILocation(line: 838, column: 19, scope: !1904)
!1919 = !DILocation(line: 838, column: 17, scope: !1904)
!1920 = !DILocation(line: 839, column: 18, scope: !1904)
!1921 = !DILocation(line: 839, column: 16, scope: !1904)
!1922 = !DILocation(line: 840, column: 38, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1904, file: !2, line: 840, column: 6)
!1924 = !DILocation(line: 840, column: 45, scope: !1923)
!1925 = !DILocation(line: 840, column: 31, scope: !1923)
!1926 = !DILocation(line: 840, column: 19, scope: !1923)
!1927 = !DILocation(line: 840, column: 64, scope: !1923)
!1928 = !DILocation(line: 840, column: 6, scope: !1904)
!1929 = !DILocation(line: 0, scope: !575, inlinedAt: !1930)
!1930 = distinct !DILocation(line: 841, column: 5, scope: !1923)
!1931 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1930)
!1932 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1930)
!1933 = !DILocation(line: 842, column: 9, scope: !1934)
!1934 = distinct !DILexicalBlock(scope: !1904, file: !2, line: 842, column: 6)
!1935 = !DILocation(line: 841, column: 5, scope: !1923)
!1936 = !DILocation(line: 842, column: 46, scope: !1934)
!1937 = !DILocation(line: 842, column: 38, scope: !1934)
!1938 = !DILocation(line: 842, column: 31, scope: !1934)
!1939 = !DILocation(line: 842, column: 19, scope: !1934)
!1940 = !DILocation(line: 842, column: 74, scope: !1934)
!1941 = !DILocation(line: 842, column: 6, scope: !1904)
!1942 = !DILocation(line: 0, scope: !575, inlinedAt: !1943)
!1943 = distinct !DILocation(line: 843, column: 5, scope: !1934)
!1944 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1943)
!1945 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1943)
!1946 = !DILocation(line: 843, column: 5, scope: !1934)
!1947 = !DILocation(line: 845, column: 4, scope: !1904)
!1948 = !DILocation(line: 845, column: 17, scope: !1904)
!1949 = !DILocation(line: 847, column: 17, scope: !1950)
!1950 = distinct !DILexicalBlock(scope: !1951, file: !2, line: 847, column: 3)
!1951 = distinct !DILexicalBlock(scope: !1904, file: !2, line: 847, column: 3)
!1952 = !DILocation(line: 847, column: 3, scope: !1951)
!1953 = !DILocation(line: 846, column: 11, scope: !1904)
!1954 = !DILocation(line: 846, column: 10, scope: !1904)
!1955 = !DILocation(line: 849, column: 10, scope: !1956)
!1956 = distinct !DILexicalBlock(scope: !1950, file: !2, line: 848, column: 3)
!1957 = !DILocation(line: 850, column: 6, scope: !1956)
!1958 = !DILocation(line: 850, column: 5, scope: !1956)
!1959 = !DILocation(line: 850, column: 19, scope: !1956)
!1960 = !DILocation(line: 847, column: 29, scope: !1950)
!1961 = distinct !{!1961, !1952, !1962}
!1962 = !DILocation(line: 851, column: 3, scope: !1951)
!1963 = distinct !{!1963, !686}
!1964 = !DILocation(line: 852, column: 19, scope: !1904)
!1965 = !DILocation(line: 852, column: 18, scope: !1904)
!1966 = !DILocation(line: 852, column: 14, scope: !1904)
!1967 = !DILocation(line: 854, column: 46, scope: !1904)
!1968 = !DILocation(line: 854, column: 37, scope: !1904)
!1969 = !DILocation(line: 854, column: 18, scope: !1904)
!1970 = !DILocation(line: 854, column: 3, scope: !1904)
!1971 = distinct !DISubprogram(name: "get_mem3Dpel", scope: !2, file: !2, line: 867, type: !1972, scopeLine: 868, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !1974)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!327, !517, !327, !327, !327}
!1974 = !{!1975, !1976, !1977, !1978, !1979, !1980}
!1975 = !DILocalVariable(name: "array3D", arg: 1, scope: !1971, file: !2, line: 867, type: !517)
!1976 = !DILocalVariable(name: "dim0", arg: 2, scope: !1971, file: !2, line: 867, type: !327)
!1977 = !DILocalVariable(name: "dim1", arg: 3, scope: !1971, file: !2, line: 867, type: !327)
!1978 = !DILocalVariable(name: "dim2", arg: 4, scope: !1971, file: !2, line: 867, type: !327)
!1979 = !DILocalVariable(name: "i", scope: !1971, file: !2, line: 869, type: !327)
!1980 = !DILocalVariable(name: "mem_size", scope: !1971, file: !2, line: 869, type: !327)
!1981 = !DILocation(line: 0, scope: !1971)
!1982 = !DILocation(line: 869, column: 21, scope: !1971)
!1983 = !DILocation(line: 869, column: 26, scope: !1971)
!1984 = !DILocation(line: 871, column: 31, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1971, file: !2, line: 871, column: 6)
!1986 = !DILocation(line: 871, column: 18, scope: !1985)
!1987 = !DILocation(line: 871, column: 64, scope: !1985)
!1988 = !DILocation(line: 871, column: 6, scope: !1971)
!1989 = !DILocation(line: 0, scope: !575, inlinedAt: !1990)
!1990 = distinct !DILocation(line: 872, column: 5, scope: !1985)
!1991 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !1990)
!1992 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !1990)
!1993 = !DILocation(line: 874, column: 28, scope: !1971)
!1994 = !DILocation(line: 872, column: 5, scope: !1985)
!1995 = !DILocation(line: 874, column: 43, scope: !1971)
!1996 = !DILocation(line: 874, column: 15, scope: !1971)
!1997 = !DILocation(line: 876, column: 16, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1999, file: !2, line: 876, column: 3)
!1999 = distinct !DILexicalBlock(scope: !1971, file: !2, line: 876, column: 3)
!2000 = !DILocation(line: 876, column: 3, scope: !1999)
!2001 = !DILocation(line: 877, column: 22, scope: !1998)
!2002 = !DILocation(line: 877, column: 21, scope: !1998)
!2003 = !DILocation(line: 877, column: 39, scope: !1998)
!2004 = !DILocation(line: 877, column: 19, scope: !1998)
!2005 = !DILocation(line: 876, column: 25, scope: !1998)
!2006 = distinct !{!2006, !2000, !2007}
!2007 = !DILocation(line: 877, column: 41, scope: !1999)
!2008 = distinct !{!2008, !686}
!2009 = !DILocation(line: 874, column: 12, scope: !1971)
!2010 = !DILocation(line: 879, column: 3, scope: !1971)
!2011 = distinct !DISubprogram(name: "get_mem3DpelWithPad", scope: !2, file: !2, line: 882, type: !2012, scopeLine: 883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2014)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!327, !517, !327, !327, !327, !327, !327}
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!2015 = !DILocalVariable(name: "array3D", arg: 1, scope: !2011, file: !2, line: 882, type: !517)
!2016 = !DILocalVariable(name: "dim0", arg: 2, scope: !2011, file: !2, line: 882, type: !327)
!2017 = !DILocalVariable(name: "dim1", arg: 3, scope: !2011, file: !2, line: 882, type: !327)
!2018 = !DILocalVariable(name: "dim2", arg: 4, scope: !2011, file: !2, line: 882, type: !327)
!2019 = !DILocalVariable(name: "iPadY", arg: 5, scope: !2011, file: !2, line: 882, type: !327)
!2020 = !DILocalVariable(name: "iPadX", arg: 6, scope: !2011, file: !2, line: 882, type: !327)
!2021 = !DILocalVariable(name: "i", scope: !2011, file: !2, line: 884, type: !327)
!2022 = !DILocalVariable(name: "mem_size", scope: !2011, file: !2, line: 884, type: !327)
!2023 = !DILocation(line: 0, scope: !2011)
!2024 = !DILocation(line: 884, column: 21, scope: !2011)
!2025 = !DILocation(line: 884, column: 26, scope: !2011)
!2026 = !DILocation(line: 886, column: 31, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2011, file: !2, line: 886, column: 6)
!2028 = !DILocation(line: 886, column: 18, scope: !2027)
!2029 = !DILocation(line: 886, column: 62, scope: !2027)
!2030 = !DILocation(line: 886, column: 6, scope: !2011)
!2031 = !DILocation(line: 0, scope: !575, inlinedAt: !2032)
!2032 = distinct !DILocation(line: 887, column: 5, scope: !2027)
!2033 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2032)
!2034 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2032)
!2035 = !DILocation(line: 889, column: 35, scope: !2011)
!2036 = !DILocation(line: 887, column: 5, scope: !2027)
!2037 = !DILocation(line: 889, column: 49, scope: !2011)
!2038 = !DILocation(line: 889, column: 56, scope: !2011)
!2039 = !DILocation(line: 889, column: 65, scope: !2011)
!2040 = !DILocation(line: 889, column: 54, scope: !2011)
!2041 = !DILocation(line: 889, column: 15, scope: !2011)
!2042 = !DILocation(line: 891, column: 16, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2044, file: !2, line: 891, column: 3)
!2044 = distinct !DILexicalBlock(scope: !2011, file: !2, line: 891, column: 3)
!2045 = !DILocation(line: 891, column: 3, scope: !2044)
!2046 = !DILocation(line: 892, column: 22, scope: !2043)
!2047 = !DILocation(line: 892, column: 21, scope: !2043)
!2048 = !DILocation(line: 892, column: 39, scope: !2043)
!2049 = !DILocation(line: 892, column: 19, scope: !2043)
!2050 = !DILocation(line: 891, column: 25, scope: !2043)
!2051 = distinct !{!2051, !2045, !2052}
!2052 = !DILocation(line: 892, column: 54, scope: !2044)
!2053 = distinct !{!2053, !686}
!2054 = !DILocation(line: 889, column: 12, scope: !2011)
!2055 = !DILocation(line: 894, column: 3, scope: !2011)
!2056 = distinct !DISubprogram(name: "get_mem3DpelWithPadSeparately", scope: !2, file: !2, line: 897, type: !2012, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065}
!2058 = !DILocalVariable(name: "array3D", arg: 1, scope: !2056, file: !2, line: 897, type: !517)
!2059 = !DILocalVariable(name: "dim0", arg: 2, scope: !2056, file: !2, line: 897, type: !327)
!2060 = !DILocalVariable(name: "dim1", arg: 3, scope: !2056, file: !2, line: 897, type: !327)
!2061 = !DILocalVariable(name: "dim2", arg: 4, scope: !2056, file: !2, line: 897, type: !327)
!2062 = !DILocalVariable(name: "iPadY", arg: 5, scope: !2056, file: !2, line: 897, type: !327)
!2063 = !DILocalVariable(name: "iPadX", arg: 6, scope: !2056, file: !2, line: 897, type: !327)
!2064 = !DILocalVariable(name: "i", scope: !2056, file: !2, line: 899, type: !327)
!2065 = !DILocalVariable(name: "mem_size", scope: !2056, file: !2, line: 899, type: !327)
!2066 = !DILocation(line: 0, scope: !2056)
!2067 = !DILocation(line: 899, column: 21, scope: !2056)
!2068 = !DILocation(line: 899, column: 26, scope: !2056)
!2069 = !DILocation(line: 901, column: 31, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2056, file: !2, line: 901, column: 6)
!2071 = !DILocation(line: 901, column: 18, scope: !2070)
!2072 = !DILocation(line: 901, column: 62, scope: !2070)
!2073 = !DILocation(line: 901, column: 6, scope: !2056)
!2074 = !DILocation(line: 0, scope: !575, inlinedAt: !2075)
!2075 = distinct !DILocation(line: 902, column: 5, scope: !2070)
!2076 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2075)
!2077 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2075)
!2078 = !DILocation(line: 902, column: 5, scope: !2070)
!2079 = !DILocation(line: 904, column: 16, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2081, file: !2, line: 904, column: 3)
!2081 = distinct !DILexicalBlock(scope: !2056, file: !2, line: 904, column: 3)
!2082 = !DILocation(line: 904, column: 3, scope: !2081)
!2083 = !DILocation(line: 905, column: 38, scope: !2080)
!2084 = !DILocation(line: 905, column: 47, scope: !2080)
!2085 = !DILocation(line: 905, column: 17, scope: !2080)
!2086 = !DILocation(line: 905, column: 14, scope: !2080)
!2087 = !DILocation(line: 904, column: 25, scope: !2080)
!2088 = distinct !{!2088, !2082, !2089}
!2089 = !DILocation(line: 905, column: 75, scope: !2081)
!2090 = !DILocation(line: 907, column: 3, scope: !2056)
!2091 = distinct !DISubprogram(name: "get_mem4Dpel", scope: !2, file: !2, line: 920, type: !2092, scopeLine: 921, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2094)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!327, !518, !327, !327, !327, !327}
!2094 = !{!2095, !2096, !2097, !2098, !2099, !2100, !2101}
!2095 = !DILocalVariable(name: "array4D", arg: 1, scope: !2091, file: !2, line: 920, type: !518)
!2096 = !DILocalVariable(name: "dim0", arg: 2, scope: !2091, file: !2, line: 920, type: !327)
!2097 = !DILocalVariable(name: "dim1", arg: 3, scope: !2091, file: !2, line: 920, type: !327)
!2098 = !DILocalVariable(name: "dim2", arg: 4, scope: !2091, file: !2, line: 920, type: !327)
!2099 = !DILocalVariable(name: "dim3", arg: 5, scope: !2091, file: !2, line: 920, type: !327)
!2100 = !DILocalVariable(name: "i", scope: !2091, file: !2, line: 922, type: !327)
!2101 = !DILocalVariable(name: "mem_size", scope: !2091, file: !2, line: 922, type: !327)
!2102 = !DILocation(line: 0, scope: !2091)
!2103 = !DILocation(line: 922, column: 22, scope: !2091)
!2104 = !DILocation(line: 922, column: 27, scope: !2091)
!2105 = !DILocation(line: 924, column: 32, scope: !2106)
!2106 = distinct !DILexicalBlock(scope: !2091, file: !2, line: 924, column: 6)
!2107 = !DILocation(line: 924, column: 18, scope: !2106)
!2108 = !DILocation(line: 924, column: 66, scope: !2106)
!2109 = !DILocation(line: 924, column: 6, scope: !2091)
!2110 = !DILocation(line: 0, scope: !575, inlinedAt: !2111)
!2111 = distinct !DILocation(line: 925, column: 5, scope: !2106)
!2112 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2111)
!2113 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2111)
!2114 = !DILocation(line: 927, column: 28, scope: !2091)
!2115 = !DILocation(line: 925, column: 5, scope: !2106)
!2116 = !DILocation(line: 927, column: 43, scope: !2091)
!2117 = !DILocation(line: 0, scope: !1971, inlinedAt: !2118)
!2118 = distinct !DILocation(line: 927, column: 15, scope: !2091)
!2119 = !DILocation(line: 869, column: 21, scope: !1971, inlinedAt: !2118)
!2120 = !DILocation(line: 869, column: 26, scope: !1971, inlinedAt: !2118)
!2121 = !DILocation(line: 871, column: 31, scope: !1985, inlinedAt: !2118)
!2122 = !DILocation(line: 871, column: 18, scope: !1985, inlinedAt: !2118)
!2123 = !DILocation(line: 871, column: 64, scope: !1985, inlinedAt: !2118)
!2124 = !DILocation(line: 871, column: 6, scope: !1971, inlinedAt: !2118)
!2125 = !DILocation(line: 0, scope: !575, inlinedAt: !2126)
!2126 = distinct !DILocation(line: 872, column: 5, scope: !1985, inlinedAt: !2118)
!2127 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2126)
!2128 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2126)
!2129 = !DILocation(line: 874, column: 28, scope: !1971, inlinedAt: !2118)
!2130 = !DILocation(line: 872, column: 5, scope: !1985, inlinedAt: !2118)
!2131 = !DILocation(line: 874, column: 43, scope: !1971, inlinedAt: !2118)
!2132 = !DILocation(line: 874, column: 15, scope: !1971, inlinedAt: !2118)
!2133 = !DILocation(line: 876, column: 16, scope: !1998, inlinedAt: !2118)
!2134 = !DILocation(line: 876, column: 3, scope: !1999, inlinedAt: !2118)
!2135 = !DILocation(line: 877, column: 22, scope: !1998, inlinedAt: !2118)
!2136 = !DILocation(line: 877, column: 21, scope: !1998, inlinedAt: !2118)
!2137 = !DILocation(line: 877, column: 39, scope: !1998, inlinedAt: !2118)
!2138 = !DILocation(line: 877, column: 19, scope: !1998, inlinedAt: !2118)
!2139 = !DILocation(line: 876, column: 25, scope: !1998, inlinedAt: !2118)
!2140 = distinct !{!2140, !2134, !2141}
!2141 = !DILocation(line: 877, column: 41, scope: !1999, inlinedAt: !2118)
!2142 = distinct !{!2142, !686}
!2143 = !DILocation(line: 929, column: 16, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !2, line: 929, column: 3)
!2145 = distinct !DILexicalBlock(scope: !2091, file: !2, line: 929, column: 3)
!2146 = !DILocation(line: 929, column: 3, scope: !2145)
!2147 = !DILocation(line: 930, column: 22, scope: !2144)
!2148 = !DILocation(line: 930, column: 21, scope: !2144)
!2149 = !DILocation(line: 930, column: 39, scope: !2144)
!2150 = !DILocation(line: 930, column: 19, scope: !2144)
!2151 = !DILocation(line: 929, column: 25, scope: !2144)
!2152 = distinct !{!2152, !2146, !2153}
!2153 = !DILocation(line: 930, column: 41, scope: !2145)
!2154 = distinct !{!2154, !686}
!2155 = !DILocation(line: 874, column: 12, scope: !1971, inlinedAt: !2118)
!2156 = !DILocation(line: 927, column: 12, scope: !2091)
!2157 = !DILocation(line: 932, column: 3, scope: !2091)
!2158 = distinct !DISubprogram(name: "get_mem4DpelWithPad", scope: !2, file: !2, line: 935, type: !2159, scopeLine: 936, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2161)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!327, !518, !327, !327, !327, !327, !327, !327}
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170}
!2162 = !DILocalVariable(name: "array4D", arg: 1, scope: !2158, file: !2, line: 935, type: !518)
!2163 = !DILocalVariable(name: "dim0", arg: 2, scope: !2158, file: !2, line: 935, type: !327)
!2164 = !DILocalVariable(name: "dim1", arg: 3, scope: !2158, file: !2, line: 935, type: !327)
!2165 = !DILocalVariable(name: "dim2", arg: 4, scope: !2158, file: !2, line: 935, type: !327)
!2166 = !DILocalVariable(name: "dim3", arg: 5, scope: !2158, file: !2, line: 935, type: !327)
!2167 = !DILocalVariable(name: "iPadY", arg: 6, scope: !2158, file: !2, line: 935, type: !327)
!2168 = !DILocalVariable(name: "iPadX", arg: 7, scope: !2158, file: !2, line: 935, type: !327)
!2169 = !DILocalVariable(name: "i", scope: !2158, file: !2, line: 937, type: !327)
!2170 = !DILocalVariable(name: "mem_size", scope: !2158, file: !2, line: 937, type: !327)
!2171 = !DILocation(line: 0, scope: !2158)
!2172 = !DILocation(line: 937, column: 22, scope: !2158)
!2173 = !DILocation(line: 937, column: 27, scope: !2158)
!2174 = !DILocation(line: 939, column: 32, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2158, file: !2, line: 939, column: 6)
!2176 = !DILocation(line: 939, column: 18, scope: !2175)
!2177 = !DILocation(line: 939, column: 66, scope: !2175)
!2178 = !DILocation(line: 939, column: 6, scope: !2158)
!2179 = !DILocation(line: 0, scope: !575, inlinedAt: !2180)
!2180 = distinct !DILocation(line: 940, column: 5, scope: !2175)
!2181 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2180)
!2182 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2180)
!2183 = !DILocation(line: 942, column: 35, scope: !2158)
!2184 = !DILocation(line: 940, column: 5, scope: !2175)
!2185 = !DILocation(line: 942, column: 50, scope: !2158)
!2186 = !DILocation(line: 0, scope: !2011, inlinedAt: !2187)
!2187 = distinct !DILocation(line: 942, column: 15, scope: !2158)
!2188 = !DILocation(line: 884, column: 21, scope: !2011, inlinedAt: !2187)
!2189 = !DILocation(line: 884, column: 26, scope: !2011, inlinedAt: !2187)
!2190 = !DILocation(line: 886, column: 31, scope: !2027, inlinedAt: !2187)
!2191 = !DILocation(line: 886, column: 18, scope: !2027, inlinedAt: !2187)
!2192 = !DILocation(line: 886, column: 62, scope: !2027, inlinedAt: !2187)
!2193 = !DILocation(line: 886, column: 6, scope: !2011, inlinedAt: !2187)
!2194 = !DILocation(line: 0, scope: !575, inlinedAt: !2195)
!2195 = distinct !DILocation(line: 887, column: 5, scope: !2027, inlinedAt: !2187)
!2196 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2195)
!2197 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2195)
!2198 = !DILocation(line: 889, column: 35, scope: !2011, inlinedAt: !2187)
!2199 = !DILocation(line: 887, column: 5, scope: !2027, inlinedAt: !2187)
!2200 = !DILocation(line: 889, column: 49, scope: !2011, inlinedAt: !2187)
!2201 = !DILocation(line: 889, column: 56, scope: !2011, inlinedAt: !2187)
!2202 = !DILocation(line: 889, column: 65, scope: !2011, inlinedAt: !2187)
!2203 = !DILocation(line: 889, column: 54, scope: !2011, inlinedAt: !2187)
!2204 = !DILocation(line: 889, column: 15, scope: !2011, inlinedAt: !2187)
!2205 = !DILocation(line: 891, column: 16, scope: !2043, inlinedAt: !2187)
!2206 = !DILocation(line: 891, column: 3, scope: !2044, inlinedAt: !2187)
!2207 = !DILocation(line: 892, column: 22, scope: !2043, inlinedAt: !2187)
!2208 = !DILocation(line: 892, column: 21, scope: !2043, inlinedAt: !2187)
!2209 = !DILocation(line: 892, column: 39, scope: !2043, inlinedAt: !2187)
!2210 = !DILocation(line: 892, column: 19, scope: !2043, inlinedAt: !2187)
!2211 = !DILocation(line: 891, column: 25, scope: !2043, inlinedAt: !2187)
!2212 = distinct !{!2212, !2206, !2213}
!2213 = !DILocation(line: 892, column: 54, scope: !2044, inlinedAt: !2187)
!2214 = distinct !{!2214, !686}
!2215 = !DILocation(line: 944, column: 16, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2217, file: !2, line: 944, column: 3)
!2217 = distinct !DILexicalBlock(scope: !2158, file: !2, line: 944, column: 3)
!2218 = !DILocation(line: 944, column: 3, scope: !2217)
!2219 = !DILocation(line: 945, column: 22, scope: !2216)
!2220 = !DILocation(line: 945, column: 21, scope: !2216)
!2221 = !DILocation(line: 945, column: 39, scope: !2216)
!2222 = !DILocation(line: 945, column: 19, scope: !2216)
!2223 = !DILocation(line: 944, column: 25, scope: !2216)
!2224 = distinct !{!2224, !2218, !2225}
!2225 = !DILocation(line: 945, column: 41, scope: !2217)
!2226 = distinct !{!2226, !686}
!2227 = !DILocation(line: 889, column: 12, scope: !2011, inlinedAt: !2187)
!2228 = !DILocation(line: 942, column: 12, scope: !2158)
!2229 = !DILocation(line: 947, column: 3, scope: !2158)
!2230 = distinct !DISubprogram(name: "get_mem4DpelWithPadSeparately", scope: !2, file: !2, line: 950, type: !2159, scopeLine: 951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2231)
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240}
!2232 = !DILocalVariable(name: "array4D", arg: 1, scope: !2230, file: !2, line: 950, type: !518)
!2233 = !DILocalVariable(name: "dim0", arg: 2, scope: !2230, file: !2, line: 950, type: !327)
!2234 = !DILocalVariable(name: "dim1", arg: 3, scope: !2230, file: !2, line: 950, type: !327)
!2235 = !DILocalVariable(name: "dim2", arg: 4, scope: !2230, file: !2, line: 950, type: !327)
!2236 = !DILocalVariable(name: "dim3", arg: 5, scope: !2230, file: !2, line: 950, type: !327)
!2237 = !DILocalVariable(name: "iPadY", arg: 6, scope: !2230, file: !2, line: 950, type: !327)
!2238 = !DILocalVariable(name: "iPadX", arg: 7, scope: !2230, file: !2, line: 950, type: !327)
!2239 = !DILocalVariable(name: "i", scope: !2230, file: !2, line: 952, type: !327)
!2240 = !DILocalVariable(name: "mem_size", scope: !2230, file: !2, line: 952, type: !327)
!2241 = !DILocation(line: 0, scope: !2230)
!2242 = !DILocation(line: 952, column: 22, scope: !2230)
!2243 = !DILocation(line: 952, column: 27, scope: !2230)
!2244 = !DILocation(line: 954, column: 32, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2230, file: !2, line: 954, column: 6)
!2246 = !DILocation(line: 954, column: 18, scope: !2245)
!2247 = !DILocation(line: 954, column: 66, scope: !2245)
!2248 = !DILocation(line: 954, column: 6, scope: !2230)
!2249 = !DILocation(line: 0, scope: !575, inlinedAt: !2250)
!2250 = distinct !DILocation(line: 955, column: 5, scope: !2245)
!2251 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2250)
!2252 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2250)
!2253 = !DILocation(line: 957, column: 45, scope: !2230)
!2254 = !DILocation(line: 955, column: 5, scope: !2245)
!2255 = !DILocation(line: 957, column: 60, scope: !2230)
!2256 = !DILocation(line: 0, scope: !2056, inlinedAt: !2257)
!2257 = distinct !DILocation(line: 957, column: 15, scope: !2230)
!2258 = !DILocation(line: 899, column: 21, scope: !2056, inlinedAt: !2257)
!2259 = !DILocation(line: 899, column: 26, scope: !2056, inlinedAt: !2257)
!2260 = !DILocation(line: 901, column: 31, scope: !2070, inlinedAt: !2257)
!2261 = !DILocation(line: 901, column: 18, scope: !2070, inlinedAt: !2257)
!2262 = !DILocation(line: 901, column: 62, scope: !2070, inlinedAt: !2257)
!2263 = !DILocation(line: 901, column: 6, scope: !2056, inlinedAt: !2257)
!2264 = !DILocation(line: 0, scope: !575, inlinedAt: !2265)
!2265 = distinct !DILocation(line: 902, column: 5, scope: !2070, inlinedAt: !2257)
!2266 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2265)
!2267 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2265)
!2268 = !DILocation(line: 902, column: 5, scope: !2070, inlinedAt: !2257)
!2269 = !DILocation(line: 904, column: 16, scope: !2080, inlinedAt: !2257)
!2270 = !DILocation(line: 904, column: 3, scope: !2081, inlinedAt: !2257)
!2271 = !DILocation(line: 905, column: 38, scope: !2080, inlinedAt: !2257)
!2272 = !DILocation(line: 905, column: 47, scope: !2080, inlinedAt: !2257)
!2273 = !DILocation(line: 905, column: 17, scope: !2080, inlinedAt: !2257)
!2274 = !DILocation(line: 905, column: 14, scope: !2080, inlinedAt: !2257)
!2275 = !DILocation(line: 904, column: 25, scope: !2080, inlinedAt: !2257)
!2276 = distinct !{!2276, !2270, !2277}
!2277 = !DILocation(line: 905, column: 75, scope: !2081, inlinedAt: !2257)
!2278 = !DILocation(line: 959, column: 16, scope: !2279)
!2279 = distinct !DILexicalBlock(scope: !2280, file: !2, line: 959, column: 3)
!2280 = distinct !DILexicalBlock(scope: !2230, file: !2, line: 959, column: 3)
!2281 = !DILocation(line: 959, column: 3, scope: !2280)
!2282 = !DILocation(line: 960, column: 22, scope: !2279)
!2283 = !DILocation(line: 960, column: 21, scope: !2279)
!2284 = !DILocation(line: 960, column: 39, scope: !2279)
!2285 = !DILocation(line: 960, column: 19, scope: !2279)
!2286 = !DILocation(line: 959, column: 25, scope: !2279)
!2287 = distinct !{!2287, !2281, !2288}
!2288 = !DILocation(line: 960, column: 41, scope: !2280)
!2289 = distinct !{!2289, !686}
!2290 = !DILocation(line: 957, column: 12, scope: !2230)
!2291 = !DILocation(line: 962, column: 3, scope: !2230)
!2292 = distinct !DISubprogram(name: "get_mem5Dpel", scope: !2, file: !2, line: 974, type: !2293, scopeLine: 975, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2296)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!327, !2295, !327, !327, !327, !327, !327}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304}
!2297 = !DILocalVariable(name: "array5D", arg: 1, scope: !2292, file: !2, line: 974, type: !2295)
!2298 = !DILocalVariable(name: "dim0", arg: 2, scope: !2292, file: !2, line: 974, type: !327)
!2299 = !DILocalVariable(name: "dim1", arg: 3, scope: !2292, file: !2, line: 974, type: !327)
!2300 = !DILocalVariable(name: "dim2", arg: 4, scope: !2292, file: !2, line: 974, type: !327)
!2301 = !DILocalVariable(name: "dim3", arg: 5, scope: !2292, file: !2, line: 974, type: !327)
!2302 = !DILocalVariable(name: "dim4", arg: 6, scope: !2292, file: !2, line: 974, type: !327)
!2303 = !DILocalVariable(name: "i", scope: !2292, file: !2, line: 976, type: !327)
!2304 = !DILocalVariable(name: "mem_size", scope: !2292, file: !2, line: 976, type: !327)
!2305 = !DILocation(line: 0, scope: !2292)
!2306 = !DILocation(line: 976, column: 22, scope: !2292)
!2307 = !DILocation(line: 976, column: 27, scope: !2292)
!2308 = !DILocation(line: 978, column: 33, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2292, file: !2, line: 978, column: 6)
!2310 = !DILocation(line: 978, column: 18, scope: !2309)
!2311 = !DILocation(line: 978, column: 68, scope: !2309)
!2312 = !DILocation(line: 978, column: 6, scope: !2292)
!2313 = !DILocation(line: 0, scope: !575, inlinedAt: !2314)
!2314 = distinct !DILocation(line: 979, column: 5, scope: !2309)
!2315 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2314)
!2316 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2314)
!2317 = !DILocation(line: 981, column: 28, scope: !2292)
!2318 = !DILocation(line: 979, column: 5, scope: !2309)
!2319 = !DILocation(line: 981, column: 43, scope: !2292)
!2320 = !DILocation(line: 981, column: 15, scope: !2292)
!2321 = !DILocation(line: 983, column: 16, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2323, file: !2, line: 983, column: 3)
!2323 = distinct !DILexicalBlock(scope: !2292, file: !2, line: 983, column: 3)
!2324 = !DILocation(line: 983, column: 3, scope: !2323)
!2325 = !DILocation(line: 984, column: 22, scope: !2322)
!2326 = !DILocation(line: 984, column: 21, scope: !2322)
!2327 = !DILocation(line: 984, column: 39, scope: !2322)
!2328 = !DILocation(line: 984, column: 19, scope: !2322)
!2329 = !DILocation(line: 983, column: 25, scope: !2322)
!2330 = distinct !{!2330, !2324, !2331}
!2331 = !DILocation(line: 984, column: 41, scope: !2323)
!2332 = distinct !{!2332, !686}
!2333 = !DILocation(line: 981, column: 12, scope: !2292)
!2334 = !DILocation(line: 986, column: 3, scope: !2292)
!2335 = distinct !DISubprogram(name: "get_mem5DpelWithPad", scope: !2, file: !2, line: 989, type: !2336, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2338)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!327, !2295, !327, !327, !327, !327, !327, !327, !327}
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348}
!2339 = !DILocalVariable(name: "array5D", arg: 1, scope: !2335, file: !2, line: 989, type: !2295)
!2340 = !DILocalVariable(name: "dim0", arg: 2, scope: !2335, file: !2, line: 989, type: !327)
!2341 = !DILocalVariable(name: "dim1", arg: 3, scope: !2335, file: !2, line: 989, type: !327)
!2342 = !DILocalVariable(name: "dim2", arg: 4, scope: !2335, file: !2, line: 989, type: !327)
!2343 = !DILocalVariable(name: "dim3", arg: 5, scope: !2335, file: !2, line: 989, type: !327)
!2344 = !DILocalVariable(name: "dim4", arg: 6, scope: !2335, file: !2, line: 989, type: !327)
!2345 = !DILocalVariable(name: "iPadY", arg: 7, scope: !2335, file: !2, line: 989, type: !327)
!2346 = !DILocalVariable(name: "iPadX", arg: 8, scope: !2335, file: !2, line: 989, type: !327)
!2347 = !DILocalVariable(name: "i", scope: !2335, file: !2, line: 991, type: !327)
!2348 = !DILocalVariable(name: "mem_size", scope: !2335, file: !2, line: 991, type: !327)
!2349 = !DILocation(line: 0, scope: !2335)
!2350 = !DILocation(line: 991, column: 22, scope: !2335)
!2351 = !DILocation(line: 991, column: 27, scope: !2335)
!2352 = !DILocation(line: 993, column: 33, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2335, file: !2, line: 993, column: 6)
!2354 = !DILocation(line: 993, column: 18, scope: !2353)
!2355 = !DILocation(line: 993, column: 68, scope: !2353)
!2356 = !DILocation(line: 993, column: 6, scope: !2335)
!2357 = !DILocation(line: 0, scope: !575, inlinedAt: !2358)
!2358 = distinct !DILocation(line: 994, column: 5, scope: !2353)
!2359 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2358)
!2360 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2358)
!2361 = !DILocation(line: 996, column: 35, scope: !2335)
!2362 = !DILocation(line: 994, column: 5, scope: !2353)
!2363 = !DILocation(line: 996, column: 50, scope: !2335)
!2364 = !DILocation(line: 996, column: 15, scope: !2335)
!2365 = !DILocation(line: 998, column: 16, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2367, file: !2, line: 998, column: 3)
!2367 = distinct !DILexicalBlock(scope: !2335, file: !2, line: 998, column: 3)
!2368 = !DILocation(line: 998, column: 3, scope: !2367)
!2369 = !DILocation(line: 999, column: 22, scope: !2366)
!2370 = !DILocation(line: 999, column: 21, scope: !2366)
!2371 = !DILocation(line: 999, column: 39, scope: !2366)
!2372 = !DILocation(line: 999, column: 19, scope: !2366)
!2373 = !DILocation(line: 998, column: 25, scope: !2366)
!2374 = distinct !{!2374, !2368, !2375}
!2375 = !DILocation(line: 999, column: 41, scope: !2367)
!2376 = distinct !{!2376, !686}
!2377 = !DILocation(line: 996, column: 12, scope: !2335)
!2378 = !DILocation(line: 1001, column: 3, scope: !2335)
!2379 = distinct !DISubprogram(name: "get_mem5DpelWithPadSeparately", scope: !2, file: !2, line: 1004, type: !2336, scopeLine: 1005, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2380)
!2380 = !{!2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2381 = !DILocalVariable(name: "array5D", arg: 1, scope: !2379, file: !2, line: 1004, type: !2295)
!2382 = !DILocalVariable(name: "dim0", arg: 2, scope: !2379, file: !2, line: 1004, type: !327)
!2383 = !DILocalVariable(name: "dim1", arg: 3, scope: !2379, file: !2, line: 1004, type: !327)
!2384 = !DILocalVariable(name: "dim2", arg: 4, scope: !2379, file: !2, line: 1004, type: !327)
!2385 = !DILocalVariable(name: "dim3", arg: 5, scope: !2379, file: !2, line: 1004, type: !327)
!2386 = !DILocalVariable(name: "dim4", arg: 6, scope: !2379, file: !2, line: 1004, type: !327)
!2387 = !DILocalVariable(name: "iPadY", arg: 7, scope: !2379, file: !2, line: 1004, type: !327)
!2388 = !DILocalVariable(name: "iPadX", arg: 8, scope: !2379, file: !2, line: 1004, type: !327)
!2389 = !DILocalVariable(name: "i", scope: !2379, file: !2, line: 1006, type: !327)
!2390 = !DILocalVariable(name: "mem_size", scope: !2379, file: !2, line: 1006, type: !327)
!2391 = !DILocation(line: 0, scope: !2379)
!2392 = !DILocation(line: 1006, column: 22, scope: !2379)
!2393 = !DILocation(line: 1006, column: 27, scope: !2379)
!2394 = !DILocation(line: 1008, column: 33, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2379, file: !2, line: 1008, column: 6)
!2396 = !DILocation(line: 1008, column: 18, scope: !2395)
!2397 = !DILocation(line: 1008, column: 68, scope: !2395)
!2398 = !DILocation(line: 1008, column: 6, scope: !2379)
!2399 = !DILocation(line: 0, scope: !575, inlinedAt: !2400)
!2400 = distinct !DILocation(line: 1009, column: 5, scope: !2395)
!2401 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2400)
!2402 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2400)
!2403 = !DILocation(line: 1011, column: 45, scope: !2379)
!2404 = !DILocation(line: 1009, column: 5, scope: !2395)
!2405 = !DILocation(line: 1011, column: 60, scope: !2379)
!2406 = !DILocation(line: 1011, column: 15, scope: !2379)
!2407 = !DILocation(line: 1013, column: 16, scope: !2408)
!2408 = distinct !DILexicalBlock(scope: !2409, file: !2, line: 1013, column: 3)
!2409 = distinct !DILexicalBlock(scope: !2379, file: !2, line: 1013, column: 3)
!2410 = !DILocation(line: 1013, column: 3, scope: !2409)
!2411 = !DILocation(line: 1014, column: 22, scope: !2408)
!2412 = !DILocation(line: 1014, column: 21, scope: !2408)
!2413 = !DILocation(line: 1014, column: 39, scope: !2408)
!2414 = !DILocation(line: 1014, column: 19, scope: !2408)
!2415 = !DILocation(line: 1013, column: 25, scope: !2408)
!2416 = distinct !{!2416, !2410, !2417}
!2417 = !DILocation(line: 1014, column: 41, scope: !2409)
!2418 = distinct !{!2418, !686}
!2419 = !DILocation(line: 1011, column: 12, scope: !2379)
!2420 = !DILocation(line: 1016, column: 3, scope: !2379)
!2421 = distinct !DISubprogram(name: "free_mem1Dpel", scope: !2, file: !2, line: 1026, type: !2422, scopeLine: 1027, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2424)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !313}
!2424 = !{!2425}
!2425 = !DILocalVariable(name: "array1D", arg: 1, scope: !2421, file: !2, line: 1026, type: !313)
!2426 = !DILocation(line: 0, scope: !2421)
!2427 = !DILocation(line: 1028, column: 7, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2421, file: !2, line: 1028, column: 7)
!2429 = !DILocation(line: 1028, column: 7, scope: !2421)
!2430 = !DILocation(line: 1030, column: 5, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2428, file: !2, line: 1029, column: 3)
!2432 = !DILocation(line: 1031, column: 3, scope: !2431)
!2433 = !DILocation(line: 1034, column: 5, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2428, file: !2, line: 1033, column: 3)
!2435 = !DILocation(line: 1036, column: 1, scope: !2421)
!2436 = distinct !DISubprogram(name: "free_mem2Dpel", scope: !2, file: !2, line: 1045, type: !2437, scopeLine: 1046, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2439)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{null, !312}
!2439 = !{!2440}
!2440 = !DILocalVariable(name: "array2D", arg: 1, scope: !2436, file: !2, line: 1045, type: !312)
!2441 = !DILocation(line: 0, scope: !2436)
!2442 = !DILocation(line: 1047, column: 7, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2436, file: !2, line: 1047, column: 7)
!2444 = !DILocation(line: 1047, column: 7, scope: !2436)
!2445 = !DILocation(line: 1049, column: 9, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !2, line: 1049, column: 9)
!2447 = distinct !DILexicalBlock(scope: !2443, file: !2, line: 1048, column: 3)
!2448 = !DILocation(line: 1049, column: 9, scope: !2447)
!2449 = !DILocation(line: 1050, column: 7, scope: !2446)
!2450 = !DILocation(line: 1052, column: 7, scope: !2446)
!2451 = !DILocation(line: 1054, column: 5, scope: !2447)
!2452 = !DILocation(line: 1055, column: 3, scope: !2447)
!2453 = !DILocation(line: 1058, column: 5, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2443, file: !2, line: 1057, column: 3)
!2455 = !DILocation(line: 1060, column: 1, scope: !2436)
!2456 = distinct !DISubprogram(name: "free_mem2DpelWithPad", scope: !2, file: !2, line: 1062, type: !2457, scopeLine: 1063, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{null, !312, !327, !327}
!2459 = !{!2460, !2461, !2462}
!2460 = !DILocalVariable(name: "array2D", arg: 1, scope: !2456, file: !2, line: 1062, type: !312)
!2461 = !DILocalVariable(name: "iPadY", arg: 2, scope: !2456, file: !2, line: 1062, type: !327)
!2462 = !DILocalVariable(name: "iPadX", arg: 3, scope: !2456, file: !2, line: 1062, type: !327)
!2463 = !DILocation(line: 0, scope: !2456)
!2464 = !DILocation(line: 1064, column: 7, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2456, file: !2, line: 1064, column: 7)
!2466 = !DILocation(line: 1064, column: 7, scope: !2456)
!2467 = !DILocation(line: 1066, column: 9, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !2, line: 1066, column: 9)
!2469 = distinct !DILexicalBlock(scope: !2465, file: !2, line: 1065, column: 3)
!2470 = !DILocation(line: 1066, column: 9, scope: !2469)
!2471 = !DILocation(line: 1067, column: 21, scope: !2468)
!2472 = !DILocation(line: 1067, column: 13, scope: !2468)
!2473 = !DILocation(line: 1067, column: 28, scope: !2468)
!2474 = !DILocation(line: 1067, column: 7, scope: !2468)
!2475 = !DILocation(line: 1069, column: 7, scope: !2468)
!2476 = !DILocation(line: 1071, column: 20, scope: !2469)
!2477 = !DILocation(line: 1071, column: 12, scope: !2469)
!2478 = !DILocation(line: 1071, column: 5, scope: !2469)
!2479 = !DILocation(line: 1072, column: 3, scope: !2469)
!2480 = !DILocation(line: 1075, column: 5, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2465, file: !2, line: 1074, column: 3)
!2482 = !DILocation(line: 1077, column: 1, scope: !2456)
!2483 = distinct !DISubprogram(name: "free_mem3Dpel", scope: !2, file: !2, line: 1087, type: !2484, scopeLine: 1088, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2486)
!2484 = !DISubroutineType(types: !2485)
!2485 = !{null, !412}
!2486 = !{!2487}
!2487 = !DILocalVariable(name: "array3D", arg: 1, scope: !2483, file: !2, line: 1087, type: !412)
!2488 = !DILocation(line: 0, scope: !2483)
!2489 = !DILocation(line: 1089, column: 7, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2483, file: !2, line: 1089, column: 7)
!2491 = !DILocation(line: 1089, column: 7, scope: !2483)
!2492 = !DILocation(line: 1091, column: 19, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2490, file: !2, line: 1090, column: 3)
!2494 = !DILocation(line: 0, scope: !2436, inlinedAt: !2495)
!2495 = distinct !DILocation(line: 1091, column: 5, scope: !2493)
!2496 = !DILocation(line: 1047, column: 7, scope: !2443, inlinedAt: !2495)
!2497 = !DILocation(line: 1047, column: 7, scope: !2436, inlinedAt: !2495)
!2498 = !DILocation(line: 1049, column: 9, scope: !2446, inlinedAt: !2495)
!2499 = !DILocation(line: 1049, column: 9, scope: !2447, inlinedAt: !2495)
!2500 = !DILocation(line: 1050, column: 7, scope: !2446, inlinedAt: !2495)
!2501 = !DILocation(line: 1052, column: 7, scope: !2446, inlinedAt: !2495)
!2502 = !DILocation(line: 1054, column: 5, scope: !2447, inlinedAt: !2495)
!2503 = !DILocation(line: 1055, column: 3, scope: !2447, inlinedAt: !2495)
!2504 = !DILocation(line: 1058, column: 5, scope: !2454, inlinedAt: !2495)
!2505 = !DILocation(line: 1092, column: 5, scope: !2493)
!2506 = !DILocation(line: 1093, column: 3, scope: !2493)
!2507 = !DILocation(line: 1096, column: 5, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2490, file: !2, line: 1095, column: 3)
!2509 = !DILocation(line: 1098, column: 1, scope: !2483)
!2510 = distinct !DISubprogram(name: "free_mem3DpelWithPad", scope: !2, file: !2, line: 1100, type: !2511, scopeLine: 1101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2513)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !412, !327, !327}
!2513 = !{!2514, !2515, !2516}
!2514 = !DILocalVariable(name: "array3D", arg: 1, scope: !2510, file: !2, line: 1100, type: !412)
!2515 = !DILocalVariable(name: "iPadY", arg: 2, scope: !2510, file: !2, line: 1100, type: !327)
!2516 = !DILocalVariable(name: "iPadX", arg: 3, scope: !2510, file: !2, line: 1100, type: !327)
!2517 = !DILocation(line: 0, scope: !2510)
!2518 = !DILocation(line: 1102, column: 7, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2510, file: !2, line: 1102, column: 7)
!2520 = !DILocation(line: 1102, column: 7, scope: !2510)
!2521 = !DILocation(line: 1104, column: 26, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2519, file: !2, line: 1103, column: 3)
!2523 = !DILocation(line: 0, scope: !2456, inlinedAt: !2524)
!2524 = distinct !DILocation(line: 1104, column: 5, scope: !2522)
!2525 = !DILocation(line: 1064, column: 7, scope: !2465, inlinedAt: !2524)
!2526 = !DILocation(line: 1064, column: 7, scope: !2456, inlinedAt: !2524)
!2527 = !DILocation(line: 1066, column: 9, scope: !2468, inlinedAt: !2524)
!2528 = !DILocation(line: 1066, column: 9, scope: !2469, inlinedAt: !2524)
!2529 = !DILocation(line: 1067, column: 21, scope: !2468, inlinedAt: !2524)
!2530 = !DILocation(line: 1067, column: 13, scope: !2468, inlinedAt: !2524)
!2531 = !DILocation(line: 1067, column: 28, scope: !2468, inlinedAt: !2524)
!2532 = !DILocation(line: 1067, column: 7, scope: !2468, inlinedAt: !2524)
!2533 = !DILocation(line: 1069, column: 7, scope: !2468, inlinedAt: !2524)
!2534 = !DILocation(line: 1071, column: 20, scope: !2469, inlinedAt: !2524)
!2535 = !DILocation(line: 1071, column: 12, scope: !2469, inlinedAt: !2524)
!2536 = !DILocation(line: 1071, column: 5, scope: !2469, inlinedAt: !2524)
!2537 = !DILocation(line: 1072, column: 3, scope: !2469, inlinedAt: !2524)
!2538 = !DILocation(line: 1075, column: 5, scope: !2481, inlinedAt: !2524)
!2539 = !DILocation(line: 1105, column: 5, scope: !2522)
!2540 = !DILocation(line: 1106, column: 3, scope: !2522)
!2541 = !DILocation(line: 1109, column: 5, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2519, file: !2, line: 1108, column: 3)
!2543 = !DILocation(line: 1112, column: 1, scope: !2510)
!2544 = distinct !DISubprogram(name: "free_mem3DpelWithPadSeparately", scope: !2, file: !2, line: 1114, type: !2545, scopeLine: 1115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2547)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{null, !412, !327, !327, !327}
!2547 = !{!2548, !2549, !2550, !2551, !2552}
!2548 = !DILocalVariable(name: "array3D", arg: 1, scope: !2544, file: !2, line: 1114, type: !412)
!2549 = !DILocalVariable(name: "iDim12", arg: 2, scope: !2544, file: !2, line: 1114, type: !327)
!2550 = !DILocalVariable(name: "iPadY", arg: 3, scope: !2544, file: !2, line: 1114, type: !327)
!2551 = !DILocalVariable(name: "iPadX", arg: 4, scope: !2544, file: !2, line: 1114, type: !327)
!2552 = !DILocalVariable(name: "i", scope: !2553, file: !2, line: 1118, type: !327)
!2553 = distinct !DILexicalBlock(scope: !2554, file: !2, line: 1117, column: 3)
!2554 = distinct !DILexicalBlock(scope: !2544, file: !2, line: 1116, column: 7)
!2555 = !DILocation(line: 0, scope: !2544)
!2556 = !DILocation(line: 1116, column: 7, scope: !2554)
!2557 = !DILocation(line: 1116, column: 7, scope: !2544)
!2558 = !DILocation(line: 0, scope: !2553)
!2559 = !DILocation(line: 1119, column: 15, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !2, line: 1119, column: 5)
!2561 = distinct !DILexicalBlock(scope: !2553, file: !2, line: 1119, column: 5)
!2562 = !DILocation(line: 1119, column: 5, scope: !2561)
!2563 = !DILocation(line: 1120, column: 10, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2560, file: !2, line: 1120, column: 10)
!2565 = !DILocation(line: 1120, column: 10, scope: !2560)
!2566 = !DILocation(line: 0, scope: !2456, inlinedAt: !2567)
!2567 = distinct !DILocation(line: 1122, column: 9, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2564, file: !2, line: 1121, column: 7)
!2569 = !DILocation(line: 1066, column: 9, scope: !2468, inlinedAt: !2567)
!2570 = !DILocation(line: 1066, column: 9, scope: !2469, inlinedAt: !2567)
!2571 = !DILocation(line: 1067, column: 13, scope: !2468, inlinedAt: !2567)
!2572 = !DILocation(line: 1067, column: 28, scope: !2468, inlinedAt: !2567)
!2573 = !DILocation(line: 1067, column: 7, scope: !2468, inlinedAt: !2567)
!2574 = !DILocation(line: 1069, column: 7, scope: !2468, inlinedAt: !2567)
!2575 = !DILocation(line: 1071, column: 12, scope: !2469, inlinedAt: !2567)
!2576 = !DILocation(line: 1071, column: 5, scope: !2469, inlinedAt: !2567)
!2577 = !DILocation(line: 1123, column: 20, scope: !2568)
!2578 = !DILocation(line: 1124, column: 7, scope: !2568)
!2579 = !DILocation(line: 1119, column: 25, scope: !2560)
!2580 = distinct !{!2580, !2562, !2581}
!2581 = !DILocation(line: 1124, column: 7, scope: !2561)
!2582 = !DILocation(line: 1125, column: 5, scope: !2553)
!2583 = !DILocation(line: 1126, column: 3, scope: !2553)
!2584 = !DILocation(line: 1129, column: 5, scope: !2585)
!2585 = distinct !DILexicalBlock(scope: !2554, file: !2, line: 1128, column: 3)
!2586 = !DILocation(line: 1132, column: 1, scope: !2544)
!2587 = distinct !DISubprogram(name: "free_mem4Dpel", scope: !2, file: !2, line: 1141, type: !2588, scopeLine: 1142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2590)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{null, !517}
!2590 = !{!2591}
!2591 = !DILocalVariable(name: "array4D", arg: 1, scope: !2587, file: !2, line: 1141, type: !517)
!2592 = !DILocation(line: 0, scope: !2587)
!2593 = !DILocation(line: 1143, column: 7, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2587, file: !2, line: 1143, column: 7)
!2595 = !DILocation(line: 1143, column: 7, scope: !2587)
!2596 = !DILocation(line: 1145, column: 19, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2594, file: !2, line: 1144, column: 3)
!2598 = !DILocation(line: 0, scope: !2483, inlinedAt: !2599)
!2599 = distinct !DILocation(line: 1145, column: 5, scope: !2597)
!2600 = !DILocation(line: 1089, column: 7, scope: !2490, inlinedAt: !2599)
!2601 = !DILocation(line: 1089, column: 7, scope: !2483, inlinedAt: !2599)
!2602 = !DILocation(line: 1091, column: 19, scope: !2493, inlinedAt: !2599)
!2603 = !DILocation(line: 0, scope: !2436, inlinedAt: !2604)
!2604 = distinct !DILocation(line: 1091, column: 5, scope: !2493, inlinedAt: !2599)
!2605 = !DILocation(line: 1047, column: 7, scope: !2443, inlinedAt: !2604)
!2606 = !DILocation(line: 1047, column: 7, scope: !2436, inlinedAt: !2604)
!2607 = !DILocation(line: 1049, column: 9, scope: !2446, inlinedAt: !2604)
!2608 = !DILocation(line: 1049, column: 9, scope: !2447, inlinedAt: !2604)
!2609 = !DILocation(line: 1050, column: 7, scope: !2446, inlinedAt: !2604)
!2610 = !DILocation(line: 1052, column: 7, scope: !2446, inlinedAt: !2604)
!2611 = !DILocation(line: 1054, column: 5, scope: !2447, inlinedAt: !2604)
!2612 = !DILocation(line: 1055, column: 3, scope: !2447, inlinedAt: !2604)
!2613 = !DILocation(line: 1058, column: 5, scope: !2454, inlinedAt: !2604)
!2614 = !DILocation(line: 1092, column: 5, scope: !2493, inlinedAt: !2599)
!2615 = !DILocation(line: 1093, column: 3, scope: !2493, inlinedAt: !2599)
!2616 = !DILocation(line: 1096, column: 5, scope: !2508, inlinedAt: !2599)
!2617 = !DILocation(line: 1146, column: 5, scope: !2597)
!2618 = !DILocation(line: 1147, column: 3, scope: !2597)
!2619 = !DILocation(line: 1150, column: 5, scope: !2620)
!2620 = distinct !DILexicalBlock(scope: !2594, file: !2, line: 1149, column: 3)
!2621 = !DILocation(line: 1152, column: 1, scope: !2587)
!2622 = distinct !DISubprogram(name: "free_mem4DpelWithPad", scope: !2, file: !2, line: 1154, type: !2623, scopeLine: 1155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2625)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{null, !517, !327, !327}
!2625 = !{!2626, !2627, !2628}
!2626 = !DILocalVariable(name: "array4D", arg: 1, scope: !2622, file: !2, line: 1154, type: !517)
!2627 = !DILocalVariable(name: "iPadY", arg: 2, scope: !2622, file: !2, line: 1154, type: !327)
!2628 = !DILocalVariable(name: "iPadX", arg: 3, scope: !2622, file: !2, line: 1154, type: !327)
!2629 = !DILocation(line: 0, scope: !2622)
!2630 = !DILocation(line: 1156, column: 7, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2622, file: !2, line: 1156, column: 7)
!2632 = !DILocation(line: 1156, column: 7, scope: !2622)
!2633 = !DILocation(line: 1158, column: 26, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2631, file: !2, line: 1157, column: 3)
!2635 = !DILocation(line: 1158, column: 5, scope: !2634)
!2636 = !DILocation(line: 1159, column: 5, scope: !2634)
!2637 = !DILocation(line: 1160, column: 3, scope: !2634)
!2638 = !DILocation(line: 1163, column: 5, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !2, line: 1162, column: 3)
!2640 = !DILocation(line: 1165, column: 1, scope: !2622)
!2641 = distinct !DISubprogram(name: "free_mem4DpelWithPadSeparately", scope: !2, file: !2, line: 1167, type: !2642, scopeLine: 1168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2644)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !517, !327, !327, !327}
!2644 = !{!2645, !2646, !2647, !2648}
!2645 = !DILocalVariable(name: "array4D", arg: 1, scope: !2641, file: !2, line: 1167, type: !517)
!2646 = !DILocalVariable(name: "iFrames", arg: 2, scope: !2641, file: !2, line: 1167, type: !327)
!2647 = !DILocalVariable(name: "iPadY", arg: 3, scope: !2641, file: !2, line: 1167, type: !327)
!2648 = !DILocalVariable(name: "iPadX", arg: 4, scope: !2641, file: !2, line: 1167, type: !327)
!2649 = !DILocation(line: 0, scope: !2641)
!2650 = !DILocation(line: 1169, column: 7, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2641, file: !2, line: 1169, column: 7)
!2652 = !DILocation(line: 1169, column: 7, scope: !2641)
!2653 = !DILocation(line: 1171, column: 36, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2651, file: !2, line: 1170, column: 3)
!2655 = !DILocation(line: 0, scope: !2544, inlinedAt: !2656)
!2656 = distinct !DILocation(line: 1171, column: 5, scope: !2654)
!2657 = !DILocation(line: 1116, column: 7, scope: !2554, inlinedAt: !2656)
!2658 = !DILocation(line: 1116, column: 7, scope: !2544, inlinedAt: !2656)
!2659 = !DILocation(line: 0, scope: !2553, inlinedAt: !2656)
!2660 = !DILocation(line: 1119, column: 15, scope: !2560, inlinedAt: !2656)
!2661 = !DILocation(line: 1119, column: 5, scope: !2561, inlinedAt: !2656)
!2662 = !DILocation(line: 1120, column: 10, scope: !2564, inlinedAt: !2656)
!2663 = !DILocation(line: 1120, column: 10, scope: !2560, inlinedAt: !2656)
!2664 = !DILocation(line: 0, scope: !2456, inlinedAt: !2665)
!2665 = distinct !DILocation(line: 1122, column: 9, scope: !2568, inlinedAt: !2656)
!2666 = !DILocation(line: 1066, column: 9, scope: !2468, inlinedAt: !2665)
!2667 = !DILocation(line: 1066, column: 9, scope: !2469, inlinedAt: !2665)
!2668 = !DILocation(line: 1067, column: 13, scope: !2468, inlinedAt: !2665)
!2669 = !DILocation(line: 1067, column: 28, scope: !2468, inlinedAt: !2665)
!2670 = !DILocation(line: 1067, column: 7, scope: !2468, inlinedAt: !2665)
!2671 = !DILocation(line: 1069, column: 7, scope: !2468, inlinedAt: !2665)
!2672 = !DILocation(line: 1071, column: 12, scope: !2469, inlinedAt: !2665)
!2673 = !DILocation(line: 1071, column: 5, scope: !2469, inlinedAt: !2665)
!2674 = !DILocation(line: 1123, column: 20, scope: !2568, inlinedAt: !2656)
!2675 = !DILocation(line: 1124, column: 7, scope: !2568, inlinedAt: !2656)
!2676 = !DILocation(line: 1119, column: 25, scope: !2560, inlinedAt: !2656)
!2677 = distinct !{!2677, !2661, !2678}
!2678 = !DILocation(line: 1124, column: 7, scope: !2561, inlinedAt: !2656)
!2679 = !DILocation(line: 1125, column: 5, scope: !2553, inlinedAt: !2656)
!2680 = !DILocation(line: 1126, column: 3, scope: !2553, inlinedAt: !2656)
!2681 = !DILocation(line: 1129, column: 5, scope: !2585, inlinedAt: !2656)
!2682 = !DILocation(line: 1172, column: 5, scope: !2654)
!2683 = !DILocation(line: 1173, column: 3, scope: !2654)
!2684 = !DILocation(line: 1176, column: 5, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2651, file: !2, line: 1175, column: 3)
!2686 = !DILocation(line: 1178, column: 1, scope: !2641)
!2687 = distinct !DISubprogram(name: "free_mem5Dpel", scope: !2, file: !2, line: 1187, type: !2688, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2690)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{null, !518}
!2690 = !{!2691}
!2691 = !DILocalVariable(name: "array5D", arg: 1, scope: !2687, file: !2, line: 1187, type: !518)
!2692 = !DILocation(line: 0, scope: !2687)
!2693 = !DILocation(line: 1189, column: 7, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2687, file: !2, line: 1189, column: 7)
!2695 = !DILocation(line: 1189, column: 7, scope: !2687)
!2696 = !DILocation(line: 1191, column: 19, scope: !2697)
!2697 = distinct !DILexicalBlock(scope: !2694, file: !2, line: 1190, column: 3)
!2698 = !DILocation(line: 1191, column: 5, scope: !2697)
!2699 = !DILocation(line: 1192, column: 5, scope: !2697)
!2700 = !DILocation(line: 1193, column: 3, scope: !2697)
!2701 = !DILocation(line: 1196, column: 5, scope: !2702)
!2702 = distinct !DILexicalBlock(scope: !2694, file: !2, line: 1195, column: 3)
!2703 = !DILocation(line: 1198, column: 1, scope: !2687)
!2704 = distinct !DISubprogram(name: "free_mem5DpelWithPad", scope: !2, file: !2, line: 1200, type: !2705, scopeLine: 1201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2707)
!2705 = !DISubroutineType(types: !2706)
!2706 = !{null, !518, !327, !327}
!2707 = !{!2708, !2709, !2710}
!2708 = !DILocalVariable(name: "array5D", arg: 1, scope: !2704, file: !2, line: 1200, type: !518)
!2709 = !DILocalVariable(name: "iPadY", arg: 2, scope: !2704, file: !2, line: 1200, type: !327)
!2710 = !DILocalVariable(name: "iPadX", arg: 3, scope: !2704, file: !2, line: 1200, type: !327)
!2711 = !DILocation(line: 0, scope: !2704)
!2712 = !DILocation(line: 1202, column: 7, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2704, file: !2, line: 1202, column: 7)
!2714 = !DILocation(line: 1202, column: 7, scope: !2704)
!2715 = !DILocation(line: 1204, column: 26, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2713, file: !2, line: 1203, column: 3)
!2717 = !DILocation(line: 0, scope: !2622, inlinedAt: !2718)
!2718 = distinct !DILocation(line: 1204, column: 5, scope: !2716)
!2719 = !DILocation(line: 1156, column: 7, scope: !2631, inlinedAt: !2718)
!2720 = !DILocation(line: 1156, column: 7, scope: !2622, inlinedAt: !2718)
!2721 = !DILocation(line: 1158, column: 26, scope: !2634, inlinedAt: !2718)
!2722 = !DILocation(line: 1158, column: 5, scope: !2634, inlinedAt: !2718)
!2723 = !DILocation(line: 1159, column: 5, scope: !2634, inlinedAt: !2718)
!2724 = !DILocation(line: 1160, column: 3, scope: !2634, inlinedAt: !2718)
!2725 = !DILocation(line: 1163, column: 5, scope: !2639, inlinedAt: !2718)
!2726 = !DILocation(line: 1205, column: 5, scope: !2716)
!2727 = !DILocation(line: 1206, column: 3, scope: !2716)
!2728 = !DILocation(line: 1209, column: 5, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2713, file: !2, line: 1208, column: 3)
!2730 = !DILocation(line: 1211, column: 1, scope: !2704)
!2731 = distinct !DISubprogram(name: "free_mem5DpelWithPadSeparately", scope: !2, file: !2, line: 1213, type: !2732, scopeLine: 1214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2734)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{null, !518, !327, !327, !327}
!2734 = !{!2735, !2736, !2737, !2738}
!2735 = !DILocalVariable(name: "array5D", arg: 1, scope: !2731, file: !2, line: 1213, type: !518)
!2736 = !DILocalVariable(name: "iFrames", arg: 2, scope: !2731, file: !2, line: 1213, type: !327)
!2737 = !DILocalVariable(name: "iPadY", arg: 3, scope: !2731, file: !2, line: 1213, type: !327)
!2738 = !DILocalVariable(name: "iPadX", arg: 4, scope: !2731, file: !2, line: 1213, type: !327)
!2739 = !DILocation(line: 0, scope: !2731)
!2740 = !DILocation(line: 1215, column: 7, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2731, file: !2, line: 1215, column: 7)
!2742 = !DILocation(line: 1215, column: 7, scope: !2731)
!2743 = !DILocation(line: 1217, column: 36, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2741, file: !2, line: 1216, column: 3)
!2745 = !DILocation(line: 1217, column: 5, scope: !2744)
!2746 = !DILocation(line: 1218, column: 5, scope: !2744)
!2747 = !DILocation(line: 1219, column: 3, scope: !2744)
!2748 = !DILocation(line: 1222, column: 5, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2741, file: !2, line: 1221, column: 3)
!2750 = !DILocation(line: 1224, column: 1, scope: !2731)
!2751 = distinct !DISubprogram(name: "new_mem2D", scope: !2, file: !2, line: 1235, type: !2752, scopeLine: 1236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2754)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!519, !327, !327}
!2754 = !{!2755, !2756, !2757, !2758}
!2755 = !DILocalVariable(name: "dim0", arg: 1, scope: !2751, file: !2, line: 1235, type: !327)
!2756 = !DILocalVariable(name: "dim1", arg: 2, scope: !2751, file: !2, line: 1235, type: !327)
!2757 = !DILocalVariable(name: "i", scope: !2751, file: !2, line: 1237, type: !327)
!2758 = !DILocalVariable(name: "array2D", scope: !2751, file: !2, line: 1238, type: !519)
!2759 = !DILocation(line: 0, scope: !2751)
!2760 = !DILocation(line: 1240, column: 35, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2751, file: !2, line: 1240, column: 6)
!2762 = !DILocation(line: 1240, column: 40, scope: !2761)
!2763 = !DILocation(line: 1240, column: 28, scope: !2761)
!2764 = !DILocation(line: 1240, column: 63, scope: !2761)
!2765 = !DILocation(line: 1240, column: 6, scope: !2751)
!2766 = !DILocation(line: 0, scope: !575, inlinedAt: !2767)
!2767 = distinct !DILocation(line: 1241, column: 5, scope: !2761)
!2768 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2767)
!2769 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2767)
!2770 = !DILocation(line: 1241, column: 5, scope: !2761)
!2771 = !DILocation(line: 1242, column: 40, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2751, file: !2, line: 1242, column: 6)
!2773 = !DILocation(line: 1242, column: 35, scope: !2772)
!2774 = !DILocation(line: 1242, column: 28, scope: !2772)
!2775 = !DILocation(line: 1242, column: 18, scope: !2772)
!2776 = !DILocation(line: 1242, column: 63, scope: !2772)
!2777 = !DILocation(line: 1242, column: 6, scope: !2751)
!2778 = !DILocation(line: 0, scope: !575, inlinedAt: !2779)
!2779 = distinct !DILocation(line: 1243, column: 5, scope: !2772)
!2780 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2779)
!2781 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2779)
!2782 = !DILocation(line: 1243, column: 5, scope: !2772)
!2783 = !DILocation(line: 1245, column: 16, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2785, file: !2, line: 1245, column: 3)
!2785 = distinct !DILexicalBlock(scope: !2751, file: !2, line: 1245, column: 3)
!2786 = !DILocation(line: 1245, column: 3, scope: !2785)
!2787 = !DILocation(line: 1246, column: 18, scope: !2784)
!2788 = !DILocation(line: 1246, column: 31, scope: !2784)
!2789 = !DILocation(line: 1246, column: 16, scope: !2784)
!2790 = !DILocation(line: 1245, column: 25, scope: !2784)
!2791 = distinct !{!2791, !2786, !2792}
!2792 = !DILocation(line: 1246, column: 33, scope: !2785)
!2793 = distinct !{!2793, !686}
!2794 = !DILocation(line: 1248, column: 3, scope: !2751)
!2795 = distinct !DISubprogram(name: "get_mem2D", scope: !2, file: !2, line: 1259, type: !2796, scopeLine: 1260, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2798)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!327, !526, !327, !327}
!2798 = !{!2799, !2800, !2801, !2802}
!2799 = !DILocalVariable(name: "array2D", arg: 1, scope: !2795, file: !2, line: 1259, type: !526)
!2800 = !DILocalVariable(name: "dim0", arg: 2, scope: !2795, file: !2, line: 1259, type: !327)
!2801 = !DILocalVariable(name: "dim1", arg: 3, scope: !2795, file: !2, line: 1259, type: !327)
!2802 = !DILocalVariable(name: "i", scope: !2795, file: !2, line: 1261, type: !327)
!2803 = !DILocation(line: 0, scope: !2795)
!2804 = !DILocation(line: 1263, column: 36, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 1263, column: 6)
!2806 = !DILocation(line: 1263, column: 41, scope: !2805)
!2807 = !DILocation(line: 1263, column: 29, scope: !2805)
!2808 = !DILocation(line: 1263, column: 19, scope: !2805)
!2809 = !DILocation(line: 1263, column: 64, scope: !2805)
!2810 = !DILocation(line: 1263, column: 6, scope: !2795)
!2811 = !DILocation(line: 0, scope: !575, inlinedAt: !2812)
!2812 = distinct !DILocation(line: 1264, column: 5, scope: !2805)
!2813 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2812)
!2814 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2812)
!2815 = !DILocation(line: 1265, column: 9, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 1265, column: 6)
!2817 = !DILocation(line: 1264, column: 5, scope: !2805)
!2818 = !DILocation(line: 1265, column: 41, scope: !2816)
!2819 = !DILocation(line: 1265, column: 36, scope: !2816)
!2820 = !DILocation(line: 1265, column: 29, scope: !2816)
!2821 = !DILocation(line: 1265, column: 19, scope: !2816)
!2822 = !DILocation(line: 1265, column: 64, scope: !2816)
!2823 = !DILocation(line: 1265, column: 6, scope: !2795)
!2824 = !DILocation(line: 0, scope: !575, inlinedAt: !2825)
!2825 = distinct !DILocation(line: 1266, column: 5, scope: !2816)
!2826 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2825)
!2827 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2825)
!2828 = !DILocation(line: 1266, column: 5, scope: !2816)
!2829 = !DILocation(line: 1268, column: 16, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2831, file: !2, line: 1268, column: 3)
!2831 = distinct !DILexicalBlock(scope: !2795, file: !2, line: 1268, column: 3)
!2832 = !DILocation(line: 1268, column: 3, scope: !2831)
!2833 = !DILocation(line: 1269, column: 22, scope: !2830)
!2834 = !DILocation(line: 1269, column: 21, scope: !2830)
!2835 = !DILocation(line: 1269, column: 37, scope: !2830)
!2836 = !DILocation(line: 1269, column: 19, scope: !2830)
!2837 = !DILocation(line: 1268, column: 25, scope: !2830)
!2838 = distinct !{!2838, !2832, !2839}
!2839 = !DILocation(line: 1269, column: 39, scope: !2831)
!2840 = distinct !{!2840, !686}
!2841 = !DILocation(line: 1271, column: 32, scope: !2795)
!2842 = !DILocation(line: 1271, column: 15, scope: !2795)
!2843 = !DILocation(line: 1271, column: 3, scope: !2795)
!2844 = distinct !DISubprogram(name: "new_mem2Dint", scope: !2, file: !2, line: 1284, type: !2845, scopeLine: 1285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2847)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!520, !327, !327}
!2847 = !{!2848, !2849, !2850, !2851}
!2848 = !DILocalVariable(name: "dim0", arg: 1, scope: !2844, file: !2, line: 1284, type: !327)
!2849 = !DILocalVariable(name: "dim1", arg: 2, scope: !2844, file: !2, line: 1284, type: !327)
!2850 = !DILocalVariable(name: "i", scope: !2844, file: !2, line: 1286, type: !327)
!2851 = !DILocalVariable(name: "array2D", scope: !2844, file: !2, line: 1287, type: !520)
!2852 = !DILocation(line: 0, scope: !2844)
!2853 = !DILocation(line: 1289, column: 34, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2844, file: !2, line: 1289, column: 6)
!2855 = !DILocation(line: 1289, column: 39, scope: !2854)
!2856 = !DILocation(line: 1289, column: 27, scope: !2854)
!2857 = !DILocation(line: 1289, column: 63, scope: !2854)
!2858 = !DILocation(line: 1289, column: 6, scope: !2844)
!2859 = !DILocation(line: 0, scope: !575, inlinedAt: !2860)
!2860 = distinct !DILocation(line: 1290, column: 5, scope: !2854)
!2861 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2860)
!2862 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2860)
!2863 = !DILocation(line: 1290, column: 5, scope: !2854)
!2864 = !DILocation(line: 1291, column: 39, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2844, file: !2, line: 1291, column: 6)
!2866 = !DILocation(line: 1291, column: 34, scope: !2865)
!2867 = !DILocation(line: 1291, column: 27, scope: !2865)
!2868 = !DILocation(line: 1291, column: 18, scope: !2865)
!2869 = !DILocation(line: 1291, column: 62, scope: !2865)
!2870 = !DILocation(line: 1291, column: 6, scope: !2844)
!2871 = !DILocation(line: 0, scope: !575, inlinedAt: !2872)
!2872 = distinct !DILocation(line: 1292, column: 5, scope: !2865)
!2873 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2872)
!2874 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2872)
!2875 = !DILocation(line: 1292, column: 5, scope: !2865)
!2876 = !DILocation(line: 1294, column: 17, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2878, file: !2, line: 1294, column: 3)
!2878 = distinct !DILexicalBlock(scope: !2844, file: !2, line: 1294, column: 3)
!2879 = !DILocation(line: 1294, column: 3, scope: !2878)
!2880 = !DILocation(line: 1295, column: 21, scope: !2877)
!2881 = !DILocation(line: 1295, column: 36, scope: !2877)
!2882 = !DILocation(line: 1295, column: 18, scope: !2877)
!2883 = !DILocation(line: 1294, column: 26, scope: !2877)
!2884 = distinct !{!2884, !2879, !2885}
!2885 = !DILocation(line: 1295, column: 38, scope: !2878)
!2886 = distinct !{!2886, !686}
!2887 = !DILocation(line: 1297, column: 3, scope: !2844)
!2888 = distinct !DISubprogram(name: "get_mem2Dint", scope: !2, file: !2, line: 1309, type: !2889, scopeLine: 1310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2891)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!327, !528, !327, !327}
!2891 = !{!2892, !2893, !2894, !2895}
!2892 = !DILocalVariable(name: "array2D", arg: 1, scope: !2888, file: !2, line: 1309, type: !528)
!2893 = !DILocalVariable(name: "dim0", arg: 2, scope: !2888, file: !2, line: 1309, type: !327)
!2894 = !DILocalVariable(name: "dim1", arg: 3, scope: !2888, file: !2, line: 1309, type: !327)
!2895 = !DILocalVariable(name: "i", scope: !2888, file: !2, line: 1311, type: !327)
!2896 = !DILocation(line: 0, scope: !2888)
!2897 = !DILocation(line: 1313, column: 35, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2888, file: !2, line: 1313, column: 6)
!2899 = !DILocation(line: 1313, column: 40, scope: !2898)
!2900 = !DILocation(line: 1313, column: 28, scope: !2898)
!2901 = !DILocation(line: 1313, column: 19, scope: !2898)
!2902 = !DILocation(line: 1313, column: 63, scope: !2898)
!2903 = !DILocation(line: 1313, column: 6, scope: !2888)
!2904 = !DILocation(line: 0, scope: !575, inlinedAt: !2905)
!2905 = distinct !DILocation(line: 1314, column: 5, scope: !2898)
!2906 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2905)
!2907 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2905)
!2908 = !DILocation(line: 1315, column: 9, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2888, file: !2, line: 1315, column: 6)
!2910 = !DILocation(line: 1314, column: 5, scope: !2898)
!2911 = !DILocation(line: 1315, column: 40, scope: !2909)
!2912 = !DILocation(line: 1315, column: 35, scope: !2909)
!2913 = !DILocation(line: 1315, column: 28, scope: !2909)
!2914 = !DILocation(line: 1315, column: 19, scope: !2909)
!2915 = !DILocation(line: 1315, column: 63, scope: !2909)
!2916 = !DILocation(line: 1315, column: 6, scope: !2888)
!2917 = !DILocation(line: 0, scope: !575, inlinedAt: !2918)
!2918 = distinct !DILocation(line: 1316, column: 5, scope: !2909)
!2919 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2918)
!2920 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2918)
!2921 = !DILocation(line: 1316, column: 5, scope: !2909)
!2922 = !DILocation(line: 1318, column: 17, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2924, file: !2, line: 1318, column: 3)
!2924 = distinct !DILexicalBlock(scope: !2888, file: !2, line: 1318, column: 3)
!2925 = !DILocation(line: 1318, column: 3, scope: !2924)
!2926 = !DILocation(line: 1319, column: 23, scope: !2923)
!2927 = !DILocation(line: 1319, column: 22, scope: !2923)
!2928 = !DILocation(line: 1319, column: 38, scope: !2923)
!2929 = !DILocation(line: 1319, column: 19, scope: !2923)
!2930 = !DILocation(line: 1318, column: 26, scope: !2923)
!2931 = distinct !{!2931, !2925, !2932}
!2932 = !DILocation(line: 1319, column: 40, scope: !2924)
!2933 = distinct !{!2933, !686}
!2934 = !DILocation(line: 1321, column: 38, scope: !2888)
!2935 = !DILocation(line: 1321, column: 31, scope: !2888)
!2936 = !DILocation(line: 1321, column: 15, scope: !2888)
!2937 = !DILocation(line: 1321, column: 3, scope: !2888)
!2938 = distinct !DISubprogram(name: "get_mem2DintWithPad", scope: !2, file: !2, line: 1324, type: !2939, scopeLine: 1325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !2941)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!327, !528, !327, !327, !327, !327}
!2941 = !{!2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950}
!2942 = !DILocalVariable(name: "array2D", arg: 1, scope: !2938, file: !2, line: 1324, type: !528)
!2943 = !DILocalVariable(name: "dim0", arg: 2, scope: !2938, file: !2, line: 1324, type: !327)
!2944 = !DILocalVariable(name: "dim1", arg: 3, scope: !2938, file: !2, line: 1324, type: !327)
!2945 = !DILocalVariable(name: "iPadY", arg: 4, scope: !2938, file: !2, line: 1324, type: !327)
!2946 = !DILocalVariable(name: "iPadX", arg: 5, scope: !2938, file: !2, line: 1324, type: !327)
!2947 = !DILocalVariable(name: "i", scope: !2938, file: !2, line: 1326, type: !327)
!2948 = !DILocalVariable(name: "curr", scope: !2938, file: !2, line: 1327, type: !521)
!2949 = !DILocalVariable(name: "iHeight", scope: !2938, file: !2, line: 1328, type: !327)
!2950 = !DILocalVariable(name: "iWidth", scope: !2938, file: !2, line: 1328, type: !327)
!2951 = !DILocation(line: 0, scope: !2938)
!2952 = !DILocation(line: 1330, column: 19, scope: !2938)
!2953 = !DILocation(line: 1330, column: 17, scope: !2938)
!2954 = !DILocation(line: 1331, column: 18, scope: !2938)
!2955 = !DILocation(line: 1331, column: 16, scope: !2938)
!2956 = !DILocation(line: 1332, column: 35, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 1332, column: 6)
!2958 = !DILocation(line: 1332, column: 42, scope: !2957)
!2959 = !DILocation(line: 1332, column: 28, scope: !2957)
!2960 = !DILocation(line: 1332, column: 19, scope: !2957)
!2961 = !DILocation(line: 1332, column: 58, scope: !2957)
!2962 = !DILocation(line: 1332, column: 6, scope: !2938)
!2963 = !DILocation(line: 0, scope: !575, inlinedAt: !2964)
!2964 = distinct !DILocation(line: 1333, column: 5, scope: !2957)
!2965 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2964)
!2966 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2964)
!2967 = !DILocation(line: 1334, column: 9, scope: !2968)
!2968 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 1334, column: 6)
!2969 = !DILocation(line: 1333, column: 5, scope: !2957)
!2970 = !DILocation(line: 1334, column: 43, scope: !2968)
!2971 = !DILocation(line: 1334, column: 35, scope: !2968)
!2972 = !DILocation(line: 1334, column: 28, scope: !2968)
!2973 = !DILocation(line: 1334, column: 19, scope: !2968)
!2974 = !DILocation(line: 1334, column: 68, scope: !2968)
!2975 = !DILocation(line: 1334, column: 6, scope: !2938)
!2976 = !DILocation(line: 0, scope: !575, inlinedAt: !2977)
!2977 = distinct !DILocation(line: 1335, column: 5, scope: !2968)
!2978 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !2977)
!2979 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !2977)
!2980 = !DILocation(line: 1335, column: 5, scope: !2968)
!2981 = !DILocation(line: 1337, column: 4, scope: !2938)
!2982 = !DILocation(line: 1337, column: 17, scope: !2938)
!2983 = !DILocation(line: 1339, column: 17, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !2, line: 1339, column: 3)
!2985 = distinct !DILexicalBlock(scope: !2938, file: !2, line: 1339, column: 3)
!2986 = !DILocation(line: 1339, column: 3, scope: !2985)
!2987 = !DILocation(line: 1338, column: 11, scope: !2938)
!2988 = !DILocation(line: 1338, column: 10, scope: !2938)
!2989 = !DILocation(line: 1341, column: 10, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2984, file: !2, line: 1340, column: 3)
!2991 = !DILocation(line: 1342, column: 6, scope: !2990)
!2992 = !DILocation(line: 1342, column: 5, scope: !2990)
!2993 = !DILocation(line: 1342, column: 19, scope: !2990)
!2994 = !DILocation(line: 1339, column: 29, scope: !2984)
!2995 = distinct !{!2995, !2986, !2996}
!2996 = !DILocation(line: 1343, column: 3, scope: !2985)
!2997 = distinct !{!2997, !686}
!2998 = !DILocation(line: 1344, column: 19, scope: !2938)
!2999 = !DILocation(line: 1344, column: 18, scope: !2938)
!3000 = !DILocation(line: 1344, column: 14, scope: !2938)
!3001 = !DILocation(line: 1346, column: 43, scope: !2938)
!3002 = !DILocation(line: 1346, column: 34, scope: !2938)
!3003 = !DILocation(line: 1346, column: 18, scope: !2938)
!3004 = !DILocation(line: 1346, column: 3, scope: !2938)
!3005 = distinct !DISubprogram(name: "get_mem2Dint64", scope: !2, file: !2, line: 1358, type: !3006, scopeLine: 1359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3008)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!327, !529, !327, !327}
!3008 = !{!3009, !3010, !3011, !3012}
!3009 = !DILocalVariable(name: "array2D", arg: 1, scope: !3005, file: !2, line: 1358, type: !529)
!3010 = !DILocalVariable(name: "dim0", arg: 2, scope: !3005, file: !2, line: 1358, type: !327)
!3011 = !DILocalVariable(name: "dim1", arg: 3, scope: !3005, file: !2, line: 1358, type: !327)
!3012 = !DILocalVariable(name: "i", scope: !3005, file: !2, line: 1360, type: !327)
!3013 = !DILocation(line: 0, scope: !3005)
!3014 = !DILocation(line: 1362, column: 37, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3005, file: !2, line: 1362, column: 6)
!3016 = !DILocation(line: 1362, column: 42, scope: !3015)
!3017 = !DILocation(line: 1362, column: 30, scope: !3015)
!3018 = !DILocation(line: 1362, column: 19, scope: !3015)
!3019 = !DILocation(line: 1362, column: 66, scope: !3015)
!3020 = !DILocation(line: 1362, column: 6, scope: !3005)
!3021 = !DILocation(line: 0, scope: !575, inlinedAt: !3022)
!3022 = distinct !DILocation(line: 1363, column: 5, scope: !3015)
!3023 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3022)
!3024 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3022)
!3025 = !DILocation(line: 1364, column: 9, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3005, file: !2, line: 1364, column: 6)
!3027 = !DILocation(line: 1363, column: 5, scope: !3015)
!3028 = !DILocation(line: 1364, column: 42, scope: !3026)
!3029 = !DILocation(line: 1364, column: 37, scope: !3026)
!3030 = !DILocation(line: 1364, column: 30, scope: !3026)
!3031 = !DILocation(line: 1364, column: 19, scope: !3026)
!3032 = !DILocation(line: 1364, column: 66, scope: !3026)
!3033 = !DILocation(line: 1364, column: 6, scope: !3005)
!3034 = !DILocation(line: 0, scope: !575, inlinedAt: !3035)
!3035 = distinct !DILocation(line: 1365, column: 5, scope: !3026)
!3036 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3035)
!3037 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3035)
!3038 = !DILocation(line: 1365, column: 5, scope: !3026)
!3039 = !DILocation(line: 1367, column: 16, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !2, line: 1367, column: 3)
!3041 = distinct !DILexicalBlock(scope: !3005, file: !2, line: 1367, column: 3)
!3042 = !DILocation(line: 1367, column: 3, scope: !3041)
!3043 = !DILocation(line: 1368, column: 23, scope: !3040)
!3044 = !DILocation(line: 1368, column: 22, scope: !3040)
!3045 = !DILocation(line: 1368, column: 38, scope: !3040)
!3046 = !DILocation(line: 1368, column: 19, scope: !3040)
!3047 = !DILocation(line: 1367, column: 25, scope: !3040)
!3048 = distinct !{!3048, !3042, !3049}
!3049 = !DILocation(line: 1368, column: 40, scope: !3041)
!3050 = distinct !{!3050, !686}
!3051 = !DILocation(line: 1370, column: 40, scope: !3005)
!3052 = !DILocation(line: 1370, column: 33, scope: !3005)
!3053 = !DILocation(line: 1370, column: 15, scope: !3005)
!3054 = !DILocation(line: 1370, column: 3, scope: !3005)
!3055 = distinct !DISubprogram(name: "get_mem2Ddistblk", scope: !2, file: !2, line: 1373, type: !3056, scopeLine: 1374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3058)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!327, !530, !327, !327}
!3058 = !{!3059, !3060, !3061, !3062}
!3059 = !DILocalVariable(name: "array2D", arg: 1, scope: !3055, file: !2, line: 1373, type: !530)
!3060 = !DILocalVariable(name: "dim0", arg: 2, scope: !3055, file: !2, line: 1373, type: !327)
!3061 = !DILocalVariable(name: "dim1", arg: 3, scope: !3055, file: !2, line: 1373, type: !327)
!3062 = !DILocalVariable(name: "i", scope: !3055, file: !2, line: 1375, type: !327)
!3063 = !DILocation(line: 0, scope: !3055)
!3064 = !DILocation(line: 1377, column: 39, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3055, file: !2, line: 1377, column: 6)
!3066 = !DILocation(line: 1377, column: 44, scope: !3065)
!3067 = !DILocation(line: 1377, column: 32, scope: !3065)
!3068 = !DILocation(line: 1377, column: 19, scope: !3065)
!3069 = !DILocation(line: 1377, column: 70, scope: !3065)
!3070 = !DILocation(line: 1377, column: 6, scope: !3055)
!3071 = !DILocation(line: 0, scope: !575, inlinedAt: !3072)
!3072 = distinct !DILocation(line: 1378, column: 5, scope: !3065)
!3073 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3072)
!3074 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3072)
!3075 = !DILocation(line: 1379, column: 9, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !3055, file: !2, line: 1379, column: 6)
!3077 = !DILocation(line: 1378, column: 5, scope: !3065)
!3078 = !DILocation(line: 1379, column: 44, scope: !3076)
!3079 = !DILocation(line: 1379, column: 39, scope: !3076)
!3080 = !DILocation(line: 1379, column: 32, scope: !3076)
!3081 = !DILocation(line: 1379, column: 19, scope: !3076)
!3082 = !DILocation(line: 1379, column: 70, scope: !3076)
!3083 = !DILocation(line: 1379, column: 6, scope: !3055)
!3084 = !DILocation(line: 0, scope: !575, inlinedAt: !3085)
!3085 = distinct !DILocation(line: 1380, column: 5, scope: !3076)
!3086 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3085)
!3087 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3085)
!3088 = !DILocation(line: 1380, column: 5, scope: !3076)
!3089 = !DILocation(line: 1382, column: 16, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !2, line: 1382, column: 3)
!3091 = distinct !DILexicalBlock(scope: !3055, file: !2, line: 1382, column: 3)
!3092 = !DILocation(line: 1382, column: 3, scope: !3091)
!3093 = !DILocation(line: 1383, column: 23, scope: !3090)
!3094 = !DILocation(line: 1383, column: 22, scope: !3090)
!3095 = !DILocation(line: 1383, column: 38, scope: !3090)
!3096 = !DILocation(line: 1383, column: 19, scope: !3090)
!3097 = !DILocation(line: 1382, column: 25, scope: !3090)
!3098 = distinct !{!3098, !3092, !3099}
!3099 = !DILocation(line: 1383, column: 40, scope: !3091)
!3100 = distinct !{!3100, !686}
!3101 = !DILocation(line: 1385, column: 42, scope: !3055)
!3102 = !DILocation(line: 1385, column: 35, scope: !3055)
!3103 = !DILocation(line: 1385, column: 15, scope: !3055)
!3104 = !DILocation(line: 1385, column: 3, scope: !3055)
!3105 = distinct !DISubprogram(name: "get_mem3D", scope: !2, file: !2, line: 1397, type: !3106, scopeLine: 1398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3108)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!327, !527, !327, !327, !327}
!3108 = !{!3109, !3110, !3111, !3112, !3113, !3114}
!3109 = !DILocalVariable(name: "array3D", arg: 1, scope: !3105, file: !2, line: 1397, type: !527)
!3110 = !DILocalVariable(name: "dim0", arg: 2, scope: !3105, file: !2, line: 1397, type: !327)
!3111 = !DILocalVariable(name: "dim1", arg: 3, scope: !3105, file: !2, line: 1397, type: !327)
!3112 = !DILocalVariable(name: "dim2", arg: 4, scope: !3105, file: !2, line: 1397, type: !327)
!3113 = !DILocalVariable(name: "i", scope: !3105, file: !2, line: 1399, type: !327)
!3114 = !DILocalVariable(name: "mem_size", scope: !3105, file: !2, line: 1399, type: !327)
!3115 = !DILocation(line: 0, scope: !3105)
!3116 = !DILocation(line: 1399, column: 22, scope: !3105)
!3117 = !DILocation(line: 1399, column: 27, scope: !3105)
!3118 = !DILocation(line: 1401, column: 29, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3105, file: !2, line: 1401, column: 6)
!3120 = !DILocation(line: 1401, column: 18, scope: !3119)
!3121 = !DILocation(line: 1401, column: 60, scope: !3119)
!3122 = !DILocation(line: 1401, column: 6, scope: !3105)
!3123 = !DILocation(line: 0, scope: !575, inlinedAt: !3124)
!3124 = distinct !DILocation(line: 1402, column: 5, scope: !3119)
!3125 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3124)
!3126 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3124)
!3127 = !DILocation(line: 1404, column: 25, scope: !3105)
!3128 = !DILocation(line: 1402, column: 5, scope: !3119)
!3129 = !DILocation(line: 1404, column: 40, scope: !3105)
!3130 = !DILocation(line: 1404, column: 15, scope: !3105)
!3131 = !DILocation(line: 1406, column: 16, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !2, line: 1406, column: 3)
!3133 = distinct !DILexicalBlock(scope: !3105, file: !2, line: 1406, column: 3)
!3134 = !DILocation(line: 1406, column: 3, scope: !3133)
!3135 = !DILocation(line: 1407, column: 23, scope: !3132)
!3136 = !DILocation(line: 1407, column: 22, scope: !3132)
!3137 = !DILocation(line: 1407, column: 38, scope: !3132)
!3138 = !DILocation(line: 1407, column: 19, scope: !3132)
!3139 = !DILocation(line: 1406, column: 25, scope: !3132)
!3140 = distinct !{!3140, !3134, !3141}
!3141 = !DILocation(line: 1407, column: 40, scope: !3133)
!3142 = distinct !{!3142, !686}
!3143 = !DILocation(line: 1404, column: 12, scope: !3105)
!3144 = !DILocation(line: 1409, column: 3, scope: !3105)
!3145 = distinct !DISubprogram(name: "get_mem4D", scope: !2, file: !2, line: 1421, type: !3146, scopeLine: 1422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3149)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!327, !3148, !327, !327, !327, !327}
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3156}
!3150 = !DILocalVariable(name: "array4D", arg: 1, scope: !3145, file: !2, line: 1421, type: !3148)
!3151 = !DILocalVariable(name: "dim0", arg: 2, scope: !3145, file: !2, line: 1421, type: !327)
!3152 = !DILocalVariable(name: "dim1", arg: 3, scope: !3145, file: !2, line: 1421, type: !327)
!3153 = !DILocalVariable(name: "dim2", arg: 4, scope: !3145, file: !2, line: 1421, type: !327)
!3154 = !DILocalVariable(name: "dim3", arg: 5, scope: !3145, file: !2, line: 1421, type: !327)
!3155 = !DILocalVariable(name: "i", scope: !3145, file: !2, line: 1423, type: !327)
!3156 = !DILocalVariable(name: "mem_size", scope: !3145, file: !2, line: 1423, type: !327)
!3157 = !DILocation(line: 0, scope: !3145)
!3158 = !DILocation(line: 1423, column: 22, scope: !3145)
!3159 = !DILocation(line: 1423, column: 27, scope: !3145)
!3160 = !DILocation(line: 1425, column: 30, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3145, file: !2, line: 1425, column: 6)
!3162 = !DILocation(line: 1425, column: 18, scope: !3161)
!3163 = !DILocation(line: 1425, column: 62, scope: !3161)
!3164 = !DILocation(line: 1425, column: 6, scope: !3145)
!3165 = !DILocation(line: 0, scope: !575, inlinedAt: !3166)
!3166 = distinct !DILocation(line: 1426, column: 5, scope: !3161)
!3167 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3166)
!3168 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3166)
!3169 = !DILocation(line: 1428, column: 25, scope: !3145)
!3170 = !DILocation(line: 1426, column: 5, scope: !3161)
!3171 = !DILocation(line: 1428, column: 40, scope: !3145)
!3172 = !DILocation(line: 0, scope: !3105, inlinedAt: !3173)
!3173 = distinct !DILocation(line: 1428, column: 15, scope: !3145)
!3174 = !DILocation(line: 1399, column: 22, scope: !3105, inlinedAt: !3173)
!3175 = !DILocation(line: 1399, column: 27, scope: !3105, inlinedAt: !3173)
!3176 = !DILocation(line: 1401, column: 29, scope: !3119, inlinedAt: !3173)
!3177 = !DILocation(line: 1401, column: 18, scope: !3119, inlinedAt: !3173)
!3178 = !DILocation(line: 1401, column: 60, scope: !3119, inlinedAt: !3173)
!3179 = !DILocation(line: 1401, column: 6, scope: !3105, inlinedAt: !3173)
!3180 = !DILocation(line: 0, scope: !575, inlinedAt: !3181)
!3181 = distinct !DILocation(line: 1402, column: 5, scope: !3119, inlinedAt: !3173)
!3182 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3181)
!3183 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3181)
!3184 = !DILocation(line: 1404, column: 25, scope: !3105, inlinedAt: !3173)
!3185 = !DILocation(line: 1402, column: 5, scope: !3119, inlinedAt: !3173)
!3186 = !DILocation(line: 1404, column: 40, scope: !3105, inlinedAt: !3173)
!3187 = !DILocation(line: 1404, column: 15, scope: !3105, inlinedAt: !3173)
!3188 = !DILocation(line: 1406, column: 16, scope: !3132, inlinedAt: !3173)
!3189 = !DILocation(line: 1406, column: 3, scope: !3133, inlinedAt: !3173)
!3190 = !DILocation(line: 1407, column: 23, scope: !3132, inlinedAt: !3173)
!3191 = !DILocation(line: 1407, column: 22, scope: !3132, inlinedAt: !3173)
!3192 = !DILocation(line: 1407, column: 38, scope: !3132, inlinedAt: !3173)
!3193 = !DILocation(line: 1407, column: 19, scope: !3132, inlinedAt: !3173)
!3194 = !DILocation(line: 1406, column: 25, scope: !3132, inlinedAt: !3173)
!3195 = distinct !{!3195, !3189, !3196}
!3196 = !DILocation(line: 1407, column: 40, scope: !3133, inlinedAt: !3173)
!3197 = distinct !{!3197, !686}
!3198 = !DILocation(line: 1430, column: 16, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !2, line: 1430, column: 3)
!3200 = distinct !DILexicalBlock(scope: !3145, file: !2, line: 1430, column: 3)
!3201 = !DILocation(line: 1430, column: 3, scope: !3200)
!3202 = !DILocation(line: 1431, column: 23, scope: !3199)
!3203 = !DILocation(line: 1431, column: 22, scope: !3199)
!3204 = !DILocation(line: 1431, column: 38, scope: !3199)
!3205 = !DILocation(line: 1431, column: 19, scope: !3199)
!3206 = !DILocation(line: 1430, column: 25, scope: !3199)
!3207 = distinct !{!3207, !3201, !3208}
!3208 = !DILocation(line: 1431, column: 40, scope: !3200)
!3209 = distinct !{!3209, !686}
!3210 = !DILocation(line: 1404, column: 12, scope: !3105, inlinedAt: !3173)
!3211 = !DILocation(line: 1428, column: 12, scope: !3145)
!3212 = !DILocation(line: 1433, column: 3, scope: !3145)
!3213 = distinct !DISubprogram(name: "get_mem3Dint", scope: !2, file: !2, line: 1445, type: !3214, scopeLine: 1446, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3216)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!327, !531, !327, !327, !327}
!3216 = !{!3217, !3218, !3219, !3220, !3221, !3222}
!3217 = !DILocalVariable(name: "array3D", arg: 1, scope: !3213, file: !2, line: 1445, type: !531)
!3218 = !DILocalVariable(name: "dim0", arg: 2, scope: !3213, file: !2, line: 1445, type: !327)
!3219 = !DILocalVariable(name: "dim1", arg: 3, scope: !3213, file: !2, line: 1445, type: !327)
!3220 = !DILocalVariable(name: "dim2", arg: 4, scope: !3213, file: !2, line: 1445, type: !327)
!3221 = !DILocalVariable(name: "i", scope: !3213, file: !2, line: 1447, type: !327)
!3222 = !DILocalVariable(name: "mem_size", scope: !3213, file: !2, line: 1447, type: !327)
!3223 = !DILocation(line: 0, scope: !3213)
!3224 = !DILocation(line: 1447, column: 22, scope: !3213)
!3225 = !DILocation(line: 1447, column: 27, scope: !3213)
!3226 = !DILocation(line: 1449, column: 28, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3213, file: !2, line: 1449, column: 6)
!3228 = !DILocation(line: 1449, column: 18, scope: !3227)
!3229 = !DILocation(line: 1449, column: 58, scope: !3227)
!3230 = !DILocation(line: 1449, column: 6, scope: !3213)
!3231 = !DILocation(line: 0, scope: !575, inlinedAt: !3232)
!3232 = distinct !DILocation(line: 1450, column: 5, scope: !3227)
!3233 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3232)
!3234 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3232)
!3235 = !DILocation(line: 1452, column: 28, scope: !3213)
!3236 = !DILocation(line: 1450, column: 5, scope: !3227)
!3237 = !DILocation(line: 1452, column: 43, scope: !3213)
!3238 = !DILocation(line: 1452, column: 15, scope: !3213)
!3239 = !DILocation(line: 1454, column: 16, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !2, line: 1454, column: 3)
!3241 = distinct !DILexicalBlock(scope: !3213, file: !2, line: 1454, column: 3)
!3242 = !DILocation(line: 1454, column: 3, scope: !3241)
!3243 = !DILocation(line: 1455, column: 23, scope: !3240)
!3244 = !DILocation(line: 1455, column: 22, scope: !3240)
!3245 = !DILocation(line: 1455, column: 38, scope: !3240)
!3246 = !DILocation(line: 1455, column: 19, scope: !3240)
!3247 = !DILocation(line: 1454, column: 25, scope: !3240)
!3248 = distinct !{!3248, !3242, !3249}
!3249 = !DILocation(line: 1455, column: 40, scope: !3241)
!3250 = distinct !{!3250, !686}
!3251 = !DILocation(line: 1452, column: 12, scope: !3213)
!3252 = !DILocation(line: 1457, column: 3, scope: !3213)
!3253 = distinct !DISubprogram(name: "get_mem3Dint64", scope: !2, file: !2, line: 1469, type: !3254, scopeLine: 1470, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3256)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!327, !532, !327, !327, !327}
!3256 = !{!3257, !3258, !3259, !3260, !3261, !3262}
!3257 = !DILocalVariable(name: "array3D", arg: 1, scope: !3253, file: !2, line: 1469, type: !532)
!3258 = !DILocalVariable(name: "dim0", arg: 2, scope: !3253, file: !2, line: 1469, type: !327)
!3259 = !DILocalVariable(name: "dim1", arg: 3, scope: !3253, file: !2, line: 1469, type: !327)
!3260 = !DILocalVariable(name: "dim2", arg: 4, scope: !3253, file: !2, line: 1469, type: !327)
!3261 = !DILocalVariable(name: "i", scope: !3253, file: !2, line: 1471, type: !327)
!3262 = !DILocalVariable(name: "mem_size", scope: !3253, file: !2, line: 1471, type: !327)
!3263 = !DILocation(line: 0, scope: !3253)
!3264 = !DILocation(line: 1471, column: 22, scope: !3253)
!3265 = !DILocation(line: 1471, column: 27, scope: !3253)
!3266 = !DILocation(line: 1473, column: 30, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3253, file: !2, line: 1473, column: 6)
!3268 = !DILocation(line: 1473, column: 18, scope: !3267)
!3269 = !DILocation(line: 1473, column: 62, scope: !3267)
!3270 = !DILocation(line: 1473, column: 6, scope: !3253)
!3271 = !DILocation(line: 0, scope: !575, inlinedAt: !3272)
!3272 = distinct !DILocation(line: 1474, column: 5, scope: !3267)
!3273 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3272)
!3274 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3272)
!3275 = !DILocation(line: 1476, column: 30, scope: !3253)
!3276 = !DILocation(line: 1474, column: 5, scope: !3267)
!3277 = !DILocation(line: 1476, column: 45, scope: !3253)
!3278 = !DILocation(line: 1476, column: 15, scope: !3253)
!3279 = !DILocation(line: 1478, column: 16, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !2, line: 1478, column: 3)
!3281 = distinct !DILexicalBlock(scope: !3253, file: !2, line: 1478, column: 3)
!3282 = !DILocation(line: 1478, column: 3, scope: !3281)
!3283 = !DILocation(line: 1479, column: 23, scope: !3280)
!3284 = !DILocation(line: 1479, column: 22, scope: !3280)
!3285 = !DILocation(line: 1479, column: 38, scope: !3280)
!3286 = !DILocation(line: 1479, column: 19, scope: !3280)
!3287 = !DILocation(line: 1478, column: 25, scope: !3280)
!3288 = distinct !{!3288, !3282, !3289}
!3289 = !DILocation(line: 1479, column: 40, scope: !3281)
!3290 = distinct !{!3290, !686}
!3291 = !DILocation(line: 1476, column: 12, scope: !3253)
!3292 = !DILocation(line: 1481, column: 3, scope: !3253)
!3293 = distinct !DISubprogram(name: "get_mem3Ddistblk", scope: !2, file: !2, line: 1484, type: !3294, scopeLine: 1485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3296)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!327, !533, !327, !327, !327}
!3296 = !{!3297, !3298, !3299, !3300, !3301, !3302}
!3297 = !DILocalVariable(name: "array3D", arg: 1, scope: !3293, file: !2, line: 1484, type: !533)
!3298 = !DILocalVariable(name: "dim0", arg: 2, scope: !3293, file: !2, line: 1484, type: !327)
!3299 = !DILocalVariable(name: "dim1", arg: 3, scope: !3293, file: !2, line: 1484, type: !327)
!3300 = !DILocalVariable(name: "dim2", arg: 4, scope: !3293, file: !2, line: 1484, type: !327)
!3301 = !DILocalVariable(name: "i", scope: !3293, file: !2, line: 1486, type: !327)
!3302 = !DILocalVariable(name: "mem_size", scope: !3293, file: !2, line: 1486, type: !327)
!3303 = !DILocation(line: 0, scope: !3293)
!3304 = !DILocation(line: 1486, column: 22, scope: !3293)
!3305 = !DILocation(line: 1486, column: 27, scope: !3293)
!3306 = !DILocation(line: 1488, column: 32, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3293, file: !2, line: 1488, column: 6)
!3308 = !DILocation(line: 1488, column: 18, scope: !3307)
!3309 = !DILocation(line: 1488, column: 66, scope: !3307)
!3310 = !DILocation(line: 1488, column: 6, scope: !3293)
!3311 = !DILocation(line: 0, scope: !575, inlinedAt: !3312)
!3312 = distinct !DILocation(line: 1489, column: 5, scope: !3307)
!3313 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3312)
!3314 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3312)
!3315 = !DILocation(line: 1491, column: 32, scope: !3293)
!3316 = !DILocation(line: 1489, column: 5, scope: !3307)
!3317 = !DILocation(line: 1491, column: 47, scope: !3293)
!3318 = !DILocation(line: 1491, column: 15, scope: !3293)
!3319 = !DILocation(line: 1493, column: 16, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3321, file: !2, line: 1493, column: 3)
!3321 = distinct !DILexicalBlock(scope: !3293, file: !2, line: 1493, column: 3)
!3322 = !DILocation(line: 1493, column: 3, scope: !3321)
!3323 = !DILocation(line: 1494, column: 23, scope: !3320)
!3324 = !DILocation(line: 1494, column: 22, scope: !3320)
!3325 = !DILocation(line: 1494, column: 38, scope: !3320)
!3326 = !DILocation(line: 1494, column: 19, scope: !3320)
!3327 = !DILocation(line: 1493, column: 25, scope: !3320)
!3328 = distinct !{!3328, !3322, !3329}
!3329 = !DILocation(line: 1494, column: 40, scope: !3321)
!3330 = distinct !{!3330, !686}
!3331 = !DILocation(line: 1491, column: 12, scope: !3293)
!3332 = !DILocation(line: 1496, column: 3, scope: !3293)
!3333 = distinct !DISubprogram(name: "get_mem4Dint", scope: !2, file: !2, line: 1508, type: !3334, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3336)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!327, !534, !327, !327, !327, !327}
!3336 = !{!3337, !3338, !3339, !3340, !3341, !3342, !3343}
!3337 = !DILocalVariable(name: "array4D", arg: 1, scope: !3333, file: !2, line: 1508, type: !534)
!3338 = !DILocalVariable(name: "dim0", arg: 2, scope: !3333, file: !2, line: 1508, type: !327)
!3339 = !DILocalVariable(name: "dim1", arg: 3, scope: !3333, file: !2, line: 1508, type: !327)
!3340 = !DILocalVariable(name: "dim2", arg: 4, scope: !3333, file: !2, line: 1508, type: !327)
!3341 = !DILocalVariable(name: "dim3", arg: 5, scope: !3333, file: !2, line: 1508, type: !327)
!3342 = !DILocalVariable(name: "i", scope: !3333, file: !2, line: 1510, type: !327)
!3343 = !DILocalVariable(name: "mem_size", scope: !3333, file: !2, line: 1510, type: !327)
!3344 = !DILocation(line: 0, scope: !3333)
!3345 = !DILocation(line: 1510, column: 22, scope: !3333)
!3346 = !DILocation(line: 1510, column: 27, scope: !3333)
!3347 = !DILocation(line: 1512, column: 29, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3333, file: !2, line: 1512, column: 6)
!3349 = !DILocation(line: 1512, column: 18, scope: !3348)
!3350 = !DILocation(line: 1512, column: 60, scope: !3348)
!3351 = !DILocation(line: 1512, column: 6, scope: !3333)
!3352 = !DILocation(line: 0, scope: !575, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 1513, column: 5, scope: !3348)
!3354 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3353)
!3355 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3353)
!3356 = !DILocation(line: 1515, column: 28, scope: !3333)
!3357 = !DILocation(line: 1513, column: 5, scope: !3348)
!3358 = !DILocation(line: 1515, column: 43, scope: !3333)
!3359 = !DILocation(line: 0, scope: !3213, inlinedAt: !3360)
!3360 = distinct !DILocation(line: 1515, column: 15, scope: !3333)
!3361 = !DILocation(line: 1447, column: 22, scope: !3213, inlinedAt: !3360)
!3362 = !DILocation(line: 1447, column: 27, scope: !3213, inlinedAt: !3360)
!3363 = !DILocation(line: 1449, column: 28, scope: !3227, inlinedAt: !3360)
!3364 = !DILocation(line: 1449, column: 18, scope: !3227, inlinedAt: !3360)
!3365 = !DILocation(line: 1449, column: 58, scope: !3227, inlinedAt: !3360)
!3366 = !DILocation(line: 1449, column: 6, scope: !3213, inlinedAt: !3360)
!3367 = !DILocation(line: 0, scope: !575, inlinedAt: !3368)
!3368 = distinct !DILocation(line: 1450, column: 5, scope: !3227, inlinedAt: !3360)
!3369 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3368)
!3370 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3368)
!3371 = !DILocation(line: 1452, column: 28, scope: !3213, inlinedAt: !3360)
!3372 = !DILocation(line: 1450, column: 5, scope: !3227, inlinedAt: !3360)
!3373 = !DILocation(line: 1452, column: 43, scope: !3213, inlinedAt: !3360)
!3374 = !DILocation(line: 1452, column: 15, scope: !3213, inlinedAt: !3360)
!3375 = !DILocation(line: 1454, column: 16, scope: !3240, inlinedAt: !3360)
!3376 = !DILocation(line: 1454, column: 3, scope: !3241, inlinedAt: !3360)
!3377 = !DILocation(line: 1455, column: 23, scope: !3240, inlinedAt: !3360)
!3378 = !DILocation(line: 1455, column: 22, scope: !3240, inlinedAt: !3360)
!3379 = !DILocation(line: 1455, column: 38, scope: !3240, inlinedAt: !3360)
!3380 = !DILocation(line: 1455, column: 19, scope: !3240, inlinedAt: !3360)
!3381 = !DILocation(line: 1454, column: 25, scope: !3240, inlinedAt: !3360)
!3382 = distinct !{!3382, !3376, !3383}
!3383 = !DILocation(line: 1455, column: 40, scope: !3241, inlinedAt: !3360)
!3384 = distinct !{!3384, !686}
!3385 = !DILocation(line: 1517, column: 16, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !2, line: 1517, column: 3)
!3387 = distinct !DILexicalBlock(scope: !3333, file: !2, line: 1517, column: 3)
!3388 = !DILocation(line: 1517, column: 3, scope: !3387)
!3389 = !DILocation(line: 1518, column: 23, scope: !3386)
!3390 = !DILocation(line: 1518, column: 22, scope: !3386)
!3391 = !DILocation(line: 1518, column: 38, scope: !3386)
!3392 = !DILocation(line: 1518, column: 19, scope: !3386)
!3393 = !DILocation(line: 1517, column: 25, scope: !3386)
!3394 = distinct !{!3394, !3388, !3395}
!3395 = !DILocation(line: 1518, column: 40, scope: !3387)
!3396 = distinct !{!3396, !686}
!3397 = !DILocation(line: 1452, column: 12, scope: !3213, inlinedAt: !3360)
!3398 = !DILocation(line: 1515, column: 12, scope: !3333)
!3399 = !DILocation(line: 1520, column: 3, scope: !3333)
!3400 = distinct !DISubprogram(name: "get_mem4Dint64", scope: !2, file: !2, line: 1523, type: !3401, scopeLine: 1524, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3404)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!327, !3403, !327, !327, !327, !327}
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!3404 = !{!3405, !3406, !3407, !3408, !3409, !3410, !3411}
!3405 = !DILocalVariable(name: "array4D", arg: 1, scope: !3400, file: !2, line: 1523, type: !3403)
!3406 = !DILocalVariable(name: "dim0", arg: 2, scope: !3400, file: !2, line: 1523, type: !327)
!3407 = !DILocalVariable(name: "dim1", arg: 3, scope: !3400, file: !2, line: 1523, type: !327)
!3408 = !DILocalVariable(name: "dim2", arg: 4, scope: !3400, file: !2, line: 1523, type: !327)
!3409 = !DILocalVariable(name: "dim3", arg: 5, scope: !3400, file: !2, line: 1523, type: !327)
!3410 = !DILocalVariable(name: "i", scope: !3400, file: !2, line: 1525, type: !327)
!3411 = !DILocalVariable(name: "mem_size", scope: !3400, file: !2, line: 1525, type: !327)
!3412 = !DILocation(line: 0, scope: !3400)
!3413 = !DILocation(line: 1525, column: 22, scope: !3400)
!3414 = !DILocation(line: 1525, column: 27, scope: !3400)
!3415 = !DILocation(line: 1527, column: 31, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3400, file: !2, line: 1527, column: 6)
!3417 = !DILocation(line: 1527, column: 18, scope: !3416)
!3418 = !DILocation(line: 1527, column: 64, scope: !3416)
!3419 = !DILocation(line: 1527, column: 6, scope: !3400)
!3420 = !DILocation(line: 0, scope: !575, inlinedAt: !3421)
!3421 = distinct !DILocation(line: 1528, column: 5, scope: !3416)
!3422 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3421)
!3423 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3421)
!3424 = !DILocation(line: 1530, column: 30, scope: !3400)
!3425 = !DILocation(line: 1528, column: 5, scope: !3416)
!3426 = !DILocation(line: 1530, column: 45, scope: !3400)
!3427 = !DILocation(line: 0, scope: !3253, inlinedAt: !3428)
!3428 = distinct !DILocation(line: 1530, column: 15, scope: !3400)
!3429 = !DILocation(line: 1471, column: 22, scope: !3253, inlinedAt: !3428)
!3430 = !DILocation(line: 1471, column: 27, scope: !3253, inlinedAt: !3428)
!3431 = !DILocation(line: 1473, column: 30, scope: !3267, inlinedAt: !3428)
!3432 = !DILocation(line: 1473, column: 18, scope: !3267, inlinedAt: !3428)
!3433 = !DILocation(line: 1473, column: 62, scope: !3267, inlinedAt: !3428)
!3434 = !DILocation(line: 1473, column: 6, scope: !3253, inlinedAt: !3428)
!3435 = !DILocation(line: 0, scope: !575, inlinedAt: !3436)
!3436 = distinct !DILocation(line: 1474, column: 5, scope: !3267, inlinedAt: !3428)
!3437 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3436)
!3438 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3436)
!3439 = !DILocation(line: 1476, column: 30, scope: !3253, inlinedAt: !3428)
!3440 = !DILocation(line: 1474, column: 5, scope: !3267, inlinedAt: !3428)
!3441 = !DILocation(line: 1476, column: 45, scope: !3253, inlinedAt: !3428)
!3442 = !DILocation(line: 1476, column: 15, scope: !3253, inlinedAt: !3428)
!3443 = !DILocation(line: 1478, column: 16, scope: !3280, inlinedAt: !3428)
!3444 = !DILocation(line: 1478, column: 3, scope: !3281, inlinedAt: !3428)
!3445 = !DILocation(line: 1479, column: 23, scope: !3280, inlinedAt: !3428)
!3446 = !DILocation(line: 1479, column: 22, scope: !3280, inlinedAt: !3428)
!3447 = !DILocation(line: 1479, column: 38, scope: !3280, inlinedAt: !3428)
!3448 = !DILocation(line: 1479, column: 19, scope: !3280, inlinedAt: !3428)
!3449 = !DILocation(line: 1478, column: 25, scope: !3280, inlinedAt: !3428)
!3450 = distinct !{!3450, !3444, !3451}
!3451 = !DILocation(line: 1479, column: 40, scope: !3281, inlinedAt: !3428)
!3452 = distinct !{!3452, !686}
!3453 = !DILocation(line: 1532, column: 16, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3455, file: !2, line: 1532, column: 3)
!3455 = distinct !DILexicalBlock(scope: !3400, file: !2, line: 1532, column: 3)
!3456 = !DILocation(line: 1532, column: 3, scope: !3455)
!3457 = !DILocation(line: 1533, column: 23, scope: !3454)
!3458 = !DILocation(line: 1533, column: 22, scope: !3454)
!3459 = !DILocation(line: 1533, column: 38, scope: !3454)
!3460 = !DILocation(line: 1533, column: 19, scope: !3454)
!3461 = !DILocation(line: 1532, column: 25, scope: !3454)
!3462 = distinct !{!3462, !3456, !3463}
!3463 = !DILocation(line: 1533, column: 40, scope: !3455)
!3464 = distinct !{!3464, !686}
!3465 = !DILocation(line: 1476, column: 12, scope: !3253, inlinedAt: !3428)
!3466 = !DILocation(line: 1530, column: 12, scope: !3400)
!3467 = !DILocation(line: 1535, column: 3, scope: !3400)
!3468 = distinct !DISubprogram(name: "get_mem4Ddistblk", scope: !2, file: !2, line: 1538, type: !3469, scopeLine: 1539, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3472)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!327, !3471, !327, !327, !327, !327}
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!3472 = !{!3473, !3474, !3475, !3476, !3477, !3478, !3479}
!3473 = !DILocalVariable(name: "array4D", arg: 1, scope: !3468, file: !2, line: 1538, type: !3471)
!3474 = !DILocalVariable(name: "dim0", arg: 2, scope: !3468, file: !2, line: 1538, type: !327)
!3475 = !DILocalVariable(name: "dim1", arg: 3, scope: !3468, file: !2, line: 1538, type: !327)
!3476 = !DILocalVariable(name: "dim2", arg: 4, scope: !3468, file: !2, line: 1538, type: !327)
!3477 = !DILocalVariable(name: "dim3", arg: 5, scope: !3468, file: !2, line: 1538, type: !327)
!3478 = !DILocalVariable(name: "i", scope: !3468, file: !2, line: 1540, type: !327)
!3479 = !DILocalVariable(name: "mem_size", scope: !3468, file: !2, line: 1540, type: !327)
!3480 = !DILocation(line: 0, scope: !3468)
!3481 = !DILocation(line: 1540, column: 22, scope: !3468)
!3482 = !DILocation(line: 1540, column: 27, scope: !3468)
!3483 = !DILocation(line: 1542, column: 33, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3468, file: !2, line: 1542, column: 6)
!3485 = !DILocation(line: 1542, column: 18, scope: !3484)
!3486 = !DILocation(line: 1542, column: 68, scope: !3484)
!3487 = !DILocation(line: 1542, column: 6, scope: !3468)
!3488 = !DILocation(line: 0, scope: !575, inlinedAt: !3489)
!3489 = distinct !DILocation(line: 1543, column: 5, scope: !3484)
!3490 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3489)
!3491 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3489)
!3492 = !DILocation(line: 1545, column: 32, scope: !3468)
!3493 = !DILocation(line: 1543, column: 5, scope: !3484)
!3494 = !DILocation(line: 1545, column: 47, scope: !3468)
!3495 = !DILocation(line: 0, scope: !3293, inlinedAt: !3496)
!3496 = distinct !DILocation(line: 1545, column: 15, scope: !3468)
!3497 = !DILocation(line: 1486, column: 22, scope: !3293, inlinedAt: !3496)
!3498 = !DILocation(line: 1486, column: 27, scope: !3293, inlinedAt: !3496)
!3499 = !DILocation(line: 1488, column: 32, scope: !3307, inlinedAt: !3496)
!3500 = !DILocation(line: 1488, column: 18, scope: !3307, inlinedAt: !3496)
!3501 = !DILocation(line: 1488, column: 66, scope: !3307, inlinedAt: !3496)
!3502 = !DILocation(line: 1488, column: 6, scope: !3293, inlinedAt: !3496)
!3503 = !DILocation(line: 0, scope: !575, inlinedAt: !3504)
!3504 = distinct !DILocation(line: 1489, column: 5, scope: !3307, inlinedAt: !3496)
!3505 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3504)
!3506 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3504)
!3507 = !DILocation(line: 1491, column: 32, scope: !3293, inlinedAt: !3496)
!3508 = !DILocation(line: 1489, column: 5, scope: !3307, inlinedAt: !3496)
!3509 = !DILocation(line: 1491, column: 47, scope: !3293, inlinedAt: !3496)
!3510 = !DILocation(line: 1491, column: 15, scope: !3293, inlinedAt: !3496)
!3511 = !DILocation(line: 1493, column: 16, scope: !3320, inlinedAt: !3496)
!3512 = !DILocation(line: 1493, column: 3, scope: !3321, inlinedAt: !3496)
!3513 = !DILocation(line: 1494, column: 23, scope: !3320, inlinedAt: !3496)
!3514 = !DILocation(line: 1494, column: 22, scope: !3320, inlinedAt: !3496)
!3515 = !DILocation(line: 1494, column: 38, scope: !3320, inlinedAt: !3496)
!3516 = !DILocation(line: 1494, column: 19, scope: !3320, inlinedAt: !3496)
!3517 = !DILocation(line: 1493, column: 25, scope: !3320, inlinedAt: !3496)
!3518 = distinct !{!3518, !3512, !3519}
!3519 = !DILocation(line: 1494, column: 40, scope: !3321, inlinedAt: !3496)
!3520 = distinct !{!3520, !686}
!3521 = !DILocation(line: 1547, column: 16, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3523, file: !2, line: 1547, column: 3)
!3523 = distinct !DILexicalBlock(scope: !3468, file: !2, line: 1547, column: 3)
!3524 = !DILocation(line: 1547, column: 3, scope: !3523)
!3525 = !DILocation(line: 1548, column: 23, scope: !3522)
!3526 = !DILocation(line: 1548, column: 22, scope: !3522)
!3527 = !DILocation(line: 1548, column: 38, scope: !3522)
!3528 = !DILocation(line: 1548, column: 19, scope: !3522)
!3529 = !DILocation(line: 1547, column: 25, scope: !3522)
!3530 = distinct !{!3530, !3524, !3531}
!3531 = !DILocation(line: 1548, column: 40, scope: !3523)
!3532 = distinct !{!3532, !686}
!3533 = !DILocation(line: 1491, column: 12, scope: !3293, inlinedAt: !3496)
!3534 = !DILocation(line: 1545, column: 12, scope: !3468)
!3535 = !DILocation(line: 1550, column: 3, scope: !3468)
!3536 = distinct !DISubprogram(name: "get_mem5Dint", scope: !2, file: !2, line: 1562, type: !3537, scopeLine: 1563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3540)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{!327, !3539, !327, !327, !327, !327, !327}
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!3540 = !{!3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548}
!3541 = !DILocalVariable(name: "array5D", arg: 1, scope: !3536, file: !2, line: 1562, type: !3539)
!3542 = !DILocalVariable(name: "dim0", arg: 2, scope: !3536, file: !2, line: 1562, type: !327)
!3543 = !DILocalVariable(name: "dim1", arg: 3, scope: !3536, file: !2, line: 1562, type: !327)
!3544 = !DILocalVariable(name: "dim2", arg: 4, scope: !3536, file: !2, line: 1562, type: !327)
!3545 = !DILocalVariable(name: "dim3", arg: 5, scope: !3536, file: !2, line: 1562, type: !327)
!3546 = !DILocalVariable(name: "dim4", arg: 6, scope: !3536, file: !2, line: 1562, type: !327)
!3547 = !DILocalVariable(name: "i", scope: !3536, file: !2, line: 1564, type: !327)
!3548 = !DILocalVariable(name: "mem_size", scope: !3536, file: !2, line: 1564, type: !327)
!3549 = !DILocation(line: 0, scope: !3536)
!3550 = !DILocation(line: 1564, column: 22, scope: !3536)
!3551 = !DILocation(line: 1564, column: 27, scope: !3536)
!3552 = !DILocation(line: 1566, column: 30, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3536, file: !2, line: 1566, column: 6)
!3554 = !DILocation(line: 1566, column: 18, scope: !3553)
!3555 = !DILocation(line: 1566, column: 62, scope: !3553)
!3556 = !DILocation(line: 1566, column: 6, scope: !3536)
!3557 = !DILocation(line: 0, scope: !575, inlinedAt: !3558)
!3558 = distinct !DILocation(line: 1567, column: 5, scope: !3553)
!3559 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3558)
!3560 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3558)
!3561 = !DILocation(line: 1569, column: 28, scope: !3536)
!3562 = !DILocation(line: 1567, column: 5, scope: !3553)
!3563 = !DILocation(line: 1569, column: 43, scope: !3536)
!3564 = !DILocation(line: 1569, column: 15, scope: !3536)
!3565 = !DILocation(line: 1571, column: 16, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !2, line: 1571, column: 3)
!3567 = distinct !DILexicalBlock(scope: !3536, file: !2, line: 1571, column: 3)
!3568 = !DILocation(line: 1571, column: 3, scope: !3567)
!3569 = !DILocation(line: 1572, column: 23, scope: !3566)
!3570 = !DILocation(line: 1572, column: 22, scope: !3566)
!3571 = !DILocation(line: 1572, column: 38, scope: !3566)
!3572 = !DILocation(line: 1572, column: 19, scope: !3566)
!3573 = !DILocation(line: 1571, column: 25, scope: !3566)
!3574 = distinct !{!3574, !3568, !3575}
!3575 = !DILocation(line: 1572, column: 40, scope: !3567)
!3576 = distinct !{!3576, !686}
!3577 = !DILocation(line: 1569, column: 12, scope: !3536)
!3578 = !DILocation(line: 1574, column: 3, scope: !3536)
!3579 = distinct !DISubprogram(name: "free_mem2D", scope: !2, file: !2, line: 1585, type: !3580, scopeLine: 1586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3582)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !519}
!3582 = !{!3583}
!3583 = !DILocalVariable(name: "array2D", arg: 1, scope: !3579, file: !2, line: 1585, type: !519)
!3584 = !DILocation(line: 0, scope: !3579)
!3585 = !DILocation(line: 1587, column: 7, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3579, file: !2, line: 1587, column: 7)
!3587 = !DILocation(line: 1587, column: 7, scope: !3579)
!3588 = !DILocation(line: 1589, column: 9, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3590, file: !2, line: 1589, column: 9)
!3590 = distinct !DILexicalBlock(scope: !3586, file: !2, line: 1588, column: 3)
!3591 = !DILocation(line: 1589, column: 9, scope: !3590)
!3592 = !DILocation(line: 1590, column: 7, scope: !3589)
!3593 = !DILocation(line: 1592, column: 7, scope: !3589)
!3594 = !DILocation(line: 1594, column: 5, scope: !3590)
!3595 = !DILocation(line: 1595, column: 3, scope: !3590)
!3596 = !DILocation(line: 1598, column: 5, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3586, file: !2, line: 1597, column: 3)
!3598 = !DILocation(line: 1600, column: 1, scope: !3579)
!3599 = distinct !DISubprogram(name: "free_mem2Dint", scope: !2, file: !2, line: 1609, type: !3600, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3602)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{null, !520}
!3602 = !{!3603}
!3603 = !DILocalVariable(name: "array2D", arg: 1, scope: !3599, file: !2, line: 1609, type: !520)
!3604 = !DILocation(line: 0, scope: !3599)
!3605 = !DILocation(line: 1611, column: 7, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3599, file: !2, line: 1611, column: 7)
!3607 = !DILocation(line: 1611, column: 7, scope: !3599)
!3608 = !DILocation(line: 1613, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !2, line: 1613, column: 9)
!3610 = distinct !DILexicalBlock(scope: !3606, file: !2, line: 1612, column: 3)
!3611 = !DILocation(line: 1613, column: 9, scope: !3610)
!3612 = !DILocation(line: 1614, column: 7, scope: !3609)
!3613 = !DILocation(line: 1616, column: 7, scope: !3609)
!3614 = !DILocation(line: 1618, column: 5, scope: !3610)
!3615 = !DILocation(line: 1619, column: 3, scope: !3610)
!3616 = !DILocation(line: 1622, column: 5, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3606, file: !2, line: 1621, column: 3)
!3618 = !DILocation(line: 1624, column: 1, scope: !3599)
!3619 = distinct !DISubprogram(name: "free_mem2DintWithPad", scope: !2, file: !2, line: 1626, type: !3620, scopeLine: 1627, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3622)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{null, !520, !327, !327}
!3622 = !{!3623, !3624, !3625}
!3623 = !DILocalVariable(name: "array2D", arg: 1, scope: !3619, file: !2, line: 1626, type: !520)
!3624 = !DILocalVariable(name: "iPadY", arg: 2, scope: !3619, file: !2, line: 1626, type: !327)
!3625 = !DILocalVariable(name: "iPadX", arg: 3, scope: !3619, file: !2, line: 1626, type: !327)
!3626 = !DILocation(line: 0, scope: !3619)
!3627 = !DILocation(line: 1628, column: 7, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3619, file: !2, line: 1628, column: 7)
!3629 = !DILocation(line: 1628, column: 7, scope: !3619)
!3630 = !DILocation(line: 1630, column: 9, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !2, line: 1630, column: 9)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !2, line: 1629, column: 3)
!3633 = !DILocation(line: 1630, column: 9, scope: !3632)
!3634 = !DILocation(line: 1631, column: 21, scope: !3631)
!3635 = !DILocation(line: 1631, column: 13, scope: !3631)
!3636 = !DILocation(line: 1631, column: 28, scope: !3631)
!3637 = !DILocation(line: 1631, column: 7, scope: !3631)
!3638 = !DILocation(line: 1633, column: 7, scope: !3631)
!3639 = !DILocation(line: 1635, column: 20, scope: !3632)
!3640 = !DILocation(line: 1635, column: 12, scope: !3632)
!3641 = !DILocation(line: 1635, column: 5, scope: !3632)
!3642 = !DILocation(line: 1636, column: 3, scope: !3632)
!3643 = !DILocation(line: 1639, column: 5, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3628, file: !2, line: 1638, column: 3)
!3645 = !DILocation(line: 1641, column: 1, scope: !3619)
!3646 = distinct !DISubprogram(name: "free_mem2Dint64", scope: !2, file: !2, line: 1650, type: !3647, scopeLine: 1651, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3649)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{null, !522}
!3649 = !{!3650}
!3650 = !DILocalVariable(name: "array2D", arg: 1, scope: !3646, file: !2, line: 1650, type: !522)
!3651 = !DILocation(line: 0, scope: !3646)
!3652 = !DILocation(line: 1652, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3646, file: !2, line: 1652, column: 7)
!3654 = !DILocation(line: 1652, column: 7, scope: !3646)
!3655 = !DILocation(line: 1654, column: 9, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !2, line: 1654, column: 9)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !2, line: 1653, column: 3)
!3658 = !DILocation(line: 1654, column: 9, scope: !3657)
!3659 = !DILocation(line: 1655, column: 7, scope: !3656)
!3660 = !DILocation(line: 1657, column: 7, scope: !3656)
!3661 = !DILocation(line: 1658, column: 5, scope: !3657)
!3662 = !DILocation(line: 1659, column: 3, scope: !3657)
!3663 = !DILocation(line: 1662, column: 5, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3653, file: !2, line: 1661, column: 3)
!3665 = !DILocation(line: 1664, column: 1, scope: !3646)
!3666 = distinct !DISubprogram(name: "free_mem3D", scope: !2, file: !2, line: 1674, type: !3667, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3669)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{null, !526}
!3669 = !{!3670}
!3670 = !DILocalVariable(name: "array3D", arg: 1, scope: !3666, file: !2, line: 1674, type: !526)
!3671 = !DILocation(line: 0, scope: !3666)
!3672 = !DILocation(line: 1676, column: 7, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3666, file: !2, line: 1676, column: 7)
!3674 = !DILocation(line: 1676, column: 7, scope: !3666)
!3675 = !DILocation(line: 1678, column: 15, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 1677, column: 3)
!3677 = !DILocation(line: 0, scope: !3579, inlinedAt: !3678)
!3678 = distinct !DILocation(line: 1678, column: 4, scope: !3676)
!3679 = !DILocation(line: 1587, column: 7, scope: !3586, inlinedAt: !3678)
!3680 = !DILocation(line: 1587, column: 7, scope: !3579, inlinedAt: !3678)
!3681 = !DILocation(line: 1589, column: 9, scope: !3589, inlinedAt: !3678)
!3682 = !DILocation(line: 1589, column: 9, scope: !3590, inlinedAt: !3678)
!3683 = !DILocation(line: 1590, column: 7, scope: !3589, inlinedAt: !3678)
!3684 = !DILocation(line: 1592, column: 7, scope: !3589, inlinedAt: !3678)
!3685 = !DILocation(line: 1594, column: 5, scope: !3590, inlinedAt: !3678)
!3686 = !DILocation(line: 1595, column: 3, scope: !3590, inlinedAt: !3678)
!3687 = !DILocation(line: 1598, column: 5, scope: !3597, inlinedAt: !3678)
!3688 = !DILocation(line: 1679, column: 4, scope: !3676)
!3689 = !DILocation(line: 1680, column: 3, scope: !3676)
!3690 = !DILocation(line: 1683, column: 5, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3673, file: !2, line: 1682, column: 3)
!3692 = !DILocation(line: 1685, column: 1, scope: !3666)
!3693 = distinct !DISubprogram(name: "free_mem4D", scope: !2, file: !2, line: 1694, type: !3694, scopeLine: 1695, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3696)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{null, !527}
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "array4D", arg: 1, scope: !3693, file: !2, line: 1694, type: !527)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 1696, column: 7, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3693, file: !2, line: 1696, column: 7)
!3701 = !DILocation(line: 1696, column: 7, scope: !3693)
!3702 = !DILocation(line: 1698, column: 15, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3700, file: !2, line: 1697, column: 3)
!3704 = !DILocation(line: 0, scope: !3666, inlinedAt: !3705)
!3705 = distinct !DILocation(line: 1698, column: 4, scope: !3703)
!3706 = !DILocation(line: 1676, column: 7, scope: !3673, inlinedAt: !3705)
!3707 = !DILocation(line: 1676, column: 7, scope: !3666, inlinedAt: !3705)
!3708 = !DILocation(line: 1678, column: 15, scope: !3676, inlinedAt: !3705)
!3709 = !DILocation(line: 0, scope: !3579, inlinedAt: !3710)
!3710 = distinct !DILocation(line: 1678, column: 4, scope: !3676, inlinedAt: !3705)
!3711 = !DILocation(line: 1587, column: 7, scope: !3586, inlinedAt: !3710)
!3712 = !DILocation(line: 1587, column: 7, scope: !3579, inlinedAt: !3710)
!3713 = !DILocation(line: 1589, column: 9, scope: !3589, inlinedAt: !3710)
!3714 = !DILocation(line: 1589, column: 9, scope: !3590, inlinedAt: !3710)
!3715 = !DILocation(line: 1590, column: 7, scope: !3589, inlinedAt: !3710)
!3716 = !DILocation(line: 1592, column: 7, scope: !3589, inlinedAt: !3710)
!3717 = !DILocation(line: 1594, column: 5, scope: !3590, inlinedAt: !3710)
!3718 = !DILocation(line: 1595, column: 3, scope: !3590, inlinedAt: !3710)
!3719 = !DILocation(line: 1598, column: 5, scope: !3597, inlinedAt: !3710)
!3720 = !DILocation(line: 1679, column: 4, scope: !3676, inlinedAt: !3705)
!3721 = !DILocation(line: 1680, column: 3, scope: !3676, inlinedAt: !3705)
!3722 = !DILocation(line: 1683, column: 5, scope: !3691, inlinedAt: !3705)
!3723 = !DILocation(line: 1699, column: 4, scope: !3703)
!3724 = !DILocation(line: 1700, column: 3, scope: !3703)
!3725 = !DILocation(line: 1703, column: 5, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3700, file: !2, line: 1702, column: 3)
!3727 = !DILocation(line: 1705, column: 1, scope: !3693)
!3728 = distinct !DISubprogram(name: "free_mem3Dint", scope: !2, file: !2, line: 1714, type: !3729, scopeLine: 1715, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3731)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{null, !528}
!3731 = !{!3732}
!3732 = !DILocalVariable(name: "array3D", arg: 1, scope: !3728, file: !2, line: 1714, type: !528)
!3733 = !DILocation(line: 0, scope: !3728)
!3734 = !DILocation(line: 1716, column: 7, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3728, file: !2, line: 1716, column: 7)
!3736 = !DILocation(line: 1716, column: 7, scope: !3728)
!3737 = !DILocation(line: 1718, column: 18, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3735, file: !2, line: 1717, column: 3)
!3739 = !DILocation(line: 0, scope: !3599, inlinedAt: !3740)
!3740 = distinct !DILocation(line: 1718, column: 4, scope: !3738)
!3741 = !DILocation(line: 1611, column: 7, scope: !3606, inlinedAt: !3740)
!3742 = !DILocation(line: 1611, column: 7, scope: !3599, inlinedAt: !3740)
!3743 = !DILocation(line: 1613, column: 9, scope: !3609, inlinedAt: !3740)
!3744 = !DILocation(line: 1613, column: 9, scope: !3610, inlinedAt: !3740)
!3745 = !DILocation(line: 1614, column: 7, scope: !3609, inlinedAt: !3740)
!3746 = !DILocation(line: 1616, column: 7, scope: !3609, inlinedAt: !3740)
!3747 = !DILocation(line: 1618, column: 5, scope: !3610, inlinedAt: !3740)
!3748 = !DILocation(line: 1619, column: 3, scope: !3610, inlinedAt: !3740)
!3749 = !DILocation(line: 1622, column: 5, scope: !3617, inlinedAt: !3740)
!3750 = !DILocation(line: 1719, column: 4, scope: !3738)
!3751 = !DILocation(line: 1720, column: 3, scope: !3738)
!3752 = !DILocation(line: 1723, column: 5, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3735, file: !2, line: 1722, column: 3)
!3754 = !DILocation(line: 1725, column: 1, scope: !3728)
!3755 = distinct !DISubprogram(name: "free_mem3Dint64", scope: !2, file: !2, line: 1735, type: !3756, scopeLine: 1736, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !529}
!3758 = !{!3759}
!3759 = !DILocalVariable(name: "array3D", arg: 1, scope: !3755, file: !2, line: 1735, type: !529)
!3760 = !DILocation(line: 0, scope: !3755)
!3761 = !DILocation(line: 1737, column: 7, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3755, file: !2, line: 1737, column: 7)
!3763 = !DILocation(line: 1737, column: 7, scope: !3755)
!3764 = !DILocation(line: 1739, column: 20, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3762, file: !2, line: 1738, column: 3)
!3766 = !DILocation(line: 0, scope: !3646, inlinedAt: !3767)
!3767 = distinct !DILocation(line: 1739, column: 4, scope: !3765)
!3768 = !DILocation(line: 1652, column: 7, scope: !3653, inlinedAt: !3767)
!3769 = !DILocation(line: 1652, column: 7, scope: !3646, inlinedAt: !3767)
!3770 = !DILocation(line: 1654, column: 9, scope: !3656, inlinedAt: !3767)
!3771 = !DILocation(line: 1654, column: 9, scope: !3657, inlinedAt: !3767)
!3772 = !DILocation(line: 1655, column: 7, scope: !3656, inlinedAt: !3767)
!3773 = !DILocation(line: 1657, column: 7, scope: !3656, inlinedAt: !3767)
!3774 = !DILocation(line: 1658, column: 5, scope: !3657, inlinedAt: !3767)
!3775 = !DILocation(line: 1659, column: 3, scope: !3657, inlinedAt: !3767)
!3776 = !DILocation(line: 1662, column: 5, scope: !3664, inlinedAt: !3767)
!3777 = !DILocation(line: 1740, column: 4, scope: !3765)
!3778 = !DILocation(line: 1741, column: 3, scope: !3765)
!3779 = !DILocation(line: 1744, column: 5, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3762, file: !2, line: 1743, column: 3)
!3781 = !DILocation(line: 1746, column: 1, scope: !3755)
!3782 = distinct !DISubprogram(name: "free_mem3Ddistblk", scope: !2, file: !2, line: 1748, type: !3783, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3785)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !530}
!3785 = !{!3786}
!3786 = !DILocalVariable(name: "array3D", arg: 1, scope: !3782, file: !2, line: 1748, type: !530)
!3787 = !DILocation(line: 0, scope: !3782)
!3788 = !DILocation(line: 1750, column: 7, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3782, file: !2, line: 1750, column: 7)
!3790 = !DILocation(line: 1750, column: 7, scope: !3782)
!3791 = !DILocation(line: 1752, column: 22, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3789, file: !2, line: 1751, column: 3)
!3793 = !DILocalVariable(name: "array2D", arg: 1, scope: !3794, file: !2, line: 2761, type: !524)
!3794 = distinct !DISubprogram(name: "free_mem2Ddistblk", scope: !2, file: !2, line: 2761, type: !3795, scopeLine: 2762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3797)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{null, !524}
!3797 = !{!3793}
!3798 = !DILocation(line: 0, scope: !3794, inlinedAt: !3799)
!3799 = distinct !DILocation(line: 1752, column: 4, scope: !3792)
!3800 = !DILocation(line: 2763, column: 7, scope: !3801, inlinedAt: !3799)
!3801 = distinct !DILexicalBlock(scope: !3794, file: !2, line: 2763, column: 7)
!3802 = !DILocation(line: 2763, column: 7, scope: !3794, inlinedAt: !3799)
!3803 = !DILocation(line: 2765, column: 9, scope: !3804, inlinedAt: !3799)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !2, line: 2765, column: 9)
!3805 = distinct !DILexicalBlock(scope: !3801, file: !2, line: 2764, column: 3)
!3806 = !DILocation(line: 2765, column: 9, scope: !3805, inlinedAt: !3799)
!3807 = !DILocation(line: 2766, column: 7, scope: !3804, inlinedAt: !3799)
!3808 = !DILocation(line: 2768, column: 7, scope: !3804, inlinedAt: !3799)
!3809 = !DILocation(line: 2769, column: 5, scope: !3805, inlinedAt: !3799)
!3810 = !DILocation(line: 2770, column: 3, scope: !3805, inlinedAt: !3799)
!3811 = !DILocation(line: 2773, column: 5, scope: !3812, inlinedAt: !3799)
!3812 = distinct !DILexicalBlock(scope: !3801, file: !2, line: 2772, column: 3)
!3813 = !DILocation(line: 1753, column: 4, scope: !3792)
!3814 = !DILocation(line: 1754, column: 3, scope: !3792)
!3815 = !DILocation(line: 1757, column: 5, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3789, file: !2, line: 1756, column: 3)
!3817 = !DILocation(line: 1759, column: 1, scope: !3782)
!3818 = !DILocation(line: 0, scope: !3794)
!3819 = !DILocation(line: 2763, column: 7, scope: !3801)
!3820 = !DILocation(line: 2763, column: 7, scope: !3794)
!3821 = !DILocation(line: 2765, column: 9, scope: !3804)
!3822 = !DILocation(line: 2765, column: 9, scope: !3805)
!3823 = !DILocation(line: 2766, column: 7, scope: !3804)
!3824 = !DILocation(line: 2768, column: 7, scope: !3804)
!3825 = !DILocation(line: 2769, column: 5, scope: !3805)
!3826 = !DILocation(line: 2770, column: 3, scope: !3805)
!3827 = !DILocation(line: 2773, column: 5, scope: !3812)
!3828 = !DILocation(line: 2775, column: 1, scope: !3794)
!3829 = distinct !DISubprogram(name: "free_mem4Dint", scope: !2, file: !2, line: 1768, type: !3830, scopeLine: 1769, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3832)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{null, !531}
!3832 = !{!3833}
!3833 = !DILocalVariable(name: "array4D", arg: 1, scope: !3829, file: !2, line: 1768, type: !531)
!3834 = !DILocation(line: 0, scope: !3829)
!3835 = !DILocation(line: 1770, column: 7, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3829, file: !2, line: 1770, column: 7)
!3837 = !DILocation(line: 1770, column: 7, scope: !3829)
!3838 = !DILocation(line: 1772, column: 20, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3836, file: !2, line: 1771, column: 3)
!3840 = !DILocation(line: 0, scope: !3728, inlinedAt: !3841)
!3841 = distinct !DILocation(line: 1772, column: 5, scope: !3839)
!3842 = !DILocation(line: 1716, column: 7, scope: !3735, inlinedAt: !3841)
!3843 = !DILocation(line: 1716, column: 7, scope: !3728, inlinedAt: !3841)
!3844 = !DILocation(line: 1718, column: 18, scope: !3738, inlinedAt: !3841)
!3845 = !DILocation(line: 0, scope: !3599, inlinedAt: !3846)
!3846 = distinct !DILocation(line: 1718, column: 4, scope: !3738, inlinedAt: !3841)
!3847 = !DILocation(line: 1611, column: 7, scope: !3606, inlinedAt: !3846)
!3848 = !DILocation(line: 1611, column: 7, scope: !3599, inlinedAt: !3846)
!3849 = !DILocation(line: 1613, column: 9, scope: !3609, inlinedAt: !3846)
!3850 = !DILocation(line: 1613, column: 9, scope: !3610, inlinedAt: !3846)
!3851 = !DILocation(line: 1614, column: 7, scope: !3609, inlinedAt: !3846)
!3852 = !DILocation(line: 1616, column: 7, scope: !3609, inlinedAt: !3846)
!3853 = !DILocation(line: 1618, column: 5, scope: !3610, inlinedAt: !3846)
!3854 = !DILocation(line: 1619, column: 3, scope: !3610, inlinedAt: !3846)
!3855 = !DILocation(line: 1622, column: 5, scope: !3617, inlinedAt: !3846)
!3856 = !DILocation(line: 1719, column: 4, scope: !3738, inlinedAt: !3841)
!3857 = !DILocation(line: 1720, column: 3, scope: !3738, inlinedAt: !3841)
!3858 = !DILocation(line: 1723, column: 5, scope: !3753, inlinedAt: !3841)
!3859 = !DILocation(line: 1773, column: 5, scope: !3839)
!3860 = !DILocation(line: 1774, column: 3, scope: !3839)
!3861 = !DILocation(line: 1776, column: 5, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3836, file: !2, line: 1775, column: 3)
!3863 = !DILocation(line: 1778, column: 1, scope: !3829)
!3864 = distinct !DISubprogram(name: "free_mem4Dint64", scope: !2, file: !2, line: 1780, type: !3865, scopeLine: 1781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{null, !532}
!3867 = !{!3868}
!3868 = !DILocalVariable(name: "array4D", arg: 1, scope: !3864, file: !2, line: 1780, type: !532)
!3869 = !DILocation(line: 0, scope: !3864)
!3870 = !DILocation(line: 1782, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3864, file: !2, line: 1782, column: 7)
!3872 = !DILocation(line: 1782, column: 7, scope: !3864)
!3873 = !DILocation(line: 1784, column: 22, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !2, line: 1783, column: 3)
!3875 = !DILocation(line: 0, scope: !3755, inlinedAt: !3876)
!3876 = distinct !DILocation(line: 1784, column: 5, scope: !3874)
!3877 = !DILocation(line: 1737, column: 7, scope: !3762, inlinedAt: !3876)
!3878 = !DILocation(line: 1737, column: 7, scope: !3755, inlinedAt: !3876)
!3879 = !DILocation(line: 1739, column: 20, scope: !3765, inlinedAt: !3876)
!3880 = !DILocation(line: 0, scope: !3646, inlinedAt: !3881)
!3881 = distinct !DILocation(line: 1739, column: 4, scope: !3765, inlinedAt: !3876)
!3882 = !DILocation(line: 1652, column: 7, scope: !3653, inlinedAt: !3881)
!3883 = !DILocation(line: 1652, column: 7, scope: !3646, inlinedAt: !3881)
!3884 = !DILocation(line: 1654, column: 9, scope: !3656, inlinedAt: !3881)
!3885 = !DILocation(line: 1654, column: 9, scope: !3657, inlinedAt: !3881)
!3886 = !DILocation(line: 1655, column: 7, scope: !3656, inlinedAt: !3881)
!3887 = !DILocation(line: 1657, column: 7, scope: !3656, inlinedAt: !3881)
!3888 = !DILocation(line: 1658, column: 5, scope: !3657, inlinedAt: !3881)
!3889 = !DILocation(line: 1659, column: 3, scope: !3657, inlinedAt: !3881)
!3890 = !DILocation(line: 1662, column: 5, scope: !3664, inlinedAt: !3881)
!3891 = !DILocation(line: 1740, column: 4, scope: !3765, inlinedAt: !3876)
!3892 = !DILocation(line: 1741, column: 3, scope: !3765, inlinedAt: !3876)
!3893 = !DILocation(line: 1744, column: 5, scope: !3780, inlinedAt: !3876)
!3894 = !DILocation(line: 1785, column: 5, scope: !3874)
!3895 = !DILocation(line: 1786, column: 3, scope: !3874)
!3896 = !DILocation(line: 1788, column: 5, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3871, file: !2, line: 1787, column: 3)
!3898 = !DILocation(line: 1790, column: 1, scope: !3864)
!3899 = distinct !DISubprogram(name: "free_mem4Ddistblk", scope: !2, file: !2, line: 1792, type: !3900, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3902)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{null, !533}
!3902 = !{!3903}
!3903 = !DILocalVariable(name: "array4D", arg: 1, scope: !3899, file: !2, line: 1792, type: !533)
!3904 = !DILocation(line: 0, scope: !3899)
!3905 = !DILocation(line: 1794, column: 7, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3899, file: !2, line: 1794, column: 7)
!3907 = !DILocation(line: 1794, column: 7, scope: !3899)
!3908 = !DILocation(line: 1796, column: 24, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3906, file: !2, line: 1795, column: 3)
!3910 = !DILocation(line: 0, scope: !3782, inlinedAt: !3911)
!3911 = distinct !DILocation(line: 1796, column: 5, scope: !3909)
!3912 = !DILocation(line: 1750, column: 7, scope: !3789, inlinedAt: !3911)
!3913 = !DILocation(line: 1750, column: 7, scope: !3782, inlinedAt: !3911)
!3914 = !DILocation(line: 1752, column: 22, scope: !3792, inlinedAt: !3911)
!3915 = !DILocation(line: 0, scope: !3794, inlinedAt: !3916)
!3916 = distinct !DILocation(line: 1752, column: 4, scope: !3792, inlinedAt: !3911)
!3917 = !DILocation(line: 2763, column: 7, scope: !3801, inlinedAt: !3916)
!3918 = !DILocation(line: 2763, column: 7, scope: !3794, inlinedAt: !3916)
!3919 = !DILocation(line: 2765, column: 9, scope: !3804, inlinedAt: !3916)
!3920 = !DILocation(line: 2765, column: 9, scope: !3805, inlinedAt: !3916)
!3921 = !DILocation(line: 2766, column: 7, scope: !3804, inlinedAt: !3916)
!3922 = !DILocation(line: 2768, column: 7, scope: !3804, inlinedAt: !3916)
!3923 = !DILocation(line: 2769, column: 5, scope: !3805, inlinedAt: !3916)
!3924 = !DILocation(line: 2770, column: 3, scope: !3805, inlinedAt: !3916)
!3925 = !DILocation(line: 2773, column: 5, scope: !3812, inlinedAt: !3916)
!3926 = !DILocation(line: 1753, column: 4, scope: !3792, inlinedAt: !3911)
!3927 = !DILocation(line: 1754, column: 3, scope: !3792, inlinedAt: !3911)
!3928 = !DILocation(line: 1757, column: 5, scope: !3816, inlinedAt: !3911)
!3929 = !DILocation(line: 1797, column: 5, scope: !3909)
!3930 = !DILocation(line: 1798, column: 3, scope: !3909)
!3931 = !DILocation(line: 1800, column: 5, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3906, file: !2, line: 1799, column: 3)
!3933 = !DILocation(line: 1802, column: 1, scope: !3899)
!3934 = distinct !DISubprogram(name: "free_mem5Dint", scope: !2, file: !2, line: 1811, type: !3935, scopeLine: 1812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !534}
!3937 = !{!3938}
!3938 = !DILocalVariable(name: "array5D", arg: 1, scope: !3934, file: !2, line: 1811, type: !534)
!3939 = !DILocation(line: 0, scope: !3934)
!3940 = !DILocation(line: 1813, column: 7, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3934, file: !2, line: 1813, column: 7)
!3942 = !DILocation(line: 1813, column: 7, scope: !3934)
!3943 = !DILocation(line: 1815, column: 20, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !2, line: 1814, column: 3)
!3945 = !DILocation(line: 1815, column: 5, scope: !3944)
!3946 = !DILocation(line: 1816, column: 5, scope: !3944)
!3947 = !DILocation(line: 1817, column: 3, scope: !3944)
!3948 = !DILocation(line: 1819, column: 5, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3941, file: !2, line: 1818, column: 3)
!3950 = !DILocation(line: 1821, column: 1, scope: !3934)
!3951 = !DISubprogram(name: "snprintf", scope: !3952, file: !3952, line: 378, type: !3953, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3952 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "f31eefcc3f15835fc5a4023a625cf609")
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!327, !3955, !619, !3956, null}
!3955 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !578)
!3956 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3957)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4)
!3959 = distinct !DISubprogram(name: "new_mem2Duint16", scope: !2, file: !2, line: 1847, type: !3960, scopeLine: 1848, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!535, !327, !327}
!3962 = !{!3963, !3964, !3965, !3966}
!3963 = !DILocalVariable(name: "dim0", arg: 1, scope: !3959, file: !2, line: 1847, type: !327)
!3964 = !DILocalVariable(name: "dim1", arg: 2, scope: !3959, file: !2, line: 1847, type: !327)
!3965 = !DILocalVariable(name: "i", scope: !3959, file: !2, line: 1849, type: !327)
!3966 = !DILocalVariable(name: "array2D", scope: !3959, file: !2, line: 1850, type: !535)
!3967 = !DILocation(line: 0, scope: !3959)
!3968 = !DILocation(line: 1852, column: 35, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !2, line: 1852, column: 6)
!3970 = !DILocation(line: 1852, column: 40, scope: !3969)
!3971 = !DILocation(line: 1852, column: 28, scope: !3969)
!3972 = !DILocation(line: 1852, column: 65, scope: !3969)
!3973 = !DILocation(line: 1852, column: 6, scope: !3959)
!3974 = !DILocation(line: 0, scope: !575, inlinedAt: !3975)
!3975 = distinct !DILocation(line: 1853, column: 5, scope: !3969)
!3976 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3975)
!3977 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3975)
!3978 = !DILocation(line: 1853, column: 5, scope: !3969)
!3979 = !DILocation(line: 1854, column: 40, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3959, file: !2, line: 1854, column: 6)
!3981 = !DILocation(line: 1854, column: 35, scope: !3980)
!3982 = !DILocation(line: 1854, column: 28, scope: !3980)
!3983 = !DILocation(line: 1854, column: 16, scope: !3980)
!3984 = !DILocation(line: 1854, column: 65, scope: !3980)
!3985 = !DILocation(line: 1854, column: 6, scope: !3959)
!3986 = !DILocation(line: 0, scope: !575, inlinedAt: !3987)
!3987 = distinct !DILocation(line: 1855, column: 5, scope: !3980)
!3988 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !3987)
!3989 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !3987)
!3990 = !DILocation(line: 1855, column: 5, scope: !3980)
!3991 = !DILocation(line: 1857, column: 16, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !2, line: 1857, column: 3)
!3993 = distinct !DILexicalBlock(scope: !3959, file: !2, line: 1857, column: 3)
!3994 = !DILocation(line: 1857, column: 3, scope: !3993)
!3995 = !DILocation(line: 1858, column: 18, scope: !3992)
!3996 = !DILocation(line: 1858, column: 31, scope: !3992)
!3997 = !DILocation(line: 1858, column: 16, scope: !3992)
!3998 = !DILocation(line: 1857, column: 25, scope: !3992)
!3999 = distinct !{!3999, !3994, !4000}
!4000 = !DILocation(line: 1858, column: 33, scope: !3993)
!4001 = distinct !{!4001, !686}
!4002 = !DILocation(line: 1860, column: 3, scope: !3959)
!4003 = distinct !DISubprogram(name: "get_mem2Duint16", scope: !2, file: !2, line: 1872, type: !4004, scopeLine: 1873, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4006)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!327, !537, !327, !327}
!4006 = !{!4007, !4008, !4009, !4010}
!4007 = !DILocalVariable(name: "array2D", arg: 1, scope: !4003, file: !2, line: 1872, type: !537)
!4008 = !DILocalVariable(name: "dim0", arg: 2, scope: !4003, file: !2, line: 1872, type: !327)
!4009 = !DILocalVariable(name: "dim1", arg: 3, scope: !4003, file: !2, line: 1872, type: !327)
!4010 = !DILocalVariable(name: "i", scope: !4003, file: !2, line: 1874, type: !327)
!4011 = !DILocation(line: 0, scope: !4003)
!4012 = !DILocation(line: 1876, column: 38, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4003, file: !2, line: 1876, column: 6)
!4014 = !DILocation(line: 1876, column: 43, scope: !4013)
!4015 = !DILocation(line: 1876, column: 31, scope: !4013)
!4016 = !DILocation(line: 1876, column: 19, scope: !4013)
!4017 = !DILocation(line: 1876, column: 68, scope: !4013)
!4018 = !DILocation(line: 1876, column: 6, scope: !4003)
!4019 = !DILocation(line: 0, scope: !575, inlinedAt: !4020)
!4020 = distinct !DILocation(line: 1877, column: 5, scope: !4013)
!4021 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4020)
!4022 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4020)
!4023 = !DILocation(line: 1879, column: 9, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4003, file: !2, line: 1879, column: 6)
!4025 = !DILocation(line: 1877, column: 5, scope: !4013)
!4026 = !DILocation(line: 1879, column: 43, scope: !4024)
!4027 = !DILocation(line: 1879, column: 38, scope: !4024)
!4028 = !DILocation(line: 1879, column: 31, scope: !4024)
!4029 = !DILocation(line: 1879, column: 19, scope: !4024)
!4030 = !DILocation(line: 1879, column: 68, scope: !4024)
!4031 = !DILocation(line: 1879, column: 6, scope: !4003)
!4032 = !DILocation(line: 0, scope: !575, inlinedAt: !4033)
!4033 = distinct !DILocation(line: 1880, column: 5, scope: !4024)
!4034 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4033)
!4035 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4033)
!4036 = !DILocation(line: 1880, column: 5, scope: !4024)
!4037 = !DILocation(line: 1882, column: 16, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !2, line: 1882, column: 3)
!4039 = distinct !DILexicalBlock(scope: !4003, file: !2, line: 1882, column: 3)
!4040 = !DILocation(line: 1882, column: 3, scope: !4039)
!4041 = !DILocation(line: 1883, column: 22, scope: !4038)
!4042 = !DILocation(line: 1883, column: 21, scope: !4038)
!4043 = !DILocation(line: 1883, column: 37, scope: !4038)
!4044 = !DILocation(line: 1883, column: 19, scope: !4038)
!4045 = !DILocation(line: 1882, column: 25, scope: !4038)
!4046 = distinct !{!4046, !4040, !4047}
!4047 = !DILocation(line: 1883, column: 39, scope: !4039)
!4048 = distinct !{!4048, !686}
!4049 = !DILocation(line: 1885, column: 41, scope: !4003)
!4050 = !DILocation(line: 1885, column: 34, scope: !4003)
!4051 = !DILocation(line: 1885, column: 15, scope: !4003)
!4052 = !DILocation(line: 1885, column: 3, scope: !4003)
!4053 = distinct !DISubprogram(name: "get_mem3Duint16", scope: !2, file: !2, line: 1897, type: !4054, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4056)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!327, !538, !327, !327, !327}
!4056 = !{!4057, !4058, !4059, !4060, !4061, !4062}
!4057 = !DILocalVariable(name: "array3D", arg: 1, scope: !4053, file: !2, line: 1897, type: !538)
!4058 = !DILocalVariable(name: "dim0", arg: 2, scope: !4053, file: !2, line: 1897, type: !327)
!4059 = !DILocalVariable(name: "dim1", arg: 3, scope: !4053, file: !2, line: 1897, type: !327)
!4060 = !DILocalVariable(name: "dim2", arg: 4, scope: !4053, file: !2, line: 1897, type: !327)
!4061 = !DILocalVariable(name: "i", scope: !4053, file: !2, line: 1899, type: !327)
!4062 = !DILocalVariable(name: "mem_size", scope: !4053, file: !2, line: 1899, type: !327)
!4063 = !DILocation(line: 0, scope: !4053)
!4064 = !DILocation(line: 1899, column: 22, scope: !4053)
!4065 = !DILocation(line: 1899, column: 27, scope: !4053)
!4066 = !DILocation(line: 1901, column: 31, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4053, file: !2, line: 1901, column: 6)
!4068 = !DILocation(line: 1901, column: 18, scope: !4067)
!4069 = !DILocation(line: 1901, column: 64, scope: !4067)
!4070 = !DILocation(line: 1901, column: 6, scope: !4053)
!4071 = !DILocation(line: 0, scope: !575, inlinedAt: !4072)
!4072 = distinct !DILocation(line: 1902, column: 5, scope: !4067)
!4073 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4072)
!4074 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4072)
!4075 = !DILocation(line: 1904, column: 31, scope: !4053)
!4076 = !DILocation(line: 1902, column: 5, scope: !4067)
!4077 = !DILocation(line: 1904, column: 46, scope: !4053)
!4078 = !DILocation(line: 1904, column: 15, scope: !4053)
!4079 = !DILocation(line: 1906, column: 16, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !2, line: 1906, column: 3)
!4081 = distinct !DILexicalBlock(scope: !4053, file: !2, line: 1906, column: 3)
!4082 = !DILocation(line: 1906, column: 3, scope: !4081)
!4083 = !DILocation(line: 1907, column: 23, scope: !4080)
!4084 = !DILocation(line: 1907, column: 22, scope: !4080)
!4085 = !DILocation(line: 1907, column: 38, scope: !4080)
!4086 = !DILocation(line: 1907, column: 19, scope: !4080)
!4087 = !DILocation(line: 1906, column: 25, scope: !4080)
!4088 = distinct !{!4088, !4082, !4089}
!4089 = !DILocation(line: 1907, column: 40, scope: !4081)
!4090 = distinct !{!4090, !686}
!4091 = !DILocation(line: 1904, column: 12, scope: !4053)
!4092 = !DILocation(line: 1909, column: 3, scope: !4053)
!4093 = distinct !DISubprogram(name: "get_mem4Duint16", scope: !2, file: !2, line: 1922, type: !4094, scopeLine: 1923, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4097)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!327, !4096, !327, !327, !327, !327}
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!4097 = !{!4098, !4099, !4100, !4101, !4102, !4103, !4104}
!4098 = !DILocalVariable(name: "array4D", arg: 1, scope: !4093, file: !2, line: 1922, type: !4096)
!4099 = !DILocalVariable(name: "dim0", arg: 2, scope: !4093, file: !2, line: 1922, type: !327)
!4100 = !DILocalVariable(name: "dim1", arg: 3, scope: !4093, file: !2, line: 1922, type: !327)
!4101 = !DILocalVariable(name: "dim2", arg: 4, scope: !4093, file: !2, line: 1922, type: !327)
!4102 = !DILocalVariable(name: "dim3", arg: 5, scope: !4093, file: !2, line: 1922, type: !327)
!4103 = !DILocalVariable(name: "i", scope: !4093, file: !2, line: 1924, type: !327)
!4104 = !DILocalVariable(name: "mem_size", scope: !4093, file: !2, line: 1924, type: !327)
!4105 = !DILocation(line: 0, scope: !4093)
!4106 = !DILocation(line: 1924, column: 22, scope: !4093)
!4107 = !DILocation(line: 1924, column: 27, scope: !4093)
!4108 = !DILocation(line: 1926, column: 32, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4093, file: !2, line: 1926, column: 6)
!4110 = !DILocation(line: 1926, column: 18, scope: !4109)
!4111 = !DILocation(line: 1926, column: 66, scope: !4109)
!4112 = !DILocation(line: 1926, column: 6, scope: !4093)
!4113 = !DILocation(line: 0, scope: !575, inlinedAt: !4114)
!4114 = distinct !DILocation(line: 1927, column: 5, scope: !4109)
!4115 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4114)
!4116 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4114)
!4117 = !DILocation(line: 1929, column: 31, scope: !4093)
!4118 = !DILocation(line: 1927, column: 5, scope: !4109)
!4119 = !DILocation(line: 1929, column: 46, scope: !4093)
!4120 = !DILocation(line: 0, scope: !4053, inlinedAt: !4121)
!4121 = distinct !DILocation(line: 1929, column: 15, scope: !4093)
!4122 = !DILocation(line: 1899, column: 22, scope: !4053, inlinedAt: !4121)
!4123 = !DILocation(line: 1899, column: 27, scope: !4053, inlinedAt: !4121)
!4124 = !DILocation(line: 1901, column: 31, scope: !4067, inlinedAt: !4121)
!4125 = !DILocation(line: 1901, column: 18, scope: !4067, inlinedAt: !4121)
!4126 = !DILocation(line: 1901, column: 64, scope: !4067, inlinedAt: !4121)
!4127 = !DILocation(line: 1901, column: 6, scope: !4053, inlinedAt: !4121)
!4128 = !DILocation(line: 0, scope: !575, inlinedAt: !4129)
!4129 = distinct !DILocation(line: 1902, column: 5, scope: !4067, inlinedAt: !4121)
!4130 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4129)
!4131 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4129)
!4132 = !DILocation(line: 1904, column: 31, scope: !4053, inlinedAt: !4121)
!4133 = !DILocation(line: 1902, column: 5, scope: !4067, inlinedAt: !4121)
!4134 = !DILocation(line: 1904, column: 46, scope: !4053, inlinedAt: !4121)
!4135 = !DILocation(line: 1904, column: 15, scope: !4053, inlinedAt: !4121)
!4136 = !DILocation(line: 1906, column: 16, scope: !4080, inlinedAt: !4121)
!4137 = !DILocation(line: 1906, column: 3, scope: !4081, inlinedAt: !4121)
!4138 = !DILocation(line: 1907, column: 23, scope: !4080, inlinedAt: !4121)
!4139 = !DILocation(line: 1907, column: 22, scope: !4080, inlinedAt: !4121)
!4140 = !DILocation(line: 1907, column: 38, scope: !4080, inlinedAt: !4121)
!4141 = !DILocation(line: 1907, column: 19, scope: !4080, inlinedAt: !4121)
!4142 = !DILocation(line: 1906, column: 25, scope: !4080, inlinedAt: !4121)
!4143 = distinct !{!4143, !4137, !4144}
!4144 = !DILocation(line: 1907, column: 40, scope: !4081, inlinedAt: !4121)
!4145 = distinct !{!4145, !686}
!4146 = !DILocation(line: 1931, column: 16, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4148, file: !2, line: 1931, column: 3)
!4148 = distinct !DILexicalBlock(scope: !4093, file: !2, line: 1931, column: 3)
!4149 = !DILocation(line: 1931, column: 3, scope: !4148)
!4150 = !DILocation(line: 1932, column: 23, scope: !4147)
!4151 = !DILocation(line: 1932, column: 22, scope: !4147)
!4152 = !DILocation(line: 1932, column: 38, scope: !4147)
!4153 = !DILocation(line: 1932, column: 19, scope: !4147)
!4154 = !DILocation(line: 1931, column: 25, scope: !4147)
!4155 = distinct !{!4155, !4149, !4156}
!4156 = !DILocation(line: 1932, column: 40, scope: !4148)
!4157 = distinct !{!4157, !686}
!4158 = !DILocation(line: 1904, column: 12, scope: !4053, inlinedAt: !4121)
!4159 = !DILocation(line: 1929, column: 12, scope: !4093)
!4160 = !DILocation(line: 1934, column: 3, scope: !4093)
!4161 = distinct !DISubprogram(name: "get_mem2Dshort", scope: !2, file: !2, line: 1946, type: !4162, scopeLine: 1947, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4164)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!327, !539, !327, !327}
!4164 = !{!4165, !4166, !4167, !4168}
!4165 = !DILocalVariable(name: "array2D", arg: 1, scope: !4161, file: !2, line: 1946, type: !539)
!4166 = !DILocalVariable(name: "dim0", arg: 2, scope: !4161, file: !2, line: 1946, type: !327)
!4167 = !DILocalVariable(name: "dim1", arg: 3, scope: !4161, file: !2, line: 1946, type: !327)
!4168 = !DILocalVariable(name: "i", scope: !4161, file: !2, line: 1948, type: !327)
!4169 = !DILocation(line: 0, scope: !4161)
!4170 = !DILocation(line: 1950, column: 37, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4161, file: !2, line: 1950, column: 6)
!4172 = !DILocation(line: 1950, column: 42, scope: !4171)
!4173 = !DILocation(line: 1950, column: 30, scope: !4171)
!4174 = !DILocation(line: 1950, column: 19, scope: !4171)
!4175 = !DILocation(line: 1950, column: 66, scope: !4171)
!4176 = !DILocation(line: 1950, column: 6, scope: !4161)
!4177 = !DILocation(line: 0, scope: !575, inlinedAt: !4178)
!4178 = distinct !DILocation(line: 1951, column: 5, scope: !4171)
!4179 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4178)
!4180 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4178)
!4181 = !DILocation(line: 1952, column: 9, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4161, file: !2, line: 1952, column: 6)
!4183 = !DILocation(line: 1951, column: 5, scope: !4171)
!4184 = !DILocation(line: 1952, column: 42, scope: !4182)
!4185 = !DILocation(line: 1952, column: 37, scope: !4182)
!4186 = !DILocation(line: 1952, column: 30, scope: !4182)
!4187 = !DILocation(line: 1952, column: 19, scope: !4182)
!4188 = !DILocation(line: 1952, column: 66, scope: !4182)
!4189 = !DILocation(line: 1952, column: 6, scope: !4161)
!4190 = !DILocation(line: 0, scope: !575, inlinedAt: !4191)
!4191 = distinct !DILocation(line: 1953, column: 5, scope: !4182)
!4192 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4191)
!4193 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4191)
!4194 = !DILocation(line: 1953, column: 5, scope: !4182)
!4195 = !DILocation(line: 1955, column: 16, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !2, line: 1955, column: 3)
!4197 = distinct !DILexicalBlock(scope: !4161, file: !2, line: 1955, column: 3)
!4198 = !DILocation(line: 1955, column: 3, scope: !4197)
!4199 = !DILocation(line: 1956, column: 22, scope: !4196)
!4200 = !DILocation(line: 1956, column: 21, scope: !4196)
!4201 = !DILocation(line: 1956, column: 37, scope: !4196)
!4202 = !DILocation(line: 1956, column: 19, scope: !4196)
!4203 = !DILocation(line: 1955, column: 25, scope: !4196)
!4204 = distinct !{!4204, !4198, !4205}
!4205 = !DILocation(line: 1956, column: 39, scope: !4197)
!4206 = distinct !{!4206, !686}
!4207 = !DILocation(line: 1958, column: 40, scope: !4161)
!4208 = !DILocation(line: 1958, column: 33, scope: !4161)
!4209 = !DILocation(line: 1958, column: 15, scope: !4161)
!4210 = !DILocation(line: 1958, column: 3, scope: !4161)
!4211 = distinct !DISubprogram(name: "get_mem3Dshort", scope: !2, file: !2, line: 1970, type: !4212, scopeLine: 1971, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4214)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!327, !540, !327, !327, !327}
!4214 = !{!4215, !4216, !4217, !4218, !4219, !4220}
!4215 = !DILocalVariable(name: "array3D", arg: 1, scope: !4211, file: !2, line: 1970, type: !540)
!4216 = !DILocalVariable(name: "dim0", arg: 2, scope: !4211, file: !2, line: 1970, type: !327)
!4217 = !DILocalVariable(name: "dim1", arg: 3, scope: !4211, file: !2, line: 1970, type: !327)
!4218 = !DILocalVariable(name: "dim2", arg: 4, scope: !4211, file: !2, line: 1970, type: !327)
!4219 = !DILocalVariable(name: "i", scope: !4211, file: !2, line: 1972, type: !327)
!4220 = !DILocalVariable(name: "mem_size", scope: !4211, file: !2, line: 1972, type: !327)
!4221 = !DILocation(line: 0, scope: !4211)
!4222 = !DILocation(line: 1972, column: 22, scope: !4211)
!4223 = !DILocation(line: 1972, column: 27, scope: !4211)
!4224 = !DILocation(line: 1974, column: 30, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4211, file: !2, line: 1974, column: 6)
!4226 = !DILocation(line: 1974, column: 18, scope: !4225)
!4227 = !DILocation(line: 1974, column: 62, scope: !4225)
!4228 = !DILocation(line: 1974, column: 6, scope: !4211)
!4229 = !DILocation(line: 0, scope: !575, inlinedAt: !4230)
!4230 = distinct !DILocation(line: 1975, column: 5, scope: !4225)
!4231 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4230)
!4232 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4230)
!4233 = !DILocation(line: 1977, column: 30, scope: !4211)
!4234 = !DILocation(line: 1975, column: 5, scope: !4225)
!4235 = !DILocation(line: 1977, column: 45, scope: !4211)
!4236 = !DILocation(line: 1977, column: 15, scope: !4211)
!4237 = !DILocation(line: 1979, column: 16, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !2, line: 1979, column: 3)
!4239 = distinct !DILexicalBlock(scope: !4211, file: !2, line: 1979, column: 3)
!4240 = !DILocation(line: 1979, column: 3, scope: !4239)
!4241 = !DILocation(line: 1980, column: 23, scope: !4238)
!4242 = !DILocation(line: 1980, column: 22, scope: !4238)
!4243 = !DILocation(line: 1980, column: 38, scope: !4238)
!4244 = !DILocation(line: 1980, column: 19, scope: !4238)
!4245 = !DILocation(line: 1979, column: 25, scope: !4238)
!4246 = distinct !{!4246, !4240, !4247}
!4247 = !DILocation(line: 1980, column: 40, scope: !4239)
!4248 = distinct !{!4248, !686}
!4249 = !DILocation(line: 1977, column: 12, scope: !4211)
!4250 = !DILocation(line: 1982, column: 3, scope: !4211)
!4251 = distinct !DISubprogram(name: "get_mem4Dshort", scope: !2, file: !2, line: 1995, type: !4252, scopeLine: 1996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4254)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!327, !541, !327, !327, !327, !327}
!4254 = !{!4255, !4256, !4257, !4258, !4259, !4260, !4261}
!4255 = !DILocalVariable(name: "array4D", arg: 1, scope: !4251, file: !2, line: 1995, type: !541)
!4256 = !DILocalVariable(name: "dim0", arg: 2, scope: !4251, file: !2, line: 1995, type: !327)
!4257 = !DILocalVariable(name: "dim1", arg: 3, scope: !4251, file: !2, line: 1995, type: !327)
!4258 = !DILocalVariable(name: "dim2", arg: 4, scope: !4251, file: !2, line: 1995, type: !327)
!4259 = !DILocalVariable(name: "dim3", arg: 5, scope: !4251, file: !2, line: 1995, type: !327)
!4260 = !DILocalVariable(name: "i", scope: !4251, file: !2, line: 1997, type: !327)
!4261 = !DILocalVariable(name: "mem_size", scope: !4251, file: !2, line: 1997, type: !327)
!4262 = !DILocation(line: 0, scope: !4251)
!4263 = !DILocation(line: 1997, column: 22, scope: !4251)
!4264 = !DILocation(line: 1997, column: 27, scope: !4251)
!4265 = !DILocation(line: 1999, column: 31, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4251, file: !2, line: 1999, column: 6)
!4267 = !DILocation(line: 1999, column: 18, scope: !4266)
!4268 = !DILocation(line: 1999, column: 64, scope: !4266)
!4269 = !DILocation(line: 1999, column: 6, scope: !4251)
!4270 = !DILocation(line: 0, scope: !575, inlinedAt: !4271)
!4271 = distinct !DILocation(line: 2000, column: 5, scope: !4266)
!4272 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4271)
!4273 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4271)
!4274 = !DILocation(line: 2002, column: 30, scope: !4251)
!4275 = !DILocation(line: 2000, column: 5, scope: !4266)
!4276 = !DILocation(line: 2002, column: 45, scope: !4251)
!4277 = !DILocation(line: 0, scope: !4211, inlinedAt: !4278)
!4278 = distinct !DILocation(line: 2002, column: 15, scope: !4251)
!4279 = !DILocation(line: 1972, column: 22, scope: !4211, inlinedAt: !4278)
!4280 = !DILocation(line: 1972, column: 27, scope: !4211, inlinedAt: !4278)
!4281 = !DILocation(line: 1974, column: 30, scope: !4225, inlinedAt: !4278)
!4282 = !DILocation(line: 1974, column: 18, scope: !4225, inlinedAt: !4278)
!4283 = !DILocation(line: 1974, column: 62, scope: !4225, inlinedAt: !4278)
!4284 = !DILocation(line: 1974, column: 6, scope: !4211, inlinedAt: !4278)
!4285 = !DILocation(line: 0, scope: !575, inlinedAt: !4286)
!4286 = distinct !DILocation(line: 1975, column: 5, scope: !4225, inlinedAt: !4278)
!4287 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4286)
!4288 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4286)
!4289 = !DILocation(line: 1977, column: 30, scope: !4211, inlinedAt: !4278)
!4290 = !DILocation(line: 1975, column: 5, scope: !4225, inlinedAt: !4278)
!4291 = !DILocation(line: 1977, column: 45, scope: !4211, inlinedAt: !4278)
!4292 = !DILocation(line: 1977, column: 15, scope: !4211, inlinedAt: !4278)
!4293 = !DILocation(line: 1979, column: 16, scope: !4238, inlinedAt: !4278)
!4294 = !DILocation(line: 1979, column: 3, scope: !4239, inlinedAt: !4278)
!4295 = !DILocation(line: 1980, column: 23, scope: !4238, inlinedAt: !4278)
!4296 = !DILocation(line: 1980, column: 22, scope: !4238, inlinedAt: !4278)
!4297 = !DILocation(line: 1980, column: 38, scope: !4238, inlinedAt: !4278)
!4298 = !DILocation(line: 1980, column: 19, scope: !4238, inlinedAt: !4278)
!4299 = !DILocation(line: 1979, column: 25, scope: !4238, inlinedAt: !4278)
!4300 = distinct !{!4300, !4294, !4301}
!4301 = !DILocation(line: 1980, column: 40, scope: !4239, inlinedAt: !4278)
!4302 = distinct !{!4302, !686}
!4303 = !DILocation(line: 2004, column: 16, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4305, file: !2, line: 2004, column: 3)
!4305 = distinct !DILexicalBlock(scope: !4251, file: !2, line: 2004, column: 3)
!4306 = !DILocation(line: 2004, column: 3, scope: !4305)
!4307 = !DILocation(line: 2005, column: 23, scope: !4304)
!4308 = !DILocation(line: 2005, column: 22, scope: !4304)
!4309 = !DILocation(line: 2005, column: 38, scope: !4304)
!4310 = !DILocation(line: 2005, column: 19, scope: !4304)
!4311 = !DILocation(line: 2004, column: 25, scope: !4304)
!4312 = distinct !{!4312, !4306, !4313}
!4313 = !DILocation(line: 2005, column: 40, scope: !4305)
!4314 = distinct !{!4314, !686}
!4315 = !DILocation(line: 1977, column: 12, scope: !4211, inlinedAt: !4278)
!4316 = !DILocation(line: 2002, column: 12, scope: !4251)
!4317 = !DILocation(line: 2007, column: 3, scope: !4251)
!4318 = distinct !DISubprogram(name: "get_mem5Dshort", scope: !2, file: !2, line: 2019, type: !4319, scopeLine: 2020, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4321)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!327, !542, !327, !327, !327, !327, !327}
!4321 = !{!4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329}
!4322 = !DILocalVariable(name: "array5D", arg: 1, scope: !4318, file: !2, line: 2019, type: !542)
!4323 = !DILocalVariable(name: "dim0", arg: 2, scope: !4318, file: !2, line: 2019, type: !327)
!4324 = !DILocalVariable(name: "dim1", arg: 3, scope: !4318, file: !2, line: 2019, type: !327)
!4325 = !DILocalVariable(name: "dim2", arg: 4, scope: !4318, file: !2, line: 2019, type: !327)
!4326 = !DILocalVariable(name: "dim3", arg: 5, scope: !4318, file: !2, line: 2019, type: !327)
!4327 = !DILocalVariable(name: "dim4", arg: 6, scope: !4318, file: !2, line: 2019, type: !327)
!4328 = !DILocalVariable(name: "i", scope: !4318, file: !2, line: 2021, type: !327)
!4329 = !DILocalVariable(name: "mem_size", scope: !4318, file: !2, line: 2021, type: !327)
!4330 = !DILocation(line: 0, scope: !4318)
!4331 = !DILocation(line: 2021, column: 22, scope: !4318)
!4332 = !DILocation(line: 2021, column: 27, scope: !4318)
!4333 = !DILocation(line: 2023, column: 32, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4318, file: !2, line: 2023, column: 6)
!4335 = !DILocation(line: 2023, column: 18, scope: !4334)
!4336 = !DILocation(line: 2023, column: 66, scope: !4334)
!4337 = !DILocation(line: 2023, column: 6, scope: !4318)
!4338 = !DILocation(line: 0, scope: !575, inlinedAt: !4339)
!4339 = distinct !DILocation(line: 2024, column: 5, scope: !4334)
!4340 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4339)
!4341 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4339)
!4342 = !DILocation(line: 2026, column: 30, scope: !4318)
!4343 = !DILocation(line: 2024, column: 5, scope: !4334)
!4344 = !DILocation(line: 2026, column: 45, scope: !4318)
!4345 = !DILocation(line: 2026, column: 15, scope: !4318)
!4346 = !DILocation(line: 2028, column: 16, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !2, line: 2028, column: 3)
!4348 = distinct !DILexicalBlock(scope: !4318, file: !2, line: 2028, column: 3)
!4349 = !DILocation(line: 2028, column: 3, scope: !4348)
!4350 = !DILocation(line: 2029, column: 23, scope: !4347)
!4351 = !DILocation(line: 2029, column: 22, scope: !4347)
!4352 = !DILocation(line: 2029, column: 38, scope: !4347)
!4353 = !DILocation(line: 2029, column: 19, scope: !4347)
!4354 = !DILocation(line: 2028, column: 25, scope: !4347)
!4355 = distinct !{!4355, !4349, !4356}
!4356 = !DILocation(line: 2029, column: 40, scope: !4348)
!4357 = distinct !{!4357, !686}
!4358 = !DILocation(line: 2026, column: 12, scope: !4318)
!4359 = !DILocation(line: 2031, column: 3, scope: !4318)
!4360 = distinct !DISubprogram(name: "get_mem6Dshort", scope: !2, file: !2, line: 2043, type: !4361, scopeLine: 2044, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4363)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!327, !543, !327, !327, !327, !327, !327, !327}
!4363 = !{!4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372}
!4364 = !DILocalVariable(name: "array6D", arg: 1, scope: !4360, file: !2, line: 2043, type: !543)
!4365 = !DILocalVariable(name: "dim0", arg: 2, scope: !4360, file: !2, line: 2043, type: !327)
!4366 = !DILocalVariable(name: "dim1", arg: 3, scope: !4360, file: !2, line: 2043, type: !327)
!4367 = !DILocalVariable(name: "dim2", arg: 4, scope: !4360, file: !2, line: 2043, type: !327)
!4368 = !DILocalVariable(name: "dim3", arg: 5, scope: !4360, file: !2, line: 2043, type: !327)
!4369 = !DILocalVariable(name: "dim4", arg: 6, scope: !4360, file: !2, line: 2043, type: !327)
!4370 = !DILocalVariable(name: "dim5", arg: 7, scope: !4360, file: !2, line: 2043, type: !327)
!4371 = !DILocalVariable(name: "i", scope: !4360, file: !2, line: 2045, type: !327)
!4372 = !DILocalVariable(name: "mem_size", scope: !4360, file: !2, line: 2045, type: !327)
!4373 = !DILocation(line: 0, scope: !4360)
!4374 = !DILocation(line: 2045, column: 22, scope: !4360)
!4375 = !DILocation(line: 2045, column: 27, scope: !4360)
!4376 = !DILocation(line: 2047, column: 33, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4360, file: !2, line: 2047, column: 6)
!4378 = !DILocation(line: 2047, column: 18, scope: !4377)
!4379 = !DILocation(line: 2047, column: 68, scope: !4377)
!4380 = !DILocation(line: 2047, column: 6, scope: !4360)
!4381 = !DILocation(line: 0, scope: !575, inlinedAt: !4382)
!4382 = distinct !DILocation(line: 2048, column: 5, scope: !4377)
!4383 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4382)
!4384 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4382)
!4385 = !DILocation(line: 2050, column: 30, scope: !4360)
!4386 = !DILocation(line: 2048, column: 5, scope: !4377)
!4387 = !DILocation(line: 2050, column: 45, scope: !4360)
!4388 = !DILocation(line: 0, scope: !4318, inlinedAt: !4389)
!4389 = distinct !DILocation(line: 2050, column: 15, scope: !4360)
!4390 = !DILocation(line: 2021, column: 22, scope: !4318, inlinedAt: !4389)
!4391 = !DILocation(line: 2021, column: 27, scope: !4318, inlinedAt: !4389)
!4392 = !DILocation(line: 2023, column: 32, scope: !4334, inlinedAt: !4389)
!4393 = !DILocation(line: 2023, column: 18, scope: !4334, inlinedAt: !4389)
!4394 = !DILocation(line: 2023, column: 66, scope: !4334, inlinedAt: !4389)
!4395 = !DILocation(line: 2023, column: 6, scope: !4318, inlinedAt: !4389)
!4396 = !DILocation(line: 0, scope: !575, inlinedAt: !4397)
!4397 = distinct !DILocation(line: 2024, column: 5, scope: !4334, inlinedAt: !4389)
!4398 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4397)
!4399 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4397)
!4400 = !DILocation(line: 2026, column: 30, scope: !4318, inlinedAt: !4389)
!4401 = !DILocation(line: 2024, column: 5, scope: !4334, inlinedAt: !4389)
!4402 = !DILocation(line: 2026, column: 45, scope: !4318, inlinedAt: !4389)
!4403 = !DILocation(line: 2026, column: 15, scope: !4318, inlinedAt: !4389)
!4404 = !DILocation(line: 2028, column: 16, scope: !4347, inlinedAt: !4389)
!4405 = !DILocation(line: 2028, column: 3, scope: !4348, inlinedAt: !4389)
!4406 = !DILocation(line: 2029, column: 23, scope: !4347, inlinedAt: !4389)
!4407 = !DILocation(line: 2029, column: 22, scope: !4347, inlinedAt: !4389)
!4408 = !DILocation(line: 2029, column: 38, scope: !4347, inlinedAt: !4389)
!4409 = !DILocation(line: 2029, column: 19, scope: !4347, inlinedAt: !4389)
!4410 = !DILocation(line: 2028, column: 25, scope: !4347, inlinedAt: !4389)
!4411 = distinct !{!4411, !4405, !4412}
!4412 = !DILocation(line: 2029, column: 40, scope: !4348, inlinedAt: !4389)
!4413 = distinct !{!4413, !686}
!4414 = !DILocation(line: 2052, column: 16, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !2, line: 2052, column: 3)
!4416 = distinct !DILexicalBlock(scope: !4360, file: !2, line: 2052, column: 3)
!4417 = !DILocation(line: 2052, column: 3, scope: !4416)
!4418 = !DILocation(line: 2053, column: 23, scope: !4415)
!4419 = !DILocation(line: 2053, column: 22, scope: !4415)
!4420 = !DILocation(line: 2053, column: 38, scope: !4415)
!4421 = !DILocation(line: 2053, column: 19, scope: !4415)
!4422 = !DILocation(line: 2052, column: 25, scope: !4415)
!4423 = distinct !{!4423, !4417, !4424}
!4424 = !DILocation(line: 2053, column: 40, scope: !4416)
!4425 = distinct !{!4425, !686}
!4426 = !DILocation(line: 2026, column: 12, scope: !4318, inlinedAt: !4389)
!4427 = !DILocation(line: 2050, column: 12, scope: !4360)
!4428 = !DILocation(line: 2055, column: 3, scope: !4360)
!4429 = distinct !DISubprogram(name: "get_mem7Dshort", scope: !2, file: !2, line: 2067, type: !4430, scopeLine: 2068, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4433)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!327, !4432, !327, !327, !327, !327, !327, !327, !327}
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!4433 = !{!4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443}
!4434 = !DILocalVariable(name: "array7D", arg: 1, scope: !4429, file: !2, line: 2067, type: !4432)
!4435 = !DILocalVariable(name: "dim0", arg: 2, scope: !4429, file: !2, line: 2067, type: !327)
!4436 = !DILocalVariable(name: "dim1", arg: 3, scope: !4429, file: !2, line: 2067, type: !327)
!4437 = !DILocalVariable(name: "dim2", arg: 4, scope: !4429, file: !2, line: 2067, type: !327)
!4438 = !DILocalVariable(name: "dim3", arg: 5, scope: !4429, file: !2, line: 2067, type: !327)
!4439 = !DILocalVariable(name: "dim4", arg: 6, scope: !4429, file: !2, line: 2067, type: !327)
!4440 = !DILocalVariable(name: "dim5", arg: 7, scope: !4429, file: !2, line: 2067, type: !327)
!4441 = !DILocalVariable(name: "dim6", arg: 8, scope: !4429, file: !2, line: 2067, type: !327)
!4442 = !DILocalVariable(name: "i", scope: !4429, file: !2, line: 2069, type: !327)
!4443 = !DILocalVariable(name: "mem_size", scope: !4429, file: !2, line: 2069, type: !327)
!4444 = !DILocation(line: 0, scope: !4429)
!4445 = !DILocation(line: 2069, column: 22, scope: !4429)
!4446 = !DILocation(line: 2069, column: 27, scope: !4429)
!4447 = !DILocation(line: 2071, column: 34, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4429, file: !2, line: 2071, column: 6)
!4449 = !DILocation(line: 2071, column: 18, scope: !4448)
!4450 = !DILocation(line: 2071, column: 70, scope: !4448)
!4451 = !DILocation(line: 2071, column: 6, scope: !4429)
!4452 = !DILocation(line: 0, scope: !575, inlinedAt: !4453)
!4453 = distinct !DILocation(line: 2072, column: 5, scope: !4448)
!4454 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4453)
!4455 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4453)
!4456 = !DILocation(line: 2074, column: 30, scope: !4429)
!4457 = !DILocation(line: 2072, column: 5, scope: !4448)
!4458 = !DILocation(line: 2074, column: 45, scope: !4429)
!4459 = !DILocation(line: 2074, column: 15, scope: !4429)
!4460 = !DILocation(line: 2076, column: 16, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2, line: 2076, column: 3)
!4462 = distinct !DILexicalBlock(scope: !4429, file: !2, line: 2076, column: 3)
!4463 = !DILocation(line: 2076, column: 3, scope: !4462)
!4464 = !DILocation(line: 2077, column: 23, scope: !4461)
!4465 = !DILocation(line: 2077, column: 22, scope: !4461)
!4466 = !DILocation(line: 2077, column: 38, scope: !4461)
!4467 = !DILocation(line: 2077, column: 19, scope: !4461)
!4468 = !DILocation(line: 2076, column: 25, scope: !4461)
!4469 = distinct !{!4469, !4463, !4470}
!4470 = !DILocation(line: 2077, column: 40, scope: !4462)
!4471 = distinct !{!4471, !686}
!4472 = !DILocation(line: 2074, column: 12, scope: !4429)
!4473 = !DILocation(line: 2079, column: 3, scope: !4429)
!4474 = distinct !DISubprogram(name: "free_mem2Duint16", scope: !2, file: !2, line: 2089, type: !4475, scopeLine: 2090, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !535}
!4477 = !{!4478}
!4478 = !DILocalVariable(name: "array2D", arg: 1, scope: !4474, file: !2, line: 2089, type: !535)
!4479 = !DILocation(line: 0, scope: !4474)
!4480 = !DILocation(line: 2091, column: 7, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4474, file: !2, line: 2091, column: 7)
!4482 = !DILocation(line: 2091, column: 7, scope: !4474)
!4483 = !DILocation(line: 2093, column: 9, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4485, file: !2, line: 2093, column: 9)
!4485 = distinct !DILexicalBlock(scope: !4481, file: !2, line: 2092, column: 3)
!4486 = !DILocation(line: 2093, column: 9, scope: !4485)
!4487 = !DILocation(line: 2094, column: 7, scope: !4484)
!4488 = !DILocation(line: 2095, column: 10, scope: !4484)
!4489 = !DILocation(line: 2097, column: 5, scope: !4485)
!4490 = !DILocation(line: 2098, column: 3, scope: !4485)
!4491 = !DILocation(line: 2101, column: 5, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4481, file: !2, line: 2100, column: 3)
!4493 = !DILocation(line: 2103, column: 1, scope: !4474)
!4494 = distinct !DISubprogram(name: "free_mem3Duint16", scope: !2, file: !2, line: 2112, type: !4495, scopeLine: 2113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4497)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{null, !537}
!4497 = !{!4498}
!4498 = !DILocalVariable(name: "array3D", arg: 1, scope: !4494, file: !2, line: 2112, type: !537)
!4499 = !DILocation(line: 0, scope: !4494)
!4500 = !DILocation(line: 2114, column: 7, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4494, file: !2, line: 2114, column: 7)
!4502 = !DILocation(line: 2114, column: 7, scope: !4494)
!4503 = !DILocation(line: 2116, column: 21, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4501, file: !2, line: 2115, column: 3)
!4505 = !DILocation(line: 0, scope: !4474, inlinedAt: !4506)
!4506 = distinct !DILocation(line: 2116, column: 4, scope: !4504)
!4507 = !DILocation(line: 2091, column: 7, scope: !4481, inlinedAt: !4506)
!4508 = !DILocation(line: 2091, column: 7, scope: !4474, inlinedAt: !4506)
!4509 = !DILocation(line: 2093, column: 9, scope: !4484, inlinedAt: !4506)
!4510 = !DILocation(line: 2093, column: 9, scope: !4485, inlinedAt: !4506)
!4511 = !DILocation(line: 2094, column: 7, scope: !4484, inlinedAt: !4506)
!4512 = !DILocation(line: 2095, column: 10, scope: !4484, inlinedAt: !4506)
!4513 = !DILocation(line: 2097, column: 5, scope: !4485, inlinedAt: !4506)
!4514 = !DILocation(line: 2098, column: 3, scope: !4485, inlinedAt: !4506)
!4515 = !DILocation(line: 2101, column: 5, scope: !4492, inlinedAt: !4506)
!4516 = !DILocation(line: 2117, column: 4, scope: !4504)
!4517 = !DILocation(line: 2118, column: 3, scope: !4504)
!4518 = !DILocation(line: 2121, column: 5, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4501, file: !2, line: 2120, column: 3)
!4520 = !DILocation(line: 2123, column: 1, scope: !4494)
!4521 = distinct !DISubprogram(name: "free_mem4Duint16", scope: !2, file: !2, line: 2132, type: !4522, scopeLine: 2133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4524)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{null, !538}
!4524 = !{!4525}
!4525 = !DILocalVariable(name: "array4D", arg: 1, scope: !4521, file: !2, line: 2132, type: !538)
!4526 = !DILocation(line: 0, scope: !4521)
!4527 = !DILocation(line: 2134, column: 7, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4521, file: !2, line: 2134, column: 7)
!4529 = !DILocation(line: 2134, column: 7, scope: !4521)
!4530 = !DILocation(line: 2136, column: 23, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4528, file: !2, line: 2135, column: 3)
!4532 = !DILocation(line: 0, scope: !4494, inlinedAt: !4533)
!4533 = distinct !DILocation(line: 2136, column: 5, scope: !4531)
!4534 = !DILocation(line: 2114, column: 7, scope: !4501, inlinedAt: !4533)
!4535 = !DILocation(line: 2114, column: 7, scope: !4494, inlinedAt: !4533)
!4536 = !DILocation(line: 2116, column: 21, scope: !4504, inlinedAt: !4533)
!4537 = !DILocation(line: 0, scope: !4474, inlinedAt: !4538)
!4538 = distinct !DILocation(line: 2116, column: 4, scope: !4504, inlinedAt: !4533)
!4539 = !DILocation(line: 2091, column: 7, scope: !4481, inlinedAt: !4538)
!4540 = !DILocation(line: 2091, column: 7, scope: !4474, inlinedAt: !4538)
!4541 = !DILocation(line: 2093, column: 9, scope: !4484, inlinedAt: !4538)
!4542 = !DILocation(line: 2093, column: 9, scope: !4485, inlinedAt: !4538)
!4543 = !DILocation(line: 2094, column: 7, scope: !4484, inlinedAt: !4538)
!4544 = !DILocation(line: 2095, column: 10, scope: !4484, inlinedAt: !4538)
!4545 = !DILocation(line: 2097, column: 5, scope: !4485, inlinedAt: !4538)
!4546 = !DILocation(line: 2098, column: 3, scope: !4485, inlinedAt: !4538)
!4547 = !DILocation(line: 2101, column: 5, scope: !4492, inlinedAt: !4538)
!4548 = !DILocation(line: 2117, column: 4, scope: !4504, inlinedAt: !4533)
!4549 = !DILocation(line: 2118, column: 3, scope: !4504, inlinedAt: !4533)
!4550 = !DILocation(line: 2121, column: 5, scope: !4519, inlinedAt: !4533)
!4551 = !DILocation(line: 2137, column: 5, scope: !4531)
!4552 = !DILocation(line: 2138, column: 3, scope: !4531)
!4553 = !DILocation(line: 2141, column: 5, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4528, file: !2, line: 2140, column: 3)
!4555 = !DILocation(line: 2143, column: 1, scope: !4521)
!4556 = distinct !DISubprogram(name: "free_mem2Dshort", scope: !2, file: !2, line: 2152, type: !4557, scopeLine: 2153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4559)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{null, !427}
!4559 = !{!4560}
!4560 = !DILocalVariable(name: "array2D", arg: 1, scope: !4556, file: !2, line: 2152, type: !427)
!4561 = !DILocation(line: 0, scope: !4556)
!4562 = !DILocation(line: 2154, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4556, file: !2, line: 2154, column: 7)
!4564 = !DILocation(line: 2154, column: 7, scope: !4556)
!4565 = !DILocation(line: 2156, column: 9, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !2, line: 2156, column: 9)
!4567 = distinct !DILexicalBlock(scope: !4563, file: !2, line: 2155, column: 3)
!4568 = !DILocation(line: 2156, column: 9, scope: !4567)
!4569 = !DILocation(line: 2157, column: 7, scope: !4566)
!4570 = !DILocation(line: 2158, column: 10, scope: !4566)
!4571 = !DILocation(line: 2160, column: 5, scope: !4567)
!4572 = !DILocation(line: 2161, column: 3, scope: !4567)
!4573 = !DILocation(line: 2164, column: 5, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4563, file: !2, line: 2163, column: 3)
!4575 = !DILocation(line: 2166, column: 1, scope: !4556)
!4576 = distinct !DISubprogram(name: "free_mem3Dshort", scope: !2, file: !2, line: 2175, type: !4577, scopeLine: 2176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4579)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{null, !539}
!4579 = !{!4580}
!4580 = !DILocalVariable(name: "array3D", arg: 1, scope: !4576, file: !2, line: 2175, type: !539)
!4581 = !DILocation(line: 0, scope: !4576)
!4582 = !DILocation(line: 2177, column: 7, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4576, file: !2, line: 2177, column: 7)
!4584 = !DILocation(line: 2177, column: 7, scope: !4576)
!4585 = !DILocation(line: 2179, column: 20, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4583, file: !2, line: 2178, column: 3)
!4587 = !DILocation(line: 0, scope: !4556, inlinedAt: !4588)
!4588 = distinct !DILocation(line: 2179, column: 4, scope: !4586)
!4589 = !DILocation(line: 2154, column: 7, scope: !4563, inlinedAt: !4588)
!4590 = !DILocation(line: 2154, column: 7, scope: !4556, inlinedAt: !4588)
!4591 = !DILocation(line: 2156, column: 9, scope: !4566, inlinedAt: !4588)
!4592 = !DILocation(line: 2156, column: 9, scope: !4567, inlinedAt: !4588)
!4593 = !DILocation(line: 2157, column: 7, scope: !4566, inlinedAt: !4588)
!4594 = !DILocation(line: 2158, column: 10, scope: !4566, inlinedAt: !4588)
!4595 = !DILocation(line: 2160, column: 5, scope: !4567, inlinedAt: !4588)
!4596 = !DILocation(line: 2161, column: 3, scope: !4567, inlinedAt: !4588)
!4597 = !DILocation(line: 2164, column: 5, scope: !4574, inlinedAt: !4588)
!4598 = !DILocation(line: 2180, column: 4, scope: !4586)
!4599 = !DILocation(line: 2181, column: 3, scope: !4586)
!4600 = !DILocation(line: 2184, column: 5, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4583, file: !2, line: 2183, column: 3)
!4602 = !DILocation(line: 2186, column: 1, scope: !4576)
!4603 = distinct !DISubprogram(name: "free_mem4Dshort", scope: !2, file: !2, line: 2195, type: !4604, scopeLine: 2196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4606)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{null, !540}
!4606 = !{!4607}
!4607 = !DILocalVariable(name: "array4D", arg: 1, scope: !4603, file: !2, line: 2195, type: !540)
!4608 = !DILocation(line: 0, scope: !4603)
!4609 = !DILocation(line: 2197, column: 7, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4603, file: !2, line: 2197, column: 7)
!4611 = !DILocation(line: 2197, column: 7, scope: !4603)
!4612 = !DILocation(line: 2199, column: 22, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4610, file: !2, line: 2198, column: 3)
!4614 = !DILocation(line: 0, scope: !4576, inlinedAt: !4615)
!4615 = distinct !DILocation(line: 2199, column: 5, scope: !4613)
!4616 = !DILocation(line: 2177, column: 7, scope: !4583, inlinedAt: !4615)
!4617 = !DILocation(line: 2177, column: 7, scope: !4576, inlinedAt: !4615)
!4618 = !DILocation(line: 2179, column: 20, scope: !4586, inlinedAt: !4615)
!4619 = !DILocation(line: 0, scope: !4556, inlinedAt: !4620)
!4620 = distinct !DILocation(line: 2179, column: 4, scope: !4586, inlinedAt: !4615)
!4621 = !DILocation(line: 2154, column: 7, scope: !4563, inlinedAt: !4620)
!4622 = !DILocation(line: 2154, column: 7, scope: !4556, inlinedAt: !4620)
!4623 = !DILocation(line: 2156, column: 9, scope: !4566, inlinedAt: !4620)
!4624 = !DILocation(line: 2156, column: 9, scope: !4567, inlinedAt: !4620)
!4625 = !DILocation(line: 2157, column: 7, scope: !4566, inlinedAt: !4620)
!4626 = !DILocation(line: 2158, column: 10, scope: !4566, inlinedAt: !4620)
!4627 = !DILocation(line: 2160, column: 5, scope: !4567, inlinedAt: !4620)
!4628 = !DILocation(line: 2161, column: 3, scope: !4567, inlinedAt: !4620)
!4629 = !DILocation(line: 2164, column: 5, scope: !4574, inlinedAt: !4620)
!4630 = !DILocation(line: 2180, column: 4, scope: !4586, inlinedAt: !4615)
!4631 = !DILocation(line: 2181, column: 3, scope: !4586, inlinedAt: !4615)
!4632 = !DILocation(line: 2184, column: 5, scope: !4601, inlinedAt: !4615)
!4633 = !DILocation(line: 2200, column: 5, scope: !4613)
!4634 = !DILocation(line: 2201, column: 3, scope: !4613)
!4635 = !DILocation(line: 2204, column: 5, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4610, file: !2, line: 2203, column: 3)
!4637 = !DILocation(line: 2206, column: 1, scope: !4603)
!4638 = distinct !DISubprogram(name: "free_mem5Dshort", scope: !2, file: !2, line: 2215, type: !4639, scopeLine: 2216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4641)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{null, !541}
!4641 = !{!4642}
!4642 = !DILocalVariable(name: "array5D", arg: 1, scope: !4638, file: !2, line: 2215, type: !541)
!4643 = !DILocation(line: 0, scope: !4638)
!4644 = !DILocation(line: 2217, column: 7, scope: !4645)
!4645 = distinct !DILexicalBlock(scope: !4638, file: !2, line: 2217, column: 7)
!4646 = !DILocation(line: 2217, column: 7, scope: !4638)
!4647 = !DILocation(line: 2219, column: 22, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4645, file: !2, line: 2218, column: 3)
!4649 = !DILocation(line: 2219, column: 5, scope: !4648)
!4650 = !DILocation(line: 2220, column: 5, scope: !4648)
!4651 = !DILocation(line: 2221, column: 3, scope: !4648)
!4652 = !DILocation(line: 2224, column: 5, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4645, file: !2, line: 2223, column: 3)
!4654 = !DILocation(line: 2226, column: 1, scope: !4638)
!4655 = distinct !DISubprogram(name: "free_mem6Dshort", scope: !2, file: !2, line: 2235, type: !4656, scopeLine: 2236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4658)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{null, !542}
!4658 = !{!4659}
!4659 = !DILocalVariable(name: "array6D", arg: 1, scope: !4655, file: !2, line: 2235, type: !542)
!4660 = !DILocation(line: 0, scope: !4655)
!4661 = !DILocation(line: 2237, column: 7, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4655, file: !2, line: 2237, column: 7)
!4663 = !DILocation(line: 2237, column: 7, scope: !4655)
!4664 = !DILocation(line: 2239, column: 22, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4662, file: !2, line: 2238, column: 3)
!4666 = !DILocation(line: 0, scope: !4638, inlinedAt: !4667)
!4667 = distinct !DILocation(line: 2239, column: 5, scope: !4665)
!4668 = !DILocation(line: 2217, column: 7, scope: !4645, inlinedAt: !4667)
!4669 = !DILocation(line: 2217, column: 7, scope: !4638, inlinedAt: !4667)
!4670 = !DILocation(line: 2219, column: 22, scope: !4648, inlinedAt: !4667)
!4671 = !DILocation(line: 2219, column: 5, scope: !4648, inlinedAt: !4667)
!4672 = !DILocation(line: 2220, column: 5, scope: !4648, inlinedAt: !4667)
!4673 = !DILocation(line: 2221, column: 3, scope: !4648, inlinedAt: !4667)
!4674 = !DILocation(line: 2224, column: 5, scope: !4653, inlinedAt: !4667)
!4675 = !DILocation(line: 2240, column: 5, scope: !4665)
!4676 = !DILocation(line: 2241, column: 3, scope: !4665)
!4677 = !DILocation(line: 2244, column: 5, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4662, file: !2, line: 2243, column: 3)
!4679 = !DILocation(line: 2246, column: 1, scope: !4655)
!4680 = distinct !DISubprogram(name: "free_mem7Dshort", scope: !2, file: !2, line: 2255, type: !4681, scopeLine: 2256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4683)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{null, !543}
!4683 = !{!4684}
!4684 = !DILocalVariable(name: "array7D", arg: 1, scope: !4680, file: !2, line: 2255, type: !543)
!4685 = !DILocation(line: 0, scope: !4680)
!4686 = !DILocation(line: 2257, column: 7, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4680, file: !2, line: 2257, column: 7)
!4688 = !DILocation(line: 2257, column: 7, scope: !4680)
!4689 = !DILocation(line: 2259, column: 22, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !2, line: 2258, column: 3)
!4691 = !DILocation(line: 0, scope: !4655, inlinedAt: !4692)
!4692 = distinct !DILocation(line: 2259, column: 5, scope: !4690)
!4693 = !DILocation(line: 2237, column: 7, scope: !4662, inlinedAt: !4692)
!4694 = !DILocation(line: 2237, column: 7, scope: !4655, inlinedAt: !4692)
!4695 = !DILocation(line: 2239, column: 22, scope: !4665, inlinedAt: !4692)
!4696 = !DILocation(line: 0, scope: !4638, inlinedAt: !4697)
!4697 = distinct !DILocation(line: 2239, column: 5, scope: !4665, inlinedAt: !4692)
!4698 = !DILocation(line: 2217, column: 7, scope: !4645, inlinedAt: !4697)
!4699 = !DILocation(line: 2217, column: 7, scope: !4638, inlinedAt: !4697)
!4700 = !DILocation(line: 2219, column: 22, scope: !4648, inlinedAt: !4697)
!4701 = !DILocation(line: 2219, column: 5, scope: !4648, inlinedAt: !4697)
!4702 = !DILocation(line: 2220, column: 5, scope: !4648, inlinedAt: !4697)
!4703 = !DILocation(line: 2221, column: 3, scope: !4648, inlinedAt: !4697)
!4704 = !DILocation(line: 2224, column: 5, scope: !4653, inlinedAt: !4697)
!4705 = !DILocation(line: 2240, column: 5, scope: !4665, inlinedAt: !4692)
!4706 = !DILocation(line: 2241, column: 3, scope: !4665, inlinedAt: !4692)
!4707 = !DILocation(line: 2244, column: 5, scope: !4678, inlinedAt: !4692)
!4708 = !DILocation(line: 2260, column: 5, scope: !4690)
!4709 = !DILocation(line: 2261, column: 3, scope: !4690)
!4710 = !DILocation(line: 2264, column: 5, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4687, file: !2, line: 2263, column: 3)
!4712 = !DILocation(line: 2266, column: 1, scope: !4680)
!4713 = distinct !DISubprogram(name: "get_mem2Ddouble", scope: !2, file: !2, line: 2277, type: !4714, scopeLine: 2278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4716)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!327, !546, !327, !327}
!4716 = !{!4717, !4718, !4719, !4720}
!4717 = !DILocalVariable(name: "array2D", arg: 1, scope: !4713, file: !2, line: 2277, type: !546)
!4718 = !DILocalVariable(name: "dim0", arg: 2, scope: !4713, file: !2, line: 2277, type: !327)
!4719 = !DILocalVariable(name: "dim1", arg: 3, scope: !4713, file: !2, line: 2277, type: !327)
!4720 = !DILocalVariable(name: "i", scope: !4713, file: !2, line: 2279, type: !327)
!4721 = !DILocation(line: 0, scope: !4713)
!4722 = !DILocation(line: 2281, column: 40, scope: !4723)
!4723 = distinct !DILexicalBlock(scope: !4713, file: !2, line: 2281, column: 6)
!4724 = !DILocation(line: 2281, column: 45, scope: !4723)
!4725 = !DILocation(line: 2281, column: 33, scope: !4723)
!4726 = !DILocation(line: 2281, column: 21, scope: !4723)
!4727 = !DILocation(line: 2281, column: 65, scope: !4723)
!4728 = !DILocation(line: 2281, column: 6, scope: !4713)
!4729 = !DILocation(line: 0, scope: !575, inlinedAt: !4730)
!4730 = distinct !DILocation(line: 2282, column: 5, scope: !4723)
!4731 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4730)
!4732 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4730)
!4733 = !DILocation(line: 2284, column: 8, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4713, file: !2, line: 2284, column: 6)
!4735 = !DILocation(line: 2282, column: 5, scope: !4723)
!4736 = !DILocation(line: 2284, column: 45, scope: !4734)
!4737 = !DILocation(line: 2284, column: 40, scope: !4734)
!4738 = !DILocation(line: 2284, column: 33, scope: !4734)
!4739 = !DILocation(line: 2284, column: 21, scope: !4734)
!4740 = !DILocation(line: 2284, column: 70, scope: !4734)
!4741 = !DILocation(line: 2284, column: 6, scope: !4713)
!4742 = !DILocation(line: 0, scope: !575, inlinedAt: !4743)
!4743 = distinct !DILocation(line: 2285, column: 5, scope: !4734)
!4744 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4743)
!4745 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4743)
!4746 = !DILocation(line: 2285, column: 5, scope: !4734)
!4747 = !DILocation(line: 2287, column: 14, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2, line: 2287, column: 3)
!4749 = distinct !DILexicalBlock(scope: !4713, file: !2, line: 2287, column: 3)
!4750 = !DILocation(line: 2287, column: 3, scope: !4749)
!4751 = !DILocation(line: 2288, column: 23, scope: !4748)
!4752 = !DILocation(line: 2288, column: 22, scope: !4748)
!4753 = !DILocation(line: 2288, column: 38, scope: !4748)
!4754 = !DILocation(line: 2288, column: 19, scope: !4748)
!4755 = !DILocation(line: 2287, column: 23, scope: !4748)
!4756 = distinct !{!4756, !4750, !4757}
!4757 = !DILocation(line: 2288, column: 40, scope: !4749)
!4758 = distinct !{!4758, !686}
!4759 = !DILocation(line: 2290, column: 41, scope: !4713)
!4760 = !DILocation(line: 2290, column: 34, scope: !4713)
!4761 = !DILocation(line: 2290, column: 15, scope: !4713)
!4762 = !DILocation(line: 2290, column: 3, scope: !4713)
!4763 = distinct !DISubprogram(name: "get_mem1Dodouble", scope: !2, file: !2, line: 2303, type: !4764, scopeLine: 2304, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4766)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!327, !544, !327, !327}
!4766 = !{!4767, !4768, !4769}
!4767 = !DILocalVariable(name: "array1D", arg: 1, scope: !4763, file: !2, line: 2303, type: !544)
!4768 = !DILocalVariable(name: "dim0", arg: 2, scope: !4763, file: !2, line: 2303, type: !327)
!4769 = !DILocalVariable(name: "offset", arg: 3, scope: !4763, file: !2, line: 2303, type: !327)
!4770 = !DILocation(line: 0, scope: !4763)
!4771 = !DILocation(line: 2305, column: 39, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4763, file: !2, line: 2305, column: 6)
!4773 = !DILocation(line: 2305, column: 44, scope: !4772)
!4774 = !DILocation(line: 2305, column: 32, scope: !4772)
!4775 = !DILocation(line: 2305, column: 21, scope: !4772)
!4776 = !DILocation(line: 2305, column: 69, scope: !4772)
!4777 = !DILocation(line: 2305, column: 6, scope: !4763)
!4778 = !DILocation(line: 0, scope: !575, inlinedAt: !4779)
!4779 = distinct !DILocation(line: 2306, column: 5, scope: !4772)
!4780 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4779)
!4781 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4779)
!4782 = !DILocation(line: 2308, column: 12, scope: !4763)
!4783 = !DILocation(line: 2306, column: 5, scope: !4772)
!4784 = !DILocation(line: 2310, column: 10, scope: !4763)
!4785 = !DILocation(line: 2310, column: 3, scope: !4763)
!4786 = distinct !DISubprogram(name: "get_mem2Dodouble", scope: !2, file: !2, line: 2323, type: !4787, scopeLine: 2324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4789)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!327, !546, !327, !327, !327}
!4789 = !{!4790, !4791, !4792, !4793, !4794}
!4790 = !DILocalVariable(name: "array2D", arg: 1, scope: !4786, file: !2, line: 2323, type: !546)
!4791 = !DILocalVariable(name: "dim0", arg: 2, scope: !4786, file: !2, line: 2323, type: !327)
!4792 = !DILocalVariable(name: "dim1", arg: 3, scope: !4786, file: !2, line: 2323, type: !327)
!4793 = !DILocalVariable(name: "offset", arg: 4, scope: !4786, file: !2, line: 2323, type: !327)
!4794 = !DILocalVariable(name: "i", scope: !4786, file: !2, line: 2325, type: !327)
!4795 = !DILocation(line: 0, scope: !4786)
!4796 = !DILocation(line: 2327, column: 40, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4786, file: !2, line: 2327, column: 6)
!4798 = !DILocation(line: 2327, column: 45, scope: !4797)
!4799 = !DILocation(line: 2327, column: 33, scope: !4797)
!4800 = !DILocation(line: 2327, column: 21, scope: !4797)
!4801 = !DILocation(line: 2327, column: 71, scope: !4797)
!4802 = !DILocation(line: 2327, column: 6, scope: !4786)
!4803 = !DILocation(line: 0, scope: !575, inlinedAt: !4804)
!4804 = distinct !DILocation(line: 2328, column: 5, scope: !4797)
!4805 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4804)
!4806 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4804)
!4807 = !DILocation(line: 2329, column: 8, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4786, file: !2, line: 2329, column: 6)
!4809 = !DILocation(line: 2328, column: 5, scope: !4797)
!4810 = !DILocation(line: 2329, column: 45, scope: !4808)
!4811 = !DILocation(line: 2329, column: 40, scope: !4808)
!4812 = !DILocation(line: 2329, column: 33, scope: !4808)
!4813 = !DILocation(line: 2329, column: 21, scope: !4808)
!4814 = !DILocation(line: 2329, column: 71, scope: !4808)
!4815 = !DILocation(line: 2329, column: 6, scope: !4786)
!4816 = !DILocation(line: 0, scope: !575, inlinedAt: !4817)
!4817 = distinct !DILocation(line: 2330, column: 5, scope: !4808)
!4818 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4817)
!4819 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4817)
!4820 = !DILocation(line: 2330, column: 5, scope: !4808)
!4821 = !DILocation(line: 2332, column: 4, scope: !4786)
!4822 = !DILocation(line: 2332, column: 17, scope: !4786)
!4823 = !DILocation(line: 2334, column: 14, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4825, file: !2, line: 2334, column: 3)
!4825 = distinct !DILexicalBlock(scope: !4786, file: !2, line: 2334, column: 3)
!4826 = !DILocation(line: 2334, column: 3, scope: !4825)
!4827 = !DILocation(line: 2335, column: 23, scope: !4824)
!4828 = !DILocation(line: 2335, column: 22, scope: !4824)
!4829 = !DILocation(line: 2335, column: 38, scope: !4824)
!4830 = !DILocation(line: 2335, column: 19, scope: !4824)
!4831 = !DILocation(line: 2334, column: 23, scope: !4824)
!4832 = distinct !{!4832, !4826, !4833}
!4833 = !DILocation(line: 2335, column: 40, scope: !4825)
!4834 = distinct !{!4834, !686}
!4835 = !DILocation(line: 2337, column: 41, scope: !4786)
!4836 = !DILocation(line: 2337, column: 34, scope: !4786)
!4837 = !DILocation(line: 2337, column: 15, scope: !4786)
!4838 = !DILocation(line: 2337, column: 3, scope: !4786)
!4839 = distinct !DISubprogram(name: "get_mem3Dodouble", scope: !2, file: !2, line: 2349, type: !4840, scopeLine: 2350, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4843)
!4840 = !DISubroutineType(types: !4841)
!4841 = !{!327, !4842, !327, !327, !327, !327}
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!4843 = !{!4844, !4845, !4846, !4847, !4848, !4849, !4850}
!4844 = !DILocalVariable(name: "array3D", arg: 1, scope: !4839, file: !2, line: 2349, type: !4842)
!4845 = !DILocalVariable(name: "dim0", arg: 2, scope: !4839, file: !2, line: 2349, type: !327)
!4846 = !DILocalVariable(name: "dim1", arg: 3, scope: !4839, file: !2, line: 2349, type: !327)
!4847 = !DILocalVariable(name: "dim2", arg: 4, scope: !4839, file: !2, line: 2349, type: !327)
!4848 = !DILocalVariable(name: "offset", arg: 5, scope: !4839, file: !2, line: 2349, type: !327)
!4849 = !DILocalVariable(name: "i", scope: !4839, file: !2, line: 2351, type: !327)
!4850 = !DILocalVariable(name: "j", scope: !4839, file: !2, line: 2351, type: !327)
!4851 = !DILocation(line: 0, scope: !4839)
!4852 = !DILocation(line: 2353, column: 38, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4839, file: !2, line: 2353, column: 6)
!4854 = !DILocation(line: 2353, column: 43, scope: !4853)
!4855 = !DILocation(line: 2353, column: 31, scope: !4853)
!4856 = !DILocation(line: 2353, column: 18, scope: !4853)
!4857 = !DILocation(line: 2353, column: 64, scope: !4853)
!4858 = !DILocation(line: 2353, column: 6, scope: !4839)
!4859 = !DILocation(line: 0, scope: !575, inlinedAt: !4860)
!4860 = distinct !DILocation(line: 2354, column: 5, scope: !4853)
!4861 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4860)
!4862 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4860)
!4863 = !DILocation(line: 2356, column: 8, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4839, file: !2, line: 2356, column: 6)
!4865 = !DILocation(line: 2354, column: 5, scope: !4853)
!4866 = !DILocation(line: 2356, column: 46, scope: !4864)
!4867 = !DILocation(line: 2356, column: 41, scope: !4864)
!4868 = !DILocation(line: 2356, column: 34, scope: !4864)
!4869 = !DILocation(line: 2356, column: 21, scope: !4864)
!4870 = !DILocation(line: 2356, column: 72, scope: !4864)
!4871 = !DILocation(line: 2356, column: 6, scope: !4839)
!4872 = !DILocation(line: 0, scope: !575, inlinedAt: !4873)
!4873 = distinct !DILocation(line: 2357, column: 5, scope: !4864)
!4874 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4873)
!4875 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4873)
!4876 = !DILocation(line: 2357, column: 5, scope: !4864)
!4877 = !DILocation(line: 2359, column: 4, scope: !4839)
!4878 = !DILocation(line: 2359, column: 18, scope: !4839)
!4879 = !DILocation(line: 2361, column: 14, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !2, line: 2361, column: 3)
!4881 = distinct !DILexicalBlock(scope: !4839, file: !2, line: 2361, column: 3)
!4882 = !DILocation(line: 2361, column: 3, scope: !4881)
!4883 = !DILocation(line: 2362, column: 23, scope: !4880)
!4884 = !DILocation(line: 2362, column: 22, scope: !4880)
!4885 = !DILocation(line: 2362, column: 38, scope: !4880)
!4886 = !DILocation(line: 2362, column: 19, scope: !4880)
!4887 = !DILocation(line: 2361, column: 23, scope: !4880)
!4888 = distinct !{!4888, !686}
!4889 = !DILocation(line: 2364, column: 17, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !2, line: 2364, column: 3)
!4891 = distinct !DILexicalBlock(scope: !4839, file: !2, line: 2364, column: 3)
!4892 = !DILocation(line: 2364, column: 3, scope: !4891)
!4893 = !DILocation(line: 2365, column: 5, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4890, file: !2, line: 2365, column: 5)
!4895 = !DILocation(line: 2366, column: 40, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4897, file: !2, line: 2366, column: 10)
!4897 = distinct !DILexicalBlock(scope: !4894, file: !2, line: 2365, column: 5)
!4898 = !DILocation(line: 2366, column: 12, scope: !4896)
!4899 = !DILocation(line: 2366, column: 11, scope: !4896)
!4900 = !DILocation(line: 2366, column: 28, scope: !4896)
!4901 = !DILocation(line: 2366, column: 70, scope: !4896)
!4902 = !DILocation(line: 2366, column: 10, scope: !4897)
!4903 = !DILocation(line: 0, scope: !575, inlinedAt: !4904)
!4904 = distinct !DILocation(line: 2367, column: 9, scope: !4896)
!4905 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4904)
!4906 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4904)
!4907 = !DILocation(line: 2367, column: 9, scope: !4896)
!4908 = !DILocation(line: 2365, column: 43, scope: !4897)
!4909 = !DILocation(line: 2365, column: 25, scope: !4897)
!4910 = distinct !{!4910, !4893, !4911}
!4911 = !DILocation(line: 2367, column: 48, scope: !4894)
!4912 = !DILocation(line: 2364, column: 26, scope: !4890)
!4913 = distinct !{!4913, !4892, !4914}
!4914 = !DILocation(line: 2367, column: 48, scope: !4891)
!4915 = distinct !{!4915, !4882, !4916}
!4916 = !DILocation(line: 2362, column: 40, scope: !4881)
!4917 = !DILocation(line: 2369, column: 68, scope: !4839)
!4918 = !DILocation(line: 2369, column: 61, scope: !4839)
!4919 = !DILocation(line: 2369, column: 41, scope: !4839)
!4920 = !DILocation(line: 2369, column: 34, scope: !4839)
!4921 = !DILocation(line: 2369, column: 14, scope: !4839)
!4922 = !DILocation(line: 2369, column: 3, scope: !4839)
!4923 = distinct !DISubprogram(name: "get_offset_mem2Dshort", scope: !2, file: !2, line: 2383, type: !4924, scopeLine: 2384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4926)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!327, !539, !327, !327, !327, !327}
!4926 = !{!4927, !4928, !4929, !4930, !4931, !4932}
!4927 = !DILocalVariable(name: "array2D", arg: 1, scope: !4923, file: !2, line: 2383, type: !539)
!4928 = !DILocalVariable(name: "dim0", arg: 2, scope: !4923, file: !2, line: 2383, type: !327)
!4929 = !DILocalVariable(name: "dim1", arg: 3, scope: !4923, file: !2, line: 2383, type: !327)
!4930 = !DILocalVariable(name: "offset_y", arg: 4, scope: !4923, file: !2, line: 2383, type: !327)
!4931 = !DILocalVariable(name: "offset_x", arg: 5, scope: !4923, file: !2, line: 2383, type: !327)
!4932 = !DILocalVariable(name: "i", scope: !4923, file: !2, line: 2385, type: !327)
!4933 = !DILocation(line: 0, scope: !4923)
!4934 = !DILocation(line: 2387, column: 39, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4923, file: !2, line: 2387, column: 6)
!4936 = !DILocation(line: 2387, column: 44, scope: !4935)
!4937 = !DILocation(line: 2387, column: 32, scope: !4935)
!4938 = !DILocation(line: 2387, column: 21, scope: !4935)
!4939 = !DILocation(line: 2387, column: 63, scope: !4935)
!4940 = !DILocation(line: 2387, column: 6, scope: !4923)
!4941 = !DILocation(line: 0, scope: !575, inlinedAt: !4942)
!4942 = distinct !DILocation(line: 2388, column: 5, scope: !4935)
!4943 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4942)
!4944 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4942)
!4945 = !DILocation(line: 2390, column: 8, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4923, file: !2, line: 2390, column: 6)
!4947 = !DILocation(line: 2388, column: 5, scope: !4935)
!4948 = !DILocation(line: 2390, column: 44, scope: !4946)
!4949 = !DILocation(line: 2390, column: 39, scope: !4946)
!4950 = !DILocation(line: 2390, column: 32, scope: !4946)
!4951 = !DILocation(line: 2390, column: 21, scope: !4946)
!4952 = !DILocation(line: 2390, column: 68, scope: !4946)
!4953 = !DILocation(line: 2390, column: 6, scope: !4923)
!4954 = !DILocation(line: 0, scope: !575, inlinedAt: !4955)
!4955 = distinct !DILocation(line: 2391, column: 5, scope: !4946)
!4956 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !4955)
!4957 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !4955)
!4958 = !DILocation(line: 2391, column: 5, scope: !4946)
!4959 = !DILocation(line: 2392, column: 40, scope: !4923)
!4960 = !DILocation(line: 2392, column: 29, scope: !4923)
!4961 = !DILocation(line: 2392, column: 4, scope: !4923)
!4962 = !DILocation(line: 2392, column: 17, scope: !4923)
!4963 = !DILocation(line: 2394, column: 16, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !2, line: 2394, column: 3)
!4965 = distinct !DILexicalBlock(scope: !4923, file: !2, line: 2394, column: 3)
!4966 = !DILocation(line: 2394, column: 3, scope: !4965)
!4967 = !DILocation(line: 2399, column: 15, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !2, line: 2399, column: 3)
!4969 = distinct !DILexicalBlock(scope: !4923, file: !2, line: 2399, column: 3)
!4970 = !DILocation(line: 2399, column: 3, scope: !4969)
!4971 = !DILocation(line: 2396, column: 23, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4964, file: !2, line: 2395, column: 3)
!4973 = !DILocation(line: 2396, column: 22, scope: !4972)
!4974 = !DILocation(line: 2396, column: 38, scope: !4972)
!4975 = !DILocation(line: 2396, column: 19, scope: !4972)
!4976 = !DILocation(line: 2394, column: 34, scope: !4964)
!4977 = distinct !{!4977, !4966, !4978}
!4978 = !DILocation(line: 2397, column: 3, scope: !4965)
!4979 = !DILocation(line: 2400, column: 23, scope: !4968)
!4980 = !DILocation(line: 2400, column: 22, scope: !4968)
!4981 = !DILocation(line: 2400, column: 38, scope: !4968)
!4982 = !DILocation(line: 2400, column: 19, scope: !4968)
!4983 = !DILocation(line: 2399, column: 35, scope: !4968)
!4984 = distinct !{!4984, !4970, !4985}
!4985 = !DILocation(line: 2400, column: 40, scope: !4969)
!4986 = distinct !{!4986, !686}
!4987 = !DILocation(line: 2402, column: 40, scope: !4923)
!4988 = !DILocation(line: 2402, column: 33, scope: !4923)
!4989 = !DILocation(line: 2402, column: 15, scope: !4923)
!4990 = !DILocation(line: 2402, column: 3, scope: !4923)
!4991 = distinct !DISubprogram(name: "get_mem3Doint", scope: !2, file: !2, line: 2414, type: !4992, scopeLine: 2415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !4994)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!327, !531, !327, !327, !327, !327}
!4994 = !{!4995, !4996, !4997, !4998, !4999, !5000, !5001}
!4995 = !DILocalVariable(name: "array3D", arg: 1, scope: !4991, file: !2, line: 2414, type: !531)
!4996 = !DILocalVariable(name: "dim0", arg: 2, scope: !4991, file: !2, line: 2414, type: !327)
!4997 = !DILocalVariable(name: "dim1", arg: 3, scope: !4991, file: !2, line: 2414, type: !327)
!4998 = !DILocalVariable(name: "dim2", arg: 4, scope: !4991, file: !2, line: 2414, type: !327)
!4999 = !DILocalVariable(name: "offset", arg: 5, scope: !4991, file: !2, line: 2414, type: !327)
!5000 = !DILocalVariable(name: "i", scope: !4991, file: !2, line: 2416, type: !327)
!5001 = !DILocalVariable(name: "j", scope: !4991, file: !2, line: 2416, type: !327)
!5002 = !DILocation(line: 0, scope: !4991)
!5003 = !DILocation(line: 2418, column: 35, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4991, file: !2, line: 2418, column: 6)
!5005 = !DILocation(line: 2418, column: 40, scope: !5004)
!5006 = !DILocation(line: 2418, column: 28, scope: !5004)
!5007 = !DILocation(line: 2418, column: 18, scope: !5004)
!5008 = !DILocation(line: 2418, column: 58, scope: !5004)
!5009 = !DILocation(line: 2418, column: 6, scope: !4991)
!5010 = !DILocation(line: 0, scope: !575, inlinedAt: !5011)
!5011 = distinct !DILocation(line: 2419, column: 5, scope: !5004)
!5012 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5011)
!5013 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5011)
!5014 = !DILocation(line: 2421, column: 8, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !4991, file: !2, line: 2421, column: 6)
!5016 = !DILocation(line: 2419, column: 5, scope: !5004)
!5017 = !DILocation(line: 2421, column: 43, scope: !5015)
!5018 = !DILocation(line: 2421, column: 38, scope: !5015)
!5019 = !DILocation(line: 2421, column: 31, scope: !5015)
!5020 = !DILocation(line: 2421, column: 21, scope: !5015)
!5021 = !DILocation(line: 2421, column: 66, scope: !5015)
!5022 = !DILocation(line: 2421, column: 6, scope: !4991)
!5023 = !DILocation(line: 0, scope: !575, inlinedAt: !5024)
!5024 = distinct !DILocation(line: 2422, column: 5, scope: !5015)
!5025 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5024)
!5026 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5024)
!5027 = !DILocation(line: 2422, column: 5, scope: !5015)
!5028 = !DILocation(line: 2424, column: 4, scope: !4991)
!5029 = !DILocation(line: 2424, column: 18, scope: !4991)
!5030 = !DILocation(line: 2426, column: 14, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !2, line: 2426, column: 3)
!5032 = distinct !DILexicalBlock(scope: !4991, file: !2, line: 2426, column: 3)
!5033 = !DILocation(line: 2426, column: 3, scope: !5032)
!5034 = !DILocation(line: 2427, column: 23, scope: !5031)
!5035 = !DILocation(line: 2427, column: 22, scope: !5031)
!5036 = !DILocation(line: 2427, column: 38, scope: !5031)
!5037 = !DILocation(line: 2427, column: 19, scope: !5031)
!5038 = !DILocation(line: 2426, column: 23, scope: !5031)
!5039 = distinct !{!5039, !686}
!5040 = !DILocation(line: 2429, column: 17, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !2, line: 2429, column: 3)
!5042 = distinct !DILexicalBlock(scope: !4991, file: !2, line: 2429, column: 3)
!5043 = !DILocation(line: 2429, column: 3, scope: !5042)
!5044 = !DILocation(line: 2430, column: 5, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !2, line: 2430, column: 5)
!5046 = !DILocation(line: 2431, column: 37, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !2, line: 2431, column: 10)
!5048 = distinct !DILexicalBlock(scope: !5045, file: !2, line: 2430, column: 5)
!5049 = !DILocation(line: 2431, column: 12, scope: !5047)
!5050 = !DILocation(line: 2431, column: 11, scope: !5047)
!5051 = !DILocation(line: 2431, column: 28, scope: !5047)
!5052 = !DILocation(line: 2431, column: 64, scope: !5047)
!5053 = !DILocation(line: 2431, column: 10, scope: !5048)
!5054 = !DILocation(line: 0, scope: !575, inlinedAt: !5055)
!5055 = distinct !DILocation(line: 2432, column: 9, scope: !5047)
!5056 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5055)
!5057 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5055)
!5058 = !DILocation(line: 2432, column: 9, scope: !5047)
!5059 = !DILocation(line: 2430, column: 43, scope: !5048)
!5060 = !DILocation(line: 2430, column: 25, scope: !5048)
!5061 = distinct !{!5061, !5044, !5062}
!5062 = !DILocation(line: 2432, column: 45, scope: !5045)
!5063 = !DILocation(line: 2429, column: 26, scope: !5041)
!5064 = distinct !{!5064, !5043, !5065}
!5065 = !DILocation(line: 2432, column: 45, scope: !5042)
!5066 = distinct !{!5066, !5033, !5067}
!5067 = !DILocation(line: 2427, column: 40, scope: !5032)
!5068 = !DILocation(line: 2434, column: 62, scope: !4991)
!5069 = !DILocation(line: 2434, column: 55, scope: !4991)
!5070 = !DILocation(line: 2434, column: 39, scope: !4991)
!5071 = !DILocation(line: 2434, column: 32, scope: !4991)
!5072 = !DILocation(line: 2434, column: 15, scope: !4991)
!5073 = !DILocation(line: 2434, column: 3, scope: !4991)
!5074 = distinct !DISubprogram(name: "get_mem2Doint", scope: !2, file: !2, line: 2447, type: !5075, scopeLine: 2448, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5077)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!327, !528, !327, !327, !327}
!5077 = !{!5078, !5079, !5080, !5081, !5082}
!5078 = !DILocalVariable(name: "array2D", arg: 1, scope: !5074, file: !2, line: 2447, type: !528)
!5079 = !DILocalVariable(name: "dim0", arg: 2, scope: !5074, file: !2, line: 2447, type: !327)
!5080 = !DILocalVariable(name: "dim1", arg: 3, scope: !5074, file: !2, line: 2447, type: !327)
!5081 = !DILocalVariable(name: "offset", arg: 4, scope: !5074, file: !2, line: 2447, type: !327)
!5082 = !DILocalVariable(name: "i", scope: !5074, file: !2, line: 2449, type: !327)
!5083 = !DILocation(line: 0, scope: !5074)
!5084 = !DILocation(line: 2451, column: 37, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5074, file: !2, line: 2451, column: 6)
!5086 = !DILocation(line: 2451, column: 42, scope: !5085)
!5087 = !DILocation(line: 2451, column: 30, scope: !5085)
!5088 = !DILocation(line: 2451, column: 21, scope: !5085)
!5089 = !DILocation(line: 2451, column: 59, scope: !5085)
!5090 = !DILocation(line: 2451, column: 6, scope: !5074)
!5091 = !DILocation(line: 0, scope: !575, inlinedAt: !5092)
!5092 = distinct !DILocation(line: 2452, column: 5, scope: !5085)
!5093 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5092)
!5094 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5092)
!5095 = !DILocation(line: 2453, column: 8, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5074, file: !2, line: 2453, column: 6)
!5097 = !DILocation(line: 2452, column: 5, scope: !5085)
!5098 = !DILocation(line: 2453, column: 42, scope: !5096)
!5099 = !DILocation(line: 2453, column: 37, scope: !5096)
!5100 = !DILocation(line: 2453, column: 30, scope: !5096)
!5101 = !DILocation(line: 2453, column: 21, scope: !5096)
!5102 = !DILocation(line: 2453, column: 64, scope: !5096)
!5103 = !DILocation(line: 2453, column: 6, scope: !5074)
!5104 = !DILocation(line: 0, scope: !575, inlinedAt: !5105)
!5105 = distinct !DILocation(line: 2454, column: 5, scope: !5096)
!5106 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5105)
!5107 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5105)
!5108 = !DILocation(line: 2454, column: 5, scope: !5096)
!5109 = !DILocation(line: 2456, column: 4, scope: !5074)
!5110 = !DILocation(line: 2456, column: 17, scope: !5074)
!5111 = !DILocation(line: 2458, column: 14, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !2, line: 2458, column: 3)
!5113 = distinct !DILexicalBlock(scope: !5074, file: !2, line: 2458, column: 3)
!5114 = !DILocation(line: 2458, column: 3, scope: !5113)
!5115 = !DILocation(line: 2459, column: 23, scope: !5112)
!5116 = !DILocation(line: 2459, column: 22, scope: !5112)
!5117 = !DILocation(line: 2459, column: 38, scope: !5112)
!5118 = !DILocation(line: 2459, column: 19, scope: !5112)
!5119 = !DILocation(line: 2458, column: 23, scope: !5112)
!5120 = distinct !{!5120, !5114, !5121}
!5121 = !DILocation(line: 2459, column: 40, scope: !5113)
!5122 = distinct !{!5122, !686}
!5123 = !DILocation(line: 2461, column: 38, scope: !5074)
!5124 = !DILocation(line: 2461, column: 31, scope: !5074)
!5125 = !DILocation(line: 2461, column: 15, scope: !5074)
!5126 = !DILocation(line: 2461, column: 3, scope: !5074)
!5127 = distinct !DISubprogram(name: "get_mem3Ddouble", scope: !2, file: !2, line: 2475, type: !5128, scopeLine: 2476, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5130)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!327, !4842, !327, !327, !327}
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136, !5137}
!5131 = !DILocalVariable(name: "array3D", arg: 1, scope: !5127, file: !2, line: 2475, type: !4842)
!5132 = !DILocalVariable(name: "dim0", arg: 2, scope: !5127, file: !2, line: 2475, type: !327)
!5133 = !DILocalVariable(name: "dim1", arg: 3, scope: !5127, file: !2, line: 2475, type: !327)
!5134 = !DILocalVariable(name: "dim2", arg: 4, scope: !5127, file: !2, line: 2475, type: !327)
!5135 = !DILocalVariable(name: "j", scope: !5127, file: !2, line: 2477, type: !327)
!5136 = !DILocalVariable(name: "mem_size", scope: !5127, file: !2, line: 2477, type: !327)
!5137 = !DILocalVariable(name: "array2D", scope: !5127, file: !2, line: 2479, type: !544)
!5138 = distinct !DIAssignID()
!5139 = !DILocation(line: 0, scope: !5127)
!5140 = !DILocation(line: 2477, column: 21, scope: !5127)
!5141 = !DILocation(line: 2477, column: 26, scope: !5127)
!5142 = !DILocation(line: 2479, column: 3, scope: !5127)
!5143 = !DILocation(line: 2481, column: 31, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5127, file: !2, line: 2481, column: 6)
!5145 = !DILocation(line: 2481, column: 18, scope: !5144)
!5146 = !DILocation(line: 2481, column: 64, scope: !5144)
!5147 = !DILocation(line: 2481, column: 6, scope: !5127)
!5148 = !DILocation(line: 0, scope: !575, inlinedAt: !5149)
!5149 = distinct !DILocation(line: 2482, column: 5, scope: !5144)
!5150 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5149)
!5151 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5149)
!5152 = !DILocation(line: 2482, column: 5, scope: !5144)
!5153 = !DILocation(line: 2484, column: 46, scope: !5127)
!5154 = !DILocation(line: 2484, column: 15, scope: !5127)
!5155 = !DILocation(line: 2486, column: 16, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !2, line: 2486, column: 3)
!5157 = distinct !DILexicalBlock(scope: !5127, file: !2, line: 2486, column: 3)
!5158 = !DILocation(line: 2486, column: 3, scope: !5157)
!5159 = !DILocation(line: 2488, column: 32, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5156, file: !2, line: 2487, column: 3)
!5161 = !DILocation(line: 2488, column: 22, scope: !5160)
!5162 = !DILocation(line: 2488, column: 6, scope: !5160)
!5163 = !DILocation(line: 2488, column: 5, scope: !5160)
!5164 = !DILocation(line: 2488, column: 19, scope: !5160)
!5165 = !DILocation(line: 2486, column: 25, scope: !5156)
!5166 = distinct !{!5166, !5158, !5167}
!5167 = !DILocation(line: 2489, column: 3, scope: !5157)
!5168 = distinct !{!5168, !686}
!5169 = !DILocation(line: 2484, column: 12, scope: !5127)
!5170 = !DILocation(line: 2492, column: 1, scope: !5127)
!5171 = !DILocation(line: 2491, column: 3, scope: !5127)
!5172 = distinct !DISubprogram(name: "free_mem2Ddouble", scope: !2, file: !2, line: 2501, type: !5173, scopeLine: 2502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5175)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{null, !544}
!5175 = !{!5176}
!5176 = !DILocalVariable(name: "array2D", arg: 1, scope: !5172, file: !2, line: 2501, type: !544)
!5177 = !DILocation(line: 0, scope: !5172)
!5178 = !DILocation(line: 2503, column: 7, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5172, file: !2, line: 2503, column: 7)
!5180 = !DILocation(line: 2503, column: 7, scope: !5172)
!5181 = !DILocation(line: 2505, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5183, file: !2, line: 2505, column: 9)
!5183 = distinct !DILexicalBlock(scope: !5179, file: !2, line: 2504, column: 3)
!5184 = !DILocation(line: 2505, column: 9, scope: !5183)
!5185 = !DILocation(line: 2506, column: 7, scope: !5182)
!5186 = !DILocation(line: 2508, column: 7, scope: !5182)
!5187 = !DILocation(line: 2510, column: 5, scope: !5183)
!5188 = !DILocation(line: 2512, column: 3, scope: !5183)
!5189 = !DILocation(line: 2515, column: 5, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5179, file: !2, line: 2514, column: 3)
!5191 = !DILocation(line: 2517, column: 1, scope: !5172)
!5192 = distinct !DISubprogram(name: "free_mem1Dodouble", scope: !2, file: !2, line: 2526, type: !5193, scopeLine: 2527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5195)
!5193 = !DISubroutineType(types: !5194)
!5194 = !{null, !545, !327}
!5195 = !{!5196, !5197}
!5196 = !DILocalVariable(name: "array1D", arg: 1, scope: !5192, file: !2, line: 2526, type: !545)
!5197 = !DILocalVariable(name: "offset", arg: 2, scope: !5192, file: !2, line: 2526, type: !327)
!5198 = !DILocation(line: 0, scope: !5192)
!5199 = !DILocation(line: 2528, column: 7, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5192, file: !2, line: 2528, column: 7)
!5201 = !DILocation(line: 2528, column: 7, scope: !5192)
!5202 = !DILocation(line: 2530, column: 13, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !2, line: 2529, column: 3)
!5204 = !DILocation(line: 2531, column: 5, scope: !5203)
!5205 = !DILocation(line: 2532, column: 3, scope: !5203)
!5206 = !DILocation(line: 2535, column: 5, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5200, file: !2, line: 2534, column: 3)
!5208 = !DILocation(line: 2537, column: 1, scope: !5192)
!5209 = distinct !DISubprogram(name: "free_mem2Dodouble", scope: !2, file: !2, line: 2546, type: !5210, scopeLine: 2547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5212)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{null, !544, !327}
!5212 = !{!5213, !5214}
!5213 = !DILocalVariable(name: "array2D", arg: 1, scope: !5209, file: !2, line: 2546, type: !544)
!5214 = !DILocalVariable(name: "offset", arg: 2, scope: !5209, file: !2, line: 2546, type: !327)
!5215 = !DILocation(line: 0, scope: !5209)
!5216 = !DILocation(line: 2548, column: 7, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5209, file: !2, line: 2548, column: 7)
!5218 = !DILocation(line: 2548, column: 7, scope: !5209)
!5219 = !DILocation(line: 2550, column: 16, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5217, file: !2, line: 2549, column: 3)
!5221 = !DILocation(line: 2551, column: 9, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5220, file: !2, line: 2551, column: 9)
!5223 = !DILocation(line: 2551, column: 9, scope: !5220)
!5224 = !DILocation(line: 2552, column: 7, scope: !5222)
!5225 = !DILocation(line: 2553, column: 10, scope: !5222)
!5226 = !DILocation(line: 2555, column: 5, scope: !5220)
!5227 = !DILocation(line: 2557, column: 3, scope: !5220)
!5228 = !DILocation(line: 2559, column: 5, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5217, file: !2, line: 2558, column: 3)
!5230 = !DILocation(line: 2561, column: 1, scope: !5209)
!5231 = distinct !DISubprogram(name: "free_mem3Dodouble", scope: !2, file: !2, line: 2569, type: !5232, scopeLine: 2570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5234)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{null, !546, !327, !327, !327}
!5234 = !{!5235, !5236, !5237, !5238, !5239, !5240}
!5235 = !DILocalVariable(name: "array3D", arg: 1, scope: !5231, file: !2, line: 2569, type: !546)
!5236 = !DILocalVariable(name: "dim0", arg: 2, scope: !5231, file: !2, line: 2569, type: !327)
!5237 = !DILocalVariable(name: "dim1", arg: 3, scope: !5231, file: !2, line: 2569, type: !327)
!5238 = !DILocalVariable(name: "offset", arg: 4, scope: !5231, file: !2, line: 2569, type: !327)
!5239 = !DILocalVariable(name: "i", scope: !5231, file: !2, line: 2571, type: !327)
!5240 = !DILocalVariable(name: "j", scope: !5231, file: !2, line: 2571, type: !327)
!5241 = !DILocation(line: 0, scope: !5231)
!5242 = !DILocation(line: 2573, column: 7, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5231, file: !2, line: 2573, column: 7)
!5244 = !DILocation(line: 2573, column: 7, scope: !5231)
!5245 = !DILocation(line: 2575, column: 19, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !2, line: 2575, column: 5)
!5247 = distinct !DILexicalBlock(scope: !5248, file: !2, line: 2575, column: 5)
!5248 = distinct !DILexicalBlock(scope: !5243, file: !2, line: 2574, column: 3)
!5249 = !DILocation(line: 2575, column: 5, scope: !5247)
!5250 = !DILocation(line: 2577, column: 7, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !2, line: 2577, column: 7)
!5252 = distinct !DILexicalBlock(scope: !5246, file: !2, line: 2576, column: 5)
!5253 = !DILocation(line: 2579, column: 13, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !2, line: 2579, column: 13)
!5255 = distinct !DILexicalBlock(scope: !5256, file: !2, line: 2578, column: 7)
!5256 = distinct !DILexicalBlock(scope: !5251, file: !2, line: 2577, column: 7)
!5257 = !DILocation(line: 2579, column: 13, scope: !5255)
!5258 = !DILocation(line: 2580, column: 11, scope: !5254)
!5259 = !DILocation(line: 2582, column: 11, scope: !5254)
!5260 = !DILocation(line: 2577, column: 45, scope: !5256)
!5261 = !DILocation(line: 2577, column: 27, scope: !5256)
!5262 = distinct !{!5262, !5250, !5263}
!5263 = !DILocation(line: 2583, column: 7, scope: !5251)
!5264 = !DILocation(line: 2575, column: 28, scope: !5246)
!5265 = distinct !{!5265, !5249, !5266}
!5266 = !DILocation(line: 2584, column: 5, scope: !5247)
!5267 = !DILocation(line: 2585, column: 16, scope: !5248)
!5268 = !DILocation(line: 2586, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5248, file: !2, line: 2586, column: 9)
!5270 = !DILocation(line: 2586, column: 9, scope: !5248)
!5271 = !DILocation(line: 2587, column: 7, scope: !5269)
!5272 = !DILocation(line: 2589, column: 7, scope: !5269)
!5273 = !DILocation(line: 2590, column: 5, scope: !5248)
!5274 = !DILocation(line: 2591, column: 3, scope: !5248)
!5275 = !DILocation(line: 2594, column: 5, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5243, file: !2, line: 2593, column: 3)
!5277 = !DILocation(line: 2596, column: 1, scope: !5231)
!5278 = distinct !DISubprogram(name: "free_mem3Doint", scope: !2, file: !2, line: 2604, type: !5279, scopeLine: 2605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5281)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{null, !528, !327, !327, !327}
!5281 = !{!5282, !5283, !5284, !5285, !5286, !5287}
!5282 = !DILocalVariable(name: "array3D", arg: 1, scope: !5278, file: !2, line: 2604, type: !528)
!5283 = !DILocalVariable(name: "dim0", arg: 2, scope: !5278, file: !2, line: 2604, type: !327)
!5284 = !DILocalVariable(name: "dim1", arg: 3, scope: !5278, file: !2, line: 2604, type: !327)
!5285 = !DILocalVariable(name: "offset", arg: 4, scope: !5278, file: !2, line: 2604, type: !327)
!5286 = !DILocalVariable(name: "i", scope: !5278, file: !2, line: 2606, type: !327)
!5287 = !DILocalVariable(name: "j", scope: !5278, file: !2, line: 2606, type: !327)
!5288 = !DILocation(line: 0, scope: !5278)
!5289 = !DILocation(line: 2608, column: 7, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5278, file: !2, line: 2608, column: 7)
!5291 = !DILocation(line: 2608, column: 7, scope: !5278)
!5292 = !DILocation(line: 2610, column: 19, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !2, line: 2610, column: 5)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !2, line: 2610, column: 5)
!5295 = distinct !DILexicalBlock(scope: !5290, file: !2, line: 2609, column: 3)
!5296 = !DILocation(line: 2610, column: 5, scope: !5294)
!5297 = !DILocation(line: 2612, column: 7, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !2, line: 2612, column: 7)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !2, line: 2611, column: 5)
!5300 = !DILocation(line: 2614, column: 13, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5302, file: !2, line: 2614, column: 13)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !2, line: 2613, column: 7)
!5303 = distinct !DILexicalBlock(scope: !5298, file: !2, line: 2612, column: 7)
!5304 = !DILocation(line: 2614, column: 13, scope: !5302)
!5305 = !DILocation(line: 2615, column: 11, scope: !5301)
!5306 = !DILocation(line: 2617, column: 11, scope: !5301)
!5307 = !DILocation(line: 2612, column: 45, scope: !5303)
!5308 = !DILocation(line: 2612, column: 27, scope: !5303)
!5309 = distinct !{!5309, !5297, !5310}
!5310 = !DILocation(line: 2618, column: 7, scope: !5298)
!5311 = !DILocation(line: 2610, column: 28, scope: !5293)
!5312 = distinct !{!5312, !5296, !5313}
!5313 = !DILocation(line: 2619, column: 5, scope: !5294)
!5314 = !DILocation(line: 2620, column: 16, scope: !5295)
!5315 = !DILocation(line: 2621, column: 9, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5295, file: !2, line: 2621, column: 9)
!5317 = !DILocation(line: 2621, column: 9, scope: !5295)
!5318 = !DILocation(line: 2622, column: 7, scope: !5316)
!5319 = !DILocation(line: 2624, column: 7, scope: !5316)
!5320 = !DILocation(line: 2625, column: 5, scope: !5295)
!5321 = !DILocation(line: 2626, column: 3, scope: !5295)
!5322 = !DILocation(line: 2629, column: 5, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5290, file: !2, line: 2628, column: 3)
!5324 = !DILocation(line: 2631, column: 1, scope: !5278)
!5325 = distinct !DISubprogram(name: "free_mem2Doint", scope: !2, file: !2, line: 2641, type: !5326, scopeLine: 2642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5328)
!5326 = !DISubroutineType(types: !5327)
!5327 = !{null, !520, !327}
!5328 = !{!5329, !5330}
!5329 = !DILocalVariable(name: "array2D", arg: 1, scope: !5325, file: !2, line: 2641, type: !520)
!5330 = !DILocalVariable(name: "offset", arg: 2, scope: !5325, file: !2, line: 2641, type: !327)
!5331 = !DILocation(line: 0, scope: !5325)
!5332 = !DILocation(line: 2643, column: 7, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5325, file: !2, line: 2643, column: 7)
!5334 = !DILocation(line: 2643, column: 7, scope: !5325)
!5335 = !DILocation(line: 2645, column: 16, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !2, line: 2644, column: 3)
!5337 = !DILocation(line: 2646, column: 9, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5336, file: !2, line: 2646, column: 9)
!5339 = !DILocation(line: 2646, column: 9, scope: !5336)
!5340 = !DILocation(line: 2647, column: 7, scope: !5338)
!5341 = !DILocation(line: 2649, column: 7, scope: !5338)
!5342 = !DILocation(line: 2651, column: 5, scope: !5336)
!5343 = !DILocation(line: 2653, column: 3, scope: !5336)
!5344 = !DILocation(line: 2656, column: 5, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5333, file: !2, line: 2655, column: 3)
!5346 = !DILocation(line: 2658, column: 1, scope: !5325)
!5347 = distinct !DISubprogram(name: "free_offset_mem2Dshort", scope: !2, file: !2, line: 2667, type: !5348, scopeLine: 2668, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5350)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{null, !427, !327, !327, !327}
!5350 = !{!5351, !5352, !5353, !5354}
!5351 = !DILocalVariable(name: "array2D", arg: 1, scope: !5347, file: !2, line: 2667, type: !427)
!5352 = !DILocalVariable(name: "dim1", arg: 2, scope: !5347, file: !2, line: 2667, type: !327)
!5353 = !DILocalVariable(name: "offset_y", arg: 3, scope: !5347, file: !2, line: 2667, type: !327)
!5354 = !DILocalVariable(name: "offset_x", arg: 4, scope: !5347, file: !2, line: 2667, type: !327)
!5355 = !DILocation(line: 0, scope: !5347)
!5356 = !DILocation(line: 2669, column: 7, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5347, file: !2, line: 2669, column: 7)
!5358 = !DILocation(line: 2669, column: 7, scope: !5347)
!5359 = !DILocation(line: 2671, column: 39, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5357, file: !2, line: 2670, column: 3)
!5361 = !DILocation(line: 2671, column: 28, scope: !5360)
!5362 = !DILocation(line: 2671, column: 16, scope: !5360)
!5363 = !DILocation(line: 2672, column: 9, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5360, file: !2, line: 2672, column: 9)
!5365 = !DILocation(line: 2672, column: 9, scope: !5360)
!5366 = !DILocation(line: 2673, column: 7, scope: !5364)
!5367 = !DILocation(line: 2675, column: 7, scope: !5364)
!5368 = !DILocation(line: 2677, column: 5, scope: !5360)
!5369 = !DILocation(line: 2679, column: 3, scope: !5360)
!5370 = !DILocation(line: 2682, column: 5, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5357, file: !2, line: 2681, column: 3)
!5372 = !DILocation(line: 2684, column: 1, scope: !5347)
!5373 = distinct !DISubprogram(name: "free_mem3Ddouble", scope: !2, file: !2, line: 2693, type: !5374, scopeLine: 2694, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5376)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{null, !546}
!5376 = !{!5377}
!5377 = !DILocalVariable(name: "array3D", arg: 1, scope: !5373, file: !2, line: 2693, type: !546)
!5378 = !DILocation(line: 0, scope: !5373)
!5379 = !DILocation(line: 2695, column: 7, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5373, file: !2, line: 2695, column: 7)
!5381 = !DILocation(line: 2695, column: 7, scope: !5373)
!5382 = !DILocation(line: 2697, column: 22, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5380, file: !2, line: 2696, column: 3)
!5384 = !DILocation(line: 0, scope: !5172, inlinedAt: !5385)
!5385 = distinct !DILocation(line: 2697, column: 5, scope: !5383)
!5386 = !DILocation(line: 2503, column: 7, scope: !5179, inlinedAt: !5385)
!5387 = !DILocation(line: 2503, column: 7, scope: !5172, inlinedAt: !5385)
!5388 = !DILocation(line: 2505, column: 9, scope: !5182, inlinedAt: !5385)
!5389 = !DILocation(line: 2505, column: 9, scope: !5183, inlinedAt: !5385)
!5390 = !DILocation(line: 2506, column: 7, scope: !5182, inlinedAt: !5385)
!5391 = !DILocation(line: 2508, column: 7, scope: !5182, inlinedAt: !5385)
!5392 = !DILocation(line: 2510, column: 5, scope: !5183, inlinedAt: !5385)
!5393 = !DILocation(line: 2512, column: 3, scope: !5183, inlinedAt: !5385)
!5394 = !DILocation(line: 2515, column: 5, scope: !5190, inlinedAt: !5385)
!5395 = !DILocation(line: 2698, column: 5, scope: !5383)
!5396 = !DILocation(line: 2699, column: 3, scope: !5383)
!5397 = !DILocation(line: 2702, column: 5, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5380, file: !2, line: 2701, column: 3)
!5399 = !DILocation(line: 2704, column: 1, scope: !5373)
!5400 = distinct !DISubprogram(name: "get_mem2Dolm", scope: !2, file: !2, line: 2717, type: !5401, scopeLine: 2718, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5403)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!327, !697, !327, !327, !327}
!5403 = !{!5404, !5405, !5406, !5407, !5408}
!5404 = !DILocalVariable(name: "array2D", arg: 1, scope: !5400, file: !2, line: 2717, type: !697)
!5405 = !DILocalVariable(name: "dim0", arg: 2, scope: !5400, file: !2, line: 2717, type: !327)
!5406 = !DILocalVariable(name: "dim1", arg: 3, scope: !5400, file: !2, line: 2717, type: !327)
!5407 = !DILocalVariable(name: "offset", arg: 4, scope: !5400, file: !2, line: 2717, type: !327)
!5408 = !DILocalVariable(name: "i", scope: !5400, file: !2, line: 2719, type: !327)
!5409 = !DILocation(line: 0, scope: !5400)
!5410 = !DILocation(line: 2721, column: 47, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5400, file: !2, line: 2721, column: 6)
!5412 = !DILocation(line: 2721, column: 52, scope: !5411)
!5413 = !DILocation(line: 2721, column: 40, scope: !5411)
!5414 = !DILocation(line: 2721, column: 21, scope: !5411)
!5415 = !DILocation(line: 2721, column: 78, scope: !5411)
!5416 = !DILocation(line: 2721, column: 6, scope: !5400)
!5417 = !DILocation(line: 0, scope: !575, inlinedAt: !5418)
!5418 = distinct !DILocation(line: 2722, column: 5, scope: !5411)
!5419 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5418)
!5420 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5418)
!5421 = !DILocation(line: 2723, column: 8, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5400, file: !2, line: 2723, column: 6)
!5423 = !DILocation(line: 2722, column: 5, scope: !5411)
!5424 = !DILocation(line: 2723, column: 52, scope: !5422)
!5425 = !DILocation(line: 2723, column: 47, scope: !5422)
!5426 = !DILocation(line: 2723, column: 40, scope: !5422)
!5427 = !DILocation(line: 2723, column: 21, scope: !5422)
!5428 = !DILocation(line: 2723, column: 83, scope: !5422)
!5429 = !DILocation(line: 2723, column: 6, scope: !5400)
!5430 = !DILocation(line: 0, scope: !575, inlinedAt: !5431)
!5431 = distinct !DILocation(line: 2724, column: 5, scope: !5422)
!5432 = !DILocation(line: 1833, column: 4, scope: !575, inlinedAt: !5431)
!5433 = !DILocation(line: 1834, column: 4, scope: !575, inlinedAt: !5431)
!5434 = !DILocation(line: 2724, column: 5, scope: !5422)
!5435 = !DILocation(line: 2726, column: 4, scope: !5400)
!5436 = !DILocation(line: 2726, column: 17, scope: !5400)
!5437 = !DILocation(line: 2728, column: 14, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !2, line: 2728, column: 3)
!5439 = distinct !DILexicalBlock(scope: !5400, file: !2, line: 2728, column: 3)
!5440 = !DILocation(line: 2728, column: 3, scope: !5439)
!5441 = !DILocation(line: 2729, column: 23, scope: !5438)
!5442 = !DILocation(line: 2729, column: 22, scope: !5438)
!5443 = !DILocation(line: 2729, column: 38, scope: !5438)
!5444 = !DILocation(line: 2729, column: 19, scope: !5438)
!5445 = !DILocation(line: 2728, column: 23, scope: !5438)
!5446 = distinct !{!5446, !5440, !5447}
!5447 = !DILocation(line: 2729, column: 40, scope: !5439)
!5448 = distinct !{!5448, !686}
!5449 = !DILocation(line: 2731, column: 47, scope: !5400)
!5450 = !DILocation(line: 2731, column: 40, scope: !5400)
!5451 = !DILocation(line: 2731, column: 15, scope: !5400)
!5452 = !DILocation(line: 2731, column: 3, scope: !5400)
!5453 = distinct !DISubprogram(name: "free_mem2Dolm", scope: !2, file: !2, line: 2742, type: !5454, scopeLine: 2743, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !302, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !350, !327}
!5456 = !{!5457, !5458}
!5457 = !DILocalVariable(name: "array2D", arg: 1, scope: !5453, file: !2, line: 2742, type: !350)
!5458 = !DILocalVariable(name: "offset", arg: 2, scope: !5453, file: !2, line: 2742, type: !327)
!5459 = !DILocation(line: 0, scope: !5453)
!5460 = !DILocation(line: 2744, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5453, file: !2, line: 2744, column: 7)
!5462 = !DILocation(line: 2744, column: 7, scope: !5453)
!5463 = !DILocation(line: 2746, column: 16, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !2, line: 2745, column: 3)
!5465 = !DILocation(line: 2747, column: 9, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5464, file: !2, line: 2747, column: 9)
!5467 = !DILocation(line: 2747, column: 9, scope: !5464)
!5468 = !DILocation(line: 2748, column: 7, scope: !5466)
!5469 = !DILocation(line: 2750, column: 7, scope: !5466)
!5470 = !DILocation(line: 2752, column: 5, scope: !5464)
!5471 = !DILocation(line: 2754, column: 3, scope: !5464)
!5472 = !DILocation(line: 2757, column: 5, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5461, file: !2, line: 2756, column: 3)
!5474 = !DILocation(line: 2759, column: 1, scope: !5453)
